[
  {
    "_id": "66200b8e44ee515ce6a4e216",
    "number": 3856,
    "body": "Bumps [gunicorn](https://github.com/benoitc/gunicorn) from 20.0.4 to 22.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/benoitc/gunicorn/releases\">gunicorn's releases</a>.</em></p>\n<blockquote>\n<h2>Gunicorn 22.0 has been released</h2>\n<p><strong>Gunicorn 22.0.0 has been released.</strong> This version fix the numerous security vulnerabilities. You're invited to upgrade asap your own installation.</p>\n<p>Changes:</p>\n<pre><code>22.0.0 - 2024-04-17\n===================\n<ul>\n<li>use <code>utime</code> to notify workers liveness</li>\n<li>migrate setup to pyproject.toml</li>\n<li>fix numerous security vulnerabilities in HTTP parser (closing some request smuggling vectors)</li>\n<li>parsing additional requests is no longer attempted past unsupported request framing</li>\n<li>on HTTP versions &lt; 1.1 support for chunked transfer is refused (only used in exploits)</li>\n<li>requests conflicting configured or passed SCRIPT_NAME now produce a verbose error</li>\n<li>Trailer fields are no longer inspected for headers indicating secure scheme</li>\n<li>support Python 3.12</li>\n</ul>\n<p>** Breaking changes **</p>\n<ul>\n<li>minimum version is Python 3.7</li>\n<li>the limitations on valid characters in the HTTP method have been bounded to Internet Standards</li>\n<li>requests specifying unsupported transfer coding (order) are refused by default (rare)</li>\n<li>HTTP methods are no longer casefolded by default (IANA method registry contains none affected)</li>\n<li>HTTP methods containing the number sign (#) are no longer accepted by default (rare)</li>\n<li>HTTP versions &lt; 1.0 or &gt;= 2.0 are no longer accepted by default (rare, only HTTP/1.1 is supported)</li>\n<li>HTTP versions consisting of multiple digits or containing a prefix/suffix are no longer accepted</li>\n<li>HTTP header field names Gunicorn cannot safely map to variables are silently dropped, as in other software</li>\n<li>HTTP headers with empty field name are refused by default (no legitimate use cases, used in exploits)</li>\n<li>requests with both Transfer-Encoding and Content-Length are refused by default (such a message might indicate an attempt to perform request smuggling)</li>\n<li>empty transfer codings are no longer permitted (reportedly seen with really old &amp; broken proxies)</li>\n</ul>\n<p>** SECURITY **</p>\n<ul>\n<li>fix CVE-2024-1135\n</code></pre></li>\n</ul>\n<ol>\n<li>Documentation is available there: <a href=\"https://docs.gunicorn.org/en/stable/news.html\">https://docs.gunicorn.org/en/stable/news.html</a></li>\n<li>Packages: <a href=\"https://pypi.org/project/gunicorn/\">https://pypi.org/project/gunicorn/</a></li>\n</ol>\n<h2>Gunicorn 21.2.0 has been released</h2>\n<p><strong>Gunicorn 21.2.0 has been released.</strong> This version fix the issue introduced in the threaded worker.</p>\n<p>Changes:</p>\n<pre><code>21.2.0 - 2023-07-19\n===================\nfix thread worker: revert change considering connection as idle .\n&lt;/tr&gt;&lt;/table&gt; \n</code></pre>\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/f63d59e4d73a8ee28748d2c700fb81c8780bc419\"><code>f63d59e</code></a> bump to 22.0</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/4ac81e0a1037ba5b570323be7430e09caa233e38\"><code>4ac81e0</code></a> Merge pull request <a href=\"https://redirect.github.com/benoitc/gunicorn/issues/3175\">#3175</a> from e-kwsm/typo</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/401cecfaed85d79236c7a9a1f7d8946b01c466fc\"><code>401cecf</code></a> Merge pull request <a href=\"https://redirect.github.com/benoitc/gunicorn/issues/3179\">#3179</a> from dhdaines/exclude-eventlet-0360</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/0243ec39ef4fc1b479ff4e1659e165f0b980b571\"><code>0243ec3</code></a> fix(deps): exclude eventlet 0.36.0</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/628a0bcb61ef3a211d67dfd68ad1ba161cccb3b8\"><code>628a0bc</code></a> chore: fix typos</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/88fc4a43152039c28096c8ba3eeadb3fbaa4aff9\"><code>88fc4a4</code></a> Merge pull request <a href=\"https://redirect.github.com/benoitc/gunicorn/issues/3131\">#3131</a> from pajod/patch-py12-rebased</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/deae2fc4c5f93bfce59be5363055d4cd4ab1b0b6\"><code>deae2fc</code></a> CI: back off the agressive timeout</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/f4703824c323fe6867dce0e2f11013b8de319353\"><code>f470382</code></a> docs: promise 3.12 compat</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/5e30bfa6b1a3e1f2bde7feb514d1734d28f39231\"><code>5e30bfa</code></a> add changelog to project.urls (updated for PEP621)</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/481c3f9522edc58806a3efc5b49be4f202cc7700\"><code>481c3f9</code></a> remove setup.cfg - overridden by pyproject.toml</li>\n<li>Additional commits viewable in <a href=\"https://github.com/benoitc/gunicorn/compare/20.0.4...22.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gunicorn&package-manager=pip&previous-version=20.0.4&new-version=22.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/gunicorn-22.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b8f44ee515ce6a4e217",
    "number": 3855,
    "body": "Bumps [gunicorn](https://github.com/benoitc/gunicorn) from 20.0.4 to 22.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/benoitc/gunicorn/releases\">gunicorn's releases</a>.</em></p>\n<blockquote>\n<h2>Gunicorn 22.0 has been released</h2>\n<p><strong>Gunicorn 22.0.0 has been released.</strong> This version fix the numerous security vulnerabilities. You're invited to upgrade asap your own installation.</p>\n<p>Changes:</p>\n<pre><code>22.0.0 - 2024-04-17\n===================\n<ul>\n<li>use <code>utime</code> to notify workers liveness</li>\n<li>migrate setup to pyproject.toml</li>\n<li>fix numerous security vulnerabilities in HTTP parser (closing some request smuggling vectors)</li>\n<li>parsing additional requests is no longer attempted past unsupported request framing</li>\n<li>on HTTP versions &lt; 1.1 support for chunked transfer is refused (only used in exploits)</li>\n<li>requests conflicting configured or passed SCRIPT_NAME now produce a verbose error</li>\n<li>Trailer fields are no longer inspected for headers indicating secure scheme</li>\n<li>support Python 3.12</li>\n</ul>\n<p>** Breaking changes **</p>\n<ul>\n<li>minimum version is Python 3.7</li>\n<li>the limitations on valid characters in the HTTP method have been bounded to Internet Standards</li>\n<li>requests specifying unsupported transfer coding (order) are refused by default (rare)</li>\n<li>HTTP methods are no longer casefolded by default (IANA method registry contains none affected)</li>\n<li>HTTP methods containing the number sign (#) are no longer accepted by default (rare)</li>\n<li>HTTP versions &lt; 1.0 or &gt;= 2.0 are no longer accepted by default (rare, only HTTP/1.1 is supported)</li>\n<li>HTTP versions consisting of multiple digits or containing a prefix/suffix are no longer accepted</li>\n<li>HTTP header field names Gunicorn cannot safely map to variables are silently dropped, as in other software</li>\n<li>HTTP headers with empty field name are refused by default (no legitimate use cases, used in exploits)</li>\n<li>requests with both Transfer-Encoding and Content-Length are refused by default (such a message might indicate an attempt to perform request smuggling)</li>\n<li>empty transfer codings are no longer permitted (reportedly seen with really old &amp; broken proxies)</li>\n</ul>\n<p>** SECURITY **</p>\n<ul>\n<li>fix CVE-2024-1135\n</code></pre></li>\n</ul>\n<ol>\n<li>Documentation is available there: <a href=\"https://docs.gunicorn.org/en/stable/news.html\">https://docs.gunicorn.org/en/stable/news.html</a></li>\n<li>Packages: <a href=\"https://pypi.org/project/gunicorn/\">https://pypi.org/project/gunicorn/</a></li>\n</ol>\n<h2>Gunicorn 21.2.0 has been released</h2>\n<p><strong>Gunicorn 21.2.0 has been released.</strong> This version fix the issue introduced in the threaded worker.</p>\n<p>Changes:</p>\n<pre><code>21.2.0 - 2023-07-19\n===================\nfix thread worker: revert change considering connection as idle .\n&lt;/tr&gt;&lt;/table&gt; \n</code></pre>\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/f63d59e4d73a8ee28748d2c700fb81c8780bc419\"><code>f63d59e</code></a> bump to 22.0</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/4ac81e0a1037ba5b570323be7430e09caa233e38\"><code>4ac81e0</code></a> Merge pull request <a href=\"https://redirect.github.com/benoitc/gunicorn/issues/3175\">#3175</a> from e-kwsm/typo</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/401cecfaed85d79236c7a9a1f7d8946b01c466fc\"><code>401cecf</code></a> Merge pull request <a href=\"https://redirect.github.com/benoitc/gunicorn/issues/3179\">#3179</a> from dhdaines/exclude-eventlet-0360</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/0243ec39ef4fc1b479ff4e1659e165f0b980b571\"><code>0243ec3</code></a> fix(deps): exclude eventlet 0.36.0</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/628a0bcb61ef3a211d67dfd68ad1ba161cccb3b8\"><code>628a0bc</code></a> chore: fix typos</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/88fc4a43152039c28096c8ba3eeadb3fbaa4aff9\"><code>88fc4a4</code></a> Merge pull request <a href=\"https://redirect.github.com/benoitc/gunicorn/issues/3131\">#3131</a> from pajod/patch-py12-rebased</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/deae2fc4c5f93bfce59be5363055d4cd4ab1b0b6\"><code>deae2fc</code></a> CI: back off the agressive timeout</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/f4703824c323fe6867dce0e2f11013b8de319353\"><code>f470382</code></a> docs: promise 3.12 compat</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/5e30bfa6b1a3e1f2bde7feb514d1734d28f39231\"><code>5e30bfa</code></a> add changelog to project.urls (updated for PEP621)</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/481c3f9522edc58806a3efc5b49be4f202cc7700\"><code>481c3f9</code></a> remove setup.cfg - overridden by pyproject.toml</li>\n<li>Additional commits viewable in <a href=\"https://github.com/benoitc/gunicorn/compare/20.0.4...22.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gunicorn&package-manager=pip&previous-version=20.0.4&new-version=22.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/gunicorn-22.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9044ee515ce6a4e218",
    "number": 3854,
    "body": "# Description\r\n\r\nSee open-telemetry/community#2056 for background\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nNo test needed\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [N/A] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated -- please let me know if this is necessary\r\n- [N/A] Unit tests have been added\r\n- [N/A] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "revert modifications to Apache license (#3854)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9144ee515ce6a4e219",
    "number": 3853,
    "body": "# Description\r\n\r\nFixes #3842\r\nFixes #3843\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "bump-jinja",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: bump jinja2 to latest in requirements (#3853)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9244ee515ce6a4e21a",
    "number": 3852,
    "body": "# Description\r\n\r\nI'm attempting to port the jaeger remote sampling support from the jaeger-client-python project. \r\n\r\nPer @srikanthccv 's feedback [here](https://github.com/open-telemetry/opentelemetry-python/pull/3827#issuecomment-2031971650), it really makes more sense for the bulk of the port to go into the contrib repo. However there are elements of the core sampler code that need to change to accommodate these contrib samplers.\r\n\r\nI'm opening this in draft mode to seek initial feedback+guidance. There's a series of TODO's that raise questions about approach.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests, in test_sampling.py\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nIt doesn't require one, but there will be a companion PR that depends on this change.\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sconover/support-for-jaeger-remote-sampling-contrib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9244ee515ce6a4e21b",
    "number": 3850,
    "body": "# Description\r\n\r\nAt present, the documentation suggests that HTTP Headers are the only appropriate carrier, when any object is fine including a standard dict.\r\n\r\nThis PR updates the wording to make clear it is more generic.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nN/A - Documentation change\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: lzchen / name: Leighton Chen  (9f50cedd3aca53e2a8fe6d6acd6480b219c217ab)</li><li>:white_check_mark: login: proffalken / name: Matthew Macdonald-Wallace  (da2a57df5cabb5cda837805a917a20393eb74908, 00e8230778c4845fd7fa0e504b48f17673a08eb8)</li></ul>"
    ],
    "commit_messages": [
      "Improve documentation for trace.propagator.inject() (#3850)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9344ee515ce6a4e21c",
    "number": 3848,
    "body": "Fixes #3847",
    "head_branch": "issue_3847",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use a single install command for lint (#3848)\n\nFixes #3847"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9444ee515ce6a4e21d",
    "number": 3846,
    "body": "Bumps [idna](https://github.com/kjd/idna) from 3.4 to 3.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/releases\">idna's releases</a>.</em></p>\n<blockquote>\n<h2>v3.7</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/kjd/idna/compare/v3.6...v3.7\">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/blob/master/HISTORY.rst\">idna's changelog</a>.</em></p>\n<blockquote>\n<p>3.7 (2024-04-11)\n++++++++++++++++</p>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could\ntake exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p>3.6 (2023-11-25)\n++++++++++++++++</p>\n<ul>\n<li>Fix regression to include tests in source distribution.</li>\n</ul>\n<p>3.5 (2023-11-24)\n++++++++++++++++</p>\n<ul>\n<li>Update to Unicode 15.1.0</li>\n<li>String codec name is now &quot;idna2008&quot; as overriding the system codec\n&quot;idna&quot; was not working.</li>\n<li>Fix typing error for codec encoding</li>\n<li>&quot;setup.cfg&quot; has been added for this release due to some downstream\nlack of adherence to PEP 517. Should be removed in a future release\nso please prepare accordingly.</li>\n<li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport\nwith PEP 517 and the Python Packaging User Guide for sdist archives.</li>\n<li>Added security reporting protocol for project</li>\n</ul>\n<p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions\nto this release.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d\"><code>1d365e1</code></a> Release v3.7</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6\"><code>c1b3154</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/172\">#172</a> from kjd/optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623\"><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966\"><code>cd58a23</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/152\">#152</a> from elliotwutingfeng/dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7\"><code>5beb28b</code></a> More efficient resolution of joiner contexts</li>\n<li><a href=\"https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b\"><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>\n<li><a href=\"https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067\"><code>d516b87</code></a> Update Github actions/checkout to v4</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7\"><code>c095c75</code></a> Merge branch 'master' into dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98\"><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201\"><code>5918a0e</code></a> Merge branch 'master' into dev</li>\n<li>Additional commits viewable in <a href=\"https://github.com/kjd/idna/compare/v3.4...v3.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/getting_started/tests/idna-3.7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump idna from 3.4 to 3.7 in /docs/getting_started/tests (#3846)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9544ee515ce6a4e21e",
    "number": 3844,
    "body": "# Description\r\n\r\nThis change bumps the proto version to latest release v1.2.0",
    "head_branch": "update-proto",
    "is_a_fork": true,
    "comments": [
      " There have been a few additions since 0.20.0 (release candidate for 1.0.0) but no breaking changes."
    ],
    "commit_messages": [
      "Update proto version to v1.2.0 (#3844)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9644ee515ce6a4e21f",
    "number": 3840,
    "body": null,
    "head_branch": "fix_exponential_histogram",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9744ee515ce6a4e220",
    "number": 3839,
    "body": null,
    "head_branch": "lzchen-patch-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update core repo approvers list (#3839)\n\n* Update core repo approvers list\r\n\r\n* Create test.py\r\n\r\n* read\r\n\r\n* Update README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9744ee515ce6a4e221",
    "number": 3838,
    "body": "# Description\r\n\r\nInclude the attribute key that failed to encode. Very hard to track down otherwise.\r\n\r\n**Before**\r\n```python\r\nInvalid type <class 'NoneType'> of value None\r\n```\r\n\r\n**After**\r\n```python\r\nFailed to encode key namespace: Invalid type <class 'NoneType'> of value None\r\n```\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "log-unencodeable-key",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: lzchen / name: Leighton Chen  (18280930e12a62c586c8fedad09760ccaf3dbe1c, b3f37b39c4781946f64f2a61efbb6c1c9eba6220)</li><li>:white_check_mark: login: danielhochman / name: Daniel Hochman  (8378caff637c03bcd1c2d2978b586428a2c2ad55, 3a9d2c1df24ce7fe038a2f9e4183877505255e46, de1c4edff4c0feb57799a503d0cf7f9192a90191, 1667b0aac092d7c5ac416c91f7be3655577d931b, 8ed207c816fffca7d46a03ffa365a561cd0c63a5)</li><li>:white_check_mark: login: xrmx / name: Riccardo Magliocchetti  (b6f6b484d72ccad18b2480f73da34b97ec799cae)</li></ul><!-- Date Modified: 2024-06-25 16:54:15.821907 -->",
      "@danielhochman you have to sign the CLA for contributing to OpenTelemetry",
      "@danielhochman \r\n\r\nPlease fix the build and add a CHANGELOG entry"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9844ee515ce6a4e222",
    "number": 3837,
    "body": "Fixes #3824 \r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e py39-opentelemetry-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_3824",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: emdneto / name: Emídio Neto  (a06a30cdad055a9338fcab94f0d96565c7d28b0a, 5bfc127d262fe85c3361311a422d9614f3552dd4, 859e0bb5d48c9c15850e0ab6f488ec5fb057ae19, 3f975e2f4e7fc563a18426a8582f110c3acded3d, 18b28eacea156bd2c39197e3d3a9004dee27d86e, 96941a7a4b63c495e1a0bf9c7c4ef25f9c706059, 884d8babbac2fe53c336834b30cf4f306e719b7a, 5f14c23661ec27c87ab5a74e64af5d89047964fb, 9976fc0c97825ca592e3f40bfe3097ab2da0e83a)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (cc4f6516a0c141a6899815ff149aaf07a6667326)</li><li>:white_check_mark: login: tammy-baylis-swi / name: Tammy Baylis  (44be8a450e193fe97f383c179d9bac09ec276c0e)</li><li>:white_check_mark: login: xrmx / name: Riccardo Magliocchetti  (4fae86050acbfbe1bdd5b4e655eced7c40fbd3fd, 755ac7cd8d3b9f30c2208c41c4bf9a2da94b0a81)</li></ul>",
      "> Would be nice to add tests to check that it is working fine\r\n\r\n@xrmx Thank you for your valuable review. I added a test and fixed the items you mentioned",
      "Please could you also add a changelog line linking this PR.",
      "@lzchen any idea why auto-merge failed?"
    ],
    "commit_messages": [
      "Add capture the fully qualified type name for raised exceptions in spans (#3837)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9944ee515ce6a4e223",
    "number": 3835,
    "body": "Subject says it all.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update importlib-metadata to 7.1 (#3835)\n\nCo-authored-by: Tammy Baylis <96076570+tammy-baylis-swi@users.noreply.github.com>\r\nCo-authored-by: Riccardo Magliocchetti <riccardo.magliocchetti@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9a44ee515ce6a4e224",
    "number": 3831,
    "body": "Fixes software supply chain safety warnings like the ___454 warnings___ at the bottom right of\r\nhttps://github.com/open-telemetry/opentelemetry-python/actions/runs/8539087191\r\n\r\n[Keeping your actions up to date with Dependabot](https://docs.github.com/en/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot)\r\n\r\n[Configuration options for the dependabot.yml file - package-ecosystem](https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#package-ecosystem)\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\n@lzchen, @xrmx, @aabmass",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9b44ee515ce6a4e225",
    "number": 3830,
    "body": "# Description\r\n\r\nMove a couple of items that has been released yet to unreleased section\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CHANGELOG: move unrelased changes to unreleased section (#3830)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9c44ee515ce6a4e226",
    "number": 3829,
    "body": "# Description\r\n\r\nIt looks like the rtd build is broken https://readthedocs.org/projects/opentelemetry-python/builds/23237597/\r\nSee\r\nhttps://blog.readthedocs.com/use-build-os-config/\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-readthedocs-yml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "readthedocs: update build config (#3829)\n\nSee\r\nhttps://blog.readthedocs.com/use-build-os-config/\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9c44ee515ce6a4e227",
    "number": 3827,
    "body": "- Introduce a dependency on tornado, in order to use IOLoop in RemoteControlledSampler\r\n- Introduce a variety of new samplers, which support the jaeger remote sampling protocol\r\n\r\nDRAFT - DO NOT MERGE\r\n\r\nThere are a variety of challenging TODO's (marked `TODO(sconover)`) and, no doubt, changes to be made based on feedback from project maintainers.\r\n\r\nThe goal of this initial set of changes is to conduct a pretty \"straight\" port of the corresponding code in jaeger-client-python, to get discussion going on how opentelemetry-python support for jaeger remote sampling should ultimately work.\r\n\r\nPlease see [the jaeger-client-python project](https://github.com/jaegertracing/jaeger-client-python/tree/master) and especially [sampler.py](https://github.com/jaegertracing/jaeger-client-python/blob/master/jaeger_client/sampler.py) and [test_sampler.py](https://github.com/jaegertracing/jaeger-client-python/blob/master/tests/test_sampler.py) for the source of much of this port.\r\n\r\nNew dependencies:\r\n  - threadloop>=1.0.2\r\n  - tornado>=6.4\r\n\r\nI expect there's a very good chance that [opentelemetry python docs](https://opentelemetry.io/docs/languages/python) will need to be updated in advance of an ultimate merge, and would appreciate advice on what those areas might be.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ported unit tests from `jaeger-client-python`\r\n- [x] For lack of end-to-end tests, I put together a sample flask app and, running alongside a jaeger agent, manually verified that remote configuration changes indeed sync over to the client and change the client's sampling decision behavior.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\nI'm leaving all of the above \"unchecked\". I've made some style changes in the direction of this project and python 3, however I'm hesitant to \"compromise\" the relatively straight port at this point, to make comparison/contrasting easier for initial reviewers. \r\n\r\nRegarding (even) unit tests: while this code is unit tested, the tests are ported, and stylistically are quite different from tests in this project - for example they make extensive use of mocks, among other differences.\r\n\r\nSample flask server and explanation:\r\n\r\n```\r\n# A jaeger agent may be started using a command like:\r\n#\r\n# docker run \\\r\n# -v /dev/scratch/config:/config \\\r\n# -e SAMPLING_CONFIG_TYPE=file \\\r\n# -e COLLECTOR_ZIPKIN_HOST_PORT=:9411 \\\r\n# -p 5775:5775/udp \\\r\n# -p 6831:6831/udp \\ \r\n# -p 6832:6832/udp \\ \r\n# -p 5778:5778 \\\r\n# -p 16686:16686 \\   \r\n# -p 14268:14268 \\ \r\n# -p 14250:14250 \\ \r\n# -p 9411:9411 \\\r\n# jaegertracing/all-in-one:1.22 \\\r\n# --sampling.strategies-file=/config/strategies.json \\\r\n# --sampling.strategies-reload-interval=5s\r\n#\r\n# Where the sampling strategies config file is available locally at\r\n# \r\n# /dev/scratch/config/strategies.json \r\n#\r\n#\r\n# Run this python script and make a request using:\r\n#   curl localhost:5000/\r\n# If the sampling decision is 'sample' then the ConsoleSpanExporter\r\n# will print the emitted span to the console.\r\n#\r\n# If the agent's strategies.json files is changed to something like\r\n#\r\n# \r\n# {\r\n#   \"service_strategies\": [\r\n#     {\r\n#       \"service\": \"foo\",\r\n#       \"type\": \"probabilistic\",\r\n#       \"param\": 0.333\r\n#     }\r\n#   ],\r\n#   \"default_strategy\": {\r\n#     \"type\": \"probabilistic\",\r\n#     \"param\": 1\r\n#   }\r\n# }\r\n#\r\n# ...once these settings sync over via RemoteControlledSampler,\r\n# it will take several curl invocations to see an emitted span,\r\n# reflecting the 1-in-3 chance that a trace is created.\r\n\r\nfrom opentelemetry.sdk.resources import SERVICE_NAME, Resource\r\n\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.sdk.trace.export import ConsoleSpanExporter\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\nfrom opentelemetry.sdk.trace.export import SimpleSpanProcessor\r\n\r\nfrom opentelemetry.sdk.trace.sampling import RemoteControlledSampler\r\nfrom opentelemetry.sdk.trace.local_agent_net import LocalAgentSender\r\n\r\nimport threading\r\nimport tornado\r\n\r\nmain_loop = tornado.ioloop.IOLoop().current()\r\n\r\nsampler = RemoteControlledSampler(\r\n    channel=LocalAgentSender('localhost', 5778, 5778, io_loop=main_loop),\r\n    service_name='foo',\r\n    sampling_refresh_interval = 5,\r\n)\r\n\r\nresource = Resource(attributes={\r\n    SERVICE_NAME: \"foo\"\r\n})\r\ntraceProvider = TracerProvider(resource=resource, sampler=sampler)\r\ntraceProvider.add_span_processor(SimpleSpanProcessor(ConsoleSpanExporter(\"foo\")))\r\ntrace.set_tracer_provider(traceProvider)\r\n\r\nfrom flask import (\r\n    Flask, \r\n    jsonify\r\n)\r\n\r\ntracer = trace.get_tracer(\"foo\")\r\n\r\ndef create_app():\r\n    app = Flask(__name__)\r\n\r\n    @app.route('/')\r\n    def hello_world(): \r\n        with tracer.start_as_current_span(\"foo\") as span:\r\n                span.set_attribute(\"hello.value\", \"world\")\r\n                return jsonify({\r\n                    \"status\": \"success\",\r\n                    \"message\": \"Hello World!\"\r\n                })\r\n     \r\n    return app\r\n\r\napp = create_app()\r\n\r\nif __name__ == '__main__':\r\n    threading.Thread(target=lambda: app.run(debug=True, use_reloader=False)).start()\r\n    main_loop.start()\r\n```",
    "head_branch": "steve/jaeger-remote-sampler",
    "is_a_fork": true,
    "comments": [
      "FYI, contrib is the appropriate place for components like this https://github.com/open-telemetry/opentelemetry-python-contrib. It can't be merged into SDK.",
      "@srikanthccv Thanks for the initial feedback, and I completely agree that it seems a little strange/wrong that this isn't in contrib. However there are a couple of key places where, given the way the code is structured, the code at present, unless I'm missing something, technically must be in here. I will cite the areas I see as issues, and I'd appreciate guidance on what to do about them. I'd be happy to put together a minimal PR to this repo to \"prep\" the lib for accommodation of the larger portion (all the jaeger remote sampling impl) which I'd put in the contrib repo.",
      "Closing in favor of splitting this into [this core PR](https://github.com/open-telemetry/opentelemetry-python/pull/3852) and [this contrib PR](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2434) per @srikanthccv 's advice"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9d44ee515ce6a4e228",
    "number": 3826,
    "body": "# Description\r\n\r\nSmall refactor of `OTLPSpanExporter` that splits serialization of spans and their export into separate functions. \r\n\r\nThere is no functional change to the SpanExporter. I'm submitting this PR because it would make the `export` method of a subprocess-spawning OTLPExporter that I'm working on slightly less duplicative. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\nThis is a refactor that doesn't add or remove any functionality. \r\n\r\n# How Has This Been Tested?\r\n\r\nVerified in production instance that OTLPSpanExporter continues to work as expected. Ran test suite. \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: kchoudhu / name: Kamil Choudhury  (d9984e39501231c98e2860f266793d99b637e228, 323446e9b9acc2eec8ddc2415f46ef537ab8829c, 75a0203654a08c236d6786d843057edf502fefd0)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (513a2ceab7754c380fca6c32ea591f600fb390a6)</li></ul>",
      "@kchoudhu what are you going to reuse / replace?",
      "> @kchoudhu what are you going to reuse / replace?\r\n\r\nHi: I'm writing a span processor that isolates the send of the spans in a child subprocess, but the serialization happens in the parent process. Roughly speaking the new export logic currently looks something like this: \r\n\r\n```\r\ndef export(self, spans) -> SpanExportResult:\r\n        \"\"\"\r\n        We are overriding the base OTLPSpanExporter in such a way\r\n        that bifurcates the serialization of the data from its\r\n        transmission to the OTEL collector.\r\n        \"\"\"\r\n\r\n        # After the call to Shutdown subsequent calls to Export are\r\n        # not allowed and should return a Failure result.\r\n        if self._shutdown:\r\n            return SpanExportResult.FAILURE\r\n\r\n        if self.export_to_sidecar is True:\r\n            # Open a socket and serialize the data into bytes\r\n            client = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\r\n            try:\r\n                client.connect(self.socket)\r\n            except FileNotFoundError:\r\n                print(f\"client: sleeping 2 seconds until telemetry exporter available\")\r\n                time.sleep(2)\r\n\r\n            # Serialize and send spans\r\n            serialized_data = encode_spans(spans).SerializeToString()\r\n\r\n            header = struct.pack(\"!Q\", len(serialized_data))\r\n            message = header + serialized_data\r\n            client.sendall(message)\r\n\r\n            # Close the connection\r\n            client.close()\r\n\r\n            # If we've made it so far, great!\r\n            return SpanExportResult.SUCCESS\r\n        else:\r\n            # We are in a subprocess, and the spans are already serialized\r\n            for delay in _create_exp_backoff_generator(\r\n                max_value=self._MAX_RETRY_TIMEOUT\r\n            ):\r\n\r\n                if delay == self._MAX_RETRY_TIMEOUT:\r\n                    return SpanExportResult.FAILURE\r\n\r\n                resp = self._export(serialized_data)\r\n                # pylint: disable=no-else-return\r\n                if resp.status_code in (200, 202):\r\n                    return SpanExportResult.SUCCESS\r\n                elif self._retryable(resp):\r\n                    continue\r\n                else:\r\n                    return SpanExportResult.FAILURE\r\n\r\n            return super().export(spans)\r\n```\r\n\r\nWith this tiny refactor, this is reduced to:             \r\n\r\n```    \r\ndef export(self, spans) -> SpanExportResult:\r\n        \"\"\"\r\n        We are overriding the base OTLPSpanExporter in such a way\r\n        that bifurcates the serialization of the data from its\r\n        transmission to the OTEL collector.\r\n        \"\"\"\r\n\r\n        # After the call to Shutdown subsequent calls to Export are\r\n        # not allowed and should return a Failure result.\r\n        if self._shutdown:\r\n            return SpanExportResult.FAILURE\r\n\r\n        if self.export_to_sidecar is True:\r\n            # Open a socket and serialize the data into bytes\r\n            client = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\r\n            try:\r\n                client.connect(self.socket)\r\n            except FileNotFoundError:\r\n                print(f\"client: sleeping 2 seconds until telemetry exporter available\")\r\n                time.sleep(2)\r\n\r\n            # Serialize and send spans\r\n            serialized_data = self._serialize_spans(spans)\r\n\r\n            header = struct.pack(\"!Q\", len(serialized_data))\r\n            message = header + serialized_data\r\n            client.sendall(message)\r\n\r\n            # Close the connection\r\n            client.close()\r\n\r\n            # If we've made it so far, great!\r\n            return SpanExportResult.SUCCESS\r\n        else:\r\n\r\n            return self._export_serialized_spans(serialized_data)\r\n```\r\n\r\nAll of this is wildly rough right now, but if there is interest I am happy to contribute the subprocess-based sidecar exporter back to the commons. ",
      "We don't provide any backwards compatibility guarantees for the internal methods. I hope you are aware of that.",
      "Yes, of course. ",
      "We have a contrib repo where components that are contributed by the community live https://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/exporter. The original contributor of the component will remain the main person to maintain it. You can perhaps open an issue there with more detail and see how it goes.",
      "Thanks -- I'll go ahead and load test the current implementation for a bit in production before starting a conversation over there. "
    ],
    "commit_messages": [
      "Split serialization and export of spans into separate functions for http trace exporter (#3826)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9e44ee515ce6a4e229",
    "number": 3825,
    "body": "If a PR has only symbols that were removed then re-added (e.g. moving to a different part of the same file), the checker complains with an empty message. This fixes the script to not fail in that case.\r\n\r\nTested on https://github.com/open-telemetry/opentelemetry-python/pull/3822",
    "head_branch": "public-sym-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix public symbol checker flaky case (#3825)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200b9f44ee515ce6a4e22a",
    "number": 3823,
    "body": "This PR removes unneccesary warnings\r\n\r\nFixes: #3779\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "warn",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: geetikabatra / name: Geetika Batra  (246dc55083169b212d7587ac3387ab2c5a941dcc)</li></ul>",
      "I did sign the CLA, the check still fails, don't know why.\r\n",
      "Commits authored by you are not associated with the email. Can you make sure you set the git config email details and open a separate PR?",
      "@srikanthccv Will create a new PR, @xrmx Any other name that you would like to suggest?",
      ">  @xrmx Any other name that you would like to suggest?\r\n\r\nOther tests use the Dummy prefix",
      "@geetikabatra Hey, sorted out the CLA?",
      "Hey, gimme a couple of days. I am a new mother, so not able to be consistent. Would soon wind this up.",
      "Nice fix! :sunglasses: ",
      "CLA  is fixed now. @srikanthccv and @xrmx."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba044ee515ce6a4e22b",
    "number": 3822,
    "body": "# Description\r\n\r\nPart 1/2 for https://github.com/open-telemetry/opentelemetry-python/issues/3260\r\n\r\nThis only migrates the auto formatting capabilities. Linting will be in a separate PR which could use more scrutiny. Most of these changes look formatting changes and small things. See https://docs.astral.sh/ruff/formatter/black/ for known differences.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Chore\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A this only reformats the code\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. - Link to PR: I will send a PR after discussions are done :)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "ruff-fmt",
    "is_a_fork": true,
    "comments": [
      "BTW do you see what's wrong with the Public API check?",
      "> BTW do you see what's wrong with the Public API check?\r\n\r\nI think it's just flaking, the output doesn't have any results even though its failing",
      "Actually @xrmx this PR fixes the check https://github.com/open-telemetry/opentelemetry-python/pull/3825",
      "> > BTW do you see what's wrong with the Public API check?\r\n> \r\n> I think it's just flaking, the output doesn't have any results even though its failing\r\n\r\nI think at least something like this is required:\r\n\r\n```\r\ndiff --git a/scripts/public_symbols_checker.py b/scripts/public_symbols_checker.py\r\nindex 05b7ad4a..b9802267 100644\r\n--- a/scripts/public_symbols_checker.py\r\n+++ b/scripts/public_symbols_checker.py\r\n@@ -124,10 +124,12 @@ def remove_common_symbols():\r\n \r\n \r\n if added_symbols or removed_symbols:\r\n-\r\n     # If a symbol is added and removed in the same commit, we consider it\r\n     # as not added or removed.\r\n     remove_common_symbols()\r\n+\r\n+# re-evaluate symbols after remove_common_symbols side-effects\r\n+if added_symbols or removed_symbols:\r\n     print(\"The code in this branch adds the following public symbols:\")\r\n     print()\r\n     for file_path_, symbols_ in added_symbols.items():\r\n```\r\n\r\nUPDATE: ah seen your PR :)",
      "BTW changelog would be nice to have the ruff commit handy",
      "> BTW changelog would be nice to have the ruff commit handy\r\n\r\nI didn't add an entry initially because I don't think it's applicable to the changelog audience (consumers of the library). Happy to add if you think otherwise",
      "> > BTW changelog would be nice to have the ruff commit handy\r\n> \r\n> I didn't add an entry initially because I don't think it's applicable to the changelog audience (consumers of the library). Happy to add if you think otherwise\r\n\r\nIt would be handy for people poking with the code :)",
      "Adding \"do not merge label\" until we decide for sure on Ruff replacing flake8 and pylint as well.",
      "> Adding \"do not merge label\" until we decide for sure on Ruff replacing flake8 and pylint as well.\r\n\r\nMarking as draft to prevent accidental merging.",
      "Once the conflict has been resolved this should be ready to land right?",
      "Closing it out as #4223 actually went through"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba144ee515ce6a4e22c",
    "number": 3821,
    "body": "Copy log updates from `release/v1.24.x-0.45bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.24.x-0.45bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Copy change log updates from release/v1.24.x-0.45bx (#3821)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba144ee515ce6a4e22d",
    "number": 3819,
    "body": "Prepare release 1.24.0/0.45b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.24.0-0.45b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.24.x-0.45bx] Prepare release 1.24.0/0.45b0 (#3819)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba244ee515ce6a4e22e",
    "number": 3818,
    "body": "Update version to `1.25.0.dev/0.46b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.25.0.dev-0.46b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.25.0.dev/0.46b0.dev (#3818)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba344ee515ce6a4e22f",
    "number": 3817,
    "body": "# Description\r\n\r\nFixes #3710 \r\n",
    "head_branch": "issue-3710",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make `create_gauge` non-abstract method (#3817)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba444ee515ce6a4e230",
    "number": 3816,
    "body": "# Description\r\n\r\nMigrates pylint, flake8, black, and isort to [ruff](https://docs.astral.sh/ruff/formatter/). Ruff is very fast and has complete feature parity with all of the above except some pylint features. Ruff does not use the python environment at all, so it no longer requires any deps to be installed in the virtualenv.\r\n\r\nDropping pylint is definitely worth discusing, because we don't run mypy on all of our sources. [See here for a list of tradeoffs and recommendations](https://docs.astral.sh/ruff/faq/#how-does-ruffs-linter-compare-to-pylint). I think this is a decent trade off given how clunky, difficult to use (e.g. #3814), and slow pylint is. We should try to enable mypy on the rest of our sources imo.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3260 and numerous complaints about the painfully slow lint/formatting process\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "ruff",
    "is_a_fork": true,
    "comments": [
      "> I was going to do it after bumping black but thanks for beating me to it :)\r\n\r\nSorry didn't realize you were working on it! I can give you permission to push to the PR if you'd like to collaborate here\r\n\r\nFyi I should probably split this into two PRs (or at least commits) for easier reviewing:\r\n  1. replace black and isort\r\n  2. replace linters and swap any `pylint-disable` with ruff `noqa` comments\r\n\r\nI think the second will be more useful to actually scrutinize for missing coverage",
      "> > I was going to do it after bumping black but thanks for beating me to it :)\r\n> \r\n> Sorry didn't realize you were working on it! I can give you permission to push to the PR if you'd like to collaborate here\r\n\r\nDon't worry, it was just a plan :)\r\n\r\n> Fyi I should probably split this into two PRs (or at least commits) for easier reviewing:\r\n> \r\n>     1. replace black and isort\r\n> \r\n>     2. replace linters and swap any `pylint-disable` with ruff `noqa` comments\r\n> \r\n> \r\n> I think the second will be more useful to actually scrutinize for missing coverage\r\n\r\nSeparate commits for formatting and linting will be appreciated, thanks!",
      "Closing in favor of two PRs. First one here https://github.com/open-telemetry/opentelemetry-python/pull/3822"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba544ee515ce6a4e231",
    "number": 3813,
    "body": "This is a proposal for a test runner, the details of which are in the [README](https://github.com/open-telemetry/opentelemetry-python/blob/fa26867d9f5d94f1c63b660826feeea66a7178ce/tests/oteltest/README.md), but basically, you say `oteltest my_dir` and it runs a black box test for each script in the directory. You define the dependencies, the environment variables, and the primary executable part of the script, and `oteltest` will set up the environment, run it, and \"send\" the received telemetry back to the script. At that point, you can perform assertions, effectively making it an end to end test, or you can do something else like present the received telemetry as a visualization.\r\n\r\nI'm making this a draft PR for now to get feedback about this, as a proposal, and not about the code or implementation yet. Would like to let folks have a chance to comment, ask questions, etc. Happy to open an issue or start a discussion as well.\r\n\r\nThis was demoed in last week's SIG, but here's what running it looks like:\r\n\r\n![oteltest](https://github.com/open-telemetry/opentelemetry-python/assets/141681/6862b418-b59f-4af3-a348-8ff5b4777d1e)\r\n",
    "head_branch": "oteltest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba644ee515ce6a4e232",
    "number": 3812,
    "body": "# Description\r\n\r\nThe change is pretty self explanatory. API test shouldn't generally depend on the SDK and it was completely unnecessary here.\r\n\r\nThe `Logger.emit()` function shouldn't actually return anything, based on the ABC\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/29c293fbb120ff8b760519a25e0530b5ab05af83/opentelemetry-api/src/opentelemetry/_logs/_internal/__init__.py#L100-L102\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Chore (test fix)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated the test and it passes\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "logsapi-fix-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove logs API proxy test's dependency on SDK (#3812)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba644ee515ce6a4e233",
    "number": 3811,
    "body": "# Description\r\n\r\nPer https://github.com/open-telemetry/opentelemetry-python/pull/3789, add a CI step to run `shellcheck --severity=warning` on all `.sh` files, similar to https://github.com/open-telemetry/opentelemetry-lambda/pull/396.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.  But I'm happy to provide the same/similar PR for the Contrib repo as well.\r\n\r\n",
    "head_branch": "shellcheck_ci_step",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add shellcheck CI step (#3811)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba744ee515ce6a4e234",
    "number": 3810,
    "body": "# Description\r\n\r\nFixes issue #2485 Record logger name as the instrumentation scope name\r\n\r\nApproach: Cache one Logger object per Python logger name in LoggingHandler. The `@lru_cache` annotation on `get_logger` requires Python 3.2 or later.\r\n\r\nThe Open Telemetry Spec specifies that the Logger Name SHOULD be recorded as the Instrumentation Scope name. Reference: https://github.com/open-telemetry/opentelemetry-specification/pull/2359\r\n\r\nThis has already been implemented in Open Telemetry Java, but not in Open Telemetry Python.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI've modified many of the tests in test_export.py to include an assert that tests that the logger name and instrumentation scope name are the same.\r\n\r\nWill be happy to modify others to do the same validation.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nNo, this brings Open Telemetry Python in line with the existing Open Telemetry spec.\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-issue-2485-instrumentation-scope-name",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: lzchen / name: Leighton Chen  (34b9f1b0d1de97630e76b6d4890ca8bd9d69145b)</li><li>:white_check_mark: login: tm0nk / name: Tom Monk  (133bc7c90a37fe7c364b8713910681a4218d6e22, 0576859ca300790542bad350fd1315c6b700d0c9)</li></ul>",
      "Overall LGTM, Please address the failed checks.",
      "Thanks @srikanthccv I've addressed the failed lint check. I'm working on the missing CLA authorization. I'm contributing as a Snowflake employee, so the CLA authorization needs more than just my approval...",
      "There is still one failing lint check: `method-cache-max-size-none` Let me do some research to see about how best to size the cache. Since something similar is already implemented for OpenTelemetry Java, I may draw inspiration from there.",
      "@tm0nk \r\n\r\nThis is a great contribution. Please add some benchmark tests to see the implications of multiple calls to `get_logger` and fix the build when you can. Also as discussed in the Python SIG, using a cache is probably necessary to save us from multiple creations of objects when calling `get_logger` multiple times.",
      "@tm0nk \r\n\r\nGentle ping on this issue. Are you still working on this? We will be reassigning this issue if we don't hear back from you.",
      "@tm0nk \r\n\r\nGentle ping on this. Are you still planning to work on this?",
      "@sfc-gh-jopel has opened a PR with these changes:\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/4208\r\n\r\nHe will be following up on getting this fix merged. Thanks @sfc-gh-jopel!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba844ee515ce6a4e235",
    "number": 3809,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/773\r\nPartially fixes https://github.com/open-telemetry/opentelemetry-python/issues/1608\r\n\r\nI turned on mypy for the SDK and used [mypy-upgrade](https://github.com/ugognw/mypy-upgrade) to silence existing type issues with `type-ignore` comments.\r\n\r\nSince there were >1000 existing issues to silence, this is quite noisy. We may consider using a less strict config for the SDK to begin with and avoid the issue.",
    "head_branch": "mypy-sdk",
    "is_a_fork": true,
    "comments": [
      "Tried this with latest mypy (see https://github.com/open-telemetry/opentelemetry-python/pull/3795) and it fails with:\r\n\r\n```\r\nopentelemetry-sdk/src/opentelemetry/sdk/util/instrumentation.py:54: error: Expression has type \"Any\"  [misc]\r\nopentelemetry-sdk/src/opentelemetry/sdk/util/instrumentation.py:55: error: Expression has type \"Any\"  [misc]\r\nopentelemetry-sdk/src/opentelemetry/sdk/util/instrumentation.py:56: error: Expression has type \"Any\"  [misc]\r\nopentelemetry-sdk/src/opentelemetry/sdk/resources/__init__.py:68: error: Module \"opentelemetry.attributes\" has no attribute \"BoundedAttributes\"  [attr-defined]\r\nopentelemetry-sdk/src/opentelemetry/sdk/resources/__init__.py:69: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nFound 41 errors in 9 files (checked 39 source files)\r\nopentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py:46: error: Module \"opentelemetry.attributes\" has no attribute \"BoundedAttributes\"  [attr-defined]\r\nopentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py:47: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py:124: error: Missing return statement  [empty-body]\r\nopentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py:483: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/export/__init__.py:145: error: Unused \"type: ignore[no-any-return]\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/_view_instrument_match.py:28: error: Module \"opentelemetry.sdk.metrics._internal.export\" does not explicitly export attribute \"AggregationTemporality\"  [attr-defined]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/_view_instrument_match.py:29: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/_view_instrument_match.py:125: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/_view_instrument_match.py:135: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:38: error: Module \"opentelemetry.sdk.metrics._internal.export\" does not explicitly export attribute \"AggregationTemporality\"  [attr-defined]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:39: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:66: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:77: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:149: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:158: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:170: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:189: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:205: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:221: error: \"Instrument\" has no attribute \"instrumentation_scope\"  [attr-defined]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:221: error: Expression has type \"Any\"  [misc]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py:222: error: Unused \"type: ignore[attr-defined, misc]\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:85: error: Expression has type \"Any\"  [misc]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:85: error: Expression type contains \"Any\" (has type \"type[_Counter]\")  [misc]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:86: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:200: error: Expression has type \"Any\"  [misc]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:200: error: Expression type contains \"Any\" (has type \"type[_Histogram]\")  [misc]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:201: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:235: error: Expression has type \"Any\"  [misc]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:235: error: Expression type contains \"Any\" (has type \"type[_Gauge]\")  [misc]\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:236: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/trace/export/__init__.py:68: error: Missing return statement  [empty-body]\r\nopentelemetry-sdk/src/opentelemetry/sdk/trace/export/__init__.py:86: error: Missing return statement  [empty-body]\r\nopentelemetry-sdk/src/opentelemetry/sdk/trace/export/__init__.py:512: error: Unused \"type: ignore[no-any-return]\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/_logs/_internal/__init__.py:36: error: Module \"opentelemetry.attributes\" has no attribute \"BoundedAttributes\"  [attr-defined]\r\nopentelemetry-sdk/src/opentelemetry/sdk/_logs/_internal/__init__.py:37: error: Unused \"type: ignore\" comment  [unused-ignore]\r\nopentelemetry-sdk/src/opentelemetry/sdk/_logs/_internal/__init__.py:524: error: Expression type contains \"Any\" (has type \"str | Any\")  [misc]\r\n```",
      "> Tried this with latest mypy (see #3795) and it fails with:\r\n\r\nYa makes sense. I can re-generate these changes once that PR is merged and possibly make the checks more lenient",
      "Mypy bump has been merged in main."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ba944ee515ce6a4e236",
    "number": 3807,
    "body": "# Description\r\n\r\nBump black to latest release.\r\n\r\nClosed other PR #3796\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bump-black-2430",
    "is_a_fork": true,
    "comments": [
      "While at it tried ruff for formatting while at it, and it would have changed 124 other files, mostly empty lines.",
      "Closing in favor of going straight with ruff formatting"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200baa44ee515ce6a4e237",
    "number": 3805,
    "body": "Fixes #3540",
    "head_branch": "issue_3540",
    "is_a_fork": true,
    "comments": [
      "I assume you are going to add some GitHub workflow for this?",
      "> I assume you are going to add some GitHub workflow for this?\r\n\r\nRight, added it.\r\n\r\nI tested it, here is the run:\r\nhttps://github.com/SecuringCarter/opentelemetry-python/actions/runs/8384110904\r\n\r\nHere is the resulting SBOM file:\r\nhttps://github.com/SecuringCarter/opentelemetry-python/releases/tag/1\r\n",
      "> The issue mentions using some tools to generate the SBOM but the PR is making a github API call. I'm not familiar with this API can you explain what it's doing?\r\n\r\nSure, I first tried Syft but I had problems with it detecting `pyproject.toml` files, if I remember correctly. So, I used instead the [Github REST API](https://docs.github.com/en/rest/dependency-graph/sboms?apiVersion=2022-11-28) to generate an SBOM file.",
      "I'm no longer pursuing this, closing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bab44ee515ce6a4e238",
    "number": 3804,
    "body": "# Description\r\n\r\nimportlib_metadata 7.1 is out. If you don't plan to update the configuration for every minor release, it might make sense to allow all versions 7.x.y. importlib_metadata is pretty stable so I'd not be afraid of any breaking changes.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "The existing strictness might relate to Python version differences discussed in https://github.com/open-telemetry/opentelemetry-python/issues/3234 and a similar open PR for the instrumentation library in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2181. It might help to bring up this PR and these issues at the Python sig.",
      "Hi @frenzymadness , I brought this PR up at the Python SIG meeting today and we would prefer not to introduce a broad version support change at this time given the other issue and PR I've linked. ~~I will close this but please feel free to bring up any questions or other ideas.~~",
      "@tammy-baylis-swi  @frenzymadness \r\n\r\nI think we would be okay with simply incrementing the version to cover v7.1 instead of the broader less than 8.",
      "Closing as superseded by https://github.com/open-telemetry/opentelemetry-python/pull/3835"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bab44ee515ce6a4e239",
    "number": 3803,
    "body": "# Description\r\n\r\nChange license field in pyproject.toml files to what's expected according to the docs:\r\n```diff\r\n-license = \"Apache-2.0\"\r\n+license = {text = \"Apache-2.0\"}\r\n```\r\n\r\nFixes #3802\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nCI\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nPerhaps, I haven't checked if contrib also has the same issue.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-pyproject.toml",
    "is_a_fork": true,
    "comments": [
      "Our internal tooling was breaking trying to import into monorepo with Buck. "
    ],
    "commit_messages": [
      "Fix license field in pyproject.toml files (#3803)\n\n* Fix pyproject.toml\r\n\r\nSigned-off-by: Yuri Shkuro <github@ysh.us>\r\n\r\n* changelog\r\n\r\nSigned-off-by: Yuri Shkuro <github@ysh.us>\r\n\r\n---------\r\n\r\nSigned-off-by: Yuri Shkuro <github@ysh.us>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bac44ee515ce6a4e23a",
    "number": 3800,
    "body": "Fixes #3799",
    "head_branch": "issue_3799",
    "is_a_fork": true,
    "comments": [
      "This was being fixed in #3601, since that PR fell inactive it is being fixed here.\r\n\r\n@srikanthccv PTAL.",
      "me when I approve a PR real fast :)\r\n![lightningspeed](https://github.com/open-telemetry/opentelemetry-python/assets/22846633/bae21038-1c9c-41f4-be3f-43ad9da94087)\r\n"
    ],
    "commit_messages": [
      "Use verbosity for logs example (#3800)\n\nFixes #3799"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bad44ee515ce6a4e23b",
    "number": 3798,
    "body": "# Description\r\n\r\nFix various small issues in exponential histogram collection discovered by a newly added test and issues mentioned below:\r\n1. maintain `self._scale` to be consistent with current bucket's scale\r\n2. consistently pass `scale` of the correct buckets alongside the buckets to method calls\r\n3. maintain `min`, `max`, `sum`, `count`, `zero_count` values across collection calls\r\n4. calculate the exponential bucket's index based on the index in the circular buffer based on the `index_base` instead of `index_start`, also take wrapping around the buffer into account\r\n5. calculate an expected span size based on the `index_start` and new index instead of `index_end`\r\n6. while collecting the data point, rotate the circular buffer so that `index_start` matches `index_base`\r\n\r\nFixes #3393\r\nFixes #3600\r\nFixes #3562 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Fixed existing test for cumulative collection\r\n- [x] Added a new pseudo-random blackbox test for validating that collected result's buckets exactly match the expected distribution\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-exponential-histogram",
    "is_a_fork": true,
    "comments": [
      "cc: @ocelotl ",
      "Love the explanation near the code changes, thanks @euroelessar !",
      "@srikanthccv thanks! can you recommend some other approver/maintainer to review this pr as well so it could be merged, please?",
      "@ocelotl will do another review. He already assigned this to him. "
    ],
    "commit_messages": [
      "Fix collection of exponential histogram (#3798)\n\n* Fix collection of exponential histogram\r\n\r\n* changelog\r\n\r\n* fix lint\r\n\r\n* moar lint\r\n\r\n* fix sum/count/min/max\r\n\r\n* fix scale when downscaling happens due to low/high of current/previous not fitting into the current scale\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bae44ee515ce6a4e23c",
    "number": 3797,
    "body": "I'm just investigating #2288",
    "head_branch": "issue_2288",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200baf44ee515ce6a4e23d",
    "number": 3796,
    "body": "Bumps [black](https://github.com/psf/black) from 22.3.0 to 24.3.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/releases\">black's releases</a>.</em></p>\n<blockquote>\n<h2>24.3.0</h2>\n<h3>Highlights</h3>\n<p>This release is a milestone: it fixes Black's first CVE security vulnerability. If you\nrun Black on untrusted input, or if you habitually put thousands of leading tab\ncharacters in your docstrings, you are strongly encouraged to upgrade immediately to fix\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.</p>\n<p>This release also fixes a bug in Black's AST safety check that allowed Black to make\nincorrect changes to certain f-strings that are valid in Python 3.12 and higher.</p>\n<h3>Stable style</h3>\n<ul>\n<li>Don't move comments along with delimiters, which could cause crashes (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li>Strengthen AST safety check to catch more unsafe changes to strings. Previous versions\nof Black would incorrectly format the contents of certain unusual f-strings containing\nnested strings with the same quote type. Now, Black will crash on such strings until\nsupport for the new f-string syntax is implemented. (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li>Fix a bug where line-ranges exceeding the last code line would not work as expected\n(<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n<li>Fix catastrophic performance on docstrings that contain large numbers of leading tab\ncharacters. This fixes\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.\n(<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Note what happens when <code>--check</code> is used with <code>--quiet</code> (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n</ul>\n<h2>24.2.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fixed a bug where comments where mistakenly removed along with redundant parentheses\n(<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li>Move the <code>hug_parens_with_braces_and_square_brackets</code> feature to the unstable style\ndue to an outstanding crash and proposed formatting tweaks (<a href=\"https://redirect.github.com/psf/black/issues/4198\">#4198</a>)</li>\n<li>Fixed a bug where base expressions caused inconsistent formatting of ** in tenary\nexpression (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li>Checking for newline before adding one on docstring that is almost at the line limit\n(<a href=\"https://redirect.github.com/psf/black/issues/4185\">#4185</a>)</li>\n<li>Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>).</li>\n</ul>\n<h3>Configuration</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/blob/main/CHANGES.md\">black's changelog</a>.</em></p>\n<blockquote>\n<h2>24.3.0</h2>\n<h3>Highlights</h3>\n<p>This release is a milestone: it fixes Black's first CVE security vulnerability. If you\nrun Black on untrusted input, or if you habitually put thousands of leading tab\ncharacters in your docstrings, you are strongly encouraged to upgrade immediately to fix\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.</p>\n<p>This release also fixes a bug in Black's AST safety check that allowed Black to make\nincorrect changes to certain f-strings that are valid in Python 3.12 and higher.</p>\n<h3>Stable style</h3>\n<ul>\n<li>Don't move comments along with delimiters, which could cause crashes (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li>Strengthen AST safety check to catch more unsafe changes to strings. Previous versions\nof Black would incorrectly format the contents of certain unusual f-strings containing\nnested strings with the same quote type. Now, Black will crash on such strings until\nsupport for the new f-string syntax is implemented. (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li>Fix a bug where line-ranges exceeding the last code line would not work as expected\n(<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n<li>Fix catastrophic performance on docstrings that contain large numbers of leading tab\ncharacters. This fixes\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.\n(<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Note what happens when <code>--check</code> is used with <code>--quiet</code> (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n</ul>\n<h2>24.2.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fixed a bug where comments where mistakenly removed along with redundant parentheses\n(<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li>Move the <code>hug_parens_with_braces_and_square_brackets</code> feature to the unstable style\ndue to an outstanding crash and proposed formatting tweaks (<a href=\"https://redirect.github.com/psf/black/issues/4198\">#4198</a>)</li>\n<li>Fixed a bug where base expressions caused inconsistent formatting of ** in tenary\nexpression (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li>Checking for newline before adding one on docstring that is almost at the line limit\n(<a href=\"https://redirect.github.com/psf/black/issues/4185\">#4185</a>)</li>\n<li>Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>).</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/black/commit/552baf822992936134cbd31a38f69c8cfe7c0f05\"><code>552baf8</code></a> Prepare release 24.3.0 (<a href=\"https://redirect.github.com/psf/black/issues/4279\">#4279</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/f00093672628d212b8965a8993cee8bedf5fe9b8\"><code>f000936</code></a> Fix catastrophic performance in lines_with_leading_tabs_expanded() (<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/7b5a657285f38126bf28483478bbd9ea928077ec\"><code>7b5a657</code></a> Fix --line-ranges behavior when ranges are at EOF (<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/1abcffc81816257985678f08c61584ed4287f22a\"><code>1abcffc</code></a> Use regex where we ignore case on windows (<a href=\"https://redirect.github.com/psf/black/issues/4252\">#4252</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/719e67462c80574c81a96faa144886de6da84489\"><code>719e674</code></a> Fix 4227: Improve documentation for --quiet --check (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/e5510afc06cd238cd0cba4095283943a870a7e7b\"><code>e5510af</code></a> update plugin url for Thonny (<a href=\"https://redirect.github.com/psf/black/issues/4259\">#4259</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/6af7d1109693c4ad3af08ecbc34649c232b47a6d\"><code>6af7d11</code></a> Fix AST safety check false negative (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/f03ee113c9f3dfeb477f2d4247bfb7de2e5f465c\"><code>f03ee11</code></a> Ensure <code>blib2to3.pygram</code> is initialized before use (<a href=\"https://redirect.github.com/psf/black/issues/4224\">#4224</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/e4bfedbec2e8b10cc6b7b31442478f05db0ce06d\"><code>e4bfedb</code></a> fix: Don't move comments while splitting delimiters (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/d0287e1f7558d97e6c0ebd6dc5bcb5b970e2bf8c\"><code>d0287e1</code></a> Make trailing comma logic more concise (<a href=\"https://redirect.github.com/psf/black/issues/4202\">#4202</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/black/compare/22.3.0...24.3.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=black&package-manager=pip&previous-version=22.3.0&new-version=24.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/black-24.3.0",
    "is_a_fork": false,
    "comments": [
      "This can't get in before running the updated black on the whole codebase.",
      "superseded by https://github.com/open-telemetry/opentelemetry-python/pull/3807",
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200baf44ee515ce6a4e23e",
    "number": 3795,
    "body": "# Description\r\n\r\nBump mypy to 1.9.0. This should allow adding python 3.12 to CI.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e mypy\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bump-mypy",
    "is_a_fork": true,
    "comments": [
      "`mypy` is failing, please take a look :v: ",
      "There's a new error from the async context manager:\r\n\r\n```\r\nopentelemetry-api/src/opentelemetry/util/_decorator.py:81: error: Incompatible return value type (got \"Callable[[VarArg(Pargs), KwArg(Pkwargs)], _AgnosticContextManager[R]]\", expected \"Callable[P, _AgnosticContextManager[R]]\")  [return-value]\r\n```\r\n\r\nwhich I don't know how to fix",
      "@QuentinN42 any hint on fixing the issue above? ↑",
      "`VarArg(Pargs)` and `KwArg(Pkwargs)` are only available in python 3.9 or something...\n\nI don't really remember how I typed the thing but it was a pain :(\n\nI will try to take a look at this before today's meeting and come with more data."
    ],
    "commit_messages": [
      "Bump mypy to 1.9.0 (#3795)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb044ee515ce6a4e23f",
    "number": 3794,
    "body": "# Description\r\n\r\nMostly fixed two obvious types of problems:\r\n* `= None` arguments not being marked as `Optional`.\r\n* type mismatches between child and parent class methods' arguments.\r\n\r\nno functional changes.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n",
    "head_branch": "rbtz/tracingMypyFixes",
    "is_a_fork": true,
    "comments": [
      "rebased and resolved merge conflicts"
    ],
    "commit_messages": [
      "Improve tracing sdk type annotations (#3794)\n\n* Improve tracing sdk type annotations\r\n\r\n* Mark instrumentation_scope as optional"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb144ee515ce6a4e240",
    "number": 3793,
    "body": "Fixes #3791",
    "head_branch": "issue_3791",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb244ee515ce6a4e241",
    "number": 3790,
    "body": "# Description\r\n\r\nChanged the type of the indent argument in ReadableSpan to match the type signature of json.dumps, since indent is simply being passed through to json.dumps\r\n\r\nFixes # N/A\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTBD as it's a simple change\r\n\r\n- [ ] Test that if fixes linting when passing an indent value of None to to_json\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\nNo\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix_span_tojson_type",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ><br ><ul><li>:white_check_mark:login: hennie-the-barbarian / (8779b01699d4d51de84a30e05d23efceca2ef49c)</li></ul><br>The committers listed above are authorized under a signed CLA.",
      "1) The current target python version is 3.8,  you'll need to use `Optional` until we switch to something that supports https://peps.python.org/pep-0604/\r\n2) There are a lot of `to_json` functions around the codebase, which all currently share the same signature, which makes it \"kind of\" an interface, so I would say it should be a \"none or all\" type of a change.\r\n\r\nI'm not a maintainer, so take it with a grain of salt."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb344ee515ce6a4e242",
    "number": 3789,
    "body": "# Description\r\nRun `shellcheck --severity=warning` on all build scripts.  Fix a quoting issue, remove some dead code, and safely ensure that the build can't ever accidentally wipe the file system.\r\n\r\nIf desired, I could add a PR for enabling a shellcheck CI step similar to https://github.com/open-telemetry/opentelemetry-lambda/pull/396\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n(Yes, and Contrib also has additional shellcheck errors/warnings in non-shared scripts)\r\n\r\n- [x] Yes. - Link to PR:  [contrib shellcheck warnings](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2354)\r\n- [ ] No.\r\n\r\n",
    "head_branch": "shellcheck_warnings",
    "is_a_fork": true,
    "comments": [
      "Thanks @johnbley, that PR for CI checking is a great idea!"
    ],
    "commit_messages": [
      "Fix shellcheck --severity=warning issues (#3789)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb444ee515ce6a4e243",
    "number": 3788,
    "body": "# Description\r\n\r\nCurrently, if collect raises an uncaught error, _ticker stops and service's metrics disappear.  This PR makes it more robust for the one-off-failures.  Persistent failures would also be more visible in logs.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "rbtz/tickerExit",
    "is_a_fork": true,
    "comments": [
      "Can you help me understand when/where the exception is raised? During the metrics collection, one potential place unexpected Exception could be raised in async instruments which we already addressed here https://github.com/open-telemetry/opentelemetry-python/blob/694445f6a39ab55826b955320c74650e1d2395ae/opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/instrument.py#L139-L142.",
      "> Can you help me understand when/where the exception is raised? \r\n\r\nThis is mostly a catchall for things that are not caught by individual callbacks.\r\n\r\nWe observed collection ticker exiting on exceptions in Exponential Histograms, e.g. the one in:\r\n* https://github.com/open-telemetry/opentelemetry-python/issues/3600\r\n",
      "That's a bug that should be fixed. I am not sure how I feel about the catch-all here. We know sync instruments collection shouldn't cause any unexpected issues (I don't remember why mapping raises an Exception) and async instruments collection is already handled. ",
      "> That's a bug that should be fixed. I am not sure how I feel about the catch-all here. We know sync instruments collection shouldn't cause any unexpected issues (I don't remember why mapping raises an Exception) and async instruments collection is already handled.\r\n\r\nThis is mostly a behavioral question: in steady state this should never happen. But in cases when something unexpected happens (new feature or regression) how do we want SDK's `PeriodicExportingMetricReader` to behave?  Should it stop on error or should it try its best to continue?  Current PR, assumes that it is better to be loud and retry."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb444ee515ce6a4e244",
    "number": 3787,
    "body": null,
    "head_branch": "issue_3784",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb544ee515ce6a4e245",
    "number": 3785,
    "body": "# Description\r\n\r\nFollowing #3564 and #3565, fix otlp exporter to export observed_timestamp field for logs.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit test updated\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "export-observed-timestamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix otlp exporter to export log_record.observed_timestamp (#3785)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb644ee515ce6a4e246",
    "number": 3782,
    "body": "# Description\r\n\r\nreduce threading lock.Look code.\r\n\r\nFixes #3781\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\nMy first submission, please let me know if I made a mistake.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ><br ><ul><li>:white_check_mark:login: Chise1 / (219b977ef380f52dc1ad8870117f31ffe26e2eab)</li></ul><br>The committers listed above are authorized under a signed CLA.",
      "Have you seen #3763?",
      "> Have you seen #3763?\r\n\r\nYes, they have -- they closed the issue 🙂.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/3781"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb744ee515ce6a4e247",
    "number": 3780,
    "body": "# Description\r\n\r\nThis fixes console exporter for ExponentialHistogram.\r\n\r\nFixes #3579\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "rbtz/expHistToJson",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: rbtz-openai / name: Alexey Ivanov  (3f67ec9963d73fddc496973d36a178b1ba2d736a, 6968f1572886bccd1c9bf52623eee59eca2cb5cd, ba090dd33885098fa61de6f43c42a3c206d93244, 4aecf46c3e01cfd3a23730e6820dd3d0669c0635)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (465b295a21b4ffa29bcab8b97ab05afdd200e2b8)</li><li>:white_check_mark: login: pmcollins / name: Pablo Collins  (15b10d1c0297094a574159934cf44e6ccace47ad)</li></ul>",
      "> It would be nice to add a test while you are at it\r\n\r\nI did not find a good existing place for exporter tests.  Would a console exporter's integration test suffice?",
      "@xrmx is it changelog worthy, or should we just add \"Skip Changelog\"?",
      "> @xrmx is it changelog worthy, or should we just add \"Skip Changelog\"?\r\n\r\nSince this is user visible I think it'll be good to have it recorded in the Changelog",
      "@xrmx can you please kick off the tests?",
      "> @xrmx can you please kick off the tests?\r\n\r\nSorry, I don't have enough powers",
      "@pmcollins when you have a second, can you please kick off the tests, and maybe merge if it looks good?",
      "@pmcollins can you please add the \"Skip Public API check\" label?\r\n\r\nCurrently the [check thinks that](https://github.com/open-telemetry/opentelemetry-python/actions/runs/8336846514/job/22930372239?pr=3780):\r\n```\r\nThe code in this branch removes the following public symbols:\r\n\r\n- opentelemetry-sdk/src/opentelemetry/sdk/environment_variables.py\r\n\tOTEL_SDK_DISABLED\r\n```\r\n\r\neven though i did not touch that code.",
      "@pmcollins a friendly ping =)  (and maybe @srikanthccv)",
      "Thank you for your patience :). Can you fix lint @rbtz-openai ?",
      "Updated, now it passes:\r\n```\r\npython scripts/eachdist.py lint --check-only\r\n```\r\n\r\nBut, sadly, fails `publicAPICheck`",
      "Nice. That failure appears to be unrelated -- we'll have to chase it down separately."
    ],
    "commit_messages": [
      "Add to_json method to ExponentialHistogram (#3780)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb844ee515ce6a4e248",
    "number": 3778,
    "body": "# Description\r\n\r\nMake the stacktrace formatting not rely on being inside the except scope.\r\nSuggested-by: Alex Hall <alex.mojaki@gmail.com>\r\n\r\nFixes #3762\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "better-exception-handling-3762",
    "is_a_fork": true,
    "comments": [
      "Yeah, realized It too late. I am away from keyboard until Monday, will fix\r\nthen if anyone does not beat me to it.\r\n\r\nIl ven 15 mar 2024, 04:25 Aaron Abbott ***@***.***> ha\r\nscritto:\r\n\r\n> ***@***.**** approved this pull request.\r\n> ------------------------------\r\n>\r\n> In opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py\r\n> <https://github.com/open-telemetry/opentelemetry-python/pull/3778#discussion_r1525708979>\r\n> :\r\n>\r\n> > @@ -987,13 +987,12 @@ def record_exception(\r\n>          escaped: bool = False,\r\n>      ) -> None:\r\n>          \"\"\"Records an exception as a span event.\"\"\"\r\n> -        try:\r\n> -            stacktrace = traceback.format_exc()\r\n> -        except Exception:  # pylint: disable=broad-except\r\n> -            # workaround for python 3.4, format_exc can raise\r\n> -            # an AttributeError if the __context__ on\r\n> -            # an exception is None\r\n> -            stacktrace = \"Exception occurred on stacktrace formatting\"\r\n> +        # TODO: drop first argument after baseline is 3.10\r\n>\r\n> I think it's actually the opposite, after 3.10 we can just do\r\n> trace.format_exception(exception) based on this\r\n> <https://docs.python.org/3.11/library/traceback.html#traceback.print_exception:~:text=Since%20Python%203.10%2C%20instead%20of%20passing%20value%20and%20tb%2C%20an%20exception%20object%20can%20be%20passed%20as%20the%20first%20argument.>\r\n> correctly\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/open-telemetry/opentelemetry-python/pull/3778#pullrequestreview-1938045279>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAADFBCAXRV6RPDYBZUOSVTYYJS25AVCNFSM6AAAAABEUNKA4CVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMYTSMZYGA2DKMRXHE>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***\r\n> com>\r\n>\r\n",
      "Fixed comment"
    ],
    "commit_messages": [
      "Make record_exception more robust handling them outside the except scope (#3778)\n\nMake the stacktrace formatting not rely on being inside the except\r\nscope.\r\n\r\nFixes #3762\r\n\r\nSuggested-by: Alex Hall <alex.mojaki@gmail.com>\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb844ee515ce6a4e249",
    "number": 3777,
    "body": "# Description\r\n\r\nA couple of build scripts were not setting `-e` to detect errors in commands (the other scripts already were).\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n\r\nNo, but the same problem is present in non-copied-over contrib scripts, for which I will file a separate PR.\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n",
    "head_branch": "shell_set_dashe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use set -e to catch errors in all scripts (#3777)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bb944ee515ce6a4e24a",
    "number": 3776,
    "body": "# Description\r\n\r\nFixes broken mypy runs:\r\n```\r\n.tox/mypy/lib/python3.10/site-packages/deprecated-stubs/classic.pyi:22:\r\n  error: Positional-only parameters are only supported in Python 3.8 and greater\r\n```\r\n\r\nExample of broken run:\r\nhttps://github.com/open-telemetry/opentelemetry-python/actions/runs/8262935509/job/22603366489?pr=3773\r\n\r\nWe can bump mypy to newer versions but a lot more errors gets spotted so this is the newest release that works fine with just a couple of updates.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e mypy\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-mypy-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump mypy to 0.982 (#3776)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bba44ee515ce6a4e24b",
    "number": 3774,
    "body": "Fixes #3720",
    "head_branch": "issue_3720",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-exporter-zipkin (#3774)\n\nFixes #3720"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bbb44ee515ce6a4e24c",
    "number": 3773,
    "body": "# Description\r\n\r\nThe benchmark ci workflow is currently failling because tox output is not found by the benchmarking action.\r\nUse the same tests output path to have the reporting tool find it.\r\nIf this does not run on PR I have no way to test this.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] CI run?\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fixup-benchmark-results-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ci: fix benchmark reporting (#3773)\n\nUse the same tests output path to have the reporting tool find it."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bbc44ee515ce6a4e24d",
    "number": 3772,
    "body": "# Description\r\n\r\n[OpenTelemetry.io logs-example documentation ](https://opentelemetry.io/docs/languages/python/automatic/logs-example/)'s own example.py creates a span event named \"This is a span event\" and this documentation also shows this span event in the sample output but in reality due to otel-collector-config.yaml\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/8ed71b15fb8fc9534529da8ce4a21e686248a8f3/docs/examples/logs/otel-collector-config.yaml#L13-L18\r\n\r\nNot having traces pipeline, users can not see the span event after checking console of the container. \r\n\r\nThis PR adds traces pipeline to collector config so that span can be seen in the container console as it is described in the documentation.\r\n \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "example-logs-traces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs(examples/logs): include traces to pipelines (#3772)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bbd44ee515ce6a4e24e",
    "number": 3771,
    "body": "# Description\r\n\r\nUpdates the serialization of exponential histogram buckets to remove unnecessary zero buckets. If there are no non-zero buckets, then none are serialized. This matches better the payloads from the JavaScript SDK and avoids ingestion problems with a downstream vendor when an empty negative bucket appears.\r\n\r\nFixes #3767\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit tests to ensure that the truncation of the zero buckets works as expected. Updated the unit test for metric encoding to exercise this functionality.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- ~[ ] Documentation has been updated~\r\n",
    "head_branch": "issue-3767",
    "is_a_fork": true,
    "comments": [
      "@euroelessar any chance you can take a look at this please?",
      "unfortunately this PR has to be rebased due to #3798 being merged\r\n@loomis-relativity any chance you can take on it? if not, I probably will be able to prepare a new PR somewhere within a week",
      "@loomis-relativity any chance you can rebase your changes please?",
      "@xrmx Merge conflict resolved.",
      "@euroelessar hello, do you have time to take a look at it?",
      "Apologies, the notifications got lost in my inbox. @euroelessar I've refactored the code to remove some duplication. Don't think that it can be moved into the `def bucket_counts` without changing the code generated from the protobuf definitions."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bbd44ee515ce6a4e24f",
    "number": 3769,
    "body": "# Description\r\n\r\nThe ValueError message is misleading that it does not include infinity as accepted value as interval. The message therefore needs to be changed as developers were getting confused.\r\n\r\nFixes #3768\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThe behavior can be seen when you try to set the reporting interval with Zero. However, setting the value as **math.inf** does work.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "That makes total sense! I’ll update the PR. Very nice suggestion :-)Sent from my iPhoneOn Mar 11, 2024, at 11:31 AM, Tammy Baylis ***@***.***> wrote:﻿\r\n@tammy-baylis-swi commented on this pull request.\r\n\r\n\r\n\r\nIn opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/export/__init__.py:\r\n> @@ -496,7 +496,7 @@ def __init__(\r\n         elif self._export_interval_millis <= 0:\r\n             raise ValueError(\r\n                 f\"interval value {self._export_interval_millis} is invalid \\\r\n-                and needs to be larger than zero and lower than infinity.\"\r\n+                and needs to be larger than zero and lower than or equal to infinity.\"\r\n\r\nThank you putting in this PR to match actual behaviour and the Reader class docstring.\r\nI suggest we make the message simpler:\r\n⬇️ Suggested change\r\n-                and needs to be larger than zero and lower than or equal to infinity.\"\r\n+                and needs to be larger than zero.\"\r\n\r\n\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you authored the thread.Message ID: ***@***.***>",
      "@howardyoo \r\n\r\nPlease fix the conflicts and we can get this merged! Thanks!",
      "> @howardyoo\r\n> \r\n> Please fix the conflicts and we can get this merged! Thanks!\r\n\r\nI don't see any conflicts. What are you referring to?"
    ],
    "commit_messages": [
      "Update ValueError message that is misleading (#3769)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bbe44ee515ce6a4e250",
    "number": 3766,
    "body": "# Description\r\n\r\nfix typo in PR number\r\n\r\nFixes #3709\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] nothing\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-3709",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CHANGELOG: fix typo in PR number (#3766)\n\nFix #3709"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bbf44ee515ce6a4e251",
    "number": 3765,
    "body": "Fixes #3720",
    "head_branch": "issue_3720",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc044ee515ce6a4e252",
    "number": 3764,
    "body": "# Description\r\n\r\nThis is a solution to several issues related to the current synchronous OTLP exporters.\r\n\r\nCurrently, OTLP exporters have a couple of pain points\r\n\r\n- #2663 Exporter timeouts are mostly ignored or are unintuitively applied\r\n  - In places where they do apply, they apply to individual attempts and not to retries\r\n- #3309 \r\n  - Exporters persist for a minimum of 63 seconds after program shutdown if a transient error is ongoing\r\n- #2284 \r\n  - Shutdown timeouts are ignored if exports are ongoing, and exporters have no way to cancel ongoing exports when shutdown is requested.\r\n- Exponential backoff does not include jitter\r\n- Timeouts are not configurable\r\n\r\nThis PR implements a new utility class, `opentelemetry.exporter.otlp.proto.common.RetryingExporter`, that fixes the above issues. It also significantly refactors the existing OTLP exporters to use this, and extracts retry related logic from their test suites. \r\n\r\nAttempts were made to maintain the call signature of public APIs, though in several cases **kwargs were added to ensure future proofing, and positional arguments were renamed to create a consistent interface.\r\n\r\nOTLP exporters will create a RetryingExporter, passing in a function performing a single export attempt as well as the OTLPExporter's timeout and export result type.\r\n\r\n## Example\r\n```python\r\nfrom opentelemetry.exporter.otlp.proto.common import RetryingExporter, RetryableExportError\r\n\r\nclass OTLPSpanExporter(SpanExporter):\r\n  def __init__(self, ...):\r\n    self._exporter = RetryingExporter(self._export, SpanExportResult, self._timeout)\r\n\r\n  def _export(self, timeout_s: float, serialized_data: bytes) -> SpanExportResult:\r\n    result = ...\r\n\r\n    if is_retryable(result):\r\n      raise RetryableExportError(result.delay)\r\n    return result\r\n\r\n  def export(self, data, timeout_millis = 10_000, **kwargs) -> SpanExportResult:\r\n    return self._exporter.export_with_retry(timeout_millis * 1e-3, data)\r\n\r\n  def shutdown(self, timeout_millis = 10_000, **kwargs):\r\n    ...\r\n    self._exporter.shutdown(timeout_millis)\r\n    self._shutdown = True\r\n```\r\n\r\nFixes #3309\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTests were added for the RetryableExporter in `exporter/opentelemetry-exporter-otlp-proto-common/tests/test_retryable_exporter.py`, as well as for the backoff generator in `exporter/opentelemetry-exporter-otlp-proto-common/tests/test_backoff.py`. Tests were updated throughout the http and grpc otlp exporters, and retry related logic was removed in all cases but for GRPC metrics, which can be split and therefore needed another layer of deadline checking.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "exporter_timeouts_comp",
    "is_a_fork": true,
    "comments": [
      "I based behavior decisions off the described behavior in https://github.com/open-telemetry/opentelemetry-python/issues/2663#issuecomment-1119218751 - namely, the shortest timeout always wins. \r\n\r\nProcessor timeout logic is unaffected - if the processor has a shorter timeout or is tracking a deadline for a batch, it passes that to `export()` and it is respected, if the timeout is longer, the exporter's timeout attribute (set at creation/from env variables) can be hit and cause the export to fail.\r\n\r\nI chose to create a helper object rather than splice this into the inheritance hierarchy to avoid having a mixin with `__init__`, since the exporter needs to have an object-scoped event and lock, and the GRPC exporters already have several mixins with `__init__` it'd have to play along with. A unified rewrite of the inheritence hierarchy shared between http and gprc exporters would probably be better.",
      "@Arnatious apologies for the delay and thanks for this PR -- improvements to the area you've addressed are super important.\r\n\r\nHowever, perhaps this is too much of a good thing all at once. Do you have availability to break these changes down into smaller PRs? This would make things much easier on reviewers."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc144ee515ce6a4e253",
    "number": 3763,
    "body": "The old `_load_runtime_context` is an function wrapper, which acquires lock and check value of `_RUNTIME_CONTEXT` every time the wrapped function (`get_current`/`attach`/`deatch`) called. Since it should be initialized after the first `_load_runtime_context` call, there's no need to check repeatedly.\r\n\r\nThe solution is, initialize it on module import, which should be exactly once and thread safe, and use it directly without redundant check afterwards.\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: WqyJh / name: Qiying Wang  (80404b01566cfffe5e20d352ac5079e9b6bf46d1, ca19dc275b6faf9d8ca5e13cc6b82cecdcf25e0b, f5300b3323364dbf6ba845ecb6058c56819e85e2, 1f6f90eb7670702557d187e8832d14b9bf5dfc22, 703ad6253fa67070c01169eb5b52ca864fd48ad2, cc6d5da6ac7b6cee041db8c3d52cdbc2cc967608, e6712f3d17e550f5f0f6b9e50e3ab4a02efb08f2, 263e3c04e25bda61b0f0113b4b9c3fafd9a2536d, ea17a3e4ec02151abfa1447ced83797b221c23a9, 5bff39b1b272a02dc38e756564504315835ede9c)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (959698e9fc8ca3b42d077827f99c223ecafe4ee3)</li><li>:white_check_mark: login: aabmass / name: Aaron Abbott  (a0cec8fa14494eef992657b774bb2f6ee0a3dd55)</li></ul>",
      "thanks @WqyJh is this PR fixing an existing issue? If not please open one and mark this PR as fixing it :v: ",
      "Fixes #3663 and #3381 ",
      "Hi @WqyJh, thanks for the change -- I'm very much in favor of this idea. Would you be able to add test coverage?",
      "> Hi @WqyJh, thanks for the change -- I'm very much in favor of this idea. Would you be able to add test coverage?\r\n\r\nSure, I'd like to. However, I didn't see the coverage report, therefore not sure where the uncovered parts are. AFAIK, all functions related to this modification including `context.get_current()`, `context.attach()`, `context.detach()` already have tests.",
      "> > Hi @WqyJh, thanks for the change -- I'm very much in favor of this idea. Would you be able to add test coverage?\r\n> \r\n> Sure, I'd like to. However, I didn't see the coverage report, therefore not sure where the uncovered parts are. AFAIK, all functions related to this modification including `context.get_current()`, `context.attach()`, `context.detach()` already have tests.\r\n\r\nThat's good. What do you think about adding at least one test for `_load_runtime_context` as well?",
      "> > > Hi @WqyJh, thanks for the change -- I'm very much in favor of this idea. Would you be able to add test coverage?\r\n> > \r\n> > \r\n> > Sure, I'd like to. However, I didn't see the coverage report, therefore not sure where the uncovered parts are. AFAIK, all functions related to this modification including `context.get_current()`, `context.attach()`, `context.detach()` already have tests.\r\n> \r\n> That's good. What do you think about adding at least one test for `_load_runtime_context` as well?\r\n\r\nAdded an unitest `test_load_runtime_context`.\r\n\r\nHowever, I found that `OTEL_PYTHON_CONTEXT` not working properly. If `OTEL_PYTHON_CONTEXT=contextvars_context`, an `ContextVarsRuntimeContext` instance would be loaded, however, if `OTEL_PYTHON_CONTEXT=context`, an `Context` instance won't be loaded. This is caused by `entry_points` function, the return value contains only one `EntryPoint` named `contextvars_context`.\r\n\r\n![image](https://github.com/open-telemetry/opentelemetry-python/assets/15232241/c542cbf7-9a8d-4c29-953f-fe72d523de50)\r\n\r\nIt's clear that this problem is not introduced by this PR because I didn't modify these code lines. If you also think it's an abnormal behavior, I think we should merge this PR first and open a new issue for this problem.\r\n\r\n```python\r\n    default_context = \"contextvars_context\"\r\n\r\n    configured_context = environ.get(\r\n        OTEL_PYTHON_CONTEXT, default_context\r\n    )  # type: str\r\n\r\n    try:\r\n        return next(  # type: ignore\r\n            iter(  # type: ignore\r\n                entry_points(  # type: ignore\r\n                    group=\"opentelemetry_context\",\r\n                    name=configured_context,\r\n                )\r\n            )\r\n        ).load()()\r\n    except Exception:  # pylint: disable=broad-except\r\n        logger.exception(\r\n            \"Failed to load context: %s\", configured_context\r\n        )\r\n```\r\n",
      "Hi @pmcollins, this PR needs review. Would you please help review it and let's finish this PR.",
      "Changes are looking good, @WqyJh. Can you fix [lint](https://github.com/open-telemetry/opentelemetry-python/actions/runs/8617146187/job/23616428741?pr=3763#step:6:1584)?",
      "> Changes are looking good, @WqyJh. Can you fix [lint](https://github.com/open-telemetry/opentelemetry-python/actions/runs/8617146187/job/23616428741?pr=3763#step:6:1584)?\r\n\r\nYes, lint has been fixed and tested in py310, please approve the CI.\r\n\r\n![image](https://github.com/open-telemetry/opentelemetry-python/assets/15232241/57f48e26-20e9-4f66-9c01-7e1bdd1eb0c3)\r\n",
      "> Changes LGTM. Thanks for doing this.\r\n> \r\n> Should this be mentioned in the changelog?\r\n\r\nYes, I think it should.",
      "Please feel free to add the changelog entry, then that check will pass.",
      "All works seems done, can it be merged now?",
      "@WqyJh \r\n\r\nThanks for the change. Could you create a tracking issue for [this](https://github.com/open-telemetry/opentelemetry-python/pull/3763#issuecomment-2017476021). We will merge this pr separately.",
      "> @WqyJh\r\n> \r\n> Thanks for the change. Could you create a tracking issue for [this](https://github.com/open-telemetry/opentelemetry-python/pull/3763#issuecomment-2017476021). We will merge this pr separately.\r\n\r\nSure, see #3857 ",
      "@WqyJh can you fix the mypy failure with the following diff?\r\n```diff\r\ndiff --git a/opentelemetry-api/tests/context/test_context.py b/opentelemetry-api/tests/context/test_context.py                                                        \r\nindex af5b38ef8..18f6f68a5 100644                                                                                                                                     \r\n--- a/opentelemetry-api/tests/context/test_context.py                                                                                                                 \r\n+++ b/opentelemetry-api/tests/context/test_context.py                                                                                                                 \r\n@@ -85,11 +85,11 @@ class TestInitContext(unittest.TestCase):                                                                                                         \r\n         self.assertIsInstance(ctx, ContextVarsRuntimeContext)                                                                                                        \r\n                                                                                                                                                                      \r\n     @patch.dict(\"os.environ\", {OTEL_PYTHON_CONTEXT: \"contextvars_context\"})                                                                                          \r\n-    def test_load_runtime_context(self):                                                                                                                             \r\n+    def test_load_runtime_context(self):  # type: ignore[misc]                                                                                                       \r\n         ctx = context._load_runtime_context()  # pylint: disable=W0212                                                                                               \r\n         self.assertIsInstance(ctx, ContextVarsRuntimeContext)                                                                                                        \r\n                                                                                                                                                                      \r\n     @patch.dict(\"os.environ\", {OTEL_PYTHON_CONTEXT: \"foo\"})                                                                                                          \r\n-    def test_load_runtime_context_fallback(self):                                                                                                                    \r\n+    def test_load_runtime_context_fallback(self):  # type: ignore[misc]                                                                                              \r\n         ctx = context._load_runtime_context()  # pylint: disable=W0212                                                                                               \r\n         self.assertIsInstance(ctx, ContextVarsRuntimeContext) \r\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc244ee515ce6a4e254",
    "number": 3760,
    "body": "Fixes #3732",
    "head_branch": "issue_3732",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-semantic-conventions (#3760)\n\nFixes #3732"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc244ee515ce6a4e255",
    "number": 3759,
    "body": "Fixes #3731",
    "head_branch": "issue_3731",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-api (#3759)\n\nFixes #3731"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc344ee515ce6a4e256",
    "number": 3758,
    "body": "Fixes #3730",
    "head_branch": "issue_3730",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-test-utils (#3758)\n\nFixes #3730"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc444ee515ce6a4e257",
    "number": 3757,
    "body": "Fixes #3729",
    "head_branch": "issue_3729",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-proto (#3757)\n\nFixes #3729"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc544ee515ce6a4e258",
    "number": 3756,
    "body": "Fixes #3728",
    "head_branch": "issue_3728",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-exporter-otlp (#3756)\n\nFixes #3728"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc644ee515ce6a4e259",
    "number": 3755,
    "body": "Fixes #3727",
    "head_branch": "issue_3727",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-exporter-opencensus (#3755)\n\nFixes #3727"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc744ee515ce6a4e25a",
    "number": 3754,
    "body": "Fixes #3726",
    "head_branch": "issue_3726",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-exporter-zipkin-proto-http (#3754)\n\nFixes #3726"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc844ee515ce6a4e25b",
    "number": 3753,
    "body": "Fixes #3725",
    "head_branch": "issue_3725",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-exporter-prometheus (#3753)\n\nFixes #3725"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc844ee515ce6a4e25c",
    "number": 3751,
    "body": "\r\n# Description\r\n\r\nutcfromtimestamp is deprecated replace\r\nwith fromtimestamp with explict UTC timezone\r\n\r\nSee https://docs.python.org/3/library/datetime.html#datetime.datetime.utcfromtimestamp\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThis is a simple bug fix to an existing line that is already tested\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added  N/A\r\n- [ ] Documentation has been updated N/A\r\n",
    "head_branch": "datetime_deprecation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix python 3.12 deprecation warning (#3751)\n\n* Fix python 3.12 deprecation warning\r\n\r\nutcfromtimestamp is deprecated replace\r\nwith fromtimestamp with explict UTC timezone\r\n\r\nSee https://docs.python.org/3/library/datetime.html#datetime.datetime.utcfromtimestamp\r\n\r\n* add changelog for 3751"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bc944ee515ce6a4e25d",
    "number": 3746,
    "body": "Fixes #3724",
    "head_branch": "issue_3724",
    "is_a_fork": true,
    "comments": [
      "Tests are not passing, and I don't know why, reported it [here](https://github.com/tox-dev/tox/issues/3249). Marking it as draft in the meantime.",
      "> Tests are not passing, and I don't know why, reported it [here](https://github.com/tox-dev/tox/issues/3249). Marking it as draft in the meantime.\r\n\r\n@ocelotl \r\nIn line 128 I think there is an invisible character at the beginning\r\n```sh\r\ngrep \"$(printf '\\xEF\\xBF\\xBC')\" tox.ini\r\n```\r\nmatches: \r\n```\r\nproto4-opentelemetry-exporter-otlp-proto-grpc: pip install -r {toxinidir}/exporter/opentelemetry-exporter-otlp-proto-grpc/test-requirements-1.txt\r\n```\r\nFor me, removing the invisible character I was able to run `tox -rvvve py38-proto4-opentelemetry-exporter-otlp-proto-grpc`\r\n",
      "> > Tests are not passing, and I don't know why, reported it [here](https://github.com/tox-dev/tox/issues/3249). Marking it as draft in the meantime.\r\n> \r\n> @ocelotl In line 128 I think there is an invisible character at the beginning\r\n> \r\n> ```shell\r\n> grep \"$(printf '\\xEF\\xBF\\xBC')\" tox.ini\r\n> ```\r\n> \r\n> matches:\r\n> \r\n> ```\r\n> proto4-opentelemetry-exporter-otlp-proto-grpc: pip install -r {toxinidir}/exporter/opentelemetry-exporter-otlp-proto-grpc/test-requirements-1.txt\r\n> ```\r\n> \r\n> For me, removing the invisible character I was able to run `tox -rvvve py38-proto4-opentelemetry-exporter-otlp-proto-grpc`\r\n\r\nWhoah. This is incredible. I was totally out of answers. Thanks a lot @emdneto!"
    ],
    "commit_messages": [
      "Remove [test] package from opentelemetry-exporter-otlp-proto-grpc (#3746)\n\n* Remove [test] package from opentelemetry-exporter-otlp-proto-grpc\r\n\r\nFixes #3724\r\n\r\n* Remove invisible character"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bca44ee515ce6a4e25e",
    "number": 3745,
    "body": "Fixes #3744",
    "head_branch": "issue_3744",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor use of changedir in tox.ini (#3745)\n\nFixes #3744"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bcb44ee515ce6a4e25f",
    "number": 3742,
    "body": "Fixes #3723",
    "head_branch": "issue_3723",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-exporter-otlp-proto-http (#3742)\n\nFixes #3723\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bcc44ee515ce6a4e260",
    "number": 3740,
    "body": "Fixes #3718",
    "head_branch": "issue_3718",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-opencensus-shim (#3740)\n\nFixes #3718"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bcd44ee515ce6a4e261",
    "number": 3739,
    "body": "Fixes #3722",
    "head_branch": "issue_3722",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-exporter-zipkin-json (#3739)\n\nFixes #3722"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bce44ee515ce6a4e262",
    "number": 3738,
    "body": "Fixes #3721",
    "head_branch": "issue_3721",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-exporter-otlp-proto-common (#3738)\n\nFixes #3721"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bce44ee515ce6a4e263",
    "number": 3737,
    "body": "Fixes #3719",
    "head_branch": "issue_3719",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-opentracing-shim (#3737)\n\nFixes #3719"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bcf44ee515ce6a4e264",
    "number": 3736,
    "body": "Fixes #3718",
    "head_branch": "issue_3718",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd044ee515ce6a4e265",
    "number": 3735,
    "body": "Fixes #3717",
    "head_branch": "issue_3717",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-sdk (#3735)\n\nFixes #3717\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd144ee515ce6a4e266",
    "number": 3734,
    "body": "Fixes #3716",
    "head_branch": "issue_3716",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-propagator-b3 (#3734)\n\nFixes #3716"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd244ee515ce6a4e267",
    "number": 3733,
    "body": "Fixes #3715",
    "head_branch": "issue_3715",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-propagator-jaeger (#3733)\n\nFixes #3715"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd344ee515ce6a4e268",
    "number": 3712,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd344ee515ce6a4e269",
    "number": 3707,
    "body": "# Description\r\n\r\nThe example for auto-instrumentation of logs with the OTel Collector specifies a `batch` processor in the config:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/ac3c189ad40b3e482eda3cbfedd2d03312a20d4d/docs/examples/logs/otel-collector-config.yaml#L10-L11\r\n\r\nHowever the batch processor is not included in the logs pipeline:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/ac3c189ad40b3e482eda3cbfedd2d03312a20d4d/docs/examples/logs/otel-collector-config.yaml#L15-L17\r\n\r\nThis PR adds the batch processor to the pipeline (assuming it should be there, otherwise I would suggest L10-L11 to be removed 😊).\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran the [Docker container](https://github.com/open-telemetry/opentelemetry-python/blob/ac3c189ad40b3e482eda3cbfedd2d03312a20d4d/docs/examples/logs/README.rst?plain=1#L35-L38) and [Python example](https://github.com/open-telemetry/opentelemetry-python/blob/ac3c189ad40b3e482eda3cbfedd2d03312a20d4d/docs/examples/logs/README.rst?plain=1#L42) as per README instructions\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "docs/example-logs-batch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs(examples/logs): include batch processor in pipeline (#3707)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd444ee515ce6a4e26a",
    "number": 3705,
    "body": "1. Include message in RELEASING.md to fix SHA for failing main builds\r\n2. Change the ordering of validation of PR merging in release.yml to run",
    "head_branch": "fix-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix release scripts (#3705)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd544ee515ce6a4e26b",
    "number": 3704,
    "body": "Copy log updates from `release/v1.23.x-0.44bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.23.x-0.44bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Copy change log updates from release/v1.23.x-0.44bx (#3704)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd644ee515ce6a4e26c",
    "number": 3702,
    "body": "Prepare release 1.23.0/0.44b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.23.0-0.44b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prepare release 1.23.0/0.44b0 (#3702)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd744ee515ce6a4e26d",
    "number": 3701,
    "body": "Update version to `1.24.0.dev/0.45b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.24.0.dev-0.45b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.24.0.dev/0.45b0.dev (#3701)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd844ee515ce6a4e26e",
    "number": 3699,
    "body": "# Description\r\n\r\n`Message.SerializeToString()` returns bytes despite its name.\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e mypy`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-str-bytes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix type annotation for protobuf serialized data (#3699)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd944ee515ce6a4e26f",
    "number": 3698,
    "body": "# Description\r\n\r\nFixes bug where labels are wrongfully assigned to values because their order changed in input dictionary.\r\n\r\nFixes part of https://github.com/open-telemetry/opentelemetry-python/issues/3391. This does not fix missing labels, it only fixes the issue of labels being wrongfully assigned even if all labels are present (also empty string label values).\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTest metric:\r\n```\r\ntest_counter.add(1, {'cause': 'cause1', 'reason': 'reason1'})\r\ntest_counter.add(1, {'reason': 'reason2', 'cause': 'cause2'})\r\n```\r\nBefore:\r\n```\r\n# HELP test_counter_total counter used for testing\r\n# TYPE test_counter_total counter\r\ntest_counter_total{cause=\"reason1\",reason=\"cause1\"} 1.0\r\n# HELP test_counter_total counter used for testing\r\n# TYPE test_counter_total counter\r\ntest_counter_total{cause=\"cause2\",reason=\"reason2\"} 1.0\r\n```\r\n\r\nAfter:\r\n```\r\n# HELP test_counter_total counter used for testing\r\n# TYPE test_counter_total counter\r\ntest_counter_total{cause=\"cause1\",reason=\"reason1\"} 1.0\r\ntest_counter_total{cause=\"cause2\",reason=\"reason2\"} 1.0\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated -> where?\r\n",
    "head_branch": "Fix-bug-when-labels-are-ordered-differently",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: lzchen / name: Leighton Chen  (4c5a2a00037e7e61e6e93c72c614e46121d299eb, 970679c9d49959dfa0b5f37965bc82bd0327d6b7)</li><li>:white_check_mark: login: soundofspace  (f676245f0b325d5ccd5f7c2fd2afc947d3efafec, 364f70401c27768c83822c818cab33da147eb333, 729aa229df864cb7b678560d8ea5490a019a7154, 6a2fe89f0c30bc5da35f8298db6649cd970dfbdb, 18308dba5d6e7d4ceb5f5a4e4bc0b11cf661267a, 3f97bac72a871b85d604c0a209c35ba87369e936, 2c526cdf1b4debacb2693e8df3ceb1612133aee6, 19916f62d51bc3dac32f0fbeb2914d55589766c9, 9f8046f1d0cc7b16510d9323719870fb10fa0ebc, 833aceeb5c8d58fa413784a7dc5531e1727ca7cb)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (ef6fd85a42552ceae08c0d677601612c1c91fedc)</li></ul>",
      "Can you please add a test case?",
      "@lzchen ",
      "@soundofspace this PR needs a test case, marking it as a draft until it has been added.",
      "@lzchen not really sure why that build is failing because of this pr, seems like something unrelated to this, and not really sure how to fix it.",
      "> @lzchen not really sure why that build is failing because of this pr, seems like something unrelated to this, and not really sure how to fix it.\r\n\r\nProbably we just need to update the contrib test SHA, no worries, I have done so."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bd944ee515ce6a4e270",
    "number": 3685,
    "body": "Fixes #3671\r\n\r\nIf I just change `Exception` in `.pylintrc` to `builtins.Exception` I get these errors:\r\n\r\n```\r\n************* Module tests.error_handler.test_error_handler                                                                                                                                     \r\nopentelemetry-sdk/tests/error_handler/test_error_handler.py:33:16: W0719: Raising too general exception: Exception (broad-exception-raised)                \r\n************* Module opentelemetry.sdk.metrics._internal.aggregation\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/aggregation.py:950:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/aggregation.py:994:20: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/aggregation.py:1005:20: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/aggregation.py:1121:8: W0719: Raising too general exception: Exception (broad-exception-raised)\r\n************* Module opentelemetry.sdk.metrics._internal\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:409:20: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:450:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:475:20: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py:500:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\n************* Module opentelemetry.sdk.metrics._internal.instrument\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/instrument.py:57:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/instrument.py:60:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/instrument.py:88:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/instrument.py:91:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\n************* Module opentelemetry.sdk.metrics._internal.view\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/view.py:106:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/view.py:117:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\n************* Module opentelemetry.sdk.metrics._internal.exponential_histogram.mapping\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/exponential_histogram/mapping/__init__.py:43:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/exponential_histogram/mapping/__init__.py:46:12: W0719: Raising too general exception: Exception (broad-exception-raised)\r\n************* Module opentelemetry.sdk.metrics._internal.export\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/export/__init__.py:241:20: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/export/__init__.py:272:20: W0719: Raising too general exception: Exception (broad-exception-raised)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/export/__init__.py:312:20: W0719: Raising too general exception: Exception (broad-exception-raised)\r\n************* Module tests.test_shim\r\nshim/opentelemetry-opentracing-shim/tests/test_shim.py:499:16: W0719: Raising too general exception: Exception (broad-exception-raised)\r\n```\r\n\r\nWhat I think is happening here is that we have always had the wrong value (`Exception`) in `.pylintrc`. When I changed it to `builtins.Exception` that wrong value gets fixed and `pylint` then considers any `Exception` being raised as an error.\r\n\r\nSo far we have been freely raising `Exception`s all over the place. I think we have been ok with that so what I am doing here is just to ignore that error.",
    "head_branch": "issue_3671",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow broad exceptions in pylint (#3685)\n\nFixes #3671"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bda44ee515ce6a4e271",
    "number": 3683,
    "body": "Fixes #3682",
    "head_branch": "issue_3682",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update contrib SHA (#3683)\n\nFixes #3682"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bdb44ee515ce6a4e272",
    "number": 3681,
    "body": "# Description\r\n\r\nAdds a OTLP HTTP/JSON exporter. Currently only exports trace data, but can be expanded to add metrics and logs too.\r\n\r\nFixes #1003 \r\n\r\nNOTE: I've created as a draft to gather feedback and will add more tests. Also needs lint rules applied too.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Add simple Unit Test to verify JSON output, want to add more\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "mike/otlp-json",
    "is_a_fork": true,
    "comments": [
      "exporter-otlp-json can be just copy of exporter-otlp-proto-http and just replace these lines:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/2b9dcfc5d853d1c10176937a6bcaade54cda1a31/exporter/opentelemetry-exporter-otlp-proto-http/src/opentelemetry/exporter/otlp/proto/http/trace_exporter/__init__.py#L136\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/2b9dcfc5d853d1c10176937a6bcaade54cda1a31/exporter/opentelemetry-exporter-otlp-proto-http/src/opentelemetry/exporter/otlp/proto/http/metric_exporter/__init__.py#L181\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/2b9dcfc5d853d1c10176937a6bcaade54cda1a31/exporter/opentelemetry-exporter-otlp-proto-http/src/opentelemetry/exporter/otlp/proto/http/_log_exporter/__init__.py#L138\r\n\r\ninto `json_format.MessageToJson(encode_xxx(...), indent=None)`.",
      "Or can we just add `json` option to otlp-proto-http exporter? They are very close.\r\nHow other languages implement them?",
      "@MikeGoldsmith are you still working on this PR?",
      "Hi @ocelotl - I had the intention of keeping this going but have struggled to get back to it. \n\nIt's probably best to close this PR and unassign me from the issue. If I find I get more time and it's still available, I'll put my hand up again. \n\nThanks"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bdc44ee515ce6a4e273",
    "number": 3679,
    "body": "# Description\r\n\r\nThe backoff dependency doesn't appear to have been needed as used, and it has caused at least one reported dependency conflict for an OTel Python user/developer. This change removes the dependency and replaces it with a function.\r\n\r\nFixes #3680\r\n",
    "head_branch": "backoff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove 'backoff' dependency and use a function instead (#3679)\n\n* replace 'backoff' dependency with a simple implementation\r\n\r\n* replace 'backoff' dependency with a function\r\n\r\n* Add missing license\r\n\r\n* Fix lint\r\n\r\n---------"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bdd44ee515ce6a4e274",
    "number": 3675,
    "body": "# Description\r\n\r\nAdd standard logging information as standard semantic conventions when emitting logs.\r\n\r\n## Type of change\r\n\r\n- New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Unit tests `test_log_record_user_attributes`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeargs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add code.lineno, code.function and code.filepath to all logs (#3675)\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bde44ee515ce6a4e275",
    "number": 3673,
    "body": "# Description\r\n\r\nAdded support for log message formatters to `opentelemetry.sdk._logs._internal.LogHandler`.\r\n\r\nFixes #3664\r\n\r\n## Type of change\r\n\r\n- added a `self.format` call on the original `LogRecord` to the code in the LogHandler's `emit` method, the result is added as the `body` field of the otel-`LogRecord`.\r\n- removed code that filtered out all standard-`LogRecord` fields from getting added to the otel-`LogRecord`. The only values that still get filtered are those that are considered \"private\" by the `LogRecord` API (see a note \"You shouldn’t need to format this yourself\" in https://docs.python.org/3/library/logging.html#logrecord-attributes) or only get used to cache results.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\nThe documentation should include an example which shows how exactly adding a formatter changes the result of what gets emitted to the receiver. I think there is some element of surprise here, because the standard procedure is that, if a formatter was set, the handler emits a string whose content is wholly dictated by said formatter.\r\n\r\nThe breaking change is due to me removing a check where a non-string `msg` attribute in the original `LogRecord` will be attached to the otel-`LogRecord` as-is. Now, the `format` call will always return a string, even if no formatter was set and `args` is empty. I believe this is the right behavior, makes the codebase easier to maintain. Code that looked like this\r\n\r\n```python\r\nlog.info({\"message\": \"foo\", \"context\": \"bar\"})\r\n```\r\n\r\ncould before this change be interpreted as a complex data structure by some log-renderer. I'd argue that the \"right way of logging\" (even without the changes in this PR) would be the following:\r\n\r\n```python\r\nlog.info(\"foo\", extra={\"context\": \"bar\"})\r\n```\r\n\r\n# How Has This Been Tested?\r\n\r\nI wrote three new unit tests, and updated a few other ones that were broken after the change.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\n## Open Discussion Points\r\n- change type of `opentelemetry.sdk._logs._internal.LogRecord.body` to `Optional[str]` now? I believe not as it would violate the `LogRecordAPI`, but would like to make sure\r\n- is the breaking change worth it, and the migration path reasonable enough?\r\n- what exactly should be documented?\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: a-recknagel / name: Arne  (a01977269777893316ea132b981c73946b49540e, 169931bbad01fd10a19597f1fc42f485bac8b5c4, 82993a3fb4ae08b880240aa32c7a288c71ace1c1, 943c9de2d83bdc07b6151cc3c8c4ff6e9cf4437e, 05525906286ae668a497796234ad61e9cffd24d1, 772be5121c61cbb51e76dc8ae6b1b816e8ed6f14, b0a5a8d287d8549c1214155a4beefc994b388998, b6ed8bfe20ebc44b5cadc06796cdf26306f78ac7, de1d49b8b91fe662f435dbf1f79e0609f8a87efc, 6ad9d1aec13089b6b1419e7bf97265e473839f26, c9b48cffbc93472d226f1835314a503ae6ea506e, 79ce99aea6ab00ccf8ab75bad5b6e2844de0b6ba, 222fb9b0ea9aecbff2fddf0464a7fb8b0fd6fb9f, 8ecd6a7375b6709eb296453ef430d9f42760dd57, 6ed248f313fb5c40842bb6b1231845dfab0f725f, a3ec2f0773797d03fd67df21536d958439097a6a, cbc0920632d68df647c76aba882644259ed284b1, bc2f8a2b91ff2157ba8ce3a1e3d88e0f2e19ed71, b9f0de9a93cb8185e0e8e7d511d7e5e8c026d5f1, 3180964b6bbe1a26fbe0730ff91c3ca177576b81, aace0cbfa6f705e84c393917ce7e6d4a1029097a, 0b8c9c5ee9cfa8d60223193c13740c3be1e61bab, eaf328d82e3580a96ef342c7b12c2641173bbd23, 4a2a9840d97b706df0db2ee119bac7da45c3a08a, 2126fe8531ba59c429f9b187e8fa716f90d51517, d731803107212127381b23b509548365c79774c9, 484615db532fac998a2f6f53b0584335643a9c80, 23eb08ba40de5c65f493a71bff50a4c2c5d10f19)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (5b7b1956888b37be20aa42b65b4162312aafa185, 426abefc61a8cb7c3aa004fe9b9ac9837ee66bd0)</li></ul><!-- Date Modified: 2024-08-28 11:39:52.972520 -->",
      "I think this is against the semantic conventions. To understand what I mean, see https://github.com/open-telemetry/opentelemetry-python/pull/3675 in otel we have standard semantic conventions for things like `lineno` and we should follow them and not add everything as python defined them.",
      "@bogdandrutu Yeah it is. Scanning over `SpanAttributes`, there probably are a bunch more like `thread.id`. Is it ok if I just create an issue for it, something like \"convert logrecord attribute into their correct semantic convention names\"?",
      "> @bogdandrutu Yeah it is. Scanning over SpanAttributes, there probably are a bunch more like thread.id. Is it ok if I just create an issue for it, something like \"convert logrecord attribute into their correct semantic convention names\"?\r\n\r\nIt is ok to create an issue, but would be worried merging this PR since then it becomes a breaking change.\r\n",
      "In that case I'll try to find all semantic conventions that exist for the standard logrecord attributes and add them with the right names at least. It might actually be just the `code.` and `thread.` ones.",
      "Few that I have in mind:\r\n* https://github.com/open-telemetry/semantic-conventions/blob/main/docs/exceptions/exceptions-logs.md \r\n* https://github.com/open-telemetry/semantic-conventions/blob/main/docs/general/attributes.md#source-code-attributes\r\n* https://github.com/open-telemetry/semantic-conventions/blob/main/docs/general/attributes.md#general-thread-attributes\r\n",
      "Ok, I've updated my fork with your changes and suggestions.",
      "@bogdandrutu @mariojonke if it's not a bother, I'd like to ask if the PR in its current state could be approved, or if there is something left that I should improve on. Thank you for your time.",
      "Thank you all for contributing to the fix. Having formatting work properly is really important. \r\n\r\nCould this change be reviewed and prioritized again?",
      "@a-recknagel \r\n\r\nThanks for picking this up and apologies for the late review.\r\n\r\n>  I'd argue that the \"right way of logging\" (even without the changes in this PR) would be the following:\r\n\r\nIs the proposed change (doesn't seem like it is in this pr), to map those types to the `extra` field? How would this work for non-map data structures? Perhaps we can tackle the issue of handling \"Any\" type body's separate from log formatting. Will bring it up in the Python sig if we want to explore following this convention.\r\n\r\nNot too familiar with `format` but how does `self.format(record)` handle when `msg` is for an example a `dict`? As long as those cases are covered by the formatter and there is a default behavior if it is erroneous I believe the breaking change is acceptable.",
      "> @a-recknagel\r\n> \r\n> Thanks for picking this up and apologies for the late review.\r\n\r\nNo worries, I'm patient =)\r\n\r\n> \r\n> > I'd argue that the \"right way of logging\" (even without the changes in this PR) would be the following:\r\n> \r\n> Is the proposed change (doesn't seem like it is in this pr), to map those types to the `extra` field? \r\n\r\nNot 100% sure if I understand this question correctly, but this way of logging `log.info(\"foo\", extra={\"context\": \"bar\"})` [is supported already](https://github.com/python/cpython/blob/1a84bdc2371ada60c01c72493caba62c9860007b/Lib/logging/__init__.py#L1628-L1632), and will put a custom attribute `context` on an otel-logrecord which will get emitted. What I wanted to illustrate with that example was how to migrate away from this logging pattern `log.info({\"message\": \"foo\", \"context\": \"bar\"})`, since my change would break the current behavior of \"the body of a log-record can be a string, list, dict, ...\" to \"the body of a log-record is a string.\"\r\n\r\nIn other words, if you log a dict to create a log-record-body of `{\"message\": \"foo\", \"context\": \"bar\"}`, what you should be doing instead is to just log a string `\"foo\"`, have that be the body, and add `context: \"bar\"` as an attribute to the log-record by providing it to the `extra` keyword of  your log-call.\r\n\r\n> How would this work for non-map data structures? \r\n\r\nIt wouldn't, if your log is a list/tuple/set, there's no migration path. I'd call into question if this is a real use case, but if it is then it'd certainly be an issue.\r\n\r\n> Perhaps we can tackle the issue of handling \"Any\" type body's separate from log formatting. \r\n\r\nThat would get a -1 if I were a maintainer, but I'm not.\r\n\r\n> Will bring it up in the Python sig if we want to explore following this convention.\r\n\r\nAre those open? If yes, it might be easiest if I could join the one where this matter would be discussed.\r\n\r\n> Not too familiar with `format` but how does `self.format(record)` handle when `msg` is for an example a `dict`? As long as those cases are covered by the formatter and there is a default behavior if it is erroneous I believe the breaking change is acceptable.\r\n\r\nDepends on the log-record-class, a formatter will call their `getMessage`-method and treat the result as a string representing the record's message. For the default-log-record, it's just [this](https://github.com/python/cpython/blob/1a84bdc2371ada60c01c72493caba62c9860007b/Lib/logging/__init__.py#L398).\r\n\r\n---\r\n\r\nAnyhow, the way I personally reason about the breaking change is that I'm not trying to provide a feature here, I'm fixing a bug. The python-implementation for otel-logging ties into python's standard-lib-logging-engine, which does include log-formatting as a de-facto enforced step. Skipping it in this logging-implementation was a bug, so adding it in is not a feature.",
      "@a-recknagel \r\n\r\n> Are those open? If yes, it might be easiest if I could join the one where this matter would be discussed.\r\n\r\nYes! These are open to everyone. Check the opentelemetry [calendar](https://github.com/open-telemetry/community?tab=readme-ov-file#calendar) for the link to the Python SIG, we meet every Thurs 9am PST.\r\n\r\nThis week's instance will be cancelled due to the July 4th holiday but I've added your topic to the July 11th occurence the week after. You can see the SIG Notes [here](https://docs.google.com/document/d/1CIMGoIOZ-c3-igzbd6_Pnxx1SjAkjwqoYSUWxPY8XIs/view)",
      "@lzchen @xrmx I applied the requested changes, the only attributes that are by default on a logrecord are those that are covered by a semantic convention, i.e. `thread.id`, `code.filepath`, `code.lineno`, `code.function`, and `thread.name`.",
      "Discussed in 07/11/2024 SIG. Today we have an exclude list of attributes (which essentially includes all of python log record attributes) that are ignored when mapping to Otel LogRecord attributes. We do recognize that the transformation of python logging record to Otel LogRecord is confusing for Python users (especially ones that are coming in to use formatters expecting certain attributes to exist). We believe this issue of discovery and transparency is a separate issue from the inability to allow formatting of logrecords. We can address the discovery issue separately (whether it be part of this PR or not is up to @a-recknagel :) or you can open up a separate tracking issue to maybe improve our documentation). The PR as is is valuable in itself without introducing any attribute changes. @a-recknagel if you agree with this guidance, please update the pr with any changes you think are necessary to reflect the conclusion and let people know when it is ready to review. Thanks for your hard work!",
      "@lzchen now that I read the pr again, I guess we should have also discussed the matter of the breaking change, my bad. Should it be picked up in the next SIG again? That would give me a bit of time to write the docs, too.",
      "@a-recknagel \r\n\r\nYes of course! Feel free to add your topic to the agenda for the Python. Thanks a lot for your patience and hard work on this issue :)",
      "> \"Fixes 3673\"\r\nThis PR says it fixes itself. Is there a second issue that was supposed to be linked here besides 3664?",
      "> > \"Fixes 3673\"\r\n> > This PR says it fixes itself. Is there a second issue that was supposed to be linked here besides 3664?\r\n\r\nI don't know why it's there, it's not part of the issue text so I can't remove it.\r\n",
      "@lzchen @jeremydvoss I have removed the code which changed the attributes on log-records in order to keep this PR more in line with its intended purpose of adding log-formatting, and only that. I hope this will make it easier to add this change to the next release.",
      "I recommend closing this PR since https://github.com/open-telemetry/opentelemetry-python/pull/4166 has been merged. The other changes that were in the earlier iterations of this PR can be separated into a new PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bde44ee515ce6a4e276",
    "number": 3672,
    "body": null,
    "head_branch": "rmunnec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[chore]: avoid unnecessary temporary variables (#3672)\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bdf44ee515ce6a4e277",
    "number": 3670,
    "body": "This test fails randomly when ran under those conditions\r\n\r\nFixes #3669",
    "head_branch": "issue_3669",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Skip test for PyPy and Windows (#3670)\n\nThis test fails randomly when ran under those conditions\n\nFixes #3669"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be044ee515ce6a4e278",
    "number": 3668,
    "body": "Fixes #3667",
    "head_branch": "issue_3667",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Drop support for 3.7 (#3668)\n\n* Drop support for 3.7\r\n\r\nFixes #3667\r\n\r\n* Remove 37"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be144ee515ce6a4e279",
    "number": 3666,
    "body": "Fixes #3665",
    "head_branch": "issue_3665",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update proto version in README (#3666)\n\nFixes #3665"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be244ee515ce6a4e27a",
    "number": 3662,
    "body": "Fixes #3651 ",
    "head_branch": "issue_3651",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be344ee515ce6a4e27b",
    "number": 3661,
    "body": "Fixes #3660\r\n\r\n# Description\r\n\r\nAdds a callback to ConcurrentMultiSpanProcessor. This allows the futures to execute without blocking the execution of the main requests.\r\n\r\nFixes #3660 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan locally with Zipkin exporter pointed to non-routable address: `10.255.255.1`.\r\n\r\nPrevious behavior is that the trace publish call would block until a timeout exception is raised.\r\n\r\nNew behavior is that the future executes in the background and the user request completes without waiting for the timeout.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "callback",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3661/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3661/#/?version=2' target='_blank'>:x:</a> - login: @dleen / name: David Leen . The commit (753e8ed45b2087665e6c3fe817a33008f6239f5c) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3661/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be344ee515ce6a4e27c",
    "number": 3659,
    "body": "# Description\r\n\r\nFixes #3676\r\n\r\nLabels of the `target_info` metric must be exported in a string representation.\r\n\r\n\r\nFurthermore the `test_target_info_enabled_by_default` contained some dead code due to a wrong list slicing.\r\n`python_list[:0]` returns always an empty list.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nRan the unit tests.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "prometheus_fix_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prometheus Exporter string representation for target_info labels (#3659)\n\n* Prometheus Exporter fix test_target_info_enabled_by_default\r\n\r\ntest_target_info_enabled_by_default contained some dead code due to a wrong list slicling\r\n\r\n* Prometheus exporter string representation for target_info labels\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be444ee515ce6a4e27d",
    "number": 3658,
    "body": "Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.19.4 to 3.19.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/protocolbuffers/protobuf/releases\">protobuf's releases</a>.</em></p>\n<blockquote>\n<h2>Protocol Buffers v3.19.5</h2>\n<h1>C++</h1>\n<ul>\n<li>Reduce memory consumption of MessageSet parsing</li>\n<li>This release addresses a <a href=\"https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-8gq9-2x98-w8hf\">Security Advisory for C++ and Python users</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/b464cfbee18c71c40e761a5273ad369f3547294b\"><code>b464cfb</code></a> Updating changelog</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/40859fb1c03bfbffe10cdb8009d08ff7e8d8a2f2\"><code>40859fb</code></a> Updating version.json and repo version numbers to: 19.5</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/3b175f173903c934f5ba0d1726b430ddbce7ea56\"><code>3b175f1</code></a> Merge pull request <a href=\"https://redirect.github.com/protocolbuffers/protobuf/issues/10543\">#10543</a> from deannagarcia/3.19.x</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/c05b5f3755af2f6a05c37cb0930373ac3e37463f\"><code>c05b5f3</code></a> Add missing includes</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/0299c03005fbfe086d8394fb7a873a8a21fe327f\"><code>0299c03</code></a> Apply patch</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/0a722f1573e629f8c3adc8fd4d298522b667548c\"><code>0a722f1</code></a> Update version.json with &quot;lts&quot;: true (<a href=\"https://redirect.github.com/protocolbuffers/protobuf/issues/10533\">#10533</a>)</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/d5eb60a56081930c706198e459480ab3204e435c\"><code>d5eb60a</code></a> Merge pull request <a href=\"https://redirect.github.com/protocolbuffers/protobuf/issues/10530\">#10530</a> from protocolbuffers/deannagarcia-patch-6</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/6cf1f78c27c15ae66fb7714798c82de24d4aa2a8\"><code>6cf1f78</code></a> Update version.json</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/97fc8447c7b2441bff9b5be02d0964bfe4926302\"><code>97fc844</code></a> Merge pull request <a href=\"https://redirect.github.com/protocolbuffers/protobuf/issues/10504\">#10504</a> from deannagarcia/3.19.x</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/29d60a2fa478d3c222a615c39cbf29918f194877\"><code>29d60a2</code></a> Add version file</li>\n<li>Additional commits viewable in <a href=\"https://github.com/protocolbuffers/protobuf/compare/v3.19.4...v3.19.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=protobuf&package-manager=pip&previous-version=3.19.4&new-version=3.19.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/protobuf-3.19.5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump protobuf from 3.19.4 to 3.19.5 in /docs/examples/fork-process-model/flask-uwsgi (#3658)\n\nBumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.19.4 to 3.19.5.\r\n- [Release notes](https://github.com/protocolbuffers/protobuf/releases)\r\n- [Changelog](https://github.com/protocolbuffers/protobuf/blob/main/protobuf_release.bzl)\r\n- [Commits](https://github.com/protocolbuffers/protobuf/compare/v3.19.4...v3.19.5)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: protobuf\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be544ee515ce6a4e27e",
    "number": 3657,
    "body": "Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.19.4 to 3.19.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/protocolbuffers/protobuf/releases\">protobuf's releases</a>.</em></p>\n<blockquote>\n<h2>Protocol Buffers v3.19.5</h2>\n<h1>C++</h1>\n<ul>\n<li>Reduce memory consumption of MessageSet parsing</li>\n<li>This release addresses a <a href=\"https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-8gq9-2x98-w8hf\">Security Advisory for C++ and Python users</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/b464cfbee18c71c40e761a5273ad369f3547294b\"><code>b464cfb</code></a> Updating changelog</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/40859fb1c03bfbffe10cdb8009d08ff7e8d8a2f2\"><code>40859fb</code></a> Updating version.json and repo version numbers to: 19.5</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/3b175f173903c934f5ba0d1726b430ddbce7ea56\"><code>3b175f1</code></a> Merge pull request <a href=\"https://redirect.github.com/protocolbuffers/protobuf/issues/10543\">#10543</a> from deannagarcia/3.19.x</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/c05b5f3755af2f6a05c37cb0930373ac3e37463f\"><code>c05b5f3</code></a> Add missing includes</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/0299c03005fbfe086d8394fb7a873a8a21fe327f\"><code>0299c03</code></a> Apply patch</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/0a722f1573e629f8c3adc8fd4d298522b667548c\"><code>0a722f1</code></a> Update version.json with &quot;lts&quot;: true (<a href=\"https://redirect.github.com/protocolbuffers/protobuf/issues/10533\">#10533</a>)</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/d5eb60a56081930c706198e459480ab3204e435c\"><code>d5eb60a</code></a> Merge pull request <a href=\"https://redirect.github.com/protocolbuffers/protobuf/issues/10530\">#10530</a> from protocolbuffers/deannagarcia-patch-6</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/6cf1f78c27c15ae66fb7714798c82de24d4aa2a8\"><code>6cf1f78</code></a> Update version.json</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/97fc8447c7b2441bff9b5be02d0964bfe4926302\"><code>97fc844</code></a> Merge pull request <a href=\"https://redirect.github.com/protocolbuffers/protobuf/issues/10504\">#10504</a> from deannagarcia/3.19.x</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/29d60a2fa478d3c222a615c39cbf29918f194877\"><code>29d60a2</code></a> Add version file</li>\n<li>Additional commits viewable in <a href=\"https://github.com/protocolbuffers/protobuf/compare/v3.19.4...v3.19.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=protobuf&package-manager=pip&previous-version=3.19.4&new-version=3.19.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/protobuf-3.19.5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump protobuf from 3.19.4 to 3.19.5 in /docs/examples/fork-process-model/flask-gunicorn (#3657)\n\nBumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.19.4 to 3.19.5.\r\n- [Release notes](https://github.com/protocolbuffers/protobuf/releases)\r\n- [Changelog](https://github.com/protocolbuffers/protobuf/blob/main/protobuf_release.bzl)\r\n- [Commits](https://github.com/protocolbuffers/protobuf/compare/v3.19.4...v3.19.5)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: protobuf\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be644ee515ce6a4e27f",
    "number": 3656,
    "body": "In `start_as_current_span`, there is an intermediate context variable called `span_context` with the same value as `span` in scope. Unfortunately, this name is misleading because the type of the object is not that of a span context but that of a span. This change removes the unnecessary, misnamed context variable.\r\n\r\nNo issue created because the change is so small, but can create one.",
    "head_branch": "v_rename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove 'span_context' intermediate variable in start_as_current_span (#3656)\n\n* remove misnamed 'span_context' intermediate variable\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n---------"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be744ee515ce6a4e280",
    "number": 3652,
    "body": "# Description\r\n\r\nSchema URL was missed in Resources when using OTLP exporters\r\nThe specified issue says only about the logs, but in fact it was missed in the traces and in the metrics\r\nFixes #3553 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nCheck specified issue for example\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added (actually not added, but updated)\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add_missing_resource_schema_url_in_otlp_exporters",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: hirotasoshu / name: Maksim Zayakin  (34412f628771e39eb0295bdc57c9642ce12b19ef, a46b03e83094495b85bcc06a121b48a184c61db7, e92a05b7e4605bb1fc2252522baafc4d8d40f2b9)</li></ul>"
    ],
    "commit_messages": [
      "Fix: Add missing Resource SchemaURL in otlp exporters (#3652)\n\n* fix(otlp-exporter): add missing resource schema url\r\n\r\n* test(otlp-exporter): add resource schema url to tests\r\n\r\n* chore: update changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be744ee515ce6a4e281",
    "number": 3650,
    "body": "# Description\r\n\r\nThis commit simply removes two useless shebang (`#!`) lines.\r\n\r\nThese files do not have the executable bit set in their filesystem permissions, so the shebang lines are not useful.\r\n\r\nFixes #3643.\r\n\r\nThis approach was requested in https://github.com/open-telemetry/opentelemetry-python/issues/3643#issuecomment-1910713652.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n**none of the listed types**\r\n\r\n# How Has This Been Tested?\r\n\r\n**tested by inspection only**\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated **not needed**\r\n- [ ] Unit tests have been added **not applicable**\r\n- [ ] Documentation has been updated ** not needed**\r\n",
    "head_branch": "useless-shebangs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove useless shebang lines (#3650)\n\nThese files do not have the executable bit set in their filesystem\r\npermissions, so the shebang lines are not useful.\r\n\r\nFixes #3643."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be844ee515ce6a4e282",
    "number": 3648,
    "body": "# Description\r\n\r\nAdds support for OTEL_SDK_DISABLED environment variable. If set to \"true\", the SDK will do no operations.\r\n\r\nFixes #3184 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran locally in console with the help of the following code.\r\n```\r\nfrom opentelemetry.sdk.resources import SERVICE_NAME, Resource\r\n\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\nfrom opentelemetry.sdk.trace.export import BatchSpanProcessor, ConsoleSpanExporter\r\n\r\nfrom opentelemetry import metrics\r\nfrom opentelemetry.sdk.metrics import MeterProvider\r\nfrom opentelemetry.sdk.metrics.export import PeriodicExportingMetricReader, ConsoleMetricExporter\r\n\r\nresource = Resource(attributes={\r\n    SERVICE_NAME: \"your-service-name\"\r\n})\r\n\r\ntraceProvider = TracerProvider(resource=resource)\r\nprocessor = BatchSpanProcessor(ConsoleSpanExporter())\r\ntraceProvider.add_span_processor(processor)\r\ntrace.set_tracer_provider(traceProvider)\r\n\r\nreader = PeriodicExportingMetricReader(ConsoleMetricExporter())\r\nmeterProvider = MeterProvider(resource=resource, metric_readers=[reader])\r\nmetrics.set_meter_provider(meterProvider)\r\n\r\ntracer = trace.get_tracer(\"test tracer\")\r\nwith tracer.start_as_current_span(\"test span\"):\r\n    print(1)\r\n\r\n```\r\nOutput in console:\r\n```\r\n$ export OTEL_SDK_DISABLED=true\r\nSDK is disabled.\r\n1\r\n$ unset OTEL_SDK_DISABLED\r\n1\r\n{\r\n    \"name\": \"test span\",\r\n    \"context\": {\r\n        \"trace_id\": \"0x19b1ce33587fbe0064b072bde41e1e5d\",\r\n        \"span_id\": \"0xaabfc3da341721d4\",\r\n        \"trace_state\": \"[]\"\r\n    },\r\n    \"kind\": \"SpanKind.INTERNAL\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2024-01-24T13:40:37.576284Z\",\r\n    \"end_time\": \"2024-01-24T13:40:37.576361Z\",\r\n    \"status\": {\r\n        \"status_code\": \"UNSET\"\r\n    },\r\n    \"attributes\": {},\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"attributes\": {\r\n            \"service.name\": \"your-service-name\"\r\n        },\r\n        \"schema_url\": \"\"\r\n    }\r\n}\r\n```\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "3184-support-for-env-var-otel-sdk-disabled",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: lzchen / name: Leighton Chen  (43fd85b67da250604004c4dead305e4032a43b77)</li><li>:white_check_mark: login: puskardeb / name: Puskar Deb  (bfd45e1261d9947f7bb6e972e0cdee7d0e2f79af, f527bf00c4da877beccc31ff85c317e28bb7b395, 4fadaa1358e73e0bebc104fd0897e36fdff1c33a, a89034dd3e94ab81efe3830834bba0b85444f611, 383a58967edb9797af1fb08111df950d656b3ed1)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (1582401784aa9b05b576ff0f7dba5e5cefa65c83, b5a3018b45b9207c3a1195b737d87c2bce391c6a)</li></ul>",
      "I don't think this should go in the main SDK code. My understanding is this should be targeted for disabling the auto instrumentation part.",
      "> I don't think this should go in the main SDK code. My understanding is this should be targeted for disabling the auto instrumentation part.\r\n\r\nI went through the [environment variable specification](https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/#general-sdk-configuration) and could not find any reference that it should only be for auto instrumentation. Also, had a look at the Javascript library for opentelemetry. Looking at their code for disabling via environment, it did not look as if it is only for auto instrumentation. However I may have understood incorrectly or maybe the implementation of that library is incorrect. Happy to discuss about this.",
      "I looked at the Java support for this, which was the group that proposed this env to the specification. And my understanding is that it should be applied to auto-instrumentation. Let me ask a question in the specification/java slack channel.",
      "Hi @srikanthccv, did you get some time to ask around about this?",
      "@srikanthccv \r\n\r\n@srikanthccv \r\n\r\nIt does seem like it's being used in the SDK and not autoinstrumentation for [Java](https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/src/main/java/io/opentelemetry/sdk/autoconfigure/AutoConfiguredOpenTelemetrySdkBuilder.java#L446) so this seems like an appropriate change.",
      "@lzchen Thanks for the comments. I have updated the PR based on your comments. Also, I think this PR needs a label of \"Approve Public API check\" which I don't know how to add. If you or someone else can help me out with this, I would be grateful.",
      "Sorry for the lack of response here and yes you are correct.",
      "@puskardeb \r\n\r\nPlease fix the build issues and then we can get this merged!",
      "@lzchen  Regarding the pylint errors, I am having a bit of trouble figuring out why I am getting the error. I have suppressed the error, however if you think there is a better way to resolve this, please feel free to opine. As for the mypy errors, I believe it is not related to my change, I am getting the errors on the main branch when I run tox locally on my setup.",
      "@puskardeb \r\n\r\nmypy errors should be fixed with [this](https://github.com/open-telemetry/opentelemetry-python/pull/3776). Please rebase and we can merge this :)",
      "@lzchen I have rebased my changes. Thanks :)"
    ],
    "commit_messages": [
      "Adds support OTEL_SDK_DISABLED environment variable (#3648)\n\n* Adds support OTEL_SDK_DISABLED environment variable\r\n\r\n* Pass schema_url and version to NoOpMeter and NoOpLogger, implement comments from review\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Fix lint error\r\n\r\n* Suppress lint errors due to returning a NoOpTracer when SDK is disabled\r\n\r\n---------\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200be944ee515ce6a4e283",
    "number": 3647,
    "body": "Attempted to add traceback.format_exc() to solve issue with exceptions.\r\n\r\nFixes #2683\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\nAdded small try and except, and new line of code to log the exceptions for debugging purposes\r\n\r\nFixes # (issue)\r\nImplemented exception debugging\r\n## Type of change\r\nAdded try and except block\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\nAccording to replication of the issue, and tests by the issuer, the issuer describes an error in passing exceptions during exception handling. The original issue can be found here: https://github.com/open-telemetry/opentelemetry-python/issues/2683\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ x ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This would be a bugfix and thus, need a CHANGELOG entry.",
      "Please make the title of this PR more descriptive of the issue being fixed.",
      "I made the corresponding changelog entry here - https://github.com/open-telemetry/opentelemetry-python/commit/4079a3c5c71ebee8c12f11ea41de9d659668e16f",
      "Please always run `tox` before submitting a PR. I am marking this PR as draft, mark it as ready for review when you have a PR that passes the basic tests.",
      "This PR needs changes that prove they are solving the issue, marking it as draft until this has been done."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bea44ee515ce6a4e284",
    "number": 3645,
    "body": "# Description\r\n\r\nAdds timeout catch to resource detector instead of a misleading warning with a blank exception. However, it seems concurrent.futures does not allow you to interrupt a task even after it has timed out. So, a badly written detector could still cause an application to hang.\r\n\r\nPartially fixes #3644\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests and manually.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "resource-detector-timeout-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve Resource Detector timeout messaging (#3645)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200beb44ee515ce6a4e285",
    "number": 3642,
    "body": "# Description\r\n\r\nIn the test dependencies for opentelemetry-exporter-otlp-proto-http, allow `responses >= 0.22.0` rather than `responses == 0.22.0`.\r\n\r\nThese tests use responses in a very straightforward way, and it’s unlikely that they will be affected by any future breaking changes; meanwhile, allowing newer versions helps with compatibility with newer Python interpreter versions and makes distribution packagers’ lives easier.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n**none of the listed types**\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n\r\n\r\nI tested this in a virtual environment as follows:\r\n\r\n```\r\ngh repo clone open-telemetry/opentelemetry-python\r\ncd opentelemetry-python\r\npython3.11 -m venv _e\r\n. _e/bin/activate\r\ncd opentelemetry-proto\r\npip install .\r\ncd ../opentelemetry-api\r\npip install .\r\ncd ../opentelemetry-semantic-conventions\r\npip install .\r\ncd ../opentelemetry-sdk\r\npip install .\r\ncd ../tests/opentelemetry-test-utils\r\npip install .\r\ncd ../../exporter/opentelemetry-exporter-otlp-proto-common\r\npip install .\r\ncd ../opentelemetry-exporter-otlp-proto-http\r\npip install -e '.[test]'\r\npip install pytest\r\npython -m pytest\r\n```\r\n\r\nAll tests passed.\r\n\r\n```\r\n============================== 26 passed in 0.17s ==============================\r\n```\r\n\r\nThe version of `responses` installed in the virtual environment was 0.24.1, which wouldn’t have been permitted before this PR.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated **This doesn’t seem like it deserves a changelog entry. Let me know if I need to add one.**\r\n- [ ] Unit tests have been added **N/A, covered by existing tests**\r\n- [ ] Documentation has been updated **N/A**\r\n",
    "head_branch": "loosen-responses",
    "is_a_fork": true,
    "comments": [
      "Can you pin the current upper version that works? I would prefer tests not to fail randomly because of breaking changes. They can always be updated when there is a need again in future.",
      "> Can you pin the current upper version that works? I would prefer tests not to fail randomly because of breaking changes. They can always be updated when there is a need again in future.\r\n\r\nLike `>= 0.22.0, < 0.25`? Sure, I can do that if you prefer. I’ll need to remove the upper bound in the Fedora Linux distribution package so that I don’t have to keep sending follow-up PR’s every time the system `python-responses` package gets a minor-version update, but I can work with that."
    ],
    "commit_messages": [
      "Don’t pin an exact version of responses for testing (#3642)\n\n* Don’t pin an exact version of responses for testing\r\n\r\nIn the test dependencies for opentelemetry-exporter-otlp-proto-http,\r\nallow `responses >= 0.22.0` rather than `responses == 0.22.0`.\r\n\r\nThese tests use responses in a very straightforward way, and it’s\r\nunlikely that they will be affected by any future breaking changes;\r\nmeanwhile, allowing newer versions helps with compatibility with newer\r\nPython interpreter versions and makes distribution packagers’ lives\r\neasier.\r\n\r\n* Upper-bound responses test dependency to the current minor release\r\n\r\nAs requested in:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/3642#issuecomment-1904877072\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bec44ee515ce6a4e286",
    "number": 3641,
    "body": "# Description\r\n\r\nCurrently, `opentelemetry-opentracing-shim` depends on `opentracing` version 2.x,\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/975733c71473cddddd0859c6fcbd2b02405f7e12/shim/opentelemetry-opentracing-shim/pyproject.toml#L31\r\n\r\nbut for testing, it pins version 2.2.x,\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/975733c71473cddddd0859c6fcbd2b02405f7e12/shim/opentelemetry-opentracing-shim/pyproject.toml#L37\r\n\r\nI don’t know if this was intentional, or if the goal was to allow 2.x versions *no less than* 2.2.x, but in any case it seems to make sense to test with the most current version allowed by the runtime dependency.\r\n\r\nThis PR assumes that SemVer `^2.2.0` is what was really intended, and expresses it as `>= 2.2.0, <3`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nI tested this in a virtual environment as follows:\r\n\r\n```\r\ngh repo clone open-telemetry/opentelemetry-python\r\ncd opentelemetry-python\r\npython3.11 -m venv _e\r\n. _e/bin/activate\r\ncd opentelemetry-api\r\npip install .\r\ncd ../opentelemetry-semantic-conventions\r\npip install .\r\ncd ../opentelemetry-sdk\r\npip install .\r\ncd ../tests/opentelemetry-test-utils\r\npip install .\r\ncd ../shim/opentelemetry-opentracing-shim\r\npip install -e '.[test]'\r\npip install pytest\r\npython -m pytest\r\n```\r\n\r\nAll tests passed.\r\n\r\n```\r\n=============================== warnings summary ===============================\r\nshim/opentelemetry-opentracing-shim/tests/testbed/test_active_span_replacement/test_asyncio.py::TestAsyncio::test_main\r\n  /home/ben/src/forks/opentelemetry-python/shim/opentelemetry-opentracing-shim/tests/testbed/test_active_span_replacement/test_asyncio.py:26: DeprecationWarning: There is no current event loop\r\n    self.loop = asyncio.get_event_loop()\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n======================== 58 passed, 1 warning in 2.47s =========================\r\n```\r\n\r\nThe version of `opentracing` installed in the virtual environment was 2.4.0, which wouldn’t have been permitted before this PR.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated **This doesn’t seem like it deserves a changelog entry. Let me know if I need to add one.**\r\n- [ ] Unit tests have been added **N/A, covered by existing tests**\r\n- [ ] Documentation has been updated **N/A**\r\n",
    "head_branch": "opentracing-2.x-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow testing with opentracing 2.x versions after 2.2.x (#3641)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bec44ee515ce6a4e287",
    "number": 3639,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes incomplete warning message\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- No new tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bugfix-event-attribute-sequence-warning",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: davidecotten / name: David Cotten  (b36a76ca848caf9596d0c28a65216dfcb2c25c69)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (1dc547eef8556cc32b4f8ee79e001496d4b53563, c3a733c978233bbef48a110b4dd9e0cecd0eb136, d0761daa219a800467cbbde9ba88a53931bc3ea8)</li></ul>",
      "Please add CHANGELOG entry"
    ],
    "commit_messages": [
      "Fix: Include key in attribute sequence warning (#3639)\n\n* Fix: Include key in attribute sequence warning\r\n\r\n* Add CHANGELOG entry\r\n\r\n---------"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bed44ee515ce6a4e288",
    "number": 3634,
    "body": "# Description\r\n\r\nStop using OrderedDict in TraceState.\r\nBoundedAttributes starts with dict and use OrderedDict only when reached to limit.\r\nThis makes tracing little faster and uses less memory.\r\n\r\nAdditionally, removed unnecessary use of OrderedDict in tests.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e py311-proto4-opentelemetry-exporter-otlp-proto-http\r\n- [x] tox -e py311-proto4-opentelemetry-exporter-otlp-proto-grpc\r\n- [x] tox -e py311-proto3-opentelemetry-exporter-otlp-proto-http\r\n- [x] tox -e py311-proto3-opentelemetry-exporter-otlp-proto-grpc\r\n- [x] tox -e py311-opentelemetry-sdk\r\n- [x] tox -e py311-opentelemetry-api\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-odict",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: methane / name: Inada Naoki  (0c8b40afd5b092b1d6fb5acfde40c3555801fc1f)</li></ul>"
    ],
    "commit_messages": [
      "Avoid using OrderedDict as possible (#3634)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bee44ee515ce6a4e289",
    "number": 3633,
    "body": "# Description\r\n\r\nFixing the `start_as_current_span` decorator that report near zero time for spans of decorated async functions.\r\n\r\nFixes #3270\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix\r\n- [ ] New feature\r\n- [ ] Breaking change : It's not a breaking change as the other libraries that implement their own `Tracer` class can still use the `contextlib` decorator (but it will still be bugged for them), as soon as they implement it, it must be working fine on their end two.\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `opentelemetry-api/tests/trace/test_tracer.py` : Created the minimal reproduction and fixed it.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated - nothing to change\r\n",
    "head_branch": "feat/make-tracer-start-as-current-span-decorator-work-with-async-functions",
    "is_a_fork": true,
    "comments": [
      "- [x] I've added comments and tests.\r\n- [x] I've also tested mypy in both version `3.8` and `3.10`.\r\n\r\nPS: I still don't really understand how `tox` works, sorry in advance if the pipeline is still failing :(\r\n",
      "@QuentinN42 the current CI failure \"metrics/integration_test/test_console_exporter.py - TypeError: 'ABCMeta... is not subscritable\" I think can be solved by quoting the type annotations",
      "I've added some code from contextlib in this commit acd649dff0ff3f28d63d91af6d6795f099a7caa4 to allow the linter to know that we are returning a `Span` in the `with` expression :\r\n\r\n```python\r\nimport opentelemetry.trace\r\n\r\nTRACER = opentelemetry.trace.get_tracer(__name__)\r\n\r\nwith TRACER.start_as_current_span(\"foo\") as span:\r\n    print(span.get_span_context().trace_id)\r\n```",
      "I've also added comment on the tricky typing part with relevant python versions.",
      "I've applied all asked changes and also merged `main` into my branch :)",
      "Marking it as draft to prevent accidental merging. @QuentinN42 please check that this PR is ok, I have mistakenly force pushed changes that may have affected it, apologies for the mistake.",
      "Just checked right now with my local branch. All seems good :+1: ",
      "> Just checked right now with my local branch. All seems good 👍\r\n\r\nThanks!",
      "@ocelotl When can we expect a new version of `opentelemetry-api` with this fix to be released?",
      "It seems that this PR caused a typing regression for Python<3.10: #3836"
    ],
    "commit_messages": [
      "Make `tracer.start_as_current_span()` decorator work with async functions (#3633)\n\n* test: add a minimal test that reproduce the bug\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: replaced contextmanager by my own agnosticcontextmanager\r\n\r\n* docs: changelog\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* docs: typo\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: linting\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* feat: reimplement the contextlib._GeneratorContextManager inside the trace api\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* refactor: merge tests\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: make agnosticcontextmanager as protected\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: changelog\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* feat: start typing\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: revert to acdfa03 implementation and fix mypy\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: use super call on the synchronous branch\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* fix: typing compliant with 3.8\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: black\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* feat: added tests and fixed lint in python 3.10\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* feat: use_span use the _agnosticcontextmanager\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* docs: explain why we have an overriden class\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: use typing.Generic for pre 3.9 compatibility\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: typo\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: mypy api/src\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: ignore reference to privat attributes\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: mv cm inside test\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: define __call__ as Coroutine and not awaitable\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: mypy green\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: py38 tests ok\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: reimplementing __enter__ to avoid the type error.\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: lint\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* fix: mypy\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* test: rm test_wraps_contextlib\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* docs: document why we are overriding the contextlib._GeneratorContextManager class\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* docs: mv feat to unreleased section\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* test: rename lst with a more readable name\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\n\r\n* Remove unused type ignore comment\r\n\r\n* Fix missing symbol\r\n\r\nThe missing symbol error was caused by a rebase on main and subsequent\r\nforce push by me, sorry.\r\n\r\n---------\r\n\r\nSigned-off-by: QuentinN42 <quentin@lieumont.fr>\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bef44ee515ce6a4e28a",
    "number": 3632,
    "body": "Fixes #3631",
    "head_branch": "issue_3631",
    "is_a_fork": true,
    "comments": [
      "https://github.com/open-telemetry/opentelemetry-specification/pull/3802 needs to be implemented as well.",
      "Converting to draft while I work on #3637."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf044ee515ce6a4e28b",
    "number": 3630,
    "body": "Fixes #1891",
    "head_branch": "issue_1891",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add test context for no exception raised (#3630)\n\n* Add test context for no exception raised\r\n\r\nFixes #1891\r\n\r\n* Add missing test class"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf044ee515ce6a4e28c",
    "number": 3629,
    "body": "Bumps [jinja2](https://github.com/pallets/jinja) from 3.1.2 to 3.1.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/releases\">jinja2's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.3</h2>\n<p>This is a fix release for the 3.1.x feature branch.</p>\n<ul>\n<li>Fix for <a href=\"https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95\">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/15?closed=1\">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/blob/main/CHANGES.rst\">jinja2's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.1.3</h2>\n<p>Released 2024-01-10</p>\n<ul>\n<li>Fix compiler error when checking if required blocks in parent templates are\nempty. :pr:<code>1858</code></li>\n<li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>\n<li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks\nmore helpful. :pr:<code>1918</code></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1\"><code>d9de4bb</code></a> release version 3.1.3</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc\"><code>50124e1</code></a> skip test pypi</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b\"><code>9ea7222</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde\"><code>da703f7</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983\"><code>bce1746</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373af1\"><code>7277d80</code></a> update pre-commit hooks</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14\"><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=\"https://redirect.github.com/pallets/jinja/issues/1918\">#1918</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895\"><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7\"><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23\"><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/jinja/compare/3.1.2...3.1.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/getting_started/tests/jinja2-3.1.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump jinja2 from 3.1.2 to 3.1.3 in /docs/getting_started/tests (#3629)\n\nBumps [jinja2](https://github.com/pallets/jinja) from 3.1.2 to 3.1.3.\r\n- [Release notes](https://github.com/pallets/jinja/releases)\r\n- [Changelog](https://github.com/pallets/jinja/blob/main/CHANGES.rst)\r\n- [Commits](https://github.com/pallets/jinja/compare/3.1.2...3.1.3)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: jinja2\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf144ee515ce6a4e28d",
    "number": 3628,
    "body": "Bumps [jinja2](https://github.com/pallets/jinja) from 2.11.3 to 3.1.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/releases\">jinja2's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.3</h2>\n<p>This is a fix release for the 3.1.x feature branch.</p>\n<ul>\n<li>Fix for <a href=\"https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95\">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/15?closed=1\">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>\n</ul>\n<h2>3.1.2</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/jinja/releases/tag/3.1.0\">3.1.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-2\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/13?closed=1\">https://github.com/pallets/jinja/milestone/13?closed=1</a></li>\n</ul>\n<h2>3.1.1</h2>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-1\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/12?closed=1\">https://github.com/pallets/jinja/milestone/12?closed=1</a></li>\n</ul>\n<h2>3.1.0</h2>\n<p>This is a feature release, which includes new features and removes previously deprecated features. The 3.1.x branch is now the supported bugfix branch, the 3.0.x branch has become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades. We also encourage upgrading to MarkupSafe 2.1.1, the latest version at this time.</p>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-0\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/8?closed=1\">https://github.com/pallets/jinja/milestone/8?closed=1</a></li>\n<li>MarkupSafe changes: <a href=\"https://markupsafe.palletsprojects.com/en/2.1.x/changes/#version-2-1-1\">https://markupsafe.palletsprojects.com/en/2.1.x/changes/#version-2-1-1</a></li>\n</ul>\n<h2>3.0.3</h2>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-3\">https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-3</a></li>\n</ul>\n<h2>3.0.2</h2>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-2\">https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-2</a></li>\n</ul>\n<h2>3.0.1</h2>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-1\">https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-1</a></li>\n</ul>\n<h2>3.0.0</h2>\n<p>New major versions of all the core Pallets libraries, including Jinja 3.0, have been released! :tada:</p>\n<ul>\n<li>Read the announcement on our blog: <a href=\"https://palletsprojects.com/blog/flask-2-0-released/\">https://palletsprojects.com/blog/flask-2-0-released/</a></li>\n<li>Read the full list of changes: <a href=\"https://jinja.palletsprojects.com/changes/#version-3-0-0\">https://jinja.palletsprojects.com/changes/#version-3-0-0</a></li>\n<li>Retweet the announcement on Twitter: <a href=\"https://twitter.com/PalletsTeam/status/1392266507296514048\">https://twitter.com/PalletsTeam/status/1392266507296514048</a></li>\n<li>Follow our blog, Twitter, or GitHub to see future announcements.</li>\n</ul>\n<p>This represents a significant amount of work, and there are quite a few changes. Be sure to carefully read the changelog, and use tools such as pip-compile and Dependabot to pin your dependencies and control your updates.</p>\n<h2>3.0.0rc2</h2>\n<p>Fixes an issue with the deprecated <code>Markup</code> subclass, <a href=\"https://redirect.github.com/pallets/jinja/issues/1401\">#1401</a>.</p>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/master/changes/#version-3-0-0\">https://jinja.palletsprojects.com/en/master/changes/#version-3-0-0</a></li>\n</ul>\n<h2>3.0.0rc1</h2>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/master/changes/#version-3-0-0\">https://jinja.palletsprojects.com/en/master/changes/#version-3-0-0</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/blob/main/CHANGES.rst\">jinja2's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.1.3</h2>\n<p>Released 2024-01-10</p>\n<ul>\n<li>Fix compiler error when checking if required blocks in parent templates are\nempty. :pr:<code>1858</code></li>\n<li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>\n<li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks\nmore helpful. :pr:<code>1918</code></li>\n</ul>\n<h2>Version 3.1.2</h2>\n<p>Released 2022-04-28</p>\n<ul>\n<li>Add parameters to <code>Environment.overlay</code> to match <code>__init__</code>.\n:issue:<code>1645</code></li>\n<li>Handle race condition in <code>FileSystemBytecodeCache</code>. :issue:<code>1654</code></li>\n</ul>\n<h2>Version 3.1.1</h2>\n<p>Released 2022-03-25</p>\n<ul>\n<li>The template filename on Windows uses the primary path separator.\n:issue:<code>1637</code></li>\n</ul>\n<h2>Version 3.1.0</h2>\n<p>Released 2022-03-24</p>\n<ul>\n<li>\n<p>Drop support for Python 3.6. :pr:<code>1534</code></p>\n</li>\n<li>\n<p>Remove previously deprecated code. :pr:<code>1544</code></p>\n<ul>\n<li><code>WithExtension</code> and <code>AutoEscapeExtension</code> are built-in now.</li>\n<li><code>contextfilter</code> and <code>contextfunction</code> are replaced by\n<code>pass_context</code>. <code>evalcontextfilter</code> and\n<code>evalcontextfunction</code> are replaced by <code>pass_eval_context</code>.\n<code>environmentfilter</code> and <code>environmentfunction</code> are replaced\nby <code>pass_environment</code>.</li>\n<li><code>Markup</code> and <code>escape</code> should be imported from MarkupSafe.</li>\n<li>Compiled templates from very old Jinja versions may need to be\nrecompiled.</li>\n<li>Legacy resolve mode for <code>Context</code> subclasses is no longer\nsupported. Override <code>resolve_or_missing</code> instead of</li>\n</ul>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1\"><code>d9de4bb</code></a> release version 3.1.3</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc\"><code>50124e1</code></a> skip test pypi</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b\"><code>9ea7222</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde\"><code>da703f7</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983\"><code>bce1746</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373af1\"><code>7277d80</code></a> update pre-commit hooks</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14\"><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=\"https://redirect.github.com/pallets/jinja/issues/1918\">#1918</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895\"><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7\"><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23\"><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/jinja/compare/2.11.3...3.1.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=2.11.3&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/jinja2-3.1.3",
    "is_a_fork": false,
    "comments": [
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf244ee515ce6a4e28e",
    "number": 3627,
    "body": "Bumps [jinja2](https://github.com/pallets/jinja) from 2.11.3 to 3.1.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/releases\">jinja2's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.3</h2>\n<p>This is a fix release for the 3.1.x feature branch.</p>\n<ul>\n<li>Fix for <a href=\"https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95\">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/15?closed=1\">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>\n</ul>\n<h2>3.1.2</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/jinja/releases/tag/3.1.0\">3.1.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-2\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/13?closed=1\">https://github.com/pallets/jinja/milestone/13?closed=1</a></li>\n</ul>\n<h2>3.1.1</h2>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-1\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/12?closed=1\">https://github.com/pallets/jinja/milestone/12?closed=1</a></li>\n</ul>\n<h2>3.1.0</h2>\n<p>This is a feature release, which includes new features and removes previously deprecated features. The 3.1.x branch is now the supported bugfix branch, the 3.0.x branch has become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades. We also encourage upgrading to MarkupSafe 2.1.1, the latest version at this time.</p>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-0\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/8?closed=1\">https://github.com/pallets/jinja/milestone/8?closed=1</a></li>\n<li>MarkupSafe changes: <a href=\"https://markupsafe.palletsprojects.com/en/2.1.x/changes/#version-2-1-1\">https://markupsafe.palletsprojects.com/en/2.1.x/changes/#version-2-1-1</a></li>\n</ul>\n<h2>3.0.3</h2>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-3\">https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-3</a></li>\n</ul>\n<h2>3.0.2</h2>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-2\">https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-2</a></li>\n</ul>\n<h2>3.0.1</h2>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-1\">https://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-1</a></li>\n</ul>\n<h2>3.0.0</h2>\n<p>New major versions of all the core Pallets libraries, including Jinja 3.0, have been released! :tada:</p>\n<ul>\n<li>Read the announcement on our blog: <a href=\"https://palletsprojects.com/blog/flask-2-0-released/\">https://palletsprojects.com/blog/flask-2-0-released/</a></li>\n<li>Read the full list of changes: <a href=\"https://jinja.palletsprojects.com/changes/#version-3-0-0\">https://jinja.palletsprojects.com/changes/#version-3-0-0</a></li>\n<li>Retweet the announcement on Twitter: <a href=\"https://twitter.com/PalletsTeam/status/1392266507296514048\">https://twitter.com/PalletsTeam/status/1392266507296514048</a></li>\n<li>Follow our blog, Twitter, or GitHub to see future announcements.</li>\n</ul>\n<p>This represents a significant amount of work, and there are quite a few changes. Be sure to carefully read the changelog, and use tools such as pip-compile and Dependabot to pin your dependencies and control your updates.</p>\n<h2>3.0.0rc2</h2>\n<p>Fixes an issue with the deprecated <code>Markup</code> subclass, <a href=\"https://redirect.github.com/pallets/jinja/issues/1401\">#1401</a>.</p>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/master/changes/#version-3-0-0\">https://jinja.palletsprojects.com/en/master/changes/#version-3-0-0</a></li>\n</ul>\n<h2>3.0.0rc1</h2>\n<ul>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/master/changes/#version-3-0-0\">https://jinja.palletsprojects.com/en/master/changes/#version-3-0-0</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/blob/main/CHANGES.rst\">jinja2's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.1.3</h2>\n<p>Released 2024-01-10</p>\n<ul>\n<li>Fix compiler error when checking if required blocks in parent templates are\nempty. :pr:<code>1858</code></li>\n<li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>\n<li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks\nmore helpful. :pr:<code>1918</code></li>\n</ul>\n<h2>Version 3.1.2</h2>\n<p>Released 2022-04-28</p>\n<ul>\n<li>Add parameters to <code>Environment.overlay</code> to match <code>__init__</code>.\n:issue:<code>1645</code></li>\n<li>Handle race condition in <code>FileSystemBytecodeCache</code>. :issue:<code>1654</code></li>\n</ul>\n<h2>Version 3.1.1</h2>\n<p>Released 2022-03-25</p>\n<ul>\n<li>The template filename on Windows uses the primary path separator.\n:issue:<code>1637</code></li>\n</ul>\n<h2>Version 3.1.0</h2>\n<p>Released 2022-03-24</p>\n<ul>\n<li>\n<p>Drop support for Python 3.6. :pr:<code>1534</code></p>\n</li>\n<li>\n<p>Remove previously deprecated code. :pr:<code>1544</code></p>\n<ul>\n<li><code>WithExtension</code> and <code>AutoEscapeExtension</code> are built-in now.</li>\n<li><code>contextfilter</code> and <code>contextfunction</code> are replaced by\n<code>pass_context</code>. <code>evalcontextfilter</code> and\n<code>evalcontextfunction</code> are replaced by <code>pass_eval_context</code>.\n<code>environmentfilter</code> and <code>environmentfunction</code> are replaced\nby <code>pass_environment</code>.</li>\n<li><code>Markup</code> and <code>escape</code> should be imported from MarkupSafe.</li>\n<li>Compiled templates from very old Jinja versions may need to be\nrecompiled.</li>\n<li>Legacy resolve mode for <code>Context</code> subclasses is no longer\nsupported. Override <code>resolve_or_missing</code> instead of</li>\n</ul>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1\"><code>d9de4bb</code></a> release version 3.1.3</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc\"><code>50124e1</code></a> skip test pypi</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b\"><code>9ea7222</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde\"><code>da703f7</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983\"><code>bce1746</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373af1\"><code>7277d80</code></a> update pre-commit hooks</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14\"><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=\"https://redirect.github.com/pallets/jinja/issues/1918\">#1918</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895\"><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7\"><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23\"><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/jinja/compare/2.11.3...3.1.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=2.11.3&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/jinja2-3.1.3",
    "is_a_fork": false,
    "comments": [
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf344ee515ce6a4e28f",
    "number": 3626,
    "body": "Bumps [gitpython](https://github.com/gitpython-developers/GitPython) from 3.1.40 to 3.1.41.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/gitpython-developers/GitPython/releases\">gitpython's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.41 - fix Windows security issue</h2>\n<p>The details about the Windows security issue <a href=\"https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-2mqj-m65w-jghx\">can be found in this advisory</a>.</p>\n<p>Special thanks go to <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> who reported the issue and fixed it in a single stroke, while being responsible for an incredible amount of improvements that he contributed over the last couple of months ❤️.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Add <code>__all__</code> in git.exc by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1719\">gitpython-developers/GitPython#1719</a></li>\n<li>Set submodule update cadence to weekly by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1721\">gitpython-developers/GitPython#1721</a></li>\n<li>Never modify sys.path by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1720\">gitpython-developers/GitPython#1720</a></li>\n<li>Bump git/ext/gitdb from <code>8ec2390</code> to <code>ec58b7e</code> by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1722\">gitpython-developers/GitPython#1722</a></li>\n<li>Revise comments, docstrings, some messages, and a bit of code by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1725\">gitpython-developers/GitPython#1725</a></li>\n<li>Use zero-argument super() by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1726\">gitpython-developers/GitPython#1726</a></li>\n<li>Remove obsolete note in _iter_packed_refs by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1727\">gitpython-developers/GitPython#1727</a></li>\n<li>Reorganize test_util and make xfail marks precise by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1729\">gitpython-developers/GitPython#1729</a></li>\n<li>Clarify license and make module top comments more consistent by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1730\">gitpython-developers/GitPython#1730</a></li>\n<li>Deprecate compat.is_<!-- raw HTML omitted -->, rewriting all uses by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1732\">gitpython-developers/GitPython#1732</a></li>\n<li>Revise and restore some module docstrings by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1735\">gitpython-developers/GitPython#1735</a></li>\n<li>Make the rmtree callback Windows-only by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1739\">gitpython-developers/GitPython#1739</a></li>\n<li>List all non-passing tests in test summaries by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1740\">gitpython-developers/GitPython#1740</a></li>\n<li>Document some minor subtleties in test_util.py by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1749\">gitpython-developers/GitPython#1749</a></li>\n<li>Always read metadata files as UTF-8 in setup.py by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1748\">gitpython-developers/GitPython#1748</a></li>\n<li>Test native Windows on CI by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1745\">gitpython-developers/GitPython#1745</a></li>\n<li>Test macOS on CI by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1752\">gitpython-developers/GitPython#1752</a></li>\n<li>Let close_fds be True on all platforms by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1753\">gitpython-developers/GitPython#1753</a></li>\n<li>Fix IndexFile.from_tree on Windows by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1751\">gitpython-developers/GitPython#1751</a></li>\n<li>Remove unused TASKKILL fallback in AutoInterrupt by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1754\">gitpython-developers/GitPython#1754</a></li>\n<li>Don't return with operand when conceptually void by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1755\">gitpython-developers/GitPython#1755</a></li>\n<li>Group .gitignore entries by purpose by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1758\">gitpython-developers/GitPython#1758</a></li>\n<li>Adding dubious ownership handling by <a href=\"https://github.com/marioaag\"><code>@​marioaag</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1746\">gitpython-developers/GitPython#1746</a></li>\n<li>Avoid brittle assumptions about preexisting temporary files in tests by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1759\">gitpython-developers/GitPython#1759</a></li>\n<li>Overhaul noqa directives by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1760\">gitpython-developers/GitPython#1760</a></li>\n<li>Clarify some Git.execute kill_after_timeout limitations by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1761\">gitpython-developers/GitPython#1761</a></li>\n<li>Bump actions/setup-python from 4 to 5 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1763\">gitpython-developers/GitPython#1763</a></li>\n<li>Don't install black on Cygwin by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1766\">gitpython-developers/GitPython#1766</a></li>\n<li>Extract all &quot;import gc&quot; to module level by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1765\">gitpython-developers/GitPython#1765</a></li>\n<li>Extract remaining local &quot;import gc&quot; to module level by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1768\">gitpython-developers/GitPython#1768</a></li>\n<li>Replace xfail with gc.collect in TestSubmodule.test_rename by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1767\">gitpython-developers/GitPython#1767</a></li>\n<li>Enable CodeQL by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1769\">gitpython-developers/GitPython#1769</a></li>\n<li>Replace some uses of the deprecated mktemp function by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1770\">gitpython-developers/GitPython#1770</a></li>\n<li>Bump github/codeql-action from 2 to 3 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1773\">gitpython-developers/GitPython#1773</a></li>\n<li>Run some Windows environment variable tests only on Windows by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1774\">gitpython-developers/GitPython#1774</a></li>\n<li>Fix TemporaryFileSwap regression where file_path could not be Path by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1776\">gitpython-developers/GitPython#1776</a></li>\n<li>Improve hooks tests by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1777\">gitpython-developers/GitPython#1777</a></li>\n<li>Fix if items of Index is of type PathLike by <a href=\"https://github.com/stegm\"><code>@​stegm</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1778\">gitpython-developers/GitPython#1778</a></li>\n<li>Better document IterableObj.iter_items and improve some subclasses by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1780\">gitpython-developers/GitPython#1780</a></li>\n<li>Revert &quot;Don't install black on Cygwin&quot; by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1783\">gitpython-developers/GitPython#1783</a></li>\n<li>Add missing pip in $PATH on Cygwin CI by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1784\">gitpython-developers/GitPython#1784</a></li>\n<li>Shorten Iterable docstrings and put IterableObj first by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1785\">gitpython-developers/GitPython#1785</a></li>\n<li>Fix incompletely revised Iterable/IterableObj docstrings by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1786\">gitpython-developers/GitPython#1786</a></li>\n<li>Pre-deprecate setting Git.USE_SHELL by <a href=\"https://github.com/EliahKagan\"><code>@​EliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1782\">gitpython-developers/GitPython#1782</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/f28873828496a6632b3a99101e3582ad164e9bb9\"><code>f288738</code></a> bump patch level</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/ef3192cc414f2fd9978908454f6fd95243784c7f\"><code>ef3192c</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1792\">#1792</a> from EliahKagan/popen</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/1f3caa31f1b63908235e341418a0804ed37a320a\"><code>1f3caa3</code></a> Further clarify comment in test_hook_uses_shell_not_from_cwd</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/3eb7c2ab82e6dbe101ff916fca29d539cc2793af\"><code>3eb7c2a</code></a> Move safer_popen from git.util to git.cmd</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/c551e916c7b9e2d623b9d76f3352849a707d9bbe\"><code>c551e91</code></a> Extract shared logic for using Popen safely on Windows</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/15ebb258d4eebd9bf0f38780570d57e0b968b8de\"><code>15ebb25</code></a> Clarify comment in test_hook_uses_shell_not_from_cwd</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/f44524a9a9c8122b9b98d6e5797e1dfc3211c0b7\"><code>f44524a</code></a> Avoid spurious &quot;location may have moved&quot; on Windows</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/a42ea0a38c489caf9969836141120d760d3754b4\"><code>a42ea0a</code></a> Cover absent/no-distro bash.exe in hooks &quot;not from cwd&quot; test</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/7751436b94d96ce0978b301681b851edd6efed63\"><code>7751436</code></a> Extract venv management from test_installation</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/66ff4c177accfb4f21d3eb476381d248d99fd8b5\"><code>66ff4c1</code></a> Omit CWD in search for bash.exe to run hooks on Windows</li>\n<li>Additional commits viewable in <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.40...3.1.41\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gitpython&package-manager=pip&previous-version=3.1.40&new-version=3.1.41)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/gitpython-3.1.41",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump gitpython from 3.1.40 to 3.1.41 (#3626)\n\nBumps [gitpython](https://github.com/gitpython-developers/GitPython) from 3.1.40 to 3.1.41.\r\n- [Release notes](https://github.com/gitpython-developers/GitPython/releases)\r\n- [Changelog](https://github.com/gitpython-developers/GitPython/blob/main/CHANGES)\r\n- [Commits](https://github.com/gitpython-developers/GitPython/compare/3.1.40...3.1.41)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: gitpython\r\n  dependency-type: direct:development\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf444ee515ce6a4e290",
    "number": 3624,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nTox 4 changed how quotes are handled (tox-dev/tox#845). I removed quotes and escaped the `#`.\r\n\r\n* Upgrade tox, really fixes #3079.\r\n* Remove tox-factor (incompatible with tox>=4) and fixes #3506.\r\n* Exclude some tests from test.yml matrix because they don't exist in tox and `tox -f` breaks instead of ignore them like `tox-factor`.\r\n* Contrib tests are broken because we have to upgrade contrib tox too https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2118\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] CI should pass\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "upgrade-tox",
    "is_a_fork": true,
    "comments": [
      "We are removing 3.7 support here https://github.com/open-telemetry/opentelemetry-python/pull/3668, let's wait and rebase this post that PR merge to main."
    ],
    "commit_messages": [
      "Upgrade tox (#3624)\n\n* Upgrade tox\r\n\r\n* Remove tox-factor\r\n\r\n* Bump tox cache\r\n\r\n* Remove exporter-jaeger from matrix\r\n\r\nThese tests were removed in 2a8d4ed433feb8f4ba8db141643773e6f097bdca,\r\nbut tox-factor just ignored the problem, but tox 4 fails because the env\r\ndoes not exist.\r\n\r\n* Ignore py37 getting-started\r\n\r\nThe py37 env was removed in 4a2cb86f2885159d9e3f8d5f04fe409640df23e4\r\nand now tox 4 fails instead of ignore it like tox-factor.\r\n\r\n* Ignore pypy3 for some packages\r\n\r\n* Github actions exclude does not accept arrays\r\n\r\n* Contrib tests still running on tox 3\r\n\r\n* Revert \"Contrib tests still running on tox 3\"\r\n\r\nThis reverts commit fdcd75db7b5ef3e59850ff55bf70ea1521dbaa74.\r\n\r\n* Update contrib SHA\r\n\r\n* Remove excludes\r\n\r\n* Revert \"Remove excludes\"\r\n\r\nThis reverts commit 1cf7b42db092248e7e11951c675852796b8ff745.\r\n\r\n* WIP\r\n\r\n* More WIP\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf444ee515ce6a4e291",
    "number": 3623,
    "body": "# Description\r\n\r\nThis change modifies the OTLP exporters to treat HTTP 204 responses as successful. Previously, these were logged as errors and returned an error code, even though a 204 status code indicates a successful request. This change prevents unnecessary pollution of the logs.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3621\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI tested this change locally by using the modified code and verified that it works as expected. Specifically, I sent logs to the Grafana OTLP endpoint and confirmed that a 204 status code no longer results in an error message or error code.\r\n\r\n[x] Test A: Sent logs to Grafana OTLP endpoint and confirmed correct behavior\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ X] No.\r\n\r\n# Checklist:\r\n\r\n- [ X] Followed the style guidelines of this project\r\n\r\n",
    "head_branch": "handle-2xx-as-succcess",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: gshiva  (cd928c7b4a6f95f0514681685d655a08833b5ff5)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (13e65327f9da67a524e9dceb2aa078ff1d2073e1, d5f0e3efc444e7b4c35a195a6632f802feafa6d9, 9ba12070e72ef0aef5efacb18b239cb12a3c1a3b, 4b682ea56d47497550d7cff0cdf7fab0e87410a2, be92abffb80efd3799bbab2750bbfb4e8d838da0)</li></ul>",
      "Just for [reference](https://datatracker.ietf.org/doc/html/rfc7231#section-6.3)."
    ],
    "commit_messages": [
      "Handle HTTP 2XX responses as successful in OTLP exporters (#3623)\n\n* Handle HTTP 2XX responses as successful in OTLP exporters\r\n\r\n* Add test cases for 2XX HTTP responses\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf544ee515ce6a4e292",
    "number": 3622,
    "body": "# Description\r\n\r\nThis change modifies the OTLP exporters to treat HTTP 204 responses as successful. Previously, these were logged as errors and returned an error code, even though a 204 status code indicates a successful request. This change prevents unnecessary pollution of the logs.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3621\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI tested this change locally by using the modified code and verified that it works as expected. Specifically, I sent logs to the Grafana OTLP endpoint and confirmed that a 204 status code no longer results in an error message or error code.\r\n\r\n[x] Test A: Sent logs to Grafana OTLP endpoint and confirmed correct behavior\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ X] No.\r\n\r\n# Checklist:\r\n\r\n- [ X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "show-real-errors",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3622/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3622/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li>:white_check_mark: login: gshiva  (20618cd9c5c429015494b45ded451ee43db006ed)</li><li> :x: The email address for the commit (8be791abcc812dd2ce3fd41af5bed669d72571f9) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf644ee515ce6a4e293",
    "number": 3620,
    "body": "This commit introduces a warning message in the OTLP GRPC Exporter when there is a mismatch between the configured endpoint and the provided endpoint. This change aims to prevent silent truncation of the endpoint value, which could lead to confusion and time-consuming debugging for users trying to configure a HTTP exporter but mistakenly passing a GRPC one. This issue might be a common occurrence for newcomers, as almost all the examples use the GRPC exporter. The warning message provides clear, actionable feedback to the user, improving the overall user experience.\r\n\r\nAddresses https://github.com/open-telemetry/opentelemetry-python/issues/3619\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #3619 \r\n\r\n## Type of change\r\n\r\nAdded logger warning to grpc exporter init.\r\n\r\n# How Has This Been Tested?\r\n\r\nVerified that the warning gets displayed when an URL with path was passed (https://otlp.endpoint.com:4317/v1/traces) and no warning was displayed when an expected grpc endpoint like (http://localhost:4317) was passed.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ X ] No.\r\n\r\n# Checklist:\r\n\r\n- [ X ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "gshiva-add-warning-for-endpoint-mismatch",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: gshiva  (20618cd9c5c429015494b45ded451ee43db006ed)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (79f0f3b95764bca74f0253962e1325ecccca083c, fbb7cc1c13fc3f10d26ce7fab3269435358974e0)</li></ul>",
      "@gshiva please take a look at the comment above"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf744ee515ce6a4e294",
    "number": 3618,
    "body": "# Description\r\n\r\nImplementation of adding links after span start, defined in: https://github.com/open-telemetry/opentelemetry-specification/pull/3678\r\n\r\nFixes #3607 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded two new unit tests in `opentelemetry-sdk`.\r\n\r\n- [x] TestSpan::test_add_link\r\n- [x] TestSpan::test_add_link_with_invalid_span_context\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "3607-add-links-to-span-after-creation",
    "is_a_fork": true,
    "comments": [
      "@chittalpatel @srikanthccv please mark the conversations as resolved if they are :v:",
      "@aabmass PTAL, are you ok with this PR as it is right now or do you want further changes?"
    ],
    "commit_messages": [
      "Add Span.add_link() method to add link after span start. (#3618)\n\n* Add Span.add_link() method to add link after span start.\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Unmark Span.add_link() as abstract method and add warning.\r\n\r\n* Add Span.add_link() method to add link after span start.\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Unmark Span.add_link() as abstract method and add warning.\r\n\r\n* Update warning message for Span.add_link().\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf844ee515ce6a4e295",
    "number": 3616,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "3_12",
    "is_a_fork": true,
    "comments": [
      "For 3.11: https://github.com/open-telemetry/opentelemetry-python/pull/2997/files",
      "@jeremydvoss this should now work if rebased on main",
      "Great, rebased :v:",
      "Im desperate for this merge 😭 ",
      "@jeremydvoss I added some missing changes to complete this PR, do you think we can move forward with this PR?",
      "BTW this require a similar PR in contrib before release right?",
      "MArking it as draft to prevent merging while I look into 3.12 for the contrib repo.",
      "Still one test failing. I'll repush and see if it's transient",
      "Rebased and pushed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf844ee515ce6a4e296",
    "number": 3611,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #3610 (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `docker-tests-proto{3,4}` pass\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-docker-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix docker proto tests (#3611)\n\n* Fix docker proto tests\r\n\r\n* Remove changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bf944ee515ce6a4e297",
    "number": 3609,
    "body": "# Description\r\n\r\nFixes #2476\r\n\r\nI bumped versions of some dependencies.\r\n\r\n* Old Jinja2 doesn't work with new markupsafe, so I upgraded Jinja2.\r\n* Old Flask doesn't work with new Jinja2, so I upgraded Flask. \r\n* Flask requires minimal versions of click, itsdangerous and werkzeug, so I upgraded them.\r\n\r\nUpgrades unrelated to markupsafe to make examples work:\r\n\r\n* protobuf was pinned to a conflicted version because of some transitive dependency changed:\r\n\r\n```\r\nThe conflict is caused by:\r\n    The user requested protobuf==3.18.3\r\n    googleapis-common-protos 1.52.0 depends on protobuf>=3.6.0\r\n    opentelemetry-proto 1.20.0 depends on protobuf<5.0 and >=3.19\r\n```\r\n\r\n* wrapt < 1.14 is incompatible with Python 3.11 (https://github.com/GrahamDumpleton/wrapt/blob/develop/docs/changes.rst#version-1140), I upgraded them to be able to run examples.\r\n\r\nWe could at least have a CI action to install these example requirements file to check if they're not outdated.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nThe dependencies are used only for build and tests.\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "upgrade-markupsafe",
    "is_a_fork": true,
    "comments": [
      "The CI failure is related to https://github.com/open-telemetry/opentelemetry-python/pull/3611."
    ],
    "commit_messages": [
      "Upgrade markupsafe (#3609)\n\n* Upgrade markupsafe in tox tracecontext\r\n\r\n* Upgrade markupsafe in tox docs, lint and tests\r\n\r\n* Upgrade markupsafe in fork-process-model examples\r\n\r\n* Add changelog\r\n\r\n* Use Flask<3\r\n\r\n---------"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bfa44ee515ce6a4e298",
    "number": 3608,
    "body": "# Description\r\n\r\nI found #3423 fixing a similar issue and reused most of the idea. I preferred to write a test using the proper spec `NoOpLoggerProvider` instead of using the generic `LogProvider` and mocking the `force_flush` method.\r\n\r\nI checked for other uses of `logger_provider` but didn't find any.\r\n\r\nFixes #3602 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit test\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n\r\nHappy new year! 🎉 🎆 🍰 ",
    "head_branch": "fix-noop-logger-force-flush",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: iurisilvio / name: Iuri de Silvio  (1ddd5050a3ab5a0657435e7f5ef23aac1c3feaa3)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (41449c21c16759bdea07f3ce9f1178fcec1462a9, b219f011646ddf6ad821b3eb7b5e8d722caafdc8)</li></ul>",
      "This test case passes but it is hiding an error:\r\n\r\n\r\n```\r\npy311-opentelemetry-sdk: commands[0] /home/tigre/github/ocelotl/opentelemetry-python/opentelemetry-sdk/tests> pytest -k test_log_flush_noop -s -v -rf\r\n===================================================================================== test session starts ======================================================================================\r\nplatform linux -- Python 3.11.2, pytest-7.1.3, pluggy-1.4.0 -- /home/tigre/github/ocelotl/opentelemetry-python/.tox/py311-opentelemetry-sdk/bin/python\r\ncachedir: .tox/py311-opentelemetry-sdk/.pytest_cache\r\nbenchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\r\nrootdir: /home/tigre/github/ocelotl/opentelemetry-python, configfile: pyproject.toml\r\nplugins: flaky-3.7.0, benchmark-4.0.0\r\ncollected 491 items / 490 deselected / 1 selected                                                                                                                                              \r\n\r\nlogs/test_handler.py::TestLoggingHandler::test_log_flush_noop PASSED\r\n\r\n============================================================================== 1 passed, 490 deselected in 0.27s ===============================================================================\r\nException ignored in atexit callback: <function shutdown at 0x7f519fff3240>\r\nTraceback (most recent call last):\r\n  File \"/home/tigre/.pyenv/versions/3.11.2/lib/python3.11/logging/__init__.py\", line 2192, in shutdown\r\n    h.flush()\r\n  File \"/home/tigre/github/ocelotl/opentelemetry-python/.tox/py311-opentelemetry-sdk/lib/python3.11/site-packages/opentelemetry/sdk/_logs/_internal/__init__.py\", line 559, in flush\r\n    self._logger_provider.force_flush()\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/tigre/.pyenv/versions/3.11.2/lib/python3.11/unittest/mock.py\", line 647, in __getattr__\r\n    raise AttributeError(\"Mock object has no attribute %r\" % name)\r\nAttributeError: Mock object has no attribute 'force_flush'\r\n  py311-opentelemetry-sdk: OK (10.91=setup[0.04]+cmd[1.41,8.91,0.55] seconds)\r\n  congratulations :) (11.01 seconds)\r\n```"
    ],
    "commit_messages": [
      "Fix flush exception thrown when LoggerProvider not configured (#3608)\n\n* Fix flush exception thrown when LoggerProvider not configured\r\n\r\n* Fix test case\r\n\r\n* Use right object in test case\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bfb44ee515ce6a4e299",
    "number": 3606,
    "body": "I'm not sure if I should add this as a test but here's how I discovered the issue:\r\n\r\n```python\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.sdk.resources import Resource\r\nfrom opentelemetry.sdk.trace import ReadableSpan\r\nfrom opentelemetry.exporter.otlp.proto.common.trace_encoder import encode_spans\r\n\r\n\r\nencode_spans(\r\n    [\r\n        ReadableSpan(\r\n            name='test_span',\r\n            context=trace.SpanContext(\r\n                trace_id=1,\r\n                span_id=1,\r\n                is_remote=False,\r\n            ),\r\n            parent=None,\r\n            resource=Resource(\r\n                attributes={\r\n                    'service.name': 'test_service',\r\n                },\r\n            ),\r\n            attributes={'x': 'y'},\r\n            start_time=1_000_000_000,\r\n            end_time=2_000_000_000,\r\n        )\r\n\r\n    ]\r\n)\r\n```\r\n\r\nIt seems like `encode_spans` is making assumptions about `ReadableSpan` that are not true.\r\nOne option would be to update `encode_spans` but given that there is no test for this and they usually will be `BoundedAttributes` I think updating `ReadableSpan` makes more sense.",
    "head_branch": "readable-span-attributes",
    "is_a_fork": true,
    "comments": [
      "Never mind _I_ already fixed this and just haven't updated: https://github.com/open-telemetry/opentelemetry-python/commit/3d9de97d7c38dcf0d78d35409c37de07c6d9473e"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bfc44ee515ce6a4e29a",
    "number": 3605,
    "body": "https://github.com/open-telemetry/opentelemetry-python/discussions/3596#discussioncomment-7928509\r\n\r\ncc @srikanthccv",
    "head_branch": "allow-bytes-attributes",
    "is_a_fork": true,
    "comments": [
      "We also need to update the exporter(s) code to support the bytes encoding. For instance, here for OTLP https://github.com/open-telemetry/opentelemetry-python/blob/da48e0b131ff34ff382b7d1206f71b2e31929cab/exporter/opentelemetry-exporter-otlp-proto-common/src/opentelemetry/exporter/otlp/proto/common/_internal/__init__.py#L62-L81",
      "Handled that case but I don't immediately see any others. Can you point them to me? Or can we just leave them as is and fix them as requested?",
      "Let's encode to bytes as strings if the exporter/protocol doesn't support bytes. \r\n \r\n- OpenCensus doesn't support [bytes](https://github.com/census-instrumentation/opencensus-proto/blob/1664cc961550be8f3058ddd29390350242f44f1f/src/opencensus/proto/trace/v1/trace.proto#L330-L343). Lets encode as a string [here](https://github.com/open-telemetry/opentelemetry-python/blob/da48e0b131ff34ff382b7d1206f71b2e31929cab/exporter/opentelemetry-exporter-opencensus/src/opentelemetry/exporter/opencensus/util.py#L58-L77) \r\n- OTLP ✅ \r\n- Prometheus values must be strings. Should be modified [here](https://github.com/open-telemetry/opentelemetry-python/blob/da48e0b131ff34ff382b7d1206f71b2e31929cab/exporter/opentelemetry-exporter-prometheus/src/opentelemetry/exporter/prometheus/__init__.py#L371-L375)\r\n- Zipkin only supports strings. Conversion [here](https://github.com/open-telemetry/opentelemetry-python/blob/da48e0b131ff34ff382b7d1206f71b2e31929cab/exporter/opentelemetry-exporter-zipkin-json/src/opentelemetry/exporter/zipkin/encoder/__init__.py#L126-L154)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bfd44ee515ce6a4e29b",
    "number": 3603,
    "body": "# Description\r\n\r\nOTLPMetricExporter was ignoring the `preferred_aggregation` property, not allowing any kind of customization directly on the constructor.\r\n\r\nFixes #3522 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Testing informing a custom aggregation (like informing an `ExplicitBucketHistogramAggregation`)\r\n\r\nI've tried the following configuration for my MetricReader:\r\n\r\n```python\r\n# OTLP metrics\r\nreader = PeriodicExportingMetricReader(\r\n    OTLPMetricExporter(\r\n        endpoint=\"http://localhost:4318/v1/metrics\",\r\n        session=session,\r\n        compression=Compression.Gzip,\r\n        timeout=5,\r\n        preferred_aggregation={\r\n            Histogram: ExplicitBucketHistogramAggregation(\r\n                boundaries=[0.05, 0.1, 0.5, 1, 1.5, 2, 2.5, 3, 4, 5, 10, 20, 30, 40, 50, 60, 300, 600],\r\n            )\r\n        },\r\n    )\r\n)\r\n```\r\n\r\nOn my OTLP collector (localhost:4318), I configured the logging exporter for metrics:\r\n\r\n```yaml\r\nreceivers:\r\n  otlp:\r\n    protocols:\r\n      http:\r\n        endpoint: 0.0.0.0:4318\r\n\r\nexporters:\r\n  logging:\r\n    verbosity: detailed\r\n\r\nservice:\r\n  telemetry:\r\n    logs:\r\n      level: DEBUG\r\n  pipelines:\r\n    metrics:\r\n      receivers: [otlp]\r\n      processors: []\r\n      exporters: [logging]\r\n```\r\n\r\nAfter this setup, I was able to see my histograms being exported with my explicit configured boundaries.\r\n\r\nBefore (**without** the fix):\r\n\r\n```text\r\notel-collector_1  | Count: 1\r\notel-collector_1  | Sum: 0.808466\r\notel-collector_1  | Min: 0.808466\r\notel-collector_1  | Max: 0.808466\r\notel-collector_1  | ExplicitBounds #0: 0.000000\r\notel-collector_1  | ExplicitBounds #1: 5.000000\r\notel-collector_1  | ExplicitBounds #2: 10.000000\r\notel-collector_1  | ExplicitBounds #3: 25.000000\r\notel-collector_1  | ExplicitBounds #4: 50.000000\r\notel-collector_1  | ExplicitBounds #5: 75.000000\r\notel-collector_1  | ExplicitBounds #6: 100.000000\r\notel-collector_1  | ExplicitBounds #7: 250.000000\r\notel-collector_1  | ExplicitBounds #8: 500.000000\r\notel-collector_1  | ExplicitBounds #9: 750.000000\r\notel-collector_1  | ExplicitBounds #10: 1000.000000\r\notel-collector_1  | ExplicitBounds #11: 2500.000000\r\notel-collector_1  | ExplicitBounds #12: 5000.000000\r\notel-collector_1  | ExplicitBounds #13: 7500.000000\r\notel-collector_1  | ExplicitBounds #14: 10000.000000\r\n```\r\n\r\nAfter (**with** the fix):\r\n\r\n```text\r\notel-collector_1  | ExplicitBounds #0: 0.050000\r\notel-collector_1  | ExplicitBounds #1: 0.100000\r\notel-collector_1  | ExplicitBounds #2: 0.500000\r\notel-collector_1  | ExplicitBounds #3: 1.000000\r\notel-collector_1  | ExplicitBounds #4: 1.500000\r\notel-collector_1  | ExplicitBounds #5: 2.000000\r\notel-collector_1  | ExplicitBounds #6: 2.500000\r\notel-collector_1  | ExplicitBounds #7: 3.000000\r\notel-collector_1  | ExplicitBounds #8: 4.000000\r\notel-collector_1  | ExplicitBounds #9: 5.000000\r\notel-collector_1  | ExplicitBounds #10: 10.000000\r\notel-collector_1  | ExplicitBounds #11: 20.000000\r\notel-collector_1  | ExplicitBounds #12: 30.000000\r\notel-collector_1  | ExplicitBounds #13: 40.000000\r\notel-collector_1  | ExplicitBounds #14: 50.000000\r\notel-collector_1  | ExplicitBounds #15: 60.000000\r\notel-collector_1  | ExplicitBounds #16: 300.000000\r\notel-collector_1  | ExplicitBounds #17: 600.000000\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-otlpexporter-preferred-aggregation",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Dudssource  (704b4d82201fe468be002852982d0165cb2e7c67, 1718871187f1bc0b05854e00b3fba0b5423c7f2a, cdded4ae19c9ccd3e7b1801bcebd7e1e1635d7af, be1cfc1216126446367c2b256ebf96492a0b1996, 14af46f9ec0524195520cbe0806fa628e481d202, 718ea2da0a2b99a63b2a28b1b56e1d5c381790d3, c59c7c93b3315396a6304c0e291eb6b25939d6d5, 057273ec7223c4f44976b7c8d45857e89f001a85, 77fde484f8cca01a89000e6ddf7074a473a00bcf, 491482d8fbd9815d4b4a2fc276b633fd52c94c71, 489b4c50506fc340b2801d41321c415916a964b6, 6b5cf7aa883397c2a0c7893c849e0e30bfc5c251, 4f805cc4cd1535778afb09e9d6d0a3a97b0b5f79, a6343f6f86ed0861ae53d758a613878174738709, f8b03e32b42108d6a96ffc8c52d4ed522840dc31, b5c95ccbea5f29b2d9110bfddcce8df7454cc5c8, 77869dff7e3b66543b5bbe13c46ad05e48222d1d, cb825d9c193955f49671047f38eba79e3ac348f3)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (479e28e6f5e7e8fd0d2d9947a4f91e238912e6df, ce20dd0c4413be65a19e0cae7e1a9878cc8cdb1e)</li></ul>",
      "Let's add a unit test and CHANGELOG entry",
      "> Let's add a unit test and CHANGELOG entry\r\n\r\nThanks @srikanthccv for your feedback!\r\nI just added a changelog entry and a unit test, pls let me know if I need to add something else.",
      "Linter is now passing (01950137a194f0ee879a94ff33a77a0577839408)",
      "Pylint linter fixed on d60819a25d4d4390f8132514ef10347efde91641"
    ],
    "commit_messages": [
      "Fix OTLPMetricExporter ignores preferred_aggregation property (#3603)\n\n* fix #3522 OTLPMetricExporter ignores preferred_aggregation\r\n\r\n* make OTLPMetricExporter pass the preferred_aggregation argument to the _common_configuration function\r\n\r\n* Remove unnecessary import from metrics encoder\r\n\r\n* docs: added changelog entry for pr #3603\r\n\r\n* Added unit test to make sure preferred_aggregation override works\r\n\r\n* chore: break aggregation and temporality config in two functions\r\n\r\n* chore: removed instrument_class_aggregation variable external declaration, to avoid possible problems with linters\r\n\r\n* chore: removed unnecessary variable declaration\r\n\r\n* docs: moved changelog entry to unreleased\r\n\r\n* chore: added preferred_aggregation argument to _common_configuration call\r\n\r\n* chore: added unit test for grpc otlp metric exporter\r\n\r\n* test: moved preferred_aggregation test to class\r\n\r\n* chore: fix linter findings on metrics_encoder/__init__.py\r\n\r\n* chore: fix linter findings on grpc/metrics_exporter/__init__.py\r\n\r\n* chore: fix linter findings on http/metrics_exporter/__init__.py\r\n\r\n* fix: removed code duplicate\r\n\r\n* chore: fixed linter errors\r\n\r\n* Ignoring pylint for protected access\r\n\r\n* Fix Aggregation import\r\n\r\n* Rename getter methods to private\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bfd44ee515ce6a4e29c",
    "number": 3601,
    "body": "# Description\r\n\r\nWas missing loglevel (which is present in the actual config file in the directory), causing example to produce no output.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3601/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (8a9c62e61c0071db15bd07aa3ccb0f3bed0da146)</li><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3601/#/?version=2' target='_blank'>:x:</a> - login: @JC3 / name: Jason C . The commit (f872325d71b625cad9ada704efbc8ec503362dee) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3601/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "@JC3 are you still working on this PR? I can take care of this changes if you are not.",
      "Superseded by #3800"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bfe44ee515ce6a4e29d",
    "number": 3599,
    "body": "# Description\r\n\r\nThere was an error in the resizing logic of exponential buckets. I found it by comparing it to the JavaScript implementation: https://github.com/open-telemetry/opentelemetry-js/blob/f4b681d4f388ecedaecff03b7c95f460c97a8f6c/packages/sdk-metrics/src/aggregator/ExponentialHistogram.ts#L347-L359\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3562\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI ran the code in production.\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bouk/fix-bucket-start-end-",
    "is_a_fork": true,
    "comments": [
      "I guess the unit tests for exponential are not robust enough. ",
      "Thank you for this fix. What do you think about also adding a test that fails without the fix and passes with it?",
      "I don't have time to work on this now unfortunately, sorry. On 10 Jan 2024, at 17:58, Pablo Collins ***@***.***> wrote:﻿\r\nThank you for this fix. What do you think about also adding a test that fails without the fix and passes with it?\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you authored the thread.Message ID: ***@***.***>",
      "Thanks for the fix @bouk, I'll add the test cases :+1: ",
      "I don't have enough information to reproduce, see [this](https://github.com/open-telemetry/opentelemetry-python/issues/3562#issuecomment-1886069589).",
      "I think this is supersed by https://github.com/open-telemetry/opentelemetry-python/pull/3798 that already contains that change among many others",
      "Closing this since #3798 has been merged. Thanks @bouk !"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200bff44ee515ce6a4e29e",
    "number": 3595,
    "body": "# Description\r\n\r\nAs we discussed in #3270, we want to be able to decorate functions with a span.\r\n\r\nCurrently it's not raising any exceptions, but async functions always reports a near zero span duration due to the result not beeing awaited.\r\n\r\nBut as context managers can be sync OR async but not both ([@contextlib.asynccontextmanager](https://docs.python.org/3/library/contextlib.html#contextlib.asynccontextmanager)), I've added a small method `Tracer.decorate` that do this job.\r\n\r\nI'm still not sure about the function name ... Any ideas are welcome :)\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nNot yet tested, here is my two tests idea :\r\n\r\n- [x] Test a sync function decorator.\r\n- [x] Test an async function decorator.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n\r\nI dont think so, I'm in the \"this functionality MAY be offered additionally as a separate operation\" of [Span creation](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#span-creation).\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated - nothing to change\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: QuentinN42 / name: QuentinN42  (0a07584de91655e6313e2986907ad4f0c8dc4d74, f30f87eb7b3fed7908e643e0886f76c50e574fba, 119df9d330958b9346f23bef656877e97cb9b5ed, 0ae902ed4f8cad11977436f9ee11944b7d1519dc, ff6595719ff7f03271207d0765a750fa4576afae, 28157dd38a089c8700a6c4ec919058a35be8cb63, 7b87e0f55ed9da5f2996afd09f12cf9171bf401a, 2a766086ee66c2f0fd20c2bb185b4e205f1d31b6)</li></ul>",
      "@QuentinN42 This doesn't seem to actually change the behavior of `tracer.start_as_current_span()` at all. It looks like this PR adds a new separate decorator",
      "> @QuentinN42 This doesn't seem to actually change the behavior of `tracer.start_as_current_span()` at all. It looks like this PR adds a new separate decorator\n\nYes as sayed in the initial comment, do you think I should create a custom sync and async contrxtmanager ?",
      "Do you have a backward compatible way to achieve this without adding to the API surface? I will bring this up in the Python SIG meeting tomorrow (you're welcome to attend if you're available).\r\n\r\nedit I think I've figured out a way to make it behave as expected if you need some help, lmk",
      "Closing this MR in favor of https://github.com/open-telemetry/opentelemetry-python/pull/3633"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0044ee515ce6a4e29f",
    "number": 3594,
    "body": "Copy log updates from `release/v1.22.x-0.43bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.22.x-0.43bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Copy change log updates from release/v1.22.x-0.43bx (#3594)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0144ee515ce6a4e2a0",
    "number": 3592,
    "body": "Fixes #3591",
    "head_branch": "issue_3591",
    "is_a_fork": true,
    "comments": [
      "This is how the [benchmarks website](https://open-telemetry.github.io/opentelemetry-js/benchmarks/) looks right now.\r\n\r\nThis is how it would look [after these changes](https://refined-github-html-preview.kidonng.workers.dev/ocelotl/opentelemetry-python/raw/issue_3591/benchmarks/index.html).",
      "@ocelotl \r\n\r\n> This is how the [benchmarks website](https://open-telemetry.github.io/opentelemetry-js/benchmarks/) looks right now.\r\n\r\nI'm confused. The link here leads to the opentelemetry-js benchmarks?\r\n\r\n"
    ],
    "commit_messages": [
      "Update headers for benchmarks website (#3592)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0244ee515ce6a4e2a1",
    "number": 3590,
    "body": "# Description\r\n\r\nAdded support to provide client key file and client certificate file to all OTLP exporters.\r\n\r\nFixes #2991 \r\nFixes #3327 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated tests and verified them using:\r\n`tox -e opentelemetry-exporter-otlp-proto-grpc`\r\n`tox -e opentelemetry-exporter-otlp-proto-http`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "2991-client-key-and-certificate-for-otlp-exporters",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (975b64cc1f6e27f1fbe999821e944ddc00129bd3)</li><li>:white_check_mark: login: xrmx / name: Riccardo Magliocchetti  (df4c50258a54fd14e59b25eb02f56777bf4501fc)</li><li>:white_check_mark: login: chittalpatel / name: Chittal Patel  (5c7e9a3c7dbef162895b86eef460f953caf69140, 6bef4e640cfb7027f874c2b017784d478ead46ef, 39bc279a1858267e7ec041aab9f47805fc0623b8)</li></ul>",
      "I would be interested in this feature. Are you still working on this?",
      "Also interested in this. Is MTLS not supported on all exporters? I'm running into this problem a few times today with Node JS http exporter also"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0244ee515ce6a4e2a2",
    "number": 3588,
    "body": "\r\n# Description\r\n\r\nAdded support to provide client key file and client certificate file to all OTLP exporters.\r\n\r\nFixes #2991 \r\n\r\n## Type of change\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated tests and verified them using:\r\n`tox -e opentelemetry-exporter-otlp-proto-grpc`\r\n`tox -e opentelemetry-exporter-otlp-proto-http`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "2991-client-key-and-certificate-for-otlp-exporters",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3588/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3588/#/?version=2' target='_blank'>:x:</a> - login: @chittalpatel / name: Chittal Patel . The commit (3e3c84ee74892b7030e5593ddec878faf2e26bb3) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3588/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0344ee515ce6a4e2a3",
    "number": 3586,
    "body": "First stab at https://github.com/open-telemetry/semantic-conventions/issues/551\r\n\r\n\r\n# Remaining discussions:\r\n- [ ] How to generate metrics. See https://github.com/open-telemetry/opentelemetry-python/pull/3586#discussion_r1509494281 for options\r\n- [ ] How to separate stable semconv from experimental. See https://github.com/open-telemetry/opentelemetry-python/pull/3586#issuecomment-1973978521 for options\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "protype-new-codegen",
    "is_a_fork": true,
    "comments": [
      "@open-telemetry/python-maintainers could you please take another look and tell if there you see any showstopping issues we need to resolve before moving forward with build-tools changes? ",
      "@lmolkova \r\n\r\nApproach looks good to me for the new build-tools.\r\n\r\n@ocelotl  @aabmass \r\n\r\nCould you PTAL and see if you are okay with these changes?",
      "@lmolkova it looks like we decided to go ahead with the version namespace approach, is that right? I have no issue with it but wanted to understand what happens at the next semconv version bump, does v1_23_1 directory stay there or deleted?",
      "Discussed offline with @lzchen wrt folder structure.\r\n\r\nThere was an idea from .NET SIG to generate namespace per-version.  I.e. users import `v1_23_1.http_attributes` and will be able to use attributes from this namespace even when semconv library is updated and now contains `v1_24_0`, etc.\r\nWhile it's good for stability, it's blows up artifact size.\r\n\r\nAs a middle ground, I changed folder structure to\r\n- `opentelemetry-semantic-conventions`\r\n  - `src\\opentelemetry\\semconv`\r\n     - `experimental` (attributes, can also move them all to `attributes` folder)\r\n       - `db_attributes.py` - individual experimental attribute files go here \r\n     - `http_attributes.py`, etc - individual stable attribute files go here \r\n     - `metrics`\r\n        - `http_metrics.py` - stable metrics go here\r\n        - `experimental`\r\n           - `db_metrics.py` - experimental metrics go here\r\n     - `events` (nothing here yet, but eventually will be)\r\n       - stable events\r\n       - `experimental`\r\n         - experimental events\r\n\r\n\r\nThe folder structure is fully in Python SIG hands and does not need any build-tools work to be customized.",
      "Documenting options to split stable/experimental\r\n\r\n**Option 1**: ship 1 artifact containing stable and experimental semconv. Emphasize that some parts are experimental via namespace (`import semconv.experimental.foo_attributes`, perhaps we should call it `_experimental` )?\r\n\r\n- Pros: easy to maintain\r\n- Cons: \r\n  - violates semantic versioning\r\n   - when attribute stabilizes, it needs to be moved, i.e. libs/apps that depend on it need to change .See https://github.com/open-telemetry/semantic-conventions-java/pull/45#issuecomment-1973934974\r\n\r\n**Option 2**: ship 1 artifact, but two different versions: stable and preview. Stable contains only stable semconv. Preview contains all of them.\r\n\r\n- Pros: \r\n  - ideal in terms of semantic versioning\r\n  - when attribute stabilizes, it remains in the same namespace and all libs/apps that depend on it don't need to change\r\n- Cons: \r\n  - version resolution would pick the highest version (1.1.0 stable vs 1.0.0-alpha) resulting in runtime issues.\r\n\r\n**Option 3**: ship 2 artifacts  (`semconv` and `semconv-experimental`) - [Java does it this way](https://github.com/open-telemetry/semantic-conventions-java?tab=readme-ov-file#maven) and uses `incubating` term instead of `experimental`\r\n\r\n- Pros: \r\n  - good in terms of semantic versioning\r\n  - easy to maintain\r\n- Cons: \r\n   - when attribute stabilizes, all libs/apps that depend on it need to change. \r\n\r\nThe common mitigation to \"when attribute stabilizes, all libs/apps that depend on it need to change\" could be to preserve stabilized attributes in `experimental`, `incubating` namespaces (might need better name for it)\r\n\r\n\r\n-----------------------------\r\nUpdate: reached consensus with Java SIG\r\n\r\nShip 2 artifacts: `semconv` (1.0.0 stable) and `semconv-incubating` (1.0.0-alpha):\r\n- stable one contains all the stable things\r\n- experimental one contains everything\r\n- when attribute is deprecated (we won't remove them from semconv anymore):\r\n   - it stays in the artifact (`semconv` it was stable, `incubating` if it was experimental)\r\n   - it's deprecated in the code\r\n- when attribute stabilizes \r\n   - it appears in the `semconv` artifact \r\n   - it stays in the `incubating` artifacts as deprecated pointing to the new location in the stable artifact\r\n\r\nThe documentation will recommend:\r\n- lib owners to never depend on incubating artifact, hardcode experimental attributes instead",
      "Hi @open-telemetry/python-maintainers and @open-telemetry/python-approvers, I addressed your feedback.\r\n\r\nAnd here's the summary of remaining decisions I'd like to get your input on\r\n\r\n- [ ] How to generate metrics. See https://github.com/open-telemetry/opentelemetry-python/pull/3586#discussion_r1509494281 for options\r\n- [ ] How to separate stable semconv from experimental. See https://github.com/open-telemetry/opentelemetry-python/pull/3586#issuecomment-1973978521 for options\r\n      - Based on it we can also finalize the folder structure. Current structure is described here https://github.com/open-telemetry/opentelemetry-python/pull/3586#issuecomment-1973958604\r\n\r\n\r\nNote: none of this discussions are related to build-tools/jinja templates, so I think it means we can move forward with build-tools changes independently from the results of these discussions. LMK if you have any objections.",
      "Based on the SIG discussion 3/14, we have the following preliminary consensus on artifacts+stability outlined in https://github.com/open-telemetry/opentelemetry-python/pull/3586#issuecomment-1973978521 as Option 3:\r\n - have 2 artifacts (`semantic-conventions` and `semantic-conventions-experimental|incubating`). Different names and import path makes incubation/experimental status obvious\r\n - Attributes (experimental or stable) are never removed from the incubation artifact\r\n - Stabilized attributes are deprecated in the incubating artifact an point to stable one\r\n\r\nThis makes Python consistent with Java approach.\r\n\r\nOverall, we have proved that new codegeneration changes provide the flexibility to achieve it and generate idiomatic python code, so we can go ahead with them.",
      "@xrmx \r\n\r\n> Is there a reason comments are added after and not before the variables?\r\n\r\nit seems to be the pattern, e.g. here\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/d285b7f6f51b5b2f28debc072d997726e67f3574/opentelemetry-sdk/src/opentelemetry/sdk/environment_variables.py#L15-L21\r\n\r\nHappy to change it otherwise.",
      "> @xrmx\r\n> \r\n> > Is there a reason comments are added after and not before the variables?\r\n> \r\n> it seems to be the pattern, e.g. here\r\n> \r\n> https://github.com/open-telemetry/opentelemetry-python/blob/d285b7f6f51b5b2f28debc072d997726e67f3574/opentelemetry-sdk/src/opentelemetry/sdk/environment_variables.py#L15-L21\r\n> \r\n> Happy to change it otherwise.\r\n\r\nDon't mind, was just curious. I can see it making sense in sphinx documents but feels strange on python code."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0444ee515ce6a4e2a4",
    "number": 3585,
    "body": "Fixes #3584",
    "head_branch": "issue_3584",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update contrib SHA (#3585)\n\nFixes #3584"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0544ee515ce6a4e2a5",
    "number": 3583,
    "body": "Prepare release 1.22.0/0.43b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.22.0-0.43b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.22.x-0.43bx] Prepare release 1.22.0/0.43b0 (#3583)\n\n* Prepare release 1.22.0/0.43b0\r\n\r\n* Update SHA\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0644ee515ce6a4e2a6",
    "number": 3582,
    "body": "Update version to `1.23.0.dev/0.44b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.23.0.dev-0.44b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.23.0.dev/0.44b0.dev (#3582)\n\n* Update version to 1.23.0.dev/0.44b0.dev\r\n\r\n* Update SHA\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0644ee515ce6a4e2a7",
    "number": 3581,
    "body": "Fixes #3580",
    "head_branch": "issue_3580",
    "is_a_fork": true,
    "comments": [
      "Can you explain this a bit? Were we using gh-pages branch for anything?",
      "> Can you explain this a bit? Were we using gh-pages branch for anything?\r\n\r\nNo, we weren't, but if we do is better that we have a branch named `gh-pages` since it can be used for other things other than benchmarks and this is also consistent with other repos."
    ],
    "commit_messages": [
      "Rename benchmarks branch to gh-pages (#3581)\n\nFixes #3580"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0744ee515ce6a4e2a8",
    "number": 3576,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: fritzpaz / name: Fritz Stapfer Paz  (6b38a3c283988fc1f64c89099d42e61e13b9bc6e)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (ce2f2b84a196a922f902873bf7fee65d80245b9f, e63c794e54ef1021cea1ccde5a654f1f0b62e4d2)</li></ul>"
    ],
    "commit_messages": [
      "Update pyproject.toml (#3576)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0844ee515ce6a4e2a9",
    "number": 3575,
    "body": "# Description\r\n\r\nResolves issue 3060 by adding ProxyLoggerProvider, ProxyLogger and associated tests.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3060\r\n\r\n## Type of change\r\n\r\n- [] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTest cases added and passing with `tox -e opentelemetry-api`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/3060",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv Do you need anything more from me here? I'm really keen to do anything we can to progress logs to stable as I'm looking to get them into production where I work this year.",
      "@ocelotl Sorry I misread what had happened here and deleted my branch, which closed the PR. Reopening so this can be merged properly."
    ],
    "commit_messages": [
      "Add ProxyLoggerProvider, ProxyLogger and associated tests (#3575)\n\n* 3060 adds ProxyLoggerProvider, ProxyLogger and associated tests\r\n\r\n* Updates changelog for 3060 (add proxy classes for logging)\r\n\r\n* Removes proxy classes from module level log import following review\r\n\r\n* Moves changelog entry to unreleased\r\n\r\n* Fixes build failures\r\n\r\n* Fix mypy and lint\r\n\r\n---------"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0944ee515ce6a4e2aa",
    "number": 3574,
    "body": "This proposes a path forward for https://github.com/open-telemetry/opentelemetry-specification/issues/3205.\r\n\r\nThe idea is that implementers can come up with whatever attribute based scheme they want to use to samples spans. For example:\r\n- Log level equivalent. Put a `'myorg.log_level'` attribute in spans you want to sample and write a custom sampler that samples only above a certain level or samples a ratio of spans depending on the level.\r\n- Sample rate at the span level. Put a `myorg.sample_rate` attribute and spans like in the test I added.\r\n\r\nThere's a lot of use cases discussed but one in particular I find very useful is:\r\n\r\n```\r\nfor x in range(100):\r\n    with tracer.start_as_current_span('processing chunk or whatever', attributes={'sample_rate': 0.1}):\r\n        x = 1 + 1 - 1\r\n        with tracer.start_as_current_span('doing subtask in chunk'):\r\n              sleep(x)\r\n```\r\n\r\nIf you are processing tens (millions?) or \"equivalent\" chunks you may want to get some idea of long each chunk is taking but you probably don't want telemetry for every single chunk.\r\nIn the example above you'd get ~ 10 `'processing chunk or whatever'` spans with their complete subtree (so 10 `'doing subtask in chunk'`).\r\nYou could also sample nested loops e.g. to get 10% of the outer loop and 1% of the inner loop.\r\nThis won't \"break\" traces as discussed in the linked issue because any child spans will be of a non-sampled span will also be not sampled (assuming this is wrapped in the ParentBased Sampler).",
    "head_branch": "add-span-id-sampler",
    "is_a_fork": true,
    "comments": [
      "This is a request for a feature that has not yet been approved by the spec. I don't have anything against it but I'm marking this PR as a draft to prevent accidental merging. This PR can remain open so that @adriangb can use it to explain this idea to the spec."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0a44ee515ce6a4e2ab",
    "number": 3572,
    "body": "# Description\r\n\r\nThe Prometheus Exporter did not sanitize the info metric.\r\nThis might prevent successful scraping from Prometheus when having, for example, dots in an attribute.\r\n\r\nFixes #3571 and #3563\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit test `test_target_info_sanitize` which checks if a character like a dot `.` in an attribute name is translated to an underscore `_`.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "prometheus_sanitize_info",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: kornerc / name: Clemens Korner  (d1c331c4cd45f5eb0a2fe1e47f4b0dba765e0d22, 60d505b3987863eab5a569bc082d24490ec3d9c4, e5562341e43a5c210f6956a3dff79bc8326dbb91, 170647e3aff1d92bd8bae174115a73e171a204ab)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (6309f42d466c875595da57aab56f12c37d41eda0)</li></ul>",
      "PR is ready for review.\r\n\r\nI think there is no need to update the documentation, nonetheless, I left in the checklist `Documentation has been updated` unchecked. \r\n\r\nDuring the fix I found another issue in a test:\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/3dfe2249cc4a203bf24578483b192fec7266596b/exporter/opentelemetry-exporter-prometheus/tests/test_prometheus_exporter.py#L361\r\nParts of the test are not executed because `result[:0]` returns an empty list, instead it should be something like `prometheus_metric = result[0]`.\r\nBut I guess it is better to make a separate issue and PR for this (I can do that).",
      "@kornerc It looks like linting failed because `black` formatting was not applied.  You can check this locally using\r\n\r\n```\r\npip install tox==3.27.1\r\ntox -e lint\r\n```\r\n\r\nTo fix, you can use\r\n\r\n```\r\npip install -r dev-requirements.txt\r\npython -m black .\r\n```\r\n\r\nI'm now looking into the other CI failure to see how to fix it.",
      "@kornerc   It seems like the only other error was unrelated:\r\n\r\n```\r\nERROR:   py37-test-instrumentation-falcon3: commands failed\r\n```\r\n\r\nSo we can probably get this reviewed after linting is fixed.",
      "Thanks for the PR!",
      "> @kornerc It looks like linting failed because `black` formatting was not applied. You can check this locally using\r\n> \r\n> ```\r\n> pip install tox==3.27.1\r\n> tox -e lint\r\n> ```\r\n> \r\n> To fix, you can use\r\n> \r\n> ```\r\n> pip install -r dev-requirements.txt\r\n> python -m black .\r\n> ```\r\n> \r\n> I'm now looking into the other CI failure to see how to fix it.\r\n\r\n@Jdsleppy thanks for the feedback and the info!\r\n\r\nIn 170647e3aff1d92bd8bae174115a73e171a204ab I reformattet the code and `tox -e lint` does not complain anymore about the formatting."
    ],
    "commit_messages": [
      "Prometheus exporter sanitize info metric (#3572)\n\n* Prometheus Exporter sanitize info metric\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Test Prometheus exporter target info sanitize\r\n\r\n* Prometheus exporter paint it black\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0b44ee515ce6a4e2ac",
    "number": 3567,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes [#3547](https://github.com/open-telemetry/opentelemetry-python/issues/3547)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "issues3547",
    "is_a_fork": true,
    "comments": [
      "This is not the correct fix. We should continue to use bounded attributes but the repr and string methods should be fixed.",
      "> This is not the correct fix. We should continue to use bounded attributes but the repr and string methods should be fixed.\r\n\r\nThanks for guidance.\r\nIt seems it is related to `__repr__` method.",
      "@srikanthccv PTAL, I think @pegasas has added a fix for your comment.",
      "> Please fix lint\r\n\r\nThanks for calling out.\r\nDone.",
      "@pegasas @srikanthccv @ocelotl I think changelog in this PR is misleading"
    ],
    "commit_messages": [
      "Use Attribute rather than boundattribute in logrecord repr (#3567)\n\n* Use Attribute rather than boundattribute in logrecord\r\n\r\n* Update __init__.py\r\n\r\nfix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0b44ee515ce6a4e2ad",
    "number": 3566,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes [#3548](https://github.com/open-telemetry/opentelemetry-python/issues/3548)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issues3548",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set Severity Text = WARN as defined (#3566)\n\n* Set Severity Text = WARN as defined\r\n\r\n* Fix warning text\r\n\r\n* Add CHANGELOG\r\n\r\n* Fix lint\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0c44ee515ce6a4e2ae",
    "number": 3565,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3549\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issues3449",
    "is_a_fork": true,
    "comments": [
      "> Please add test and CHANGELOG entry\r\n\r\nSure.\r\nI will try to simplify tox.ini in my local and add tests to loghandler\r\n![image](https://github.com/open-telemetry/opentelemetry-python/assets/13224827/1325bd2a-437e-4dc6-bf26-c3f7a2da1be2)\r\n"
    ],
    "commit_messages": [
      "Logs: set ObservedTimestamp field (#3565)\n\n* Logs: set ObservedTimestamp field\r\n\r\n* Update CHANGELOG.md\r\n\r\n---------"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0d44ee515ce6a4e2af",
    "number": 3564,
    "body": "# Description\r\n\r\nAdd `ObservedTimestamp` field\r\n\r\nFixes [#3550](https://github.com/open-telemetry/opentelemetry-python/issues/3550)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issues3550",
    "is_a_fork": true,
    "comments": [
      "Please fix the tests and add CHANGELOG entry",
      "> Please fix the tests and add CHANGELOG entry\r\n\r\nDone these 2 pending items.\r\nThanks for reviewing!"
    ],
    "commit_messages": [
      "Logs: ObservedTimestamp field is missing in console exporter output (#3564)\n\n* ObservedTimestamp field is not set\r\n\r\n* Update CHANGELOG.md \r\n\r\nunrelease\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0e44ee515ce6a4e2b0",
    "number": 3559,
    "body": "# Description\r\n\r\nChange related with https://github.com/open-telemetry/opentelemetry-python/pull/1842.\r\n\r\nDefault OTLPExporterMixin approach to retry exporting with hardcoded time range, causes issues when using it in short lasting processes and opentelemetry collector is not available.\r\nHere is example where it \"hangs\" whole process execution: https://github.com/avpps/opentelemetry-python-examples/blob/master/examples/trace.py\r\n\r\nI just moved hardcoded value to make it configurable. In my cases it make sense to not retry export at all.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nOTLPExporterMixin tests pass after change. \r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "feature",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: avpps / name: Piotr  (36400f65287051ffc2b0b07f64bbfe137a357255, 0cd8bf0a8f580ab75a49006f7539293b4d64c000)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (311d935055ad2f40cd126279688a402a710975b8)</li></ul>",
      "I could also use this feature, it would be nice in our setup."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0f44ee515ce6a4e2b1",
    "number": 3557,
    "body": "# Description\r\n\r\nFixes #3370.\r\n\r\nThis fix was suggested by @mariojonke in https://github.com/open-telemetry/opentelemetry-python/issues/3370#issuecomment-1825219939.\r\n\r\nThe `taskName` attribute added in Python 3.12 is documented in https://docs.python.org/3/library/logging.html#logrecord-attributes.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPatched the [Fedora Linux package](https://src.fedoraproject.org/rpms/python-opentelemetry) and confirmed that `TestLoggingInit.test_logging_init_exporter` now passes.\r\n\r\nYou can verify it without using Fedora by running the tests however you normally do, but using Python 3.12.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated **N/A?**\r\n- [ ] Unit tests have been added **N/A**\r\n- [ ] Documentation has been updated **N/A**\r\n",
    "head_branch": "logging-taskname",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Python 3.12 compat.: LogRecord now has a taskName attribute (#3557)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c0f44ee515ce6a4e2b2",
    "number": 3554,
    "body": "Fixes #3514\r\nFixes #3508\r\n\r\nWe no longer support this exporter. We should remove it and not release it anymore.",
    "head_branch": "issue_3514",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove Jaeger exporter (#3554)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1044ee515ce6a4e2b3",
    "number": 3541,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sbom",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1144ee515ce6a4e2b4",
    "number": 3539,
    "body": null,
    "head_branch": "scope",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add checking instrumentation scope in test base (#3539)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1244ee515ce6a4e2b5",
    "number": 3536,
    "body": "# Description\r\n\r\nA deployment I ran over the weekend is logging the following message hundreds of times per minute:\r\n\r\n> \"Failed to export metrics to otlp.eu01.nr-data.net, error code: StatusCode.UNKNOWN\"\r\n\r\nFor this status code - 'Unknown' - it would be nice to have the full error logged, as the message above is very hard to debug.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI've added a unit test, `test_unknown_logs`, but haven't been able to run it, because I'm struggling a bit with how to set up this project for development. \r\n\r\nIf this patchset seems useful to include, I'm happy to invest some time to get the test sorted properly. I asked in the slack channel for some help with how people normally set up the project for development. \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "jake/exc-info-unknown-export",
    "is_a_fork": true,
    "comments": [
      "@lzchen done! "
    ],
    "commit_messages": [
      "Add stack trace on `StatusCode.UNKNOWN` export error (#3536)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1344ee515ce6a4e2b6",
    "number": 3534,
    "body": "# Description\r\n\r\nFixes #3535\r\n\r\nsometime raised error caused by Value span_id \r\n\r\n~~~SHELL\r\nTraceback (most recent call last):\r\n  File \"xxx/.venv/lib/python3.10/site-packages/opentelemetry/exporter/otlp/proto/common/_internal/__init__.py\", line 104, in _encode_attributes\r\n    pb2_attributes.append(_encode_key_value(key, value))\r\n  File \"xxx/.venv/lib/python3.10/site-packages/opentelemetry/exporter/otlp/proto/common/_internal/__init__.py\", line 85, in _encode_key_value\r\n    return PB2KeyValue(key=key, value=_encode_value(value))\r\n  File \"xxx/.venv/lib/python3.10/site-packages/opentelemetry/exporter/otlp/proto/common/_internal/__init__.py\", line 68, in _encode_value\r\n    return PB2AnyValue(int_value=value)\r\nValueError: Value out of range: 10597685537261926722\r\n~~~\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n\r\n~~~Python\r\n# error demo\r\nfrom opentelemetry.proto.common.v1.common_pb2 import AnyValue as PB2AnyValue\r\n\r\n\r\nif __name__ == '__main__':\r\n    SPAN_ID_MAX_VALUE = 2**64 -1 # 18446744073709551615\r\n    print(\"SPAN_ID_MAX_VALUE:\", PB2AnyValue(int_value=SPAN_ID_MAX_VALUE)) # raise ValueError: Value out of range: 18446744073709551615\r\n\r\n~~~\r\n\r\n",
    "head_branch": "fix-span-id-maxsize-int64",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: KimSoungRyoul / name: KimSoungRyoul  (3675ca0722d66e43b4b84ef813514ce582ee4a9e)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (2634195907cd1c9a8ef729070ffa68124b533ea2)</li></ul>",
      "Please fix the failing tests.",
      "@KimSoungRyoul the example you added in the issue should be a test case in this PR:\r\n\r\n``` python\r\n# error demo\r\nfrom opentelemetry.proto.common.v1.common_pb2 import AnyValue as PB2AnyValue\r\n\r\n\r\nif __name__ == '__main__':\r\n    CURRENT_SPAN_ID_MAX_VALUE = 2**64 -1 # 18446744073709551615\r\n    EXPECTED_SPAN_ID_MAX_VALUE = 2**63 -1 \r\n    \r\n    print(\"SPAN_ID_MAX_VALUE:\", PB2AnyValue(int_value=EXPECTED_SPAN_ID_MAX_VALUE)) # no error\r\n    print(\"SPAN_ID_MAX_VALUE:\", PB2AnyValue(int_value=SPAN_ID_MAX_VALUE)) # raise ValueError: Value out of range: 18446744073709551615\r\n```",
      "@KimSoungRyoul why are you adding span_id as attribute? This error is expected.",
      "@KimSoungRyoul are you still working on this? This PR will be closed in a week if it is still not updated.",
      "no i don't work on this, thank you for asking 😄 \r\n\r\nI'll open another PR if I need"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1444ee515ce6a4e2b7",
    "number": 3533,
    "body": "# Description\r\n\r\n- Move the proto-gen dependencies to a new file. They are only used for proto file generation when we update the `opentelemetry-proto` version. People run into build issues when installing `grpcio-tools` and that shouldn't block them from running lint/docs etc on changes that are unrelated.\r\n- More conservative approach to version pinning to avoid surprises.\r\n- Expand the black ignore list, otherwise black would format everything in the virtual environment.\r\n- Update the testenv in the lint stage to work on any Python version.\r\n\r\nI verified that lint, docs, and other steps work on py3.8 to py3.11 so contributors with any of the versions should be able to run them locally without any issues. ",
    "head_branch": "update-docs-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update lint deps and configs (#3533)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1544ee515ce6a4e2b8",
    "number": 3532,
    "body": "# Description\r\n\r\nThis change adds a new `integration-tests` subproject and an \"additional\" tox environment called `integration-tests`. This is not a default tox environment, so it shouldn't run when you run tox unless you specifically ask for it (via `tox -e integration-tests`).\r\n\r\nThis subproject is intended to hold and manage tests that 1) take a long time to run and/or set up, 2) often involve additional services like the Collector or some simulated telemetry backend, and 3) often depend on lots of opentelemetry python subprojects and/or third party libraries and services.\r\n\r\nIf this proposal is accepted, we might want to run these tests on a nightly basis or something, but any automation is out of scope for this change.\r\n\r\nTo start, I have added some tests for the BatchSpanProcessor with a simulated backend. All four of the tests run in about a minute.",
    "head_branch": "integration-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1544ee515ce6a4e2b9",
    "number": 3531,
    "body": "# Description\r\n\r\nAdd test coverage to [this PR](https://github.com/open-telemetry/opentelemetry-python/pull/3331) so we can get it merged.",
    "head_branch": "faster-boundedattributes-ctor-tests",
    "is_a_fork": true,
    "comments": [
      "Cleaning up."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1644ee515ce6a4e2ba",
    "number": 3528,
    "body": "# Description\r\n\r\nThis fixes some incorrect typing in ReadableSpan, including assumptions about the type of `attributes` which causes a bug when they're not a `BoundedAttributes` instance.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis is a refactor so I'm relying on the existing tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-readablespan",
    "is_a_fork": true,
    "comments": [
      "There's a lot more of this work that needs to be done across all of the repo(s). Is there any appetite for this from the maintainer team?",
      "Also I'd skip this from the changelog if possible since it's (mostly) an internal refactor",
      "Only the `opentelemetry-api` package is in good shape and has CI checks and in the rest of the packages, you see half-complete work. We definitely want to see more parts of the codebase especially public API typed.",
      "+1 to that, I'd love to have typing working on the SDK. This is tracked in https://github.com/open-telemetry/opentelemetry-python/issues/1608",
      "@srikanthccv this is ready for review",
      "Thanks folks!"
    ],
    "commit_messages": [
      "Fix typing in ReadableSpan (#3528)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1744ee515ce6a4e2bb",
    "number": 3527,
    "body": "[![Mend Renovate logo banner](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nWelcome to [Renovate](https://togithub.com/renovatebot/renovate)! This is an onboarding PR to help you understand and configure settings before regular Pull Requests begin.\n\n🚦 To activate Renovate, merge this Pull Request. To disable Renovate, simply close this Pull Request unmerged.\n\n\n\n---\n### Detected Package Files\n\n * `.github/workflows/backport.yml` (github-actions)\n * `.github/workflows/benchmarks.yml` (github-actions)\n * `.github/workflows/changelog.yml` (github-actions)\n * `.github/workflows/check-links.yml` (github-actions)\n * `.github/workflows/codeql-analysis.yml` (github-actions)\n * `.github/workflows/prepare-patch-release.yml` (github-actions)\n * `.github/workflows/prepare-release-branch.yml` (github-actions)\n * `.github/workflows/public-api-check.yml` (github-actions)\n * `.github/workflows/release.yml` (github-actions)\n * `.github/workflows/test.yml` (github-actions)\n * `exporter/opentelemetry-exporter-jaeger-proto-grpc/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-jaeger-thrift/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-jaeger/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-opencensus/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-otlp-proto-common/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-otlp-proto-grpc/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-otlp-proto-http/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-otlp/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-prometheus/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-zipkin-json/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-zipkin-proto-http/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-zipkin/pyproject.toml` (pep621)\n * `opentelemetry-api/pyproject.toml` (pep621)\n * `opentelemetry-proto/pyproject.toml` (pep621)\n * `opentelemetry-sdk/pyproject.toml` (pep621)\n * `propagator/opentelemetry-propagator-b3/pyproject.toml` (pep621)\n * `propagator/opentelemetry-propagator-jaeger/pyproject.toml` (pep621)\n * `shim/opentelemetry-opencensus-shim/pyproject.toml` (pep621)\n * `shim/opentelemetry-opentracing-shim/pyproject.toml` (pep621)\n * `dev-requirements.txt` (pip_requirements)\n * `docs-requirements.txt` (pip_requirements)\n\n### Configuration Summary\n\nBased on the default config's presets, Renovate will:\n\n  - Start dependency updates only once this onboarding PR is merged\n  - Show all Merge Confidence badges for pull requests.\n  - Enable Renovate Dependency Dashboard creation.\n  - Use semantic commit type `fix` for dependencies and `chore` for all others if semantic commits are in use.\n  - Ignore `node_modules`, `bower_components`, `vendor` and various test/tests directories.\n  - Group known monorepo packages together.\n  - Use curated list of recommended non-monorepo package groupings.\n  - Apply crowd-sourced package replacement rules.\n  - Apply crowd-sourced workarounds for known problems with packages.\n\n🔡 Would you like to change the way Renovate is upgrading your dependencies? Simply edit the `renovate.json` in this branch with your custom config and the list of Pull Requests in the \"What to Expect\" section below will be updated the next time Renovate runs.\n\n---\n\n### What to Expect\n\nWith your current configuration, Renovate will create 31 Pull Requests:\n\n<details>\n<summary>Update dependency test/opencensus to v0.11.3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/test-opencensus-0.x`\n  - Merge into: `main`\n  - Upgrade [test/opencensus](https://togithub.com/census-instrumentation/opencensus-python) to `==0.11.3`\n\n\n</details>\n\n<details>\n<summary>Update dependency black to ~=22.12.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/black-22.x`\n  - Merge into: `main`\n  - Upgrade [black](https://togithub.com/psf/black) to `~=22.12.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency codespell to v2.2.6</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/codespell-2.x`\n  - Merge into: `main`\n  - Upgrade [codespell](https://togithub.com/codespell-project/codespell) to `==2.2.6`\n\n\n</details>\n\n<details>\n<summary>Update dependency googleapis-common-protos to ~=1.61, <1.62</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/googleapis-common-protos-1.x`\n  - Merge into: `main`\n  - Upgrade [googleapis-common-protos](https://togithub.com/googleapis/python-api-common-protos) to `~=1.61, <1.62`\n\n\n</details>\n\n<details>\n<summary>Update dependency grpcio-tools to v1.59.2</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/grpcio-tools-1.x`\n  - Merge into: `main`\n  - Upgrade grpcio-tools to `==1.59.2`\n\n\n</details>\n\n<details>\n<summary>Update dependency markupsafe to v2.1.3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/markupsafe-2.x`\n  - Merge into: `main`\n  - Upgrade markupsafe to `==2.1.3`\n\n\n</details>\n\n<details>\n<summary>Update dependency mypy to v0.991</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/mypy-0.x`\n  - Merge into: `main`\n  - Upgrade [mypy](https://togithub.com/python/mypy) to `==0.991`\n\n\n</details>\n\n<details>\n<summary>Update dependency mypy-protobuf to ~=3.5.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/mypy-protobuf-3.x`\n  - Merge into: `main`\n  - Upgrade [mypy-protobuf](https://togithub.com/nipunn1313/mypy-protobuf) to `~=3.5.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency opentracing to ~=2.4.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/opentracing-2.x`\n  - Merge into: `main`\n  - Upgrade [opentracing](https://togithub.com/opentracing/opentracing-python) to `~=2.4.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency pylint to v2.17.7</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/pylint-2.x`\n  - Merge into: `main`\n  - Upgrade [pylint](https://togithub.com/pylint-dev/pylint) to `==2.17.7`\n\n\n</details>\n\n<details>\n<summary>Update dependency pytest to v7.4.3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/pytest-7.x`\n  - Merge into: `main`\n  - Upgrade [pytest](https://togithub.com/pytest-dev/pytest) to `==7.4.3`\n\n\n</details>\n\n<details>\n<summary>Update dependency ruamel.yaml to v0.18.5</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/ruamel.yaml-0.x`\n  - Merge into: `main`\n  - Upgrade [ruamel.yaml](https://sourceforge.net/p/ruamel-yaml/code/ci/default/tree/) to `==0.18.5`\n\n\n</details>\n\n<details>\n<summary>Update dependency sphinx-autodoc-typehints to ~=1.25.2</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/sphinx-autodoc-typehints-1.x`\n  - Merge into: `main`\n  - Upgrade [sphinx-autodoc-typehints](https://togithub.com/tox-dev/sphinx-autodoc-typehints) to `~=1.25.2`\n\n\n</details>\n\n<details>\n<summary>Update dependency test/opentracing to ~=2.4.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/test-opentracing-2.x`\n  - Merge into: `main`\n  - Upgrade [test/opentracing](https://togithub.com/opentracing/opentracing-python) to `~=2.4.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency test/responses to v0.24.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/test-responses-0.x`\n  - Merge into: `main`\n  - Upgrade [test/responses](https://togithub.com/getsentry/responses) to `==0.24.0`\n\n\n</details>\n\n<details>\n<summary>Update actions/cache action to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/actions-cache-3.x`\n  - Merge into: `main`\n  - Upgrade [actions/cache](https://togithub.com/actions/cache) to `v3`\n\n\n</details>\n\n<details>\n<summary>Update actions/checkout action to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/actions-checkout-4.x`\n  - Merge into: `main`\n  - Upgrade [actions/checkout](https://togithub.com/actions/checkout) to `v4`\n\n\n</details>\n\n<details>\n<summary>Update actions/setup-python action to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/actions-setup-python-4.x`\n  - Merge into: `main`\n  - Upgrade [actions/setup-python](https://togithub.com/actions/setup-python) to `v4`\n\n\n</details>\n\n<details>\n<summary>Update dependency backoff to v2</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/backoff-2.x`\n  - Merge into: `main`\n  - Upgrade [backoff](https://togithub.com/litl/backoff) to `>=2.2.1, <2.3.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency black to v23</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/black-23.x`\n  - Merge into: `main`\n  - Upgrade [black](https://togithub.com/psf/black) to `~=23.11.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency bleach to v6</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/bleach-6.x`\n  - Merge into: `main`\n  - Upgrade [bleach](https://togithub.com/mozilla/bleach) to `==6.1.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency flake8 to v6</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/flake8-6.x`\n  - Merge into: `main`\n  - Upgrade [flake8](https://togithub.com/pycqa/flake8) to `~=6.1`\n\n\n</details>\n\n<details>\n<summary>Update dependency flask to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/flask-3.x`\n  - Merge into: `main`\n  - Upgrade flask to `~=3.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency mypy to v1</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/mypy-1.x`\n  - Merge into: `main`\n  - Upgrade [mypy](https://togithub.com/python/mypy) to `==1.7.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency protobuf to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/protobuf-4.x`\n  - Merge into: `main`\n  - Upgrade protobuf to `~=4.25`\n\n\n</details>\n\n<details>\n<summary>Update dependency pylint to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/pylint-3.x`\n  - Merge into: `main`\n  - Upgrade [pylint](https://togithub.com/pylint-dev/pylint) to `==3.0.2`\n\n\n</details>\n\n<details>\n<summary>Update dependency readme-renderer to v42</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/readme-renderer-42.x`\n  - Merge into: `main`\n  - Upgrade [readme-renderer](https://togithub.com/pypa/readme_renderer) to `~=42.0`\n\n\n</details>\n\n<details>\n<summary>Update dependency sphinx to v7</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/sphinx-7.x`\n  - Merge into: `main`\n  - Upgrade [sphinx](https://togithub.com/sphinx-doc/sphinx) to `~=7.2.6`\n\n\n</details>\n\n<details>\n<summary>Update dependency sphinx-rtd-theme to v1</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/sphinx-rtd-theme-1.x`\n  - Merge into: `main`\n  - Upgrade [sphinx-rtd-theme](https://togithub.com/readthedocs/sphinx_rtd_theme) to `~=1.3`\n\n\n</details>\n\n<details>\n<summary>Update dependency ubuntu to v22</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/ubuntu-22.x`\n  - Merge into: `main`\n  - Upgrade [ubuntu](https://togithub.com/actions/runner-images) to `22.04`\n\n\n</details>\n\n<details>\n<summary>Update github/codeql-action action to v2</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/github-codeql-action-2.x`\n  - Merge into: `main`\n  - Upgrade [github/codeql-action](https://togithub.com/github/codeql-action) to `v2`\n\n\n</details>\n\n<br />\n\n🚸 Branch creation will be limited to maximum 2 per hour, so it doesn't swamp any CI resources or overwhelm the project. See docs for `prhourlylimit` for details.\n\n\n---\n\n❓ Got questions? Check out Renovate's [Docs](https://docs.renovatebot.com/), particularly the Getting Started section.\nIf you need any further assistance then you can also [request help here](https://togithub.com/renovatebot/renovate/discussions).\n\n\n---\n\nThis PR has been generated by [Mend Renovate](https://www.mend.io/free-developer-tools/renovate/). View repository job log [here](https://developer.mend.io/github/open-telemetry/opentelemetry-python).\n\n<!--renovate-config-hash:e80b4e42a3043bc12fa0640db4bac392d2bf770acf841360d7c8ceeeac2ec1a9-->\n",
    "head_branch": "renovate/configure",
    "is_a_fork": false,
    "comments": [
      "Wrong setup of Renovate to entire org, reverted and PR not needed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1844ee515ce6a4e2bc",
    "number": 3524,
    "body": "# Description\r\n\r\n[`Lock.acquire`](https://docs.python.org/3/library/threading.html#threading.Lock.acquire) with timeout takes a seconds parameter not milliseconds. Currently if the exporting is not successful the acquire takes much longer than the intended timeout.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n",
    "head_branch": "fix-otlp-exporter-shutdown-wait",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: timeout period when acquiring grpc exporter lock on shutdown (#3524)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1944ee515ce6a4e2bd",
    "number": 3519,
    "body": "# Description\r\n\r\nThis is a pull to separate the refactor of InMemoryMetricExporter from its usage in the [pull#3486](https://github.com/open-telemetry/opentelemetry-python/pull/3486)\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added tests for InMemoryMetricExporter\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "ns_InMemoryMetricExporter_refactor_and_tests",
    "is_a_fork": true,
    "comments": [
      "Don't think this pull needs the changelog update, but happy to add it if necessary.",
      "I don't think we need to add `InMemoryMetricExporter` to the public API. The `InMemoryMetricReader` is what should be used for testing. What problem does `InMemoryMetricExporter` solve that `InMemoryMetricReader` can't do?",
      "> I don't think we need to add `InMemoryMetricExporter` to the public API. The `InMemoryMetricReader` is what should be used for testing. What problem does `InMemoryMetricExporter` solve that `InMemoryMetricReader` can't do?\r\n\r\nI agree, @nstawski, I'm closing this PR because of the reasons above, please let me know if you disagree :+1: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1944ee515ce6a4e2be",
    "number": 3517,
    "body": "Copy log updates from `release/v1.21.x-0.42bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.21.x-0.42bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Copy change log updates from release/v1.21.x-0.42bx (#3517)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1a44ee515ce6a4e2bf",
    "number": 3513,
    "body": "The test utility `_create_start_and_end_span()` creates a new Resource each time it creates a span. This is quite slow because Resource.create() iterates through entry points every time it's called. This change requires that a Resource be passed in to `_create_start_and_end_span` instead.\r\n\r\nTests that take > 1 second:\r\n\r\nBEFORE:\r\n\r\n145.20s call     opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_flush_from_multiple_threads\r\n4.68s call     opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_batch_span_processor_many_spans\r\n3.12s call     opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_batch_span_processor_lossless\r\n2.02s call     opentelemetry-sdk/tests/metrics/test_metrics.py::TestDuplicateInstrumentAggregateData::test_duplicate_instrument_aggregate_data\r\n2.01s call     opentelemetry-sdk/tests/metrics/test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_collect_deadline\r\n1.79s call     opentelemetry-sdk/tests/metrics/exponential_histogram/test_exponential_bucket_histogram_aggregation.py::TestExponentialBucketHistogramAggregation::test_ascending_sequence\r\n1.72s call     opentelemetry-sdk/tests/metrics/test_metric_reader_storage.py::TestMetricReaderStorage::test_race_concurrent_measurements\r\n1.49s call     opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_batch_span_processor_fork\r\n1.13s call     opentelemetry-sdk/tests/logs/test_export.py::TestBatchLogRecordProcessor::test_batch_log_record_processor_fork\r\n1.10s call     opentelemetry-sdk/tests/performance/benchmarks/metrics/test_benchmark_metrics.py::test_counter_add[0-delta]\r\n1.02s call     opentelemetry-sdk/tests/metrics/integration_test/test_time_align.py::TestTimeAlign::test_time_align_cumulative\r\n1.00s call     opentelemetry-sdk/tests/metrics/test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_collect_timeout\r\n\r\nAFTER:\r\n\r\n2.01s call     opentelemetry-sdk/tests/metrics/test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_collect_deadline\r\n1.73s call     opentelemetry-sdk/tests/metrics/exponential_histogram/test_exponential_bucket_histogram_aggregation.py::TestExponentialBucketHistogramAggregation::test_ascending_sequence\r\n1.37s call     opentelemetry-sdk/tests/metrics/test_metric_reader_storage.py::TestMetricReaderStorage::test_race_concurrent_measurements\r\n1.36s call     opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_batch_span_processor_fork\r\n1.10s call     opentelemetry-sdk/tests/logs/test_export.py::TestBatchLogRecordProcessor::test_batch_log_record_processor_fork\r\n1.09s call     opentelemetry-sdk/tests/performance/benchmarks/metrics/test_benchmark_metrics.py::test_counter_add[0-delta]\r\n1.03s call     opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_batch_span_processor_lossless\r\n1.01s call     opentelemetry-sdk/tests/metrics/integration_test/test_time_align.py::TestTimeAlign::test_time_align_cumulative\r\n1.00s call     opentelemetry-sdk/tests/metrics/test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_collect_timeout\r\n",
    "head_branch": "faster-tests",
    "is_a_fork": true,
    "comments": [
      "> The test utility `_create_start_and_end_span()` creates a new Resource each time it creates a span. This is quite slow because Resource.create() iterates through entry points every time it's called. This change requires that a Resource be passed in to `_create_start_and_end_span` instead.\r\n> \r\n> Tests that take > 1 second:\r\n> \r\n> BEFORE:\r\n> \r\n> 145.20s call opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_flush_from_multiple_threads 4.68s call opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_batch_span_processor_many_spans 3.12s call opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_batch_span_processor_lossless 2.02s call opentelemetry-sdk/tests/metrics/test_metrics.py::TestDuplicateInstrumentAggregateData::test_duplicate_instrument_aggregate_data 2.01s call opentelemetry-sdk/tests/metrics/test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_collect_deadline 1.79s call opentelemetry-sdk/tests/metrics/exponential_histogram/test_exponential_bucket_histogram_aggregation.py::TestExponentialBucketHistogramAggregation::test_ascending_sequence 1.72s call opentelemetry-sdk/tests/metrics/test_metric_reader_storage.py::TestMetricReaderStorage::test_race_concurrent_measurements 1.49s call opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_batch_span_processor_fork 1.13s call opentelemetry-sdk/tests/logs/test_export.py::TestBatchLogRecordProcessor::test_batch_log_record_processor_fork 1.10s call opentelemetry-sdk/tests/performance/benchmarks/metrics/test_benchmark_metrics.py::test_counter_add[0-delta] 1.02s call opentelemetry-sdk/tests/metrics/integration_test/test_time_align.py::TestTimeAlign::test_time_align_cumulative 1.00s call opentelemetry-sdk/tests/metrics/test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_collect_timeout\r\n> \r\n> AFTER:\r\n> \r\n> 2.01s call opentelemetry-sdk/tests/metrics/test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_collect_deadline 1.73s call opentelemetry-sdk/tests/metrics/exponential_histogram/test_exponential_bucket_histogram_aggregation.py::TestExponentialBucketHistogramAggregation::test_ascending_sequence 1.37s call opentelemetry-sdk/tests/metrics/test_metric_reader_storage.py::TestMetricReaderStorage::test_race_concurrent_measurements 1.36s call opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_batch_span_processor_fork 1.10s call opentelemetry-sdk/tests/logs/test_export.py::TestBatchLogRecordProcessor::test_batch_log_record_processor_fork 1.09s call opentelemetry-sdk/tests/performance/benchmarks/metrics/test_benchmark_metrics.py::test_counter_add[0-delta] 1.03s call opentelemetry-sdk/tests/trace/export/test_export.py::TestBatchSpanProcessor::test_batch_span_processor_lossless 1.01s call opentelemetry-sdk/tests/metrics/integration_test/test_time_align.py::TestTimeAlign::test_time_align_cumulative 1.00s call opentelemetry-sdk/tests/metrics/test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_collect_timeout\r\n\r\nThis looks promising, but I don't see the before and after times being comparable, it seems like there are items in the before list that don't show up in the after list.",
      "> This looks promising, but I don't see the before and after times being comparable, it seems like there are items in the before list that don't show up in the after list.\r\n\r\nThanks -- to address your comment, it's because these are just the tests that take > 1 second. If a test shows up in the first list and doesn't show up in the second list it's because after this change the test is no longer slower than 1 second.",
      "Oh, wow, that's very impressive then! Great fix! :sunglasses: "
    ],
    "commit_messages": [
      "Tweak sdk tests so they run faster (#3513)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1b44ee515ce6a4e2c0",
    "number": 3511,
    "body": "Fixes #3510",
    "head_branch": "issue_3510",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove old benchmarks (#3511)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1c44ee515ce6a4e2c1",
    "number": 3509,
    "body": "Fixes #3502",
    "head_branch": "issue_3508",
    "is_a_fork": true,
    "comments": [
      "Let's add that the package is no longer maintained and remove it from the publish as well. "
    ],
    "commit_messages": [
      "Remove testing for Jaeger exporter (#3509)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1d44ee515ce6a4e2c2",
    "number": 3507,
    "body": "Reopening after #3500 with a fix in the yaml file.",
    "head_branch": "issue_3499",
    "is_a_fork": true,
    "comments": [
      "@trask test cases seem to be running now :+1: ",
      "> Will number of jobs create any problem?\r\n\r\nIt is a large number of jobs, but they seem to be running fine. For some reason 60 jobs are stuck in \"Expected — Waiting for status to be reported\" status even when these jobs are no longer defined in the workflow file.",
      "> For some reason 60 jobs are stuck in \"Expected — Waiting for status to be reported\" status even when these jobs are no longer defined in the workflow file.\r\n\r\nit looks like these are \"Required\" status checks, you'll probably need to update the branch protections\r\n\r\n(we've found this strategy useful in the Java repos: https://github.com/trask/repository-practices/blob/main/docs/general-github-actions-practices.md#have-a-single-required-status-check-for-pull-requests)",
      "> > For some reason 60 jobs are stuck in \"Expected — Waiting for status to be reported\" status even when these jobs are no longer defined in the workflow file.\r\n> \r\n> it looks like these are \"Required\" status checks, you'll probably need to update the branch protections\r\n> \r\n> (we've found this strategy useful in the Java repos: [trask/repository-practices@`main`/docs/general-github-actions-practices.md#have-a-single-required-status-check-for-pull-requests](https://github.com/trask/repository-practices/blob/main/docs/general-github-actions-practices.md?rgh-link-date=2023-11-06T16%3A33%3A59Z#have-a-single-required-status-check-for-pull-requests))\r\n\r\nAh, that's right fixing..., thanks @trask !"
    ],
    "commit_messages": [
      "Separate contrib jobs per instrumentation (#3507)\n\n* Separate contrib jobs per instrumentation\r\n\r\nFixes #3499\r\n\r\n* Separate exporters\r\n\r\n* Refactor listings\r\n\r\n* Fix lists"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1e44ee515ce6a4e2c3",
    "number": 3505,
    "body": "Bumps [flask](https://github.com/pallets/flask) from 2.0.1 to 2.2.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/flask/releases\">flask's releases</a>.</em></p>\n<blockquote>\n<h2>2.2.5</h2>\n<p>This is a security fix release for the 2.2.x release branch. Note that 2.3.x is the currently supported release branch; please upgrade to the latest version if possible.</p>\n<ul>\n<li>Security advisory: <a href=\"https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq\">https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq</a>, CVE-2023-30861</li>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-5\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-5</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/30?closed=1\">https://github.com/pallets/flask/milestone/30?closed=1</a></li>\n</ul>\n<h2>2.2.4</h2>\n<p>This is a fix release for the 2.2.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-4\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-4</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/27?closed=1\">https://github.com/pallets/flask/milestone/27?closed=1</a></li>\n</ul>\n<h2>2.2.3</h2>\n<p>This is a fix release for the 2.2.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-3\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/26?closed=1\">https://github.com/pallets/flask/milestone/26?closed=1</a></li>\n</ul>\n<h2>2.2.2</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/flask/releases/tag/2.2.0\">2.2.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-2\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/25?closed=1\">https://github.com/pallets/flask/milestone/25?closed=1</a></li>\n</ul>\n<h2>2.2.1</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/flask/releases/tag/2.2.0\">2.2.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-1\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/23?closed=1\">https://github.com/pallets/flask/milestone/23?closed=1</a></li>\n</ul>\n<h2>2.2.0</h2>\n<p>This is a feature release, which includes new features and removes previously deprecated code. The 2.2.x branch is now the supported bug fix branch, the 2.1.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-0\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/19?closed=1\">https://github.com/pallets/flask/milestone/19?closed=1</a></li>\n</ul>\n<h2>2.1.3</h2>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.1.x/changes/#version-2-1-3\">https://flask.palletsprojects.com/en/2.1.x/changes/#version-2-1-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/22?closed=1\">https://github.com/pallets/flask/milestone/22?closed=1</a></li>\n</ul>\n<h2>2.1.2</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/flask/releases/tag/2.1.0\">2.1.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.1.x/changes/#version-2-1-2\">https://flask.palletsprojects.com/en/2.1.x/changes/#version-2-1-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/21?closed=1\">https://github.com/pallets/flask/milestone/21?closed=1</a></li>\n</ul>\n<h2>2.1.1</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/flask/releases/tag/2.1.0\">2.1.0</a> feature release.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/flask/blob/main/CHANGES.rst\">flask's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 2.2.5</h2>\n<p>Released 2023-05-02</p>\n<ul>\n<li>Update for compatibility with Werkzeug 2.3.3.</li>\n<li>Set <code>Vary: Cookie</code> header when the session is accessed, modified, or refreshed.</li>\n</ul>\n<h2>Version 2.2.4</h2>\n<p>Released 2023-04-25</p>\n<ul>\n<li>Update for compatibility with Werkzeug 2.3.</li>\n</ul>\n<h2>Version 2.2.3</h2>\n<p>Released 2023-02-15</p>\n<ul>\n<li>Autoescape is enabled by default for <code>.svg</code> template files. :issue:<code>4831</code></li>\n<li>Fix the type of <code>template_folder</code> to accept <code>pathlib.Path</code>. :issue:<code>4892</code></li>\n<li>Add <code>--debug</code> option to the <code>flask run</code> command. :issue:<code>4777</code></li>\n</ul>\n<h2>Version 2.2.2</h2>\n<p>Released 2022-08-08</p>\n<ul>\n<li>Update Werkzeug dependency to &gt;= 2.2.2. This includes fixes related\nto the new faster router, header parsing, and the development\nserver. :pr:<code>4754</code></li>\n<li>Fix the default value for <code>app.env</code> to be <code>&quot;production&quot;</code>. This\nattribute remains deprecated. :issue:<code>4740</code></li>\n</ul>\n<h2>Version 2.2.1</h2>\n<p>Released 2022-08-03</p>\n<ul>\n<li>Setting or accessing <code>json_encoder</code> or <code>json_decoder</code> raises a\ndeprecation warning. :issue:<code>4732</code></li>\n</ul>\n<h2>Version 2.2.0</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/flask/commit/47af817c8fe01045c641b97f8fb784c7ad864eee\"><code>47af817</code></a> release version 2.2.5</li>\n<li><a href=\"https://github.com/pallets/flask/commit/afd63b16170b7c047f5758eb910c416511e9c965\"><code>afd63b1</code></a> Merge pull request <a href=\"https://redirect.github.com/pallets/flask/issues/5109\">#5109</a> from pallets/backport-vary-cookie</li>\n<li><a href=\"https://github.com/pallets/flask/commit/8646edca6f47e2cd57464081b3911218d4734f8d\"><code>8646edc</code></a> set <code>Vary: Cookie</code> header consistently for session</li>\n<li><a href=\"https://github.com/pallets/flask/commit/a6367dac747c1e149c60767eee7e8aa9c281c58e\"><code>a6367da</code></a> Merge pull request <a href=\"https://redirect.github.com/pallets/flask/issues/5108\">#5108</a> from pallets/werkzeug-compat</li>\n<li><a href=\"https://github.com/pallets/flask/commit/3fbfbad79fe294918459b70eb409d555b20de2c8\"><code>3fbfbad</code></a> werkzeug 2.3.3 compatibility</li>\n<li><a href=\"https://github.com/pallets/flask/commit/726d3f4fa9e8a2960541debc2d2713571da54441\"><code>726d3f4</code></a> start version 2.2.5</li>\n<li><a href=\"https://github.com/pallets/flask/commit/ddc7accaa2e83b328f969c120af2ce0804876b4a\"><code>ddc7acc</code></a> Merge pull request <a href=\"https://redirect.github.com/pallets/flask/issues/5081\">#5081</a> from pallets/release-2.2.4</li>\n<li><a href=\"https://github.com/pallets/flask/commit/74e03298200e33951ca350a35aa3a8c0b4ff8177\"><code>74e0329</code></a> release version 2.2.4</li>\n<li><a href=\"https://github.com/pallets/flask/commit/2d460685b1b3d66c713739ee91183c22fb2e5dc8\"><code>2d46068</code></a> update dev env</li>\n<li><a href=\"https://github.com/pallets/flask/commit/64bc45874daf4b9828830ea0037a19beb8364ee3\"><code>64bc458</code></a> update dev dependencies</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/flask/compare/2.0.1...2.2.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=flask&package-manager=pip&previous-version=2.0.1&new-version=2.2.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/pip/docs/getting_started/tests/flask-2.2.5",
    "is_a_fork": false,
    "comments": [
      "No changes are being added in this PR.",
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1f44ee515ce6a4e2c4",
    "number": 3504,
    "body": "Bumps [requests](https://github.com/psf/requests) from 2.26.0 to 2.31.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/releases\">requests's releases</a>.</em></p>\n<blockquote>\n<h2>v2.31.0</h2>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>v2.30.0</h2>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>v2.29.0</h2>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/blob/main/HISTORY.md\">requests's changelog</a>.</em></p>\n<blockquote>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n<h2>2.28.2 (2023-01-12)</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4\"><code>147c851</code></a> v2.31.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5\"><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>\n<li><a href=\"https://github.com/psf/requests/commit/302225334678490ec66b3614a9dddb8a02c5f4fe\"><code>3022253</code></a> test on pypy 3.8 and pypy 3.9 on windows and macos (<a href=\"https://redirect.github.com/psf/requests/issues/6424\">#6424</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/b639e66c816514e40604d46f0088fbceec1a5149\"><code>b639e66</code></a> test on py3.12 (<a href=\"https://redirect.github.com/psf/requests/issues/6448\">#6448</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/d3d504436ef0c2ac7ec8af13738b04dcc8c694be\"><code>d3d5044</code></a> Fixed a small typo (<a href=\"https://redirect.github.com/psf/requests/issues/6452\">#6452</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/2ad18e0e10e7d7ecd5384c378f25ec8821a10a29\"><code>2ad18e0</code></a> v2.30.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773\"><code>f2629e9</code></a> Remove strict parameter (<a href=\"https://redirect.github.com/psf/requests/issues/6434\">#6434</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8\"><code>87d63de</code></a> v2.29.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc\"><code>51716c4</code></a> enable the warnings plugin (<a href=\"https://redirect.github.com/psf/requests/issues/6416\">#6416</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71\"><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=\"https://redirect.github.com/psf/requests/issues/6418\">#6418</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/requests/compare/v2.26.0...v2.31.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.26.0&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/pip/docs/getting_started/tests/requests-2.31.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump requests from 2.26.0 to 2.31.0 in /docs/getting_started/tests (#3504)\n\nBumps [requests](https://github.com/psf/requests) from 2.26.0 to 2.31.0.\r\n- [Release notes](https://github.com/psf/requests/releases)\r\n- [Changelog](https://github.com/psf/requests/blob/main/HISTORY.md)\r\n- [Commits](https://github.com/psf/requests/compare/v2.26.0...v2.31.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: requests\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c1f44ee515ce6a4e2c5",
    "number": 3503,
    "body": "Bumps [werkzeug](https://github.com/pallets/werkzeug) from 2.3.7 to 3.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/werkzeug/releases\">werkzeug's releases</a>.</em></p>\n<blockquote>\n<h2>3.0.1</h2>\n<p>This is a security release for the 3.0.x feature branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-1\">https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-1</a></li>\n</ul>\n<h2>3.0.0</h2>\n<p>This is a feature release, which includes new features, removes previously deprecated code, and adds new deprecations. The 3.0.x branch is now the supported fix branch, the 2.3.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades. Test with warnings treated as errors to be able to adapt to deprecation warnings early.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-0\">https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/21?closed=1\">https://github.com/pallets/werkzeug/milestone/21?closed=1</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/werkzeug/blob/main/CHANGES.rst\">werkzeug's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.0.1</h2>\n<p>Released 2023-10-24</p>\n<ul>\n<li>Fix slow multipart parsing for large parts potentially enabling DoS\nattacks. :cwe:<code>CWE-407</code></li>\n</ul>\n<h2>Version 3.0.0</h2>\n<p>Released 2023-09-30</p>\n<ul>\n<li>Remove previously deprecated code. :pr:<code>2768</code></li>\n<li>Deprecate the <code>__version__</code> attribute. Use feature detection, or\n<code>importlib.metadata.version(&quot;werkzeug&quot;)</code>, instead. :issue:<code>2770</code></li>\n<li><code>generate_password_hash</code> uses scrypt by default. :issue:<code>2769</code></li>\n<li>Add the <code>&quot;werkzeug.profiler&quot;</code> item to the  WSGI <code>environ</code> dictionary\npassed to <code>ProfilerMiddleware</code>'s <code>filename_format</code> function. It contains\nthe <code>elapsed</code> and <code>time</code> values for the profiled request. :issue:<code>2775</code></li>\n<li>Explicitly marked the PathConverter as non path isolating. :pr:<code>2784</code></li>\n</ul>\n<h2>Version 2.3.8</h2>\n<p>Unreleased</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/ce4eff5902d4a6b41a20ecc6e4029741284a87fd\"><code>ce4eff5</code></a> Release version 3.0.1</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/b1916c0c083e0be1c9d887ee2f3d696922bfc5c1\"><code>b1916c0</code></a> Fix: slow multipart parsing for huge files with few CR/LF characters</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/726eaa28593d859548da3477859c914732f012ef\"><code>726eaa2</code></a> Release version 3.0.0</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/64275425888b6ca4f5ebdfa1a9df814317718290\"><code>6427542</code></a> Default the PathConverter (and descendants) to be non part isolating</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/4820d8c487e5db9f43645c31c4123fce5ac5ad32\"><code>4820d8c</code></a> Provide elapsed and timestamp info to filename_format</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/599993d7382eeb96add9f38b4431a2f50cd2c9f2\"><code>599993d</code></a> Bump pypa/gh-action-pypi-publish from 1.8.8 to 1.8.10 (<a href=\"https://redirect.github.com/pallets/werkzeug/issues/2780\">#2780</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/a2394ed51ed8697b5523243acb10cb589c0f7834\"><code>a2394ed</code></a> Bump slsa-framework/slsa-github-generator from 1.7.0 to 1.9.0 (<a href=\"https://redirect.github.com/pallets/werkzeug/issues/2779\">#2779</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/1efd6f3c2c31ec9479d8b8d9219bdb042e55bd15\"><code>1efd6f3</code></a> Bump actions/checkout from 3.5.3 to 3.6.0 (<a href=\"https://redirect.github.com/pallets/werkzeug/issues/2778\">#2778</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/76a5419d2ee8b7785c0304d58a94d6c0387c976c\"><code>76a5419</code></a> Bump pypa/gh-action-pypi-publish from 1.8.8 to 1.8.10</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/ce8cfe7dbb73b56c982a9c74162084cdb284c2f5\"><code>ce8cfe7</code></a> Bump slsa-framework/slsa-github-generator from 1.7.0 to 1.9.0</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/werkzeug/compare/2.3.7...3.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=werkzeug&package-manager=pip&previous-version=2.3.7&new-version=3.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/pip/docs/getting_started/tests/werkzeug-3.0.1",
    "is_a_fork": false,
    "comments": [
      "This PR is empty.",
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c2044ee515ce6a4e2c6",
    "number": 3502,
    "body": "Fixes #3501",
    "head_branch": "issue_3501",
    "is_a_fork": true,
    "comments": [
      "Moving this commit to #3498 since both fixes need to be merged in the same PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c2144ee515ce6a4e2c7",
    "number": 3500,
    "body": "Fixes #3499 ",
    "head_branch": "issue_3499",
    "is_a_fork": true,
    "comments": [
      "What's the reasoning behind this change?",
      "> What's the reasoning behind this change?\r\n\r\nUpdated the description, see #3499 please.",
      "Closing this PR for the time being to evaluate if the amount of jobs would impact the organization or not.",
      "@trask this is the PR I was referring to",
      "We just merged a PR, which executed 110 jobs: https://github.com/open-telemetry/opentelemetry-python/pull/3496/checks\r\n",
      "Reopening to check the amount of jobs this would create.\r\n\r\n[This](https://github.com/open-telemetry/opentelemetry-python/pull/3500/files#diff-faff1af3d8ff408964a57b2e475f69a6b7c7b71c9978cccc8f471798caac2c88L39) change should turn 84 jobs (7 packages * 6 Python versions * 2 OS versions) into 252 (21 packages * 6 Python versions * 2 OS versions) for an increase of 252 - 84 = 168 jobs.\r\n\r\n[This](https://github.com/open-telemetry/opentelemetry-python/pull/3500/files#diff-faff1af3d8ff408964a57b2e475f69a6b7c7b71c9978cccc8f471798caac2c88L132) change should turn 2 jobs into 48 (since these jobs are only run in one Pyhton version and one OS version) for an increase of 48 - 2 = 46 jobs.\r\n\r\nThe total increase in jobs would be 168 + 46 = 214 jobs if I'm not totally wrong.",
      "This seems to be completely stuck, I worry this may be affecting other runs, closing this PR for the time being.",
      "> This seems to be completely stuck\r\n\r\nI think it's because https://github.com/open-telemetry/opentelemetry-python/actions/runs/6749875017:\r\n\r\n> [Invalid workflow file: .github/workflows/test.yml#L37](https://github.com/open-telemetry/opentelemetry-python/actions/runs/6749875017/workflow)\r\nYou have an error in your yaml syntax on line 37"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c2244ee515ce6a4e2c8",
    "number": 3498,
    "body": "Fixes #3497\r\nFixes #3501",
    "head_branch": "issue_3497",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Jaeger exporter and getting started testing failures (#3498)\n\nFixes #3497\r\nFixes #3501"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c2d44ee515ce6a4e2c9",
    "number": 3496,
    "body": "Fixes #3495",
    "head_branch": "issue_3495",
    "is_a_fork": true,
    "comments": [
      "[With `-ra`](https://github.com/open-telemetry/opentelemetry-python/actions/runs/6739749601/job/18321781021?pr=3496#step:7:691)\r\n\r\n[Without `-ra`]( https://github.com/open-telemetry/opentelemetry-python/actions/runs/6739628199/job/18321447568?pr=3496#step:7:689)"
    ],
    "commit_messages": [
      "Add -ra option to pytest runs (#3496)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c2e44ee515ce6a4e2ca",
    "number": 3494,
    "body": "Prepare release 1.21.0/0.42b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.21.0-0.42b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.21.x-0.42bx] Prepare release 1.21.0/0.42b0 (#3494)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c2f44ee515ce6a4e2cb",
    "number": 3493,
    "body": "Update version to `1.22.0.dev/0.43b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.22.0.dev-0.43b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.22.0.dev/0.43b0.dev (#3493)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3044ee515ce6a4e2cc",
    "number": 3491,
    "body": "# Description\r\n\r\nThis change registers an annotation to mark any test method as 'slow'. It also annotates test methods that take roughly a full second or longer.\r\n\r\nAfter this change, if you want to run tests but skip the slower ones, you can use `-m 'not slow'`, as in `tox -- -m 'not slow'` or `pytest -m 'not slow'`. The slow marker may also be useful to developers running individual test methods manually (one of the test methods annotated in this PR, for example, takes several minutes on my machine).\r\n\r\nHowever, by default, there is no intended change in behavior as a result of this PR -- all tests should still run locally and in CI by default.",
    "head_branch": "slow-tests",
    "is_a_fork": true,
    "comments": [
      "I'm going to close this for now -- instead will open a PR shortly to make the tests faster."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3144ee515ce6a4e2cd",
    "number": 3489,
    "body": "Quick concept of BatchSpanProcessor implemented with asyncio https://github.com/open-telemetry/opentelemetry-python/issues/3274. Not nearly as fleshed out as https://github.com/open-telemetry/opentelemetry-python/pull/3485 but could be offered in addition to that\r\n\r\nThis would work as a drop in for the current implementation and is thread safe. We could expose async functions on TracerProvider and an async SpanExporter which would could work entirely in one thread. Benefits of using asyncio:\r\n\r\n- Queueing and exporting are all happening in a single thread, so handling concurrency is simplified\r\n- Every BSP instance uses the same thread which may be less resource intensive. I think this is debatable without testing. Note `SpanExporter.export()` is  run in a shared ThreadPoolExecutor, although we could introduce AsyncSpanExporter to avoid this (#3273)\r\n- Couroutines can be cancelled/timed out as opposed to threads, which is a big issue with the current BSP blocking shutdown. Again won't work great with existing blocking `SpanExporter.export()`",
    "head_branch": "asyncio-bsp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3144ee515ce6a4e2ce",
    "number": 3486,
    "body": "# Description\r\n\r\nThis pull request adds the limit on the metrics to prevent the unintended cardinality explosion. For more information, see #2700\r\nNew tests are added for this functionality. Additionally, I moved the `InMemoryMetricExporter` so it could be used for more tests, and added tests for it.\r\n\r\nFixes #2700\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added opentelemetry-sdk/tests/metrics/test_in_memory_metric_exporter.py\r\n- [x] Added opentelemetry-sdk/tests/metrics/test_metric_cardinality_limit.py\r\n- [x] Updated ns-3201-dropped-attributes-count-in-exporters to use the moved InMemoryMetricExporter\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "ns-3201-dropped-attributes-count-in-exporters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3244ee515ce6a4e2cf",
    "number": 3485,
    "body": "# Description\r\n\r\nThis is a draft PR to gather additional feedback. It takes some of the feedback received when [this proposed direction](https://github.com/open-telemetry/opentelemetry-python/pull/3465) was presented to the SIG, where it was suggested that the BatchSpanProcessor be migrated incrementally. Therefore this PR doesn't reflect the target end state of the BSP but a step towards getting there; for example some of the logic proposed in this change (e.g. the atomic flags) is expected to be replaced by a  [Timer](https://github.com/open-telemetry/opentelemetry-python/pull/3465/files#diff-a2b9f69e2880dc0988069fac93565195fdf33a10c6f53f21f5fa05cda3afba25R31) in a later PR.\r\n\r\nThis change proposes replacing some of the queueing, batching, and flushing logic in the BatchSpanProcessor with a BatchAccumulator.\r\n\r\nFixes # (issue)\r\n\r\nNone yet. (We'll probably want to add a new issue to capture BSP refactoring)\r\n\r\n## Type of change\r\n\r\nThis change proposes a refactor of the BSP.\r\n\r\n# How Has This Been Tested?\r\n\r\nTested manually and added new integration (slower running, end-to-end) tests.",
    "head_branch": "accumulator",
    "is_a_fork": true,
    "comments": [
      "Closing as we're going to look into a switchover instead of multiple incremental changes."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3344ee515ce6a4e2d0",
    "number": 3484,
    "body": "Bumps [werkzeug](https://github.com/pallets/werkzeug) from 2.2.3 to 3.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/werkzeug/releases\">werkzeug's releases</a>.</em></p>\n<blockquote>\n<h2>3.0.1</h2>\n<p>This is a security release for the 3.0.x feature branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-1\">https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-1</a></li>\n</ul>\n<h2>3.0.0</h2>\n<p>This is a feature release, which includes new features, removes previously deprecated code, and adds new deprecations. The 3.0.x branch is now the supported fix branch, the 2.3.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades. Test with warnings treated as errors to be able to adapt to deprecation warnings early.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-0\">https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/21?closed=1\">https://github.com/pallets/werkzeug/milestone/21?closed=1</a></li>\n</ul>\n<h2>2.3.7</h2>\n<p>This is a fix release for the 2.3.x feature branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-7\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-7</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/33?closed=1\">https://github.com/pallets/werkzeug/milestone/33?closed=1</a></li>\n</ul>\n<h2>2.3.6</h2>\n<p>This is a fix release for the 2.3.x feature branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-6\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-6</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/32?closed=1\">https://github.com/pallets/werkzeug/milestone/32?closed=1</a></li>\n</ul>\n<h2>2.3.5</h2>\n<p>This is a fix release for the 2.3.x feature branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-5\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-5</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/31?closed=1\">https://github.com/pallets/werkzeug/milestone/31?closed=1</a></li>\n</ul>\n<h2>2.3.4</h2>\n<p>This is a fix release for the 2.3.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-4\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-4</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/30?closed=1\">https://github.com/pallets/werkzeug/milestone/30?closed=1</a></li>\n</ul>\n<h2>2.3.3</h2>\n<p>This is a fix release for the 2.3.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-3\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/29?closed=1\">https://github.com/pallets/werkzeug/milestone/29?closed=1</a></li>\n</ul>\n<h2>2.3.2</h2>\n<p>This is a fix release for the 2.3.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-2\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/28?closed=1\">https://github.com/pallets/werkzeug/milestone/28?closed=1</a></li>\n</ul>\n<h2>2.3.1</h2>\n<p>This is a fix release for the 2.3.x release branch.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/werkzeug/blob/main/CHANGES.rst\">werkzeug's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.0.1</h2>\n<p>Released 2023-10-24</p>\n<ul>\n<li>Fix slow multipart parsing for large parts potentially enabling DoS\nattacks. :cwe:<code>CWE-407</code></li>\n</ul>\n<h2>Version 3.0.0</h2>\n<p>Released 2023-09-30</p>\n<ul>\n<li>Remove previously deprecated code. :pr:<code>2768</code></li>\n<li>Deprecate the <code>__version__</code> attribute. Use feature detection, or\n<code>importlib.metadata.version(&quot;werkzeug&quot;)</code>, instead. :issue:<code>2770</code></li>\n<li><code>generate_password_hash</code> uses scrypt by default. :issue:<code>2769</code></li>\n<li>Add the <code>&quot;werkzeug.profiler&quot;</code> item to the  WSGI <code>environ</code> dictionary\npassed to <code>ProfilerMiddleware</code>'s <code>filename_format</code> function. It contains\nthe <code>elapsed</code> and <code>time</code> values for the profiled request. :issue:<code>2775</code></li>\n<li>Explicitly marked the PathConverter as non path isolating. :pr:<code>2784</code></li>\n</ul>\n<h2>Version 2.3.8</h2>\n<p>Unreleased</p>\n<h2>Version 2.3.7</h2>\n<p>Released 2023-08-14</p>\n<ul>\n<li>Use <code>flit_core</code> instead of <code>setuptools</code> as build backend.</li>\n<li>Fix parsing of multipart bodies. :issue:<code>2734</code> Adjust index of last newline\nin data start. :issue:<code>2761</code></li>\n<li>Parsing ints from header values strips spacing first. :issue:<code>2734</code></li>\n<li>Fix empty file streaming when testing. :issue:<code>2740</code></li>\n<li>Clearer error message when URL rule does not start with slash. :pr:<code>2750</code></li>\n<li><code>Accept</code> <code>q</code> value can be a float without a decimal part. :issue:<code>2751</code></li>\n</ul>\n<h2>Version 2.3.6</h2>\n<p>Released 2023-06-08</p>\n<ul>\n<li><code>FileStorage.content_length</code> does not fail if the form data did not provide a\nvalue. :issue:<code>2726</code></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/ce4eff5902d4a6b41a20ecc6e4029741284a87fd\"><code>ce4eff5</code></a> Release version 3.0.1</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/b1916c0c083e0be1c9d887ee2f3d696922bfc5c1\"><code>b1916c0</code></a> Fix: slow multipart parsing for huge files with few CR/LF characters</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/726eaa28593d859548da3477859c914732f012ef\"><code>726eaa2</code></a> Release version 3.0.0</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/64275425888b6ca4f5ebdfa1a9df814317718290\"><code>6427542</code></a> Default the PathConverter (and descendants) to be non part isolating</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/4820d8c487e5db9f43645c31c4123fce5ac5ad32\"><code>4820d8c</code></a> Provide elapsed and timestamp info to filename_format</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/599993d7382eeb96add9f38b4431a2f50cd2c9f2\"><code>599993d</code></a> Bump pypa/gh-action-pypi-publish from 1.8.8 to 1.8.10 (<a href=\"https://redirect.github.com/pallets/werkzeug/issues/2780\">#2780</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/a2394ed51ed8697b5523243acb10cb589c0f7834\"><code>a2394ed</code></a> Bump slsa-framework/slsa-github-generator from 1.7.0 to 1.9.0 (<a href=\"https://redirect.github.com/pallets/werkzeug/issues/2779\">#2779</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/1efd6f3c2c31ec9479d8b8d9219bdb042e55bd15\"><code>1efd6f3</code></a> Bump actions/checkout from 3.5.3 to 3.6.0 (<a href=\"https://redirect.github.com/pallets/werkzeug/issues/2778\">#2778</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/76a5419d2ee8b7785c0304d58a94d6c0387c976c\"><code>76a5419</code></a> Bump pypa/gh-action-pypi-publish from 1.8.8 to 1.8.10</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/ce8cfe7dbb73b56c982a9c74162084cdb284c2f5\"><code>ce8cfe7</code></a> Bump slsa-framework/slsa-github-generator from 1.7.0 to 1.9.0</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/werkzeug/compare/2.2.3...3.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=werkzeug&package-manager=pip&previous-version=2.2.3&new-version=3.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/werkzeug-3.0.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3444ee515ce6a4e2d1",
    "number": 3483,
    "body": "Bumps [werkzeug](https://github.com/pallets/werkzeug) from 2.2.3 to 3.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/werkzeug/releases\">werkzeug's releases</a>.</em></p>\n<blockquote>\n<h2>3.0.1</h2>\n<p>This is a security release for the 3.0.x feature branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-1\">https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-1</a></li>\n</ul>\n<h2>3.0.0</h2>\n<p>This is a feature release, which includes new features, removes previously deprecated code, and adds new deprecations. The 3.0.x branch is now the supported fix branch, the 2.3.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades. Test with warnings treated as errors to be able to adapt to deprecation warnings early.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-0\">https://werkzeug.palletsprojects.com/en/3.0.x/changes/#version-3-0-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/21?closed=1\">https://github.com/pallets/werkzeug/milestone/21?closed=1</a></li>\n</ul>\n<h2>2.3.7</h2>\n<p>This is a fix release for the 2.3.x feature branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-7\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-7</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/33?closed=1\">https://github.com/pallets/werkzeug/milestone/33?closed=1</a></li>\n</ul>\n<h2>2.3.6</h2>\n<p>This is a fix release for the 2.3.x feature branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-6\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-6</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/32?closed=1\">https://github.com/pallets/werkzeug/milestone/32?closed=1</a></li>\n</ul>\n<h2>2.3.5</h2>\n<p>This is a fix release for the 2.3.x feature branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-5\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-5</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/31?closed=1\">https://github.com/pallets/werkzeug/milestone/31?closed=1</a></li>\n</ul>\n<h2>2.3.4</h2>\n<p>This is a fix release for the 2.3.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-4\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-4</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/30?closed=1\">https://github.com/pallets/werkzeug/milestone/30?closed=1</a></li>\n</ul>\n<h2>2.3.3</h2>\n<p>This is a fix release for the 2.3.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-3\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/29?closed=1\">https://github.com/pallets/werkzeug/milestone/29?closed=1</a></li>\n</ul>\n<h2>2.3.2</h2>\n<p>This is a fix release for the 2.3.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-2\">https://werkzeug.palletsprojects.com/en/2.3.x/changes/#version-2-3-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/28?closed=1\">https://github.com/pallets/werkzeug/milestone/28?closed=1</a></li>\n</ul>\n<h2>2.3.1</h2>\n<p>This is a fix release for the 2.3.x release branch.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/werkzeug/blob/main/CHANGES.rst\">werkzeug's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.0.1</h2>\n<p>Released 2023-10-24</p>\n<ul>\n<li>Fix slow multipart parsing for large parts potentially enabling DoS\nattacks. :cwe:<code>CWE-407</code></li>\n</ul>\n<h2>Version 3.0.0</h2>\n<p>Released 2023-09-30</p>\n<ul>\n<li>Remove previously deprecated code. :pr:<code>2768</code></li>\n<li>Deprecate the <code>__version__</code> attribute. Use feature detection, or\n<code>importlib.metadata.version(&quot;werkzeug&quot;)</code>, instead. :issue:<code>2770</code></li>\n<li><code>generate_password_hash</code> uses scrypt by default. :issue:<code>2769</code></li>\n<li>Add the <code>&quot;werkzeug.profiler&quot;</code> item to the  WSGI <code>environ</code> dictionary\npassed to <code>ProfilerMiddleware</code>'s <code>filename_format</code> function. It contains\nthe <code>elapsed</code> and <code>time</code> values for the profiled request. :issue:<code>2775</code></li>\n<li>Explicitly marked the PathConverter as non path isolating. :pr:<code>2784</code></li>\n</ul>\n<h2>Version 2.3.8</h2>\n<p>Unreleased</p>\n<h2>Version 2.3.7</h2>\n<p>Released 2023-08-14</p>\n<ul>\n<li>Use <code>flit_core</code> instead of <code>setuptools</code> as build backend.</li>\n<li>Fix parsing of multipart bodies. :issue:<code>2734</code> Adjust index of last newline\nin data start. :issue:<code>2761</code></li>\n<li>Parsing ints from header values strips spacing first. :issue:<code>2734</code></li>\n<li>Fix empty file streaming when testing. :issue:<code>2740</code></li>\n<li>Clearer error message when URL rule does not start with slash. :pr:<code>2750</code></li>\n<li><code>Accept</code> <code>q</code> value can be a float without a decimal part. :issue:<code>2751</code></li>\n</ul>\n<h2>Version 2.3.6</h2>\n<p>Released 2023-06-08</p>\n<ul>\n<li><code>FileStorage.content_length</code> does not fail if the form data did not provide a\nvalue. :issue:<code>2726</code></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/ce4eff5902d4a6b41a20ecc6e4029741284a87fd\"><code>ce4eff5</code></a> Release version 3.0.1</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/b1916c0c083e0be1c9d887ee2f3d696922bfc5c1\"><code>b1916c0</code></a> Fix: slow multipart parsing for huge files with few CR/LF characters</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/726eaa28593d859548da3477859c914732f012ef\"><code>726eaa2</code></a> Release version 3.0.0</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/64275425888b6ca4f5ebdfa1a9df814317718290\"><code>6427542</code></a> Default the PathConverter (and descendants) to be non part isolating</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/4820d8c487e5db9f43645c31c4123fce5ac5ad32\"><code>4820d8c</code></a> Provide elapsed and timestamp info to filename_format</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/599993d7382eeb96add9f38b4431a2f50cd2c9f2\"><code>599993d</code></a> Bump pypa/gh-action-pypi-publish from 1.8.8 to 1.8.10 (<a href=\"https://redirect.github.com/pallets/werkzeug/issues/2780\">#2780</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/a2394ed51ed8697b5523243acb10cb589c0f7834\"><code>a2394ed</code></a> Bump slsa-framework/slsa-github-generator from 1.7.0 to 1.9.0 (<a href=\"https://redirect.github.com/pallets/werkzeug/issues/2779\">#2779</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/1efd6f3c2c31ec9479d8b8d9219bdb042e55bd15\"><code>1efd6f3</code></a> Bump actions/checkout from 3.5.3 to 3.6.0 (<a href=\"https://redirect.github.com/pallets/werkzeug/issues/2778\">#2778</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/76a5419d2ee8b7785c0304d58a94d6c0387c976c\"><code>76a5419</code></a> Bump pypa/gh-action-pypi-publish from 1.8.8 to 1.8.10</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/ce8cfe7dbb73b56c982a9c74162084cdb284c2f5\"><code>ce8cfe7</code></a> Bump slsa-framework/slsa-github-generator from 1.7.0 to 1.9.0</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/werkzeug/compare/2.2.3...3.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=werkzeug&package-manager=pip&previous-version=2.2.3&new-version=3.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/werkzeug-3.0.1",
    "is_a_fork": false,
    "comments": [
      "Werkzeug is alread at 3.0.1",
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3544ee515ce6a4e2d2",
    "number": 3479,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: andife / name: Andreas Fehlner  (b671ace5a73670f3381d0bcf21bf601b37030eb2)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (7c29cdf80df7dfd130023658b43f8f8673220dbb)</li></ul>"
    ],
    "commit_messages": [
      "Update README.md, missing , (#3479)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3644ee515ce6a4e2d3",
    "number": 3476,
    "body": "# Description\r\n\r\nFix the argument name to `logger_provider` on the `set_logger_provider` function.\r\nThis function is not related to metric provider.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "logs/fix-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix argument name to logger_provider on set_logger_provider (#3476)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3644ee515ce6a4e2d4",
    "number": 3472,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #3468 implement Process Resource detector\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] pytest\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/process-resource-detector",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Feature/process resource detector (#3472)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3744ee515ce6a4e2d5",
    "number": 3469,
    "body": "Following https://github.com/open-telemetry/opentelemetry-python/pull/3457 and https://github.com/open-telemetry/opentelemetry-python/pull/3456, bump other library versions to match `opentelemetry-instrument==0.41b0`",
    "head_branch": "depend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update flask example dependencies (#3469)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3844ee515ce6a4e2d6",
    "number": 3465,
    "body": "While looking through the [BatchSpanProcessor](https://github.com/open-telemetry/opentelemetry-python/blob/4280235f5383cb5034993f76aee22502a631a0b2/opentelemetry-sdk/src/opentelemetry/sdk/trace/export/__init__.py#L140) and [OtlpSpanExporter](https://github.com/open-telemetry/opentelemetry-python/blob/4280235f5383cb5034993f76aee22502a631a0b2/exporter/opentelemetry-exporter-otlp-proto-grpc/src/opentelemetry/exporter/otlp/proto/grpc/trace_exporter/__init__.py#L65), as well as [implementing](https://github.com/open-telemetry/opentelemetry-python/issues/1003) JSON over HTTP, I was curious to see what these classes might look like if we re-thought how they were designed with a view towards making them smaller and easier to understand.\r\n\r\nTo get feedback from this SIG about whether this direction looks promising, I'm creating a draft PR to discuss.",
    "head_branch": "experimental",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3944ee515ce6a4e2d7",
    "number": 3462,
    "body": "# Description\r\n\r\nThis PR creates a synchronous gauge instrument, based on opentelemetry-java PR [Add experimental synchronous gauge #5506](https://github.com/open-telemetry/opentelemetry-java/pull/5506). It aims to give support to synchronous gauge as stated on opentelemetry-specification PR [Add synchronous gauge instrument, clarify temporality selection influence on metric point persistence #3540](https://github.com/open-telemetry/opentelemetry-specification/pull/3540).\r\n\r\nFixes # (issue)\r\n#3363\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis change was tested with multiple unit tests, that were contributed.\r\nAlso, it was locally tested with a simple API in Flask integrating with an OTEL server deployed on Kubernetes, using Python 3.8.\r\n\r\n<img width=\"1792\" alt=\"image\" src=\"https://github.com/open-telemetry/opentelemetry-python/assets/56175551/75a46968-a77e-4b9d-943e-c6fbc7a514d4\">\r\n\r\n<img width=\"1792\" alt=\"image\" src=\"https://github.com/open-telemetry/opentelemetry-python/assets/56175551/bb002fa9-ad3f-4d0b-ac98-cc86ba8bb39e\">\r\n\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sync-gauge-prototype",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sarafonseca-123 / name: sarafonseca  (c37154369e5944f685097b12f578b0f353d58d8c, 2ac9b9ee0ae524b8d0f47879ebbe1194f24d049b, 91a126587d34da31fdcca94a7773eb1cf09c8010, 1d1836ddbfa7f6bb8ab99cb379333fb269061f81, 064ce06309c5b5c589826b0acad8a611f60f98fc, 472a98b9cf2992c824656782675c9d9d83e7ed20, 86f615c9b94f71b9ef6bc2eef6aabcfbe4f24b9e)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (7639544d50726637e5a00a07019c2973f9a1e5df, 50193fb46ea9e9774b796f50c352c0ec6dfb1191)</li></ul>",
      "These changes seem good to me! 🎉 \r\n@ocelotl @lzchen how can I help push this PR forward?",
      "Well done! :v: ",
      "What's the status on this? I would very much like to get my hands on the synchronous gauge API.",
      "@sarafonseca-123 Why did you make `Gauge` private? Isn't the whole point here to provide that API to end users?",
      "> @sarafonseca-123 Why did you make `Gauge` private? Isn't the whole point here to provide that API to end users?\r\n\r\nOh, because it's experimental? I only just now saw that in the resolved comments.",
      "The only thing missing here seems to be one leftover reference in the docs to `Gauge` that should be `_Gauge` instead."
    ],
    "commit_messages": [
      "Synchronous gauge prototype (#3462)\n\n* merge with cherry pick\r\n\r\n* docs/getting_started/metrics_example.py\r\n\r\n* Fix\r\n\r\n* edit changelog\r\n\r\n* Format\r\n\r\n* Update docs/getting_started/metrics_example.py\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\n* Make synchronous gauge private for opentelemetry API\r\n\r\n* Fix name of SDK Gauge\r\n\r\n* Fix docs\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3a44ee515ce6a4e2d8",
    "number": 3460,
    "body": null,
    "head_branch": "empty_callbacks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3b44ee515ce6a4e2d9",
    "number": 3459,
    "body": "Fixes #3458",
    "head_branch": "fixtypo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo causing failing CI (#3459)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3b44ee515ce6a4e2da",
    "number": 3457,
    "body": "Bumps [opentelemetry-instrumentation](https://github.com/open-telemetry/opentelemetry-python-contrib) from 0.18b0 to 0.41b0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/open-telemetry/opentelemetry-python-contrib/releases\">opentelemetry-instrumentation's releases</a>.</em></p>\n<blockquote>\n<h2>opentelemetry-contrib v0.36b0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Create RELEASING.md, Update version to 1.15.0.dev/0.36b0.dev by <a href=\"https://github.com/lzchen\"><code>@​lzchen</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1429\">open-telemetry/opentelemetry-python-contrib#1429</a></li>\n<li>Fix Urllib instrumentation - Add status code to span if not None by <a href=\"https://github.com/shalevr\"><code>@​shalevr</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1430\">open-telemetry/opentelemetry-python-contrib#1430</a></li>\n<li>Fix dbapi connection instrument wrapper has no _sock member by <a href=\"https://github.com/rogersd\"><code>@​rogersd</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1424\">open-telemetry/opentelemetry-python-contrib#1424</a></li>\n<li>Add support for regular expression matching and sanitizing of headers in FastAPI. by <a href=\"https://github.com/rogersd\"><code>@​rogersd</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1403\">open-telemetry/opentelemetry-python-contrib#1403</a></li>\n<li>aiohttp-client: Allow overriding of span status by <a href=\"https://github.com/nils-borrmann-y42\"><code>@​nils-borrmann-y42</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1394\">open-telemetry/opentelemetry-python-contrib#1394</a></li>\n<li>Remove db.name attribute from Redis instrumentation by <a href=\"https://github.com/luke6Lh43\"><code>@​luke6Lh43</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1427\">open-telemetry/opentelemetry-python-contrib#1427</a></li>\n<li>feat: collecting messaging.* span attributes in botocore instrumentation by <a href=\"https://github.com/saartochner\"><code>@​saartochner</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1350\">open-telemetry/opentelemetry-python-contrib#1350</a></li>\n<li>fix: No module named httpx by <a href=\"https://github.com/srikanthccv\"><code>@​srikanthccv</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1441\">open-telemetry/opentelemetry-python-contrib#1441</a></li>\n<li>Add support for regular expression matching and sanitizing of headers in Starlette. by <a href=\"https://github.com/rogersd\"><code>@​rogersd</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1404\">open-telemetry/opentelemetry-python-contrib#1404</a></li>\n<li>opentelemetry-instrumentation-kafka-python: wait for metadata by <a href=\"https://github.com/rayrapetyan\"><code>@​rayrapetyan</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1260\">open-telemetry/opentelemetry-python-contrib#1260</a></li>\n<li>Urllib3 instrumentation can now retrieve urlopen body parameter when … by <a href=\"https://github.com/isra17\"><code>@​isra17</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1398\">open-telemetry/opentelemetry-python-contrib#1398</a></li>\n<li>Remove mention to eachdist by <a href=\"https://github.com/ocelotl\"><code>@​ocelotl</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1445\">open-telemetry/opentelemetry-python-contrib#1445</a></li>\n<li>Strip leading comments from SQL queries when generating the span name. by <a href=\"https://github.com/rogersd\"><code>@​rogersd</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1434\">open-telemetry/opentelemetry-python-contrib#1434</a></li>\n<li>Fix httpx version by <a href=\"https://github.com/ocelotl\"><code>@​ocelotl</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1460\">open-telemetry/opentelemetry-python-contrib#1460</a></li>\n<li>Fix 1455: [test-only] Protect metric data_points from raw next() calls by <a href=\"https://github.com/lancetarn\"><code>@​lancetarn</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1456\">open-telemetry/opentelemetry-python-contrib#1456</a></li>\n<li>Tortoise ORM instrumentation by <a href=\"https://github.com/tonybaloney\"><code>@​tonybaloney</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/685\">open-telemetry/opentelemetry-python-contrib#685</a></li>\n<li>Add grpc.aio instrumentation to be auto-instrumented by <a href=\"https://github.com/cookiefission\"><code>@​cookiefission</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1442\">open-telemetry/opentelemetry-python-contrib#1442</a></li>\n<li><code>opentelemetry-instrumentation-aws-lambda</code>: Adding option to disable context propagation by <a href=\"https://github.com/codeboten\"><code>@​codeboten</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1466\">open-telemetry/opentelemetry-python-contrib#1466</a></li>\n<li>botocore: Add support for SNS publish and publish_batch by <a href=\"https://github.com/mariojonke\"><code>@​mariojonke</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1409\">open-telemetry/opentelemetry-python-contrib#1409</a></li>\n<li>Refactor comments in .flake8 by <a href=\"https://github.com/ocelotl\"><code>@​ocelotl</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1470\">open-telemetry/opentelemetry-python-contrib#1470</a></li>\n<li>Add a test for mysql instrumentation using NoOpTracerProvider by <a href=\"https://github.com/avzis\"><code>@​avzis</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1423\">open-telemetry/opentelemetry-python-contrib#1423</a></li>\n<li>Minor refactoring by <a href=\"https://github.com/artemrys\"><code>@​artemrys</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1169\">open-telemetry/opentelemetry-python-contrib#1169</a></li>\n<li>fix(asgi-instrumentation): extract target after running the framework by <a href=\"https://github.com/sk\"><code>@​sk</code></a>- in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1461\">open-telemetry/opentelemetry-python-contrib#1461</a></li>\n<li>Add uninstrument test for sqlalchemy by <a href=\"https://github.com/shalevr\"><code>@​shalevr</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1471\">open-telemetry/opentelemetry-python-contrib#1471</a></li>\n<li>fix enable_commenter functionality by <a href=\"https://github.com/avzis\"><code>@​avzis</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1440\">open-telemetry/opentelemetry-python-contrib#1440</a></li>\n<li>Instrument newer versions by <a href=\"https://github.com/Symbianx\"><code>@​Symbianx</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1468\">open-telemetry/opentelemetry-python-contrib#1468</a></li>\n<li>Pin tox version by <a href=\"https://github.com/srikanthccv\"><code>@​srikanthccv</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1480\">open-telemetry/opentelemetry-python-contrib#1480</a></li>\n<li>updating changelogs and version to 1.15.0-0.36b0 by <a href=\"https://github.com/srikanthccv\"><code>@​srikanthccv</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1482\">open-telemetry/opentelemetry-python-contrib#1482</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/nils-borrmann-y42\"><code>@​nils-borrmann-y42</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1394\">open-telemetry/opentelemetry-python-contrib#1394</a></li>\n<li><a href=\"https://github.com/luke6Lh43\"><code>@​luke6Lh43</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1427\">open-telemetry/opentelemetry-python-contrib#1427</a></li>\n<li><a href=\"https://github.com/saartochner\"><code>@​saartochner</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1350\">open-telemetry/opentelemetry-python-contrib#1350</a></li>\n<li><a href=\"https://github.com/rayrapetyan\"><code>@​rayrapetyan</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1260\">open-telemetry/opentelemetry-python-contrib#1260</a></li>\n<li><a href=\"https://github.com/isra17\"><code>@​isra17</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1398\">open-telemetry/opentelemetry-python-contrib#1398</a></li>\n<li><a href=\"https://github.com/lancetarn\"><code>@​lancetarn</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1456\">open-telemetry/opentelemetry-python-contrib#1456</a></li>\n<li><a href=\"https://github.com/artemrys\"><code>@​artemrys</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1169\">open-telemetry/opentelemetry-python-contrib#1169</a></li>\n<li><a href=\"https://github.com/Symbianx\"><code>@​Symbianx</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1468\">open-telemetry/opentelemetry-python-contrib#1468</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/open-telemetry/opentelemetry-python-contrib/compare/v0.35b0...v0.36b0\">https://github.com/open-telemetry/opentelemetry-python-contrib/compare/v0.35b0...v0.36b0</a></p>\n<h2>opentelemetry-contrib v0.35b0</h2>\n<h3>Deprecated</h3>\n<ul>\n<li><code>opentelemetry-distro</code> Deprecate <code>otlp_proto_grpc</code> and <code>otlp_proto_http</code> in favor of using\n<code>OTEL_EXPORTER_OTLP_TRACES_PROTOCOL</code> as according to specifications\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1250\">#1250</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CHANGELOG.md\">opentelemetry-instrumentation's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 1.20.0/0.41b0 (2023-09-01)</h2>\n<h3>Fixed</h3>\n<ul>\n<li><code>opentelemetry-instrumentation-asgi</code> Fix UnboundLocalError local variable 'start' referenced before assignment\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1889\">#1889</a>)</li>\n<li>Fixed union typing error not compatible with Python 3.7 introduced in <code>opentelemetry-util-http</code>, fix tests introduced by patch related to sanitize method for wsgi\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1913\">#1913</a>)</li>\n<li><code>opentelemetry-instrumentation-celery</code> Unwrap Celery's <code>ExceptionInfo</code> errors and report the actual exception that was raised. (<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1863\">#1863</a>)</li>\n</ul>\n<h3>Added</h3>\n<ul>\n<li><code>opentelemetry-resource-detector-azure</code> Add resource detectors for Azure App Service and VM\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1901\">#1901</a>)</li>\n</ul>\n<h2>Version 1.19.0/0.40b0 (2023-07-13)</h2>\n<ul>\n<li><code>opentelemetry-instrumentation-asgi</code> Add <code>http.server.request.size</code> metric\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1867\">#1867</a>)</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li><code>opentelemetry-instrumentation-django</code> Fix empty span name when using\n<code>path(&quot;&quot;, ...)</code> (<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1788\">#1788</a></li>\n<li>Fix elastic-search instrumentation sanitization to support bulk queries\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1870\">#1870</a>)</li>\n<li>Update falcon instrumentation to follow semantic conventions\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1824\">#1824</a>)</li>\n<li>Fix sqlalchemy instrumentation wrap methods to accept sqlcommenter options\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1873\">#1873</a>)</li>\n</ul>\n<h3>Added</h3>\n<ul>\n<li>Add instrumentor support for cassandra and scylla\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1902\">#1902</a>)</li>\n<li>Add instrumentor support for mysqlclient\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1744\">#1744</a>)</li>\n<li>Fix async redis clients not being traced correctly\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1830\">#1830</a>)</li>\n<li>Make Flask request span attributes available for <code>start_span</code>.\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1784\">#1784</a>)</li>\n<li>Fix falcon instrumentation's usage of Span Status to only set the description if the status code is ERROR.\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1840\">#1840</a>)</li>\n<li>Instrument all httpx versions &gt;= 0.18.\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1748\">#1748</a>)</li>\n<li>Fix <code>Invalid type NoneType for attribute X  (opentelemetry-instrumentation-aws-lambda)</code> error when some attributes do not exist\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1780\">#1780</a>)</li>\n<li>Add metric instrumentation for celery\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1679\">#1679</a>)</li>\n<li><code>opentelemetry-instrumentation-asgi</code> Add <code>http.server.response.size</code> metric\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1789\">#1789</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/open-telemetry/opentelemetry-python-contrib/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=opentelemetry-instrumentation&package-manager=pip&previous-version=0.18b0&new-version=0.41b0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/opentelemetry-instrumentation-0.41b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump opentelemetry-instrumentation (#3457)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3c44ee515ce6a4e2db",
    "number": 3456,
    "body": "Bumps [opentelemetry-instrumentation](https://github.com/open-telemetry/opentelemetry-python-contrib) from 0.18b0 to 0.41b0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/open-telemetry/opentelemetry-python-contrib/releases\">opentelemetry-instrumentation's releases</a>.</em></p>\n<blockquote>\n<h2>opentelemetry-contrib v0.36b0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Create RELEASING.md, Update version to 1.15.0.dev/0.36b0.dev by <a href=\"https://github.com/lzchen\"><code>@​lzchen</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1429\">open-telemetry/opentelemetry-python-contrib#1429</a></li>\n<li>Fix Urllib instrumentation - Add status code to span if not None by <a href=\"https://github.com/shalevr\"><code>@​shalevr</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1430\">open-telemetry/opentelemetry-python-contrib#1430</a></li>\n<li>Fix dbapi connection instrument wrapper has no _sock member by <a href=\"https://github.com/rogersd\"><code>@​rogersd</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1424\">open-telemetry/opentelemetry-python-contrib#1424</a></li>\n<li>Add support for regular expression matching and sanitizing of headers in FastAPI. by <a href=\"https://github.com/rogersd\"><code>@​rogersd</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1403\">open-telemetry/opentelemetry-python-contrib#1403</a></li>\n<li>aiohttp-client: Allow overriding of span status by <a href=\"https://github.com/nils-borrmann-y42\"><code>@​nils-borrmann-y42</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1394\">open-telemetry/opentelemetry-python-contrib#1394</a></li>\n<li>Remove db.name attribute from Redis instrumentation by <a href=\"https://github.com/luke6Lh43\"><code>@​luke6Lh43</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1427\">open-telemetry/opentelemetry-python-contrib#1427</a></li>\n<li>feat: collecting messaging.* span attributes in botocore instrumentation by <a href=\"https://github.com/saartochner\"><code>@​saartochner</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1350\">open-telemetry/opentelemetry-python-contrib#1350</a></li>\n<li>fix: No module named httpx by <a href=\"https://github.com/srikanthccv\"><code>@​srikanthccv</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1441\">open-telemetry/opentelemetry-python-contrib#1441</a></li>\n<li>Add support for regular expression matching and sanitizing of headers in Starlette. by <a href=\"https://github.com/rogersd\"><code>@​rogersd</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1404\">open-telemetry/opentelemetry-python-contrib#1404</a></li>\n<li>opentelemetry-instrumentation-kafka-python: wait for metadata by <a href=\"https://github.com/rayrapetyan\"><code>@​rayrapetyan</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1260\">open-telemetry/opentelemetry-python-contrib#1260</a></li>\n<li>Urllib3 instrumentation can now retrieve urlopen body parameter when … by <a href=\"https://github.com/isra17\"><code>@​isra17</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1398\">open-telemetry/opentelemetry-python-contrib#1398</a></li>\n<li>Remove mention to eachdist by <a href=\"https://github.com/ocelotl\"><code>@​ocelotl</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1445\">open-telemetry/opentelemetry-python-contrib#1445</a></li>\n<li>Strip leading comments from SQL queries when generating the span name. by <a href=\"https://github.com/rogersd\"><code>@​rogersd</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1434\">open-telemetry/opentelemetry-python-contrib#1434</a></li>\n<li>Fix httpx version by <a href=\"https://github.com/ocelotl\"><code>@​ocelotl</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1460\">open-telemetry/opentelemetry-python-contrib#1460</a></li>\n<li>Fix 1455: [test-only] Protect metric data_points from raw next() calls by <a href=\"https://github.com/lancetarn\"><code>@​lancetarn</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1456\">open-telemetry/opentelemetry-python-contrib#1456</a></li>\n<li>Tortoise ORM instrumentation by <a href=\"https://github.com/tonybaloney\"><code>@​tonybaloney</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/685\">open-telemetry/opentelemetry-python-contrib#685</a></li>\n<li>Add grpc.aio instrumentation to be auto-instrumented by <a href=\"https://github.com/cookiefission\"><code>@​cookiefission</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1442\">open-telemetry/opentelemetry-python-contrib#1442</a></li>\n<li><code>opentelemetry-instrumentation-aws-lambda</code>: Adding option to disable context propagation by <a href=\"https://github.com/codeboten\"><code>@​codeboten</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1466\">open-telemetry/opentelemetry-python-contrib#1466</a></li>\n<li>botocore: Add support for SNS publish and publish_batch by <a href=\"https://github.com/mariojonke\"><code>@​mariojonke</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1409\">open-telemetry/opentelemetry-python-contrib#1409</a></li>\n<li>Refactor comments in .flake8 by <a href=\"https://github.com/ocelotl\"><code>@​ocelotl</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1470\">open-telemetry/opentelemetry-python-contrib#1470</a></li>\n<li>Add a test for mysql instrumentation using NoOpTracerProvider by <a href=\"https://github.com/avzis\"><code>@​avzis</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1423\">open-telemetry/opentelemetry-python-contrib#1423</a></li>\n<li>Minor refactoring by <a href=\"https://github.com/artemrys\"><code>@​artemrys</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1169\">open-telemetry/opentelemetry-python-contrib#1169</a></li>\n<li>fix(asgi-instrumentation): extract target after running the framework by <a href=\"https://github.com/sk\"><code>@​sk</code></a>- in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1461\">open-telemetry/opentelemetry-python-contrib#1461</a></li>\n<li>Add uninstrument test for sqlalchemy by <a href=\"https://github.com/shalevr\"><code>@​shalevr</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1471\">open-telemetry/opentelemetry-python-contrib#1471</a></li>\n<li>fix enable_commenter functionality by <a href=\"https://github.com/avzis\"><code>@​avzis</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1440\">open-telemetry/opentelemetry-python-contrib#1440</a></li>\n<li>Instrument newer versions by <a href=\"https://github.com/Symbianx\"><code>@​Symbianx</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1468\">open-telemetry/opentelemetry-python-contrib#1468</a></li>\n<li>Pin tox version by <a href=\"https://github.com/srikanthccv\"><code>@​srikanthccv</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1480\">open-telemetry/opentelemetry-python-contrib#1480</a></li>\n<li>updating changelogs and version to 1.15.0-0.36b0 by <a href=\"https://github.com/srikanthccv\"><code>@​srikanthccv</code></a> in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1482\">open-telemetry/opentelemetry-python-contrib#1482</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/nils-borrmann-y42\"><code>@​nils-borrmann-y42</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1394\">open-telemetry/opentelemetry-python-contrib#1394</a></li>\n<li><a href=\"https://github.com/luke6Lh43\"><code>@​luke6Lh43</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1427\">open-telemetry/opentelemetry-python-contrib#1427</a></li>\n<li><a href=\"https://github.com/saartochner\"><code>@​saartochner</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1350\">open-telemetry/opentelemetry-python-contrib#1350</a></li>\n<li><a href=\"https://github.com/rayrapetyan\"><code>@​rayrapetyan</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1260\">open-telemetry/opentelemetry-python-contrib#1260</a></li>\n<li><a href=\"https://github.com/isra17\"><code>@​isra17</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1398\">open-telemetry/opentelemetry-python-contrib#1398</a></li>\n<li><a href=\"https://github.com/lancetarn\"><code>@​lancetarn</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1456\">open-telemetry/opentelemetry-python-contrib#1456</a></li>\n<li><a href=\"https://github.com/artemrys\"><code>@​artemrys</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1169\">open-telemetry/opentelemetry-python-contrib#1169</a></li>\n<li><a href=\"https://github.com/Symbianx\"><code>@​Symbianx</code></a> made their first contribution in <a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1468\">open-telemetry/opentelemetry-python-contrib#1468</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/open-telemetry/opentelemetry-python-contrib/compare/v0.35b0...v0.36b0\">https://github.com/open-telemetry/opentelemetry-python-contrib/compare/v0.35b0...v0.36b0</a></p>\n<h2>opentelemetry-contrib v0.35b0</h2>\n<h3>Deprecated</h3>\n<ul>\n<li><code>opentelemetry-distro</code> Deprecate <code>otlp_proto_grpc</code> and <code>otlp_proto_http</code> in favor of using\n<code>OTEL_EXPORTER_OTLP_TRACES_PROTOCOL</code> as according to specifications\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1250\">#1250</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CHANGELOG.md\">opentelemetry-instrumentation's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 1.20.0/0.41b0 (2023-09-01)</h2>\n<h3>Fixed</h3>\n<ul>\n<li><code>opentelemetry-instrumentation-asgi</code> Fix UnboundLocalError local variable 'start' referenced before assignment\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1889\">#1889</a>)</li>\n<li>Fixed union typing error not compatible with Python 3.7 introduced in <code>opentelemetry-util-http</code>, fix tests introduced by patch related to sanitize method for wsgi\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1913\">#1913</a>)</li>\n<li><code>opentelemetry-instrumentation-celery</code> Unwrap Celery's <code>ExceptionInfo</code> errors and report the actual exception that was raised. (<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1863\">#1863</a>)</li>\n</ul>\n<h3>Added</h3>\n<ul>\n<li><code>opentelemetry-resource-detector-azure</code> Add resource detectors for Azure App Service and VM\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1901\">#1901</a>)</li>\n</ul>\n<h2>Version 1.19.0/0.40b0 (2023-07-13)</h2>\n<ul>\n<li><code>opentelemetry-instrumentation-asgi</code> Add <code>http.server.request.size</code> metric\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1867\">#1867</a>)</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li><code>opentelemetry-instrumentation-django</code> Fix empty span name when using\n<code>path(&quot;&quot;, ...)</code> (<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1788\">#1788</a></li>\n<li>Fix elastic-search instrumentation sanitization to support bulk queries\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1870\">#1870</a>)</li>\n<li>Update falcon instrumentation to follow semantic conventions\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1824\">#1824</a>)</li>\n<li>Fix sqlalchemy instrumentation wrap methods to accept sqlcommenter options\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1873\">#1873</a>)</li>\n</ul>\n<h3>Added</h3>\n<ul>\n<li>Add instrumentor support for cassandra and scylla\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1902\">#1902</a>)</li>\n<li>Add instrumentor support for mysqlclient\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1744\">#1744</a>)</li>\n<li>Fix async redis clients not being traced correctly\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1830\">#1830</a>)</li>\n<li>Make Flask request span attributes available for <code>start_span</code>.\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1784\">#1784</a>)</li>\n<li>Fix falcon instrumentation's usage of Span Status to only set the description if the status code is ERROR.\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1840\">#1840</a>)</li>\n<li>Instrument all httpx versions &gt;= 0.18.\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1748\">#1748</a>)</li>\n<li>Fix <code>Invalid type NoneType for attribute X  (opentelemetry-instrumentation-aws-lambda)</code> error when some attributes do not exist\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1780\">#1780</a>)</li>\n<li>Add metric instrumentation for celery\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1679\">#1679</a>)</li>\n<li><code>opentelemetry-instrumentation-asgi</code> Add <code>http.server.response.size</code> metric\n(<a href=\"https://redirect.github.com/open-telemetry/opentelemetry-python-contrib/pull/1789\">#1789</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/open-telemetry/opentelemetry-python-contrib/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=opentelemetry-instrumentation&package-manager=pip&previous-version=0.18b0&new-version=0.41b0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/opentelemetry-instrumentation-0.41b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump opentelemetry-instrumentation (#3456)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3d44ee515ce6a4e2dc",
    "number": 3454,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/3451",
    "head_branch": "schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "schema (#3454)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3e44ee515ce6a4e2dd",
    "number": 3450,
    "body": "Fixes #3449\r\n\r\nSimilar to:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-js/pull/4144\r\nhttps://github.com/open-telemetry/opentelemetry-java/pull/5842\r\n\r\nFor this to work, we also need a few changes:\r\n\r\n1. Create a [`benchmarks` branch](https://github.com/open-telemetry/opentelemetry-python/pull/3450/files#diff-22eef62c9d7b36d02f5fd5aaada92702e22d6795c464239cb7b8fe0f26ea1e1cR51) in this repo.\r\n2. Configure the URL path in Github pages (similar to [this](https://github.com/open-telemetry/opentelemetry-js/pull/4144#issuecomment-1736498186)).\r\n\r\nI tested this in a separate Github organization, [here](https://github.com/SecuringCarter/opentelemetry-python) is the corresponding repo. The charts are published [here](https://securingcarter.github.io/opentelemetry-python).\r\n\r\nhttps://github.com/open-telemetry/community/issues/1700 tracks the changes needed to run these benchmarks on the `open-telemetry` Github organization runners.",
    "head_branch": "issue_3449",
    "is_a_fork": true,
    "comments": [
      "Besides adding this workflow, part of the plan is to create a new orphan branch named `benchmarks` where there are [2 files](https://github.com/SecuringCarter/opentelemetry-python/tree/benchmarks). Rendering these files produces charts like [these](https://securingcarter.github.io/opentelemetry-python/)."
    ],
    "commit_messages": [
      "Add benchmarks workflow (#3450)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3f44ee515ce6a4e2de",
    "number": 3448,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/3321",
    "head_branch": "read",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update __init__.py (#3448)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c3f44ee515ce6a4e2df",
    "number": 3447,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/3328",
    "head_branch": "res",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not load resource on sdk import (#3447)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4044ee515ce6a4e2e0",
    "number": 3445,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/3321",
    "head_branch": "drop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4144ee515ce6a4e2e1",
    "number": 3442,
    "body": "# Description\r\n\r\nFixes #3431\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated existing tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated ",
    "head_branch": "allow-slash-3431",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow instrument names to have '/' and up to 255 characters (#3442)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4244ee515ce6a4e2e2",
    "number": 3440,
    "body": "Fixes startup error:\r\n\r\nError: failed to get config: cannot unmarshal the configuration: 1 error(s) decoding:\r\n\r\n* '' has invalid keys: batch, logging, otlp\r\n2023/09/15 06:53:14 collector server run finished with error: failed to get config: cannot unmarshal the configuration: 1 error(s) decoding:\r\n\r\n* '' has invalid keys: batch, logging, otlp\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: malaterre / name: Mathieu Malaterre  (cc7c6c2b481c6e1fdc9ec5f7d78eb434b69f0ee1)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (29e2c6fbcb0c5a74a0d0c08243466691ae0c6388)</li></ul>"
    ],
    "commit_messages": [
      "Cleanup YAML file (#3440)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4344ee515ce6a4e2e3",
    "number": 3438,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4444ee515ce6a4e2e4",
    "number": 3437,
    "body": null,
    "head_branch": "oc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4444ee515ce6a4e2e5",
    "number": 3436,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4544ee515ce6a4e2e6",
    "number": 3435,
    "body": "# Description\r\n\r\nBy default and with a clean checkout,`eachdist.py develop` fails with a `no matching distribution` error.\r\n\r\nHowever, if you modify the script, setting [with_test_deps](https://github.com/open-telemetry/opentelemetry-python/blob/191b21a49d21c78eb4ad561835aef9429605ad82/scripts/eachdist.py#L211) to False, the script issues a pip command that does not indicate `[test]` extras for each package, and it completes successfully.\r\n\r\nThis PR makes a small change to `eachdist.py`, defaulting `with_test_deps` to `False` and adding a flag so users can still turn this capability on.\r\n\r\nPossible workaround for #1846\r\n\r\nRelated to #1462\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTested manually by running `eachdist.py develop` in a clean Python environment.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes?\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "eachdist-workaround",
    "is_a_fork": true,
    "comments": [
      "> Scripts in scripts/ that were copied over to the Contrib repo have changed\r\n\r\nIf this change is accepted happy to apply it to contrib as well.",
      "@pmcollins curious, what is the motivation behind this change? Is there something this script can do that `tox` can't? ",
      "> @pmcollins curious, what is the motivation behind this change? Is there something this script can do that `tox` can't?\r\n\r\nHi @ocelotl -- I use the eachdist script to install all OTel python sub-projects in editable mode (`python eachdist.py develop`), and it looks like eachdist was developed for this purpose (among others). Do you feel that this approach is deprecated (or should it be)? I'm curious about alternative approaches (happy to discuss in Slack if you want, too).\r\n\r\nIn any case, it looks like my original problem is no longer a problem 🤷, but there is a new problem and that is that -- at least for me -- the import order defined in eachdist.ini needs tweaking. I have updated this PR with that tweak, which is a little bit sneaky because we're repurposing this PR a bit, but at least now we have the option.\r\n\r\nIn its current form, `python scripts/eachdist.py develop` fails, but it succeeds with the changes proposed in this PR (I have updated this PR with a different order in eachdist.ini), so if these changes are good, I'd like to make them available to other developers. On the other hand, if we want to deprecate the `develop` subcommand or the whole script, happy to discuss that too.",
      "Closing in favor of the fix for https://github.com/open-telemetry/opentelemetry-python/issues/3903."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4644ee515ce6a4e2e7",
    "number": 3434,
    "body": "# Description\r\n\r\nRe-exported `InMemorySpanExporter` so it can be used by other libraries to these themselves.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@nirga \r\n\r\nIs there any reason why you cannot just import the class directly?",
      "> @nirga\r\n> \r\n> Is there any reason why you cannot just import the class directly?\r\n\r\n@lzchen I can't really import it from outside of `opentelemetry-python`"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4744ee515ce6a4e2e8",
    "number": 3433,
    "body": "CI is currently broken because OpenCensus is missing a dependency on `six`. See https://github.com/open-telemetry/opentelemetry-python/actions/runs/6162506119/job/16758832817?pr=3428 and https://github.com/census-instrumentation/opencensus-python/issues/1219",
    "head_branch": "oc-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Temp fix for opencensus missing dependency on six (#3433)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4844ee515ce6a4e2e9",
    "number": 3429,
    "body": "Fixes #3407\r\nFixes #3089 ",
    "head_branch": "issue_3407",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix explicit bucket histogram aggregation (#3429)\n\n* Fix explicit bucket histogram aggregation\r\n\r\nFixes #3407\r\n\r\n* Revert \"Fix explicit bucket histogram aggregation\"\r\n\r\nThis reverts commit f1c6683cbf48ad9acdfce8be24b1dbafaa7bc918.\r\n\r\n* Fix ExplicitBucketHistogramAggregation\r\n\r\nFixes #3407\r\n\r\n* Fix default instrument temporality\r\n\r\n* Fix last test case\r\n\r\n* Add more test cases\r\n\r\n* Test min, max and sum\r\n\r\n* Fix lint\r\n\r\n* Add CHANGELOG\r\n\r\n* Fix lint\r\n\r\n* Skip test if running in Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4944ee515ce6a4e2ea",
    "number": 3428,
    "body": "# Description\r\n\r\nUpdate SDK configuration to handle when `opentelemetry_metrics_exporter` entrypoint points to a MetricReader, which is how we represent pull exporters e.g. Prometheus.\r\n\r\nFixes #3411\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded new tests cases for configuration components. Will add Prometheus support to fix https://github.com/open-telemetry/opentelemetry-python/issues/2864 and test this out concretely.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated – N/A",
    "head_branch": "reader-or-exporter-3411",
    "is_a_fork": true,
    "comments": [
      "This is smart, saves us from breaking changes and/or a much more complicated solution :+1: \r\n\r\nIn practical terms, this change is aimed at `opentelemetry-instrument` users, so I think it would make sense to also add some documentation in the corresponding contrib component so that when `--help` is used with that command there is some information that lets the user know they can use `--metrics-exporter` with a metrics reader entry point as well.",
      "BTW, I noticed that the `OTEL_*_EXPORTER` environment variables are defined [in the API](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-api/src/opentelemetry/environment_variables.py#L15-L25). Shouldn't they be in the SDK instead?",
      "> BTW, I noticed that the `OTEL_*_EXPORTER` environment variables are defined [in the API](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-api/src/opentelemetry/environment_variables.py#L15-L25). Shouldn't they be in the SDK instead?\r\n\r\nPossibly but it would be a breaking change",
      "> In practical terms, this change is aimed at `opentelemetry-instrument` users, so I think it would make sense to also add some documentation in the corresponding contrib component so that when `--help` is used with that command there is some information that lets the user know they can use `--metrics-exporter` with a metrics reader entry point as well.\r\n\r\n@ocelotl I took a look at the output of `opentelemetry-instrument --help`: \r\n\r\n<details><summary>--help output</summary>\r\n<p>\r\n<pre>\r\nusage: opentelemetry-instrument [-h] [--logs_exporter LOGS_EXPORTER]\r\n                                [--metrics_exporter METRICS_EXPORTER]\r\n                                [--propagators PROPAGATORS]\r\n                                [--context CONTEXT]\r\n                                [--id_generator ID_GENERATOR]\r\n                                [--meter_provider METER_PROVIDER]\r\n                                [--tracer_provider TRACER_PROVIDER]\r\n                                [--traces_exporter TRACES_EXPORTER]\r\n                                [--configurator CONFIGURATOR]\r\n                                [--disabled_instrumentations DISABLED_INSTRUMENTATIONS]\r\n                                [--distro DISTRO]\r\n                                [--attribute_count_limit ATTRIBUTE_COUNT_LIMIT]\r\n                                [--attribute_value_length_limit ATTRIBUTE_VALUE_LENGTH_LIMIT]\r\n                                [--blrp_export_timeout BLRP_EXPORT_TIMEOUT]\r\n                                [--blrp_max_export_batch_size BLRP_MAX_EXPORT_BATCH_SIZE]\r\n                                [--blrp_max_queue_size BLRP_MAX_QUEUE_SIZE]\r\n                                [--blrp_schedule_delay BLRP_SCHEDULE_DELAY]\r\n                                [--bsp_export_timeout BSP_EXPORT_TIMEOUT]\r\n                                [--bsp_max_export_batch_size BSP_MAX_EXPORT_BATCH_SIZE]\r\n                                [--bsp_max_queue_size BSP_MAX_QUEUE_SIZE]\r\n                                [--bsp_schedule_delay BSP_SCHEDULE_DELAY]\r\n                                [--event_attribute_count_limit EVENT_ATTRIBUTE_COUNT_LIMIT]\r\n                                [--experimental_resource_detectors EXPERIMENTAL_RESOURCE_DETECTORS]\r\n                                [--exporter_jaeger_agent_host EXPORTER_JAEGER_AGENT_HOST]\r\n                                [--exporter_jaeger_agent_port EXPORTER_JAEGER_AGENT_PORT]\r\n                                [--exporter_jaeger_agent_split_oversized_batches EXPORTER_JAEGER_AGENT_SPLIT_OVERSIZED_BATCHES]\r\n                                [--exporter_jaeger_certificate EXPORTER_JAEGER_CERTIFICATE]\r\n                                [--exporter_jaeger_endpoint EXPORTER_JAEGER_ENDPOINT]\r\n                                [--exporter_jaeger_grpc_insecure EXPORTER_JAEGER_GRPC_INSECURE]\r\n                                [--exporter_jaeger_password EXPORTER_JAEGER_PASSWORD]\r\n                                [--exporter_jaeger_timeout EXPORTER_JAEGER_TIMEOUT]\r\n                                [--exporter_jaeger_user EXPORTER_JAEGER_USER]\r\n                                [--exporter_otlp_certificate EXPORTER_OTLP_CERTIFICATE]\r\n                                [--exporter_otlp_compression EXPORTER_OTLP_COMPRESSION]\r\n                                [--exporter_otlp_endpoint EXPORTER_OTLP_ENDPOINT]\r\n                                [--exporter_otlp_headers EXPORTER_OTLP_HEADERS]\r\n                                [--exporter_otlp_insecure EXPORTER_OTLP_INSECURE]\r\n                                [--exporter_otlp_logs_certificate EXPORTER_OTLP_LOGS_CERTIFICATE]\r\n                                [--exporter_otlp_logs_compression EXPORTER_OTLP_LOGS_COMPRESSION]\r\n                                [--exporter_otlp_logs_endpoint EXPORTER_OTLP_LOGS_ENDPOINT]\r\n                                [--exporter_otlp_logs_headers EXPORTER_OTLP_LOGS_HEADERS]\r\n                                [--exporter_otlp_logs_insecure EXPORTER_OTLP_LOGS_INSECURE]\r\n                                [--exporter_otlp_logs_protocol EXPORTER_OTLP_LOGS_PROTOCOL]\r\n                                [--exporter_otlp_logs_timeout EXPORTER_OTLP_LOGS_TIMEOUT]\r\n                                [--exporter_otlp_metrics_certificate EXPORTER_OTLP_METRICS_CERTIFICATE]\r\n                                [--exporter_otlp_metrics_client_certificate EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE]\r\n                                [--exporter_otlp_metrics_client_key EXPORTER_OTLP_METRICS_CLIENT_KEY]\r\n                                [--exporter_otlp_metrics_compression EXPORTER_OTLP_METRICS_COMPRESSION]\r\n                                [--exporter_otlp_metrics_default_histogram_aggregation EXPORTER_OTLP_METRICS_DEFAULT_HISTOGRAM_AGGREGATION]\r\n                                [--exporter_otlp_metrics_endpoint EXPORTER_OTLP_METRICS_ENDPOINT]\r\n                                [--exporter_otlp_metrics_headers EXPORTER_OTLP_METRICS_HEADERS]\r\n                                [--exporter_otlp_metrics_insecure EXPORTER_OTLP_METRICS_INSECURE]\r\n                                [--exporter_otlp_metrics_protocol EXPORTER_OTLP_METRICS_PROTOCOL]\r\n                                [--exporter_otlp_metrics_temporality_preference EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE]\r\n                                [--exporter_otlp_metrics_timeout EXPORTER_OTLP_METRICS_TIMEOUT]\r\n                                [--exporter_otlp_protocol EXPORTER_OTLP_PROTOCOL]\r\n                                [--exporter_otlp_timeout EXPORTER_OTLP_TIMEOUT]\r\n                                [--exporter_otlp_traces_certificate EXPORTER_OTLP_TRACES_CERTIFICATE]\r\n                                [--exporter_otlp_traces_compression EXPORTER_OTLP_TRACES_COMPRESSION]\r\n                                [--exporter_otlp_traces_endpoint EXPORTER_OTLP_TRACES_ENDPOINT]\r\n                                [--exporter_otlp_traces_headers EXPORTER_OTLP_TRACES_HEADERS]\r\n                                [--exporter_otlp_traces_insecure EXPORTER_OTLP_TRACES_INSECURE]\r\n                                [--exporter_otlp_traces_protocol EXPORTER_OTLP_TRACES_PROTOCOL]\r\n                                [--exporter_otlp_traces_timeout EXPORTER_OTLP_TRACES_TIMEOUT]\r\n                                [--exporter_prometheus_host EXPORTER_PROMETHEUS_HOST]\r\n                                [--exporter_prometheus_port EXPORTER_PROMETHEUS_PORT]\r\n                                [--exporter_zipkin_endpoint EXPORTER_ZIPKIN_ENDPOINT]\r\n                                [--exporter_zipkin_timeout EXPORTER_ZIPKIN_TIMEOUT]\r\n                                [--link_attribute_count_limit LINK_ATTRIBUTE_COUNT_LIMIT]\r\n                                [--log_level LOG_LEVEL]\r\n                                [--metrics_exemplar_filter METRICS_EXEMPLAR_FILTER]\r\n                                [--metric_export_interval METRIC_EXPORT_INTERVAL]\r\n                                [--metric_export_timeout METRIC_EXPORT_TIMEOUT]\r\n                                [--resource_attributes RESOURCE_ATTRIBUTES]\r\n                                [--service_name SERVICE_NAME]\r\n                                [--span_attribute_count_limit SPAN_ATTRIBUTE_COUNT_LIMIT]\r\n                                [--span_attribute_value_length_limit SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT]\r\n                                [--span_event_count_limit SPAN_EVENT_COUNT_LIMIT]\r\n                                [--span_link_count_limit SPAN_LINK_COUNT_LIMIT]\r\n                                [--traces_sampler TRACES_SAMPLER]\r\n                                [--traces_sampler_arg TRACES_SAMPLER_ARG]\r\n                                [--version]\r\n                                command ...\r\n\r\nopentelemetry-instrument automatically instruments a Python program and its\r\ndependencies and then runs the program.\r\n\r\npositional arguments:\r\n  command               Your Python application.\r\n  command_args          Arguments for your application.\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  --logs_exporter LOGS_EXPORTER\r\n  --metrics_exporter METRICS_EXPORTER\r\n  --propagators PROPAGATORS\r\n  --context CONTEXT\r\n  --id_generator ID_GENERATOR\r\n  --meter_provider METER_PROVIDER\r\n  --tracer_provider TRACER_PROVIDER\r\n  --traces_exporter TRACES_EXPORTER\r\n  --configurator CONFIGURATOR\r\n  --disabled_instrumentations DISABLED_INSTRUMENTATIONS\r\n  --distro DISTRO\r\n  --attribute_count_limit ATTRIBUTE_COUNT_LIMIT\r\n  --attribute_value_length_limit ATTRIBUTE_VALUE_LENGTH_LIMIT\r\n  --blrp_export_timeout BLRP_EXPORT_TIMEOUT\r\n  --blrp_max_export_batch_size BLRP_MAX_EXPORT_BATCH_SIZE\r\n  --blrp_max_queue_size BLRP_MAX_QUEUE_SIZE\r\n  --blrp_schedule_delay BLRP_SCHEDULE_DELAY\r\n  --bsp_export_timeout BSP_EXPORT_TIMEOUT\r\n  --bsp_max_export_batch_size BSP_MAX_EXPORT_BATCH_SIZE\r\n  --bsp_max_queue_size BSP_MAX_QUEUE_SIZE\r\n  --bsp_schedule_delay BSP_SCHEDULE_DELAY\r\n  --event_attribute_count_limit EVENT_ATTRIBUTE_COUNT_LIMIT\r\n  --experimental_resource_detectors EXPERIMENTAL_RESOURCE_DETECTORS\r\n  --exporter_jaeger_agent_host EXPORTER_JAEGER_AGENT_HOST\r\n  --exporter_jaeger_agent_port EXPORTER_JAEGER_AGENT_PORT\r\n  --exporter_jaeger_agent_split_oversized_batches EXPORTER_JAEGER_AGENT_SPLIT_OVERSIZED_BATCHES\r\n  --exporter_jaeger_certificate EXPORTER_JAEGER_CERTIFICATE\r\n  --exporter_jaeger_endpoint EXPORTER_JAEGER_ENDPOINT\r\n  --exporter_jaeger_grpc_insecure EXPORTER_JAEGER_GRPC_INSECURE\r\n  --exporter_jaeger_password EXPORTER_JAEGER_PASSWORD\r\n  --exporter_jaeger_timeout EXPORTER_JAEGER_TIMEOUT\r\n  --exporter_jaeger_user EXPORTER_JAEGER_USER\r\n  --exporter_otlp_certificate EXPORTER_OTLP_CERTIFICATE\r\n  --exporter_otlp_compression EXPORTER_OTLP_COMPRESSION\r\n  --exporter_otlp_endpoint EXPORTER_OTLP_ENDPOINT\r\n  --exporter_otlp_headers EXPORTER_OTLP_HEADERS\r\n  --exporter_otlp_insecure EXPORTER_OTLP_INSECURE\r\n  --exporter_otlp_logs_certificate EXPORTER_OTLP_LOGS_CERTIFICATE\r\n  --exporter_otlp_logs_compression EXPORTER_OTLP_LOGS_COMPRESSION\r\n  --exporter_otlp_logs_endpoint EXPORTER_OTLP_LOGS_ENDPOINT\r\n  --exporter_otlp_logs_headers EXPORTER_OTLP_LOGS_HEADERS\r\n  --exporter_otlp_logs_insecure EXPORTER_OTLP_LOGS_INSECURE\r\n  --exporter_otlp_logs_protocol EXPORTER_OTLP_LOGS_PROTOCOL\r\n  --exporter_otlp_logs_timeout EXPORTER_OTLP_LOGS_TIMEOUT\r\n  --exporter_otlp_metrics_certificate EXPORTER_OTLP_METRICS_CERTIFICATE\r\n  --exporter_otlp_metrics_client_certificate EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE\r\n  --exporter_otlp_metrics_client_key EXPORTER_OTLP_METRICS_CLIENT_KEY\r\n  --exporter_otlp_metrics_compression EXPORTER_OTLP_METRICS_COMPRESSION\r\n  --exporter_otlp_metrics_default_histogram_aggregation EXPORTER_OTLP_METRICS_DEFAULT_HISTOGRAM_AGGREGATION\r\n  --exporter_otlp_metrics_endpoint EXPORTER_OTLP_METRICS_ENDPOINT\r\n  --exporter_otlp_metrics_headers EXPORTER_OTLP_METRICS_HEADERS\r\n  --exporter_otlp_metrics_insecure EXPORTER_OTLP_METRICS_INSECURE\r\n  --exporter_otlp_metrics_protocol EXPORTER_OTLP_METRICS_PROTOCOL\r\n  --exporter_otlp_metrics_temporality_preference EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE\r\n  --exporter_otlp_metrics_timeout EXPORTER_OTLP_METRICS_TIMEOUT\r\n  --exporter_otlp_protocol EXPORTER_OTLP_PROTOCOL\r\n  --exporter_otlp_timeout EXPORTER_OTLP_TIMEOUT\r\n  --exporter_otlp_traces_certificate EXPORTER_OTLP_TRACES_CERTIFICATE\r\n  --exporter_otlp_traces_compression EXPORTER_OTLP_TRACES_COMPRESSION\r\n  --exporter_otlp_traces_endpoint EXPORTER_OTLP_TRACES_ENDPOINT\r\n  --exporter_otlp_traces_headers EXPORTER_OTLP_TRACES_HEADERS\r\n  --exporter_otlp_traces_insecure EXPORTER_OTLP_TRACES_INSECURE\r\n  --exporter_otlp_traces_protocol EXPORTER_OTLP_TRACES_PROTOCOL\r\n  --exporter_otlp_traces_timeout EXPORTER_OTLP_TRACES_TIMEOUT\r\n  --exporter_prometheus_host EXPORTER_PROMETHEUS_HOST\r\n  --exporter_prometheus_port EXPORTER_PROMETHEUS_PORT\r\n  --exporter_zipkin_endpoint EXPORTER_ZIPKIN_ENDPOINT\r\n  --exporter_zipkin_timeout EXPORTER_ZIPKIN_TIMEOUT\r\n  --link_attribute_count_limit LINK_ATTRIBUTE_COUNT_LIMIT\r\n  --log_level LOG_LEVEL\r\n  --metrics_exemplar_filter METRICS_EXEMPLAR_FILTER\r\n  --metric_export_interval METRIC_EXPORT_INTERVAL\r\n  --metric_export_timeout METRIC_EXPORT_TIMEOUT\r\n  --resource_attributes RESOURCE_ATTRIBUTES\r\n  --service_name SERVICE_NAME\r\n  --span_attribute_count_limit SPAN_ATTRIBUTE_COUNT_LIMIT\r\n  --span_attribute_value_length_limit SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT\r\n  --span_event_count_limit SPAN_EVENT_COUNT_LIMIT\r\n  --span_link_count_limit SPAN_LINK_COUNT_LIMIT\r\n  --traces_sampler TRACES_SAMPLER\r\n  --traces_sampler_arg TRACES_SAMPLER_ARG\r\n  --version             print version information\r\n\r\nOptional arguments (except for --help and --version) for opentelemetry-\r\ninstrument directly correspond with OpenTelemetry environment variables. The\r\ncorresponding optional argument is formed by removing the OTEL_ or\r\nOTEL_PYTHON_ prefix from the environment variable and lower casing the rest.\r\nFor example, the optional argument --attribute_value_length_limit corresponds\r\nwith the environment variable OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT. These\r\noptional arguments will override the current value of the corresponding\r\nenvironment variable during the execution of the command.\r\n</pre>\r\n</p>\r\n</details> \r\n\r\nIt doesn't have any detailed info as the flags are just coming from environment variables. I guess it would make the most sense to just document it along with the environment variable then? ",
      "I updated the sphinx docs for `OTEL_METRICS_EXPORTER` explaining what's supported and that it's considered experimental",
      "Test failures look like https://github.com/census-instrumentation/opencensus-python/issues/1219 @lzchen did we do a recent OpenCensus release?",
      "Fix in this repo for the problem https://github.com/open-telemetry/opentelemetry-python/pull/3433"
    ],
    "commit_messages": [
      "Make `opentelemetry_metrics_exporter` entrypoint support pull exporters (#3428)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4944ee515ce6a4e2eb",
    "number": 3425,
    "body": "Copy log updates from `release/v1.20.x-0.41bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.20.x-0.41bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Copy change log updates from release/v1.20.x-0.41bx (#3425)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4a44ee515ce6a4e2ec",
    "number": 3423,
    "body": "If a `LoggerHandler` is instantiated without an SDK LoggerProvider, an exception is thrown [here](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/src/opentelemetry/sdk/_logs/_internal/__init__.py#L529) since `NoOpLogger` does not have the `resource` attribute.\r\n\r\nRepro:\r\n\r\n```python\r\n...\r\n# do not set SDK Loggerprovider\r\n\r\nhandler = LoggingHandler(level=logging.NOTSET)\r\nlogging.getLogger().addHandler(handler)\r\nlogging.info(\"Jackdaws love my big sphinx of quartz.\")\r\n...\r\n```\r\n",
    "head_branch": "logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix exception thrown when LoggerProvider not configured (#3423)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4b44ee515ce6a4e2ed",
    "number": 3422,
    "body": "Prepare release 1.20.0/0.41b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.20.0-0.41b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.20.x-0.41bx] Prepare release 1.20.0/0.41b0 (#3422)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4c44ee515ce6a4e2ee",
    "number": 3421,
    "body": "Update version to `1.21.0.dev/0.42b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.21.0.dev-0.42b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.21.0.dev/0.42b0.dev (#3421)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4d44ee515ce6a4e2ef",
    "number": 3416,
    "body": null,
    "head_branch": "prom-label-bug-3391",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4d44ee515ce6a4e2f0",
    "number": 3415,
    "body": "Bumps [uwsgi](https://github.com/unbit/uwsgi-docs) from 2.0.19.1 to 2.0.22.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/unbit/uwsgi-docs/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=uwsgi&package-manager=pip&previous-version=2.0.19.1&new-version=2.0.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/uwsgi-2.0.22",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump uwsgi from 2.0.19.1 to 2.0.22 in /docs/examples/fork-process-model/flask-uwsgi (#3415)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4e44ee515ce6a4e2f1",
    "number": 3414,
    "body": "Bumps [uwsgi](https://github.com/unbit/uwsgi-docs) from 2.0.19.1 to 2.0.22.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/unbit/uwsgi-docs/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=uwsgi&package-manager=pip&previous-version=2.0.19.1&new-version=2.0.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/uwsgi-2.0.22",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump uwsgi from 2.0.19.1 to 2.0.22 in /docs/examples/fork-process-model/flask-gunicorn (#3414)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c4f44ee515ce6a4e2f2",
    "number": 3413,
    "body": "# Description\r\n\r\nFixes #2864 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new tests for entrypoint and manually tested with python shell\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated ",
    "head_branch": "promauto-2864",
    "is_a_fork": true,
    "comments": [
      "Hi, thanks for this feature. I am keen to try it out. Is it just blocked by the publicAPICheck?",
      "It just needs review. The check is expected to fail here and I'll leave it failing as an FYI",
      "@aabmass @ocelotl \r\n\r\nOh I guess our release workflow covers the updating dependencies [automatically](https://github.com/open-telemetry/opentelemetry-python/blob/main/scripts/eachdist.py#L580). Regardless, we will be mindful to check before we make the next release."
    ],
    "commit_messages": [
      "Prometheus exporter support for auto instrumentation (#3413)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5044ee515ce6a4e2f3",
    "number": 3412,
    "body": "# Description\r\n\r\n- Update the SDK Configuration to expect `opentelemetry_metrics_exporter` entrypoint impl to be a `Callable[[], MetricReader]`\r\n- Update the SDK's console exporter entrypoint to implement this new protocol\r\n- Update the OTLP exporters' entrypoints to implement this new protocol\r\n\r\n**Note this is a breaking change in an unstable component**\r\n\r\nFixes #3411 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Existing tests are passing\r\n- Added new test cases in OTLP exporters to verify that entrypoints are being loaded by name\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated ",
    "head_branch": "reader-factories-3411",
    "is_a_fork": true,
    "comments": [
      "Recalling from the SIG discussion on 08/24, we were going back and forth deciding whether we want to rename the exporter entrypoint into a reader or have two entry points to configure reader and exporter (where one will take priority if only one is needed). I believe the points were outlined as below:\r\n\r\nRename entrypoint to reader:\r\n\r\n1. Accurately reflects the reader classes for pull based exporters\r\n2. Is confusing for push based exporters\r\n\r\nKeep entrypoint in PR as exporter:\r\n\r\n1. Pull based exporters are actually readers so this isn't entirely accurate\r\n\r\nHave both reader and exporter entrypoints\r\n\r\n1. Allows for more configuration\r\n2. More complex and could introduce priority issues.\r\n\r\n@aabmass \r\n\r\nWhat do you think of keeping only one entrypoint, but allowing the factory to return either a metricreader or metricexporter, and setting up the metrics pipeline differently based off of return type?",
      "Discussed in SIG and updated the issue with discussion. Will take a different approach."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5144ee515ce6a4e2f4",
    "number": 3410,
    "body": "# Description\r\n\r\nThis Pull Request simply fixes a broken URL inside the Markdown file. \r\n\r\nThe link was pointing to a page that does not exists anymore. Probably because semantic conventions\r\n[have been extracted](https://github.com/open-telemetry/opentelemetry-specification/commit/279e5e17aa8307578794c1ded47cfcf2bf5d950a) to a separated repository. \r\nThus, I have updated the link in order to point to the new [Semantic Conventions Documentation](https://github.com/open-telemetry/semantic-conventions/blob/main/docs/README.md). \r\n\r\n\r\nFixes # (issue)\r\nNo related issue. Please let me know if you folks want me to create a issue for it.\r\n\r\n## Type of change\r\nIt is a documentation change.\r\n\r\nPlease delete options that are not relevant.\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nNo tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix broken URL of Open Telemetry Semantic Conventions (#3410)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5244ee515ce6a4e2f5",
    "number": 3406,
    "body": "Fixes #3405",
    "head_branch": "issue_3405",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add upper bound for importlib-metadata dependency (#3406)\n\nFixes #3405"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5244ee515ce6a4e2f6",
    "number": 3404,
    "body": "# Description\r\n\r\nWhen checking the repo for some Environment Variables I've noticed that `OTEL_EXPORTER_OTLP_METRICS_PROTOCOL` and `OTEL_EXPORTER_OTLP_LOGS_PROTOCOL` were refering to the Traces env var.\r\n\r\nI don't think this change requires any further updates, but please let me know if that's the case.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "FIX-Copy-and-Paste-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix copy and paste issue (#3404)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5344ee515ce6a4e2f7",
    "number": 3403,
    "body": "This is functionally equivalent to the previous state but it works around a bug in pypi.\r\n\r\nFixes #3382",
    "head_branch": "issue_3382",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change importlib-metadata requirement specification (#3403)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5444ee515ce6a4e2f8",
    "number": 3400,
    "body": "A possible implementation for #1003.\r\n\r\nI had to implement this for work and this seemed to do the trick.\r\n\r\nI realize that this is not viable as-is, e.g. it would have to be published under another package that doesn't literally contain the name `proto` in it when it's doing json stuff. But I'm hoping to get some initial feedback or just leave this as a suggestion since I don't know how to nor do I have the bandwidth to create a new OTEL package.",
    "head_branch": "http-json-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5544ee515ce6a4e2f9",
    "number": 3396,
    "body": "# Description\r\n\r\nThis is a relatively minor change that factors out some duplicate code I found while starting on another issue (#1003).\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Minor refactor\r\n\r\n# How Has This Been Tested?\r\n\r\nRan tox tests.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Not a user-facing change so no changelog entry added\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "exp_refact",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Factor out duplicate backoff code (#3396)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5644ee515ce6a4e2fa",
    "number": 3395,
    "body": "# Description\r\n\r\nWithout doing this, the pb_metric2.Metric has no value for the oneof data field, which means it does not have any known type. This breaks many exporters. Instead, when faced with no data points for a metric, we should present that empty dataset.\r\n\r\nFixes #3277.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI have tested this a little with tox, but I haven't written thorough tests. I'm not sure where I'd put those - this is a big, complicated repo, and writing good tests is a challenge.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "dont_collect_empty_metrics",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: spenczar / name: Spencer Nelson  (056d3bb9ff76f5f2d6c45128f693d696cbd4da86)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (cf0492bda08a75c2b90ec40f7d4e48f1eecfb928)</li></ul>",
      "This has some overlap with this PR https://github.com/open-telemetry/opentelemetry-python/pull/3335. I think the concerns expressed are valid. @aabmass was there any SIG discussion on it?",
      "Let's discuss it in next week's SIG. I agree there is some overlap here.",
      "@aabmass brought this topic in the SIG, please leave here any opinions you may have.",
      "Superseded by #3335, closing"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5644ee515ce6a4e2fb",
    "number": 3394,
    "body": "# Description\r\n\r\nAdding missing field from [cloud sem conv](https://opentelemetry.io/docs/specs/otel/resource/semantic_conventions/cloud/)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "cloud-resource-id-sem-conv",
    "is_a_fork": true,
    "comments": [
      "The files in opentelemetry-semantic-conventions are auto-generated by a script. If something is missing, it means the current generated version is old. The right thing to do is bump the semantic convention version, thanks to @lmolkova for https://github.com/open-telemetry/opentelemetry-python/pull/3251 which updates the semconv",
      "> The files in opentelemetry-semantic-conventions are auto-generated by a script....\r\n\r\nUnderstood. Will close.\r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5744ee515ce6a4e2fc",
    "number": 3390,
    "body": "Fixes #3268\r\n\r\n@aabmass this is the PR for the issue I mentioned in the last SIG, PTAL :v:",
    "head_branch": "issue_3268",
    "is_a_fork": true,
    "comments": [
      "[This](https://opentelemetry.io/docs/specs/otel/metrics/supplementary-guidelines/#asynchronous-example-delta-temporality) is a relevant example.",
      "Moving here [this](https://github.com/open-telemetry/opentelemetry-python/pull/3335#discussion_r1316238736) comment from @aabmass:\r\n\r\n> That makes sense 👍 one other question, do we keep the oldest start time that had data in this case? I believe we should. Here's a scenario:\r\n>\r\n> - 1st collection at t1, a delta counter has value 5\r\n> - 2nd collection at t2, the counter has None as no observations have been made\r\n> - 3rd collection at t3, the counter has value 2.\r\n>\r\n> Does the 3rd collection send the time/start_time as `(t1, t3)` or `(t2, t3)`?",
      "@ocelotl\r\n\r\n> Does the 3rd collection send the time/start_time as `(t1, t3)` or `(t2, t3)`?\r\n\r\nLooks like this PR saves the oldest previous time to get 1st option, is that right?",
      "> @ocelotl\r\n> \r\n> > Does the 3rd collection send the time/start_time as `(t1, t3)` or `(t2, t3)`?\r\n> \r\n> Looks like this PR saves the oldest previous time to get 1st option, is that right?\r\n\r\nYes, that's right, but TBH, I'm not sure if we should do that. The first option would produce a point whose difference between start and end time is larger than \"normal\". If a periodic metric reader is used, it can be weird to have a point that is \"longer\" than a collection cycle, right?",
      "I think this is the expected behavior, see [here](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/data-model.md#resets-and-gaps:~:text=For%20points%20with%20delta%20aggregation%20temporality%2C%20the%20StartTimeUnixNano%20of%20each%20point%20matches%20the%20TimeUnixNano%20of%20the%20preceding%20point)\r\n\r\n> For subsequent points in an unbroken sequence:\r\n> \r\n> * For points with delta aggregation temporality, the `StartTimeUnixNano` of each point matches the `TimeUnixNano` of the preceding point",
      "> I think this is the expected behavior, see [here](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/data-model.md?rgh-link-date=2023-09-06T19%3A31%3A46Z#resets-and-gaps:~:text=For%20points%20with%20delta%20aggregation%20temporality%2C%20the%20StartTimeUnixNano%20of%20each%20point%20matches%20the%20TimeUnixNano%20of%20the%20preceding%20point)\r\n> \r\n> > For subsequent points in an unbroken sequence:\r\n> > \r\n> > * For points with delta aggregation temporality, the `StartTimeUnixNano` of each point matches the `TimeUnixNano` of the preceding point\r\n\r\nAll right, seems like we are doing the right thing, then. PTAL at the rest of the PR when you have a chance :+1: ",
      "After discussing with @lzchen it looks like we also need to take into consideration the instrument monotonicity in `collect`.",
      "[This](https://opentelemetry.io/docs/specs/otel/metrics/supplementary-guidelines/#asynchronous-example-delta-temporality) may help:\r\n\r\n> Here is one way of choosing the correct instrument:\r\n>\r\n> - I want to count something (by recording a delta value):\r\n>   - If the value is monotonically increasing (the delta value is always non-negative) - use a Counter.\r\n>   - If the value is NOT monotonically increasing (the delta value can be positive, negative or zero) - use an UpDownCounter.\r\n> - I want to record or time something, and the statistics about this thing are likely to be meaningful - use a Histogram.\r\n> - I want to measure something (by reporting an absolute value):\r\n>   - If the measurement values are non-additive, use an Asynchronous Gauge.\r\n>   - If the measurement values are additive:\r\n>     - If the value is monotonically increasing - use an Asynchronous Counter.\r\n>     - If the value is NOT monotonically increasing - use an Asynchronous UpDownCounter.\r\n",
      "> After discussing with @lzchen it looks like we also need to take into consideration the instrument monotonicity in `collect`.\r\n\r\nActually, we don't. Monotonicity is used [here](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/metric_reader_storage.py#L170) instead."
    ],
    "commit_messages": [
      "Fix SumAggregation (#3390)\n\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5844ee515ce6a4e2fd",
    "number": 3387,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #3309 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "exporter_hang_issue",
    "is_a_fork": true,
    "comments": [
      "@rajat315315 \r\n\r\nAre you still working on this?",
      "@rajat315315 we are closing this PR since we haven't received a reply in a while. Please reopen if you being work on it again.",
      "This is still an issue, can we re-open this and work on landing this fix?",
      "@brightsparc \r\n\r\nIt doesn't look like the original author is working on this anymore. Feel to free to open a pr if you want this to be addressed asap."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5944ee515ce6a4e2fe",
    "number": 3386,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #3152 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "dropped_counter",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: rajat315315 / name: Rajat Jain  (5ac6decc58519db0ffe05418a766c751ce06a851, 4ee2e8a581713eb61292316a467df4b387c68e1d)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (4a036ae1d15e03e5e5ae6cbd4bf8d538cc083810, 03ac7948a4dd91e38a5d1a3e073a8e9ba6fbd90b, 376cbe8149c496e2f0796828f163adbfc0894f35)</li></ul>",
      "@rajat315315 \r\nAre you still working on this?",
      "Extremely busy these days..\nCannot find time to complete this.",
      "This PR needs further changes, marking it as draft."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5a44ee515ce6a4e2ff",
    "number": 3385,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nThis PR is regarding [https://github.com/open-telemetry/opentelemetry-python/issues/2591](this) Issue where PyLance was unable to detect opentelemetry because its a namespace package.\r\n\r\nFixes #2591 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "pytyped",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: rajat315315 / name: Rajat Jain  (cec89e13f2bd2473b081b9646676cae079f6b273, 4679a8573f7d4cdbe2affcf4a4dc7aca655feaf1, 85ed6792c8b19c94199abc2f6cb83507a655cc53, 2b82d4ef74ab54f85eb5cdefdd181f6265f8d552)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (d876cdb51f2ef158d480fffb704db753c759f47d, 745dbce6e0d8632ac7b4ed58b5589ab4e1633b4e, 48f82986aa1e16e251f466a249bf086c38d85352, 23ba2578783838ba801ce858eadcb6cb2e01bb72, 4486518f7614a8ccde74d3ca1d3f3a6b2cb7021e)</li></ul><!-- Date Modified: 2024-07-10 18:54:56.702744 -->",
      "My understanding is that in each of the folders within https://github.com/open-telemetry/opentelemetry-python/tree/main/opentelemetry-api/src/opentelemetry `_logs`, `attributes` ... there should be a py.typed file rather than a single py.typed file in that folder. Furthermore the 2 .py files in that folder should be converted to modules that has a `py.typed` file within them",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: rajat315315 / name: Rajat Jain  (4bb8d72074481c7cbfba83301cf503cc77bdfded, 96320d20ad7937611a00fedf01cdb73e4d1379e1, 9af787297e606fa6b9db34e71be976b3c44cf540, 752d485976f3a6434cc9843f303aa8835ce4b361)</li></ul>",
      "If we convert `version.py` and `environment_variables.py` to a module, running `tox` fails..",
      "ok, what are the exact errors that you are seeing ? It may be that the tox configuration needs to be updated?",
      "Sorry, it got fixed. I needed to correct the reference to `version.py` in `pyproject.toml` as well.\r\nCould you please review now?",
      "@ocelotl @rajat315315 This looks good to me ",
      "@rajat315315 \r\n\r\nAre you still working on this? Please fix the conflicts and rebase."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5b44ee515ce6a4e300",
    "number": 3384,
    "body": "Fixes #3383",
    "head_branch": "issue_3383",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update grpcio version (#3384)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5b44ee515ce6a4e301",
    "number": 3379,
    "body": "Prepare release 1.19.0/0.40b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.19.0-0.40b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.19.x-0.40bx] Prepare release 1.19.0/0.40b0 (#3379)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5c44ee515ce6a4e302",
    "number": 3378,
    "body": "Update version to `1.20.0.dev/0.41b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.20.0.dev-0.41b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.20.0.dev/0.41b0.dev (#3378)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5d44ee515ce6a4e303",
    "number": 3377,
    "body": "# Description\r\n\r\nWe are supposed to [default observed_timestamp](https://github.com/open-telemetry/opentelemetry-specification/pull/3385/files) to the current timestamp. \r\n\r\nFixes part of #3361\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded tests in sdk and api.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "stabilize_logs",
    "is_a_fork": true,
    "comments": [
      "Bit confused about this [mypy](https://github.com/open-telemetry/opentelemetry-python/actions/runs/5548589714/jobs/10131737759?pr=3377) error:\r\n`opentelemetry-api/tests/logs/test_log_record.py:28: error: Type of decorated function contains type \"Any\" (\"Callable[..., Any]\")\r\nFound 1 error in 1 file (checked 37 source files)`\r\nPatches need to be passed into tests and the tests are passing fine."
    ],
    "commit_messages": [
      "Default Observed Timestamp (#3377)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5e44ee515ce6a4e304",
    "number": 3375,
    "body": "# Description\r\n\r\nI noticed some export calls being tracked when using request and urllib3 instrumentations along with logging. It turns out the BLRP was failing to suppress the export call because of a typo.\r\n\r\nFixes #3376\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTested manually to confirm bug exists before change and is removed after change.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "log-export-suppress-bug-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixing bug where BLRP export tracked as tracing (#3375)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5e44ee515ce6a4e305",
    "number": 3373,
    "body": "# Description\r\n\r\nThis api is no longer provisional in 3.10 and this reduces the number of dependencies for any instrumented code on >= 3.10\r\n\r\n```\r\nChanged in version 3.10: importlib.metadata is no longer provisional.\r\n```\r\nSee the [official docs](https://docs.python.org/3.10/library/importlib.metadata.html)\r\n\r\nThis was suggested in #3234 but never implemented.\r\n\r\nFixes #3234\r\n\r\nand avoids issues such as #3333 on those versions in the future. \r\n\r\nIn my opinion it's a really nice feature of opentelemetry (compared to opencensus) that the api only has\r\nvery light dependencies. Currently it has 5 dependencies. Of these one is setuptools which can be dropped (#3372)\r\nand 2 are importlib-metadata and iss dependency zipp. Both or these are std lib backports so with these changes they\r\nare dropped. \r\n\r\n(The remaining dependencies are Deprecated and its dependency wrapt) \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe used importlib functionality is well tested within the codebase. These tests are \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added (N/A)\r\n- [x] Documentation has been updated (N/A)\r\n",
    "head_branch": "importlib.metadata",
    "is_a_fork": true,
    "comments": [
      "Seems like these is a an api difference so I will close until I had a change to investigate"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c5f44ee515ce6a4e306",
    "number": 3372,
    "body": "# Description\r\n\r\nThis was originally added in #2334 but the runtime dependency on pkg_resources was since dropped in #3047 so the dependency can be dropped\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI have verified that setuptools or pkg_resources is not imported anywhere within the packages.\r\nI have updated the one docstring that was still using pkg_resources\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added (N/A)\r\n- [x] Documentation has been updated (N/A)\r\n",
    "head_branch": "remove_setuptools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove setuptools runtime dependency (#3372)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6044ee515ce6a4e307",
    "number": 3371,
    "body": "Fixes #3367",
    "head_branch": "issue_3367",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix getting started test (#3371)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6144ee515ce6a4e308",
    "number": 3369,
    "body": "Bumps [grpcio](https://github.com/grpc/grpc) from 1.35.0 to 1.53.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/grpc/grpc/releases\">grpcio's releases</a>.</em></p>\n<blockquote>\n<h2>Release v1.53.0</h2>\n<p>This is release 1.53.0 (<a href=\"https://github.com/grpc/grpc/blob/master/doc/g_stands_for.md\">glockenspiel</a>) of gRPC Core.</p>\n<p>For gRPC documentation, see <a href=\"https://grpc.io/\">grpc.io</a>. For previous releases, see <a href=\"https://github.com/grpc/grpc/releases\">Releases</a>.</p>\n<p>This release contains refinements, improvements, and bug fixes, with highlights listed below.</p>\n<h2>Core</h2>\n<ul>\n<li>xDS: fix crash when removing the last endpoint from the last locality in weighted_target. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32592\">#32592</a>)</li>\n<li>filter stack: pass peer name up via recv_initial_metadata batch. (<a href=\"https://redirect.github.com/grpc/grpc/pull/31933\">#31933</a>)</li>\n<li>[EventEngine] Add advice against blocking work in callbacks. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32397\">#32397</a>)</li>\n<li>[http2] Dont drop connections on metadata limit exceeded. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32309\">#32309</a>)</li>\n<li>xDS: reject aggregate cluster with empty cluster list. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32238\">#32238</a>)</li>\n<li>Fix Python epoll1 Fork Support. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32196\">#32196</a>)</li>\n<li>server: introduce ServerMetricRecorder API and move per-call reporting from a C++ interceptor to a C-core filter. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32106\">#32106</a>)</li>\n<li>[EventEngine] Add invalid handle types to the public API. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32202\">#32202</a>)</li>\n<li>[EventEngine] Refactoring the EventEngine Test Suite: Part 1. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32127\">#32127</a>)</li>\n<li>xDS: fix WeightedClusters total weight handling. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32134\">#32134</a>)</li>\n</ul>\n<h2>C++</h2>\n<ul>\n<li>Update minimum MSVC version to 2019. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32615\">#32615</a>)</li>\n<li>Use CMake variables for paths in pkg-config files. (<a href=\"https://redirect.github.com/grpc/grpc/pull/31671\">#31671</a>)</li>\n</ul>\n<h2>C#</h2>\n<ul>\n<li>Grpc.Tools: Use x86 protoc binaries on arm64 Windows. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32017\">#32017</a>)</li>\n</ul>\n<h2>Python</h2>\n<ul>\n<li>Support python 3.11 on aarch64. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32270\">#32270</a>)</li>\n<li>Include .pyi file. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32268\">#32268</a>)</li>\n<li>De-experimentalize wait-for-ready. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32143\">#32143</a>)</li>\n<li>De-experimentalize compression. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32138\">#32138</a>)</li>\n</ul>\n<h2>Ruby</h2>\n<ul>\n<li>[ruby]: add pre-compiled binaries for ruby 3.2; drop them for ruby 2.6. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32089\">#32089</a>)</li>\n</ul>\n<h2>Release v1.53.0-pre2</h2>\n<p>This is a prerelease of gRPC Core 1.53.0 (glockenspiel).</p>\n<p>For gRPC documentation, see <a href=\"https://grpc.io/\">grpc.io</a>. For previous releases, see <a href=\"https://github.com/grpc/grpc/releases\">Releases</a>.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/grpc/grpc/blob/master/doc/grpc_release_schedule.md\">grpcio's changelog</a>.</em></p>\n<blockquote>\n<h1>gRPC Release Schedule</h1>\n<p>Below is the release schedule for gRPC <a href=\"https://github.com/grpc/grpc-java/releases\">Java</a>, <a href=\"https://github.com/grpc/grpc-go/releases\">Go</a> and <a href=\"https://github.com/grpc/grpc/releases\">Core</a> and its  dependent languages C++, C#, Objective-C, PHP, Python and Ruby.</p>\n<p>Releases are scheduled every six weeks on Tuesdays on a best effort basis. In some unavoidable situations a release may be delayed or released early or a language may skip a release altogether and do the next release to catch up with other languages. See the past releases in the links above. A six-week cycle gives us a good balance between delivering new features/fixes quickly and keeping the release overhead low.</p>\n<p>The gRPC release support policy can be found <a href=\"https://grpc.io/docs/what-is-grpc/faq/#how-long-are-grpc-releases-supported-for\">here</a>.</p>\n<p>Releases are cut from release branches. For Core and Java repos, the release branch is cut two weeks before the scheduled release date. For Go, the branch is cut just before the release. An RC (release candidate) is published for Core and its dependent languages just after the branch cut. This RC is later promoted to release version if no further changes are made to the release branch. We do our best to keep head of master branch stable at all times regardless of release schedule. Daily build packages from master branch for C#, PHP, Python, Ruby and Protoc plugins are published on <a href=\"https://packages.grpc.io/\">packages.grpc.io</a>. If you depend on gRPC in production we recommend to set up your CI system to test the RCs and, if possible, the daily builds.</p>\n<p>Names of gRPC releases are <a href=\"https://github.com/grpc/grpc/blob/master/doc/g_stands_for.md\">here</a>.</p>\n<table>\n<thead>\n<tr>\n<th>Release</th>\n<th>Scheduled Branch Cut</th>\n<th>Scheduled Release Date</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v1.17.0</td>\n<td>Nov 19, 2018</td>\n<td>Dec 4, 2018</td>\n</tr>\n<tr>\n<td>v1.18.0</td>\n<td>Jan 2, 2019</td>\n<td>Jan 15, 2019</td>\n</tr>\n<tr>\n<td>v1.19.0</td>\n<td>Feb 12, 2019</td>\n<td>Feb 26, 2019</td>\n</tr>\n<tr>\n<td>v1.20.0</td>\n<td>Mar 26, 2019</td>\n<td>Apr 9, 2019</td>\n</tr>\n<tr>\n<td>v1.21.0</td>\n<td>May 7, 2019</td>\n<td>May 21, 2019</td>\n</tr>\n<tr>\n<td>v1.22.0</td>\n<td>Jun 18, 2019</td>\n<td>Jul 2, 2019</td>\n</tr>\n<tr>\n<td>v1.23.0</td>\n<td>Jul 30, 2019</td>\n<td>Aug 13, 2019</td>\n</tr>\n<tr>\n<td>v1.24.0</td>\n<td>Sept 10, 2019</td>\n<td>Sept 24, 2019</td>\n</tr>\n<tr>\n<td>v1.25.0</td>\n<td>Oct 22, 2019</td>\n<td>Nov 5, 2019</td>\n</tr>\n<tr>\n<td>v1.26.0</td>\n<td>Dec 3, 2019</td>\n<td>Dec 17, 2019</td>\n</tr>\n<tr>\n<td>v1.27.0</td>\n<td>Jan 14, 2020</td>\n<td>Jan 28, 2020</td>\n</tr>\n<tr>\n<td>v1.28.0</td>\n<td>Feb 25, 2020</td>\n<td>Mar 10, 2020</td>\n</tr>\n<tr>\n<td>v1.29.0</td>\n<td>Apr 7, 2020</td>\n<td>Apr 21, 2020</td>\n</tr>\n<tr>\n<td>v1.30.0</td>\n<td>May 19, 2020</td>\n<td>Jun 2, 2020</td>\n</tr>\n<tr>\n<td>v1.31.0</td>\n<td>Jul 14, 2020</td>\n<td>Jul 28, 2020</td>\n</tr>\n<tr>\n<td>v1.32.0</td>\n<td>Aug 25, 2020</td>\n<td>Sep 8, 2020</td>\n</tr>\n<tr>\n<td>v1.33.0</td>\n<td>Oct 6, 2020</td>\n<td>Oct 20, 2020</td>\n</tr>\n<tr>\n<td>v1.34.0</td>\n<td>Nov 17, 2020</td>\n<td>Dec 1, 2020</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/grpc/grpc/commit/358bfb581feeda5bf17dd3b96da1074d84a6ef8d\"><code>358bfb5</code></a> Bump version to 1.53.0 (<a href=\"https://redirect.github.com/grpc/grpc/issues/32685\">#32685</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/6e1ebe76d87a2e9b643c08b3e234d374edcd9e92\"><code>6e1ebe7</code></a> Backport: Ensure compatibility with the new custom kokoro win2019 image (<a href=\"https://redirect.github.com/grpc/grpc/issues/326\">#326</a>...</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/44a77f6e911b95e1bc2c909b348123b2da2c4375\"><code>44a77f6</code></a> Backport 1.53: Update minimum MSVC version to 2019 (<a href=\"https://redirect.github.com/grpc/grpc/issues/32615\">#32615</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/c11153cb4ef01ca5f83304b2e28edd0182b3c0d0\"><code>c11153c</code></a> backport to 1.53: xDS: fix crash when removing the last endpoint from the las...</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/7c7712a6b08ebf1bdc18fc43dc871b47b3dffe97\"><code>7c7712a</code></a> Bump version to 1.53.0-pre2. (<a href=\"https://redirect.github.com/grpc/grpc/issues/32545\">#32545</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/a4017dc45e342064722a36181ed14e6d7b469d29\"><code>a4017dc</code></a> backport to 1.53: [promises] Make Poll&lt;T&gt; its own type, not a variant&lt;&gt; (<a href=\"https://redirect.github.com/grpc/grpc/issues/32540\">#32540</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/3f93c1667280e6f11a1eb35cccfb8c81c698bee5\"><code>3f93c16</code></a> Fuzzer fix backport to v1.53 (<a href=\"https://redirect.github.com/grpc/grpc/issues/32511\">#32511</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/5b244b25c2b87a85781ceeecd34ce0f8e8e7e840\"><code>5b244b2</code></a> Bump release version to 1.53.0-pre1 (<a href=\"https://redirect.github.com/grpc/grpc/issues/32428\">#32428</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/6589340efc39b87c94897d221eaf949213cdac87\"><code>6589340</code></a> Bump core version 202302161703 (<a href=\"https://redirect.github.com/grpc/grpc/issues/32416\">#32416</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/d49e1513063e6624e08eb6f59049596178a28783\"><code>d49e151</code></a> [backoff] Add random early detection classifier (<a href=\"https://redirect.github.com/grpc/grpc/issues/32354\">#32354</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/grpc/grpc/compare/v1.35.0...v1.53.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=grpcio&package-manager=pip&previous-version=1.35.0&new-version=1.53.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/grpcio-1.53.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump grpcio from 1.35.0 to 1.53.0 in /docs/examples/fork-process-model/flask-gunicorn (#3369)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6244ee515ce6a4e309",
    "number": 3368,
    "body": "Bumps [grpcio](https://github.com/grpc/grpc) from 1.35.0 to 1.53.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/grpc/grpc/releases\">grpcio's releases</a>.</em></p>\n<blockquote>\n<h2>Release v1.53.0</h2>\n<p>This is release 1.53.0 (<a href=\"https://github.com/grpc/grpc/blob/master/doc/g_stands_for.md\">glockenspiel</a>) of gRPC Core.</p>\n<p>For gRPC documentation, see <a href=\"https://grpc.io/\">grpc.io</a>. For previous releases, see <a href=\"https://github.com/grpc/grpc/releases\">Releases</a>.</p>\n<p>This release contains refinements, improvements, and bug fixes, with highlights listed below.</p>\n<h2>Core</h2>\n<ul>\n<li>xDS: fix crash when removing the last endpoint from the last locality in weighted_target. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32592\">#32592</a>)</li>\n<li>filter stack: pass peer name up via recv_initial_metadata batch. (<a href=\"https://redirect.github.com/grpc/grpc/pull/31933\">#31933</a>)</li>\n<li>[EventEngine] Add advice against blocking work in callbacks. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32397\">#32397</a>)</li>\n<li>[http2] Dont drop connections on metadata limit exceeded. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32309\">#32309</a>)</li>\n<li>xDS: reject aggregate cluster with empty cluster list. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32238\">#32238</a>)</li>\n<li>Fix Python epoll1 Fork Support. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32196\">#32196</a>)</li>\n<li>server: introduce ServerMetricRecorder API and move per-call reporting from a C++ interceptor to a C-core filter. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32106\">#32106</a>)</li>\n<li>[EventEngine] Add invalid handle types to the public API. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32202\">#32202</a>)</li>\n<li>[EventEngine] Refactoring the EventEngine Test Suite: Part 1. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32127\">#32127</a>)</li>\n<li>xDS: fix WeightedClusters total weight handling. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32134\">#32134</a>)</li>\n</ul>\n<h2>C++</h2>\n<ul>\n<li>Update minimum MSVC version to 2019. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32615\">#32615</a>)</li>\n<li>Use CMake variables for paths in pkg-config files. (<a href=\"https://redirect.github.com/grpc/grpc/pull/31671\">#31671</a>)</li>\n</ul>\n<h2>C#</h2>\n<ul>\n<li>Grpc.Tools: Use x86 protoc binaries on arm64 Windows. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32017\">#32017</a>)</li>\n</ul>\n<h2>Python</h2>\n<ul>\n<li>Support python 3.11 on aarch64. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32270\">#32270</a>)</li>\n<li>Include .pyi file. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32268\">#32268</a>)</li>\n<li>De-experimentalize wait-for-ready. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32143\">#32143</a>)</li>\n<li>De-experimentalize compression. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32138\">#32138</a>)</li>\n</ul>\n<h2>Ruby</h2>\n<ul>\n<li>[ruby]: add pre-compiled binaries for ruby 3.2; drop them for ruby 2.6. (<a href=\"https://redirect.github.com/grpc/grpc/pull/32089\">#32089</a>)</li>\n</ul>\n<h2>Release v1.53.0-pre2</h2>\n<p>This is a prerelease of gRPC Core 1.53.0 (glockenspiel).</p>\n<p>For gRPC documentation, see <a href=\"https://grpc.io/\">grpc.io</a>. For previous releases, see <a href=\"https://github.com/grpc/grpc/releases\">Releases</a>.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/grpc/grpc/blob/master/doc/grpc_release_schedule.md\">grpcio's changelog</a>.</em></p>\n<blockquote>\n<h1>gRPC Release Schedule</h1>\n<p>Below is the release schedule for gRPC <a href=\"https://github.com/grpc/grpc-java/releases\">Java</a>, <a href=\"https://github.com/grpc/grpc-go/releases\">Go</a> and <a href=\"https://github.com/grpc/grpc/releases\">Core</a> and its  dependent languages C++, C#, Objective-C, PHP, Python and Ruby.</p>\n<p>Releases are scheduled every six weeks on Tuesdays on a best effort basis. In some unavoidable situations a release may be delayed or released early or a language may skip a release altogether and do the next release to catch up with other languages. See the past releases in the links above. A six-week cycle gives us a good balance between delivering new features/fixes quickly and keeping the release overhead low.</p>\n<p>The gRPC release support policy can be found <a href=\"https://grpc.io/docs/what-is-grpc/faq/#how-long-are-grpc-releases-supported-for\">here</a>.</p>\n<p>Releases are cut from release branches. For Core and Java repos, the release branch is cut two weeks before the scheduled release date. For Go, the branch is cut just before the release. An RC (release candidate) is published for Core and its dependent languages just after the branch cut. This RC is later promoted to release version if no further changes are made to the release branch. We do our best to keep head of master branch stable at all times regardless of release schedule. Daily build packages from master branch for C#, PHP, Python, Ruby and Protoc plugins are published on <a href=\"https://packages.grpc.io/\">packages.grpc.io</a>. If you depend on gRPC in production we recommend to set up your CI system to test the RCs and, if possible, the daily builds.</p>\n<p>Names of gRPC releases are <a href=\"https://github.com/grpc/grpc/blob/master/doc/g_stands_for.md\">here</a>.</p>\n<table>\n<thead>\n<tr>\n<th>Release</th>\n<th>Scheduled Branch Cut</th>\n<th>Scheduled Release Date</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v1.17.0</td>\n<td>Nov 19, 2018</td>\n<td>Dec 4, 2018</td>\n</tr>\n<tr>\n<td>v1.18.0</td>\n<td>Jan 2, 2019</td>\n<td>Jan 15, 2019</td>\n</tr>\n<tr>\n<td>v1.19.0</td>\n<td>Feb 12, 2019</td>\n<td>Feb 26, 2019</td>\n</tr>\n<tr>\n<td>v1.20.0</td>\n<td>Mar 26, 2019</td>\n<td>Apr 9, 2019</td>\n</tr>\n<tr>\n<td>v1.21.0</td>\n<td>May 7, 2019</td>\n<td>May 21, 2019</td>\n</tr>\n<tr>\n<td>v1.22.0</td>\n<td>Jun 18, 2019</td>\n<td>Jul 2, 2019</td>\n</tr>\n<tr>\n<td>v1.23.0</td>\n<td>Jul 30, 2019</td>\n<td>Aug 13, 2019</td>\n</tr>\n<tr>\n<td>v1.24.0</td>\n<td>Sept 10, 2019</td>\n<td>Sept 24, 2019</td>\n</tr>\n<tr>\n<td>v1.25.0</td>\n<td>Oct 22, 2019</td>\n<td>Nov 5, 2019</td>\n</tr>\n<tr>\n<td>v1.26.0</td>\n<td>Dec 3, 2019</td>\n<td>Dec 17, 2019</td>\n</tr>\n<tr>\n<td>v1.27.0</td>\n<td>Jan 14, 2020</td>\n<td>Jan 28, 2020</td>\n</tr>\n<tr>\n<td>v1.28.0</td>\n<td>Feb 25, 2020</td>\n<td>Mar 10, 2020</td>\n</tr>\n<tr>\n<td>v1.29.0</td>\n<td>Apr 7, 2020</td>\n<td>Apr 21, 2020</td>\n</tr>\n<tr>\n<td>v1.30.0</td>\n<td>May 19, 2020</td>\n<td>Jun 2, 2020</td>\n</tr>\n<tr>\n<td>v1.31.0</td>\n<td>Jul 14, 2020</td>\n<td>Jul 28, 2020</td>\n</tr>\n<tr>\n<td>v1.32.0</td>\n<td>Aug 25, 2020</td>\n<td>Sep 8, 2020</td>\n</tr>\n<tr>\n<td>v1.33.0</td>\n<td>Oct 6, 2020</td>\n<td>Oct 20, 2020</td>\n</tr>\n<tr>\n<td>v1.34.0</td>\n<td>Nov 17, 2020</td>\n<td>Dec 1, 2020</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/grpc/grpc/commit/358bfb581feeda5bf17dd3b96da1074d84a6ef8d\"><code>358bfb5</code></a> Bump version to 1.53.0 (<a href=\"https://redirect.github.com/grpc/grpc/issues/32685\">#32685</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/6e1ebe76d87a2e9b643c08b3e234d374edcd9e92\"><code>6e1ebe7</code></a> Backport: Ensure compatibility with the new custom kokoro win2019 image (<a href=\"https://redirect.github.com/grpc/grpc/issues/326\">#326</a>...</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/44a77f6e911b95e1bc2c909b348123b2da2c4375\"><code>44a77f6</code></a> Backport 1.53: Update minimum MSVC version to 2019 (<a href=\"https://redirect.github.com/grpc/grpc/issues/32615\">#32615</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/c11153cb4ef01ca5f83304b2e28edd0182b3c0d0\"><code>c11153c</code></a> backport to 1.53: xDS: fix crash when removing the last endpoint from the las...</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/7c7712a6b08ebf1bdc18fc43dc871b47b3dffe97\"><code>7c7712a</code></a> Bump version to 1.53.0-pre2. (<a href=\"https://redirect.github.com/grpc/grpc/issues/32545\">#32545</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/a4017dc45e342064722a36181ed14e6d7b469d29\"><code>a4017dc</code></a> backport to 1.53: [promises] Make Poll&lt;T&gt; its own type, not a variant&lt;&gt; (<a href=\"https://redirect.github.com/grpc/grpc/issues/32540\">#32540</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/3f93c1667280e6f11a1eb35cccfb8c81c698bee5\"><code>3f93c16</code></a> Fuzzer fix backport to v1.53 (<a href=\"https://redirect.github.com/grpc/grpc/issues/32511\">#32511</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/5b244b25c2b87a85781ceeecd34ce0f8e8e7e840\"><code>5b244b2</code></a> Bump release version to 1.53.0-pre1 (<a href=\"https://redirect.github.com/grpc/grpc/issues/32428\">#32428</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/6589340efc39b87c94897d221eaf949213cdac87\"><code>6589340</code></a> Bump core version 202302161703 (<a href=\"https://redirect.github.com/grpc/grpc/issues/32416\">#32416</a>)</li>\n<li><a href=\"https://github.com/grpc/grpc/commit/d49e1513063e6624e08eb6f59049596178a28783\"><code>d49e151</code></a> [backoff] Add random early detection classifier (<a href=\"https://redirect.github.com/grpc/grpc/issues/32354\">#32354</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/grpc/grpc/compare/v1.35.0...v1.53.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=grpcio&package-manager=pip&previous-version=1.35.0&new-version=1.53.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/grpcio-1.53.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump grpcio from 1.35.0 to 1.53.0 in /docs/examples/fork-process-model/flask-uwsgi (#3368)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6244ee515ce6a4e30a",
    "number": 3365,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nIntroduce `to_dict` to the objects included in the existing\r\nJSON serialization process for `ReadableSpan`, `MetricsData`,\r\n`LogRecord`, and `Resource` objects. This includes adding\r\n`to_dict` to objects that are included within the serialized\r\ndata structures of these objects. In places where `repr()`\r\nserialization was used, it has been replaced by a\r\nJSON-compatible serialization instead. Inconsistencies between\r\nnull and empty string values were preserved, but in cases\r\nwhere attributes are optional, an empty dictionary is provided\r\nas well to be more consistent with cases where attributes are\r\nnot optional and an empty dictionary represents no attributes\r\nwere specified on the containing object.\r\n\r\nThese changes also included:\r\n1. Dictionary typing was included for all the `to_dict`\r\n   methods for clarity in subsequent usage.\r\n2. `DataT` and `DataPointT` were did not include the\r\n   exponential histogram types in point.py, and so those\r\n   were added with new `to_json` and `to_dict` methods as\r\n   well for consistency. It appears that the exponential\r\n   types were added later and including them in the types\r\n   might have been overlooked. Please let me know if that\r\n   is a misunderstanding on my part.\r\n3. OrderedDict was removed in a number of places\r\n   associated with the existing `to_json` functionality\r\n   given its redundancy for Python 3.7+ compatibility.\r\n   I was assuming this was legacy code for previous\r\n   compatibility, but please let me know if that's not\r\n   the case as well.\r\n4. `to_dict` was added to objects like `SpanContext`,\r\n   `Link`, and `Event` that were previously being\r\n   serialized by static methods within the `ReadableSpan`\r\n   class and accessing private/protected members.\r\n   This simplified the serialization in the `ReadableSpan`\r\n   class and those methods were removed. However, once\r\n   again, let me know if there was a larger purpose to\r\n   those I could not find.\r\n\r\nFinally, I used `to_dict` as the method names here to be\r\nconsistent with other related usages. For example,\r\n`dataclasses.asdict()`. But, mostly because that was by\r\nfar the most popular usage within the larger community:\r\n\r\n328k files found on GitHub that define `to_dict` functions,\r\nwhich include some of the most popular Python libraries\r\nto date:\r\nhttps://github.com/search?q=%22def+to_dict%28%22+language%3APython&type=code&p=1&l=Python\r\n\r\nversus\r\n\r\n3.3k files found on GitHub that define `to_dictionary`\r\nfunctions:\r\nhttps://github.com/search?q=%22def+to_dictionary%28%22+language%3APython&type=code&l=Python\r\n\r\nHowever, if there is a preference for this library to use\r\n`to_dictionary` instead let me know and I will adjust.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Passes tox testing as outlined in CONTRIBUTING.md\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "improve-to-json-support",
    "is_a_fork": true,
    "comments": [
      "@sernst \r\nAre you still working on this?",
      "@lzchen Yep, will re-engage here soon.",
      "Hi all, thank you for your contributions up to this point -- I think this is a positive PR. Can we work on getting it across the line? I'm happy to help too.\r\n\r\nIMO these `to_dict` implementations are helpful:\r\ne.g. https://github.com/open-telemetry/opentelemetry-python/pull/3780/files#r1524771566",
      "I'm happy to pick it back up if others think it is useful. It didn't seem like there was much excitement for it, and I wasn't really excited to back support for 3.7 given that version was EoL by the Python community in general already. But I believe that the extended lifetime support for this project beyond the Python community's accepted EoL lifetime is now passed as well, which would simplify the process. Some decisions need to be made on the exact implementation though, and I'm not sure what comments made here are opinion versus decision. If some of that can be cleared up, I'd be happy to give it a refresh assuming that the code hasn't drifted too much to make it a redo.",
      "> I'm happy to pick it back up if others think it is useful. It didn't seem like there was much excitement for it, and I wasn't really excited to back support for 3.7 given that version was EoL by the Python community in general already. But I believe that the extended lifetime support for this project beyond the Python community's accepted EoL lifetime is now passed as well, which would simplify the process. Some decisions need to be made on the exact implementation though, and I'm not sure what comments made here are opinion versus decision. If some of that can be cleared up, I'd be happy to give it a refresh assuming that the code hasn't drifted too much to make it a redo.\r\n\r\nAwesome -- I think this repo would benefit from these changes.\r\n\r\nAnd yes, since 3.7 is [no longer supported](https://github.com/open-telemetry/opentelemetry-python/pull/3668) that conversation probably can be resolved now. (I have resolved my comments above as well.)\r\n\r\nLooks like we need to agree upon whether we use `to_dict` vs `__iter__`? `to_dict` seems a bit more straightforward and complementary to the existing `to_json` methods but I'd like to hear your thoughts @ocelotl.",
      "> > I'm happy to pick it back up if others think it is useful. It didn't seem like there was much excitement for it, and I wasn't really excited to back support for 3.7 given that version was EoL by the Python community in general already. But I believe that the extended lifetime support for this project beyond the Python community's accepted EoL lifetime is now passed as well, which would simplify the process. Some decisions need to be made on the exact implementation though, and I'm not sure what comments made here are opinion versus decision. If some of that can be cleared up, I'd be happy to give it a refresh assuming that the code hasn't drifted too much to make it a redo.\r\n> \r\n> Awesome -- I think this repo would benefit from these changes.\r\n> \r\n> And yes, since 3.7 is [no longer supported](https://github.com/open-telemetry/opentelemetry-python/pull/3668) that conversation probably can be resolved now. (I have resolved my comments above as well.)\r\n> \r\n> Looks like we need to agree upon whether we use `to_dict` vs `__iter__`? `to_dict` seems a bit more straightforward and complementary to the existing `to_json` methods but I'd like to hear your thoughts @ocelotl.\r\n\r\nWe should not add a method named `to_dict`. Every other object that can be converted to a dictionary gets converted to a dictionary by using `dict()`, this should not be the exception.\r\n\r\nBTW, I was working on a PR that would add `__repr__` to all classes: #3662. Had to put it in standby for the time being but I think there is a pattern in the way #3662 represents objects as strings that could be used here too.",
      "Sounds fine to me."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6344ee515ce6a4e30b",
    "number": 3362,
    "body": "# Description\r\n\r\nWe are getting many transient error warnings in production\r\n\r\n```\r\nTransient error <StatusCode.UNAVAILABLE: (14, 'unavailable')> encountered while exporting metrics, retrying in 1s.\r\n```\r\n\r\nbut unfortunately they don't have enough information to debug the issue, as we have two exporters, one exporting to our internal metric system and another one exporting to Uptrace.\r\n\r\nIn this PR we add the endpoint to the warning and error messages. That would allow us to better debug the issue and rule out faulty parts in our systems.\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe changes logic was already tested, in this PR we adjust those tests to include the new information.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feat/include_endpoint_grpc_warningwq",
    "is_a_fork": true,
    "comments": [
      "@aabmass who should I ask for a review on behalf of the python approvers?"
    ],
    "commit_messages": [
      "feat: include endpoint in grpc logs (#3362)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6444ee515ce6a4e30c",
    "number": 3360,
    "body": "Fixes #3359\r\n\r\nNot perfect (it's hard to be), but cleans up most of the SDK testing output. This way it should be easier to detect an unexpected warning in our tests.",
    "head_branch": "issue_3359",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup console for SDK tests (#3360)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6544ee515ce6a4e30d",
    "number": 3358,
    "body": null,
    "head_branch": "Update-approvers-list",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update approvers list (#3358)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6644ee515ce6a4e30e",
    "number": 3357,
    "body": "Fixes #3342",
    "head_branch": "issue_3342",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove log messages from console (#3357)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6744ee515ce6a4e30f",
    "number": 3356,
    "body": "This tries to clarify the behavior that should happen when there is an exception raised in a child span which has been started with record_exception and set_status_on_exception to False.\r\n\r\nSee #3252.",
    "head_branch": "discussion_3252",
    "is_a_fork": true,
    "comments": [
      "For the time being, this PR does not change anything in the SDK, it only adds a test case that verifies the current behavior.\r\n\r\nThis is what I coud find in the [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/exceptions.md#recording-an-exception):\r\n\r\n> An exception SHOULD be recorded as an Event **on the span during which it occurred**. The name of the event MUST be \"exception\".\r\n\r\n(Emphasis is mine)\r\n\r\nI'll bring this to the next SIG for discussion."
    ],
    "commit_messages": [
      "Add test case for child-parent exception handling (#3356)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6744ee515ce6a4e310",
    "number": 3355,
    "body": "Fixes #3337 ",
    "head_branch": "proto-0.20",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade opentelemetry-proto to 0.20 and regen (#3355)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6844ee515ce6a4e311",
    "number": 3354,
    "body": "This makes it possible to call on the exception returned by [sys.exc_info], which is a BaseException.\r\n\r\nFor ecosystem prior art, the [equivalent in Java] accepts a Throwable rather than Exception.\r\n\r\n[sys.exc_info]: https://docs.python.org/3/library/sys.html#sys.exc_info\r\n[equivalent in Java]: https://github.com/open-telemetry/opentelemetry-java/blob/7b8608591e1737ea0727d2373ddd813bc18cdaaa/api/all/src/main/java/io/opentelemetry/api/trace/Span.java#L344-L351\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2652\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "record-base-exception",
    "is_a_fork": true,
    "comments": [
      "@kamalmarhubi \r\n\r\nCould you rebase and include a test?",
      "@lzchen this is only making a change in typing. `BaseException` is the parent class of `Exception` so this is not breaking, I am ok with merging it as it is.",
      "Oops missed this! Will rebase soon"
    ],
    "commit_messages": [
      "record_exception: Accept BaseException (#3354)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6944ee515ce6a4e312",
    "number": 3351,
    "body": "# Description\r\n\r\nThis pull adds dropped_attributes_count in exporters to complete the changes made in LogRecord.\r\n\r\nFixes #3201\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new tests for this change\r\n- [x] Existing tests are passing\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "ns-3201-dropped-attributes-count-in-exporters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add dropped_attributes_count support in exporters (#3351)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6a44ee515ce6a4e313",
    "number": 3348,
    "body": "Fixes #3347",
    "head_branch": "issue_3347",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update contrib SHA (#3348)\n\nFixes #3347"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6b44ee515ce6a4e314",
    "number": 3346,
    "body": "# Description\r\n\r\nCurrently, the `LogRecord.to_json` method serializes the resource object using `repr` of its attributes. This differs from how the serialization process is handled in `ReadableSpan.to_json` and `MetricsData.to_json`, which utilize the\r\n`Resource.to_json` functionality directly. Using `repr` does not produce a json-parseable output and doesn't follow the same depth of serialization as the other two signal types. Therefore, this change carries over the serialization process from the spans and metrics signal types to the logs type.\r\n\r\nFixes #3345\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ X ] Bug fix (non-breaking change which fixes an issue)\r\n- [ X ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan tox as specified in CONTRIBUTING.md and tested within a simple test application using the `ConsoleLogExporter` to see the changes echoed in the terminal.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ X ] No.\r\n\r\n# Checklist:\r\n\r\n- [ X ] Followed the style guidelines of this project\r\n- [ X ] Changelogs have been updated\r\n- [ X ] Unit tests have been added - **modified in this case**\r\n- [ X ] Documentation has been updated - **Not Needed**\r\n",
    "head_branch": "fix-log-redord-json-resource-export",
    "is_a_fork": true,
    "comments": [
      "This added a lot of public symbols and changes that are not related to the original issue in the last commit. Please keep the changes limited to the linked issue. I wouldn't add all the `to_dict` public API classes or any new symbols. Create separate issues and discuss them with maintainers/approvers because we try to keep the public API small.",
      "@sernst there are [failing](https://github.com/open-telemetry/opentelemetry-python/actions/runs/5436894333/jobs/9998208059?pr=3346#step:7:744) tests. Should the expected output include 0 dropped attributes?",
      "@sernst \r\n\r\nbump. Are you still working on this?",
      "@lzchen Yep, will re-engage here soon.",
      "This PR needs fixes, marking it as draft.",
      "Closing since https://github.com/open-telemetry/opentelemetry-python/pull/3972 did the roughly the same change"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6c44ee515ce6a4e315",
    "number": 3343,
    "body": "# Description\r\n\r\nAccording to the definition of the Body field type in the OTel 1.22.0 [Logs Data Model](https://opentelemetry.io/docs/specs/otel/logs/data-model/#field-body) article, the Body field should be of type 'any' and should not use the str method to directly translate the msg. This is because str only converts non-text types into a human-readable form, rather than a standard format, which leads to the need for additional operations when collected through a log collector.\r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: GanymedeNil / name: GanymedeNil  (a49fed8a2ea074b4e4c5f64697a19c8b2b4e4e0b, b4f44a2c4362495af0ca5c581dac456d6426cd6a, 4595953fc6c956a0d62d75e3d435958c8c4d565b, eef7ea1ee2a2466619ddd86ac3c953423e397834, f72d854e7285d6801b03baa722cfae34e9655a2d)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (f2962395c8f64c2a6193af134e966e92ecfdf63b, 03ef5dc7056bb5e06b0c241588a11d6d8c427aa9)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (a9272e6e39a4e568c587337d53af6819b7e9fd46)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (c09192cef20a2cc6692919cd6bc1f7762a9ccd53, c5ec6b9878e61684f2ad86122a2f4b01479a91f6, 58d5d8e3a952893637191f9799ea452ccb8d0f53)</li></ul>",
      "Can you please add a test to be clear about which cases you want to correct ",
      "> Can you please add a test to be clear about which cases you want to correct\r\n\r\nAll right, I will include test cases."
    ],
    "commit_messages": [
      "Update the body type in the log (#3343)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6c44ee515ce6a4e316",
    "number": 3341,
    "body": "# Description\r\n\r\nAdd unit to view instrument selection criteria\r\n\r\nFixes #3263 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-unit-to-view-instrument",
    "is_a_fork": true,
    "comments": [
      "I will update the [spec-compliance-matrix.md](https://github.com/open-telemetry/opentelemetry-specification/blob/main/spec-compliance-matrix.md) after the merge"
    ],
    "commit_messages": [
      "Add unit to view instrument selection criteria (#3341)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6d44ee515ce6a4e317",
    "number": 3340,
    "body": "# Description\r\n1. Fixing \r\n```\r\nTraceback (most recent call last):\r\n  File \"workspace/opentelemetry-python/docs/examples/logs/example.py\", line 4, in <module>\r\n    from opentelemetry._logs import set_logger_provider\r\nModuleNotFoundError: No module named 'opentelemetry._logs'\r\n```\r\n2. Adding `logging.warning()` and `logging.error()` for completeness\r\n\r\nFixes # (issue)\r\n`ModuleNotFoundError`\r\n\r\n## Type of change\r\n- [*] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\nBy running the fixed code\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [* ] No.\r\n\r\n# Checklist:\r\n- [*] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "log-example-fix",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ashok-an / name: Ashok Nagaraj  (10ff983058dfa81f729db5c2e6fc0868a72ddf65)</li></ul>",
      "You are probably using the old version. Please update the SDK version, and the example should work fine.\r\n\r\nSee https://github.com/open-telemetry/opentelemetry-python/blob/92bfd083a576289c7ef2b9e5e49e50243e845bc8/opentelemetry-api/src/opentelemetry/_logs/__init__.py#L57 and https://github.com/open-telemetry/opentelemetry-python/pull/3113",
      "So it is not is `/main` yet? Do you suggest I close the PR as fixed/not-required?",
      ">So it is not is /main yet?\r\n\r\nI didn't understand it. It has been quite some time since `set_logger_provider` moved to api (`opentelemetry`) package.  \r\n\r\n>Do you suggest I close the PR as fixed/not-required?\r\n\r\nYes, this change is invalid. The example works with any version >= 1.15"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6e44ee515ce6a4e318",
    "number": 3335,
    "body": "Fixes #3198",
    "head_branch": "issue_3198",
    "is_a_fork": true,
    "comments": [
      "> I think we should discuss the issue more in the SIG.\r\n> \r\n> This PR would be a breaking change of the API. If we wanted to go this route, I'd recommend changing here to not call `self._receive_metrics` if they are empty instead of making it `Optional`:\r\n> \r\n> https://github.com/open-telemetry/opentelemetry-python/blob/9d3d0f88445eefe040b6854964a99b4e66b88e89/opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/export/__init__.py#L325-L328\r\n\r\nRight, fixed.",
      "I am investigating #3277, marking this as a draft meanwhile"
    ],
    "commit_messages": [
      "Fix handling of empty metric collection cycles (#3335)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c6f44ee515ce6a4e319",
    "number": 3334,
    "body": "Fixes #3333",
    "head_branch": "issue_3333",
    "is_a_fork": true,
    "comments": [
      "When will the version with this fix be released?",
      "@ocelotl Please release a new version with this fix."
    ],
    "commit_messages": [
      "Relax versioning of importlib-metadata (#3334)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7044ee515ce6a4e31a",
    "number": 3332,
    "body": "# Description\r\n\r\nAvoids issues with typing where `mypy` complains because `Context` is not re-exported when using the following import:\r\n\r\n```python\r\nfrom opentelemetry.context import Context\r\n```\r\n\r\nIt's possible to work around this with the following, but it seems as though this is not intended:\r\n\r\n```python\r\nfrom opentelemetry.context.context import Context\r\n```\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv This should also be straightforward - it was one of the typing-related issues I encountered along with the changes in #3285.",
      ">It's possible to work around this with the following, but it seems as though this is not intended:\r\n\r\nThere is already `__all__ = [\"Context\"]` in `opentelemetry.context.context` for this. I think that is intended.",
      "@srikanthccv this seems to be pretty [widely used in the wild](https://github.com/search?q=%22from+opentelemetry.context+import+Context%22&type=code), I'm on board with this PR.",
      "Thanks @aabmass. I've updated this to (re-)export all public symbols as requested.\r\n\r\nThe only one I left out was `opentelemetry.environment_variables.OTEL_PYTHON_CONTEXT` which didn't seem as though it ought to be re-exported and there doesn't seem to be a precedent for that elsewhere.",
      "I am fine with this. These transitive imports scare me because you never know how people are using them, and it was an overlooked aspect from our side. Not until metrics SDK we started using private internals and `__all__` with specific symbols, so we need to be very cautious about refactoring anything with tracing components. "
    ],
    "commit_messages": [
      "Re-export public symbols in `opentelemetry.context` (#3332)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7144ee515ce6a4e31b",
    "number": 3331,
    "body": "# Description\r\n\r\nThere is no risk of locking issues during a constructor call. It is also not desirable to lock-unlock-... for each provided attribute to the constructor.\r\n\r\nThis commit seeks to improve on these by refactoring `__setitem__` such that the 'body' inside the lock context manager is moved to a separate method `_unsafe__setitem`. This method can then be called by internal methods without taking the lock first.\r\n\r\nAnother method `update` (overridden from `MutableMapping`) is added that takes the lock *once* and then calls another new method `_unsafe_update`, which in turn simply iterates the attribute items and calls `_unsafe__setitem` on them.\r\n\r\n(I haven't created a corresponding issue, please tell me if this is required)\r\n\r\n## Motivation\r\n\r\nWe use opentelemetry-python at work, and this constructor is showing up quite a bit in our cpu profiles when using py-spy.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI have simply run `tox` locally 😬 🙈 \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project (I *think* so)\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "faster-boundedattributes-ctor",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: torarvid / name: Tor Arvid Lund  (eaaa9651e5bf1d34d16686b00f494b181171fd8b, efa046ef4fd3ea644d95e6a182c0f8b6c43c382c)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (021787eeecaa92783a3235cd6b279c38752d6e18)</li><li>:white_check_mark: login: pmcollins / name: Pablo Collins  (4a927e18a172db0b1b40efc97ae28b80dcae3b72)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (6128e00247e640aaf6e64e7fc72f59907b57422d)</li></ul>",
      "These changes seem fine to me. I'm still ramping up on this repo so hopefully others will correct me if I'm overstepping, but what do you think about adding test coverage for correctness?",
      "Thanks for the PR!\r\n\r\n> We use opentelemetry-python at work, and this constructor is showing up quite a bit in our cpu profiles when using py-spy.\r\n\r\nI would expect this to be a hot function if you're sampling a lot because it is called every span creation ([code](https://github.com/open-telemetry/opentelemetry-python/blob/6b9f389940ec0123d5dafc7cb400fc23c6f691c6/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py#L776)), but it's not clear how much the PR actual improves performance.\r\n\r\nI am also on board with something like this, but it would be nice to see at least some `timeit` results on improvement here. We could also add benchmark tests similar to [these](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/tests/performance/benchmarks/trace/test_benchmark_trace.py).\r\n\r\nDid you see specifically that the locking was taking the most time in the profile?",
      "> These changes seem fine to me. I'm still ramping up on this repo so hopefully others will correct me if I'm overstepping, but what do you think about adding test coverage for correctness?\r\n\r\nRight, we need at least unit tests for these changes.",
      "Hi @torarvid, thank you for your help. Do you have availability to continue with this PR?",
      "> Hi @torarvid, thank you for your help. Do you have availability to continue with this PR?\n\nHi, @pmcollins 👋 Sorry for the huge delay here. I'm currently on paternity leave (and have been for a few months), so very little time for coding at the moment.\n\nI have seen the request for some timeit results, and I believe it's possible I have jumped the gun with this PR... 🤦‍♂️ I realize now that I *of course* should have tested the performance of this before claiming the locking was the issue — but I didn't do that before creating the patch. So it's entirely possible that I'm not really improving things here.\n\nIf there is anyone who wants to take this over, anyone should feel free to do that. Otherwise, I'm still interested in improving things and will be back at work start of January.",
      "Thanks torarvid. We're happy to take it from here.\r\n\r\nBased on some simple testing, this change appears to yield a small (~2%) performance improvement in constructor execution time.\r\n\r\nWill discuss with the SIG how proceed with this and other pending PRs as well. Thanks!\r\n\r\n```\r\ndef test_bounded_attributes_performance(benchmark):\r\n    def bounded_attributes_constructor_performance():\r\n        BoundedAttributes(attributes={})\r\n\r\n    benchmark(bounded_attributes_constructor_performance)\r\n```\r\n\r\nBefore:\r\n```\r\n--------------------------------------------------------------- benchmark: 1 tests ---------------------------------------------------------------\r\nName (time in ns)                            Min          Max      Mean      StdDev    Median      IQR  Outliers  OPS (Mops/s)  Rounds  Iterations\r\n--------------------------------------------------------------------------------------------------------------------------------------------------\r\ntest_bounded_attributes_performance     614.6729  57,482.1606  738.1026  1,209.0810  659.8420  35.8559  431;2713        1.3548  108426           1\r\n--------------------------------------------------------------------------------------------------------------------------------------------------\r\n```\r\n\r\nAfter:\r\n```\r\n--------------------------------------------------------------- benchmark: 1 tests ---------------------------------------------------------------\r\nName (time in ns)                            Min          Max      Mean      StdDev    Median      IQR  Outliers  OPS (Mops/s)  Rounds  Iterations\r\n--------------------------------------------------------------------------------------------------------------------------------------------------\r\ntest_bounded_attributes_performance     611.8789  71,141.8688  721.6176  1,209.3374  652.3915  25.6114  313;2468        1.3858   89895           1\r\n--------------------------------------------------------------------------------------------------------------------------------------------------\r\n```",
      "My thought after looking at this PR again is that the 2% performance improvement in the constructor may not be worth the added complexity at this point (it really depends on how often this constructor runs :). If we do want to pursue this, I think a simpler implementation would be to temporarily use a no-op lock during constructor execution.",
      "Shall we close this ticket?",
      "I think we can close this PR and reopen when it has test cases.",
      "Discussed in the SIG, agreed to close this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7144ee515ce6a4e31c",
    "number": 3324,
    "body": "# Description\r\n\r\nLoosen the upper bound on the `googleapis-common-protos` requirement to avoid unnecessary dependency conflicts with other libraries (e.g. more recent versions of `google-api-core`).\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [ x ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAutomated tests",
    "head_branch": "loosen-googleapis-common-protos",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: BrendanGraham14 / name: Brendan Graham  (e5293ef94fb7530c37cfd2436a6a566f5a3c491d)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (4192c2eca0134ce80834a974e8b39a405003ff42)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7244ee515ce6a4e31d",
    "number": 3323,
    "body": "Fixes #3130",
    "head_branch": "issue_3130",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add max_scale option (#3323)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7344ee515ce6a4e31e",
    "number": 3319,
    "body": "# Description\r\n\r\nLatest (3.12-equivalent) importlib-metadata is 6.6.X, opentelemetry versioning is unnecessarily narrow (6.0.X series only)\r\n\r\nFixes open-telemetry#3314\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Core Repo tests are passing\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "tkern/update-importlib-metadata",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Arnatious / name: Ted Kern  (fd43d04fa07efbcb1497482ccbaa207b10afd910)</li></ul>",
      "Looks good to me. Needs a changelog update.",
      "Updated changelog. Wasn't sure if needed since I didn't see other dependency bumps in it.",
      "Sorry @Arnatious, I missed this PR when I submitted #3334 :disappointed: ",
      "When will the version with this fix be released?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7444ee515ce6a4e31f",
    "number": 3318,
    "body": "# Description\r\n\r\nAdd timeout for HttpTestBase so the test won't wait forever or until the manual cancelation.\r\nLike it was here: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1806",
    "head_branch": "Add-timeout-for-HttpTestBase",
    "is_a_fork": true,
    "comments": [
      "Could we make this timeout set in the dependent tests instead? ",
      "> Could we make this timeout set in the dependent tests instead?\r\n\r\nSure but I think it will be better to set it once and all the tests that use httpTestBase just get it.\r\nInstead of setting this for each test and avoiding situations the test did not set timeout. \r\n3 seconds is long enough for a single request, I don't see a reason to wait any longer than that",
      "That is a fair point"
    ],
    "commit_messages": [
      "Add timeout for httpTestBase (#3318)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7544ee515ce6a4e320",
    "number": 3317,
    "body": "Bumps [requests](https://github.com/psf/requests) from 2.28.1 to 2.31.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/releases\">requests's releases</a>.</em></p>\n<blockquote>\n<h2>v2.31.0</h2>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>v2.30.0</h2>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>v2.29.0</h2>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/blob/main/HISTORY.md\">requests's changelog</a>.</em></p>\n<blockquote>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n<h2>2.28.2 (2023-01-12)</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4\"><code>147c851</code></a> v2.31.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5\"><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>\n<li><a href=\"https://github.com/psf/requests/commit/302225334678490ec66b3614a9dddb8a02c5f4fe\"><code>3022253</code></a> test on pypy 3.8 and pypy 3.9 on windows and macos (<a href=\"https://redirect.github.com/psf/requests/issues/6424\">#6424</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/b639e66c816514e40604d46f0088fbceec1a5149\"><code>b639e66</code></a> test on py3.12 (<a href=\"https://redirect.github.com/psf/requests/issues/6448\">#6448</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/d3d504436ef0c2ac7ec8af13738b04dcc8c694be\"><code>d3d5044</code></a> Fixed a small typo (<a href=\"https://redirect.github.com/psf/requests/issues/6452\">#6452</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/2ad18e0e10e7d7ecd5384c378f25ec8821a10a29\"><code>2ad18e0</code></a> v2.30.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773\"><code>f2629e9</code></a> Remove strict parameter (<a href=\"https://redirect.github.com/psf/requests/issues/6434\">#6434</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8\"><code>87d63de</code></a> v2.29.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc\"><code>51716c4</code></a> enable the warnings plugin (<a href=\"https://redirect.github.com/psf/requests/issues/6416\">#6416</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71\"><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=\"https://redirect.github.com/psf/requests/issues/6418\">#6418</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/requests/compare/v2.28.1...v2.31.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.1&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/requests-2.31.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump requests from 2.28.1 to 2.31.0 (#3317)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7544ee515ce6a4e321",
    "number": 3316,
    "body": "Fixes #3315",
    "head_branch": "issue_3315",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update approvers list (#3316)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7644ee515ce6a4e322",
    "number": 3312,
    "body": "Copy log updates from `release/v1.18.x-0.39bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.18.x-0.39bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Copy change log updates from release/v1.18.x-0.39bx (#3312)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7744ee515ce6a4e323",
    "number": 3310,
    "body": "# Description\r\n\r\nUsing BoundedAttributes instead of a simple dict in LogRecord; Updated the `_to_json` function so `attributes` behave the same way as before the conversion, and tests pass.\r\n\r\nI made a change in `LogRecord` itself and not in `_get_attributes` so that if someone instantiates it directly, BoundedAttributes would still be used.\r\n\r\nThis ticket also incorporates changes for Support dropped_attributes_count in LogRecord (#3201)\r\n\r\nFixes #3114 and #3201 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Changeling updated\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Core Repo Tests touching this functionality are passing\r\n- [x] Added a test for LogRecord to check if attributes is an instance of BoundedAttributes\r\n- [x] Updated a test for _get_attributes for LoggingHandler to check if attributes is an instance of BoundedAttributes\r\n- [x] Added tests for LogRecord to test the attribute limits\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "ns-3114-bounded-attributes-insteadof-dict-LogRecord",
    "is_a_fork": true,
    "comments": [
      "Looks good, please add a test case :v:",
      "@ocelotl done."
    ],
    "commit_messages": [
      "Use BoundedAttributes instead of raw dict to extract attributes from LogRecord #3114 (#3310)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: OpenTelemetry Bot <107717825+opentelemetrybot@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7844ee515ce6a4e324",
    "number": 3306,
    "body": "# Description\r\n\r\nThis PR modifies the prometheus exporter code that translates OpenTelemetry metrics into Prometheus metrics.\r\n\r\nPrometheus has the concept of a Gauge, which is effectively a non-monotonic Sum. (In the world of Prometheus, a monotonic Sum is called a Counter.)\r\n\r\nAt present, the code that translates OTEL metrics into Prometheus metrics currently treats all Sums as Prometheus \"Counters\", regardless of their monotonicity.\r\n\r\nQuoting @dashpole in issue #3071\r\n\r\n> The [prometheus compatibility spec for sums](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/compatibility/prometheus_and_openmetrics.md#sums) says: If the aggregation temporality is cumulative and the sum is non-monotonic, it MUST be converted to a Prometheus Gauge.\r\n\r\nTherefore, I've modified the Prometheus exporter to always convert non-monotonic Sums (with cumulative aggregation temporality) into Prometheus Gauges.\r\n\r\nFixes #3071\r\n\r\n## Type of change\r\n\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] `tox -e opentelemetry-exporter-prometheus`\r\n- [ ] `tox -e lint`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated (**NOT RELEVANT**)",
    "head_branch": "export-nonmonotonic-sums-as-gauges-in-prometheus",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: brettimus / name: Brett Beutell  (ca4eb1f403a14bea8ef17a27b656406112c83e4b, 0ceeea29e1f446fa172cdb0b1838fe99c6eab3cb, 5e45bf036657a6178b5ac39c84b3302033667867, 8334dd6924e85a686f312fc59168eb24b7ecbc3b, bc8e6707f332e43c6df52974420ddce8bf130b5b, 46a035a0f26a8f32babf09e7b240c7ca92bdbfdb, 326a3156581acf433944944db38b4ab914762007, 7551e265d043dc9aeddaa998f459979b08439f18, 7bbc3f61c08a158124b34cf51acd1cdd2cc2794b, ec69ad1de87a393dfb6d4cbb23f84d0070b09c30, baa1e6169320cf2d442bc1063ebfe2327c89017f, 22f98f98807490cef5d66665fcc90947555fc05f, a35c37dfe9c187fac8569e27659a22abd6679117)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (72237e457536a05bcdaf8389ec587fd9d591ec9b, c1882d9367388d0420e468e5557ed5d49153f3b2)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (c71323bf108032544592dd87f59151814b0ac40b)</li></ul>",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: brettimus / name: Brett Beutell  (ca4eb1f403a14bea8ef17a27b656406112c83e4b, 0ceeea29e1f446fa172cdb0b1838fe99c6eab3cb)</li></ul>",
      "hey all! would it be possible to approve and/or merge this before the next release? i contribute to an open source lib that would benefit from this fix\r\n\r\nthank you!!",
      "hi there! the only issue in the last run of the workflows had to do with linting afaik.\r\n\r\ni just ran `tox -e lint` locally and everything passed. this PR should be ready to rerun the workflows.\r\n\r\n(sorry for that hiccup by the way)",
      "@brettimus looks like there are build failures, could you take a look?",
      "looks like i needed to update my new test after #3279 was merged\r\n\r\neverything is green again locally! though i'm sad i didn't get to this sooner. i missed the release by a day!",
      "Okay so everything is green except for the sdk tests for pypy3 on Windows.\r\n\r\nThe CI logs suggest that the error is unrelated to my change. Have any of you seen this before?\r\n\r\n![image](https://github.com/open-telemetry/opentelemetry-python/assets/3201327/2ee71f92-ffc8-493b-bef9-3a5ba4fa55d0)\r\n",
      "heck yeah! all green 🟢 "
    ],
    "commit_messages": [
      "Modify Prometheus exporter to translate non-monotonic Sums into gauges (#3306)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7944ee515ce6a4e325",
    "number": 3302,
    "body": "# Description\r\n\r\nDue to circumstances, I decided to step down from the maintainer/approver role as I won't be able to dedicate enough time to the Python project, but I will still be around. Thank you. Post merge, I will remove myself from the teams. ",
    "head_branch": "step-down",
    "is_a_fork": true,
    "comments": [
      "Thank you so much for all your hard work in the maintainer role! Glad you'll still be around 😃 ",
      "It has been an incredible journey from the beta days to what we are today. I enjoyed working with you all, and thanks for having me. \r\n\r\n\r\n![toy_story](https://github.com/open-telemetry/opentelemetry-python/assets/22846633/cd8dd465-5845-44fc-9cff-92ea6296651d)\r\n",
      "Sad to merge this one, thank you so much @srikanthccv!"
    ],
    "commit_messages": [
      "remove srikanthccv from maintainers (#3302)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7944ee515ce6a4e326",
    "number": 3300,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otel_log_level",
    "is_a_fork": true,
    "comments": [
      "I know this is a draft, but I am still jumping in to let you know this is going in the wrong direction. The `OTEL_LOG_LEVEL` is intended for diagnostic purposes, i.e. control the verbosity of the logging done by API/SDK/Exporters/Instrumentation. We will not set the level of the handler. By the time a log reaches the handler, it will have already been gone through the application config of the user. https://docs.python.org/3/howto/logging.html#logging-flow"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7a44ee515ce6a4e327",
    "number": 3297,
    "body": "Update version to `1.19.0.dev/0.40b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.19.0.dev-0.40b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.19.0.dev/0.40b0.dev (#3297)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7b44ee515ce6a4e328",
    "number": 3296,
    "body": "Prepare release 1.18.0/0.39b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.18.0-0.39b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.18.x-0.39bx] Prepare release 1.18.0/0.39b0 (#3296)\n\n* Prepare release 1.18.0/0.39b0\r\n\r\n* Update SHA\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7c44ee515ce6a4e329",
    "number": 3294,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3295\r\n",
    "head_branch": "docker-tests-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix(docker-tests): pin requests version to < 2.29 (#3294)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7d44ee515ce6a4e32a",
    "number": 3292,
    "body": "Bumps [flask](https://github.com/pallets/flask) from 1.1.2 to 2.3.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/flask/releases\">flask's releases</a>.</em></p>\n<blockquote>\n<h2>2.3.2</h2>\n<p>This is a security fix release for the 2.3.x release branch.</p>\n<ul>\n<li>Security advisory: <a href=\"https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq\">https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq</a>, CVE-2023-30861</li>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-2\">https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/29?closed=1\">https://github.com/pallets/flask/milestone/29?closed=1</a></li>\n</ul>\n<h2>2.3.1</h2>\n<p>This is a fix release for the 2.3.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-1\">https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/28?closed=1\">https://github.com/pallets/flask/milestone/28?closed=1</a></li>\n</ul>\n<h2>2.3.0</h2>\n<p>This is a feature release, which includes new features, removes previously deprecated code, and adds new deprecations. The 2.3.x branch is now the supported fix branch, the 2.2.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades. Test with warnings treated as errors to be able to adapt to deprecation warnings early.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-0\">https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/24?closed=1\">https://github.com/pallets/flask/milestone/24?closed=1</a></li>\n</ul>\n<h2>2.2.4</h2>\n<p>This is a fix release for the 2.2.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-4\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-4</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/27?closed=1\">https://github.com/pallets/flask/milestone/27?closed=1</a></li>\n</ul>\n<h2>2.2.3</h2>\n<p>This is a fix release for the 2.2.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-3\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/26?closed=1\">https://github.com/pallets/flask/milestone/26?closed=1</a></li>\n</ul>\n<h2>2.2.2</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/flask/releases/tag/2.2.0\">2.2.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-2\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/25?closed=1\">https://github.com/pallets/flask/milestone/25?closed=1</a></li>\n</ul>\n<h2>2.2.1</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/flask/releases/tag/2.2.0\">2.2.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-1\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/23?closed=1\">https://github.com/pallets/flask/milestone/23?closed=1</a></li>\n</ul>\n<h2>2.2.0</h2>\n<p>This is a feature release, which includes new features and removes previously deprecated code. The 2.2.x branch is now the supported bug fix branch, the 2.1.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-0\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/19?closed=1\">https://github.com/pallets/flask/milestone/19?closed=1</a></li>\n</ul>\n<h2>2.1.3</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/flask/blob/main/CHANGES.rst\">flask's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 2.3.2</h2>\n<p>Released 2023-05-01</p>\n<ul>\n<li>Set <code>Vary: Cookie</code> header when the session is accessed, modified, or refreshed.</li>\n<li>Update Werkzeug requirement to &gt;=2.3.3 to apply recent bug fixes.</li>\n</ul>\n<h2>Version 2.3.1</h2>\n<p>Released 2023-04-25</p>\n<ul>\n<li>Restore deprecated <code>from flask import Markup</code>. :issue:<code>5084</code></li>\n</ul>\n<h2>Version 2.3.0</h2>\n<p>Released 2023-04-25</p>\n<ul>\n<li>\n<p>Drop support for Python 3.7. :pr:<code>5072</code></p>\n</li>\n<li>\n<p>Update minimum requirements to the latest versions: Werkzeug&gt;=2.3.0, Jinja2&gt;3.1.2,\nitsdangerous&gt;=2.1.2, click&gt;=8.1.3.</p>\n</li>\n<li>\n<p>Remove previously deprecated code. :pr:<code>4995</code></p>\n<ul>\n<li>The <code>push</code> and <code>pop</code> methods of the deprecated <code>_app_ctx_stack</code> and\n<code>_request_ctx_stack</code> objects are removed. <code>top</code> still exists to give\nextensions more time to update, but it will be removed.</li>\n<li>The <code>FLASK_ENV</code> environment variable, <code>ENV</code> config key, and <code>app.env</code>\nproperty are removed.</li>\n<li>The <code>session_cookie_name</code>, <code>send_file_max_age_default</code>, <code>use_x_sendfile</code>,\n<code>propagate_exceptions</code>, and <code>templates_auto_reload</code> properties on <code>app</code>\nare removed.</li>\n<li>The <code>JSON_AS_ASCII</code>, <code>JSON_SORT_KEYS</code>, <code>JSONIFY_MIMETYPE</code>, and\n<code>JSONIFY_PRETTYPRINT_REGULAR</code> config keys are removed.</li>\n<li>The <code>app.before_first_request</code> and <code>bp.before_app_first_request</code> decorators\nare removed.</li>\n<li><code>json_encoder</code> and <code>json_decoder</code> attributes on app and blueprint, and the\ncorresponding <code>json.JSONEncoder</code> and <code>JSONDecoder</code> classes, are removed.</li>\n<li>The <code>json.htmlsafe_dumps</code> and <code>htmlsafe_dump</code> functions are removed.</li>\n<li>Calling setup methods on blueprints after registration is an error instead of a\nwarning. :pr:<code>4997</code></li>\n</ul>\n</li>\n<li>\n<p>Importing <code>escape</code> and <code>Markup</code> from <code>flask</code> is deprecated. Import them\ndirectly from <code>markupsafe</code> instead. :pr:<code>4996</code></p>\n</li>\n<li>\n<p>The <code>app.got_first_request</code> property is deprecated. :pr:<code>4997</code></p>\n</li>\n<li>\n<p>The <code>locked_cached_property</code> decorator is deprecated. Use a lock inside the\ndecorated function if locking is needed. :issue:<code>4993</code></p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/flask/commit/f3b8f570545200c87465d18386f3fc9f2258307a\"><code>f3b8f57</code></a> release version 2.3.2</li>\n<li><a href=\"https://github.com/pallets/flask/commit/c990bba94ab9bc81adf2d33e83c9a9628a2098f2\"><code>c990bba</code></a> update min test env</li>\n<li><a href=\"https://github.com/pallets/flask/commit/adedb2a64ea7703369bc89021710b439ee79f8dc\"><code>adedb2a</code></a> Merge pull request <a href=\"https://redirect.github.com/pallets/flask/issues/5101\">#5101</a> from pallets/update-werkzeug</li>\n<li><a href=\"https://github.com/pallets/flask/commit/e1aedecdc689cc9a79131851dbdabf6c3bc49c9e\"><code>e1aedec</code></a> update werkzeug</li>\n<li><a href=\"https://github.com/pallets/flask/commit/37badc3ce8b0665e3454547839196a676729309f\"><code>37badc3</code></a> update changelog</li>\n<li><a href=\"https://github.com/pallets/flask/commit/70f906c51ce49c485f1d355703e9cc3386b1cc2b\"><code>70f906c</code></a> Merge pull request from GHSA-m2qf-hxjv-5gpq</li>\n<li><a href=\"https://github.com/pallets/flask/commit/8705dd39c4fa563ea0fe0bf84c85da8fcc98b88d\"><code>8705dd3</code></a> set <code>Vary: Cookie</code> header consistently for session</li>\n<li><a href=\"https://github.com/pallets/flask/commit/9532cba45d2339e90ebf04f178b1e4f2064e7328\"><code>9532cba</code></a> fix mypy finding</li>\n<li><a href=\"https://github.com/pallets/flask/commit/0bc7356ce1ae11e633426902aba76d525f4523da\"><code>0bc7356</code></a> start version 2.3.2</li>\n<li><a href=\"https://github.com/pallets/flask/commit/f07fb2b607c1eaa724ca9bfe43e2dc20d97d34de\"><code>f07fb2b</code></a> Merge pull request <a href=\"https://redirect.github.com/pallets/flask/issues/5086\">#5086</a> from pallets/release-2.3.1</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/flask/compare/1.1.2...2.3.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=flask&package-manager=pip&previous-version=1.1.2&new-version=2.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/flask-2.3.2",
    "is_a_fork": false,
    "comments": [
      "A newer version of flask exists, but since this PR has been edited by someone other than Dependabot I haven't updated it. You'll get a PR for the updated version as normal once this PR is merged."
    ],
    "commit_messages": [
      "Bump flask from 1.1.2 to 2.3.2 in /docs/examples/fork-process-model/flask-uwsgi (#3292)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7e44ee515ce6a4e32b",
    "number": 3291,
    "body": "Bumps [flask](https://github.com/pallets/flask) from 1.1.2 to 2.3.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/flask/releases\">flask's releases</a>.</em></p>\n<blockquote>\n<h2>2.3.2</h2>\n<p>This is a security fix release for the 2.3.x release branch.</p>\n<ul>\n<li>Security advisory: <a href=\"https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq\">https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq</a>, CVE-2023-30861</li>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-2\">https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/29?closed=1\">https://github.com/pallets/flask/milestone/29?closed=1</a></li>\n</ul>\n<h2>2.3.1</h2>\n<p>This is a fix release for the 2.3.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-1\">https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/28?closed=1\">https://github.com/pallets/flask/milestone/28?closed=1</a></li>\n</ul>\n<h2>2.3.0</h2>\n<p>This is a feature release, which includes new features, removes previously deprecated code, and adds new deprecations. The 2.3.x branch is now the supported fix branch, the 2.2.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades. Test with warnings treated as errors to be able to adapt to deprecation warnings early.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-0\">https://flask.palletsprojects.com/en/2.3.x/changes/#version-2-3-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/24?closed=1\">https://github.com/pallets/flask/milestone/24?closed=1</a></li>\n</ul>\n<h2>2.2.4</h2>\n<p>This is a fix release for the 2.2.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-4\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-4</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/27?closed=1\">https://github.com/pallets/flask/milestone/27?closed=1</a></li>\n</ul>\n<h2>2.2.3</h2>\n<p>This is a fix release for the 2.2.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-3\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/26?closed=1\">https://github.com/pallets/flask/milestone/26?closed=1</a></li>\n</ul>\n<h2>2.2.2</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/flask/releases/tag/2.2.0\">2.2.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-2\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/25?closed=1\">https://github.com/pallets/flask/milestone/25?closed=1</a></li>\n</ul>\n<h2>2.2.1</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/flask/releases/tag/2.2.0\">2.2.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-1\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/23?closed=1\">https://github.com/pallets/flask/milestone/23?closed=1</a></li>\n</ul>\n<h2>2.2.0</h2>\n<p>This is a feature release, which includes new features and removes previously deprecated code. The 2.2.x branch is now the supported bug fix branch, the 2.1.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades.</p>\n<ul>\n<li>Changes: <a href=\"https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-0\">https://flask.palletsprojects.com/en/2.2.x/changes/#version-2-2-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/flask/milestone/19?closed=1\">https://github.com/pallets/flask/milestone/19?closed=1</a></li>\n</ul>\n<h2>2.1.3</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/flask/blob/main/CHANGES.rst\">flask's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 2.3.2</h2>\n<p>Released 2023-05-01</p>\n<ul>\n<li>Set <code>Vary: Cookie</code> header when the session is accessed, modified, or refreshed.</li>\n<li>Update Werkzeug requirement to &gt;=2.3.3 to apply recent bug fixes.</li>\n</ul>\n<h2>Version 2.3.1</h2>\n<p>Released 2023-04-25</p>\n<ul>\n<li>Restore deprecated <code>from flask import Markup</code>. :issue:<code>5084</code></li>\n</ul>\n<h2>Version 2.3.0</h2>\n<p>Released 2023-04-25</p>\n<ul>\n<li>\n<p>Drop support for Python 3.7. :pr:<code>5072</code></p>\n</li>\n<li>\n<p>Update minimum requirements to the latest versions: Werkzeug&gt;=2.3.0, Jinja2&gt;3.1.2,\nitsdangerous&gt;=2.1.2, click&gt;=8.1.3.</p>\n</li>\n<li>\n<p>Remove previously deprecated code. :pr:<code>4995</code></p>\n<ul>\n<li>The <code>push</code> and <code>pop</code> methods of the deprecated <code>_app_ctx_stack</code> and\n<code>_request_ctx_stack</code> objects are removed. <code>top</code> still exists to give\nextensions more time to update, but it will be removed.</li>\n<li>The <code>FLASK_ENV</code> environment variable, <code>ENV</code> config key, and <code>app.env</code>\nproperty are removed.</li>\n<li>The <code>session_cookie_name</code>, <code>send_file_max_age_default</code>, <code>use_x_sendfile</code>,\n<code>propagate_exceptions</code>, and <code>templates_auto_reload</code> properties on <code>app</code>\nare removed.</li>\n<li>The <code>JSON_AS_ASCII</code>, <code>JSON_SORT_KEYS</code>, <code>JSONIFY_MIMETYPE</code>, and\n<code>JSONIFY_PRETTYPRINT_REGULAR</code> config keys are removed.</li>\n<li>The <code>app.before_first_request</code> and <code>bp.before_app_first_request</code> decorators\nare removed.</li>\n<li><code>json_encoder</code> and <code>json_decoder</code> attributes on app and blueprint, and the\ncorresponding <code>json.JSONEncoder</code> and <code>JSONDecoder</code> classes, are removed.</li>\n<li>The <code>json.htmlsafe_dumps</code> and <code>htmlsafe_dump</code> functions are removed.</li>\n<li>Calling setup methods on blueprints after registration is an error instead of a\nwarning. :pr:<code>4997</code></li>\n</ul>\n</li>\n<li>\n<p>Importing <code>escape</code> and <code>Markup</code> from <code>flask</code> is deprecated. Import them\ndirectly from <code>markupsafe</code> instead. :pr:<code>4996</code></p>\n</li>\n<li>\n<p>The <code>app.got_first_request</code> property is deprecated. :pr:<code>4997</code></p>\n</li>\n<li>\n<p>The <code>locked_cached_property</code> decorator is deprecated. Use a lock inside the\ndecorated function if locking is needed. :issue:<code>4993</code></p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/flask/commit/f3b8f570545200c87465d18386f3fc9f2258307a\"><code>f3b8f57</code></a> release version 2.3.2</li>\n<li><a href=\"https://github.com/pallets/flask/commit/c990bba94ab9bc81adf2d33e83c9a9628a2098f2\"><code>c990bba</code></a> update min test env</li>\n<li><a href=\"https://github.com/pallets/flask/commit/adedb2a64ea7703369bc89021710b439ee79f8dc\"><code>adedb2a</code></a> Merge pull request <a href=\"https://redirect.github.com/pallets/flask/issues/5101\">#5101</a> from pallets/update-werkzeug</li>\n<li><a href=\"https://github.com/pallets/flask/commit/e1aedecdc689cc9a79131851dbdabf6c3bc49c9e\"><code>e1aedec</code></a> update werkzeug</li>\n<li><a href=\"https://github.com/pallets/flask/commit/37badc3ce8b0665e3454547839196a676729309f\"><code>37badc3</code></a> update changelog</li>\n<li><a href=\"https://github.com/pallets/flask/commit/70f906c51ce49c485f1d355703e9cc3386b1cc2b\"><code>70f906c</code></a> Merge pull request from GHSA-m2qf-hxjv-5gpq</li>\n<li><a href=\"https://github.com/pallets/flask/commit/8705dd39c4fa563ea0fe0bf84c85da8fcc98b88d\"><code>8705dd3</code></a> set <code>Vary: Cookie</code> header consistently for session</li>\n<li><a href=\"https://github.com/pallets/flask/commit/9532cba45d2339e90ebf04f178b1e4f2064e7328\"><code>9532cba</code></a> fix mypy finding</li>\n<li><a href=\"https://github.com/pallets/flask/commit/0bc7356ce1ae11e633426902aba76d525f4523da\"><code>0bc7356</code></a> start version 2.3.2</li>\n<li><a href=\"https://github.com/pallets/flask/commit/f07fb2b607c1eaa724ca9bfe43e2dc20d97d34de\"><code>f07fb2b</code></a> Merge pull request <a href=\"https://redirect.github.com/pallets/flask/issues/5086\">#5086</a> from pallets/release-2.3.1</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/flask/compare/1.1.2...2.3.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=flask&package-manager=pip&previous-version=1.1.2&new-version=2.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/flask-2.3.2",
    "is_a_fork": false,
    "comments": [
      "A newer version of flask exists, but since this PR has been edited by someone other than Dependabot I haven't updated it. You'll get a PR for the updated version as normal once this PR is merged."
    ],
    "commit_messages": [
      "Bump flask from 1.1.2 to 2.3.2 in /docs/examples/fork-process-model/flask-gunicorn (#3291)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7e44ee515ce6a4e32c",
    "number": 3285,
    "body": "# Description\r\n\r\nFinishes off the type hinting for `InMemorySpanExporter`.\r\n\r\nAvoids issues when calling `.get_finished_spans()`.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ngnpope / name: Nick Pope  (54ae49383eed1b722697b15019b680557a58cbbe)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (7126ddab5e5500537bb599297e5f4ec07940208d, 1a8a0a2df2f796bcad6317cc82f38b4fccf4c746, 3df8e71d0ccdbdfc18060d2a4837657984d00c29)</li></ul>",
      "Please sign the CLA and fix the lint",
      "@srikanthccv This should be ready to land now.",
      "It will be merged by one of the maintainers soon",
      "Thanks @aabmass. Have made the changes as requested."
    ],
    "commit_messages": [
      "Finish typing `InMemorySpanExporter` (#3285)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c7f44ee515ce6a4e32d",
    "number": 3284,
    "body": "# Description\r\n\r\nPython logging reserved attributes seem to be out of sync for opentelemetry sdk project as described on issue https://github.com/open-telemetry/opentelemetry-python/issues/3281\r\n\r\nFixes #3281\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- A sample program with output using current library is commented on the issue. With this change the output changes to below\r\n```\r\nINFO:__main__:Starting server\r\n{\r\n    \"body\": \"Starting server\",\r\n    \"severity_number\": \"<SeverityNumber.INFO: 9>\",\r\n    \"severity_text\": \"INFO\",\r\n    \"attributes\": {},\r\n    \"timestamp\": \"2023-04-26T11:41:36.331550Z\",\r\n    \"trace_id\": \"0x00000000000000000000000000000000\",\r\n    \"span_id\": \"0x0000000000000000\",\r\n    \"trace_flags\": 0,\r\n    \"resource\": \"BoundedAttributes({'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.18.0.dev0', 'service.name': 'unknown_service'}, maxlen=None)\"\r\n}\r\n```\r\nHere the message is present only in body and is not repeated in attributes as message attribute\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n\r\n",
    "head_branch": "issue_3281",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: pkt1583  (dff25fa14fb2b3a6031b58fc3c27fec9ecab5776)</li></ul>",
      "@ocelotl @lzchen @aabmass @shalevr Can you please help with approval for this PR?"
    ],
    "commit_messages": [
      "Modified getMessage to message (#3284)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8044ee515ce6a4e32e",
    "number": 3282,
    "body": "This is being done in order to fix CI, the underlying issue being a test case in the aiohttp instrumentation that is failing.\r\n\r\nFixes #3278",
    "head_branch": "issue_3278",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update contrib repo SHA (#3282)\n\nThis is being done in order to fix CI, the underlying issue being a\r\ntest case in the aiohttp instrumentation that is failing.\r\n\r\nFixes #3278"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8144ee515ce6a4e32f",
    "number": 3280,
    "body": "# Description\r\n\r\nFixes #3183 \r\n\r\n",
    "head_branch": "issue_3183",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: updates pyproject.toml dev deps for all specifiers (#3280)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8244ee515ce6a4e330",
    "number": 3279,
    "body": "# Description\r\n\r\nFixes #3073\r\nExport on `target_info` is enabled by default\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added tests for feature\r\n- [x] `tox`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n",
    "head_branch": "feat/3073",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: nerstak  (1373f7a2c030b3744e96616f44bddbfda9c5c273, 477d2af3e2ae8b779ce1c883b063d2fce4680e71, 4c839cba64997666f597f324c25b886a94c1299a, ebf9745e0cafb6f64dfb2dbbe849a155a890f49c, f213372b91d5b7e894f6a0f12aa7f2962e34d815, 6bda0fd125ad639ad6aef62c2e8971805498f694)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (20b48f9e34aa77454a1c86bfb377f3fb1c1c1c9f)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (61f0411fae566074c0ebf220d9224c49a5a676c9, abedc9bb3c714058b20d9dd2261a4284f37ada26)</li></ul>",
      "I see that two checks are failing:\r\n- Public API check / publicAPICheck (pull_request)\r\n- Core Repo Tests / lint (pull_request) \r\n\r\nDo you want me to fix them, or will you take care of them?",
      ">\tTARGET_INFO_NAME\r\n\tTARGET_INFO_DESCRIPTION\r\n\r\nAre these public symbols added needed? \r\n\r\n>Core Repo Tests / lint (pull_request)\r\n\r\nYou need to fix",
      "Should be good, I had forgot to run black.",
      "@ocelotl @lzchen @aabmass @shalevr @sanketmehta28 @srikanthccv Can you review this PR? \r\n\r\nThanks! "
    ],
    "commit_messages": [
      "Exporting resources attributes on target_info for Prometheus Exporter (#3279)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8344ee515ce6a4e331",
    "number": 3276,
    "body": "Ignore this PR, I'm just testing CI.",
    "head_branch": "test_ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8444ee515ce6a4e332",
    "number": 3267,
    "body": null,
    "head_branch": "bench",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add micro benchmark tests for metric instrument operations (#3267)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8444ee515ce6a4e333",
    "number": 3265,
    "body": "Fixes #3264",
    "head_branch": "issue_3264",
    "is_a_fork": true,
    "comments": [
      "I wouldn't put any OTLP exporter specific implementation in metrics SDK. The default aggregation from SDK should return the default irrespective of this env, and it should only be considered when the used exporter is OTLP. Each metric exporter has the option to configure the preferred aggregation and temporality. And I believe this logic should go in OTLP metrics exporters, similar to `OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE` https://github.com/open-telemetry/opentelemetry-python/blob/e00306206ea25cf8549eca289e39e0b6ba2fa560/exporter/opentelemetry-exporter-otlp-proto-grpc/src/opentelemetry/exporter/otlp/proto/grpc/metric_exporter/__init__.py#L137-L185.",
      "@srikanthccv moved this feature to the exporter, PTAL."
    ],
    "commit_messages": [
      "Select histogram aggregation with environment variables (#3265)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8544ee515ce6a4e334",
    "number": 3262,
    "body": "# Description\r\n\r\n...and removes some dead code.",
    "head_branch": "ff-note",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a note about force_flush implementation for OTLP exporters (#3262)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8644ee515ce6a4e335",
    "number": 3259,
    "body": "# Description\r\n\r\nRelated to #3250 \r\n",
    "head_branch": "not-found",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Show helpful message when propagator is not found (#3259)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8744ee515ce6a4e336",
    "number": 3258,
    "body": "\r\n# Description\r\n\r\nresolve requirement conflicts with grpcio-status in other transient dependencies when using python 3.11\r\n\r\n```\r\n  File \"/Users/psi29a/Workspace/backend/venv/lib/python3.11/site-packages/pkg_resources/__init__.py\", line 800, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (grpcio-status 1.48.2 (/Users/psi29a/Workspace/backend/venv/lib/python3.11/site-packages), Requirement.parse('grpcio-status<2.0dev,>=1.49.1; python_version >= \"3.11\" and extra == \"grpc\"'), {'google-api-core'})\r\n```\r\n\r\nBumping this also bumps grpcio-status which fixes other packages. There is no change in behavior of code.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan test suite and validate in internal product testing.\r\n",
    "head_branch": "transient_python311_fix",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: psi29a / name: Bret Curtis  (63b6290b9b602f6ecb4fb56178ee69cc7f1a41d3)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (3a2d8c9e9c07a29ff6632de0741b8fcbcb8f3d2b)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (866d8206d36d887b12da5d6ab61abdbb9e857e26, d69ae23cd71557a55ba064be6cb0c478670454a1)</li></ul>",
      "Do this really need a changelog entry?",
      "No, but other failures should be resolved. ",
      "> No, but other failures should be resolved.\r\n\r\nThat's the only failure is the changelog check.",
      "<img width=\"843\" alt=\"Screenshot 2023-04-20 at 4 53 32 PM\" src=\"https://user-images.githubusercontent.com/22846633/233352045-a37d7310-29f3-48fc-9bb8-dce34fff0411.png\">\r\n"
    ],
    "commit_messages": [
      "resolve requirement conflicts with grpcio-status in other transient dependancies when using python 3.11 (#3258)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8844ee515ce6a4e337",
    "number": 3256,
    "body": "# Description\r\n\r\nThis pull request only removes a vendor specific example from the main repository. (This should be moved to contrib or vendor repo) \r\n\r\nFixes #3255  (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nNo test is required as no change is in source code.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "fix/b3255",
    "is_a_fork": true,
    "comments": [
      "Do I need to update changelog even for example deletion?"
    ],
    "commit_messages": [
      "remove vendor specific example from doc (#3256)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8944ee515ce6a4e338",
    "number": 3251,
    "body": "# Description\r\n\r\nUpdates semantic conventions to v 1.21.0. \r\n\r\nAs a part of HTTP semconv stabilization effort, we're trying to get instrumentation libraries closer to the final spec and implement changes in diverse set of languages.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\ntox + updated contrib repo and fixed tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1746\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added - N/A\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-semcomv",
    "is_a_fork": true,
    "comments": [
      "@lmolkova Please let me know if you need any help getting the tests passed. You need to update core/contrib repo SHAs in your PR since they are dependent changes. They are [here](https://github.com/open-telemetry/opentelemetry-python/blob/main/.github/workflows/test.yml#L13) and [here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/.github/workflows/test.yml#L9) and thanks for the pull request.",
      "@lmolkova, are you still interested in continuing this work?",
      "@srikanthccv Sorry I got distracted and didn't update the PRs. I can get back to it on the next week. If there is someone else interested, I'm definitely happy to pass it over or work together on it. In any case, I will get back to it and corresponding contrib change on the next week.",
      "Thank you. There were some PRs intended to do the same thing, but we closed them in favour of yours, so It would be great if you complete this. You also kept it backwards by providing deprecated attributes, which should make it easier to get the contrib tests passed. We don't have to update the instrumentations to follow the latest semconv. \r\n",
      "@srikanthccv This PR is ready for review (but  corresponding contrib change is still in progress)\r\n\r\nThe only failure in the pipeline is public API change \r\n\r\n```\r\n- opentelemetry-semantic-conventions/src/opentelemetry/semconv/trace/__init__.py\r\n\tEventDomainValues\r\n\tNetSockFamilyValues\r\n\tDbCosmosdbOperationTypeValues\r\n\tDbCosmosdbConnectionModeValues\r\n\tOtelStatusCodeValues\r\n\tGraphqlOperationTypeValues\r\n\tRpcConnectRpcErrorCodeValues\r\n\r\nPlease make sure that all of them are strictly necessary, if not, please consider\r\nprefixing them with an underscore to make them private.\r\nAfter that, please label this PR with \"Skip Public API check\".\r\n```\r\n\r\nThese are new enums defined in semconvs, so if you're fine with this, would you mind adding a label? I don't have permissions",
      "@python-approvers could you please take a look?",
      "> @python-approvers could you please take a look?\r\n\r\nSure, reviewing... :v:",
      "Great job :v: I added a couple minor fixes for `lint` and `spellcheck`. The `getting` tests are failing because we need a change that is in [this](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1746) PR already. Once the contrib PR is ready we can use it to make the `getting` tests pass.\r\n\r\nI still have to look into why the `tracecontext` test is failing :eyes: ",
      "@lmolkova from the error message of the `tracecontext` tests, it seems like the same error is the cause:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/tigre/github/ocelotl/opentelemetry-python/./tests/w3c_tracecontext_validation_server.py\", line 27, in <module>\r\n    from opentelemetry.instrumentation.requests import RequestsInstrumentor\r\n  File \"/home/tigre/github/ocelotl/opentelemetry-python/.tox/tracecontext/src/opentelemetry-instrumentation-requests/instrumentation/opentelemetry-instrumentation-requests/src/opentelemetry/instrumentation/requests/__init__.py\", line 79, in <module>\r\n    from opentelemetry.util.http import (\r\n  File \"/home/tigre/github/ocelotl/opentelemetry-python/.tox/tracecontext/src/opentelemetry-util-http/util/opentelemetry-util-http/src/opentelemetry/util/http/__init__.py\", line 40, in <module>\r\n    SpanAttributes.HTTP_FLAVOR,\r\nAttributeError: type object 'SpanAttributes' has no attribute 'HTTP_FLAVOR'\r\n```",
      "thanks @ocelotl ! I fixed the indentation for all notes.\r\n\r\nSo I should work on the https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1746 and get it merged first before this one can move ahead, correct? ",
      "> thanks @ocelotl ! I fixed the indentation for all notes.\n> \n> So I should work on the https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1746 and get it merged first before this one can move ahead, correct? \n\nYes, please ✌️",
      "@lmolkova @ocelotl \r\nHey @lmolkova apologies for not updating you on this. Python SIG has indeed decided to follow the migration plan for sem conv as defined [here](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md). We have decided that we will be still releasing instrumenations in lockstep, and we as the Python community will be choosing the most important/popular http libraries to be \"starting the migration plan\", which consists of adding support for the env var and adding the possibility of sending both signals. With that being said, I don't think this PR has anything to do with the migration plan (updating to 1.20.0 does not affect new semantic conventions) correct? So people coming to review this can just review this as is?",
      "I posed this in another task (open-telemetry/opentelemetry-python-contrib#1627), but thought I bring it up here:\r\n\r\n> Just brainstorming: Is it possible to add a layer in `opentelemetry.semconv` like:\r\n> \r\n> ```python\r\n> from opentelemetry.semconv import SemConv\r\n> semconv = SemConv(version=\"1.20.0\");\r\n> semconv.span_attributes.SERVER_ADDRESS\r\n> ```\r\n> \r\n> It doesn't completely solve the coupling, but may help break up the PRs. You could simply have one relatively small CR to make the new version available for use, then incrementally update usage in all of the sub-packages in separate PRs. This could allow skipping sub-package updates if say 1.21.0, 1.22.0, etc. come along before all the sub-packages are updated. Then follow up by deprecating unused versions as all the usage is updated.\r\n\r\nI see you mentioned that the consensus is to keep all sub-packages in lock-step like you said there, so this proposal probably isn't acceptable? It could help loosen this coupling and make it easier to keep this library up to date. As long as `resource.telemetry.sdk.version` is accurate for each instrumentation package.\r\n\r\n---\r\nEdit: I'm just now realizing this library is versioned in lock-step, so nvm.",
      "This is almost ready to merge, right? The only things missing are solving the merge conflicts and moving the changelog entry to the Unreleased section. \r\n\r\n@lmolkova @ocelotl can I be of any help here?",
      "@ocelotl I took the liberty to reset your review status, please take another look if you want to."
    ],
    "commit_messages": [
      "Update semconv to 1.21.0 (#3251)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8944ee515ce6a4e339",
    "number": 3248,
    "body": "# Description\r\n\r\nWas missing flask in the deps list\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nN/A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated ",
    "head_branch": "pr3248",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OpenCensus shim small fix for example code (#3248)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8a44ee515ce6a4e33a",
    "number": 3245,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8b44ee515ce6a4e33b",
    "number": 3242,
    "body": "Bump github workflow cache key\n",
    "head_branch": "pr3241",
    "is_a_fork": true,
    "comments": [
      "@aabmass tests finally passed without changes to the cache keys #3236. :shrug: This was a weird issue."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8c44ee515ce6a4e33c",
    "number": 3240,
    "body": "# Description\r\n\r\nWithout this PR if one wants to use exponential histrograms, which were added in realease 1.17.0 (https://github.com/open-telemetry/opentelemetry-python/blob/main/CHANGELOG.md#version-1170038b0-2023-03-22), one needs to import it from the private package opentelemetry.sdk.metrics._internal.aggregation.\r\n\r\nFixes #3239\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/sk-/3239",
    "is_a_fork": true,
    "comments": [
      "@sk this is a bugfix that users can see, please add a changelog entry.",
      "> @sk this is a bugfix that users can see, please add a changelog entry.\r\n\r\n@ocelotl done, checks are waiting approval from a maintainer",
      "Tests seem to be stuck on \"Expected — Waiting for status to be reported\" for some reason, investigating...",
      "@sk- can you try rebasing your branch against `main` and pushing again, please? I am not able to do that myself."
    ],
    "commit_messages": [
      "fix: export ExponentialBucketHistogramAggregation from opentelemetry.sdk.metrics.view (#3240)\n\n* fix: export ExponentialBucketHistogramAggregation from opentelemetry.sdk.metrics.view\r\n\r\nWithout this PR if one wants to use exponential histrograms, which were added in realease 1.17.0 (https://github.com/open-telemetry/opentelemetry-python/blob/main/CHANGELOG.md#version-1170038b0-2023-03-22), one needs to import it from the private package opentelemetry.sdk.metrics._internal.aggregation.\r\n\r\nThis PR fixes #3239."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8d44ee515ce6a4e33d",
    "number": 3237,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #3244\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\nIn order to avoid a breaking change, I moved the new BLRP arg, max_queue_size, to the end of the arg list. It is the first argument for BSP.\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tests for the defaulting logic of the BLRP args, their env vars, and their validation.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "log-export-env-var",
    "is_a_fork": true,
    "comments": [
      "Tests are failing with the following error:\r\nnote: This error originates from a subprocess, and is likely not a problem with pip.\r\nERROR: InvocationError for command 'D:\\a\\opentelemetry-python\\opentelemetry-python\\.tox\\py38-opentelemetry-getting-started\\Scripts\\pip.EXE' install -e 'git+https://github.com/open-telemetry/opentelemetry-python-contrib.git@7fb0340445f5e0164bc59a3af1bf5836393013f4#egg=opentelemetry-util-http&subdirectory=util/opentelemetry-util-http' (exited with code 1)\r\n___________________________________ summary ___________________________________\r\nERROR:   py38-opentelemetry-getting-started: commands failed",
      "https://github.com/open-telemetry/opentelemetry-python/issues/3235",
      "Specs for reference: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/sdk-environment-variables.md#batch-logrecord-processor"
    ],
    "commit_messages": [
      "Add speced out environment variables and arguments for BatchLogRecordProcessor (#3237)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8d44ee515ce6a4e33e",
    "number": 3236,
    "body": "Fixes #3235",
    "head_branch": "issue_3235",
    "is_a_fork": true,
    "comments": [
      "> @ocelotl did you try bumping the cache keys in the workflow yamls?\r\n\r\nNot yet, trying that.",
      "Haha, did it work itself without bumping cache keys?",
      "> Haha, did it work itself without bumping cache keys?\r\n\r\n[Any change to tox.ini](https://github.com/aabmass/opentelemetry-python/blob/b6a1b22fa65f41bdefb01d64b76e5e793d039f6d/.github/workflows/test.yml#L59-L60) updates the cache (thanks @aabmass for pointing that out). So, that seems to be the reason why any change I added to tox.ini \"fixed\" the problem.\r\n\r\nAnother thing that suggests this was cache-related is the fact that first both `getting-started` environments for Windows and Ubuntu were failing but after a few days only the Windows ones were failing. Maybe the cache does not get updated at the same time?"
    ],
    "commit_messages": [
      "Enable Git tracing in tox.ini (#3236)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8e44ee515ce6a4e33f",
    "number": 3233,
    "body": "# Description\r\n\r\nThis updates the semantic conventions library to version 1.19.0 and the generator to 0.18.0.\r\n\r\nSee https://github.com/open-telemetry/build-tools/pull/157 for context on the change to the generate script.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "semconv-1.19.0",
    "is_a_fork": true,
    "comments": [
      "@tsloughter, we have some resource semantic convention attributes as top-level constants in the SDK. We couldn't remove them because removing public symbols would be a breaking change. We have deprecated them but must continue to maintain them until the 2.0 release to remove them. Since we can't use `ResourceAttriubtes` from this package, can you keep the string equivalent for those constants here https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/src/opentelemetry/sdk/resources/__init__.py#L92",
      "@srikanthccv sorry I forgot about this comment!\r\n\r\nDo you just mean the old FAAS attributes? ",
      "Yes. It seems like there is another PR here that does the same https://github.com/open-telemetry/opentelemetry-python/pull/3251.",
      "Ah, should I close this since there is the one to upgrade to 1.20? Or are both needed in order to publish a version of semconv at 1.19?",
      "I think you can close this. We haven't published the semantic conventions for each release."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c8f44ee515ce6a4e340",
    "number": 3231,
    "body": "# Description\r\n\r\nUpdate OpenCensus shim to update OpenCensus execution context\r\n\r\nPreviously, the shim was only writing to OTel context. This updates it to write to both OC and OTel.\r\n\r\nAlso updated the code to use the `span_context` provided when instrumentation instantiates the `Tracer`.\r\n\r\nPart of #3203 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Added lots of tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated – skipping as this package has never been released.\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated ",
    "head_branch": "pr3231",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update OpenCensus shim to update OpenCensus execution context (#3231)\n\n* Update OpenCensus shim to update OpenCensus execution context\r\n\r\nPreviously, the shim was only writing to OTel context. This updates it to write to both OC and OTel.\r\n\r\nAlso updated the code to use the `span_context` provided when instrumentation instantiates the `Tracer`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9044ee515ce6a4e341",
    "number": 3230,
    "body": "The hardcoded string is incorrect since instrumentations use the `_SUPPRESS_INSTRUMENTATION ` to ignore instrumentations.",
    "head_branch": "log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix _SUPPRESS_INSTRUMENTATION for log batch processor (#3230)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9144ee515ce6a4e342",
    "number": 3229,
    "body": "Prepare release 1.17.0/0.38b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.17.0-0.38b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.17.x-0.38bx] Prepare release 1.17.0/0.38b0 (#3229)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9244ee515ce6a4e343",
    "number": 3228,
    "body": "Update version to `1.18.0.dev/0.39b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.18.0.dev-0.39b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.18.0.dev/0.39b0.dev (#3228)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9244ee515ce6a4e344",
    "number": 3227,
    "body": "# Description\r\n\r\nExcluding OpenCensus shim since it's not ready yet.\r\n\r\nWhen we want to release this, we should add an entry here and update the build script again to include OC shim. https://github.com/open-telemetry/opentelemetry-python/blob/42f87368a0714ed064645895e5a2c41915633dc5/eachdist.ini#L32-L42 ",
    "head_branch": "exlude-oc-shim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Exclude opencensus shim from update & build scripts (#3227)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9344ee515ce6a4e345",
    "number": 3226,
    "body": "# Description\r\n\r\nThe said issue restricts the users from sending `headers` as `tuples` as the type signature is tightly coupled with the older version of `OTLPExporterMixin`.\r\n\r\nFixes #3209 \r\n\r\n\r\n## Type of change\r\n- Corrected the Type signatures of all OTLPExporters\r\n- Removed header concatenation issue in the `OTLPExporterMixin`\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Ran Unitest for all Exporters and Mixins\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue-3209",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sreejitkar / name: Sreejit Kar  (64c04f0c282117568170011836916eaebda256b4)</li></ul>",
      "Hi @srikanthccv , Could you please help me with the next steps for merge ?",
      "Thanks for the PR; It will be merged when it gets enough approvals without any pending comments. ",
      "Looks like some checks are failing because of a bad SHA from the parent branch"
    ],
    "commit_messages": [
      "Fix headers types mismatch for OTLP Exporters (#3226)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9444ee515ce6a4e346",
    "number": 3223,
    "body": "Fixes #3075",
    "head_branch": "issue_3075",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement LowMemory temporality presets (#3223)\n\n* Implement LowMemory temporality\r\n\r\nFixes #3075\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9544ee515ce6a4e347",
    "number": 3221,
    "body": "Fixes #3220",
    "head_branch": "issue_3220",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update opencensus docker image (#3221)\n\nFixes #3220"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9644ee515ce6a4e348",
    "number": 3217,
    "body": "Fixes #3167",
    "head_branch": "issue_3167_1",
    "is_a_fork": true,
    "comments": [
      "Does this replace this: https://github.com/open-telemetry/opentelemetry-python/pull/3168",
      "@aabmass PTAL",
      "It would be nice if we could still use a modern importlib-metadata vs ~=6.0.0\r\n\r\nI would think ~=6.0 would work well for this eh?  Any chance OP can resolve this?"
    ],
    "commit_messages": [
      "Use importlib-metadata regardless of Python version (#3217)\n\n* Use importlib-metadata regardless of Python version\r\n\r\nFixes #3167\r\n\r\n* Fix lint\r\n\r\n* Add FIXME comment\r\n\r\n* Constraint importlib-metadata versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9744ee515ce6a4e349",
    "number": 3215,
    "body": "# Description\r\n\r\nFixes #3199 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Run the latest collector and example\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n",
    "head_branch": "issue-3199",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix docker config mapping (#3215)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9744ee515ce6a4e34a",
    "number": 3214,
    "body": "Update semantic convention to a newer version.",
    "head_branch": "semcov-1.13.0-spec",
    "is_a_fork": true,
    "comments": [
      "Why 1.13 and not 1.19?\r\n\r\nI was just starting to work on a bump to 1.19 but couldn't get it to build and came to look if there were existing issues and found this PR.",
      "Yes same here, trying to figure how to build 1.19 and so far this as far as I got :)",
      "@nemoshlag ah ok. Yea, there is a build tools issue that won't allow building 1.19, https://github.com/open-telemetry/build-tools/issues/155",
      "I've opened #3233 now that build-tools have been updated.",
      "@nemoshlag is this draft PR still needed or can we close it?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9844ee515ce6a4e34b",
    "number": 3211,
    "body": "# Description\r\n\r\nAdd a runnable example of using the OpenCensus shim. The example uses OC flask instrumentation + OTel requests instrumentation. It sends the traces to Jaeger.\r\n\r\nPart of #3203 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- n/a\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated ",
    "head_branch": "opencensus-trace-shim-ex",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add OpenCensus tracing shim example (#3211)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9944ee515ce6a4e34c",
    "number": 3210,
    "body": "# Description\r\n\r\nImplements the OpenCensus tracing shim/bridge. See issue for more details. For now, users must import and call `install_shim()` for the shim to take effect.\r\n\r\nPart of #3203\r\n\r\n## Caveats\r\n- SpanKind and Links cannot be translated with the shim. OpenCensus `Tracer.start_span()` **only** accepts span name, while OTel only allows setting those properties in `start_span()`; there is no way to set them after the fact with a pure API bridge.\r\n- This PR does not bridge Context APIs. This will be needed for instrumentations which set the span context from extracted propagation headers.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded many tests for mapping logic and interaction with OpenTelemetry. There are test for the \"OpenTelemetry sandwich\" problem, where OpenCensus and OpenTelemetry instrumentation should interoperate.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated - done in next PR https://github.com/open-telemetry/opentelemetry-python/pull/3211\r\n",
    "head_branch": "opencensus-trace-shim",
    "is_a_fork": true,
    "comments": [
      "Thanks for reviews everyone. I just realized we probably need to bridge the Context APIs as well for instrumentations which extract a Context with propagators e.g. [opencensus-ext-flask](https://github.com/census-instrumentation/opencensus-python/blob/fd064f438c5e490d25b004ee2545be55d2e28679/contrib/opencensus-ext-flask/opencensus/ext/flask/flask_middleware.py#L147-L153).\r\n\r\nI'll work on this in a separate PR and track it in the issue.",
      "> Also to confirm, this does NOT include the bridge for propagation right?\r\n\r\nCorrect. I updated https://github.com/open-telemetry/opentelemetry-python/issues/3203 to track it.",
      "@jeremydvoss PTAL."
    ],
    "commit_messages": [
      "Add OpenCensus trace bridge/shim (#3210)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9a44ee515ce6a4e34d",
    "number": 3206,
    "body": "This is done in order to more accurately document the three kinds of instrumentation we offer: manual, programmatic and automatic.\r\n\r\nFixes #3205\r\n\r\nThis PR needs a change in the OTel documentation repository, opening as draft while I work on that other PR.",
    "head_branch": "issue_3205",
    "is_a_fork": true,
    "comments": [
      "Opened https://github.com/open-telemetry/opentelemetry.io/issues/2436 to track the changes needed in the documentation repository."
    ],
    "commit_messages": [
      "Rename instrumentation examples (#3206)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9b44ee515ce6a4e34e",
    "number": 3204,
    "body": "# Description\r\n\r\nScaffold a package for the OpenCensus shim. This includes empty docs, example, package directory, and test setup.\r\n\r\nThe subsequent PR will implement the Trace shim/bridge.\r\n\r\nPart of #3203\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTox tests run and pass. I have a draft of the actual shim in a dependent branch.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated – I will add an entry when the actual implementation is added in the next PR.\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "opencensus-trace-shim-init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Initialize package and docs for OpenCensus shim (#3204)\n\n* Initialize package and docs for opencensus shim\r\n\r\n* Fix lint and remove pypy tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9b44ee515ce6a4e34f",
    "number": 3197,
    "body": "# Description\r\n\r\nThe indent parameter was passed down to the resource metric's to_json method, but not used in MetricsData. This change fixes that.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTested this by running the getting started example code. The output used to be:\r\n\r\n```json\r\n{\"resource_metrics\": [{\"resource\": {\"attributes\": {\"telemetry.sdk.language\": \"python\", \"telemetry.sdk.name\": \"opentelemetry\", \"telemetry.sdk.version\": \"1.17.0.dev0\", \"service.name\": \"unknown_service\"}, \"schema_url\": \"\"}, \"scope_metrics\": [{\"scope\": {\"name\": \"getting-started\", \"version\": \"0.1.2\", \"schema_url\": \"\"}, \"metrics\": [{\"name\": \"counter\", \"description\": \"\", \"unit\": \"\", \"data\": {\"data_points\": [{\"attributes\": {}, \"start_time_unix_nano\": 1677187635593555000, \"time_unix_nano\": 1677187635593924000, \"value\": 1}], \"aggregation_temporality\": 2, \"is_monotonic\": true}}, {\"name\": \"updown_counter\", \"description\": \"\", \"unit\": \"\", \"data\": {\"data_points\": [{\"attributes\": {}, \"start_time_unix_nano\": 1677187635593610000, \"time_unix_nano\": 1677187635593924000, \"value\": -4}], \"aggregation_temporality\": 2, \"is_monotonic\": false}}, {\"name\": \"histogram\", \"description\": \"\", \"unit\": \"\", \"data\": {\"data_points\": [{\"attributes\": {}, \"start_time_unix_nano\": 1677187635593649000, \"time_unix_nano\": 1677187635593924000, \"count\": 1, \"sum\": 99.9, \"bucket_counts\": [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"explicit_bounds\": [0.0, 5.0, 10.0, 25.0, 50.0, 75.0, 100.0, 250.0, 500.0, 750.0, 1000.0, 2500.0, 5000.0, 7500.0, 10000.0], \"min\": 99.9, \"max\": 99.9}], \"aggregation_temporality\": 2}}, {\"name\": \"observable_counter\", \"description\": \"\", \"unit\": \"\", \"data\": {\"data_points\": [{\"attributes\": {}, \"start_time_unix_nano\": 1677187635593837000, \"time_unix_nano\": 1677187635593924000, \"value\": 1}], \"aggregation_temporality\": 2, \"is_monotonic\": true}}, {\"name\": \"observable_updown_counter\", \"description\": \"\", \"unit\": \"\", \"data\": {\"data_points\": [{\"attributes\": {}, \"start_time_unix_nano\": 1677187635593869000, \"time_unix_nano\": 1677187635593924000, \"value\": -10}], \"aggregation_temporality\": 2, \"is_monotonic\": false}}, {\"name\": \"gauge\", \"description\": \"\", \"unit\": \"\", \"data\": {\"data_points\": [{\"attributes\": {}, \"start_time_unix_nano\": 0, \"time_unix_nano\": 1677187635593924000, \"value\": 9}]}}], \"schema_url\": \"\"}], \"schema_url\": \"\"}]}\r\n```\r\n\r\nIt's now:\r\n\r\n```json\r\n{\r\n    \"resource_metrics\": [\r\n        {\r\n            \"resource\": {\r\n                \"attributes\": {\r\n                    \"telemetry.sdk.language\": \"python\",\r\n                    \"telemetry.sdk.name\": \"opentelemetry\",\r\n                    \"telemetry.sdk.version\": \"1.17.0.dev0\",\r\n                    \"service.name\": \"unknown_service\"\r\n                },\r\n                \"schema_url\": \"\"\r\n            },\r\n            \"scope_metrics\": [\r\n                {\r\n                    \"scope\": {\r\n                        \"name\": \"getting-started\",\r\n                        \"version\": \"0.1.2\",\r\n                        \"schema_url\": \"\"\r\n                    },\r\n                    \"metrics\": [\r\n                        {\r\n                            \"name\": \"counter\",\r\n                            \"description\": \"\",\r\n                            \"unit\": \"\",\r\n                            \"data\": {\r\n                                \"data_points\": [\r\n                                    {\r\n                                        \"attributes\": {},\r\n                                        \"start_time_unix_nano\": 1677187655866373000,\r\n                                        \"time_unix_nano\": 1677187655866615000,\r\n                                        \"value\": 1\r\n                                    }\r\n                                ],\r\n                                \"aggregation_temporality\": 2,\r\n                                \"is_monotonic\": true\r\n                            }\r\n                        },\r\n                        {\r\n                            \"name\": \"updown_counter\",\r\n                            \"description\": \"\",\r\n                            \"unit\": \"\",\r\n                            \"data\": {\r\n                                \"data_points\": [\r\n                                    {\r\n                                        \"attributes\": {},\r\n                                        \"start_time_unix_nano\": 1677187655866404000,\r\n                                        \"time_unix_nano\": 1677187655866615000,\r\n                                        \"value\": -4\r\n                                    }\r\n                                ],\r\n                                \"aggregation_temporality\": 2,\r\n                                \"is_monotonic\": false\r\n                            }\r\n                        },\r\n                        {\r\n                            \"name\": \"histogram\",\r\n                            \"description\": \"\",\r\n                            \"unit\": \"\",\r\n                            \"data\": {\r\n                                \"data_points\": [\r\n                                    {\r\n                                        \"attributes\": {},\r\n                                        \"start_time_unix_nano\": 1677187655866431000,\r\n                                        \"time_unix_nano\": 1677187655866615000,\r\n                                        \"count\": 1,\r\n                                        \"sum\": 99.9,\r\n                                        \"bucket_counts\": [\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            1,\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            0\r\n                                        ],\r\n                                        \"explicit_bounds\": [\r\n                                            0.0,\r\n                                            5.0,\r\n                                            10.0,\r\n                                            25.0,\r\n                                            50.0,\r\n                                            75.0,\r\n                                            100.0,\r\n                                            250.0,\r\n                                            500.0,\r\n                                            750.0,\r\n                                            1000.0,\r\n                                            2500.0,\r\n                                            5000.0,\r\n                                            7500.0,\r\n                                            10000.0\r\n                                        ],\r\n                                        \"min\": 99.9,\r\n                                        \"max\": 99.9\r\n                                    }\r\n                                ],\r\n                                \"aggregation_temporality\": 2\r\n                            }\r\n                        },\r\n                        {\r\n                            \"name\": \"observable_counter\",\r\n                            \"description\": \"\",\r\n                            \"unit\": \"\",\r\n                            \"data\": {\r\n                                \"data_points\": [\r\n                                    {\r\n                                        \"attributes\": {},\r\n                                        \"start_time_unix_nano\": 1677187655866561000,\r\n                                        \"time_unix_nano\": 1677187655866615000,\r\n                                        \"value\": 1\r\n                                    }\r\n                                ],\r\n                                \"aggregation_temporality\": 2,\r\n                                \"is_monotonic\": true\r\n                            }\r\n                        },\r\n                        {\r\n                            \"name\": \"observable_updown_counter\",\r\n                            \"description\": \"\",\r\n                            \"unit\": \"\",\r\n                            \"data\": {\r\n                                \"data_points\": [\r\n                                    {\r\n                                        \"attributes\": {},\r\n                                        \"start_time_unix_nano\": 1677187655866578000,\r\n                                        \"time_unix_nano\": 1677187655866615000,\r\n                                        \"value\": -10\r\n                                    }\r\n                                ],\r\n                                \"aggregation_temporality\": 2,\r\n                                \"is_monotonic\": false\r\n                            }\r\n                        },\r\n                        {\r\n                            \"name\": \"gauge\",\r\n                            \"description\": \"\",\r\n                            \"unit\": \"\",\r\n                            \"data\": {\r\n                                \"data_points\": [\r\n                                    {\r\n                                        \"attributes\": {},\r\n                                        \"start_time_unix_nano\": 0,\r\n                                        \"time_unix_nano\": 1677187655866615000,\r\n                                        \"value\": 9\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ],\r\n                    \"schema_url\": \"\"\r\n                }\r\n            ],\r\n            \"schema_url\": \"\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been update\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/add-indent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bugfix: indent not used in MetricsData to_json (#3197)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9c44ee515ce6a4e350",
    "number": 3196,
    "body": "# Description\r\n\r\nThis PR fixes https://github.com/open-telemetry/opentelemetry-python/issues/3089 - the problem with histogram metric type when the exporting the metrics with unchanged histogram value crashes the OTEL Collector.\r\n\r\nFixes #3089 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n## Setup\r\nHave a running OTEL Collector + Prometheus. \r\nOTEL Collector config:\r\n```yaml\r\nreceivers:\r\n  otlp/2:\r\n    protocols:\r\n      http:\r\n        endpoint: 0.0.0.0:7777\r\n\r\nprocessors:\r\n  batch:\r\n\r\nexporters:\r\n  logging:\r\n    verbosity: Detailed\r\n\r\n  prometheus:\r\n    endpoint: 0.0.0.0:9997\r\n    namespace: test-space\r\n    const_labels:\r\n      label1: value1\r\n    send_timestamps: true\r\n    metric_expiration: 180m\r\n    resource_to_telemetry_conversion:\r\n      enabled: true\r\n\r\nservice:\r\n  pipelines:\r\n    metrics:\r\n      receivers: [otlp/2]\r\n      exporters: [logging, prometheus]\r\n```\r\nPrometheus config:\r\n```yaml\r\nglobal:\r\n  scrape_interval:     15s\r\n  external_labels:\r\n    monitor: 'codelab-monitor'\r\nscrape_configs:\r\n  - job_name: 'prometheus'\r\n    scrape_interval: 5s\r\n    static_configs:\r\n      - targets: ['otl-collector:9997']\r\n```\r\n\r\nI've ran the following Python snippet (it's the minimal example I figured out to reproduce the issue):\r\n```python\r\nimport time\r\n\r\nfrom opentelemetry.exporter.otlp.proto.http.metric_exporter import OTLPMetricExporter\r\nfrom opentelemetry.metrics import get_meter_provider, set_meter_provider\r\nfrom opentelemetry.sdk.metrics import MeterProvider\r\nfrom opentelemetry.sdk.metrics.export import PeriodicExportingMetricReader\r\n\r\nexporter = OTLPMetricExporter(endpoint=\"http://localhost:7777/v1/metrics\")\r\nreader = PeriodicExportingMetricReader(exporter, export_interval_millis=1000)\r\n\r\nset_meter_provider(MeterProvider(metric_readers=[reader]))\r\nmeter = get_meter_provider().get_meter(\"myapp\", \"0.1.2\")\r\n\r\nhistogram = meter.create_histogram(\r\n    \"py_histogram\",\r\n    unit=\"ms\",\r\n    description=\"Test histogram\",\r\n)\r\n\r\ncounter = meter.create_counter(\r\n    f\"py_counter\",\r\n    unit=f\"items\",\r\n    description=f\"Test counter\"\r\n)\r\n\r\nhistogram.record(12)\r\ntime.sleep(1)\r\ncounter.add(1)\r\n```\r\nAnd checked the logs on OTEL collector.\r\nBefore the fix:\r\n```\r\nconfiguration-otl-collector-1  | 2023-02-22T22:56:21.074Z\tinfo\tMetricsExporter\t{\"kind\": \"exporter\", \"data_type\": \"metrics\", \"name\": \"logging\", \"#metrics\": 1}\r\nconfiguration-otl-collector-1  | 2023-02-22T22:56:21.074Z\tinfo\tResourceMetrics #0\r\nconfiguration-otl-collector-1  | Resource SchemaURL: \r\nconfiguration-otl-collector-1  | Resource attributes:\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.language: Str(python)\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.name: Str(opentelemetry)\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.version: Str(1.15.0)\r\nconfiguration-otl-collector-1  |      -> service.name: Str(unknown_service)\r\nconfiguration-otl-collector-1  | ScopeMetrics #0\r\nconfiguration-otl-collector-1  | ScopeMetrics SchemaURL: \r\nconfiguration-otl-collector-1  | InstrumentationScope myapp 0.1.2\r\nconfiguration-otl-collector-1  | Metric #0\r\nconfiguration-otl-collector-1  | Descriptor:\r\nconfiguration-otl-collector-1  |      -> Name: py_histogram\r\nconfiguration-otl-collector-1  |      -> Description: Test histogram\r\nconfiguration-otl-collector-1  |      -> Unit: ms\r\nconfiguration-otl-collector-1  |      -> DataType: Histogram\r\nconfiguration-otl-collector-1  |      -> AggregationTemporality: Cumulative\r\nconfiguration-otl-collector-1  | HistogramDataPoints #0\r\nconfiguration-otl-collector-1  | StartTimestamp: 2023-02-22 22:56:20.032467796 +0000 UTC\r\nconfiguration-otl-collector-1  | Timestamp: 2023-02-22 22:56:21.032682472 +0000 UTC\r\nconfiguration-otl-collector-1  | Count: 1\r\nconfiguration-otl-collector-1  | Sum: 12.000000\r\nconfiguration-otl-collector-1  | Min: 12.000000\r\nconfiguration-otl-collector-1  | Max: 12.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #0: 0.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #1: 5.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #2: 10.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #3: 25.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #4: 50.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #5: 75.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #6: 100.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #7: 250.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #8: 500.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #9: 750.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #10: 1000.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #11: 2500.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #12: 5000.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #13: 7500.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #14: 10000.000000\r\nconfiguration-otl-collector-1  | Buckets #0, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #1, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #2, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #3, Count: 1\r\nconfiguration-otl-collector-1  | Buckets #4, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #5, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #6, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #7, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #8, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #9, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #10, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #11, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #12, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #13, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #14, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #15, Count: 0\r\nconfiguration-otl-collector-1  | \t{\"kind\": \"exporter\", \"data_type\": \"metrics\", \"name\": \"logging\"}\r\nconfiguration-otl-collector-1  | 2023-02-22T22:56:21.075Z\tinfo\tMetricsExporter\t{\"kind\": \"exporter\", \"data_type\": \"metrics\", \"name\": \"logging\", \"#metrics\": 2}\r\nconfiguration-otl-collector-1  | 2023-02-22T22:56:21.075Z\tinfo\tResourceMetrics #0\r\nconfiguration-otl-collector-1  | Resource SchemaURL: \r\nconfiguration-otl-collector-1  | Resource attributes:\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.language: Str(python)\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.name: Str(opentelemetry)\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.version: Str(1.15.0)\r\nconfiguration-otl-collector-1  |      -> service.name: Str(unknown_service)\r\nconfiguration-otl-collector-1  | ScopeMetrics #0\r\nconfiguration-otl-collector-1  | ScopeMetrics SchemaURL: \r\nconfiguration-otl-collector-1  | InstrumentationScope myapp 0.1.2\r\nconfiguration-otl-collector-1  | Metric #0\r\nconfiguration-otl-collector-1  | Descriptor:\r\nconfiguration-otl-collector-1  |      -> Name: py_histogram\r\nconfiguration-otl-collector-1  |      -> Description: Test histogram\r\nconfiguration-otl-collector-1  |      -> Unit: ms\r\nconfiguration-otl-collector-1  |      -> DataType: Empty\r\nconfiguration-otl-collector-1  | Metric #1\r\nconfiguration-otl-collector-1  | Descriptor:\r\nconfiguration-otl-collector-1  |      -> Name: py_counter\r\nconfiguration-otl-collector-1  |      -> Description: Test counter\r\nconfiguration-otl-collector-1  |      -> Unit: items\r\nconfiguration-otl-collector-1  |      -> DataType: Sum\r\nconfiguration-otl-collector-1  |      -> IsMonotonic: true\r\nconfiguration-otl-collector-1  |      -> AggregationTemporality: Cumulative\r\nconfiguration-otl-collector-1  | NumberDataPoints #0\r\nconfiguration-otl-collector-1  | StartTimestamp: 2023-02-22 22:56:21.033651214 +0000 UTC\r\nconfiguration-otl-collector-1  | Timestamp: 2023-02-22 22:56:21.074523435 +0000 UTC\r\nconfiguration-otl-collector-1  | Value: 1\r\nconfiguration-otl-collector-1  | \t{\"kind\": \"exporter\", \"data_type\": \"metrics\", \"name\": \"logging\"}\r\nconfiguration-otl-collector-1  | 2023-02-22T22:56:21.075Z\terror\tprometheusexporter@v0.71.0/accumulator.go:105\tfailed to translate metric\t{\"kind\": \"exporter\", \"data_type\": \"metrics\", \"name\": \"prometheus\", \"data_type\": \"\\u0000\", \"metric_name\": \"py_histogram\"}\r\nconfiguration-otl-collector-1  | github.com/open-telemetry/opentelemetry-collector-contrib/exporter/prometheusexporter.(*lastValueAccumulator).addMetric\r\nconfiguration-otl-collector-1  | \tgithub.com/open-telemetry/opentelemetry-collector-contrib/exporter/prometheusexporter@v0.71.0/accumulator.go:105\r\nconfiguration-otl-collector-1  | github.com/open-telemetry/opentelemetry-collector-contrib/exporter/prometheusexporter.(*lastValueAccumulator).Accumulate\r\nconfiguration-otl-collector-1  | \tgithub.com/open-telemetry/opentelemetry-collector-contrib/exporter/prometheusexporter@v0.71.0/accumulator.go:82\r\nconfiguration-otl-collector-1  | github.com/open-telemetry/opentelemetry-collector-contrib/exporter/prometheusexporter.(*collector).processMetrics\r\nconfiguration-otl-collector-1  | \tgithub.com/open-telemetry/opentelemetry-collector-contrib/exporter/prometheusexporter@v0.71.0/collector.go:67\r\nconfiguration-otl-collector-1  | github.com/open-telemetry/opentelemetry-collector-contrib/exporter/prometheusexporter.(*prometheusExporter).ConsumeMetrics\r\nconfiguration-otl-collector-1  | \tgithub.com/open-telemetry/opentelemetry-collector-contrib/exporter/prometheusexporter@v0.71.0/prometheus.go:96\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/exporter/exporterhelper.(*metricsRequest).Export\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector@v0.71.0/exporter/exporterhelper/metrics.go:65\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/exporter/exporterhelper.(*timeoutSender).send\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector@v0.71.0/exporter/exporterhelper/common.go:208\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/exporter/exporterhelper.(*retrySender).send\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector@v0.71.0/exporter/exporterhelper/queued_retry.go:365\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/exporter/exporterhelper.(*metricsSenderWithObservability).send\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector@v0.71.0/exporter/exporterhelper/metrics.go:136\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/exporter/exporterhelper.(*queuedRetrySender).send\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector@v0.71.0/exporter/exporterhelper/queued_retry.go:301\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/exporter/exporterhelper.NewMetricsExporter.func2\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector@v0.71.0/exporter/exporterhelper/metrics.go:116\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/consumer.ConsumeMetricsFunc.ConsumeMetrics\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector/consumer@v0.71.0/metrics.go:36\r\nconfiguration-otl-collector-1  | github.com/open-telemetry/opentelemetry-collector-contrib/pkg/resourcetotelemetry.(*wrapperMetricsExporter).ConsumeMetrics\r\nconfiguration-otl-collector-1  | \tgithub.com/open-telemetry/opentelemetry-collector-contrib/pkg/resourcetotelemetry@v0.71.0/resource_to_telemetry.go:43\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/service/internal/fanoutconsumer.(*metricsConsumer).ConsumeMetrics\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector@v0.71.0/service/internal/fanoutconsumer/metrics.go:77\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/receiver/otlpreceiver/internal/metrics.(*Receiver).Export\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector/receiver/otlpreceiver@v0.71.0/internal/metrics/otlp.go:54\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/receiver/otlpreceiver.handleMetrics\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector/receiver/otlpreceiver@v0.71.0/otlphttp.go:73\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/receiver/otlpreceiver.(*otlpReceiver).registerMetricsConsumer.func1\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector/receiver/otlpreceiver@v0.71.0/otlp.go:235\r\nconfiguration-otl-collector-1  | net/http.HandlerFunc.ServeHTTP\r\nconfiguration-otl-collector-1  | \tnet/http/server.go:2109\r\nconfiguration-otl-collector-1  | net/http.(*ServeMux).ServeHTTP\r\nconfiguration-otl-collector-1  | \tnet/http/server.go:2487\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/config/confighttp.(*decompressor).wrap.func1\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector@v0.71.0/config/confighttp/compression.go:162\r\nconfiguration-otl-collector-1  | net/http.HandlerFunc.ServeHTTP\r\nconfiguration-otl-collector-1  | \tnet/http/server.go:2109\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp.(*Handler).ServeHTTP\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.39.0/handler.go:213\r\nconfiguration-otl-collector-1  | go.opentelemetry.io/collector/config/confighttp.(*clientInfoHandler).ServeHTTP\r\nconfiguration-otl-collector-1  | \tgo.opentelemetry.io/collector@v0.71.0/config/confighttp/clientinfohandler.go:39\r\nconfiguration-otl-collector-1  | net/http.serverHandler.ServeHTTP\r\nconfiguration-otl-collector-1  | \tnet/http/server.go:2947\r\nconfiguration-otl-collector-1  | net/http.(*conn).serve\r\nconfiguration-otl-collector-1  | \tnet/http/server.go:1991\r\n```\r\n\r\nAfter the fix:\r\n```\r\nconfiguration-otl-collector-1  | 2023-02-22T22:57:18.991Z\tinfo\tMetricsExporter\t{\"kind\": \"exporter\", \"data_type\": \"metrics\", \"name\": \"logging\", \"#metrics\": 1}\r\nconfiguration-otl-collector-1  | 2023-02-22T22:57:18.991Z\tinfo\tResourceMetrics #0\r\nconfiguration-otl-collector-1  | Resource SchemaURL: \r\nconfiguration-otl-collector-1  | Resource attributes:\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.language: Str(python)\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.name: Str(opentelemetry)\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.version: Str(1.15.0)\r\nconfiguration-otl-collector-1  |      -> service.name: Str(unknown_service)\r\nconfiguration-otl-collector-1  | ScopeMetrics #0\r\nconfiguration-otl-collector-1  | ScopeMetrics SchemaURL: \r\nconfiguration-otl-collector-1  | InstrumentationScope myapp 0.1.2\r\nconfiguration-otl-collector-1  | Metric #0\r\nconfiguration-otl-collector-1  | Descriptor:\r\nconfiguration-otl-collector-1  |      -> Name: py_histogram\r\nconfiguration-otl-collector-1  |      -> Description: Test histogram\r\nconfiguration-otl-collector-1  |      -> Unit: ms\r\nconfiguration-otl-collector-1  |      -> DataType: Histogram\r\nconfiguration-otl-collector-1  |      -> AggregationTemporality: Cumulative\r\nconfiguration-otl-collector-1  | HistogramDataPoints #0\r\nconfiguration-otl-collector-1  | StartTimestamp: 2023-02-22 22:57:17.949824054 +0000 UTC\r\nconfiguration-otl-collector-1  | Timestamp: 2023-02-22 22:57:18.949918969 +0000 UTC\r\nconfiguration-otl-collector-1  | Count: 1\r\nconfiguration-otl-collector-1  | Sum: 12.000000\r\nconfiguration-otl-collector-1  | Min: 12.000000\r\nconfiguration-otl-collector-1  | Max: 12.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #0: 0.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #1: 5.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #2: 10.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #3: 25.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #4: 50.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #5: 75.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #6: 100.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #7: 250.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #8: 500.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #9: 750.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #10: 1000.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #11: 2500.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #12: 5000.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #13: 7500.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #14: 10000.000000\r\nconfiguration-otl-collector-1  | Buckets #0, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #1, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #2, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #3, Count: 1\r\nconfiguration-otl-collector-1  | Buckets #4, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #5, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #6, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #7, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #8, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #9, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #10, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #11, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #12, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #13, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #14, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #15, Count: 0\r\nconfiguration-otl-collector-1  | \t{\"kind\": \"exporter\", \"data_type\": \"metrics\", \"name\": \"logging\"}\r\nconfiguration-otl-collector-1  | 2023-02-22T22:57:18.992Z\tinfo\tMetricsExporter\t{\"kind\": \"exporter\", \"data_type\": \"metrics\", \"name\": \"logging\", \"#metrics\": 2}\r\nconfiguration-otl-collector-1  | 2023-02-22T22:57:18.992Z\tinfo\tResourceMetrics #0\r\nconfiguration-otl-collector-1  | Resource SchemaURL: \r\nconfiguration-otl-collector-1  | Resource attributes:\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.language: Str(python)\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.name: Str(opentelemetry)\r\nconfiguration-otl-collector-1  |      -> telemetry.sdk.version: Str(1.15.0)\r\nconfiguration-otl-collector-1  |      -> service.name: Str(unknown_service)\r\nconfiguration-otl-collector-1  | ScopeMetrics #0\r\nconfiguration-otl-collector-1  | ScopeMetrics SchemaURL: \r\nconfiguration-otl-collector-1  | InstrumentationScope myapp 0.1.2\r\nconfiguration-otl-collector-1  | Metric #0\r\nconfiguration-otl-collector-1  | Descriptor:\r\nconfiguration-otl-collector-1  |      -> Name: py_histogram\r\nconfiguration-otl-collector-1  |      -> Description: Test histogram\r\nconfiguration-otl-collector-1  |      -> Unit: ms\r\nconfiguration-otl-collector-1  |      -> DataType: Histogram\r\nconfiguration-otl-collector-1  |      -> AggregationTemporality: Cumulative\r\nconfiguration-otl-collector-1  | HistogramDataPoints #0\r\nconfiguration-otl-collector-1  | StartTimestamp: 2023-02-22 22:57:17.949824054 +0000 UTC\r\nconfiguration-otl-collector-1  | Timestamp: 2023-02-22 22:57:18.949918969 +0000 UTC\r\nconfiguration-otl-collector-1  | Count: 1\r\nconfiguration-otl-collector-1  | Sum: 12.000000\r\nconfiguration-otl-collector-1  | Min: 12.000000\r\nconfiguration-otl-collector-1  | Max: 12.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #0: 0.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #1: 5.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #2: 10.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #3: 25.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #4: 50.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #5: 75.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #6: 100.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #7: 250.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #8: 500.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #9: 750.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #10: 1000.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #11: 2500.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #12: 5000.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #13: 7500.000000\r\nconfiguration-otl-collector-1  | ExplicitBounds #14: 10000.000000\r\nconfiguration-otl-collector-1  | Buckets #0, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #1, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #2, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #3, Count: 1\r\nconfiguration-otl-collector-1  | Buckets #4, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #5, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #6, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #7, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #8, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #9, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #10, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #11, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #12, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #13, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #14, Count: 0\r\nconfiguration-otl-collector-1  | Buckets #15, Count: 0\r\nconfiguration-otl-collector-1  | Metric #1\r\nconfiguration-otl-collector-1  | Descriptor:\r\nconfiguration-otl-collector-1  |      -> Name: py_counter\r\nconfiguration-otl-collector-1  |      -> Description: Test counter\r\nconfiguration-otl-collector-1  |      -> Unit: items\r\nconfiguration-otl-collector-1  |      -> DataType: Sum\r\nconfiguration-otl-collector-1  |      -> IsMonotonic: true\r\nconfiguration-otl-collector-1  |      -> AggregationTemporality: Cumulative\r\nconfiguration-otl-collector-1  | NumberDataPoints #0\r\nconfiguration-otl-collector-1  | StartTimestamp: 2023-02-22 22:57:18.951057692 +0000 UTC\r\nconfiguration-otl-collector-1  | Timestamp: 2023-02-22 22:57:18.991621073 +0000 UTC\r\nconfiguration-otl-collector-1  | Value: 1\r\nconfiguration-otl-collector-1  | \t{\"kind\": \"exporter\", \"data_type\": \"metrics\", \"name\": \"logging\"}\r\n```\r\n\r\nAlso ran unit tests to make sure that the change doesn't break anything.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-histogram-empty-type",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: DraggonFantasy  (e40098ac802ab73d4a6788aef7f179131db71e28)</li></ul>",
      "Any update on this?",
      "@DraggonFantasy \r\nAre you still working on this?",
      "#3089 was fixed by #3429, closing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9d44ee515ce6a4e351",
    "number": 3194,
    "body": "# Description\r\n\r\nThank you, @owais, for your dedicated efforts to the project's success and time as the maintainer and approver. Moving to emeritus since you are no longer involved with the SIG. You are always welcome to join back anytime when you find time for the project again. \r\n\r\nAnd thanks to @NathanielRN and @ashu658 for your contributions and time as an approver.\r\n\r\nThanks again, everyone. This project could not have been what it is today without your contributions, and we greatly appreciate that. After merging this PR, I will update the approver/maintainer list to reflect it so you won't be getting unnecessary notifications for the team-wide pings in the future. \r\n",
    "head_branch": "update-approvers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update approvers/maintainers list (#3194)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9e44ee515ce6a4e352",
    "number": 3191,
    "body": "# Description\r\n\r\nI started to implement celery metrics instrumentation and\r\nI figure out that flower.task.runtime.seconds metric name is missing in the semantic conventions\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-celery-metrics-to-semantic-conventions",
    "is_a_fork": true,
    "comments": [
      "@Akochavi flower was just a reference. We do not add any metric to semantic conventions that are not defined in the spec https://github.com/open-telemetry/opentelemetry-specification. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9f44ee515ce6a4e353",
    "number": 3190,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue-3183",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200c9f44ee515ce6a4e354",
    "number": 3188,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2822\r\n\r\nSome of the written information is no longer accurate or relevant.",
    "head_branch": "readme-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update docs (#3188)\n\n* Update docs\r\n\r\n* fix spell"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca044ee515ce6a4e355",
    "number": 3187,
    "body": "Copy log updates from `release/v1.16.x-0.37bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.16.x-0.37bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Copy change log updates from release/v1.16.x-0.37bx (#3187)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca144ee515ce6a4e356",
    "number": 3182,
    "body": "# Description\r\n\r\nMove the metrics basic test to TestBase class so each metric instrumentation could use those functions\r\nThe functions moved from the sqlalchemy instrumentation test and used  for urllib3, urllib, tornado:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/pull/1645\r\n\r\nRefactored from:\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/3092\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "Add-metrics-base-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add metrics base tests (#3182)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca244ee515ce6a4e357",
    "number": 3181,
    "body": "This is an experimental feature.\r\n\r\nFixes #3096\r\n\r\nThis feature adds a new environment variable `OTEL_EXPERIMENTAL_RESOURCE_DETECTORS` which while it does not exist yet in the spec, it is added here to show how this feature can work.\r\n\r\nThis PR is based on #3168.",
    "head_branch": "issue_3172",
    "is_a_fork": true,
    "comments": [
      "Does this work with the ECS resource detector in `opentelemetry-python-contrib` ?\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/afd842899700af49fe2825e4afd8fa615f5cf8d5/sdk-extension/opentelemetry-sdk-extension-aws/src/opentelemetry/sdk/extension/aws/resource/ecs.py#L34"
    ],
    "commit_messages": [
      "Incorporate resource detectors to auto instrumentation (#3181)\n\n* Make entry_points behave the same across Python versions\n\nFixes #3167\n\n* Refactor function\n\n* Fix mypy\n\n* Incorporate resource detectors to auto instrumentation\n\nThis is an experimental feature.\n\nFixes #3172\n\n* Rename environment variable\n\n* Revert previous commits\n\n* Refactor to use importlib-metadata library\n\n* Use get_aggregate_resources\n\n* Fix mypy\n\n* Add CHANGELOG entry\n\n* Fix typo in environment variable\n\n* Add OTELResourceDetector by default\n\n* Move to unreleased section\n\n* Fix entry point name in the documentation\n\n* Update opentelemetry-sdk/src/opentelemetry/sdk/resources/__init__.py\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\n\n---------\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca344ee515ce6a4e358",
    "number": 3180,
    "body": "Bumps [werkzeug](https://github.com/pallets/werkzeug) from 1.0.1 to 2.2.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/werkzeug/releases\">werkzeug's releases</a>.</em></p>\n<blockquote>\n<h2>2.2.3</h2>\n<p>This is a fix release for the 2.2.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-3\">https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/26?closed=1\">https://github.com/pallets/werkzeug/milestone/26?closed=1</a></li>\n</ul>\n<p>This release contains security fixes for:</p>\n<ul>\n<li><a href=\"https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323\">https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323</a></li>\n<li><a href=\"https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q\">https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q</a></li>\n</ul>\n<h2>2.2.2</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/werkzeug/releases/tag/2.2.0\">2.2.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-2\">https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/25?closed=1\">https://github.com/pallets/werkzeug/milestone/25?closed=1</a></li>\n</ul>\n<h2>2.2.1</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/werkzeug/releases/tag/2.2.0\">2.2.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-1\">https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/24?closed=1\">https://github.com/pallets/werkzeug/milestone/24?closed=1</a></li>\n</ul>\n<h2>2.2.0</h2>\n<p>This is a feature release, which includes new features and removes previously deprecated features. The 2.2.x branch is now the supported bugfix branch, the 2.1.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-0\">https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/20?closed=1\">https://github.com/pallets/werkzeug/milestone/20?closed=1</a></li>\n</ul>\n<h2>2.1.2</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/werkzeug/releases/tag/2.1.0\">2.1.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-2\">https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/22?closed=1\">https://github.com/pallets/werkzeug/milestone/22?closed=1</a></li>\n</ul>\n<h2>2.1.1</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/werkzeug/releases/tag/2.1.0\">2.1.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-1\">https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/19?closed=1\">https://github.com/pallets/werkzeug/milestone/19?closed=1</a></li>\n</ul>\n<h2>2.1.0</h2>\n<p>This is a feature release, which includes new features and removes previously deprecated features. The 2.1.x branch is now the supported bugfix branch, the 2.0.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-0\">https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/16?closed=1\">https://github.com/pallets/werkzeug/milestone/16?closed=1</a></li>\n</ul>\n<h2>2.0.3</h2>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.0.x/changes/#version-2-0-3\">https://werkzeug.palletsprojects.com/en/2.0.x/changes/#version-2-0-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/18?closed=1\">https://github.com/pallets/werkzeug/milestone/18?closed=1</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/werkzeug/blob/main/CHANGES.rst\">werkzeug's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 2.2.3</h2>\n<p>Released 2023-02-14</p>\n<ul>\n<li>Ensure that URL rules using path converters will redirect with strict slashes when\nthe trailing slash is missing. :issue:<code>2533</code></li>\n<li>Type signature for <code>get_json</code> specifies that return type is not optional when\n<code>silent=False</code>. :issue:<code>2508</code></li>\n<li><code>parse_content_range_header</code> returns <code>None</code> for a value like <code>bytes */-1</code>\nwhere the length is invalid, instead of raising an <code>AssertionError</code>. :issue:<code>2531</code></li>\n<li>Address remaining <code>ResourceWarning</code> related to the socket used by <code>run_simple</code>.\nRemove <code>prepare_socket</code>, which now happens when creating the server. :issue:<code>2421</code></li>\n<li>Update pre-existing headers for <code>multipart/form-data</code> requests with the test\nclient. :issue:<code>2549</code></li>\n<li>Fix handling of header extended parameters such that they are no longer quoted.\n:issue:<code>2529</code></li>\n<li><code>LimitedStream.read</code> works correctly when wrapping a stream that may not return\nthe requested size in one <code>read</code> call. :issue:<code>2558</code></li>\n<li>A cookie header that starts with <code>=</code> is treated as an empty key and discarded,\nrather than stripping the leading <code>==</code>.</li>\n<li>Specify a maximum number of multipart parts, default 1000, after which a\n<code>RequestEntityTooLarge</code> exception is raised on parsing. This mitigates a DoS\nattack where a larger number of form/file parts would result in disproportionate\nresource use.</li>\n</ul>\n<h2>Version 2.2.2</h2>\n<p>Released 2022-08-08</p>\n<ul>\n<li>Fix router to restore the 2.1 <code>strict_slashes == False</code> behaviour\nwhereby leaf-requests match branch rules and vice\nversa. :pr:<code>2489</code></li>\n<li>Fix router to identify invalid rules rather than hang parsing them,\nand to correctly parse <code>/</code> within converter arguments. :pr:<code>2489</code></li>\n<li>Update subpackage imports in :mod:<code>werkzeug.routing</code> to use the\n<code>import as</code> syntax for explicitly re-exporting public attributes.\n:pr:<code>2493</code></li>\n<li>Parsing of some invalid header characters is more robust. :pr:<code>2494</code></li>\n<li>When starting the development server, a warning not to use it in a\nproduction deployment is always shown. :issue:<code>2480</code></li>\n<li><code>LocalProxy.__wrapped__</code> is always set to the wrapped object when\nthe proxy is unbound, fixing an issue in doctest that would cause it\nto fail. :issue:<code>2485</code></li>\n<li>Address one <code>ResourceWarning</code> related to the socket used by\n<code>run_simple</code>. :issue:<code>2421</code></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/22a254fca2ad0130adbbcbd11d3de51bcb04a08b\"><code>22a254f</code></a> release version 2.2.3</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/517cac5a804e8c4dc4ed038bb20dacd038e7a9f1\"><code>517cac5</code></a> Merge pull request from GHSA-xg9f-g7g7-2323</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/babc8d9e8c9fa995ef26050698bc9b5a92803664\"><code>babc8d9</code></a> rewrite docs about request data limits</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/09449ee77934a0c883f5959785864ecae6aaa2c9\"><code>09449ee</code></a> clean up docs</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/fe899d0cdf767a7289a8bf746b7f72c2907a1b4b\"><code>fe899d0</code></a> limit the maximum number of multipart form parts</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/cf275f42acad1b5950c50ffe8ef58fe62cdce028\"><code>cf275f4</code></a> Merge pull request from GHSA-px8h-6qxv-m22q</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/8c2b4b82d0cade0d37e6a88e2cd2413878e8ebd4\"><code>8c2b4b8</code></a> don't strip leading = when parsing cookie</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/7c7ce5cb73f3f7d3b9c09340e4f322aeb583dbc5\"><code>7c7ce5c</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://github-redirect.dependabot.com/pallets/werkzeug/issues/2585\">#2585</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/19ae03e6a39b3f63fd08fef4fddae4385cdddf25\"><code>19ae03e</code></a> [pre-commit.ci] auto fixes from pre-commit.com hooks</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/a83d3b8bf070810874c8e8d03dcce270666e10fe\"><code>a83d3b8</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/werkzeug/compare/1.0.1...2.2.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=werkzeug&package-manager=pip&previous-version=1.0.1&new-version=2.2.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/werkzeug-2.2.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump werkzeug in /docs/examples/fork-process-model/flask-uwsgi (#3180)\n\nBumps [werkzeug](https://github.com/pallets/werkzeug) from 1.0.1 to 2.2.3.\r\n- [Release notes](https://github.com/pallets/werkzeug/releases)\r\n- [Changelog](https://github.com/pallets/werkzeug/blob/main/CHANGES.rst)\r\n- [Commits](https://github.com/pallets/werkzeug/compare/1.0.1...2.2.3)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: werkzeug\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca344ee515ce6a4e359",
    "number": 3179,
    "body": "Bumps [werkzeug](https://github.com/pallets/werkzeug) from 1.0.1 to 2.2.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/werkzeug/releases\">werkzeug's releases</a>.</em></p>\n<blockquote>\n<h2>2.2.3</h2>\n<p>This is a fix release for the 2.2.x release branch.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-3\">https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/26?closed=1\">https://github.com/pallets/werkzeug/milestone/26?closed=1</a></li>\n</ul>\n<p>This release contains security fixes for:</p>\n<ul>\n<li><a href=\"https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323\">https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323</a></li>\n<li><a href=\"https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q\">https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q</a></li>\n</ul>\n<h2>2.2.2</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/werkzeug/releases/tag/2.2.0\">2.2.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-2\">https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/25?closed=1\">https://github.com/pallets/werkzeug/milestone/25?closed=1</a></li>\n</ul>\n<h2>2.2.1</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/werkzeug/releases/tag/2.2.0\">2.2.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-1\">https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/24?closed=1\">https://github.com/pallets/werkzeug/milestone/24?closed=1</a></li>\n</ul>\n<h2>2.2.0</h2>\n<p>This is a feature release, which includes new features and removes previously deprecated features. The 2.2.x branch is now the supported bugfix branch, the 2.1.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-0\">https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-2-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/20?closed=1\">https://github.com/pallets/werkzeug/milestone/20?closed=1</a></li>\n</ul>\n<h2>2.1.2</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/werkzeug/releases/tag/2.1.0\">2.1.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-2\">https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-2</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/22?closed=1\">https://github.com/pallets/werkzeug/milestone/22?closed=1</a></li>\n</ul>\n<h2>2.1.1</h2>\n<p>This is a fix release for the <a href=\"https://github.com/pallets/werkzeug/releases/tag/2.1.0\">2.1.0</a> feature release.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-1\">https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-1</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/19?closed=1\">https://github.com/pallets/werkzeug/milestone/19?closed=1</a></li>\n</ul>\n<h2>2.1.0</h2>\n<p>This is a feature release, which includes new features and removes previously deprecated features. The 2.1.x branch is now the supported bugfix branch, the 2.0.x branch will become a tag marking the end of support for that branch. We encourage everyone to upgrade, and to use a tool such as <a href=\"https://pypi.org/project/pip-tools/\">pip-tools</a> to pin all dependencies and control upgrades.</p>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-0\">https://werkzeug.palletsprojects.com/en/2.1.x/changes/#version-2-1-0</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/16?closed=1\">https://github.com/pallets/werkzeug/milestone/16?closed=1</a></li>\n</ul>\n<h2>2.0.3</h2>\n<ul>\n<li>Changes: <a href=\"https://werkzeug.palletsprojects.com/en/2.0.x/changes/#version-2-0-3\">https://werkzeug.palletsprojects.com/en/2.0.x/changes/#version-2-0-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/werkzeug/milestone/18?closed=1\">https://github.com/pallets/werkzeug/milestone/18?closed=1</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/werkzeug/blob/main/CHANGES.rst\">werkzeug's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 2.2.3</h2>\n<p>Released 2023-02-14</p>\n<ul>\n<li>Ensure that URL rules using path converters will redirect with strict slashes when\nthe trailing slash is missing. :issue:<code>2533</code></li>\n<li>Type signature for <code>get_json</code> specifies that return type is not optional when\n<code>silent=False</code>. :issue:<code>2508</code></li>\n<li><code>parse_content_range_header</code> returns <code>None</code> for a value like <code>bytes */-1</code>\nwhere the length is invalid, instead of raising an <code>AssertionError</code>. :issue:<code>2531</code></li>\n<li>Address remaining <code>ResourceWarning</code> related to the socket used by <code>run_simple</code>.\nRemove <code>prepare_socket</code>, which now happens when creating the server. :issue:<code>2421</code></li>\n<li>Update pre-existing headers for <code>multipart/form-data</code> requests with the test\nclient. :issue:<code>2549</code></li>\n<li>Fix handling of header extended parameters such that they are no longer quoted.\n:issue:<code>2529</code></li>\n<li><code>LimitedStream.read</code> works correctly when wrapping a stream that may not return\nthe requested size in one <code>read</code> call. :issue:<code>2558</code></li>\n<li>A cookie header that starts with <code>=</code> is treated as an empty key and discarded,\nrather than stripping the leading <code>==</code>.</li>\n<li>Specify a maximum number of multipart parts, default 1000, after which a\n<code>RequestEntityTooLarge</code> exception is raised on parsing. This mitigates a DoS\nattack where a larger number of form/file parts would result in disproportionate\nresource use.</li>\n</ul>\n<h2>Version 2.2.2</h2>\n<p>Released 2022-08-08</p>\n<ul>\n<li>Fix router to restore the 2.1 <code>strict_slashes == False</code> behaviour\nwhereby leaf-requests match branch rules and vice\nversa. :pr:<code>2489</code></li>\n<li>Fix router to identify invalid rules rather than hang parsing them,\nand to correctly parse <code>/</code> within converter arguments. :pr:<code>2489</code></li>\n<li>Update subpackage imports in :mod:<code>werkzeug.routing</code> to use the\n<code>import as</code> syntax for explicitly re-exporting public attributes.\n:pr:<code>2493</code></li>\n<li>Parsing of some invalid header characters is more robust. :pr:<code>2494</code></li>\n<li>When starting the development server, a warning not to use it in a\nproduction deployment is always shown. :issue:<code>2480</code></li>\n<li><code>LocalProxy.__wrapped__</code> is always set to the wrapped object when\nthe proxy is unbound, fixing an issue in doctest that would cause it\nto fail. :issue:<code>2485</code></li>\n<li>Address one <code>ResourceWarning</code> related to the socket used by\n<code>run_simple</code>. :issue:<code>2421</code></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/22a254fca2ad0130adbbcbd11d3de51bcb04a08b\"><code>22a254f</code></a> release version 2.2.3</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/517cac5a804e8c4dc4ed038bb20dacd038e7a9f1\"><code>517cac5</code></a> Merge pull request from GHSA-xg9f-g7g7-2323</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/babc8d9e8c9fa995ef26050698bc9b5a92803664\"><code>babc8d9</code></a> rewrite docs about request data limits</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/09449ee77934a0c883f5959785864ecae6aaa2c9\"><code>09449ee</code></a> clean up docs</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/fe899d0cdf767a7289a8bf746b7f72c2907a1b4b\"><code>fe899d0</code></a> limit the maximum number of multipart form parts</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/cf275f42acad1b5950c50ffe8ef58fe62cdce028\"><code>cf275f4</code></a> Merge pull request from GHSA-px8h-6qxv-m22q</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/8c2b4b82d0cade0d37e6a88e2cd2413878e8ebd4\"><code>8c2b4b8</code></a> don't strip leading = when parsing cookie</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/7c7ce5cb73f3f7d3b9c09340e4f322aeb583dbc5\"><code>7c7ce5c</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://github-redirect.dependabot.com/pallets/werkzeug/issues/2585\">#2585</a>)</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/19ae03e6a39b3f63fd08fef4fddae4385cdddf25\"><code>19ae03e</code></a> [pre-commit.ci] auto fixes from pre-commit.com hooks</li>\n<li><a href=\"https://github.com/pallets/werkzeug/commit/a83d3b8bf070810874c8e8d03dcce270666e10fe\"><code>a83d3b8</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/werkzeug/compare/1.0.1...2.2.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=werkzeug&package-manager=pip&previous-version=1.0.1&new-version=2.2.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/werkzeug-2.2.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump werkzeug in /docs/examples/fork-process-model/flask-gunicorn (#3179)\n\nBumps [werkzeug](https://github.com/pallets/werkzeug) from 1.0.1 to 2.2.3.\r\n- [Release notes](https://github.com/pallets/werkzeug/releases)\r\n- [Changelog](https://github.com/pallets/werkzeug/blob/main/CHANGES.rst)\r\n- [Commits](https://github.com/pallets/werkzeug/compare/1.0.1...2.2.3)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: werkzeug\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca444ee515ce6a4e35a",
    "number": 3178,
    "body": "Update version to `1.17.0.dev/0.38b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.17.0.dev-0.38b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.17.0.dev/0.38b0.dev (#3178)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca544ee515ce6a4e35b",
    "number": 3177,
    "body": "Prepare release 1.16.0/0.37b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.16.0-0.37b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.16.x-0.37bx] Prepare release 1.16.0/0.37b0 (#3177)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca644ee515ce6a4e35c",
    "number": 3176,
    "body": "# Description\r\n\r\nFixes a configuration bug which causes the instrumentation to fall back on the default sampler when a built-in sampler is specified, due to the samplers missing from entry points. For details see description of #3175.\r\n\r\nP.S. I'm not a Python developer, so feedback on if this should be done other way is welcome.\r\n\r\nFixes #3175\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n- Existing unit tests\r\n- Reproduced the scenario described in #3175 with expected behavior\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-entrypoint-sampler",
    "is_a_fork": true,
    "comments": [
      "Hi @srikanthccv, sorry for the back and forth, I implemented it with your suggestion and cleaned up the PR. Hopefully now all is as should be.",
      "@srikanthccv you're right, that part was still missing. I added your suggestion. Hopefully now everything is fixed as expected.",
      "Hi. Thanks for this fix. Do you know when this fix will be available on PyPI? ",
      "most probably (early) next week based on our monthly release schedule. ",
      "> most probably (early) next week based on our monthly release schedule.\r\n\r\nThanks @srikanthccv 🙌🏽 "
    ],
    "commit_messages": [
      "Fix use of built-in samplers in SDK configuration (#3176)\n\n* Add built-in sampler classes\r\n\r\nSigned-off-by: Matej Gera <matej.gera@coralogix.com>\r\n\r\n* Add entry points for built-in samplers\r\n\r\nSigned-off-by: Matej Gera <matej.gera@coralogix.com>\r\n\r\n* Add CHANGELOG\r\n\r\nSigned-off-by: Matej Gera <matej.gera@coralogix.com>\r\n\r\n* Handle rate arg properly\r\n\r\nSigned-off-by: Matej Gera <matej.gera@coralogix.com>\r\n\r\n* Adjust class and entry points naming\r\n\r\nSigned-off-by: Matej Gera <matej.gera@coralogix.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Matej Gera <matej.gera@coralogix.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca744ee515ce6a4e35d",
    "number": 3170,
    "body": "See https://github.com/open-telemetry/community/blob/main/assets.md#opentelemetry-bot",
    "head_branch": "bot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Replace old BOT_TOKEN with org OPENTELEMETRYBOT_GITHUB_TOKEN (#3170)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca844ee515ce6a4e35e",
    "number": 3169,
    "body": "# Description\r\n\r\nThis separates Protobuf encoding into a separate package `opentelemetry-exporter-otlp-proto-common` which is then used by:\r\n\r\n* `opentelemetry-exporter-otlp-proto-grpc`\r\n* `opentelemetry-exporter-otlp-proto-http`\r\n\r\nFixes #3160\r\n\r\n## Type of change\r\n\r\n- [ ]  Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nTests have been moved from `opentelemetry-exporter-otlp-proto-grpc` and `opentelemetry-exporter-otlp-proto-http` to the new package\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "3160-separate-protobuf-encoding-into-a-separate-package",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jack-burridge-cfh  (48cfab5180bd1ea72eded19da62b636e21100a0f, 9e885f8e01bbf2b88424abb2fccfea08d2ed4ad0, 3fae96795a69f709cabc601a48f24cc28cae0f3c, 1e7f6b101abe0c160101ce6d4be47945baafa16e)</li></ul>",
      "@lzchen  @srikanthccv  I'm not entirely sure on the namings, at the moment I've added the encoders as:\r\n\r\n* `opentelemetry.exporter.otlp.proto.common.log_encoder.encode_logs`\r\n* `opentelemetry.exporter.otlp.proto.common.metrics_encoder.encode_metrics`\r\n* `opentelemetry.exporter.otlp.proto.common.trace_encoder.encode_spans`\r\n\r\nBut I am now thinking:\r\n\r\n* `opentelemetry.exporter.otlp.proto.common._log_encoder.encode`\r\n* `opentelemetry.exporter.otlp.proto.common.metric_encoder.encode`\r\n* `opentelemetry.exporter.otlp.proto.common.trace_encoder.encode`\r\n\r\n",
      "> @lzchen @srikanthccv do you have any idea why the naming checks are failing?\r\n\r\nIt looks like the check itself it broken in someway",
      "@jack-burridge-cfh \r\n\r\n> @lzchen @srikanthccv do you have any idea why the naming checks are failing?\r\n\r\nSorry, which naming checks are you referring to? There are a couple of tasks that are failing.",
      "> @jack-burridge-cfh\r\n> \r\n> > @lzchen @srikanthccv do you have any idea why the naming checks are failing?\r\n> \r\n> Sorry, which naming checks are you referring to? There are a couple of tasks that are failing.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/actions/runs/4353849906/jobs/7616565699 specifically, I'm going through the other tests",
      "> @jack-burridge-cfh\r\n> \r\n> > @lzchen @srikanthccv do you have any idea why the naming checks are failing?\r\n> \r\n> Sorry, which naming checks are you referring to? There are a couple of tasks that are failing.\r\n\r\n@lzchen It looked like a lot of those failures were dependencies for tests that weren't installed, is fixed with the last commit",
      "> I notice #2964 just got merged, was this also meant to be in the `http` package as well? I see that is missing.\r\n\r\n@ocelotl Did you mean to not include it?",
      "Anything that's not already there, we can address it separately. ",
      "> > I notice #2964 just got merged, was this also meant to be in the `http` package as well? I see that is missing.\r\n> \r\n> @ocelotl Did you mean to not include it?\r\n\r\nWe can address that issue separately.",
      "https://hub.docker.com/r/omnition/opencensus-collector looks to have been removed is there an alternative for those tests?",
      "@lzchen @srikanthccv  Can I go through resolving the conversations or will you?",
      "@jack-burridge-cfh you can resolve the outdated conversation if you believe the comment is addressed. I will take a look at the PR again.",
      "> @jack-burridge-cfh you can resolve the outdated conversation if you believe the comment is addressed. I will take a look at the PR again.\r\n\r\nDone",
      "@srikanthccv  The issues with the checks seem to be git-based ones which I can't reproduce locally, so I don't know how to fix those",
      "@jack-burridge-cfh \r\nSorry about the inconvenience. Builds seem to be failing (not related to your PR). We have a tracking issue [here](https://github.com/open-telemetry/opentelemetry-python/issues/3235) and will work to resolve it asap. In the meantime, we will be reviewing your PR :)",
      "I ran `markdown-link-check` locally and can't reproduce the error so looks like the server was just down when it was doing the check",
      "Overall LGTM. I am thinking about the import paths. It seems like one would end up using aliases if they want to use encoders.\r\n\r\n```\r\nopentelemetry.exporter.otlp.proto.common.metrics_encoder import encode as metrics_encode\r\nopentelemetry.exporter.otlp.proto.common.trace_encoder import encode as trace_encode\r\n```",
      "> Overall LGTM. I am thinking about the import paths. It seems like one would end up using aliases if they want to use encoders.\n> \n> ```\n> opentelemetry.exporter.otlp.proto.common.metrics_encoder import encode as metrics_encode\n> opentelemetry.exporter.otlp.proto.common.trace_encoder import encode as trace_encode\n> ```\n\nThe decision here was a conscious one, basically most uses will not involve multiple types of encoders, and  encourages you to keep them separate. I honestly cannot think of a reason you would, it's more likely an edge case. Like they are used here the encoders are likely to be used to write different types of exporters (Kafka etc) and these exporters are likely to be in different files.",
      "We have been explicit and verbose in the project. You can see it in many places in the project, including the exporters (`OTLPSpanExporter`, `OTLPMetricExporter`). And let's be explicit here as well. ",
      "> We have been explicit and verbose in the project. You can see it in many places in the project, including the exporters (`OTLPSpanExporter`, `OTLPMetricExporter`). And let's be explicit here as well.\r\n\r\nFair point. Done 😄 ",
      "LGTM from my side, I will let other approvers take a look once and then merge if they don't have any objections. Thank you for your continuous effort to for addressing the comments and get this merged. ",
      "> Solid refactoring! Thank you.\r\n\r\nIt's why I use PyCharm 😄 It may be cumbersome but the refactoring is fantastic",
      "@srikanthccv Any reason this cant be merged? or are we waiting for more people to look at it because of the scope of the change?"
    ],
    "commit_messages": [
      "Separate protobuf encoding into a separate package (#3169)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca844ee515ce6a4e35f",
    "number": 3168,
    "body": "Fixes #3167",
    "head_branch": "issue_3167",
    "is_a_fork": true,
    "comments": [
      "I'm still not sure about the purpose of this change. Could you be more specific about the [issue](https://github.com/open-telemetry/opentelemetry-python/issues/3167#issue-1575296311) description or provide an example?",
      "> I'm still not sure about the purpose of this change. Could you be more specific about the [issue](https://github.com/open-telemetry/opentelemetry-python/issues/3167#issue-1575296311) description or provide an example?\r\n\r\n@lzchen PTAL [here](https://github.com/open-telemetry/opentelemetry-python/issues/3167#issuecomment-1442586780).",
      "May be overridden by #3217.",
      "Closing in favor of #3217 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ca944ee515ce6a4e360",
    "number": 3164,
    "body": "Fixes #3163\r\n\r\nThis is another approach to solve the issue #3147 intends to solve but without using [`catch_warnings`](https://docs.python.org/3/library/warnings.html#warnings.catch_warnings) which is not thread-safe.",
    "head_branch": "issue_3163",
    "is_a_fork": true,
    "comments": [
      "Thanks!\r\n\r\nThis fixes the immediate bug of warnings being wrongfully enabled, but it doesn't fix the underlying issue of the need to work around this specific deprecation warning.\r\n\r\nI'm not familiar with the project, so I could be wrong, but it seems to me like the real fix for this issue would be to stop using the deprecated function in the first place.\r\n\r\nIf the workaround is a temporary measure to bridge the gap between deprecation and complete removal of the function, then it might be worth adding a comment about it as a note to people unfamiliar with the reason behind it, and as a reminder to clean it up later :slightly_smiling_face: "
    ],
    "commit_messages": [
      "Add line-specific filter to catch warning (#3164)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200caa44ee515ce6a4e361",
    "number": 3162,
    "body": "# Description\r\n\r\nUpdated log warning message to include another variable(`key`) value. To provide more context.\r\n\r\nFixes #3161 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n1. `tox -e py37-opentelemetry-api` (implicitly via `test_attributes.TestAttributes.test_clean_attribute`)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/warning-message-context",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: flaeppe / name: Petter Friberg  (cc3af7b7765e1c82ec86ad2d6eaad0f7ce661fab)</li></ul>"
    ],
    "commit_messages": [
      "Add attribute key to mixed types warning message (#3162)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cab44ee515ce6a4e362",
    "number": 3159,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3123\r\n\r\nI ran the script on this PR https://github.com/open-telemetry/opentelemetry-python/pull/3048, which removed public symbols as a part of refactoring work. It detects the following, which I scanned manually earlier.\r\n\r\n```\r\nThe code in this branch removes the following public symbols:\r\n\r\n- exporter/opentelemetry-exporter-otlp-proto-http/src/opentelemetry/exporter/otlp/proto/http/metric_exporter/__init__.py\r\n\tDEFAULT_COMPRESSION\r\n\tDEFAULT_ENDPOINT\r\n\tDEFAULT_METRICS_EXPORT_PATH\r\n\tDEFAULT_TIMEOUT\r\n\tOTLPMetricExporter\r\n\tget_resource_data\r\n\r\n- exporter/opentelemetry-exporter-otlp-proto-http/src/opentelemetry/exporter/otlp/proto/http/trace_exporter/__init__.py\r\n\tDEFAULT_COMPRESSION\r\n\tDEFAULT_ENDPOINT\r\n\tDEFAULT_TIMEOUT\r\n\tOTLPSpanExporter\r\n\r\nPlease make sure no public symbols are removed, if so, please consider deprecating them instead. After that, please label this PR with \"Skip Public API check\".\r\n```",
    "head_branch": "public-symbols-remove-check",
    "is_a_fork": true,
    "comments": [
      "@ocelotl PTAL"
    ],
    "commit_messages": [
      "update public_symbols_checker.py to detect removed symbols (#3159)\n\n* update public_symbols_checker.py to detect removed symbols\r\n\r\n* Update scripts/public_symbols_checker.py\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cac44ee515ce6a4e363",
    "number": 3158,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3121.",
    "head_branch": "deprecate-jaeger",
    "is_a_fork": true,
    "comments": [
      "Sure thing. I can add this in as many places as possible to get the people to notice and migrate by the timeline."
    ],
    "commit_messages": [
      "deprecate jaeger exporters (#3158)\n\n* deprecate jaeger exporters\r\n\r\n* correct version\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Add deprecation message to README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cac44ee515ce6a4e364",
    "number": 3157,
    "body": "… (#3041)\"\r\n\r\nThis reverts commit a11c0ccf416c4fde4dfeb2a970c72e4701ad0695.\r\n\r\nUntil we find a neat and correct way to fix it",
    "head_branch": "revert-warnings",
    "is_a_fork": true,
    "comments": [
      "What was the issue with this change? Doesn't https://github.com/open-telemetry/opentelemetry-python/pull/3147 attempt to solve the filter warning problem? @ocelotl ",
      "This changes a lot of warning logs to show up unexpectedly because of the reset change introduced in #3041. Reverting the change seemed like a sensible option until we figure out the proper fix for the original issue (deprecation warning when the tracer is created).",
      "will close this if the linked pull request solves the problem.",
      "Right, I have an idea for the issue, but let's revert this one first.",
      "The problem with the PR that is open right now is that the approach is not thread safe, I left a comment in the issue ",
      "Do we still plan to make a patch release with this revert? Thanks!"
    ],
    "commit_messages": [
      "Revert \"Suppress warning for SDK instantiation of InstrumentationInfo (#3041)\" (#3157)\n\nThis reverts commit a11c0ccf416c4fde4dfeb2a970c72e4701ad0695.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cad44ee515ce6a4e365",
    "number": 3156,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3086",
    "head_branch": "bump-api-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump min required api version for OTLP exporters (#3156)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cae44ee515ce6a4e366",
    "number": 3154,
    "body": "# Description\r\nthis is the proposed solution for [Issue 3153](https://github.com/open-telemetry/opentelemetry-python/issues/3153)\r\n\r\nThe inlined Python code used to retrieve the _RUNTIME_CONTEXT , although non-ambiguous in Python, is not clear enough \r\n for Nuitka compiler to generate C++ functionality with the same functionality as the one in original Python code\r\n\r\nNuitka generates C++ code that compiles and link successfully, but it generates error at runtime.\r\n\r\nFixes # (issue)\r\n\r\nThe code to retrieve _RUNTIME_CONTEXT is refactored without alteration of functionality, using a slightly explicit coding style that accommodates the Nuitka compiler and facilitates generation of C++ code with the same functionality as the original OpenTelemetry code \r\n\r\n## Type of change\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\nPython functionality is unchanged. \r\nThe new feature is that OpenTelemetry code can be compiled with Nuitka without this runtime error\r\n\r\n# How Has This Been Tested?\r\n\r\nTests were performed using the test case in [Issue 3153](https://github.com/open-telemetry/opentelemetry-python/issues/3153)\r\n\r\ntest results before the change:\r\n```\r\n(dev_venv) D:\\opentelemetry_nuitka_issue>test_case.exe\r\nLogging foo from test_case.exe\r\nFailed to load context: contextvars_context\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\smuntean\\AppData\\Local\\Temp\\ONE57C~1\\test_case.py\", line 18, in <module>\r\n    log.info(f\"Logging foo from {sys.argv[0]} \")\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\logging\\__init__.py\", line 1477, in info\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\logging\\__init__.py\", line 1624, in _log\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\logging\\__init__.py\", line 1634, in handle\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\logging\\__init__.py\", line 1696, in callHandlers\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\logging\\__init__.py\", line 968, in handle\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\opentelemetry\\sdk\\_logs\\_internal\\__init__.py\", line 382, in emit\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\opentelemetry\\sdk\\_logs\\_internal\\__init__.py\", line 361, in _translate\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\opentelemetry\\trace\\propagation\\__init__.py\", line 48, in get_current_span\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\opentelemetry\\context\\__init__.py\", line 96, in get_value\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\opentelemetry\\context\\__init__.py\", line 67, in wrapper\r\n  File \"C:\\Users\\xxxxxxxxx\\AppData\\Local\\Temp\\ONE57C~1\\opentelemetry\\context\\__init__.py\", line 131, in get_current\r\nAttributeError: 'NoneType' object has no attribute 'get_current'\r\n\r\n(dev_venv) D:\\opentelemetry_nuitka_issue>\r\n```\r\nTest result after change:\r\ntest results before the change:\r\n```\r\n(dev_venv) D:\\opentelemetry_nuitka_issue>test_case.exe\r\nLogging foo from test_case.exe\r\n(dev_venv) D:\\opentelemetry_nuitka_issue>\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sorin-ansys-nuitka-friendly-patch",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sorinansys / name: Sorin  (2351d9ba034c4edc2d3f374c8ab8bbe4cca0030b, 1b1daa7795d604146256eab2455123a3dec2561f)</li></ul>",
      "@sorinansys can you sign the CLA https://github.com/open-telemetry/opentelemetry-python/pull/3154#issuecomment-1412836188?",
      "Can you see if the issue is still happening on the main branch since https://github.com/open-telemetry/opentelemetry-python/pull/3047 was merged? We are no longer using `pkg_resources` here.",
      "> @sorinansys can you sign the CLA [#3154 (comment)](https://github.com/open-telemetry/opentelemetry-python/pull/3154#issuecomment-1412836188)?\r\n\r\n@aabmass , I am currently working with my employer to get the CLA manager signature. Should not take long. Thank you for the reminder.  ",
      "> Can you see if the issue is still happening on the main branch since #3047 was merged? We are no longer using `pkg_resources` here.\r\n\r\nSure. I will checkout the code, run the tests and let you know the outcome.",
      "> Can you see if the issue is still happening on the main branch since #3047 was merged? We are no longer using `pkg_resources` here.\r\n\r\nHi @aabmass I confirm that I can still see the issue after the #3407 was merged in main. I will merge main on my branch and then accommodate the merged code to Nuitka compilation. Sorry for the late response. PR to be updated soon.",
      "@sorinansys can you try something else? This may be related to an issue we have with the `entry_points` function not having the same API for every Python version. Please try with the code in #3168 and let us know how that goes.",
      "> @sorinansys can you try something else? This may be related to an issue we have with the `entry_points` function not having the same API for every Python version. Please try with the code in #3168 and let us know how that goes.\r\n\r\n@ocelotl  The code in #3168 does not resolve the issue in #3153. Nuitka miscompiles the combination of Python `next` / `iter` to C++ code, causing a runtime error. In this PR I refactored the code using `next` / `iter` with a `for` / `break` to resolve it. Python code is equivalent, but when using `for` / `break` Nuitka also generates C++ equivalent code.\r\n\r\nPlease not that when running test case in #3153 with the most recent opentelemetry code an additional Nuitka runtime error is thrown when importing opentelemetry.sdk.resources module. I am looking to see if there is a solution for that error also\r\n\r\nThank you",
      "> @sorinansys can you try something else? This may be related to an issue we have with the `entry_points` function not having the same API for every Python version. Please try with the code in #3168 and let us know how that goes.\r\n\r\n@ocelotl  The code in #3168 does not resolve the issue in #3153. Nuitka miscompiles the combination of Python `next` / `iter` to C++ code, causing a runtime error. In this PR I refactored the code using `next` / `iter` with a `for` / `break` to resolve it. Python code is equivalent, but when using `for` / `break` Nuitka also generates C++ equivalent code.\r\n\r\nPlease not that when running test case in #3153 with the most recent opentelemetry code an additional Nuitka runtime error is thrown when importing opentelemetry.sdk.resources module. I am looking to see if there is a solution for that error also\r\n\r\nThank you",
      "@aabmass @ocelotl , I've run several tests with a newer Nuitka (version 1.5.3) and the compilation of `next(iter)` Python code seems to generate C++ code with equivalent functionality. With the newer version of Nuitka the `for/break` refactory of `next(iter)` Python code does not seem to be needed.\r\n\r\nIssue #3153 is specific to Nuitka version 1.4.1. One can close the issue as described with the suggestion to update Nuitka, or merge this PR to make OTEL code compatible with older Nuitka version. I found both options reasonable. I will let you decide how to proceed.\r\n\r\nI will also add this comment in Issue #3153 \r\n\r\n",
      "@sorinansys I will close this since you mentioned it works with `1.5.3`. Also, I want to point out that we officially support CPython and PyPy (with some exceptions). Anything outside that, such as Nutika, it is their responsibility to keep the compatibility with CPython. Thank you."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200caf44ee515ce6a4e367",
    "number": 3151,
    "body": "# Description\r\n\r\nThis makes the capitalisation in-line with the W3C standard and the Otel go implementation where keys in baggage are allowed to have capital letters.\r\n\r\nIt might be a breaking change though as users who rely on keys being lower cased will see their code broken.\r\n\r\nFixes #3146\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit test\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/bagage-key-caps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix bagage key lowercasing (#3151)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb044ee515ce6a4e368",
    "number": 3149,
    "body": "Fixes #3148",
    "head_branch": "issue_3148",
    "is_a_fork": true,
    "comments": [
      "@tombruijn",
      "@tombruijn",
      "@ocelotl The GitHub workflow file also needs to be updated to the new Python version, like in this PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1609\r\n\r\nI see the same message in the lint, tracecontext and spellcheck steps in this PR.\r\n\r\n```\r\nspellcheck create: /home/runner/work/opentelemetry-python/opentelemetry-python/.tox/spellcheck\r\nSKIPPED: InterpreterNotFound: python3.10\r\n___________________________________ summary ____________________________________\r\nSKIPPED:  spellcheck: InterpreterNotFound: python3.10\r\n  congratulations :)\r\n```",
      "> @ocelotl The GitHub workflow file also needs to be updated to the new Python version, like in this PR: [open-telemetry/opentelemetry-python-contrib#1609](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1609)\r\n> \r\n> I see the same message in the lint, tracecontext and spellcheck steps in this PR.\r\n> \r\n> ```\r\n> spellcheck create: /home/runner/work/opentelemetry-python/opentelemetry-python/.tox/spellcheck\r\n> SKIPPED: InterpreterNotFound: python3.10\r\n> ___________________________________ summary ____________________________________\r\n> SKIPPED:  spellcheck: InterpreterNotFound: python3.10\r\n>   congratulations :)\r\n> ```\r\n\r\nNice catch, fixed :v:"
    ],
    "commit_messages": [
      "Update some test environments to 3.10 (#3149)\n\n* Update some test environments to 3.10\r\n\r\nFixes #3148\r\n\r\n* Update environments in workflows file as well"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb044ee515ce6a4e369",
    "number": 3147,
    "body": "# Description\r\n\r\nWarning filters were being reset, resulting in warnings suddenly popping up in unrelated spots due to instrumenting with OTel.\r\n\r\nFixes based on https://docs.python.org/3/library/warnings.html#temporarily-suppressing-warnings although there it is noted that this is not threadsafe. I haven't been able to make sure if this is an issue yet. @ocelotl was this the reason you used a different approach? In my opinion this non-thread safe approach makes more sense than just throwing away all filters.\r\n\r\nFixes #3102 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n-\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/warning-filter-reset",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: mjvankampen / name: Mark Jan van Kampen  (5d4ddb4220f1899c9645dd94c7fd28c6a1c1cce0, 57dbac5aae16e8dbc04722c4c1f7d324c510c8cd)</li></ul>",
      "I have been looking at this PR, I think there is a way to avoid the context manager and a lock if we tighten the warning filter to use line number, will add a more detailed comment when I get back home.",
      "Wouldn't it also be an option to just leave the deprecation warning until the root cause itself is fixed?",
      "@mjvankampen Thanks for your PR! This issue has been fixed by #3164, so I'll be closing this PR now :slightly_smiling_face: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb144ee515ce6a4e36a",
    "number": 3143,
    "body": "# Description\r\n\r\nUpdate all `__all__` declarations to statically define all members. This resolves error messages from IDE/static type checkers\r\n\r\nFixes #3141\r\n\r\n## Type of change\r\n\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan tox locally.\r\nNo new functionality \r\n\r\nThis enables static checkers such as pylint to now verify that imported objects are being used\r\n so removed a bunch of now redundant supress comments \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added N/A\r\n- [x] Documentation has been updated. Workaround removed from page in https://github.com/open-telemetry/opentelemetry.io/pull/2243\r\n",
    "head_branch": "static_all",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jenshnielsen / name: Jens Hedegaard Nielsen  (a95bde91ed17e5f6d041417236590379451e69e4, 937cc8dd01eb941cc3801962eaa71073bec9a397)</li></ul>",
      "This should be ready for review. I however noticed that the docs build fails. \r\n\r\n```\r\nsphinx.errors.SphinxWarning: /home/jenielse/source/repo/opentelemetry-python/.tox/docs/lib/python3.9/site-packages/opentelemetry/_logs/_internal/__init__.py:docstring of opentelemetry._logs._internal.LoggerProvider.get_logger:28:py:class reference target not found: opentelemetry._logs._internal.Logger\r\n```\r\n\r\nThis seems to be that Sphinx cannot find the reference for the Logger class in return types. Not sure why this is happening\r\n",
      "Does the docs pass if you move the `Logger` class to end of the file?",
      ">  Does the docs pass if you move the Logger class to end of the file?\r\n\r\nI will give it a try. I did try on a different branch to upgrade to newest Sphinx and replace autodoc_typehints with the build in sphinx feature. That seems to resolve this issue but triggers others",
      "Add an entry to the [`nitpick_ignore`](https://github.com/open-telemetry/opentelemetry-python/blob/209093bfbe3fae0fc29c693f55d6bb6a2d997aad/docs/conf.py#L98) list for this if it doesn't go away. "
    ],
    "commit_messages": [
      "Update `__all__` to statically define reexports (#3143)\n\n* Statically define __all__ for stable modules\r\n\r\nThis prevents errors from typecheckers since\r\nthey can now see that members are explicitly reexported\r\n\r\n* Add explicit __all__ to experimental _logs modules\r\n\r\n* Add changelog for 3143\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb244ee515ce6a4e36b",
    "number": 3142,
    "body": "# Description\r\n\r\nAn instance of InstrumentationScope is assigned to the property 'name' (string type) of the class 'Meter'. The implementation is hiding and returning invalid values for the attributes: name, version and schema_url.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Obtain the name of a meter for instance: `print(get_meter(\"example-meter\").name)` \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: andersoncarlosfs / name: Anderson Carlos Ferreira da Silva  (6df81bb8a567e97c252f90108aeb0c1d36abab40)</li></ul>",
      "> I wonder why these properties were made accessible in the first place?\r\n\r\nNo clue! However, I followed the documentation and the code source. I wanted to keep track of the meters that passed between functions.",
      "Please fix lint.",
      "> Please fix lint.\r\n\r\nDone!"
    ],
    "commit_messages": [
      "Fix: name property access on Meter returns InstrumentationScope (#3142)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb344ee515ce6a4e36c",
    "number": 3139,
    "body": "# Description\r\n\r\nRemove the workflow temporarily",
    "head_branch": "remove-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove update-sha workflow (#3139)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb444ee515ce6a4e36d",
    "number": 3138,
    "body": "# Description\r\n\r\nPartial fix for #1791. Implements the `shutdown` procedure for OTLP gRPC exporters.\r\n- Add `_shutdown` variable for checking if the exporter has been shutdown.\r\n- Prevent export if the `_shutdown` flag has been set. Log a warning message is exporter has been shutdown.\r\n- Use thread lock to synchronize the last export call before shutdown timeout. The `shutdown` method will wait until the `timeout_millis` if there is an ongoing export. If there is no ongiong export, set the `_shutdown` flag to prevent further exports and return.\r\n- Add unit tests for the `OTLPExporterMixIn` and the sub classes for traces and metrics. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `TestOTLPExporterMixin`\r\n  - `test_shutdown`: assert that the further exports don't happen after calling the `shutdown` method.\r\n  - `test_shutdown_wait_last_export`: assert that the shutdown method waits for at least `timeout_millis` time if an export is in progress before setting the `_shutdown` flag to prevent further exports. \r\n- [x] `TestOTLPMetricExporter` and `TestOTLPTracesExporter`\r\n  - same as above but uses the concrete sub classes with the available stubs. \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [?] Followed the style guidelines of this project\r\n  - I cannot run `tox -e lint` on my machine due to some issue with the `distutils` module. I have manually run `black` and `isort` commands but there are some changes which might be questionable. I'll try to fix the `distutils` package issues. \r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\n# Open Question\r\nThe OTLP gRPC exporters run in a daemon thread with an exponential backoff of max 64 seconds. This is questionable because this often leaves a hanging thread even if the main process has been shutdown. Should the export function stop after the shutdown flag has been set even if the retry is in progress?  ",
    "head_branch": "fix-1791-otlp-grpc-exporter-shutdown",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: girishc13 / name: Girish Chandrashekar  (3a9137833aeb5316b1033150886ac9809d5ddea5, 8bca278cc9be38de60ce92c42b38560dd7f7867b)</li></ul>",
      "@srikanthccv Any opinions on the open question in the PR description? After more investigation I found out that if the code doesn't end the exponential back off in the `OTLPExporterMixin.export` method even if the `shutdown` flag has been set.",
      "> Should the export function stop after the shutdown flag has been set even if the retry is in progress?\r\n\r\nAs soon as the shutdown request is received, it should do one last flush before exiting. IIRC there was no reliable way to cancel the ongoing export call and just try once before shutting down everything. I haven't looked at the implementation but if you have some ideas please suggest them. ",
      "Combining the last flush with the shutdown process can make the logic a bit more complicated. If nobody is complaining then let's leave it as it is. Otherwise we would need to change the `self._shutdown` flag to a `threading.Event` object which signals the thread executing the export. This signal can be used to stop the retry logic in the `OTLPExporterMixin.export` method earlier.",
      "Please fix the lint",
      "Thank you!",
      "@girishc13 @lzchen @srikanthccv \r\nI found a dead lock of grpc.OTLPSpanExporter with uwsgi parameter \"max-requests\", see that-->https://github.com/open-telemetry/opentelemetry-python/issues/3640\r\nI think the key is _export_lock\r\n\r\nwhy in grpc verision, use _export_lock, and why http.OTLPSpanExporter not need the lock flag?",
      "Hi @Liubey, either there was no HTTP exporter at the time or the author only addressed the issue for the gRPC exporter. "
    ],
    "commit_messages": [
      "Implement shutdown procedure for OTLP grpc exporters (#3138)\n\n* Implement shutdown procedure for OTLP grpc exporters\r\n\r\n- Add `_shutdown` variable for checking if the exporter has been\r\n  shutdown.\r\n- Prevent export if the `_shutdown` flag has been set. Log a warning\r\n  message is exporter has been shutdown.\r\n- Use thread lock to synchronize the last export call before shutdown\r\n  timeout. The `shutdown` method will wait until the `timeout_millis`\r\n  if there is an ongoing export. If there is no ongiong export, set the\r\n  `_shutdown` flag to prevent further exports and return.\r\n- Add unit tests for the `OTLPExporterMixIn` and the sub classes for\r\n  traces and metrics.\r\n\r\n* lint files\r\n\r\n* add changelog entry for fix\r\n\r\n* lint test files\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb444ee515ce6a4e36e",
    "number": 3137,
    "body": "# Description\r\nremove ability to set a global metric prefix for Prometheus exporter\r\n\r\nFixes #3077\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e py39-opentelemetry-exporter-prometheus\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "gursoz-1-3077",
    "is_a_fork": true,
    "comments": [
      "> lint\r\n\r\nFixed the lint issues related to the changes in the PR. There are other lint issues.",
      "They are related to this PR\r\n\r\n>/home/runner/work/opentelemetry-python/opentelemetry-python/exporter/opentelemetry-exporter-prometheus/tests/test_prometheus_exporter.py:55:13: F841 local variable 'exporter' is assigned to but never used\r\n[580](https://github.com/open-telemetry/opentelemetry-python/actions/runs/4018187303/jobs/6919839668#step:6:581)",
      "> They are related to this PR\r\n> \r\n> >\r\n\r\nGood catch, thanks. When I executed `tox -e lint` on my VM, it showed a lot of other errors and never reached this file. Next, I linted only the file under consideration and could see the error. Fixed now."
    ],
    "commit_messages": [
      "remove ability to set a global metric prefix for prometheus exporter (#3137)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb544ee515ce6a4e36f",
    "number": 3136,
    "body": "# Description\r\n\r\nRemove the ability to set a global metric prefix for Prometheus exporter.\r\n\r\nFixes # 3077\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e py39-opentelemetry-exporter-prometheus\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "gursoz-3077",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3136/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3136/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The commit (fb148fe5b567aa54f1ffe3cbb61bb4f97afd14f6, 5e392af763e4bb8a7f6842cbcbc7079b93117b53). This user is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb644ee515ce6a4e370",
    "number": 3128,
    "body": "# Description\r\n\r\nRemove spaces from example exporter User-Agent header to conform to RFC7231 & RFC7230.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3120\r\n\r\n## Type of change\r\n\r\nBug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Executed unit tests and other tox build commands\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nNo\r\n\r\n",
    "head_branch": "fidelity-20230110-102534",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: keithkroeger  (7fce9b8bcc56b25a0c3d801cdd97be5ad76023f9, fdede26b09e3fd74fa8c5b3d065caefdd72fdf08, 3119ae03ce2838aa0df8d80e0f11df96db3a725a, 322ebef604dfffdc730c1cd7cc5c95436c9903d0, cf07436467ce079254ff6d158d0f34ad748050b2, 08990d18b76ee3c5ed0f9c112a76bc9400b91338)</li></ul>",
      "Thank you @srikanthccv \nPlease let me know if I've missed some step that should be taken ",
      "Fix the lint",
      "> Fix the lint\r\n\r\nThank you.  This should be corrected.  Apologies for missing this\n\nClosed by mistake \n\nAll my best @srikanthccv ",
      "please rebase",
      "Hello @srikanthccv , rebase completed "
    ],
    "commit_messages": [
      "Fix User-Agent header value for OTLP exporters (#3128)\n\n* Update values as required for issue\r\n\r\n* add CHANGED_FILES link\r\n\r\n* update changelog\r\n\r\n* update test to validate setting\r\n\r\n* update only oltp exporter\r\n\r\n* update grpc exporter\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* remove CHANGED_FILES#\r\n\r\n* update location of imports for linting\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb744ee515ce6a4e371",
    "number": 3127,
    "body": "# Description\r\n\r\nFixed all found instances of \r\n`@tracer.start_as_current_span(\"name\"):`\r\nto\r\n`@tracer.start_as_current_span(\"name\")`\r\nas my understanding is decorators don't have trailing colons\r\n\r\nFixes #3093 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPurely commented code has changed. Shouldn't need to be tested. But very happy to run any suggested tests.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nNo\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "typo_fix",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: drichards188 / name: David Richards  (dc4b8a535f1a753602524cd7940b75789edb4fd2)</li></ul>"
    ],
    "commit_messages": [
      "fixed all instances of @tracer.start_as_current_span(\"name\"): to @tracer.start_as_current_span(\"name\") as decorators do not have colons (#3127)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb844ee515ce6a4e372",
    "number": 3126,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/3125",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix requirements file for example (#3126)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb844ee515ce6a4e373",
    "number": 3124,
    "body": "Without this, the error message simply specifies that some attribute has the incorrect type, but this is very difficult to debug without knowing which attribute it was.\r\n\r\nFor example, my google cloud run logs are littered with this line;\r\n```\r\n[__init__:99]: Invalid type NoneType for attribute value. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or a sequence of those types\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nLoggin format\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\nNo\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: aebrahim / name: Ali Ebrahim  (3cc55d0891ddc06aec9844aa499356ab503ef80e)</li></ul>",
      "Done! Thanks"
    ],
    "commit_messages": [
      "Add attribute name to type warning message. (#3124)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cb944ee515ce6a4e374",
    "number": 3119,
    "body": "# Description\r\n\r\nTo help keeping dependencies up-to-date,  this provides a script to generate the dependabot.yml config file. This allows to manage pip and github-actions package-ecosystems\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "I didn't have good experience with this bot, in the past, it would open a PR but then refuses to update with the main, so we used to close and manually do it ourselves. Will that still be the case?",
      "Yes it will open a PR per update, but I have not met thé behavior you are describing hère. This bug is certainly fixed now",
      "> Yes it will open a PR per update, but I have not met thé behavior you are describing hère. This bug is certainly fixed now\r\n\r\nI was referring to situation like this https://github.com/open-telemetry/opentelemetry-python/pull/2460"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cba44ee515ce6a4e375",
    "number": 3118,
    "body": "# Description\r\n\r\nThis doesn't make much difference as of now, but when the `Resource.create` implementation starts to create new IDs for the uniqueness guarantees (ex `service.instance.id`), It will end up creating three different ids each for signal. \r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e opentelemetry-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n\r\n",
    "head_branch": "single-resource",
    "is_a_fork": true,
    "comments": [
      "@sanketmehta28 reminder, please review again."
    ],
    "commit_messages": [
      "Create a single resource instance (#3118)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cbb44ee515ce6a4e376",
    "number": 3117,
    "body": "Contributes to https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1437\r\n\r\n## Example usage of the script\r\n\r\n```sh\r\npython scripts/update_sha.py --branch release/v1.15.x-0.36bx\r\n```\r\n\r\n## Example usage of workflow\r\n\r\nLeave a comment with the format `/update-sha {{branch_name}}` on the PR where you want to update the SHA. The workflow updates the SHA with the most recent commit from the `branch_name`.\r\n\r\n```\r\n/update-sha release/v1.15.x-0.36bx\r\n```\r\n\r\n## Important note: \r\n\r\nThe bot should have the `workflows` permission.\r\n\r\nTested the script and workflow here https://github.com/srikanthccv/animated-octo-parakeet/pull/3",
    "head_branch": "update_sha",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv \r\nThis is created as an explicit script because users can use this directly (like submitting a change that affects both repos) correct? This won't only be used for the automate release workflow?",
      "Yes, that was the intention. It could work something like a /update-sha branch command on PR or something similar and a bot can pick up that to update the SHA.",
      "I am not still not sure about the automated part. Should it be some command on PR or workflow or something else? But the idea is to eliminate the manual updating each time.",
      "@srikanthccv \r\n\r\n> I am not still not sure about the automated part. Should it be some command on PR or workflow or something else? But the idea is to eliminate the manual updating each time.\r\n\r\nAdding a label sounds like a good idea to me as you mentioned.",
      "Could you add an entry in [CONTRIBUTING](https://github.com/open-telemetry/opentelemetry-python/blob/main/CONTRIBUTING.md#contrib-repo) for example usage and an explanation of what the script does?",
      "I think the `/update-sha branch` command will be better in practice because one could run it multiple times, and it's easier to pass the branch name for the repo. Do you want me to update CONTRIBUTING now or when I have the workflow that updates the SHA fully ready?",
      "I initially planned to complete this in two PRs, one for the script and another for adding workflow. It's probably better done in a single PR. ",
      "> I think the /update-sha branch command will be better in practice because one could run it multiple times, and it's easier to pass the branch name for the repo.\r\n\r\nYeah this makes sense to me.\r\n\r\n> I initially planned to complete this in two PRs, one for the script and another for adding workflow. It's probably better done in a single PR.\r\n\r\nYup, single PR makes sense.",
      "Update SHA for the PRs coming from the forks can be tricky and sometimes even not possible because of org permission related concerns. This PR helps address the original goal of our release automation."
    ],
    "commit_messages": [
      "Add script & workflow to update contrib repo SHA from branch  (#3117)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cbc44ee515ce6a4e377",
    "number": 3116,
    "body": "# Description\r\n\r\nFixes #3061 \r\n\r\n",
    "head_branch": "issue-3061",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update docs/examples/logs/otel-collector-config.yaml (#3116)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cbd44ee515ce6a4e378",
    "number": 3115,
    "body": "# Description\r\n\r\nI started to implement dbapi metrics instrumentation and  \r\nI figure out that db.client.connections.usage metric name is missing in the semantic conventions\r\n\r\nAccording to the specs: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/semantic_conventions/database-metrics.md\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "Add-db-metrics-to-semantic-conventions",
    "is_a_fork": true,
    "comments": [
      "Thanks for the PR, but these are auto-generated files and are not to be modified by hand (although nothing prevents you from doing it). Here is the script that takes the spec version and produces the semconv files https://github.com/open-telemetry/opentelemetry-python/blob/main/scripts/semconv/generate.sh",
      "Ah, sorry, I see this is a DB semconv which was manually added. There was some issue which prevented us from making this automated. I think we can merge this. It would be better if we could auto-generate as we do for the tracing.",
      "Ohh I didn't know it should be auto-generated I saw that the http metric names are manually added.\r\nWhat is the issue that prevented us to make it automated?\r\nCan you merge this PR? and I will try to fix the issue and make it auto-generated\r\nDo you know if there is an open issue with that issue?",
      "This one https://github.com/open-telemetry/opentelemetry-python/issues/2977",
      "Thanks!\r\nPlease add skip changelog label\r\n",
      "I would suggest adding an entry since external users can consume this change.",
      "Ohh I see, Thank you for the comment"
    ],
    "commit_messages": [
      "Add db metric name to semantic conventions (#3115)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cbd44ee515ce6a4e379",
    "number": 3113,
    "body": "# Description\r\n\r\nUpdated import library for set_logger_provider in docs/examples/logs/example.py. The method has moved from opentelemetry.sdk._logs to opentelemetry._logs in release 1.15.0 thus causing import error for users running the examples.py with version 1.15.0.\r\n\r\nFixes #3088\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] tox\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "3088-update-example-logger-import-lib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes #3088 updated import library for set_logger_provider (#3113)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cbe44ee515ce6a4e37a",
    "number": 3111,
    "body": "# Description\r\n\r\nFixes a bug in the example code of Tracer\r\n\r\n## Type of change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I suppose docstrings changes won't break anything\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: HsuanTingLu / name: Hsuan-Ting Lu  (163c0dfbb14859dcfe9514a4f39206490ab9d02b)</li></ul>"
    ],
    "commit_messages": [
      "Fix bug in example (#3111)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cbf44ee515ce6a4e37b",
    "number": 3107,
    "body": "Fixes #3097",
    "head_branch": "issue_3097",
    "is_a_fork": true,
    "comments": [
      "Some time ago I had a conversation where @aabmass pointed out we should make public class attributes that are intended to be used by other classes even if doing that would make them user-available as well, with the corresponding consequence of increasing our backwards-compatibility commitments. The intention here was to make encapsulation meaningful since now our classes freely access private attributes of other classes without any checking.\r\n\r\nI understood the point of @aabmass but considered losing encapsulation the lesser of two evils when compared with increasing the increasing of the user-available API.\r\n\r\nI now think we have a possible solution, to use double underscore to indicate actual \"private\" attributes and single underscore to indicate attributes that can be accessed by other classes but not by the end users.\r\n\r\nThis PR also includes some testing changes because we should always use `[spec](https://docs.python.org/3/library/unittest.mock.html#autospeccing)`. A consecuence of using the approach defined above and `spec` is that private attributes are no longer defined in mocks of the refactored classes because they are not seen as part of the class API. That means they have to be added as private properties that return the double-underscored real private attribute.",
      "@ocelotl \r\n\r\nSeems like we want to apply this pattern to the rest of the codebase. @ocelotl  could you make a tracking issue to apply this change everywhere so it doesn't get lost?",
      "Converting to draft since these changes need to be applied to the entire codebase.",
      "I won't be working on this PR no more for the foreseeable future, closing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc044ee515ce6a4e37c",
    "number": 3106,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #3087\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue) **testing fix only; no library change**\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI applied these changes as a patch to the Fedora Linux `python-opentelemetry` package, then built it and ran the tests using `fedpkg mockbuild`. I confirmed that the tests I had to skip in the original report https://github.com/open-telemetry/opentelemetry-python/issues/3087 now succeed, and that `python-backoff` is still at 1.10.0 in Fedora Rawhide.\r\n\r\nYou should be able to test this by temporarily changing `\"backoff >= 1.10.0, < 3.0.0; python_version>='3.7'\"` to `\"backoff >= 1.10.0, < 2.0.0; python_version>='3.7'\"` in `exporter/opentelemetry-exporter-otlp-proto-http/pyproject.toml` and `exporter/opentelemetry-exporter-otlp-proto-grpc/pyproject.toml` and running the tests in the usual way.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated **not required**\r\n- [ ] Unit tests have been added **N/A**\r\n- [ ] Documentation has been updated **N/A**\r\n",
    "head_branch": "test-compat-backoff-v1",
    "is_a_fork": true,
    "comments": [
      "Dropped the changelog commit; rebased on `main` again."
    ],
    "commit_messages": [
      "Fix tests with pre-2.0 backoff (fix #3087) (#3106)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc144ee515ce6a4e37d",
    "number": 3100,
    "body": "# Description\r\n\r\nIn cases where collection times out, the period exporting reader thread should not terminate, but instead catch, log, and continue on after the regular interval seconds.\r\n\r\nPrior to this commit, a metric collection timeout would terminate the thread and stop reporting metrics to the wrapped exporter resulting in the appearance in observability tooling of metrics just stopping without reason.\r\n\r\nFixes #3098\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Added a new test to ensure the `OtelPeriodicExportingMetricReader` thread remains alive after a `MetricsTimeoutError` timeout error is raised by the collection process\r\n- [X] Added a new test to ensure the `OtelPeriodicExportingMetricReader` thread is killed for other exception types\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No. This is an SDK bugfix only.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "handle_metric_timeout_periodic_exporter",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: markallanson / name: Mark Allanson  (17927805bd9e8c8c727de1f9fa91f8dfa1bc34ef)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (ba079baa68c2a50ac4263d5bc1a57608e3fead18, 2eba89d2202f8f335db1a9024a86b43c9abdd81f, 97b97a17c73aeaaa3034e85bb7edc8e5cffbf24d, 5b2acaf4d2c07e6345acd034cc929e473fd8b646, b7a2ce34e11f96b0d92d4f0c29f086d4fcedddcc, f4d908579af18b4c86952bc16d2f5e1782ad06e3, e5a3ad9d2dc4c15dc1ddd3edd670f3cbd718d387, d9d06f60815ed3af1c9424514946268f08050972, cc0e39aa0e416a401f16ea3a85bf560a46f80235, 1afc3773c8e16c0b3a7c283d3d046e1e102feb82, 9fabc0fe59302d1672b1cf13fea0215326e10d5c)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (e083cbee031d58d453872c0d3a8ee9e2827c611e)</li></ul>",
      "Getting our company setup on EasyCLA at the moment.",
      "@markallanson is there any chance you can get CLA signed this week? I would like to get this included in the upcoming monthly release.",
      "> @markallanson is there any chance you can get CLA signed this week? I would like to get this included in the upcoming monthly release.\r\n\r\nI am off work this week but will follow up with legal/approver our side and see what can be done. ",
      "I am facing this issue too, could we get this PR merged? Thanks",
      "I am still chasing for the corporate CLA to be signed from our side. Will merge this in as soon as I can.",
      "@srikanthccv  The company is now configured for EasyCLA and all signed so can go ahead and merge this change.",
      "Please add a CHANGELOG entry and fix any workflow failures (there were some failures last time)."
    ],
    "commit_messages": [
      "PeriodicExportingMetricReader will continue collection times out (#3098) (#3100)\n\nIn cases where collection times out, the period exporting reader thread should\r\nnot terminate, but instead catch, log, and continue on after the regular interval\r\nseconds.\r\n\r\nPrior to this commit, a metric collection timeout would terminate the thread and\r\nstop reporting metrics to the wrapped exporter resulting in the appearance in\r\nobservability tooling of metrics just stopping without reason."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc244ee515ce6a4e37e",
    "number": 3099,
    "body": "# Description\r\n\r\nUpdated import library for set_logger_provider in docs/examples/logs/example.py. The method has moved from opentelemetry.sdk._logs to opentelemetry._logs in release 1.15.0 thus causing import error for users running the examples.py with version 1.15.0.\r\n\r\nFixes #3088 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] tox\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "3088-update-example-logger-import",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3099/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/3099/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (267b7b9b2207a39e6b1954534a4867f097a3e05f, d76c93edd36c517cdef726d3292d367f3e65779d)</li><li> :x: The commit (b4c3c0cbedd3c0100aaa5fe40804288b65ed7583, a96ba644c434f98a38a7d7d50ff13a00ef82d064). This user is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "Please sign the CLA",
      "> Please sign the CLA\r\n\r\nunable to change previous commits to associate with my email to add CLA. I am going to cancel this PR and raise a different one - https://github.com/open-telemetry/opentelemetry-python/pull/3113"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc244ee515ce6a4e37f",
    "number": 3095,
    "body": "# Description\r\n\r\nI found this by trying to use `importlib.reload`. \r\n\r\n```python\r\nimport importlib\r\nimport opentelemetry.sdk.metrics as metrics\r\nimportlib.reload(metrics)\r\n```\r\nwill raise error like this\r\n```python\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/gen/.pyenv/versions/3.11.1/lib/python3.11/importlib/__init__.py\", line 169, in reload\r\n    _bootstrap._exec(spec, module)\r\n  File \"<frozen importlib._bootstrap>\", line 621, in _exec\r\n  File \"<frozen importlib._bootstrap_external>\", line 940, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"/Users/gen/.pyenv/versions/3.11.1/lib/python3.11/site-packages/opentelemetry/sdk/metrics/__init__.py\", line 36, in <module>\r\n    value.__module__ = __name__\r\n    ^^^^^^^^^^^^^^^^\r\nAttributeError: 'str' object has no attribute '__module__'\r\n```\r\n\r\nThe `str` above is basically the `key` in the previous run of this loop.\r\n\r\nThough I understand that reload isn't any guaranteed behavior, but without `del key, value` it polluted the module level globals, that I think is unexected.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n```python\r\nimport importlib\r\nimport opentelemetry.sdk.metrics as metrics\r\nimportlib.reload(metrics)\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "gen/del_key_value_on_init",
    "is_a_fork": true,
    "comments": [
      "Is it possible to use private variables instead of deleting them?\r\nLike this:\r\nfor __key, __value in globals().copy().items():",
      "We have reverted to a static to define `__all__` (see #3143), thanks for this PR, though :slightly_smiling_face: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc344ee515ce6a4e380",
    "number": 3094,
    "body": "# Description\r\nAdd support for OTEL_EXPORTER_OTLP_LOGS_* env vars\r\n\r\nFixes # (issue)\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/2939\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Ran all tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "2939-log-exporter-env-support",
    "is_a_fork": true,
    "comments": [
      "Thanks for the PR, but the issue is assigned to someone already. It also has a pull request created prior to this. I am going to close this for that reason. Please pick something else which is not already assigned. Let me know if you need any help or have any questions.",
      "Ah should have gone through the whole thread. My bad. Thanks! I'll go through the other open issues."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc444ee515ce6a4e381",
    "number": 3092,
    "body": "# Description\r\nMove the metrics basic test to TestBase class so each metric instrumentation could use those functions\r\nThe functions moved from the tornado instrumentation test:\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/0f2451be26c87a366d44283022341fc904c88b22/instrumentation/opentelemetry-instrumentation-tornado/tests/test_metrics_instrumentation.py#L38\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "Move-metrics-basic-test-to-TestBase",
    "is_a_fork": true,
    "comments": [
      "Can you add a Skip Changelog label?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc544ee515ce6a4e382",
    "number": 3084,
    "body": "Update version to `1.16.0.dev/0.37b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.16.0.dev-0.37b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.16.0.dev/0.37b0.dev (#3084)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc644ee515ce6a4e383",
    "number": 3083,
    "body": "Prepare release 1.15.0/0.36b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.15.0-0.36b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.15.x-0.36bx] Prepare release 1.15.0/0.36b0 (#3083)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc744ee515ce6a4e384",
    "number": 3081,
    "body": "Fixes #3079\r\n\r\n@tox-dev we had to pin `tox` to `3.27.1` for test cases to work again, just in case this information helps you debug the issue.",
    "head_branch": "issue_3079",
    "is_a_fork": true,
    "comments": [
      "Should we update our contributing docs to say install the same version? ",
      "> Should we update our contributing docs to say install the same version?\r\n\r\nRight, updated it."
    ],
    "commit_messages": [
      "Fix tox version for CI (#3081)\n\nFixes #3079"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc744ee515ce6a4e385",
    "number": 3078,
    "body": "Related to #2889\r\n\r\nAdds comments that should help TC Metrics reviewers find the part of the implementation that implements each specification matrix requirement.",
    "head_branch": "issue_2889",
    "is_a_fork": true,
    "comments": [
      "What is a `SPEC:` comment? is it just for reading or is there some tooling around this?\r\n\r\nalso this doesn't actually fix the linked issue does it?",
      "> What is a `SPEC:` comment? is it just for reading or is there some tooling around this?\r\n> \r\n> also this doesn't actually fix the linked issue does it?\r\n\r\nUpdated the PR description.",
      "@ocelotl \r\nSame question as @aabmass:\r\n\r\n> is it just for reading or is there some tooling around this?\r\n\r\nIMO this is not explicitly needed and adds more bloat to the comments. Thoughts? @srikanthccv ",
      "I agree. Especially since Josh already completed much of his review and added a couple of bugs.",
      "No consensus on this PR, not critical as well since it only adds comments, closing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc844ee515ce6a4e386",
    "number": 3070,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/2880\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/3050\r\n\r\nI pinned `grpcio-tools==1.48.1` dev dependency which provides protoc 3.19.4. This version appears to generate code compatible with both protobuf 3.x and 4.x. Then I regenerated the protobufs, and added tox envs to test the relevant packages against both versions of protobuf.\r\n\r\nFinally I widened the protobuf version specifier in the `opentelemetry-proto` package.",
    "head_branch": "protoc-for-protobuf3-and-4",
    "is_a_fork": true,
    "comments": [
      "~This code actually passes with the latest protoc version (from the latest grpcio-tools package). I may bump the version again. See https://github.com/protocolbuffers/protobuf/issues/11123#issuecomment-1335705151~\r\n\r\nI tested it out and it actually failed for protobuf 3.19.. Leaving it as is and I updated the tox file to test specifically against protobuf 3.19.x. I think this is ready to go",
      "Thanks, @aabmass!",
      "A new release that includes these changes would be appreciated."
    ],
    "commit_messages": [
      "Regenerate opentelemetry-proto to be compatible with protobuf 3 and 4 (#3070)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cc944ee515ce6a4e387",
    "number": 3069,
    "body": "Part of TODO of this [pr](https://github.com/open-telemetry/opentelemetry-python/pull/3038#issue-1450214926)",
    "head_branch": "logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move logs to `_internal` folder (#3069)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cca44ee515ce6a4e388",
    "number": 3065,
    "body": "Fixes #3064",
    "head_branch": "issue_3064",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Skip test case when it runs under Windows and PyPy (#3065)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ccb44ee515ce6a4e389",
    "number": 3063,
    "body": "Fixes #3062",
    "head_branch": "issue_3062",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Exclude .git from codespell checking (#3063)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ccc44ee515ce6a4e38a",
    "number": 3059,
    "body": "# Description\r\n\r\nIn this PR, I would like to introduce a new feature in PeriodicExportingMetricsReader. Basically, it will have an additional feature which will allow the reader to receive zero interval (explicitly set by user). When the interval is set to zero, the PeriodicExportingMetricReader will not be automatically triggered to collect metrics in intervals, but rather rely on user to explicitly invoke collect to do so. The purpose is to support cases where user would rely on external triggering mechanism to perform collection.\r\n\r\nFixes # (issue)\r\n#3055 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] openteleemtry-sdk/tests/metrics/test_periodic_exporting_metric_reader.py\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Hey folks, thanks for discussing this PR with me.\r\nI'm just wondering... to see if it would be okay for me to implement a logic on existing PeriodicMetricReader, such that when given interval of 0, it will simply not trigger any collection/export. If that's the case, I can update my commit on this branch accordingly.",
      "I still think the `MetricReader` should address this i.e it's implementation should be complete and one can `collect` dynamically. I would like to hear others' thoughts on the spec interpretation.",
      "Hi all, thank you for all your interest in this PR.\r\nI have looked and contemplated, and so decided to modify my PR to not introduce a new ExportingMetricsReader, but rather modify the existing reader to support `zero interval` (suggested by @lzchen ), such that by setting up the interval as zero, it will not run a thread to trigger the collect() in set interval. This does meet the requirements, so I've modified the code with additional commits. I hope this PR would get the review and go through. Thank you!",
      "@howardyoo \r\n\r\nChange looks good. Could you add a working example docs folder under `metrics` to show a user how to call `collect` explicitly? Also, please add an entry to the CHANGELOG.",
      "@howardyoo \r\n\r\nAlso as a addition to a followup conversation I had with @srikanthccv, we don't want to set a precedence of advising users normally to use `collect` explicitly with the `PeriodicExportingMetricReader`. Could you also include a comment explicitly in the example to warn users of the implications of using `collect()` manually? Something along the lines of: \"Warning: Setting a time interval of 0 allows you to export metric records manually. Calling `collect()` explicitly is not officially recommended by OpenTelemetry in conjunction with the `PeriodicExportingMetricReader`. Use at your own risk\"",
      "> @howardyoo\r\n> \r\n> Also as a addition to a followup conversation I had with @srikanthccv, we don't want to set a precedence of advising users normally to use `collect` explicitly with the `PeriodicExportingMetricReader`. Could you also include a comment explicitly in the example to warn users of the implications of using `collect()` manually? Something along the lines of: \"Warning: Setting a time interval of 0 allows you to export metric records manually. Calling `collect()` explicitly is not officially recommended by OpenTelemetry in conjunction with the `PeriodicExportingMetricReader`. Use at your own risk\"\r\n\r\nYes, I believe I can do that, so will include this in the example. Thank you!",
      "@howardyoo \r\n\r\nActually after discussion it in our Python SIG, we've decided that it's better to treat this functionality as an internal implementation, rather than an actual feature, so it would be preferred to not have an explicit example for it. Apologies for the back and forth.",
      "Thanks for the PR @howardyoo. I have a concern with the magic value being zero. My expectation with a zero interval would be that metrics are constantly exported. I probably wouldn't recommend users doing that, but I can imagine someone opening an issue with this request, e.g. they only have asynchronous instruments and want to scrape as quickly as possible.\r\n\r\nIn the case of zero interval, you could also avoid creating a background thread as there is no waiting needed between calls.",
      "> @howardyoo\r\n> \r\n> Actually after discussion it in our Python SIG, we've decided that it's better to treat this functionality as an internal implementation, rather than an actual feature, so it would be preferred to not have an explicit example for it. Apologies for the back and forth.\r\n\r\nOk, I'm good with that. Updated commit by removing the examples and mention of it in the README.",
      "> Thanks for the PR @howardyoo. I have a concern with the magic value being zero. My expectation with a zero interval would be that metrics are constantly exported. I probably wouldn't recommend users doing that, but I can imagine someone opening an issue with this request, e.g. they only have asynchronous instruments and want to scrape as quickly as possible.\r\n> \r\n> In the case of zero interval, you could also avoid creating a background thread as there is no waiting needed between calls.\r\n\r\nI see,\r\nHowever, in that case, setting the zero value to constantly invoke collect without any intervals is quite dangerous and impractical, and thus needs to be avoided. In many other API's setting zero interval either disables certain interval feature, or even make the interval infinite, so if we could set the comments to let the user know properly, this would actually be a safer feature, in my opinion.",
      "> Any examples of such APIs? I notice some Python threading APIs use `-1` to indicate infinite timeout. Zero is just kind of unintuitive IMO, but not a strong opinion.\r\n> \r\n> > The purpose is to support cases where user would rely on external triggering mechanism to perform collection.\r\n> \r\n> I still think it would be cleaner and more explicit as a separate class, and we could avoid special cases in our code. But I see @lzchen opposed that\r\n\r\nI am not strongly opinionated on using `0` as the value to disable the interval, so would opt for `-1` if that's more appropriate. One thing, however, that I noticed is that the legal value for interval usually is higher than zero (e.g. https://learn.microsoft.com/en-us/dotnet/api/system.timers.timer.interval?view=net-7.0), and would typically result in exceptions. So,\r\n- we might use value `zero or less` to indicate the interval shouldn't be enabled. The value zero or less is actually correct that those values should not be allowed for a normal interval. \r\nWhat do you think?",
      "@howardyoo sorry for the back and forth, this was discussed during the last week SIG, we would prefer to have an approach that would make this clearer for the user, probably a specific class that wouldn't do periodic exporting, something like `OnDemandExporter`. I'll bring this to discussion today at the OTel spec sig and will update here.",
      "> @howardyoo sorry for the back and forth, this was discussed during the last week SIG, we would prefer to have an approach that would make this clearer for the user, probably a specific class that wouldn't do periodic exporting, something like `OnDemandExporter`. I'll bring this to discussion today at the OTel spec sig and will update here.\r\n\r\nHi @ocelotl , no worries! I'm glad that it was discussed and the project decided to have a better approach to this. Yes, I guess it goes in both ways, `on-demand reader` and also `on-demand exporter` that people can explicitly read and also export. Thank you!",
      "It was discussed in the Spec SIG, seems like it has been discussed already: https://github.com/open-telemetry/opentelemetry-specification/issues/2767",
      "yes, that is the issue that I created, in connection to my PR. Not sure\nwhether this was spec SIG discussion, though.\n\nOn Tue, Jan 24, 2023 at 10:16 AM Diego Hurtado ***@***.***>\nwrote:\n\n> It was discussed in the Spec SIG, seems like it has been discussed\n> already: open-telemetry/opentelemetry-specification#2767\n> <https://github.com/open-telemetry/opentelemetry-specification/issues/2767>\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/open-telemetry/opentelemetry-python/pull/3059#issuecomment-1402213435>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AHZNLLTSVETVROFZ4AHSXLTWT755XANCNFSM6AAAAAASOX5BQA>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n",
      "@open-telemetry/python-maintainers PTAL at [this](https://github.com/open-telemetry/opentelemetry-specification/issues/2767), it should help us decide where this feature goes and how it can be implemented.\r\n\r\n@howardyoo from what I understand, your objection to just using an infinite interval is the creation of the thread, right? Maybe we can tackle the issue there (I mean by using an infinite interval and not creating the thread in that case)?",
      "Yes, infinite interval is not a good solution, in my opinion (the thread\ntakes up resources and is not optimal). I guess if we do support value 0 or\nless to indicate the thread isn't created (rather than coming up with huge\ninfinite interval) - that would be much better.\n\nOn Tue, Jan 24, 2023 at 10:23 AM Diego Hurtado ***@***.***>\nwrote:\n\n> @open-telemetry/python-maintainers\n> <https://github.com/orgs/open-telemetry/teams/python-maintainers> PTAL at\n> this\n> <https://github.com/open-telemetry/opentelemetry-specification/issues/2767>,\n> it should help us decide where this feature goes and how it can be\n> implemented.\n>\n> @howardyoo <https://github.com/howardyoo> from what I understand, your\n> objection to just using an infinite interval is the creation of the thread,\n> right? Maybe we can tackle the issue there (I mean by using an infinite\n> interval and not creating the thread in that case)?\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/open-telemetry/opentelemetry-python/pull/3059#issuecomment-1402224346>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AHZNLLTS4ISWN6YTDKDNFKTWT76YZANCNFSM6AAAAAASOX5BQA>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n",
      "> Yes, infinite interval is not a good solution, in my opinion (the thread takes up resources and is not optimal). I guess if we do support value 0 or less to indicate the thread isn't created (rather than coming up with huge infinite interval) - that would be much better.\r\n\r\nI think using an infinite interval is better as it is semantically correct, it means it won't export by itself ever. Instead of using 0 or any other value, we can use infinite to indicate that thread is not to be created (just in case, Python supports infinite numbers: `from math import inf`).",
      "I see, in that case, as long as infinite value is defined and documented,\nbut I generally think we also need to make sure the reader does not support\nzero or negative value for the interval. Legally, having zero or negative\nvalue set for the interval is not correct - so some sort of logic to raise\nan exception if zero or negative value is received may also be necessary.\n\nOn Tue, Jan 24, 2023 at 10:38 AM Diego Hurtado ***@***.***>\nwrote:\n\n> Yes, infinite interval is not a good solution, in my opinion (the thread\n> takes up resources and is not optimal). I guess if we do support value 0 or\n> less to indicate the thread isn't created (rather than coming up with huge\n> infinite interval) - that would be much better.\n>\n> I think using infinite interval is better as it is semantically correct,\n> it won't export by itself ever. Instead of using 0 or any other value, we\n> can use infinite to indicate that thread is not to be created (Python\n> supports infinite numbers in math.inf).\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/open-telemetry/opentelemetry-python/pull/3059#issuecomment-1402246235>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AHZNLLSFQKTYGZRXDXIAPBDWUAAQ5ANCNFSM6AAAAAASOX5BQA>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n",
      "https://github.com/open-telemetry/opentelemetry-python/pull/3059\r\n\r\n> I see, in that case, as long as infinite value is defined and documented, but I generally think we also need to make sure the reader does not support zero or negative value for the interval. Legally, having zero or negative value set for the interval is not correct - so some sort of logic to raise an exception if zero or negative value is received may also be necessary.\r\n\r\nGood point, we should also make sure we don't support zero or less :+1: ",
      "> #3059\r\n> \r\n> > I see, in that case, as long as infinite value is defined and documented, but I generally think we also need to make sure the reader does not support zero or negative value for the interval. Legally, having zero or negative value set for the interval is not correct - so some sort of logic to raise an exception if zero or negative value is received may also be necessary.\r\n> \r\n> Good point, we should also make sure we don't support zero or less +1\r\n\r\n@srikanthccv @aabmass are you ok with using this approach?",
      "+1",
      "Hey! Just wanted to say thanks to @srikanthccv , @lzchen , @ocelotl , and @aabmass for all the thoughtful comment and reviews, approvals to make this go through. Really appreciated your support and feedbacks!",
      "There was a lot of back and forth from us, and thanks for being patient all along.",
      "when will the next release be? \r\nI need this feature greatly ",
      "probably next week",
      "Hey 👋 Stumbled upon this while trying to send a gauge from a short-lived  CLI command. That gauge should be sent when you run `mycli test <options> --export <endpoint> --format=otlp`.\r\n\r\nI thought this would be a perfect, even if unofficial, solution, but when I try to set the `export_interval_millis` to zero, I get the following error: `ValueError: interval value 0 is invalid                 and needs to be larger than zero and lower than infinity.`. So, it'd be great if anyone could tell me an alternative way on how to achieve one-time sending for short-lived programs like a CLI. The CLI should run in build pipelines and only send a status on the test/validation once every 24h and then exit. \r\n\r\nEdit: looking at the code, the error message is a bit misleading, as math.inf works. nvm :)",
      "Hi, I believe we had some means to do what you want to do, and I think we made the changes. Let me check to see whether that has been done.HowardSent from my iPhoneOn Mar 9, 2024, at 9:53 AM, Dominik Guhr ***@***.***> wrote:﻿\r\nHey 👋 Stumbled upon this while trying to add a gauge to a CLI that is sent when you run mycli test  --export --format=opentelemetry - I thought this would be a perfect, even if unofficial, solution, but when I try to set the export_interval_millis to zero, I get an error that it is not allowed to be used with zero nor infinity with the current api/sdk. So, it'd be great if anyone could tell me if the manual triggering still works or not.\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you were mentioned.Message ID: ***@***.***>",
      "An update:This was done about a year ago, so spent some time going back threads to read the history. So just to explain, setting the interval to zero was suggested originally but met a better suggestion of instead of setting to math.inf. If the math.inf was set as an interval, the periodic metric exporter should not get triggered periodically, and thus would need to be exported manually.Hope this helps!Sent from my iPhoneOn Mar 9, 2024, at 9:53 AM, Dominik Guhr ***@***.***> wrote:﻿\r\nHey 👋 Stumbled upon this while trying to add a gauge to a CLI that is sent when you run mycli test  --export --format=opentelemetry - I thought this would be a perfect, even if unofficial, solution, but when I try to set the export_interval_millis to zero, I get an error that it is not allowed to be used with zero nor infinity with the current api/sdk. So, it'd be great if anyone could tell me if the manual triggering still works or not.\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you were mentioned.Message ID: ***@***.***>",
      "Thanks for the clarification @howardyoo - yes, I figured it out by looking at the code for the Periodic metrics exporter. It was just that I trusted the attribute errors message too much after 0 didn't work- as written above, it states that math.inf also wouldn't work, so I expected to get the very same error using it. \r\nTurns out I did not. I guess it's like this on purpose, because \"unofficial\", but I'd argue there are more use cases coming in when things like buildpipeline-observability are growing in adoption. Though, what do I know 😅 Thanks again. All good here 👍",
      "> Thanks for the clarification @howardyoo - yes, I figured it out by looking at the code for the Periodic metrics exporter. It was just that I trusted the attribute errors message too much after 0 didn't work- as written above, it states that math.inf also wouldn't work, so I expected to get the very same error using it. Turns out I did not. I guess it's like this on purpose, because \"unofficial\", but I'd argue there are more use cases coming in when things like buildpipeline-observability are growing in adoption. Though, what do I know 😅 Thanks again. All good here 👍\r\n\r\nI actually went back and checked, and found out the error message stated: `needs to be larger than zero and lower than infinity.`, which is kind of not true (since math.inf would actually be accepted). However, I'm not sure whether there is a need to have more details on the message itself, like : `needs to be larger than zero and can or lower than infinity.` After thinking about this a bit more, I guess it might be worth raising an issue to switch this message."
    ],
    "commit_messages": [
      "PeriodicExportingMetricsReader with value = infinity to support explicit metric collection (#3059)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ccc44ee515ce6a4e38b",
    "number": 3058,
    "body": "Fixes #2934",
    "head_branch": "issue_2934",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix validation of baggage values (#3058)\n\n* Fix validation of baggage values\r\n\r\nFixes #2934\r\n\r\n* Remove test case"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ccd44ee515ce6a4e38c",
    "number": 3057,
    "body": "Fixes #3056",
    "head_branch": "issue_3056",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor comments in .flake8 (#3057)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cce44ee515ce6a4e38d",
    "number": 3048,
    "body": "# Description\r\n\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2990\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Refactoring\r\n\r\n\r\n# How Has This Been Tested?\r\n- [x] Ran existing tests.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "2990-refactor-http-logic",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sreeo / name: Sreeraj Rajan  (bc767f7305554068d59b0c8422de8ce3d29f9ed4, aee005afe461a122002f73a75123c7e52ec6f0e9, 4d25c8d8505f681028c72edd3e33502642fa16dc, 46457271a243a89e3f1358c6227ecfedcce482ba, cafe88b80a57ffa6c6c7ba79db89ad4cf430873a)</li></ul>",
      "@sreeo are you still working on this PR?",
      "> @sreeo are you still working on this PR?\r\n\r\nHey, I got caught up with some work. I will resume work on this issue this week and try to wrap this up",
      "Somebody did a major refactor and we created `otlp-proto-common` package, so I am not sure if this work is still relevant or what % of this work is still relevant.",
      "@sreeo \r\n\r\nAs @srikanthccv has mentioned, a lot of this work might possibly be not relevant anymore or needs to be refactored. Did you want to attempt to refactor this code to reflect the current codebase? If not, I will be closing this pr and perhaps someone may pick it up in the future."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ccf44ee515ce6a4e38e",
    "number": 3047,
    "body": "Fixes #2927",
    "head_branch": "issue_2927",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove usage of pkg_resources (#3047)\n\n* Remove usage of pkg_resources\r\n\r\nFixes #2927\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Add test case for _load_providers\r\n\r\n* Fix test case for 3.9\r\n\r\n* Fix lint\r\n\r\n* Fix 3.7 sdk tests\r\n\r\n* Fix lint\r\n\r\n* Fix lint\r\n\r\n* Fix mypy again\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Move to module\r\n\r\n* Fix SDK\r\n\r\n* Fix mypy\r\n\r\n* Refactor load call\r\n\r\n* Fix mypy\r\n\r\n* Fix lint\r\n\r\n* Fix opencensus exporter\r\n\r\n* Refactor implementation\r\n\r\n* Add missing dependency\r\n\r\n* Undo changes in shim\r\n\r\n* Fix dependency\r\n\r\n* Revert \"Undo changes in shim\"\r\n\r\nThis reverts commit bd82b8feb2ab38678bd62fd6a9a53db88dc2737d.\r\n\r\n* Update dependencies\r\n\r\n* Update dependency for opencensus exporter\r\n\r\n* Add descriptive error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd044ee515ce6a4e38f",
    "number": 3046,
    "body": "# Description\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/2847\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e sdk\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "decode-values-from-otel-resource-attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add url decode for OTEL_RESOUCE_ATTRIBUTES (#3046)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd044ee515ce6a4e390",
    "number": 3045,
    "body": "# Description\r\n\r\nThis PR updates the usage of set-output command in GH actions.\r\n\r\nReference : https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/\r\n\r\nChangeLog Entry is not required.\r\n\r\n\r\n",
    "head_branch": "set-output",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update the usage of set-output command in GH actions (#3045)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd144ee515ce6a4e391",
    "number": 3044,
    "body": "Fixes #2376\r\n\r\nFrom #2375\r\n\r\nThanks, @cincodenada!",
    "head_branch": "issue_2376",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (52ca7c7c63be8154bab7a607d49e84ac6bb18af6)</li></ul>"
    ],
    "commit_messages": [
      "Add a more informative error message when parsing ENV headers (#3044)\n\n* Add a more informative error message when parsing ENV headers\r\n\r\nAlso, rename the function to make it clear that this parsing is specific\r\nto headers provided via ENV variables.\r\n\r\nFixes #2376\r\n\r\n* Use parse_env_headers in metrics and logs as well\r\n\r\n* Fix lint\r\n\r\n* Fix mypy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd244ee515ce6a4e392",
    "number": 3041,
    "body": "Fixes #2831",
    "head_branch": "issue_2831",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Suppress warning for SDK instantiation of InstrumentationInfo (#3041)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd344ee515ce6a4e393",
    "number": 3040,
    "body": null,
    "head_branch": "issue_2880",
    "is_a_fork": true,
    "comments": [
      "@ocelotl I split the protoc version bump changes into a separate PR without the OTLP upgrade in it. I also updated tox to test against each version of protobuf. https://github.com/open-telemetry/opentelemetry-python/pull/3070\r\n\r\nLet's leave this one open to upgrade OTLP version to v0.19.0 but try to get #3070 in the next release.",
      "@ocelotl @aabmass \r\nWhat's the status of this pr? Is it still valid after https://github.com/open-telemetry/opentelemetry-python/pull/3070?",
      "Yes this is a separate issue",
      "Superseded by #3355"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd444ee515ce6a4e394",
    "number": 3039,
    "body": "There is a typo in the spelling of METRICS.\r\n\r\n\r\nFixes #[ (3036)](https://github.com/open-telemetry/opentelemetry-python/issues/3036)\r\n",
    "head_branch": "typo",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv Do we need any relevant tests for the same?\r\n",
      "You don't need to write any new tests for this since the variable is already used in some unit tests."
    ],
    "commit_messages": [
      "Fixes typo in OTEL_EXPORTER_OTLP_METRRICS_CERTIFICATE (#3039)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd544ee515ce6a4e395",
    "number": 3038,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/3028\r\n\r\nCHANGES\r\n1. Add `LoggerProvider`, `Logger`, `LogRecord` into the logging api\r\n2. Move `Severity` from SDK to api\r\n\r\n\r\nTODO\r\n1. proxy classes\r\n2. Move docs from _logs to logs\r\n3. move sdk to `_internal` folder",
    "head_branch": "logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update logging to include logging api as per specification (#3038)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd544ee515ce6a4e396",
    "number": 3037,
    "body": "# Description\r\n\r\nFixes #2939\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e test-exporter-otlp-proto-grpc`\r\n- [x] `tox -e test-exporter-otlp-proto-http` \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n\r\n",
    "head_branch": "logenv",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv. This is the first draft of the PR. Please take a look.",
      "You are on the right track. Don't forget to add unit tests. Do you plan to implement the same for the HTTP exporter in another PR or update this PR itself?",
      "I plan to add HTTP changes as well here. Do you want them to be a separate PR?\r\n",
      "It's up to you. I am fine with either way.",
      "Please fix the conflicts and mark it ready if the implementation is complete.",
      "@srikanthccv Tests are not yet complete, I am trying to find the fix to the errors coming while writing the test. ",
      "@srikanthccv grpc tests are failing for me. HTTP one is passing.\r\nFollowing is a small snippet of the error. I am trying to fix this.\r\n\r\n```\r\nlogs/test_otlp_logs_exporter.py::TestOTLPLogExporter::test_env_variables FAILED                               [ 81%]\r\nlogs/test_otlp_logs_exporter.py::TestOTLPLogExporter::test_exporting FAILED                                   [ 83%]\r\nlogs/test_otlp_logs_exporter.py::TestOTLPLogExporter::test_failure FAILED                                     [ 84%]\r\nlogs/test_otlp_logs_exporter.py::TestOTLPLogExporter::test_no_credentials_error FAILED                        [ 86%]\r\nlogs/test_otlp_logs_exporter.py::TestOTLPLogExporter::test_otlp_exporter_endpoint FAILED                      [ 88%]\r\nlogs/test_otlp_logs_exporter.py::TestOTLPLogExporter::test_success FAILED                                     [ 89%]\r\nlogs/test_otlp_logs_exporter.py::TestOTLPLogExporter::test_translate_log_data FAILED                          [ 91%]\r\nlogs/test_otlp_logs_exporter.py::TestOTLPLogExporter::test_translate_multiple_logs FAILED                     [ 93%]\r\nlogs/test_otlp_logs_exporter.py::TestOTLPLogExporter::test_unavailable FAILED                                 [ 94%]\r\nlogs/test_otlp_logs_exporter.py::TestOTLPLogExporter::test_unavailable_delay FAILED                           [ 96%]\r\nperformance/benchmarks/test_benchmark_trace_exporter.py::test_simple_span_processor PASSED                    [ 98%]\r\nperformance/benchmarks/test_benchmark_trace_exporter.py::test_batch_span_processor\r\n--------------------------------------------------- live log call ---------------------------------------------------\r\nWARNING  opentelemetry.sdk.trace.export:__init__.py:234 Queue is full, likely spans will be dropped.\r\nPASSED                                                                                                        [100%]\r\n\r\n===================================================== FAILURES ======================================================\r\n______________________________________ TestOTLPLogExporter.test_env_variables _______________________________________\r\n\r\nself = <tests.logs.test_otlp_logs_exporter.TestOTLPLogExporter testMethod=test_env_variables>\r\n\r\n    def setUp(self):\r\n\r\n>       self.exporter = OTLPLogExporter()\r\n\r\n\r\nlogs/test_otlp_logs_exporter.py:115:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n../../../.tox/py310-opentelemetry-exporter-otlp-proto-grpc/lib/python3.10/site-packages/opentelemetry/exporter/otlp/proto/grpc/_log_exporter/__init__.py:93: in __init__\r\n    super().__init__(\r\n../../../.tox/py310-opentelemetry-exporter-otlp-proto-grpc/lib/python3.10/site-packages/opentelemetry/exporter/otlp/proto/grpc/exporter.py:231: in __init__\r\n    parsed_url = urlparse(endpoint)\r\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/urllib/parse.py:392: in urlparse\r\n    url, scheme, _coerce_result = _coerce_args(url, scheme)\r\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/urllib/parse.py:128: in _coerce_args\r\n    return _decode_args(args) + (_encode_result,)\r\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/urllib/parse.py:112: in _decode_args\r\n    return tuple(x.decode(encoding, errors) if x else '' for x in args)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n.0 = <tuple_iterator object at 0x11186b6a0>\r\n\r\n>   return tuple(x.decode(encoding, errors) if x else '' for x in args)\r\nE   AttributeError: 'tuple' object has no attribute 'decode'\r\n```",
      "Were you able to find out why?",
      "@srikanthccv, I am not able to fix it. Can you help? Can you please point out what exactly am I doing wrong here, it will unblock me. ",
      "When you have any failures, please try to understand the message and trace it back. It says `AttributeError: 'tuple' object has no attribute 'decode' `. The first thing to notice here is why is decode called on a tuple object? Are we passing an incorrect type somewhere? And it also shows the stack trace with line numbers where the error originated. \r\n\r\n```\r\n.../python3.10/site-packages/opentelemetry/exporter/otlp/proto/grpc/exporter.py:231: in __init__\r\n    parsed_url = urlparse(endpoint)\r\n```\r\n\r\nIt says line 231 in exporter.py is the reason which links to one more invocation up in this call stack.\r\n\r\n```\r\n.../python3.10/site-packages/opentelemetry/exporter/otlp/proto/grpc/_log_exporter/__init__.py:93: in __init__\r\n    super().__init__(\r\n```\r\nThis is where it all started, line 93 in `grpc/_log_exporter/__init__.py`; at this point, you can check what types of all the args passed from `super().__init_are_ `\r\n\r\nThere are two lines in you code which I believe are the reason.\r\n\r\n```python\r\n...\r\n        endpoint=endpoint or environ.get(OTEL_EXPORTER_OTLP_LOGS_ENDPOINT),\r\n\r\n        headers=headers or environ.get(OTEL_EXPORTER_OTLP_LOGS_HEADERS),\r\n...\r\n```\r\n\r\nI hope you know what trailing comma (,) in Python does\r\n```py\r\n>>>\r\n>>> foo = 1,\r\n>>> foo\r\n(1,)\r\n```",
      "@srikanthccv, I get it now. So, in layman's terms, the \",\" was making the variable a tuple and the `__init__.py` was not expecting a tuple, hence the error. \r\nI have fixed that issue, but now. I am facing another one.\r\nThe `mock_exporter_mixin` is coming out empty for me. I tried to debug it using the print statement. I observe that it is empty. [debugging tests](https://github.com/open-telemetry/opentelemetry-python/pull/3037/commits/55c17e982cb2e079d09c44d5c7332c77082c7aa3#diff-b46561f17e94b2de768ab7d81658ef144122a638a7ffb3fcd82fe122a9561b37R194-R195)\r\n\r\nThis is the output I am getting.\r\n\r\n```\r\n*************************\r\n[]\r\n```\r\n\r\n",
      "Please spend some time reading about how mocks work and when the args list is non-empty.",
      "@srikanthccv, I read mocking and tried to fix the error. I had to call,\r\n\r\n   `exporter = OTLPLogExporter()`\r\n for this particular test so that the env variables get injected into the newly created object.\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/3037/files#diff-e111afdd5be7166307664a5c9924d73217142dafc9d816428b3ffd152ce4de64R115\r\n\r\nThe tests are still failing for me. Trying to find the fix.\r\n\r\n\r\n",
      "I tried to look for all the properties the exporter is exposing via `exporter.__dict__`\r\n\r\nI only get the following.\r\n```\r\ndef test_env_variables(self):\r\n        exporter = OTLPLogExporter()\r\n        print(\"**************\")\r\n        print(exporter._headers)\r\n        print(\"*******endpoint*******\")\r\n        print(exporter.__dict__)\r\n\r\n        # print(exporter.)\r\n>       self.assertEqual(exporter._endpoint, \"logs:4317\")\r\nE       AttributeError: 'OTLPLogExporter' object has no attribute '_endpoint'\r\n\r\nlogs/test_otlp_logs_exporter.py:198: AttributeError\r\n--------------------------------------------------------- Captured stdout call ---------------------------------------------------------\r\n**************\r\n(('key1', 'value1'), ('key2', 'VALUE=2'), ('user-agent', 'OTel OTLP Exporter Python/1.16.0.dev'))\r\n*******endpoint*******\r\n{'_headers': (('key1', 'value1'), ('key2', 'VALUE=2'), ('user-agent', 'OTel OTLP Exporter Python/1.16.0.dev')), '_timeout': 10, '_collector_kwargs': None, '_client': <opentelemetry.proto.collector.logs.v1.logs_service_pb2_grpc.LogsServiceStub object at 0x1081d4eb0>}\r\n```\r\n\r\nHow do I test properties like \r\n`endpoint, _compression and  _credentials, `\r\n\r\nRef: https://github.com/open-telemetry/opentelemetry-python/pull/3037/commits/9447d0e67bb22709cad2fbecd3c877db1600a9c0#diff-b46561f17e94b2de768ab7d81658ef144122a638a7ffb3fcd82fe122a9561b37R194-R195\r\n\r\n\r\n",
      "@srikanthccv Do I have to add the label to \"skip public api check symbol\"?",
      "@pridhi-arora One last change before we merge this. Please update the minimum required SDK version to `1.16.0.dev` [here](https://github.com/open-telemetry/opentelemetry-python/blob/main/exporter/opentelemetry-exporter-otlp-proto-grpc/pyproject.toml#L34) and [here](https://github.com/open-telemetry/opentelemetry-python/blob/main/exporter/opentelemetry-exporter-otlp-proto-http/pyproject.toml#L33) because the exporter now depend on the newly added env in SDK.",
      "@pridhi-arora friendly ping",
      "@srikanthccv Done!\r\n",
      "Thanks!"
    ],
    "commit_messages": [
      "Adds environment variables for log exporter (#3037)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd644ee515ce6a4e397",
    "number": 3035,
    "body": "# Description\r\n\r\nAlter `_ViewInstrumentMatch.collect()` to return a realized `List` of `data_points` rather than a `Generator`. This probably has some memory implications, but I don't have a good handle on how impactful they are likely to be.\r\n\r\nAlso updates CONTRIBUTING.md to remove mention of `metrics` branch.\r\n\r\nFixes #3021 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\nThis does change a return type, but it appears effectively internal and nothing within the SDK seemed to attempt to use the result in an incompatible way. The tests were actually assuming it was an `Iterator` rather than just an `Iterable`, I believe, so updating them felt like a fix.\r\n\r\n# How Has This Been Tested?\r\n\r\nInstalled in editable mode with 3.9 and an external script to send signals to the console and a remote collector. Not a load test, but everything was collected and sent as expected.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\nI did remove reference to the `metrics` branch in CONTRIBUTING.md, but that does not seem relevant.\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "3021-metrics-iterator-to-sequence",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: lancetarn / name: Lance Erickson  (ed924a18655dabc7477d31912e92227ddaf9d422, a42ed6f06f463a6f31c77554b0329d84a690f592)</li></ul>",
      "This could be a bug fix, @lancetarn, please add a CHANGELOG entry. :v: ",
      ">  This could be a bug fix, @lancetarn, please add a CHANGELOG entry. ✌️\r\n\r\nCHANGELOG updated! Thanks @ocelotl  You (or someone) might need to kick off CI again for it.\r\n",
      "It looks like one of the tornado [contrib tests](https://github.com/open-telemetry/opentelemetry-python/actions/runs/3482444373/jobs/5842457813#step:7:8461) assumes `data_points` is an `Iterator` as well. Should I PR there to first change the test implementation, then re-run these?\r\n\r\nI've reproduced this by checkout out the contrib repo and pointing CORE_REPO at my forked version; if there is a better way I'm interested but that seems ok.",
      "Okay I have set https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1456 up to solve the problem. Hopefully that was a reasonable thing to do.",
      "You will also have to update the Contrib SHA here with last commit hash that fixed the issue on contrib repo https://github.com/open-telemetry/opentelemetry-python/blob/main/.github/workflows/test.yml#L13",
      "> You will also have to update the Contrib SHA here with last commit hash that fixed the issue on contrib repo https://github.com/open-telemetry/opentelemetry-python/blob/main/.github/workflows/test.yml#L13\r\n\r\nWould this later just have to be reverted? I was intending to just let the fix land over there first, then re-run these.\r\n",
      "@lancetarn \r\nI believe the SHA would still have to be updated since that commit is what the contrib repo tests for THIS repo will be run off of.",
      "@lzchen Now I see, thank you. I'll point it back at `main` for now. Sorry for all the back-and-forth, but I have a better understanding of the mechanics of these repos now.",
      "@lancetarn \r\nYeah the structure is a bit confusing. Thanks for your patience!"
    ],
    "commit_messages": [
      "Avoid generator in _ViewInstrumentMatch.collect() (#3035)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd744ee515ce6a4e398",
    "number": 3029,
    "body": "# Description\r\n\r\nFixes #3030\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] This now works\r\n```python\r\nfrom opentelemetry.sdk.resources import KUBERNETES_NODE_NAME, KUBERNETES_NODE_UID\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-missing-resource-attr-consts",
    "is_a_fork": true,
    "comments": [
      "Ah ok. Understood. Thanks for the clarification."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd844ee515ce6a4e399",
    "number": 3027,
    "body": "# Description\r\n\r\nCan't use `OTEL_{}_EXPORTER` or `opentelemetry-instrument --{}_exporter` without them.",
    "head_branch": "http-entry-point",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing entry points for OTLP/HTTP (#3027)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd944ee515ce6a4e39a",
    "number": 3026,
    "body": "# Description\r\n\r\nWhile the custom sampler injection code worked for unit testing and manual testing. I have discovered a circular dependency bug that can easily occur when the user's sampler depends on trace or sampler modules. So, I'm moving the custom sampler injection to a higher level (configuration) like most entry points to eliminate that issue.\r\n\r\nFixes #3013 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] test_trace_init_custom_sampler_with_env_non_existent_entry_point: Verify default sampler is used when entry point does not exist.\r\n- [ ] test_trace_init_custom_sampler_with_env: Verify custom sampler is used when entry point is configured correctly.\r\n- [ ] test_trace_init_custom_sampler_with_env_bad_factory: Verify default sampler is used when factory does not produce a Sampler.\r\n- [ ] test_trace_init_custom_sampler_with_env_unused_arg: Verify custom sampler does not break when superfluous argument given.\r\n- [ ] test_trace_init_custom_ratio_sampler_with_env: Verify custom sampler with rate arg is used when entry point is configured correctly.\r\n- [ ] test_trace_init_custom_ratio_sampler_with_env_bad_arg: Verify default sampler is used when the argument is misconfigured and the factory raises an exception.\r\n- [ ] test_trace_init_custom_ratio_sampler_with_env_missing_arg: Verify default sampler is used when the argument is missing and the factory raises an exception.\r\n- [ ] test_trace_init_custom_ratio_sampler_with_env_multiple_entry_points: Verify that when multiple sampler entry points exist, only the one specified by the env var is used.\r\nNOTE: Since TracerProvider is mocked in configuration tests, we test that a default sampler is used by confirming that None was passed in for the Sampler. A test in test_trace.py then confirms that TracerProvider uses the default sampler when None is passed in.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "custom-sampler-fix",
    "is_a_fork": true,
    "comments": [
      "@lzchen @srikanthccv @aabmass . Tagging everyone who participated in the initial PR.",
      "This PR needs the \"Skip Public API check\" tag."
    ],
    "commit_messages": [
      "Custom sampler fix (#3026)\n\n* Fixed circular dependency that can happen when injecting custom samplers\r\n\r\n* lint\r\n\r\n* Deleted duplicate tests\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_configuration/__init__.py\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_configuration/__init__.py\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* typing\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_configuration/__init__.py\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_configuration/__init__.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Retry tests\r\n\r\n* Fixed circular dependency that can happen when injecting custom samplers\r\n\r\n* lint\r\n\r\n* Deleted duplicate tests\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_configuration/__init__.py\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_configuration/__init__.py\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* typing\r\n\r\n* Retry tests\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_configuration/__init__.py\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_configuration/__init__.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Updated contrib sha\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cd944ee515ce6a4e39b",
    "number": 3017,
    "body": "# Description\r\n\r\nReverting #2972 as a temporary solution for #3013. Since a release is impending, I propose removing this feature until a fix is found since it may involve a slightly different interface and documentation.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nNo\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "revert-sampler",
    "is_a_fork": true,
    "comments": [
      "Since the feature already made it to the release. I'm instead going to work on a refactor to mitigate the issue rather than reverting and unreverting."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cda44ee515ce6a4e39c",
    "number": 3016,
    "body": "Update version to `1.15.0.dev/0.36b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.15.0.dev-0.36b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.15.0.dev/0.36b0.dev (#3016)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cdb44ee515ce6a4e39d",
    "number": 3015,
    "body": "Prepare release 1.14.0/0.35b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.14.0-0.35b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.14.x-0.35bx] Prepare release 1.14.0/0.35b0 (#3015)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cdc44ee515ce6a4e39e",
    "number": 3014,
    "body": "This pr was replaced by https://github.com/open-telemetry/opentelemetry-python/pull/3017",
    "head_branch": "remove-sampler-docs",
    "is_a_fork": true,
    "comments": [
      "revert the commit https://github.com/open-telemetry/opentelemetry-python/commit/35ba2571a633210d3b21701bc6cdc11d51bad0a8 not just the documentation.  "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cdd44ee515ce6a4e39f",
    "number": 3012,
    "body": null,
    "head_branch": "sha",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update SHA (#3012)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cdd44ee515ce6a4e3a0",
    "number": 3011,
    "body": "# Description\r\n\r\nFixes #2831 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Modified the line in local install and tested that my application works fine\r\n- Haven't gone through how to set up test environment. Since it's a small change, I figured it wasn't necessary.\r\n- I have looked through all the other instances of InstrumentationInfo and it doesn't seem to be useful. [This PR](https://github.com/open-telemetry/opentelemetry-python/pull/2583/files) also seems to have gone around replacing all the places intrumentation_info used to be used.\r\n- Any breaking changes should be caught in CI\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-2831-deprecation-warning",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Jackmin801  (f0d6f0140510f64db9371764bcc56bdf6191be81)</li></ul>",
      "The change I made fixes the deprecation warning in the least intrusive way I could think of.\r\nIf instead, you all want to just take out the `intrumentation_info` argument, I'd be happy to amend my PR.",
      "This is not the correct fix, and neither is the option of passing `intrumentation_info` argument (unnecessary and not spec complaint).",
      "Hrmmm ok. I guess we just leave the warning then."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cde44ee515ce6a4e3a1",
    "number": 3010,
    "body": "# Description\r\n\r\nImplemented better `backoff` version checking and added unit test\r\n\r\nFixes #3006\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit test\r\n\r\n-- [x] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/better-version-checking",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Buduzz  (df04db5cf4229aa855e3361ab784c12633b42aaa)</li></ul>",
      "Hello @srikanthccv Please take a look",
      "hi @ocelotl @lzchen please take a look ",
      "@Buduzz, as mentioned in the issue comment, this is not the correct fix. Meanwhile, I am converting this to a draft. Mark it ready when you implement the suggestion from the issue.",
      "Are you still working on this?",
      "@Buduzz are you still working on this?",
      "Re-open if you get to work on this again. This is also not the right approach."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cdf44ee515ce6a4e3a2",
    "number": 3009,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2958\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "grpc",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: pridhi-arora  (1907312ebb0d3e0fea1c56a039ac0c784c4412ec)</li></ul>",
      "@srikanthccv Thanks for the review; I am working on tests.\r\n",
      "Hi @srikanthccv, Can you give me a small cue as to how I add a test and run it? Should I add a line below [this](https://github.com/open-telemetry/opentelemetry-python/blob/main/exporter/opentelemetry-exporter-otlp-proto-grpc/tests/test_otlp_metrics_exporter.py#L383) and something like this? Thanks in advance.\r\n",
      "You could add an another assert statement in this [test](https://github.com/open-telemetry/opentelemetry-python/blob/main/exporter/opentelemetry-exporter-otlp-proto-grpc/tests/test_otlp_metrics_exporter.py#L412) which checks that user-agent header is there. You need to do this for all three exporters. ",
      "@srikanthccv Please take a look.",
      "@srikanthccv Please take a look.",
      "@srikanthccv I am stuck at log exporter tests. Could you help me proceed? \r\nThis is max I could make sense of \r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/3009/files#diff-b46561f17e94b2de768ab7d81658ef144122a638a7ffb3fcd82fe122a9561b37R256-R268",
      "Are the tests passing locally? I don't think the OTLP log exporter supports `OTEL_EXPORTER_OTLP_LOG_HEADERS`. Please look at what the metric/trace exporter is doing and do the same for the log exporter. Let me know if you need more clarity or an example of what the test would look like.",
      "The tests are not passing locally. I saw that `OTEL_EXPORTER_OTLP_METRICS_HEADERS` and `OTEL_EXPORTER_OTLP_METRICS_HEADERS` are part of` opentelemetry.sdk.environment_variables  `SO, I added a similar field called as `OTEL_EXPORTER_OTLP_LOG_HEADERS`. The tests fail as \r\n\r\n```\r\nAssertionError: Tuples differ: (('user-agent', 'OTel OTLP Exporter Python/1.15.0.dev'),) != (('key1', 'value1'), ('key2', 'VALUE=2'), ('[48 chars]ev'))\r\nE\r\nE       First differing element 0:\r\nE       ('user-agent', 'OTel OTLP Exporter Python/1.15.0.dev')\r\nE       ('key1', 'value1')\r\nE\r\nE       Second tuple contains 2 additional elements.\r\nE       First extra element 1:\r\nE       ('key2', 'VALUE=2')\r\nE\r\nE       + (('key1', 'value1'),\r\nE       +  ('key2', 'VALUE=2'),\r\nE       - (('user-agent', 'OTel OTLP Exporter Python/1.15.0.dev'),)\r\nE       ? ^                                                      -\r\nE\r\nE       +  ('user-agent', 'OTel OTLP Exporter Python/1.15.0.dev'))\r\nE       ? ^\r\n\r\nlogs/test_otlp_logs_exporter.py:261: AssertionError\r\n\r\n```\r\n\r\nLogger doesn't call [ OTLPExporterMixin.__init__](https://github.com/open-telemetry/opentelemetry-python/blob/main/exporter/opentelemetry-exporter-otlp-proto-grpc/src/opentelemetry/exporter/otlp/proto/grpc/metric_exporter/__init__.py#L156-L165).\r\n\r\nIf you think I need to call this function in the logger. Shouldn't that be a separate PR?",
      "@srikanthccv I found an issue you filed a while ago which relates to what you are requesting.\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/2939",
      "You can ignore the `OTEL_EXPORTER_OTLP_LOG_HEADERS` and add an assertion that just a user-agent exists. ",
      "Done!! @srikanthccv Please take a look.",
      "@srikanthccv Done!",
      "Thanks, @srikanthccv, for all the help. Do you think I am ready to take[ this one](https://github.com/open-telemetry/opentelemetry-python/issues/2939) up now?\r\n",
      "It's assigned to someone else already, but I don't think they are working on it. Let's wait for some time for them to reply; otherwise, I will assign it to you. We can find something else for you if they say they are still working on it. Meanwhile, you can play around with the codebase and browse through the contrib as well https://github.com/open-telemetry/opentelemetry-python-contrib.",
      "Thanks @srikanthccv. Can you break down  https://github.com/open-telemetry/opentelemetry-python-contrib. into parts for me. Which part should I start understanding first? I am asking this so that it doesn't get overwhelming for me.\r\n\r\n",
      "This PR has enough approvals now, please fix failing test cases and we can merge :sunglasses: ",
      "@pridhi-arora, the lint is still failing. You must reformat your code with black and ensure imports are ordered correctly with isort to get this merged. Please let me know if you need any help with that.",
      "I will try to do it and will come back to you if in case I need your help. Thanks @srikanthccv ",
      "Please fix the conflicts.",
      "@srikanthccv, I have resolved the conflicts. Please take a look.",
      "@srikanthccv The lint check passes. \r\nAn error slowed me down on `tox -e lint`.\r\n\r\nI am getting the following on the main branch as well.\r\nI don't know why the CI is not reflecting the following errors.\r\n\r\n```\r\n************* Module opentelemetry-sdk.src.opentelemetry.sdk.metrics._internal.aggregation\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/aggregation.py:19:0: E0611: No name 'inf' in module 'math' (no-name-in-module)\r\n************* Module opentelemetry-sdk.src.opentelemetry.sdk.metrics._internal.exponential_histogram.mapping.exponent_mapping\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/exponential_histogram/mapping/exponent_mapping.py:15:0: E0611: No name 'ldexp' in module 'math' (no-name-in-module)\r\n************* Module opentelemetry-sdk.src.opentelemetry.sdk.metrics._internal.exponential_histogram.mapping.logarithm_mapping\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/exponential_histogram/mapping/logarithm_mapping.py:15:0: E0611: No name 'exp' in module 'math' (no-name-in-module)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/exponential_histogram/mapping/logarithm_mapping.py:15:0: E0611: No name 'floor' in module 'math' (no-name-in-module)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/exponential_histogram/mapping/logarithm_mapping.py:15:0: E0611: No name 'ldexp' in module 'math' (no-name-in-module)\r\nopentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/exponential_histogram/mapping/logarithm_mapping.py:15:0: E0611: No name 'log' in module 'math' (no-name-in-module)\r\n************* Module exporter.opentelemetry-exporter-jaeger-thrift.src.opentelemetry.exporter.jaeger.thrift.send\r\nexporter/opentelemetry-exporter-jaeger-thrift/src/opentelemetry/exporter/jaeger/thrift/send.py:74:26: I1101: Module 'math' has no 'ceil' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects. (c-extension-no-member)\r\nexporter/opentelemetry-exporter-jaeger-thrift/src/opentelemetry/exporter/jaeger/thrift/send.py:75:22: I1101: Module 'math' has no 'ceil' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects. (c-extension-no-member)\r\nexporter/opentelemetry-exporter-jaeger-thrift/src/opentelemetry/exporter/jaeger/thrift/send.py:94:27: E1101: Module 'socket' has no 'AF_INET' member (no-member)\r\nexporter/opentelemetry-exporter-jaeger-thrift/src/opentelemetry/exporter/jaeger/thrift/send.py:94:43: E1101: Module 'socket' has no 'SOCK_DGRAM' member (no-member)\r\n\r\n------------------------------------------------------------------\r\nYour code has been rated at 9.97/10 (previous run: 9.97/10, +0.00)\r\n\r\n```",
      "It's probably an issue with your environment only. "
    ],
    "commit_messages": [
      "Adds user agent string to grpc headers (#3009)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce044ee515ce6a4e3a3",
    "number": 3004,
    "body": "Description\r\n\r\nThis issue Adds a metrics example of Prometheus to Grafana #2801.\r\n\r\nFixes #2801\r\n\r\n## Type of change\r\n\r\n\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\n ",
    "head_branch": "prometheus-grafana",
    "is_a_fork": true,
    "comments": [
      "@nanfuka which issue is this PR fixing? Is this fixing #2801? If so, please add \"Fixes #2801\" to the issue description (and remove \"Fixes # (709)\"). If the instructions you added to the issue description are relevant to anyone that would run this example, please add them in the example code as well or as a README file."
    ],
    "commit_messages": [
      "Add prometheus monitoring to python app (#3004)\n\n* Use OTEL exporter\r\n\r\n* Fix errors\r\n\r\n* Add requirements file in prometheus example directory\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce144ee515ce6a4e3a4",
    "number": 3002,
    "body": "# Description\r\n\r\nUpdated example documentation on using opentelemetry inside `gunicorn` and namely how to avoid the gotcha of using metrics with the fork-process model. This came out after scratching my head for some time on why my metrics were constantly going up and down.\r\n\r\nFixes #3001\r\n\r\n* Renames `gunicorn.config.py` to `gunicorn.conf.py`, which is the default name of the config file\r\n* Adds imports and a few comments related to metric exports\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X ] Bug fix (non-breaking change which fixes an issue)\r\n- [ X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTested example locally.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ X] No.\r\n\r\n# Checklist:\r\n\r\n- [ X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added metrics export to gunicorn example (#3002)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce244ee515ce6a4e3a5",
    "number": 3000,
    "body": "# Description\r\n\r\nUpdated example documentation on using opentelemetry inside `gunicorn` and namely how to avoid the gotcha of using metrics with the fork-process model. This came out after scratching my head for some time on why my metrics were constantly going up and down.\r\n\r\nFixes #3001\r\n\r\n* Renames `gunicorn.config.py` to `gunicorn.conf.py`, which is the default name of the config file\r\n* Adds imports and a few comments related to metric exports\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X ] Bug fix (non-breaking change which fixes an issue)\r\n- [ X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTested example locally.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ X] No.\r\n\r\n# Checklist:\r\n\r\n- [ X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: codeboten / name: Alex Boten  (651afd2d4beceae5fc3f7c05604a08f20a4e044b, a41bf872c34387684b67916bb6da4bc26360e11b, 9aaac717810f44440ce9f9834319503b3975b341, 1769ffca760b46be4e62019cceaf57890a24424f, 005bebcf53fcf5969e63486961d22d7182368945, 66d40c78646d8438f1e441e44503325833ee82c1, 3bad7be20b8500daa7c9bb56a62424e16b190c9c, d1a732e7785025176aa522ffadfe3a1af9f3f85f, d4ed63d9ecca8408d6559e479acd004ef7f4e3f6, 994ee424c805946105af58b3b0b42b49cd8e243b, 89e2e1226f6a575334b8cc5802ca784ab5459d7d, e77c71f6cef4c3d76d65da9386bcbf2ca703a93f, 4d82d19aa48fab47cf82a798ffbe2ee4439ef481, 50852f98fea1b06dcd912eb7755a45b134e0f7f1, 1d0ef0312c2a0d6b50980de469234b1e3f551612, bb4fef45b37a3e0048f2d33d9cd8f7ffadbf0e52, a5e5af444acfbfe1541aee3a78b412ce9d9d28c1, 88258fddc772d366dfa7ec3265279a4bd709a784, e2c51e6e7e0e17249b06aa554b074f85f8ec6585, b7edab82cbc6aacf035da4d8aa7bb4da4ed5c35c, 304c773a424179c5bcc8fbb32af416131b09b741, 90944f3ae65805f98892b7e8c35405595f7a0511, c1e6e2806c9c4eb5d17ad149d5e795cd56cf7e82, 3e5fec8228c5b58ab075b0addd79c9756854cbb1, 5126a3ee9c3babe71a2e1ec27f7c881e36b28851, 71456346315c9c9d6ee46ef57ace9820725a14ae, 1b54704cf65731765c0e2689dcc5797f253c47c0, b2e6f1f5165b004916dd6c65d23e5592fa2e1adb, 550d66fbbc299bea52935a1f2b5ad0619014a3fc, 86d065f8ef2336096d8e3fe10c9e2bb88cdee148, e31e3504104e1181e9d699a4b49fe208126f9023, f307ee02859054b26a702eebdf5bd591321a65b2)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (6ccc5e2ed86fd890569f68c46390c6a0834b690a, 001a3113ccee1888f2ed13a1cd03532e52fddfd1, df1aeb1ce38a29316c95decb32602fe56c863104, 8b46b1fd4146dd441e36e25b6eaef4fab96b36e7, 97022a5b5fdbba4182a21ea7683bd8c9e0a53986, 56f9a3ad82111bab48225cfa70094c8b8bf2b4d7, 7af8f5e3b2032f5be489ece6c6ce4d8da0a9cead, 15d6162195006f752da363ede205cc1c24d23273, f79e0e0dfa9ad7925f868355e2b21031c81e72f6, a1078e027bb94942e989d08f743bdcb02e9e1525, de7f5a6be3e7988e81f80d611fa3f32b5c35ab4c, 7c396e35d5c0dcf44c02c2aa73fd7cd7cac3a58d, eb68ad07b4fc5205dfc7dbc29c4e3c5f49ea8dad, 2012389d841e810c5dd04f830660ab38c46df5cd, 2d697ad872d3bcab3abad0b59a18c9b0526ab53d, b531d461d218a61a952a88a4fe6c1b98cce2db23, 8811dd76c2a47754a0d17bf63c87770a9643c036, 8e70e99f46052b9e35189392c9f769cea267adb9, 1db780071205c86ebf74ca2703d7f19822616df9, ecc1f7734b3b893fa333ee4e9f1c386fd2ffa82b, bb612215de631ae1e05f1c3294ee513ced2b4f51, c7690f349edc57096cc045c767c5c7b45e82836c, 790470001d0746ccd2ef5b35620ed634b1878e34, aac5d63ffe39516fa8091120c3c00c9c0f17a6b7, 9c6c9b6b4b192dd94af186d87208b8a928a64dcf, 5b6d4ce9062905c034ea7a3144b0216b17c1592b, 1c0a320e5134aed90fe87f1bc61d609cc469ce82, ba80be9853d64d4453fb14c4fae50480a947c6a6, 4dedd58c8c0177254bb8dde21dc81874e6a681b1, 6c26a59546bac8b6dc0dab2425b5344d5e5ee3dd, a1cfc06b8c0ca4b6881f1c5e422a140da8c3aff5, 4e472b1f3c35adb43cc908bd88effe12b75c1bf7, 35a7cec94ea8a450ff2f638181e76e526185bf34, 2c244fe9bb6abbad7bcf66242deecf31201c8aad, f84e43d26ee51093aa5335b0e76ca04134a90e56, b63a7613d5fb42506b9f592e1ac6f48259d41896, 9eec214acdaf2f9e34d70dc364f4f5e6c42ebb13, 53fb4583763861c54995c3d6ba453f8dccf897a9, 6d1b8a7778657027f45184560144db7e0a54ab09, 003ca675117f4c0bb080da075fe78342660fc25f, 496d76e9105df13722d033abead06858a72b98b6, 9ff3e6eb8f517bc8d07725841050e34c51343fb6, 0d00978348369712f5a30a54c0f4e163e82d1d8c, 52339b61f84cf5fcd0f6481c11bd697100ccc2bd, 70f559f44d33543ec994004113dc7f570b0b508a, 5bccbde1c6d50731b26c13b526109212a2971598, 50c4c6eb23f111c7f72deec640d24cca97979ba1, 5193621703fffd9574b5bae8236421f037774090, df37fdd235e3b5b8e5b66e077fb31a2a6292dee2, deaad2423d9a6dc026522ac1af72a20b8ed4b1cb, d9a4c0cf9002264e7e2c2240fc9a61be6eb76b9c, 5fefb9684276990d978b5a8e35b44a13eb50a413, e6ad2e85796e1f2562909778340848682a24b9d0, 47d7fe9667ebf3b56555c67e12f1683f53bc5ae7, 86541eb7178c244e7b651b16a98b1f104058801f, ddfc7fe13c8749c46c2536d925bbde9bfe529d6d, 1c0554f8a6802695d593b0a416052e00a5542471, 54c488bb82a0dd8704adf052d2e4bddc59dcaff0, 69cc8565d0f154fbd7541c5a4ce5c24fdaa7718a, 76df2b8aca8a9b9b944bb22286a68c829f2cd7ec, d32e7897f4069cc4b4a5524adf3cf007de6307f8, b1f14893afd6576f7a38a62ffca99c91a96c2131, 9cfb8f607ad14fc50874382dea337e9fdaf9c438, 9558665befd3525cccb6f93d3df591c60bc82148, 007e73cd48b9c13c411e529dbb9753aee32260d0, ec3ffeef7ae45f700c378e6f4fd98ad22a2f5821, c398248fe129568a71594663ec899c7456d405b9, 59d98296be5f05144c7a576f0ec3137e38351d94, e61f2a93b0a0c58dea6818cde090a7e47a944fc0, 0fe14356bd9589e4c559903eeac2ffd8289e91a8, 402809c59a1ce6403ce907ae410b3a9968b674be, 87491f0987bd9ff44ef3053feb820113f47bfc92, d4041d1e9534ce8c609f4fc631a48d2797e151a5, dd24f16860207b79226bf73389dbda4d3e845bd3, 45623304e26e67fea6c686eec5d5b6b5b50ac6f9)</li><li>:white_check_mark: login: areveny / name: Arianna  (1ce426fd6537df7b461029d059a612729bd8227e)</li><li>:white_check_mark: login: aabmass / name: Aaron Abbott  (539b8d7d0d0d801de20fa602d72783343cfc4bdd, 711f9f163a79b587b107c9a150da42875d155579, 489507da1ee53ae5d4bb8beba60c51d5ed8b7973, 7c8dd96e888c0e72e7b3a28fc70a8e149627a99f, 68d5e8a5016b28bc58f7fac5857331611054472e, ffc776a5eb8de704b0b655f89376ebcd82b52385, a8c99f38b1262d0187094a062a65e4a0bfc59ef1, fb1ecd9cd5687f51bc74bc01005b14b48f84038e, d4b2c335426ff246525df9ec91987f135cf9c041, 3b090da38132d713c6dd62f32e1a3ebc4859562b, 9e2478db1a2cb9b894fc5110ab3ff9706063573c, 09fe8d07f9ca93f31117a7941d892b7b5706f693, ba7295103d5112a18b38e0941f79a7a3010306d0, a36a91bfad5f0fcc849e73d49fac4960e44c859e, 681b4fa8771862707cbad4a832a3113057d8b6e0, 8d43fb5f972649d4aba72a726b86eecf5aa6bdae, 1afb13cdbb0048b6633bfbbafaa24889b07ead56, 745882b52fdd7b39072e031cfcb619c06db62ac3)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (a0d79a9abfc45bb121192733b98cd7f45b4125da, 9457983d84bab4486de9b51caf575a6eae52047e, 7dd5fd0874587d36c1d4586c7c2e3d56f24a7da8, fb8c2891df6d74b1fca60cb9853a14f8a648b645, 345c3699935a5cf16de176bf4927ed89a44bcda2, afc49738296caeb7b59ce33cd481940f98edc84c, 7f0617fd6dfcc36472b30a9c748332300bd97a28, e41fdbf458c6805521acf85741fb3c5f993e84a5, 6bb84b7de2dae77bf2bfff4a78dbcd0d3f35ca42, f8de927d7d6976b8b62055fce8fc3ce9a9562efa, 279ed8db27b5eebb71f58ae6268ca74b168a9361, 5c9f07833001e554e0437c6a1d2f33225663e9f8, efb28e2813869ea07ca61352e0c5b45ade5a802a, 563e22aeb410b101c4b8f1542cba71442b6df573, 093fff1952bc2b136a58106fc6fd59cfc602dbb8, 8a9b926e260e06d017493470872b0736b07b334f, c939c9b4314fb5f45f9238b3aa30ea57652e69a1, e5e5688b1b4f439390530cfc785c2d893c33a843, 8b7dc56a98138f6639ed5fcea725339e435f68e9)</li><li>:white_check_mark: login: ramthi / name: Ram Thiru  (98d9e68619c7f74a1119fc009d8d21cddf6ff1ed)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (de719df1225470aeba8a690334fb2e837fcb9cbb, 0d7246c053e6a136a6e1ef8c7f91a8979f40a0ee, 46ff584a6eed8fec75a12129e7b43a3f9f330301, bd306be1fc0abd507e7166b14ffb2d52541a4fea, d77a63ef37faf91fcf6fffc4d44127aa6d3bc27b, 14b98d6aa3469231875d2bf51c344305bc9df478, 460e93eb97bee6b04b40d6302e9772e24fed69ff, 97c8f966b262108abf56c991885b537ad5e47c07, 4b5ef77bd20229893d5ae0417e24dede0e6908b0, abe0e024df40bea45069dc0dc281c89acfe5dfd9, 5ed6df82b71b0669e2b201309ca5c6e7556c7eb1, f05278ee5c5b38332c534bf7bc081108474c16aa, 7ff09b8818bc84ec70cf49382982b80be40987b4, 7d5ffa7e9ddca2d3227e6380d75c00c7514762a5, 6d1685af84e3c4585155fdccf4081f734700b849, c6680f61ddb5be4d5f51f675da603f140adf09ff, 0ec9bbcbf5f42b50fa93e283fe3a9810419920f5, 8db43c60c373a3a144f6762e68ab62e2ccc33ea9, a998f2efb0683a28c021d173c2116c0ed8431683, 8e68cb67d16d4d6fdad72d71102d22d66729ac11, 946bf16a2beedfe4af55506ff6d280da45ffa942, 1cc6ca3854eda6fba254f7ce707b33463851df32, 78811a856f71e9dbadee2203638a3dc5087eab43, a6e9a781fdab7e66eb52296f16a67a9fc794c4c1, 03bb4106813f78d0b651bf324c36cb2674040376, c25bd8bcd15a5d2ad11557844657ea04ed866534, b81945f67e4bd3ddd9a8504e6a7fef97f56250b8, 08692fddfe46fea988774c9d882063405d06bc8a, ec858190b0f88c7eb465b83b47715894cdfd5444, b6662803a592778719824e572b7e1f077aeab8e0, 3d0d2eba4fe06ef0113fe409efe67458c8b268f1, f7f17877d718b59a31c420e723796a41e47c54a5, fa3f79a8e08cc08073f6132f9d99aa4bbea3bedd, 841fb58d055e5064ca9821240ea08c9b80e9be9d, a2cd0ce2fbf1f6af82c82f3a76d3509957adbc3f, 0f1c1bbfb1acdb69376d75ed1b1f2297b47b82f1, 787d44f326871ae9c57ef4096cceb60769b32b48, 1e99341c3eaec7141d69461effc33f73fe2c8e40, 237a386afcb431029d5e29c090b6ff50c4565c1b)</li><li>:white_check_mark: login: Arnatious / name: Ted Kern  (5902aa16e8807e7272b2f6ed81f8be41c7519d82)</li><li>:white_check_mark: login: owais / name: Owais Lone  (5f7a4726c55f670d7ee83dbea0ef5f4bb92ec772, 5155c0cdd2f8ca8b1a6caf9a667ac66ba69af59c, bf8d31c9c45bc0f8231f71025e01d45cbb0ffdbb, 2f32411d8f4207c6d6d030bb57e475419ac2a116, fadfdb0079e95c0505734947fcdb804f8620ed01)</li><li>:white_check_mark: login: chalin / name: Patrice Chalin  (2ce73387f2a01857dfe3e131f0a16c43da7f6a12, d039770415c5f13223955057e7cdaecd03feb26c, 7ca2a0b3fdc7edd598e44ca253e2d4aae70e5c3f, 53afd134d8e26f7f77bdd783af44716675292404)</li><li>:white_check_mark: login: munagekar / name: Abhishek Munagekar  (0c855ac0e2e473c798f93ac3bb44ab43bae88780)</li><li>:white_check_mark: login: TylerHelmuth / name: Tyler Helmuth  (aeb97b640ba6a7bd7d0a2692139300dfa3fd1631)</li><li>:white_check_mark: login: mabdinur / name: Munir Abdinur  (da8ea82199b5c1244d98ffc3a860777850c1f771)</li><li>:white_check_mark: login: musicinmybrain / name: Ben Beasley  (dc164d0a2cd56b041fdf5b7ac9ef31e5f9a45be9, 24b7ed47eaae49860c0c0d352dc5b162e2b311da, fa5fc30c3607d1753774f27d8290b2bf605dce8e)</li><li>:white_check_mark: login: pichlermarc / name: Marc Pichler  (493e2b35abd85f84a0e3bb211702d76e916bf98b)</li><li>:white_check_mark: login: teddylear / name: teddylear  (9824de987f4f38306f91399f85ba480467294a53)</li><li>:white_check_mark: login: deejgregor / name: DJ Gregor  (8a84755f6852d7a40b50b7b7b3129b3e5b30ca5d)</li><li>:white_check_mark: login: mmanciop / name: Michele Mancioppi  (6e6d8a0321de7df1d20b104a8ccf55af1d7591da)</li><li>:white_check_mark: login: gen-xu / name: Gen Xu  (7fe2e323c32309953ffe71e056e047c9a09f512a)</li><li>:white_check_mark: login: overmeulen / name: Olivier VERMEULEN  (d76adbe39932292fc9a5429d33b8af393a85054c, 10fdd745ec84ed6c481fbf42cbe1e8a92274cd72)</li><li>:white_check_mark: login: TBBle / name: Paul \"TBBle\" Hampson  (ba7216ca8bd9eb7a46d73110147c8c9db5ef2109)</li><li>:white_check_mark: login: alanisaac / name: Alan Isaac  (f8cc8bc0d1df8a315d92bea19c430cbd8a85bbe8)</li><li>:white_check_mark: login: hannseman / name: Hannes Ljungberg  (779fc56475dfc690000c0be4eae23889c99ff312)</li><li>:white_check_mark: login: bluesliverx / name: Brian Saville  (b958d877235e1ed677eb79b40a33e93c79469b67)</li><li>:white_check_mark: login: carolabadeer / name: Carol Abadeer  (b12b1358ffeaa49078e317f4f1417694e85cc7d3)</li><li>:white_check_mark: login: hroncok / name: Miro Hrončok  (c90e069b4ee71ff9308b30a820d737f0b4cc10a4)</li><li>:white_check_mark: login: kasium / name: kasium  (4f2e5943168abab090b23c12dce02a76360a25c1)</li><li>:white_check_mark: login: Oberon00 / name: Christian Neumüller  (63e004a91b050028eeec704c50eb4888d090aab5)</li><li>:white_check_mark: login: ronnathaniel / name: Ron Nathaniel  (fad36d78c68fe4811f2bfd5d1adab3afda38f104)</li><li>:white_check_mark: login: oceyral  (64c2cffeb6004c066d06e7e4101993003b10f7aa)</li><li>:white_check_mark: login: aaron-ai / name: Aaron Ai  (958875553d41e81eded613e293f022ef87380322)</li><li>:white_check_mark: login: rmorshea / name: Ryan Morshead  (b1a81f8a84cac23df8d98ddb82f35f62feecfeeb)</li><li>:white_check_mark: login: povilasv / name: Povilas Versockas  (691a511e0b6c07f6893fb820274f68c7ba2c61d0)</li><li>:white_check_mark: login: jeremydvoss / name: Jeremy Voss  (7d00630c28e851cfbae50e16fd854c674b3c961f)</li><li>:white_check_mark: login: tonycody / name: XS  (e41e0c9b8eae89f6fd77e9c7e54b39fbda700703)</li><li>:white_check_mark: login: kianmeng / name: Kian-Meng Ang  (8bbd24fb2b98e677eda548c76fa770dd52809daf)</li><li>:white_check_mark: login: galbash / name: Gal Bashan  (0c40fac4a4822bcc4c4b59bb2cd2a5ce49ca0c88)</li><li>:white_check_mark: login: dougramirez / name: Doug Ramirez  (b02e3b4685ebf3c7c24cc9aa1c8fde6af57a80a7)</li><li>:white_check_mark: login: pranavmarla / name: Pranav Marla  (2a281c91f008c544f57de7d9105b72a7cacdae9d)</li><li>:white_check_mark: login: ofek / name: Ofek Lev  (96e1c4e380fe7b1424505b1238a9392b456bf84a, 9164dff75e474a03e59733ea378791a99ce832d4, a2cf2822cd35f522f7e3f8f163f863f3b00d11eb, a41064f5ad561f12f4e17d32ee606d082ba6e522, 5a85f8d58cf9b829268e82a843eb6be2ae54cabf, cabe59ec26c0862a399237b81a430688d571d95e, 7787a4b4272302e21789b0a4e97bfed4912349e8, a30597445509899ebc5fac3839a4f05986411b6f, 90a80dbe62b6021e7f850ed09b7a7cba6f248444, 2e304ea8ede2cbd806316e57961e182c50e390ff, 8bf6d42f2127a809325a836ea7924ed65e76147d, 2c2b73cdd56e7b2d0083a2b11c2c0f8ce351b0f5, b4c0c854f3f1f7b307eda845460942112d21792a, 472baa688228f0cbe13eb94a142eeeb11cee0c0a, e47820694c40ceab0dcf2f3daf50a1badd68ff46, b510c537296e81230be5376c932de8a280145c9d, 2a688fd2c3a79c1d8911e8f70babceaab26396b5, 3d65ed2758c34ac435942e3d93d19f98768bdd23, 12d7ab2ba098fe0eaa254820b4ff19c41aa74067, b42b24f2322b4a97843b7247fd51629971c32030)</li><li>:white_check_mark: login: ronyis / name: Ron Yishai  (26a148a4c4bfeda65de55c5171b95c68fe233685)</li><li>:white_check_mark: login: RangelReale / name: Rangel Reale  (a4ee89be1c09c44ec86a8c9a0483e4984c00ac6e)</li><li>:white_check_mark: login: rbagd / name: Rytis Bagdziunas  (82eddbd64b148488d32cc526cbd2c06179941903)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce244ee515ce6a4e3a6",
    "number": 2999,
    "body": "Similar to:https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1031\r\n\r\nWe don't have a good place to publish benchmark test results (we are  trying to avoid gh-pages and using opentelemetry.io for docs instead).\r\n\r\n",
    "head_branch": "docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Temporarily disable benchmarks workflow (#2999)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce344ee515ce6a4e3a7",
    "number": 2998,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce444ee515ce6a4e3a8",
    "number": 2997,
    "body": "# 🐍 ",
    "head_branch": "py311",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add py3.11 to workflow (#2997)\n\n* Add py3.11 to workflow\r\n\r\n* Update classifiers\r\n\r\n* Spacing\r\n\r\n* Add CHANGELOG entry\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce544ee515ce6a4e3a9",
    "number": 2995,
    "body": "Similar to:https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1031\r\n\r\nWe don't have a good place to publish benchmark test results (we are  trying to avoid gh-pages and using opentelemetry.io for docs instead).\r\n\r\n",
    "head_branch": "lzchen-patch-4",
    "is_a_fork": false,
    "comments": [
      "Created tracking issue https://github.com/open-telemetry/opentelemetry-python/issues/2996"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce644ee515ce6a4e3aa",
    "number": 2992,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "blank",
    "is_a_fork": true,
    "comments": [
      "@jeremydvoss, what's this fixing?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce644ee515ce6a4e3ab",
    "number": 2987,
    "body": "Fixes #2986",
    "head_branch": "issue_2986",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Pytest version (#2987)\n\nFixes #2986"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce744ee515ce6a4e3ac",
    "number": 2985,
    "body": "Fixes #2984",
    "head_branch": "issue_2984",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Python version for docs (#2985)\n\n* Fix Python version for docs\r\n\r\nFixes #2984\r\n\r\n* Add FIXME"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce844ee515ce6a4e3ad",
    "number": 2983,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (2797)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "2797",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: nanfuka / name: Kalungi Deborah  (46480e23a61e1f8adf0377b632c4276a3b5f4ce9, 20019075c8fb83ebf9428edadd722c05d78853cc, 8ce706237dadda48421d719e342f82b1c64108eb, 9a6346e37175f5f144321398df020ea631d6af2b)</li></ul>",
      "@srikanthccv this is my understanding of turning default views off \r\n **disable_default_views= View(instrument_name=\"*\", aggregation=DropAggregation())**\r\n\r\nthen I added a view with aggregation for the instrument this way\r\n\r\n **provider = MeterProvider(\r\n    metric_readers=[\r\n        reader,\r\n    ],\r\n    views=[\r\n        disable_default_views,\r\n        View(instrument_name=\"mycounter\", aggregation=SumAggregation()),\r\n    ],\r\n)**\r\n\r\nIs this what you mean.\r\n",
      "Yes",
      "Please sign the CLA",
      " @srikanthccv  I have complete signing the CLF\r\n",
      "@nanfuka In the project virtualenv, you can run `tox -e lint` to see the issues and fix them.",
      "@nanfuka Please address the comments and fix lint, this otherwise looks good to me."
    ],
    "commit_messages": [
      "Add disable default views to common view scenarios (#2983)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ce944ee515ce6a4e3ae",
    "number": 2981,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otel-feature",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/2981/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/2981/#/?version=2' target='_blank'>:x:</a> - login: @Lincoln-developer / name: Lincoln . The commit (e675805a5e42fdff8de7abe0298808a6c31ebf80) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/2981/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "I don't think you understood the issue requirements. I am going to close this and continue discussion on #outreachy slack channel.",
      "Thanks for the feedback,\n\nOn Sat, 22 Oct 2022, 4:17 am Srikanth Chekuri, ***@***.***>\nwrote:\n\n> I don't think you understood the issue requirements. I am going to close\n> this and continue discussion on #outreachy slack channel.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/open-telemetry/opentelemetry-python/pull/2981#issuecomment-1287570220>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ARACKVEBGZ67E525ZWZIRZDWEM6DXANCNFSM6AAAAAARLP2YMU>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cea44ee515ce6a4e3af",
    "number": 2980,
    "body": "Since `backoff==2.0.0`, the API of the `expo` function has changed. The \"porcelain\" methods of the backoff library (the decorators `backoff.on_exception` and `backoff.on_predicate`) send a `None` value into the generator and discard the first yielded value. This is for compatibility with the more general wait generator API inside the backoff package.\r\n\r\nThis commit allows the OTLP exporters to automatically detect the behavior of the installed backoff package and adapt accordingly.\r\n\r\nFixes #2829.\r\n\r\nThere are also several PRs with alternative solutions to this problem. Some of them have large amounts of unrelated changes and others break the package for `backoff<2.0.0`.\r\n\r\n- #2915\r\n- #2970\r\n- #2945\r\n\r\n### Testing\r\n\r\nEach modified package has a unit test that will fail if the detection code is removed -- ensuring that `time.sleep` is never called with `None`.\r\n\r\n### Contrib repo change\r\n\r\nNo contrib repo changes are required.\r\n\r\n### Checklist\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "detect-backoff-expo-api",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: nickstenning / name: Nick Stenning  (5020f65d5bbee14dd144f6974f6725bcf111e821)</li></ul>",
      "I already started a PR some time ago but don't have the time to finish it, feel free to pick the parts you need then we can close it.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/2915",
      "@srikanthccv are you able to spare a moment to look at this? or at least approve the test runner workflows so I can see if this breaks anything?",
      "@Yamakaky yup, I saw that. This is a substantially less intrusive change, and supports both `backoff~=1.0.0` and `backoff~=2.0.0` which will be helpful for people that have one or other version pinned in their environment.",
      "Ok, tests all passed but the style linter wasn't happy. I've just pushed a fix for the lint errors, and I'm reasonably confident that (if @srikanthccv you can approve the workflow again 🙇) this will all pass.",
      "Thank you for working on this!",
      "Ok, tests passing! Any maintainers fancy giving this a review?",
      "> Please add a test for failure case reported in the original issue\r\n\r\nIt's not clear to me what you would like tested. The original bug was that the exporters were using a version of `backoff.expo` that yielded `None` when they weren't expecting that and so they ended up calling `sleep(None)`.\r\n\r\nThe only way I can immediately think of to reproduce that would be to do what the tests did before and mock out `expo` itself rather than the wrapper we create here, `_expo`. That seems like it would get kind of messy.\r\n\r\nI guess another option would be to pull the repeated code here into a separate shared library and unit test it there. Do you have a suggestion for where it should go if we went down that route?",
      "I guess what I was trying to say is use the backoff version installed instead of `if next(backoff.expo()) is None:` and add a simple test for 1.x and 2.x that sleep is not called with `None` value. What do you think?",
      "My feeling is that sniffing the behaviour is very cheap and more robust than looking at the version number. (What if the behaviour changes back in a future version of backoff?)\n\nHappy to try and write a test that simulates both behaviours, though. Might not get to that for a few days.",
      "I prefer looking at the version number because it makes it easier for the reader to follow why that workaround is put in place and serves as a checkpoint for maintainers when to get rid of it if they bump the version. I am not too strong about it though. And also we can't be certain what might change in the future, so we try not to be too broad or too restrictive about the version for third-party libraries.\r\n\r\nWe will be doing a monthly release probably end of this week or next week.  It would be great if we could get this merged before that.",
      "Okay @srikanthccv this is updated and there are testcases for all three exporters (gRPC, HTTP trace, HTTP log) which fail if the new code is removed, or you manually set `_is_backoff_v2` to be `False`.\r\n\r\nI've kept the behaviour sniffing rather than looking for explicit versions because the latter gets tricky quickly. `backoff ~= 1.0.0` doesn't have a `__version__` module field, and `backoff ~= 2.0.0` has a string `__version__` field (e.g. `'2.2.1'`) which we'd then have to parse... but defensively because it might not always be a string... the whole thing gets really messy, and just looking for the behaviour we need to know about is not just easier but also less fragile.",
      "Side note: as a 3rd-party contributor to this repository, having to wait for a maintainer to approve the test matrix workflow _every_ time I push a commit is... well, it's not great. \r\n\r\nI understand that there may be some workflows that need to be explicitly approved, but it would likely be a better experience for everyone (maintainers, too!) if I could get earlier feedback on whether I broke anything.",
      "> Side note: as a 3rd-party contributor to this repository, having to wait for a maintainer to approve the test matrix workflow _every_ time I push a commit is... well, it's not great.\r\n> \r\n> I understand that there may be some workflows that need to be explicitly approved, but it would likely be a better experience for everyone (maintainers, too!) if I could get earlier feedback on whether I broke anything.\r\n\r\nhttps://github.blog/changelog/2021-04-22-github-actions-maintainers-must-approve-first-time-contributor-workflow-runs/.  ",
      "Ok, updated the metrics exporter as well.",
      "Just pushed a change to fix a couple of lint/format errors.",
      "@srikanthccv Do you reckon we'll be able to get another review and get this in before the upcoming release?",
      "> Okay @srikanthccv this is updated and there are testcases for all three exporters (gRPC, HTTP trace, HTTP log) which fail if the new code is removed, or you manually set `_is_backoff_v2` to be `False`.\r\n> \r\n> I've kept the behaviour sniffing rather than looking for explicit versions because the latter gets tricky quickly. `backoff ~= 1.0.0` doesn't have a `__version__` module field, and `backoff ~= 2.0.0` has a string `__version__` field (e.g. `'2.2.1'`) which we'd then have to parse... but defensively because it might not always be a string... the whole thing gets really messy, and just looking for the behaviour we need to know about is not just easier but also less fragile.\r\n\r\nThis is a better way to check for a package version number:\r\n\r\n``` python\r\nIn [7]: import pkg_resources\r\n\r\nIn [8]: pkg_resources.get_distribution(\"backoff\").version\r\nOut[8]: '1.0'\r\n```\r\n``` python\r\nIn [1]: import pkg_resources\r\n\r\nIn [2]: pkg_resources.get_distribution(\"backoff\").version\r\nOut[2]: '2.0.0'\r\n```",
      "Still would have preferred to check for version number but this is urgent for several users and the end result would be pretty much the same. We also do not have a general policy on how to deal with third party dependencies which release new major versions.",
      "That's a good to have improvement. I am fine with getting this merged as is to unblock people and address it in follow up PR."
    ],
    "commit_messages": [
      "Bug fix: detect and adapt to backoff package version (#2980)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cea44ee515ce6a4e3b0",
    "number": 2976,
    "body": null,
    "head_branch": "sem",
    "is_a_fork": true,
    "comments": [
      "@aabmass \r\n\r\nAdded manually. I know there's a gen script but it seems to be only for trace. I can create an issue to update it."
    ],
    "commit_messages": [
      "Add http-metrics to semantic conventions (#2976)\n\n* sem\r\n\r\n* lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ceb44ee515ce6a4e3b1",
    "number": 2975,
    "body": "# Description\r\n\r\nI have another dependency that requires backoff==1.8.0, which is clashing with the requirement of 1.10.0. Relaxing the required version would solve this dependency resolution problem for me.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n# How Has This Been Tested?\r\n\r\nNot at all, but looking through the code there doesn't seem to be any reason to depend on backoff>=1.10\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: nils-borrmann-y42 / name: Nils Borrmann  (8de4447febdc9c4f59c1a96fa5374f0c7f96fa8a)</li></ul>",
      "Or you can bump your version to `1.10.0`. If we want to relax the version, why stop at `1.8.0`? It could be any `1.x`. ",
      "> Or you can bump your version to 1.10.0.\r\n\r\nI can't actually. I am using another dependency that has hardcoded its version to 1.8.0. And that library is unmaintained, so I can't get a fix merged there :/ "
    ],
    "commit_messages": [
      "Relax version of backoff dependency (#2975)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cec44ee515ce6a4e3b2",
    "number": 2973,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "blank",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ced44ee515ce6a4e3b3",
    "number": 2972,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #2746\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nUnit tests\r\n- [x] Testing that if the OTEL_TRACES_SAMPLER is misconfigured, it still defaults to the ParentBased sampler.\r\n- [x] Testing that if the OTEL_TRACES_SAMPLER is set to a custom sampler, it initializes correctly.\r\n- [x] Testing that if the OTEL_TRACES_SAMPLER is set to a custom ratio-based sampler, it initializes correctly.\r\n- [x] Pre-existing Sampling configuration tests still pass.\r\n\r\nManual tests:\r\n- [x] Custom Sampler used when entry point specified via environment variable\r\n- [x] Custom TraceIdRatioBased Sampler is initialized with OTEL_TRACES_SAMPLER_ARG\r\n- [x] If a valid entry point is specified but it points to a non-existing class, it still defaults to the ParentBased sampler.\r\n- [x] Build in Sampler names still work for OTEL_TRACES_SAMPLER env var.\r\n- [x] Build in Samplers can be pointed to by entry points.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\nNo.\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "jeremyvoss",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Enabled custom sampler configuration via env vars (#2972)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cee44ee515ce6a4e3b4",
    "number": 2970,
    "body": "# Description\r\nPeriodic back off in exporter is broken. Full description in issue #2829.\r\n\r\nFixes #2829\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tests Suite\r\n  - Run tox tests locally\r\n\r\n- [x] Recreate and fix locally\r\n  - pull down https://github.com/topleft/otel-bug-fix-sample (sample code from issue #2829)\r\n  - run `poetry install && poetry run uvicorn main:app`\r\n  - notice error\r\n  - fix bug in local copy of opentelemetry-python\r\n  - update pyproject.toml to reference local opentelemetry-python:\r\n    - `opentelemetry-exporter-otlp-proto-grpc = { path = \"$HOME/.../opentelemetry-python/exporter/opentelemetry-exporter-otlp-proto-grpc\" }`\r\n  - run `poetry lock && poetry install --sync && poetry run uvicorn main:app`\r\n  - notice working code\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otlp-exporter-retry-fix",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: topleft / name: Pete Jeffryes  (bb41c781f06d374852adba468960d0242a0cd6f3)</li></ul>",
      "I think you actually just want to do a check for none, then continue. The next value in expo will be one:\r\n```python\r\n    >>> import backoff\r\n    >>> for v in backoff.expo(max_value=64):\r\n    ...   print(v)\r\n    ...   if v == 64:\r\n    ...     break\r\n    ... \r\n    1\r\n    2\r\n    4\r\n    8\r\n    16\r\n    32\r\n    64\r\n    >>> \r\n```\r\n\r\nfor v backoff v2\r\n\r\n```python3\r\n    >>> from backoff import expo\r\n    >>> for v in expo(max_value=64):\r\n    ...   print(v)\r\n    ...   if v == 64:\r\n    ...     break\r\n    ... \r\n    None\r\n    1\r\n    2\r\n    4\r\n    8\r\n    16\r\n    32\r\n    64\r\n    >>>\r\n```",
      "@ElementalWarrior Thanks for the suggestion, updated.",
      "Addressed in #2980 so I am going to close this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cee44ee515ce6a4e3b5",
    "number": 2969,
    "body": "# Description\r\n \r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2953",
    "head_branch": "dep-bot-bump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: bump protobuf from 3.15.0 to 3.18.3 (#2969)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cef44ee515ce6a4e3b6",
    "number": 2968,
    "body": "Fixes #2967",
    "head_branch": "issue_2967",
    "is_a_fork": true,
    "comments": [
      "@ocelotl please resolve the conflicts."
    ],
    "commit_messages": [
      "Add and use missing metrics environment variables (#2968)\n\n* Add and use missing metrics environment variables\r\n\r\nFixes #2967\r\n\r\n* Add missing environment variables\r\n\r\n* Remove redundant test\r\n\r\n* Add test case for HTTPS endpoint\r\n\r\n* Fix mocks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf044ee515ce6a4e3b7",
    "number": 2966,
    "body": "Fixes #2965",
    "head_branch": "issue_2965",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update contrib repo SHA (#2966)\n\nFixes #2965"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf144ee515ce6a4e3b8",
    "number": 2964,
    "body": "Fixes #2963",
    "head_branch": "issue_2963",
    "is_a_fork": true,
    "comments": [
      "Work in progress to address the issues pointed out by @srikanthccv, moving to draft for the time being.",
      "@srikanthccv PTAL, I added merging methods to `collect`.",
      "force push is making it really hard to follow your recent changes addressing the comment.",
      "> force push is making it really hard to follow your recent changes addressing the comment.\r\n\r\nWeird, I must have done so accidentally, pretty much this is what is being added here:\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/2964/files#diff-f47777d9ac6e010c971c2252915bcbc8ec95dd61d24428c88d52b3f08a31f745R633-R654\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/2964/files#diff-f47777d9ac6e010c971c2252915bcbc8ec95dd61d24428c88d52b3f08a31f745R664-R677\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/2964/files#diff-f47777d9ac6e010c971c2252915bcbc8ec95dd61d24428c88d52b3f08a31f745R685-R698\r\n\r\nWe now use call a `_merge` method that uses rescales the histogram based on the previous point.\r\n",
      "You force-pushed again, ah? Can you help me with the changes you made since the last time?"
    ],
    "commit_messages": [
      "Add Exponential Histogram (#2964)\n\n* Bump werkzeug in /docs/examples/fork-process-model/flask-gunicorn (#3179)\r\n\r\nBumps [werkzeug](https://github.com/pallets/werkzeug) from 1.0.1 to 2.2.3.\r\n- [Release notes](https://github.com/pallets/werkzeug/releases)\r\n- [Changelog](https://github.com/pallets/werkzeug/blob/main/CHANGES.rst)\r\n- [Commits](https://github.com/pallets/werkzeug/compare/1.0.1...2.2.3)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: werkzeug\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Refactor buckets interface\r\n\r\n* Add missing test case\r\n\r\n* Remove wrong return\r\n\r\n* Add comments\r\n\r\n* Refactor object resetting\r\n\r\n* More fixes\r\n\r\n* Refactor exporting of buckets\r\n\r\n* Fix bug\r\n\r\n* Fix spelling\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/aggregation.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/aggregation.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Fix exception messages\r\n\r\n* Remove scaling check\r\n\r\n* Fix typo\r\n\r\n* Remove wrong instrument\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/aggregation.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Add attribute setting lo lock scope\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/exponential_histogram/buckets.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Fix collect\r\n\r\n* Remove unreachable code\r\n\r\n* Fix exporter test cases\r\n\r\n* Add comment\r\n\r\n* Expand lock scope\r\n\r\n* Revert \"Expand lock scope\"\r\n\r\nThis reverts commit fd9c47b8c6feb5b8361d5054d199856ae2870d82.\r\n\r\n* Expand lock scope\r\n\r\n* Add min_max_size test case\r\n\r\n* Fix lint\r\n\r\n* Use properties for buckets attributes\r\n\r\n* Fix bug\r\n\r\n* Add comment\r\n\r\n* WIP\r\n\r\n* Reset values at the beginning of collect\r\n\r\n* Merging WIP\r\n\r\n* Add merge submethods\r\n\r\n* Refactor to use auxiliary methods\r\n\r\n* Add downscale method\r\n\r\n* WIP\r\n\r\n* Finish merge\r\n\r\n* Refactor storage of positive and negative WIP\r\n\r\n* WIP\r\n\r\n* Add test_merge_simple_event_test\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Fix lint\r\n\r\n* Fix lint\r\n\r\n* Add delta test case\r\n\r\n* Avoid using current_point attributes\r\n\r\n---------\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf244ee515ce6a4e3b9",
    "number": 2962,
    "body": "Fixes #2961",
    "head_branch": "issue_2961",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix dead link (#2962)\n\nFixes #2961"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf344ee515ce6a4e3ba",
    "number": 2960,
    "body": "Fixes #2957\r\n\r\nTo make it easier to review this PR, [here](https://gist.github.com/ocelotl/9f7bf05743dd827fa0220dd14436fe17) is a function that converts floating point values in IEEE 754 format along with some test cases.",
    "head_branch": "issue_2957",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add exponent and logarithm mappings (#2960)\n\n* Add exponent and logarithm mappings\r\n\r\nFixes #2957\r\n\r\n* Fix comments\r\n\r\n* Remove example function\r\n\r\n* Fix lint and spelling\r\n\r\n* Add link to spec\r\n\r\n* Fix documentation to reference the exceptions\r\n\r\n* Refactor min and max scale\r\n\r\n* Set self._scale in parent only\r\n\r\n* Add explanation for IEEE 754\r\n\r\n* Use mantissa consistently\r\n\r\n* Refactor lock definition\r\n\r\n* Fix wrong fixed value\r\n\r\n* Fix lint\r\n\r\n* Fix test name\r\n\r\n* Update opentelemetry-sdk/tests/metrics/exponential_histogram/test_exponent_mapping.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Fix operator separator\r\n\r\n* Rename boundary functions\r\n\r\n* Add links to reference implementation\r\n\r\n* Fix lint and spelling\r\n\r\n* Revert \"Refactor lock definition\"\r\n\r\nThis reverts commit 064bb2b7d7f04f93891580c9cce4a6ee135bacd1.\r\n\r\n* Refactor initialization\r\n\r\n* Fix math format\r\n\r\n* Rename to normal and denormal\r\n\r\n* Remove errors from public interface\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf344ee515ce6a4e3bb",
    "number": 2959,
    "body": "# Description\r\n\r\nAdding user agent string to OTLP HTTP exporter. As part of the change, I refactored the content-type header as well.\r\n\r\nPart of #2958\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added unit test\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "codeboten/add-user-agent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`exporter-otlp-proto-http`: add user agent string (#2959)\n\n* `exporter-otlp-proto-http`: add user agent string\r\n\r\nAdding user agent string to OTLP HTTP exporter. As part of the change, I refactored the content-type header as well.\r\n\r\nPart of #2958\r\n\r\n* update changelog\r\n\r\n* fix linting, fix link\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf444ee515ce6a4e3bc",
    "number": 2954,
    "body": "# Description\r\n\r\nThis is a work around for https://github.com/open-telemetry/opentelemetry-python/issues/2880\r\nBy checking the api implementation before define anything in the generated code, it is able to have both versions of generated protobuf and so it allows the `opentelemetry-proto` to work with both `protobuf<=3.20` and `protobuf>=4.21`\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTested with both protobuf~=3.19.4 and protobuf==4.21.6 by importing any generated modules and it should not throw any error\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. - Link to PR:  https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1363\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/2880",
    "is_a_fork": true,
    "comments": [
      "This PR would be helpful for us at Jina AI, since open telemetry version cap in protobuf restricts our protobuf version.\r\n(we also did a similar hack to support both <=3.20 and >=4.21)",
      "@gen-xu thank you for the PR. Does the fix mentioned in https://github.com/open-telemetry/opentelemetry-python/issues/2880#issuecomment-1317377954 (along with loosening the dependencies) solve this issue as well? It seems like a good middle ground until we are ready to drop Protobuf 3.",
      "> @gen-xu thank you for the PR. Does the fix mentioned in [#2880 (comment)](https://github.com/open-telemetry/opentelemetry-python/issues/2880#issuecomment-1317377954) (along with loosening the dependencies) solve this issue as well? It seems like a good middle ground until we are ready to drop Protobuf 3.\r\n\r\nYes this should support both protobuf 3 and 4, but afaik there are some other protos (jaeger etc.) in the contrib repo might also need to get regenerated?",
      "@gen-xu I saw your comment here https://github.com/open-telemetry/opentelemetry-python/issues/2880#issuecomment-1222007097, where did you see that \"old protobuf library version won't be able to use newer generated protobuf code\"? Which version is the cutoff? I've opened https://github.com/protocolbuffers/protobuf/issues/11123 to get some clarity on this as I couldn't find it documented.\r\n\r\n> Yes this should support both protobuf 3 and 4, but afaik there are some other protos (jaeger etc.) in the contrib repo might also need to get regenerated?\r\n\r\n👍 ",
      "> @gen-xu I saw your comment here [#2880 (comment)](https://github.com/open-telemetry/opentelemetry-python/issues/2880#issuecomment-1222007097), where did you see that \"old protobuf library version won't be able to use newer generated protobuf code\"? Which version is the cutoff? I've opened [protocolbuffers/protobuf#11123](https://github.com/protocolbuffers/protobuf/issues/11123) to get some clarity on this as I couldn't find it documented.\r\n\r\nBasically this line in the generated code, the `builder` is introduced in 3.20, and code generated after that version uses the builder, and I believe the `upb` implementation is officially introduced as replacement for `cpp` for python `>=3.21` (a.k.a protobuf 4.21)\r\n\r\n```python\r\nfrom google.protobuf.internal import builder as _builder\r\n```\r\n\r\n\r\n",
      "@gen-xu right I know we need newer protoc to work with upb. I'm a bit confused because I generated the protobufs with latest `grpcio-tools` (which provides `libprotoc 3.21.6` protoc generator) and all of our tests are passing.\r\n\r\nIs there a case you've seen where the latest version of protoc does not work with `protobuf~=3.19`?\r\n\r\nedit see https://github.com/protocolbuffers/protobuf/issues/11123#issuecomment-1335705151, I think latest version should work OK for now.",
      "> @gen-xu right I know we need newer protoc to work with upb. I'm a bit confused because I generated the protobufs with latest `grpcio-tools` (which provides `libprotoc 3.21.6` protoc generator) and all of our tests are passing.\r\n> \r\n> Is there a case you've seen where the latest version of protoc does not work with `protobuf~=3.19`?\r\n\r\nif you use protoc `3.21.6`, it generates code that uses the `builder`, which doesn't really exsit in protobuf `3.19.x`.\r\nyou can try `pip install protobuf==3.19.6` when the newer generated code it will faill on this line\r\n```python\r\nfrom google.protobuf.internal import builder as _builder\r\n```\r\nI believe the reason why it passes all tests is that you are using `protobuf~=3.19` where `pip` actually will install `protobuf==3.20.x` for you (<4.x), and the `builder` is introduced in `protobuf>=3.20`.",
      "> I believe the reason why it passes all tests is that you are using `protobuf~=3.19` where `pip` actually will install `protobuf==3.20.x` for you (<4.x), and the `builder` is introduced in `protobuf>=3.20`.\r\n\r\nYou're right, I update my PR to actually test with ~=3.19.0 which resolves to 3.19.6. It works now with protos generated with grpcio-tools==1.48.1  (which provides protoc 3.19.4).\r\n\r\nThanks for talking this through. Does https://github.com/open-telemetry/opentelemetry-python/pull/3070 look good to you now as a solution for now?",
      "> > I believe the reason why it passes all tests is that you are using `protobuf~=3.19` where `pip` actually will install `protobuf==3.20.x` for you (<4.x), and the `builder` is introduced in `protobuf>=3.20`.\r\n> \r\n> You're right, I update my PR to actually test with ~=3.19.0 which resolves to 3.19.6. It works now with protos generated with grpcio-tools==1.48.1 (which provides protoc 3.19.4).\r\n> \r\n> Thanks for talking this through. Does #3070 look good to you now as a solution for now?\r\n\r\nYup that looks good to me! I am closing this PR since #3070 works."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf544ee515ce6a4e3bd",
    "number": 2952,
    "body": "Fixes #2947",
    "head_branch": "issue_2947",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update default explicit bucket histogram boundaries (#2952)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf644ee515ce6a4e3be",
    "number": 2950,
    "body": null,
    "head_branch": "release/1.13.0-0.34b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.13.0-0.34b0 (#2950)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf744ee515ce6a4e3bf",
    "number": 2949,
    "body": "Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.15.0 to 3.18.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/protocolbuffers/protobuf/releases\">protobuf's releases</a>.</em></p>\n<blockquote>\n<h2>Protocol Buffers v3.18.3</h2>\n<h1>C++</h1>\n<ul>\n<li>Reduce memory consumption of MessageSet parsing</li>\n<li>This release addresses a <a href=\"https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-8gq9-2x98-w8hf\">Security Advisory for C++ and Python users</a></li>\n</ul>\n<h2>Protocol Buffers v3.16.1</h2>\n<h1>Java</h1>\n<ul>\n<li>Improve performance characteristics of UnknownFieldSet parsing (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9371\">#9371</a>)</li>\n</ul>\n<h2>Protocol Buffers v3.18.2</h2>\n<h1>Java</h1>\n<ul>\n<li>Improve performance characteristics of UnknownFieldSet parsing (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9371\">#9371</a>)</li>\n</ul>\n<h2>Protocol Buffers v3.18.1</h2>\n<h1>Python</h1>\n<ul>\n<li>Update setup.py to reflect that we now require at least Python 3.5 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8989\">#8989</a>)</li>\n<li>Performance fix for DynamicMessage: force GetRaw() to be inlined (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9023\">#9023</a>)</li>\n</ul>\n<h1>Ruby</h1>\n<ul>\n<li>Update ruby_generator.cc to allow proto2 imports in proto3 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9003\">#9003</a>)</li>\n</ul>\n<h2>Protocol Buffers v3.18.0</h2>\n<h1>C++</h1>\n<ul>\n<li>Fix warnings raised by clang 11 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8664\">#8664</a>)</li>\n<li>Make StringPiece constructible from std::string_view (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8707\">#8707</a>)</li>\n<li>Add missing capability attributes for LLVM 12 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8714\">#8714</a>)</li>\n<li>Stop using std::iterator (deprecated in C++17). (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8741\">#8741</a>)</li>\n<li>Move field_access_listener from libprotobuf-lite to libprotobuf (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8775\">#8775</a>)</li>\n<li>Fix <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/7047\">#7047</a> Safely handle setlocale (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8735\">#8735</a>)</li>\n<li>Remove deprecated version of SetTotalBytesLimit() (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8794\">#8794</a>)</li>\n<li>Support arena allocation of google::protobuf::AnyMetadata (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8758\">#8758</a>)</li>\n<li>Fix undefined symbol error around SharedCtor() (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8827\">#8827</a>)</li>\n<li>Fix default value of enum(int) in json_util with proto2 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8835\">#8835</a>)</li>\n<li>Better Smaller ByteSizeLong</li>\n<li>Introduce event filters for inject_field_listener_events</li>\n<li>Reduce memory usage of DescriptorPool</li>\n<li>For lazy fields copy serialized form when allowed.</li>\n<li>Re-introduce the InlinedStringField class</li>\n<li>v2 access listener</li>\n<li>Reduce padding in the proto's ExtensionRegistry map.</li>\n<li>GetExtension performance optimizations</li>\n<li>Make tracker a static variable rather than call static functions</li>\n<li>Support extensions in field access listener</li>\n<li>Annotate MergeFrom for field access listener</li>\n<li>Fix incomplete types for field access listener</li>\n<li>Add map_entry/new_map_entry to SpecificField in MessageDifferencer. They\nrecord the map items which are different in MessageDifferencer's reporter.</li>\n<li>Reduce binary size due to fieldless proto messages</li>\n<li>TextFormat: ParseInfoTree supports getting field end location in addition to\nstart.</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/a902b39270841beafc307dfa709610aa1cac2f06\"><code>a902b39</code></a> No-op whitespace change</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/ae62acd7293e5a80378faeaac67b3baadba810d5\"><code>ae62acd</code></a> Updating version.json and repo version numbers to: 18.3</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/f43ac49b91007501ce1683967b04dcfb47183478\"><code>f43ac49</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/10542\">#10542</a> from deannagarcia/3.18.x</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/9efdf55814add154d3c2646652f527a51d4a21ea\"><code>9efdf55</code></a> Add missing includes</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/d1635e1496f51e0d5653d856211e8821bc47adc4\"><code>d1635e1</code></a> Apply patch</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/5b37c91d62d7fe097253ac64518b993b096e9386\"><code>5b37c91</code></a> Update version.json with &quot;lts&quot;: true (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/10534\">#10534</a>)</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/c39d622dba8343c50876770e6c2cc580781f6264\"><code>c39d622</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/10529\">#10529</a> from protocolbuffers/deannagarcia-patch-5</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/f77d3b643209437f186755737499a841886706cd\"><code>f77d3b6</code></a> Update version.json</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/8178b06523f67923f538c479c148af765b09b628\"><code>8178b06</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/10503\">#10503</a> from deannagarcia/3.18.x</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/24ca839fffdd2f795acb26686a312de9892f2c6b\"><code>24ca839</code></a> Add version file</li>\n<li>Additional commits viewable in <a href=\"https://github.com/protocolbuffers/protobuf/compare/v3.15.0...v3.18.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=protobuf&package-manager=pip&previous-version=3.15.0&new-version=3.18.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/protobuf-3.18.3",
    "is_a_fork": false,
    "comments": [
      "Dependabot attempted to update this pull request, but because the branch `dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/protobuf-3.18.3` is protected it was unable to do so.",
      "@dependabot recreate",
      "@dependabot close",
      ":("
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf744ee515ce6a4e3c0",
    "number": 2948,
    "body": "Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.15.0 to 3.18.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/protocolbuffers/protobuf/releases\">protobuf's releases</a>.</em></p>\n<blockquote>\n<h2>Protocol Buffers v3.18.3</h2>\n<h1>C++</h1>\n<ul>\n<li>Reduce memory consumption of MessageSet parsing</li>\n<li>This release addresses a <a href=\"https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-8gq9-2x98-w8hf\">Security Advisory for C++ and Python users</a></li>\n</ul>\n<h2>Protocol Buffers v3.16.1</h2>\n<h1>Java</h1>\n<ul>\n<li>Improve performance characteristics of UnknownFieldSet parsing (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9371\">#9371</a>)</li>\n</ul>\n<h2>Protocol Buffers v3.18.2</h2>\n<h1>Java</h1>\n<ul>\n<li>Improve performance characteristics of UnknownFieldSet parsing (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9371\">#9371</a>)</li>\n</ul>\n<h2>Protocol Buffers v3.18.1</h2>\n<h1>Python</h1>\n<ul>\n<li>Update setup.py to reflect that we now require at least Python 3.5 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8989\">#8989</a>)</li>\n<li>Performance fix for DynamicMessage: force GetRaw() to be inlined (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9023\">#9023</a>)</li>\n</ul>\n<h1>Ruby</h1>\n<ul>\n<li>Update ruby_generator.cc to allow proto2 imports in proto3 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9003\">#9003</a>)</li>\n</ul>\n<h2>Protocol Buffers v3.18.0</h2>\n<h1>C++</h1>\n<ul>\n<li>Fix warnings raised by clang 11 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8664\">#8664</a>)</li>\n<li>Make StringPiece constructible from std::string_view (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8707\">#8707</a>)</li>\n<li>Add missing capability attributes for LLVM 12 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8714\">#8714</a>)</li>\n<li>Stop using std::iterator (deprecated in C++17). (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8741\">#8741</a>)</li>\n<li>Move field_access_listener from libprotobuf-lite to libprotobuf (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8775\">#8775</a>)</li>\n<li>Fix <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/7047\">#7047</a> Safely handle setlocale (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8735\">#8735</a>)</li>\n<li>Remove deprecated version of SetTotalBytesLimit() (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8794\">#8794</a>)</li>\n<li>Support arena allocation of google::protobuf::AnyMetadata (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8758\">#8758</a>)</li>\n<li>Fix undefined symbol error around SharedCtor() (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8827\">#8827</a>)</li>\n<li>Fix default value of enum(int) in json_util with proto2 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8835\">#8835</a>)</li>\n<li>Better Smaller ByteSizeLong</li>\n<li>Introduce event filters for inject_field_listener_events</li>\n<li>Reduce memory usage of DescriptorPool</li>\n<li>For lazy fields copy serialized form when allowed.</li>\n<li>Re-introduce the InlinedStringField class</li>\n<li>v2 access listener</li>\n<li>Reduce padding in the proto's ExtensionRegistry map.</li>\n<li>GetExtension performance optimizations</li>\n<li>Make tracker a static variable rather than call static functions</li>\n<li>Support extensions in field access listener</li>\n<li>Annotate MergeFrom for field access listener</li>\n<li>Fix incomplete types for field access listener</li>\n<li>Add map_entry/new_map_entry to SpecificField in MessageDifferencer. They\nrecord the map items which are different in MessageDifferencer's reporter.</li>\n<li>Reduce binary size due to fieldless proto messages</li>\n<li>TextFormat: ParseInfoTree supports getting field end location in addition to\nstart.</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/a902b39270841beafc307dfa709610aa1cac2f06\"><code>a902b39</code></a> No-op whitespace change</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/ae62acd7293e5a80378faeaac67b3baadba810d5\"><code>ae62acd</code></a> Updating version.json and repo version numbers to: 18.3</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/f43ac49b91007501ce1683967b04dcfb47183478\"><code>f43ac49</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/10542\">#10542</a> from deannagarcia/3.18.x</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/9efdf55814add154d3c2646652f527a51d4a21ea\"><code>9efdf55</code></a> Add missing includes</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/d1635e1496f51e0d5653d856211e8821bc47adc4\"><code>d1635e1</code></a> Apply patch</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/5b37c91d62d7fe097253ac64518b993b096e9386\"><code>5b37c91</code></a> Update version.json with &quot;lts&quot;: true (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/10534\">#10534</a>)</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/c39d622dba8343c50876770e6c2cc580781f6264\"><code>c39d622</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/10529\">#10529</a> from protocolbuffers/deannagarcia-patch-5</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/f77d3b643209437f186755737499a841886706cd\"><code>f77d3b6</code></a> Update version.json</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/8178b06523f67923f538c479c148af765b09b628\"><code>8178b06</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/10503\">#10503</a> from deannagarcia/3.18.x</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/24ca839fffdd2f795acb26686a312de9892f2c6b\"><code>24ca839</code></a> Add version file</li>\n<li>Additional commits viewable in <a href=\"https://github.com/protocolbuffers/protobuf/compare/v3.15.0...v3.18.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=protobuf&package-manager=pip&previous-version=3.15.0&new-version=3.18.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/protobuf-3.18.3",
    "is_a_fork": false,
    "comments": [
      "Dependabot attempted to update this pull request, but because the branch `dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/protobuf-3.18.3` is protected it was unable to do so.",
      "@dependabot close",
      "😭 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf844ee515ce6a4e3c1",
    "number": 2945,
    "body": "# Description\r\n\r\nThis code doesn't work at all. If you try to run the example and end up with an error from the exporter, everything fall-apart due to the backoff code:\r\n\r\n```\r\nTransient error StatusCode.UNAVAILABLE encountered while exporting traces, retrying in Nones.\r\nException while exporting Span batch.\r\nTraceback (most recent call last):\r\n  File \"/Users/israelhalle/flared/pyro/venv/lib/python3.10/site-packages/opentelemetry/exporter/otlp/proto/grpc/exporter.py\", line 305, in _export\r\n    self._client.Export(\r\n  File \"/Users/israelhalle/flared/pyro/venv/lib/python3.10/site-packages/grpc/_channel.py\", line 946, in __call__\r\n    return _end_unary_response_blocking(state, call, False, None)\r\n  File \"/Users/israelhalle/flared/pyro/venv/lib/python3.10/site-packages/grpc/_channel.py\", line 849, in _end_unary_response_blocking\r\n    raise _InactiveRpcError(state)\r\ngrpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\r\n        status = StatusCode.UNAVAILABLE\r\n        details = \"failed to connect to all addresses; last error: UNKNOWN: Failed to connect to remote host: Connection refused\"\r\n        debug_error_string = \"UNKNOWN:Failed to pick subchannel {created_time:\"2022-09-22T18:58:59.699249-04:00\", children:[UNKNOWN:failed to connect to all addresses; last error: UNKNOWN: Failed to connect to remote host: Connection refused {created_time:\"2022-09-22T18:58:59.699248-04:00\", grpc_status:14}]}\"\r\n>\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/israelhalle/flared/pyro/venv/lib/python3.10/site-packages/opentelemetry/sdk/trace/export/__init__.py\", line 367, in _export_batch\r\n    self.span_exporter.export(self.spans_list[:idx])  # type: ignore\r\n  File \"/Users/israelhalle/flared/pyro/venv/lib/python3.10/site-packages/opentelemetry/exporter/otlp/proto/grpc/trace_exporter/__init__.py\", line 291, in export\r\n    return self._export(spans)\r\n  File \"/Users/israelhalle/flared/pyro/venv/lib/python3.10/site-packages/opentelemetry/exporter/otlp/proto/grpc/exporter.py\", line 345, in _export\r\n    sleep(delay)\r\nTypeError: 'NoneType' object cannot be interpreted as an integer\r\n```\r\n\r\nAs it turns out, `backoff.expo` always yield `None` first: https://github.com/litl/backoff/blob/master/backoff/_wait_gen.py#L23 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan on my machine. With this fix the code above now result with:\r\n\r\n```\r\nTransient error StatusCode.UNAVAILABLE encountered while exporting traces, retrying in 1s.\r\nTransient error StatusCode.UNAVAILABLE encountered while exporting traces, retrying in 2s.\r\nTransient error StatusCode.UNAVAILABLE encountered while exporting traces, retrying in 4s.\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-exporter-backoff",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: isra17 / name: Israël Hallé  (d384a79f5d6ce9f674ad6aa0a4cd189eda728236)</li></ul>",
      "Seems like other PR have more complete fix. Closing!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cf944ee515ce6a4e3c2",
    "number": 2944,
    "body": null,
    "head_branch": "fix-scripts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update scripts (#2944)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cfa44ee515ce6a4e3c3",
    "number": 2943,
    "body": "Fixes #2926",
    "head_branch": "issue_2926",
    "is_a_fork": true,
    "comments": [
      "@ocelotl \r\nWhy skip changelog? I think renames should be included as part of it. We already include logging related entries in the changelog despite it being experimental.",
      "Done :v: ",
      "@ocelotl are you planning to add the API package that includes things like `LoggerProvider` and `Logger` interfaces, and global setter and getter providers in follow-up PR(s)?",
      "> @ocelotl are you planning to add the API package that includes things like `LoggerProvider` and `Logger` interfaces, and global setter and getter providers in follow-up PR(s)?\r\n\r\nsorry, which API package? I was under the impression this issue was only about renaming SDK symbols.",
      "Renaming is only part of it but the spec now has the logs API as well https://github.com/open-telemetry/opentelemetry-specification/tree/main/specification/logs",
      "> Renaming is only part of it but the spec now has the logs API as well https://github.com/open-telemetry/opentelemetry-specification/tree/main/specification/logs\r\n\r\nOk, better to track this in a new issue then"
    ],
    "commit_messages": [
      "Update log symbol names (#2943)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cfb44ee515ce6a4e3c4",
    "number": 2937,
    "body": "Fixes #2936",
    "head_branch": "issue_2936",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update contrib repo SHA (#2937)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cfc44ee515ce6a4e3c5",
    "number": 2935,
    "body": "# Description\r\n\r\nFollowing this release https://github.com/open-telemetry/opentelemetry-specification/releases/tag/v1.13.0. We might need to update instrumentation with new semconv.",
    "head_branch": "bump-spec-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cfc44ee515ce6a4e3c6",
    "number": 2931,
    "body": "Changed line 27 from else if -> elif to fix the syntax error mentioned in Issue https://github.com/open-telemetry/opentelemetry-python/issues/2921",
    "head_branch": "fix_2925",
    "is_a_fork": true,
    "comments": [
      "This is no longer required. See #2929 ."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cfd44ee515ce6a4e3c7",
    "number": 2930,
    "body": "Fixes #2421",
    "head_branch": "issue_2421",
    "is_a_fork": true,
    "comments": [
      "Closing this PR to split it in smaller PRs."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cfe44ee515ce6a4e3c8",
    "number": 2929,
    "body": null,
    "head_branch": "scripts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update scripts and lint configs (#2929)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200cff44ee515ce6a4e3c9",
    "number": 2925,
    "body": "Changed line 27 from else if ->  elif to fix the syntax error mentioned in Issue #2921",
    "head_branch": "issue_2921",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/2925/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (85c633a7ad97615c936c0832729adce9e35d7c64, 4c19c6fea131f71b477be9678b7b13a775a00351)</li><li>:white_check_mark: login: sangeethjohn07 / name: Sangeeth John  (1d4211f70b5a4f6e266cb73d83908dd687c01c29)</li><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/2925/#/?version=2' target='_blank'>:x:</a> - login: @sangjohn . The commit (b5212d88be11b81e230b08e7b7a26a6866868d23, 0d459f2cc6774bc0ae0e764bc1c5242e2c5e68ae, d86a5c70d0a28226cf9e9470f4afe6d4231774ba) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/2925/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "Please sign the CLA"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0044ee515ce6a4e3ca",
    "number": 2923,
    "body": "Fixes #2922 ",
    "head_branch": "feature/enable_misspell_check_workflow",
    "is_a_fork": true,
    "comments": [
      "There is already [codespell](https://github.com/open-telemetry/opentelemetry-python/blob/main/tox.ini#L185) check and [workflow](https://github.com/open-telemetry/opentelemetry-python/blob/main/.github/workflows/test.yml#L89) which already fixed a lot of typos [earlier](https://github.com/open-telemetry/opentelemetry-python/pull/2868). ",
      "> There is already [codespell](https://github.com/open-telemetry/opentelemetry-python/blob/main/tox.ini#L185) check and [workflow](https://github.com/open-telemetry/opentelemetry-python/blob/main/.github/workflows/test.yml#L89) which already fixed a lot of typos [earlier](https://github.com/open-telemetry/opentelemetry-python/pull/2868).\r\n\r\nOK, I will close this PR later."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0044ee515ce6a4e3cb",
    "number": 2919,
    "body": "# Description\r\n\r\nThis adds `force_flush` to span exporters to ensure the spec-compliance. Since the exporters don't do any batching on their own they just return true.\r\n\r\nFixes #2872\r\nFixes #1779",
    "head_branch": "tracing-force-flush",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add force_flush to span exporters (#2919)\n\n* Add force_flush to span exporters\r\n\r\n* Fix lint\r\n\r\n* add missing method to grpc exporter\r\n\r\n* Update contrib SHA\r\n\r\n* Add CHANGELOG entry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0144ee515ce6a4e3cc",
    "number": 2918,
    "body": "# Description\r\n\r\nThe metrics API/SDK parts are public since 1.12 release. While the code is updated to use the latest change the dep is not pinned to the correct version. This bumps the minimum required version to 1.12.\r\n\r\nFixes #2883 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
    "head_branch": "bump-sdk-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump API/SDK version for exporters (#2918)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0244ee515ce6a4e3cd",
    "number": 2916,
    "body": null,
    "head_branch": "update-emp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md (#2916)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0344ee515ce6a4e3ce",
    "number": 2915,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/2829.\r\n\r\n# Description\r\nPrevents the use of backoff >= 2.0.0 which has breaking changes that are not handled by the code.\r\n\r\nFixes #2829 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Run locally with pinned version to 1.11.1\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This was originally pinned to strict version but later another contributed made the wide range of acceptable version because their project uses the 2.0. I would rather encourage you to fix the bug instead since the users can still pin the lower version.",
      "Done, though I haven't tested it.",
      "@Yamakaky Please add tests",
      "Oh I see, I'll add that",
      "@Yamakaky we are planning on releasing `1.13`/`0.34b0` this week or early next week. Please address the comments and get this merged if you would like to see this included in next release.",
      "There it is! I updated to backoff 2.0 for grpc and http.",
      "Hum, I'm not very familiar with tox and how your testing works, so help would be appreciated for fixing the CI issues!",
      "Note: if this can't be merged for 1.13, please at least add the quickfix to require backoff < 2. This repo cannot work with v2.",
      "You could pin it to `1.11.1` so pip doesn't install `2.x`.",
      "That's what I did for the first version of my PR. Should I do that again, and keep this long term fix for later?",
      "See #2980 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0444ee515ce6a4e3cf",
    "number": 2914,
    "body": "## Description\n\nThis updates the package metadata for both packages in `docs/examples/error_handler` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/docs/examples/error_handler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata docs/examples/error_handler (#2914)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0544ee515ce6a4e3d0",
    "number": 2913,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-test-utils` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/tests/opentelemetry-test-utils",
    "is_a_fork": true,
    "comments": [
      "Fixed!"
    ],
    "commit_messages": [
      "Update package metadata opentelemetry-test-utils (#2913)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0544ee515ce6a4e3d1",
    "number": 2912,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-opentracing-shim` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/shim/opentelemetry-opentracing-shim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentracing-shim (#2912)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0644ee515ce6a4e3d2",
    "number": 2911,
    "body": "fixes https://github.com/open-telemetry/opentelemetry-python/issues/2910",
    "head_branch": "metric",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix preferred_aggregation + preferred_temporality example (#2911)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0744ee515ce6a4e3d3",
    "number": 2909,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-propagator-jaeger` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/propagator/opentelemetry-propagator-jaeger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-propagator-jaeger (#2909)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0844ee515ce6a4e3d4",
    "number": 2908,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-propagator-b3` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/propagator/opentelemetry-propagator-b3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-propagator-b3 (#2908)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0944ee515ce6a4e3d5",
    "number": 2907,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-semantic-conventions` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/opentelemetry-semantic-conventions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-semantic-conventions (#2907)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0a44ee515ce6a4e3d6",
    "number": 2906,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-sdk` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/opentelemetry-sdk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-sdk (#2906)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0a44ee515ce6a4e3d7",
    "number": 2905,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-proto` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/opentelemetry-proto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-proto (#2905)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0b44ee515ce6a4e3d8",
    "number": 2904,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-zipkin-proto-http` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-zipkin-proto-http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-exporter-zipkin-proto-http (#2904)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0c44ee515ce6a4e3d9",
    "number": 2903,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-zipkin-json` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-zipkin-json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata (#2903)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0d44ee515ce6a4e3da",
    "number": 2902,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-zipkin` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-zipkin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-exporter-zipkin (#2902)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0e44ee515ce6a4e3db",
    "number": 2901,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-prometheus` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-prometheus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-exporter-prometheus (#2901)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d0f44ee515ce6a4e3dc",
    "number": 2900,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-otlp-proto-http` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-otlp-proto-http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-exporter-otlp-proto-http (#2900)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1044ee515ce6a4e3dd",
    "number": 2899,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-otlp-proto-grpc` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-otlp-proto-grpc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-exporter-otlp-proto-grpc (#2899)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1044ee515ce6a4e3de",
    "number": 2898,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-otlp` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-otlp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-exporter-otlp (#2898)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1144ee515ce6a4e3df",
    "number": 2897,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-opencensus` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-opencensus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata (#2897)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1244ee515ce6a4e3e0",
    "number": 2896,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-jaeger-thrift` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-jaeger-thrift",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata (#2896)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1344ee515ce6a4e3e1",
    "number": 2895,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-jaeger-proto-grpc` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-jaeger-proto-grpc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata (#2895)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1444ee515ce6a4e3e2",
    "number": 2894,
    "body": "## Description\n\nThis updates the package metadata for `opentelemetry-exporter-jaeger` in accordance with #2884\n\n## Type of change\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Contrib Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-jaeger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-exporter-jaeger (#2894)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1444ee515ce6a4e3e3",
    "number": 2893,
    "body": "# Description\r\n\r\nFixes #2586\r\n\r\nAdding support for specifying OTLP export protocol using env vars, as defined in the [specifications](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md#specify-protocol).\r\n\r\nSince the SDK already supports setting the protocol using the values `otlp_proto_grpc` and `otlp_proto_http` of `OTEL_TRACES_EXPORTER`, these values are still supported and have priority over the new supported variables. In case of conflict, a warning will be printed.\r\n\r\nFuture support for configuring metrics and logs with HTTP exporter is already added, although those do not exist yet, therefore will result in a `RuntimeError`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- opentelemetry-sdk/tests/test_configurator.py::TestExporterNames\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nSee https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1250\r\nContrib repo change is not necessarily required, but it is related to fixing the same issue.  \r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "otlp-protocol-env-vars",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ronyis / name: Ron Yishai  (0ef86ee87f6308ca9755785011deeade39b2b370)</li></ul>",
      "> in the PR you mentioned:\r\n> \r\n> ```\r\n> Since the SDK already supports setting the protocol using the values otlp_proto_grpc and otlp_proto_http of OTEL_TRACES_EXPORTER, these values are still supported and have priority over the new supported variables. In case of conflict, a warning will be printed.\r\n> ```\r\n> \r\n> Is our goal to deprecate `otlp_proto_grpc/http` over time or discourage the use of them? if so maybe we should issue a deprecation warning / log\r\n\r\n@srikanthccv what do you think about that?",
      "Ideally we should deprecate them. It may be our shortsightedness because the way this going - for someone who is Installing just the `*-proto-http` package why do they need need to configure `*_PROTOCOL` again to get it to work correctly. ",
      "I think it's OK that the user will have to explicitly specify the OTLP protocol in case he doesn't use the default value.\r\nWe can also add the functionality of trying to import the HTTP exporter, in case the gRPC one isn't found. Personally, I think that it should better be defined in the specifications first."
    ],
    "commit_messages": [
      "Adding support for setting OTLP exporter protocol by env vars (#2893)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1544ee515ce6a4e3e4",
    "number": 2892,
    "body": "# Description\r\n\r\nFixes #2586 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otlp-protocol-env-vars",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/2892/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/185478926/2892/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The commit (e4cd118af8c6c4899b147358e1204926f872c821). This user is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1644ee515ce6a4e3e5",
    "number": 2891,
    "body": "# Description\r\n\r\nAdd OTLP/HTTP metric exporter\r\n\r\nFixes #2447 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested for 1 week on a GCP Cloud Run dev environment\r\n- [x] Added 1 new test\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "http-metrics",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: RangelReale / name: Rangel Reale  (ee00bbb472c604aae7453982ff084cd457c8ae01, 5bf00484f14ea26da6578fb6388e820e6cff3f41, 24c6f375b5da2875a8911dc4276b31f7f2d71f99)</li></ul>",
      "do i understand this correctly - the present release of OTLP SDK .. `opentelemetry-export-otlp==1.5.0` on PyPy installed via pip cannot export metrics via GRPC or HTTP? ",
      "> do i understand this correctly - the present release of OTLP SDK .. `opentelemetry-export-otlp==1.5.0` on PyPy installed via pip cannot export metrics via GRPC or HTTP?\r\n\r\nfor GRPC there's an exporrter already, only the HTTP one wasn't made yet.",
      "@RangelReale \r\nPlease pull from the latest main branch to fix the failing contrib tests. Also please fix the lint/spellcheck so we can get this merged."
    ],
    "commit_messages": [
      "Add OTLP/HTTP metric exporter (#2891)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1744ee515ce6a4e3e6",
    "number": 2886,
    "body": "Fixes #2885",
    "head_branch": "issue_2885",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Mark test as flaky (#2886)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1844ee515ce6a4e3e7",
    "number": 2881,
    "body": "# Description  \r\n\r\nAccording to the [Logs Data Model](https://opentelemetry.io/docs/reference/specification/logs/data-model/), `SeverityNumber` is an [integer number](https://opentelemetry.io/docs/reference/specification/logs/data-model/#field-severitynumber).  This PR will change the `LogRecord.to_json()` func to use the `SeverityNumber` numeric value.  Previously the `SeverityNumber` type, which is an `enum.Enum`, was being represented as a string value.\r\n\r\nBefore this PR:\r\n```\r\n{\r\n    \"body\": \"I am an error.\",\r\n    \"severity_number\": \"<SeverityNumber.ERROR: 17>\", <<<--- I am NOT an integer number\r\n    \"severity_text\": \"ERROR\",\r\n    \"attributes\": {\r\n        \"code.filepath\": \"/Users/doug.ramirez/code/urfcs/urfc65/code/run.py\",\r\n        \"code.lineno\": 9\r\n    },\r\n    \"timestamp\": \"2022-08-18T22:22:28.894490Z\",\r\n    \"trace_id\": \"0x00000000000000000000000000000000\",\r\n    \"span_id\": \"0x0000000000000000\",\r\n    \"trace_flags\": 0,\r\n    \"resource\": \"BoundedAttributes({'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.12.0', 'net.host.name': 'Doug.Ramirez', 'net.host.ip': '127.0.0.1', 'service.name': '/Users/doug.ramirez/code/urfcs/urfc65/code/run.py', 'service.version': '6.6.6'}, maxlen=None)\"\r\n}\r\n```\r\n\r\nAfter this PR:\r\n```\r\n{\r\n    \"body\": \"I am an error.\",\r\n    \"severity_number\": 17, <<<--- I am an integer number\r\n    \"severity_text\": \"ERROR\",\r\n    \"attributes\": {\r\n        \"code.filepath\": \"/Users/doug.ramirez/code/urfcs/urfc65/code/run.py\",\r\n        \"code.lineno\": 9\r\n    },\r\n    \"timestamp\": \"2022-08-19T21:25:44.861784Z\",\r\n    \"trace_id\": \"0x00000000000000000000000000000000\",\r\n    \"span_id\": \"0x0000000000000000\",\r\n    \"trace_flags\": 0,\r\n    \"resource\": \"BoundedAttributes({'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.12.0', 'net.host.name': 'Doug.Ramirez', 'net.host.ip': '127.0.0.1', 'service.name': '/Users/doug.ramirez/code/urfcs/urfc65/code/run.py', 'service.version': '6.6.6'}, maxlen=None)\"\r\n}\r\n```\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran opentelemetry-api test suite\r\n- [x] Ran opentelemetry-sdk test suite\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "log-severity-number-value",
    "is_a_fork": true,
    "comments": [
      "Just to reiterate, this exporter exists for debugging purpose only and in that context I think it make sense to show the way it is shown instead of plain number which one can't understand directly. For example, in tracing `SpanKind` is enum with 0-5 value according to data model but we show it using `SpanKind.SERVER` instead `2` for the same reason. The formatted values in stdout/console exporter are not guaranteed to be same type as their definition in data model. The real exporter make sure they adhere to model but not this one. We do this for all signals. The `to_json` was added mainly for the console exporter and seems like it is being used in different context and expectation now changed to correctly serialized json encoded values. In that case we will probably have to get rid of it to prevent the unexpected use. \r\n\r\nP.S: Please do not use this as a substitute for official exporters (OTLP, File etc..) that exists to support the data model. ",
      "As I mentioned, this is intended for the debugging purpose of SDK. Making it an integer is not user-friendly when read by the naked eye. The same applies to an enum like `SpanKind`. If you want, you can contribute a JSON exporter or something similar in contrib to make it clear that the output will be JSON deserialised. I am going to close this issue, thanks. Feel free to send a PR in contrib repo."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1844ee515ce6a4e3e8",
    "number": 2879,
    "body": "Not sure why this didn't fail in the original PR but the spell check is failing for LICENSE on main which we don't modify and copy as is.",
    "head_branch": "skip-license",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Skip LICENSE files for spellcheck (#2879)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1944ee515ce6a4e3e9",
    "number": 2878,
    "body": "# Description\r\nFixes #2871. Adding spellcheck on all files as part of the tox phase in the build. Additionally, fixed all discovered typos so the CI will pass.\r\n\r\n## Type of change\r\nPlease delete options that are not relevant.\r\n- [X] Chore (codebase fix that does not change the behavior in any way)\r\n- [X] This change requires a documentation update (internal)\r\n\r\n# How Has This Been Tested?\r\nThis PR essentially adds a test. To run spellcheck run `tox -e spellcheck`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated - no need\r\n- [ ] Unit tests have been added - no need\r\n- [X] Documentation has been updated - the internal one, in `CONTRIBUTING.md`\r\n",
    "head_branch": "codespell-ci",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ronnathaniel / name: Ron Nathaniel  (258ce751dac9e58b3afe64e30807af484e35bdbf)</li><li>:white_check_mark: login: galbash / name: Gal Bashan  (96279787e0c7814f03d7c037fb4cc0e1200bd379, 33072589a2ce5930db0fe612320d830898f11892, 47bdb6441f578f452a7b20cdfda63ce85128987f)</li></ul>",
      "When this is approved, we may want to do the same for the python-contrib. I'll open an issue and submit a fix once I gets approval for this one making sure that it is the right way to do it.",
      "I've broken this down to two commits so it's easier to review: the first adds codespell to the CI, and the second is just all the typo fixes",
      "Also, I have added spellcheck as another workflow, let me know if you think it makes more sense to place it under the lint testenv. I felt like it was a bit outside of lint scope, but both sounds totally reasonable to me so up to approvers :) ",
      "There was another PR which fixed the typos. It got merged. Please rebase your branch. I think we should also add this in actions workflow.",
      "@srikanthccv branch updated (via a merge but if we are squashing I think it doesn't matter, since it now detects 4 changed files, let me know if I am wrong). Regarding the actions workflow, I think it will be automatically added since the `test.yml` workflow invokes the `tox` command won't it? If not is the `test.yml` the right workflow to add it in/?",
      "It runs the tox but as you added a new environment for spellcheck it's not run automatically. You should update this line https://github.com/open-telemetry/opentelemetry-python/blob/main/.github/workflows/test.yml#L95",
      "Done. Two final questions to make sure this is the thing we want:\r\n1. Just making sure again that it makes sense that it is a separate test env and not included in lint\r\n2. I named it `spellcheck` so the name is not tied to the tool we are using but the value it provides, let me know if you'd rather me call the test env `codecov` too for simplicity ",
      "looks like `test_batch_span_processor_reset_timeout` fails on the sdk windows build. From a quick look it looks like the `after_calls` variables is not being initialized outside the loop, so if the `if` is never true, we get a reference to a non-declared var. Does it make sense to just initialize it to an empty list or will that harm the logic that the test is trying to achieve?"
    ],
    "commit_messages": [
      "Adding Codespell to the CI (#2878)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1a44ee515ce6a4e3ea",
    "number": 2877,
    "body": "Fixes #2876",
    "head_branch": "issue_2876",
    "is_a_fork": true,
    "comments": [
      "Based on the description in the issue, it sounds like the problem is the test cases are not calling `shutdown()` on the SDK which causes the background thread to leak in the tests and then export() after the test is ended?",
      "> Based on the description in the issue, it sounds like the problem is the test cases are not calling `shutdown()` on the SDK which causes the background thread to leak in the tests and then export() after the test is ended?\r\n\r\nWe automatically call `shutdown()` on exit (using `atexit` in the `MeterProvider`), so we should not need to call `shutdown()` manually. The issue here is that (if I am understanding Pytest correctly) when the `-s` option is not passed to Pytest, it keeps `stdout` open only during the _call_ phase of the tests (the actual testing) and not during the _teardown_ phase of the tests (when Pytest exits and the `shutdown` function previously registered via `atexit.register` is called).\r\n\r\nI think we could configure the `MeterProvider` in our tests not to call `shutdown()` on exit and add a teardown function for Pytest that calls the `shutdown()` function manually, but this function end up being called in the _teardown_ phase of the tests too, so I think we should get the same problem because by that moment the Pytest would have closed the `stdout` file already too if the `-s` option was not passed. That is just an hypotheses, though.\r\n\r\nAll this being said, we should still always use `devnull` to capture the output of the `ConsoleExporter` when testing it because we want to keep the testing output as clean as possible, even when `-s` is passed.",
      "> Ah I think you're right that it's the atexit handler. I'm guessing pytest patches `sys.stdout` during the test.\r\n> \r\n> > We automatically call `shutdown()` on exit (using `atexit` in the `MeterProvider`), so we should not need to call `shutdown()` manually.\r\n> \r\n> That is true, but pytest runs all of the test in a single process. So anything that happens in a test that doesn't get torn down will leak into all the tests. E.g. each PeriodicExportingMetricReader instance has a background thread which will leak and could really slow down our tests. I guess this is a separate issue from this one though.\r\n\r\nGood point, but I agree this is another issue for another PR.",
      "This test is failing in CI (but not in my laptop :roll_eyes:). Marking this PR as draft while I investigate this."
    ],
    "commit_messages": [
      "Refactor testing console exporter (#2877)\n\n* Use devnull instead of stdout when testing console exporter\r\n\r\nFixes #2876\r\n\r\n* Fix lint\r\n\r\n* Refactor test case\r\n\r\n* Debug test in CI\r\n\r\n* Fix test\r\n\r\n* Move reset metrics to setup and teardown\r\n\r\n* Remove repeated code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1b44ee515ce6a4e3eb",
    "number": 2875,
    "body": "Fixes #2874\r\nFixes #2704",
    "head_branch": "issue_2874",
    "is_a_fork": true,
    "comments": [
      "> Out of curiosity, why does this fix the issue?\r\n\r\nThe second time we instantiate a `MeterProvider` [here](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/tests/metrics/test_metrics.py#L81) an exception is raised [here](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py#L365) which stops [this](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py#L376) attribute from being set."
    ],
    "commit_messages": [
      "Stop MeterProvier attribute error message from showing up (#2875)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1c44ee515ce6a4e3ec",
    "number": 2873,
    "body": "# Description\r\n\r\nAdd a lock in `PeriodicExportingMetricReader` which is held whenever its paired exporter is called.\r\n\r\nFixes #2859\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new test (verified it the test was failing before the fix)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "metric-exporter-concurrency-2859",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update PeriodicExportingMetricReader to never call export() concurrently (#2873)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1d44ee515ce6a4e3ed",
    "number": 2870,
    "body": "# Description\r\n\r\nThis change will allow callers to the LogRecord.to_json() func to specify an `indent`.  Previously the func used `4` as the `indent`.  The consequences of that hard coding meant that log records were being emitted on > 1 line.\r\n\r\nThis PR will allow callers to send `None` to the func, which allows the LogRecord to be emitted on a single line.  This has the benefit of allowing downstream consumers to read the log as single line and index its keys for queries.\r\n\r\nThe example below shows how this can be leveraged by sending the `indent` level as a param to the LogRecord.to_json() func as part of a formatter to the exporter.\r\n\r\nThis addresses an issue previously documented here: [Single log line](https://stackoverflow.com/questions/72968235/single-log-line)\r\n\r\n`logs.py`\r\n```\r\nimport time\r\nfrom os import linesep\r\n\r\nfrom opentelemetry.sdk._logs import (\r\n    LogEmitterProvider,\r\n    LogRecord,\r\n    get_log_emitter_provider,\r\n    set_log_emitter_provider,\r\n)\r\nfrom opentelemetry.sdk._logs.export import ConsoleLogExporter, SimpleLogProcessor\r\nfrom opentelemetry.sdk.resources import Resource\r\n\r\n\r\ndef configure_log_emitter_provider(indent):\r\n    provider = LogEmitterProvider(resource=Resource.create())\r\n    set_log_emitter_provider(provider)\r\n    formatter = lambda record: LogRecord.to_json(record, indent=indent) + linesep\r\n    exporter = ConsoleLogExporter(formatter=formatter)\r\n    provider.add_log_processor(SimpleLogProcessor(exporter))\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    configure_log_emitter_provider(indent=None)\r\n    log_emitter = get_log_emitter_provider().get_log_emitter(\r\n        \"logs.py\",\r\n        \"0.0.1\",\r\n    )\r\n    log_record = LogRecord(\r\n        timestamp=time.time_ns(),\r\n        body=\"I am a log line.  The one and only.\",\r\n    )\r\n    log_emitter.emit(log_record)\r\n```\r\n\r\n```\r\n{\"body\": \"I am a log line.  The one and only.\", \"severity_number\": \"None\", \"severity_text\": null, \"attributes\": null, \"timestamp\": \"2022-08-10T13:26:04.048569Z\", \"trace_id\": \"\", \"span_id\": \"\", \"trace_flags\": null, \"resource\": \"\"}\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran opentelemetry-api test suite\r\n- [x] Ran opentelemetry-sdk test suite\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "log-to-json-indent",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: dougramirez / name: Doug Ramirez  (f7aa32e7f4bdb42d3b0692cbe8c217c1dcf47224, 3561bb3f946f098485234f0a403d91df439c6581)</li></ul>",
      "I just want to call out couple of things based on your usage. The `Console{Trace/Metric/Log}Exporter`s primarily intended for the debugging. And `Simple{Span/Log}Processor`s are blocking and are not recommended for production usage. This console exporter is not part of the [sdk specification](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/logs/logging-library-sdk.md) so it might be dropped in future. If you want to have log/trace co-relation you might just want to use https://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/logging/logging.html",
      "> I just want to call out couple of things based on your usage. The `Console{Trace/Metric/Log}Exporter`s primarily intended for the debugging. And `Simple{Span/Log}Processor`s are blocking and are not recommended for production usage. This console exporter is not part of the [sdk specification](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/logs/logging-library-sdk.md) so it might be dropped in future. If you want to have log/trace co-relation you might just want to use https://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/logging/logging.html\r\n\r\nThank you for the call out!  If the console exporter gets dropped, is it safe to assume that `LogRecord` and the `to_json()` func will exist in the future as the Logs Data Model is Stable?",
      "Maybe, but we do not guarantee anything about logs SDK.",
      "@dougramirez please fix the conflicts in this PR"
    ],
    "commit_messages": [
      "Add param for indent size to LogRecord.to_json() (#2870)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1d44ee515ce6a4e3ee",
    "number": 2869,
    "body": "# Description\r\n\r\nFix the documentation to state BatchSpanProcessor's fork-safety\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ronlut / name: Rony Lutsky  (4f08b3ac2d6983bf3275225106f23ba484c6d8c8, bf47ce27aef91e19c55d385223433bba813cccff)</li></ul>",
      "We no longer support 3.6, so I am closing this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1e44ee515ce6a4e3ef",
    "number": 2868,
    "body": "Found via this command:\r\n\r\n    codespell -L complies,ro,ans,ue,ot\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-typos",
    "is_a_fork": true,
    "comments": [
      "Created an issue https://github.com/open-telemetry/opentelemetry-python/issues/2871",
      ":partying_face: :partying_face: :partying_face: :partying_face: :partying_face:"
    ],
    "commit_messages": [
      "Fix typos (#2868)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d1f44ee515ce6a4e3f0",
    "number": 2867,
    "body": "## Background\r\n\r\nHello there! The Python packaging ecosystem has standardized on the interface for build backends ([PEP 517](https://peps.python.org/pep-0517/)/[PEP 660](https://peps.python.org/pep-0660/)) and the format for metadata declaration ([PEP 621](https://peps.python.org/pep-0621/)/[PEP 631](https://peps.python.org/pep-0631/)). As a result, the execution of `setup.py` files is now [deprecated](https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html).\r\n\r\nSo, I'm spending my free time updating important projects so that they are modernized and set an example for others 😄\r\n\r\n## Description\r\n\r\nThis implements [PEP 621](https://peps.python.org/pep-0621/) for `opentelemetry-api`, obviating the need for `setup.py`, `setup.cfg`, and `MANIFEST.in`. Our tooling already [supports this](https://github.com/open-telemetry/opentelemetry-python/blob/v1.12.0rc2/scripts/eachdist.py#L285). I'll open one PR per package after this one.\r\n\r\nThe build backend `hatchling` (of which I am a maintainer in the [PyPA](https://github.com/pypa)) is now used as that is the default in the official [Python packaging tutorial](https://packaging.python.org/en/latest/tutorials/packaging-projects/). Hatchling is available on all the major distribution channels such as [Debian](https://salsa.debian.org/python-team/packages/hatchling), [Fedora](https://src.fedoraproject.org/rpms/python-hatchling), [Arch Linux](https://archlinux.org/packages/community/any/python-hatchling/), [conda-forge](https://anaconda.org/conda-forge/hatchling), [Nixpkgs](https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/python-modules/hatchling/default.nix), [Alpine Linux](https://github.com/alpinelinux/aports/blob/master/community/py3-hatchling/APKBUILD), [FreeBSD](https://github.com/freebsd/freebsd-ports/blob/main/devel/py-hatchling/Makefile), [Gentoo Linux](https://github.com/gentoo/gentoo/tree/master/dev-python/hatchling), [MacPorts](https://github.com/macports/macports-ports/blob/master/python/py-hatchling/Portfile), [OpenEmbedded](https://github.com/openembedded/openembedded-core/commit/846e806181f1349be29cbce78c5041735dfd7e6f), [Spack](https://github.com/spack/spack/blob/develop/var/spack/repos/builtin/packages/py-hatchling/package.py), etc.\r\n\r\n## Type of change\r\n\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n```\r\ntox -e py38-opentelemetry-api\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated",
    "head_branch": "modernize-metadata",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv Hello! Should we add the `Skip Changelog` label?",
      "@ofek probably not since this doesn't change anything for an end user but we might want to discuss the dropping support for 3.6. We decided to keep it until around metrics SDK becomes stable enough.",
      "No worries, in that case I can keep the existing cap and only require 3.7+ in CI/CD. How does that sound?",
      "@lzchen @ocelotl what do you think?",
      ">No worries, in that case I can keep the existing cap and only require 3.7+ in CI/CD. How does that sound?\r\n\r\nsgtm",
      "Pushed! Would you mind triggering the CI with that button below?",
      "Only the changelog job is failing.",
      "Failing job is just a flake for a performance regression",
      "Everything is passing now! Though it looks like the 3.6 jobs are hard coded in this repo's GitHub settings as required/expected.",
      "There was a conflict due to a typo fix that just got merged so I rebased. As far as I'm reading, merging might actually remove the required 3.6 checks rather than having to edit the repo settings 🙂 ",
      "No, the merge can only be done after \"required\" checks are successful. So this requires updating settings.",
      "Oh okay, just let me know how I can help!",
      "@ofek \r\nQuestion for the future:\r\n\r\nIf we wanted to update [opentelemetry-instrumentation](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/opentelemetry-instrumentation/setup.cfg#L53) to use `pyproject.toml`, according to [PEP621](https://peps.python.org/pep-0621/):\r\n\r\n> Build back-ends MUST raise an error if the metadata defines a [project.entry-points.console_scripts] or [project.entry-points.gui_scripts] table, as they would be ambiguous in the face of [project.scripts] and [project.gui-scripts], respectively.\r\n\r\nWhat would be your recommendation in how to define an entry point with the `console_scripts` table? Just `project.scripts`?",
      "```toml\r\n[project.scripts]\r\nopentelemetry-instrument = \"opentelemetry.instrumentation.auto_instrumentation:run\"\r\nopentelemetry-bootstrap = \"opentelemetry.instrumentation.bootstrap:run\"\r\n\r\n[project.entry-points.opentelemetry_environment_variables]\r\ninstrumentation = \"opentelemetry.instrumentation.environment_variables\"\r\n```",
      "Awesome, @ofek :sunglasses: ",
      "@srikanthccv  @ocelotl \r\n\r\nLooks like Github is expecting for the Python3.6 test to run to pass status checks but we removed them from the build matrix in this PR. Should we remove Python3.6 from preventing builds passing?",
      "Yes, I was wondering if there is way to continue run tests for 3.6 but that doesn't seem possible.",
      "> Yes, I was wondering if there is way to continue run tests for 3.6 but that doesn't seem possible.\r\n\r\nWell, metrics is already stable, so we are ready to remove support for 3.6. I would prefer to first remove support for 3.6 and update our build system to use 3.7 in a separate PR just for clarity in our history, since dropping support for 3.6 is important for our users. I'll update #2360.",
      "This one? https://github.com/open-telemetry/opentelemetry-python/pull/2763",
      "> This one? #2763\r\n\r\nYes, I am working right now on making the test cases pass there.",
      "@ofek The PR that dropped support for py36 is merged. Please resolve the conflicts and we can get this merged.",
      "Done!"
    ],
    "commit_messages": [
      "Update package metadata (#2867)\n\n* Update package metadata\r\n\r\n* support Python 3.6\r\n\r\n* address review\r\n\r\n* update\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2044ee515ce6a4e3f1",
    "number": 2865,
    "body": null,
    "head_branch": "release/1.12.0-0.33b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release 1.12.0-0.33b0 (#2865)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2144ee515ce6a4e3f2",
    "number": 2863,
    "body": "# Description\r\n\r\nFixes #2584\r\n\r\n**Motivation:** Align `LogEmitter` implementation with OTel Log spec\r\n\r\n**Summary:**\r\n- Remove `LogEmitter.flush()`\r\n- Modify `LoggingHandler.__init__()`: \r\n  - Replace `log_emitter` arg with `log_emitter_provider`\r\n  - Obtain `log_emitter` via `log_emitter_provider`\r\n- Modify `LoggingHandler.flush()`: Replace `LogEmitter.flush()` with `LogEmitterProvider.force_flush()`\r\n- Update code and tests to adhere to new `LoggingHandler.__init__()` signature\r\n- Fix bugs in test mock `DummyLogEmitterProvider`\r\n- Remove `DummyLogEmitter.flush()` to align with removal of `LogEmitter.flush()`\r\n- Update example to adhere to new `LoggingHandler.__init__()` signature\r\n\r\n**ps:** First time contributing -- let me know if you need me to change/add anything!\r\n\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Ran `opentelemetry-sdk` test suite\r\n\r\n<details>\r\n  <summary>Test Results</summary>\r\n\r\n```\r\n> tox -e opentelemetry-sdk\r\nopentelemetry-sdk installed: asgiref==3.5.2,atomicwrites==1.4.1,attrs==22.1.0,colorama==0.4.5,Deprecated==1.2.13,flaky==3.7.0,iniconfig==1.1.1,opentelemetry-api @ file:///C:/.../opentelemetry-api,opentelemetry-sdk @ file:///C:/.../opentelemetry-sdk,opentelemetry-semantic-conventions @ file:///C:/.../opentelemetry-semantic-conventions,opentelemetry-test-utils @ file:///C:/.../tests/opentelemetry-test-utils,packaging==21.3,pluggy==1.0.0,py==1.11.0,py-cpuinfo==8.0.0,pyparsing==3.0.9,pytest==7.1.2,pytest-benchmark==3.4.1,tomli==2.0.1,typing_extensions==4.3.0,wrapt==1.14.1\r\nopentelemetry-sdk run-test-pre: PYTHONHASHSEED='7'\r\nopentelemetry-sdk run-test-pre: commands[0] | pip install 'C:\\.../opentelemetry-api' 'C:\\.../opentelemetry-semantic-conventions' 'C:\\.../opentelemetry-sdk' 'C:\\.../tests/opentelemetry-test-utils'\r\nProcessing c:\\...\\opentelemetry-api\r\n  Preparing metadata (setup.py): started\r\n  Preparing metadata (setup.py): finished with status 'done'\r\nProcessing c:\\...\\opentelemetry-semantic-conventions\r\n  Preparing metadata (setup.py): started\r\n  Preparing metadata (setup.py): finished with status 'done'\r\nProcessing c:\\...\\opentelemetry-sdk\r\n  Preparing metadata (setup.py): started\r\n  Preparing metadata (setup.py): finished with status 'done'\r\nProcessing c:\\...\\tests\\opentelemetry-test-utils\r\n  Preparing metadata (setup.py): started\r\n  Preparing metadata (setup.py): finished with status 'done'\r\nRequirement already satisfied: Deprecated>=1.2.6 in c:\\...\\.tox\\opentelemetry-sdk\\lib\\site-packages (from opentelemetry-api==1.12.0rc2) (1.2.13)\r\nRequirement already satisfied: setuptools>=16.0 in c:\\...\\.tox\\opentelemetry-sdk\\lib\\site-packages (from opentelemetry-api==1.12.0rc2) (63.4.1)\r\nRequirement already satisfied: typing-extensions>=3.7.4 in c:\\...\\.tox\\opentelemetry-sdk\\lib\\site-packages (from opentelemetry-sdk==1.12.0rc2) (4.3.0)\r\nRequirement already satisfied: asgiref~=3.0 in c:\\...\\.tox\\opentelemetry-sdk\\lib\\site-packages (from opentelemetry-test-utils==0.32b0) (3.5.2)\r\nRequirement already satisfied: wrapt<2,>=1.10 in c:\\...\\.tox\\opentelemetry-sdk\\lib\\site-packages (from Deprecated>=1.2.6->opentelemetry-api==1.12.0rc2) (1.14.1)\r\nBuilding wheels for collected packages: opentelemetry-api, opentelemetry-semantic-conventions, opentelemetry-sdk, opentelemetry-test-utils\r\n  Building wheel for opentelemetry-api (setup.py): started\r\n  Building wheel for opentelemetry-api (setup.py): finished with status 'done'\r\n  Created wheel for opentelemetry-api: filename=opentelemetry_api-1.12.0rc2-py3-none-any.whl size=52560 sha256=3456e8cc09b6a47cf7b1e49c8343623225caedfdc8a12139446fb72a05a6d08c\r\n  Stored in directory: c:\\...\\appdata\\local\\pip\\cache\\wheels\\1f\\ed\\bf\\08d0b67ea47bd58b9e700afdb8c2dc35d5e78b8f81880bf69b\r\n  Building wheel for opentelemetry-semantic-conventions (setup.py): started\r\n  Building wheel for opentelemetry-semantic-conventions (setup.py): finished with status 'done'\r\n  Created wheel for opentelemetry-semantic-conventions: filename=opentelemetry_semantic_conventions-0.32b0-py3-none-any.whl size=26138 sha256=004869e164b12a2aefcfb83600b65a1698a97771d275076144656b23c8e8be7d\r\n  Stored in directory: c:\\...\\appdata\\local\\pip\\cache\\wheels\\b8\\24\\3b\\753e6fa716fd75596fb89495e2d51dd0948cb2fd9821c133e5\r\n  Building wheel for opentelemetry-sdk (setup.py): started\r\n  Building wheel for opentelemetry-sdk (setup.py): finished with status 'done'\r\n  Created wheel for opentelemetry-sdk: filename=opentelemetry_sdk-1.12.0rc2-py3-none-any.whl size=81066 sha256=8b7ded3c556b414c925aaf0cbb175796ed9df47bf8dfc39225c09e096609a479\r\n  Stored in directory: c:\\...\\appdata\\local\\pip\\cache\\wheels\\14\\f1\\ba\\8919d6e32851a7c14fa95985942d5f01d5893d6c5763c04dbb\r\n  Building wheel for opentelemetry-test-utils (setup.py): started\r\n  Building wheel for opentelemetry-test-utils (setup.py): finished with status 'done'\r\n  Created wheel for opentelemetry-test-utils: filename=opentelemetry_test_utils-0.32b0-py3-none-any.whl size=12524 sha256=8dbb7f93d9d70bf0c1ae20934377af63286862450747de06df96170b5b37eea7\r\n  Stored in directory: c:\\...\\appdata\\local\\pip\\cache\\wheels\\c1\\2d\\cc\\27240f795744c0e9500c2d5896726c85bbdcde69cfaacf8359\r\nSuccessfully built opentelemetry-api opentelemetry-semantic-conventions opentelemetry-sdk opentelemetry-test-utils\r\nInstalling collected packages: opentelemetry-semantic-conventions, opentelemetry-api, opentelemetry-sdk, opentelemetry-test-utils\r\n  Attempting uninstall: opentelemetry-semantic-conventions\r\n    Found existing installation: opentelemetry-semantic-conventions 0.32b0\r\n    Uninstalling opentelemetry-semantic-conventions-0.32b0:\r\n      Successfully uninstalled opentelemetry-semantic-conventions-0.32b0\r\n  Attempting uninstall: opentelemetry-api\r\n    Found existing installation: opentelemetry-api 1.12.0rc2\r\n    Uninstalling opentelemetry-api-1.12.0rc2:\r\n      Successfully uninstalled opentelemetry-api-1.12.0rc2\r\n  Attempting uninstall: opentelemetry-sdk\r\n    Found existing installation: opentelemetry-sdk 1.12.0rc2\r\n    Uninstalling opentelemetry-sdk-1.12.0rc2:\r\n      Successfully uninstalled opentelemetry-sdk-1.12.0rc2\r\n  Attempting uninstall: opentelemetry-test-utils\r\n    Found existing installation: opentelemetry-test-utils 0.32b0\r\n    Uninstalling opentelemetry-test-utils-0.32b0:\r\n      Successfully uninstalled opentelemetry-test-utils-0.32b0\r\nSuccessfully installed opentelemetry-api-1.12.0rc2 opentelemetry-sdk-1.12.0rc2 opentelemetry-semantic-conventions-0.32b0 opentelemetry-test-utils-0.32b0\r\nopentelemetry-sdk run-test: commands[0] | pytest\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.9.1, pytest-7.1.2, pluggy-1.0.0 -- C:\\...\\.tox\\opentelemetry-sdk\\Scripts\\python.EXE\r\ncachedir: .tox\\opentelemetry-sdk\\.pytest_cache\r\nbenchmark: 3.4.1 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\r\nrootdir: C:\\..., configfile: pyproject.toml\r\nplugins: flaky-3.7.0, benchmark-3.4.1\r\ncollecting ... collected 346 items\r\n\r\ntest_configurator.py::TestTraceInit::test_trace_init_custom_id_generator PASSED [  0%]\r\ntest_configurator.py::TestTraceInit::test_trace_init_default PASSED      [  0%]\r\ntest_configurator.py::TestTraceInit::test_trace_init_otlp PASSED         [  0%]\r\ntest_configurator.py::TestLoggingInit::test_logging_init_disable_default PASSED [  1%]\r\ntest_configurator.py::TestLoggingInit::test_logging_init_empty PASSED    [  1%]\r\ntest_configurator.py::TestLoggingInit::test_logging_init_enable_env \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.metrics._internal:__init__.py:746 Overriding of current MeterProvider is not allowed\r\nPASSED                                                                   [  1%]\r\ntest_configurator.py::TestLoggingInit::test_logging_init_exporter \r\n-------------------------------- live log call --------------------------------\r\nERROR    tests.test_configurator:test_configurator.py:331 hello\r\nPASSED                                                                   [  2%]\r\ntest_configurator.py::TestMetricsInit::test_metrics_init_empty PASSED    [  2%]\r\ntest_configurator.py::TestMetricsInit::test_metrics_init_exporter PASSED [  2%]\r\ntest_configurator.py::TestExporterNames::test_empty_exporters PASSED     [  2%]\r\ntest_configurator.py::TestExporterNames::test_multiple_exporters PASSED  [  3%]\r\ntest_configurator.py::TestExporterNames::test_no_exporters PASSED        [  3%]\r\ntest_configurator.py::TestExporterNames::test_none_exporters PASSED      [  3%]\r\ntest_configurator.py::TestExporterNames::test_otlp_exporter_overwrite PASSED [  4%]\r\ntest_configurator.py::TestImportExporters::test_console_exporters PASSED [  4%]\r\ntest_util.py::TestBoundedList::test_append_drop PASSED                   [  4%]\r\ntest_util.py::TestBoundedList::test_append_no_drop PASSED                [  4%]\r\ntest_util.py::TestBoundedList::test_extend_drop PASSED                   [  5%]\r\ntest_util.py::TestBoundedList::test_extend_no_drop PASSED                [  5%]\r\ntest_util.py::TestBoundedList::test_from_seq PASSED                      [  5%]\r\ntest_util.py::TestBoundedList::test_no_limit PASSED                      [  6%]\r\ntest_util.py::TestBoundedList::test_raises PASSED                        [  6%]\r\ncontext\\test_asyncio.py::TestAsyncio::test_with_asyncio PASSED           [  6%]\r\nerror_handler\\test_error_handler.py::TestErrorHandler::test_default_error_handler PASSED [  6%]\r\nerror_handler\\test_error_handler.py::TestErrorHandler::test_error_in_handler PASSED [  7%]\r\nerror_handler\\test_error_handler.py::TestErrorHandler::test_plugin_error_handler PASSED [  7%]\r\nerror_handler\\test_error_handler.py::TestErrorHandler::test_plugin_error_handler_context_manager PASSED [  7%]\r\nlogs\\test_export.py::TestSimpleLogProcessor::test_simple_log_processor_custom_level \r\n-------------------------------- live log call --------------------------------\r\nERROR    custom_level:test_export.py:79 Error message\r\nCRITICAL custom_level:test_export.py:80 Critical message\r\nPASSED                                                                   [  8%]\r\nlogs\\test_export.py::TestSimpleLogProcessor::test_simple_log_processor_default_level \r\n-------------------------------- live log call --------------------------------\r\nWARNING  default_level:test_export.py:57 Something is wrong\r\nPASSED                                                                   [  8%]\r\nlogs\\test_export.py::TestSimpleLogProcessor::test_simple_log_processor_shutdown \r\n-------------------------------- live log call --------------------------------\r\nWARNING  shutdown:test_export.py:143 Something is wrong\r\nWARNING  opentelemetry.sdk._logs.export:__init__.py:106 Processor is already shutdown, ignoring call\r\nWARNING  shutdown:test_export.py:154 Log after shutdown\r\nPASSED                                                                   [  8%]\r\nlogs\\test_export.py::TestSimpleLogProcessor::test_simple_log_processor_trace_correlation \r\n-------------------------------- live log call --------------------------------\r\nWARNING  trace_correlation:test_export.py:106 Warning message\r\nCRITICAL trace_correlation:test_export.py:122 Critical message within span\r\nPASSED                                                                   [  8%]\r\nlogs\\test_export.py::TestBatchLogProcessor::test_batch_log_processor_fork SKIPPED [  9%]\r\nlogs\\test_export.py::TestBatchLogProcessor::test_emit_call_log_record \r\n-------------------------------- live log call --------------------------------\r\nERROR    emit_call:test_export.py:169 error\r\nPASSED                                                                   [  9%]\r\nlogs\\test_export.py::TestBatchLogProcessor::test_force_flush \r\n-------------------------------- live log call --------------------------------\r\nCRITICAL force_flush:test_export.py:214 Earth is burning\r\nPASSED                                                                   [  9%]\r\nlogs\\test_export.py::TestBatchLogProcessor::test_log_processor_too_many_logs \r\n-------------------------------- live log call --------------------------------\r\nCRITICAL many_logs:test_export.py:233 Log no: 0\r\n...\r\nCRITICAL many_logs:test_export.py:233 Log no: 999\r\nPASSED                                                                   [ 10%]\r\nlogs\\test_export.py::TestBatchLogProcessor::test_shutdown \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk._logs.export:__init__.py:106 Processor is already shutdown, ignoring call\r\nWARNING  shutdown:test_export.py:182 warning message: possible upcoming heatwave\r\nWARNING  opentelemetry.sdk._logs.export:__init__.py:106 Processor is already shutdown, ignoring call\r\nERROR    shutdown:test_export.py:183 Very high rise in temperatures across the globe\r\nWARNING  opentelemetry.sdk._logs.export:__init__.py:106 Processor is already shutdown, ignoring call\r\nCRITICAL shutdown:test_export.py:184 Temparature hits high 420 C in Hyderabad\r\nPASSED                                                                   [ 10%]\r\nlogs\\test_export.py::TestBatchLogProcessor::test_with_multiple_threads \r\n-------------------------------- live log call --------------------------------\r\nCRITICAL threads:test_export.py:251 Critical message\r\n...\r\nCRITICAL threads:test_export.py:251 Critical message\r\nPASSED                                                                   [ 10%]\r\nlogs\\test_export.py::TestConsoleLogExporter::test_export PASSED          [ 10%]\r\nlogs\\test_export.py::TestConsoleLogExporter::test_export_custom PASSED   [ 11%]\r\nlogs\\test_global_provider.py::TestGlobals::test_sdk_log_emitter_provider PASSED [ 11%]\r\nlogs\\test_global_provider.py::TestGlobals::test_set_tracer_provider PASSED [ 11%]\r\nlogs\\test_global_provider.py::TestGlobals::test_tracer_provider_override_warning PASSED [ 12%]\r\nlogs\\test_global_provider.py::TestGlobals::test_unknown_log_emitter_provider \r\n-------------------------------- live log call --------------------------------\r\nERROR    opentelemetry.util._providers:_providers.py:51 Failed to load configured provider log_emitter_provider\r\nPASSED                                                                   [ 12%]\r\nlogs\\test_handler.py::TestLoggingHandler::test_handler_custom_log_level \r\n-------------------------------- live log call --------------------------------\r\nWARNING  tests.logs.test_handler:test_handler.py:48 Warning message test custom log level\r\nERROR    tests.logs.test_handler:test_handler.py:51 Mumbai, we have a major problem\r\nCRITICAL tests.logs.test_handler:test_handler.py:52 No Time For Caution\r\nPASSED                                                                   [ 12%]\r\nlogs\\test_handler.py::TestLoggingHandler::test_handler_default_log_level \r\n-------------------------------- live log call --------------------------------\r\nWARNING  tests.logs.test_handler:test_handler.py:41 Warning message\r\nPASSED                                                                   [ 13%]\r\nlogs\\test_handler.py::TestLoggingHandler::test_log_exc_info_false \r\n-------------------------------- live log call --------------------------------\r\nERROR    tests.logs.test_handler:test_handler.py:123 Zero Division Error\r\nPASSED                                                                   [ 13%]\r\nlogs\\test_handler.py::TestLoggingHandler::test_log_record_exception \r\n-------------------------------- live log call --------------------------------\r\nERROR    tests.logs.test_handler:test_handler.py:92 Zero Division Error\r\nTraceback (most recent call last):\r\n  File \"C:\\...\\opentelemetry-sdk\\tests\\logs\\test_handler.py\", line 90, in test_log_record_exception\r\n    raise ZeroDivisionError(\"division by zero\")\r\nZeroDivisionError: division by zero\r\nPASSED                                                                   [ 13%]\r\nlogs\\test_handler.py::TestLoggingHandler::test_log_record_no_span_context \r\n-------------------------------- live log call --------------------------------\r\nWARNING  tests.logs.test_handler:test_handler.py:60 Warning message\r\nPASSED                                                                   [ 13%]\r\nlogs\\test_handler.py::TestLoggingHandler::test_log_record_trace_correlation \r\n-------------------------------- live log call --------------------------------\r\nCRITICAL tests.logs.test_handler:test_handler.py:144 Critical message within span\r\nPASSED                                                                   [ 14%]\r\nlogs\\test_handler.py::TestLoggingHandler::test_log_record_user_attributes \r\n-------------------------------- live log call --------------------------------\r\nWARNING  tests.logs.test_handler:test_handler.py:77 Warning message\r\nPASSED                                                                   [ 14%]\r\nlogs\\test_log_record.py::TestLogRecord::test_log_record_to_json PASSED   [ 14%]\r\nlogs\\test_multi_log_prcessor.py::TestLogProcessor::test_log_processor \r\n-------------------------------- live log call --------------------------------\r\nCRITICAL test.span.processor:test_multi_log_prcessor.py:71 Odisha, we have another major cyclone\r\nWARNING  test.span.processor:test_multi_log_prcessor.py:78 Brace yourself\r\nERROR    test.span.processor:test_multi_log_prcessor.py:79 Some error message\r\nCRITICAL test.span.processor:test_multi_log_prcessor.py:89 Something disastrous\r\nPASSED                                                                   [ 15%]\r\nlogs\\test_multi_log_prcessor.py::TestSynchronousMultiLogProcessor::test_force_flush_delayed PASSED [ 15%]\r\nlogs\\test_multi_log_prcessor.py::TestSynchronousMultiLogProcessor::test_on_emit PASSED [ 15%]\r\nlogs\\test_multi_log_prcessor.py::TestSynchronousMultiLogProcessor::test_on_force_flush PASSED [ 15%]\r\nlogs\\test_multi_log_prcessor.py::TestSynchronousMultiLogProcessor::test_on_shutdown PASSED [ 16%]\r\nlogs\\test_multi_log_prcessor.py::TestConcurrentMultiLogProcessor::test_force_flush_delayed PASSED [ 16%]\r\nlogs\\test_multi_log_prcessor.py::TestConcurrentMultiLogProcessor::test_on_emit PASSED [ 16%]\r\nlogs\\test_multi_log_prcessor.py::TestConcurrentMultiLogProcessor::test_on_force_flush PASSED [ 17%]\r\nlogs\\test_multi_log_prcessor.py::TestConcurrentMultiLogProcessor::test_on_shutdown PASSED [ 17%]\r\nmetrics\\test_aggregation.py::TestSynchronousSumAggregation::test_aggregate_cumulative PASSED [ 17%]\r\nmetrics\\test_aggregation.py::TestSynchronousSumAggregation::test_aggregate_delta PASSED [ 17%]\r\nmetrics\\test_aggregation.py::TestSynchronousSumAggregation::test_collect_cumulative PASSED [ 18%]\r\nmetrics\\test_aggregation.py::TestSynchronousSumAggregation::test_collect_delta PASSED [ 18%]\r\nmetrics\\test_aggregation.py::TestLastValueAggregation::test_aggregate PASSED [ 18%]\r\nmetrics\\test_aggregation.py::TestLastValueAggregation::test_collect PASSED [ 19%]\r\nmetrics\\test_aggregation.py::TestExplicitBucketHistogramAggregation::test_aggregate PASSED [ 19%]\r\nmetrics\\test_aggregation.py::TestExplicitBucketHistogramAggregation::test_collect PASSED [ 19%]\r\nmetrics\\test_aggregation.py::TestExplicitBucketHistogramAggregation::test_min_max PASSED [ 19%]\r\nmetrics\\test_aggregation.py::TestAggregationFactory::test_explicit_bucket_histogram_factory PASSED [ 20%]\r\nmetrics\\test_aggregation.py::TestAggregationFactory::test_last_value_factory PASSED [ 20%]\r\nmetrics\\test_aggregation.py::TestAggregationFactory::test_sum_factory PASSED [ 20%]\r\nmetrics\\test_aggregation.py::TestDefaultAggregation::test_counter PASSED [ 21%]\r\nmetrics\\test_aggregation.py::TestDefaultAggregation::test_histogram PASSED [ 21%]\r\nmetrics\\test_aggregation.py::TestDefaultAggregation::test_observable_counter PASSED [ 21%]\r\nmetrics\\test_aggregation.py::TestDefaultAggregation::test_observable_gauge PASSED [ 21%]\r\nmetrics\\test_aggregation.py::TestDefaultAggregation::test_observable_up_down_counter PASSED [ 22%]\r\nmetrics\\test_aggregation.py::TestDefaultAggregation::test_up_down_counter PASSED [ 22%]\r\nmetrics\\test_backward_compat.py::TestBackwardCompat::test_metric_exporter PASSED [ 22%]\r\nmetrics\\test_backward_compat.py::TestBackwardCompat::test_metric_reader PASSED [ 23%]\r\nmetrics\\test_backward_compat.py::TestBackwardCompat::test_observable_callback PASSED [ 23%]\r\nmetrics\\test_import.py::TestImport::test_import_export PASSED            [ 23%]\r\nmetrics\\test_import.py::TestImport::test_import_init PASSED              [ 23%]\r\nmetrics\\test_import.py::TestImport::test_import_view PASSED              [ 24%]\r\nmetrics\\test_in_memory_metric_reader.py::TestInMemoryMetricReader::test_converts_metrics_to_list PASSED [ 24%]\r\nmetrics\\test_in_memory_metric_reader.py::TestInMemoryMetricReader::test_cumulative_multiple_collect PASSED [ 24%]\r\nmetrics\\test_in_memory_metric_reader.py::TestInMemoryMetricReader::test_integration PASSED [ 25%]\r\nmetrics\\test_in_memory_metric_reader.py::TestInMemoryMetricReader::test_no_metrics PASSED [ 25%]\r\nmetrics\\test_in_memory_metric_reader.py::TestInMemoryMetricReader::test_shutdown PASSED [ 25%]\r\nmetrics\\test_instrument.py::TestCounter::test_add PASSED                 [ 26%]\r\nmetrics\\test_instrument.py::TestCounter::test_add_non_monotonic \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.metrics._internal.instrument:instrument.py:154 Add amount must be non-negative on Counter name.\r\nPASSED                                                                   [ 26%]\r\nmetrics\\test_instrument.py::TestCounter::test_disallow_direct_counter_creation PASSED [ 26%]\r\nmetrics\\test_instrument.py::TestCounter::testname PASSED                 [ 26%]\r\nmetrics\\test_instrument.py::TestUpDownCounter::test_add PASSED           [ 27%]\r\nmetrics\\test_instrument.py::TestUpDownCounter::test_add_non_monotonic PASSED [ 27%]\r\nmetrics\\test_instrument.py::TestUpDownCounter::test_disallow_direct_up_down_counter_creation PASSED [ 27%]\r\nmetrics\\test_instrument.py::TestObservableGauge::test_callable_callback_0 PASSED [ 28%]\r\nmetrics\\test_instrument.py::TestObservableGauge::test_callable_multiple_callable_callback PASSED [ 28%]\r\nmetrics\\test_instrument.py::TestObservableGauge::test_disallow_direct_observable_gauge_creation PASSED [ 28%]\r\nmetrics\\test_instrument.py::TestObservableGauge::test_generator_callback_0 PASSED [ 28%]\r\nmetrics\\test_instrument.py::TestObservableGauge::test_generator_multiple_generator_callback PASSED [ 29%]\r\nmetrics\\test_instrument.py::TestObservableGauge::testname PASSED         [ 29%]\r\nmetrics\\test_instrument.py::TestObservableCounter::test_callable_callback_0 PASSED [ 29%]\r\nmetrics\\test_instrument.py::TestObservableCounter::test_disallow_direct_observable_counter_creation PASSED [ 30%]\r\nmetrics\\test_instrument.py::TestObservableCounter::test_generator_callback_0 PASSED [ 30%]\r\nmetrics\\test_instrument.py::TestObservableUpDownCounter::test_callable_callback_0 PASSED [ 30%]\r\nmetrics\\test_instrument.py::TestObservableUpDownCounter::test_disallow_direct_observable_up_down_counter_creation PASSED [ 30%]\r\nmetrics\\test_instrument.py::TestObservableUpDownCounter::test_generator_callback_0 PASSED [ 31%]\r\nmetrics\\test_instrument.py::TestHistogram::test_disallow_direct_histogram_creation PASSED [ 31%]\r\nmetrics\\test_instrument.py::TestHistogram::test_record PASSED            [ 31%]\r\nmetrics\\test_instrument.py::TestHistogram::test_record_non_monotonic \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.metrics._internal.instrument:instrument.py:205 Record amount must be non-negative on Histogram name.\r\nPASSED                                                                   [ 32%]\r\nmetrics\\test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_collect_calls_async_instruments PASSED [ 32%]\r\nmetrics\\test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_collect_passed_to_reader_stage PASSED [ 32%]\r\nmetrics\\test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_creates_metric_reader_storages PASSED [ 32%]\r\nmetrics\\test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_measurements_passed_to_each_reader_storage PASSED [ 33%]\r\nmetrics\\test_measurement_consumer.py::TestSynchronousMeasurementConsumer::test_parent PASSED [ 33%]\r\nmetrics\\test_metric_reader.py::TestMetricReader::test_configure_aggregation PASSED [ 33%]\r\nmetrics\\test_metric_reader.py::TestMetricReader::test_configure_temporality PASSED [ 34%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_conflicting_view_configuration PASSED [ 34%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_creates_view_instrument_matches \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.metrics._internal.metric_reader_storage:metric_reader_storage.py:263 Views <MagicMock name='_ViewInstrumentMatch()._view' id='1977855825280'> and <MagicMock name='_ViewInstrumentMatch()._view' id='1977855825280'> will cause conflicting metrics identities\r\nWARNING  opentelemetry.sdk.metrics._internal.metric_reader_storage:metric_reader_storage.py:263 Views <MagicMock name='_ViewInstrumentMatch()._view' id='1977855825280'> and <MagicMock name='_ViewInstrumentMatch()._view' id='1977855825280'> will cause conflicting metrics identities\r\nPASSED                                                                   [ 34%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_default_view_enabled PASSED [ 34%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_drop_aggregation PASSED [ 35%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_forwards_calls_to_view_instrument_match \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.metrics._internal.metric_reader_storage:metric_reader_storage.py:263 Views <Mock name='mock._view' id='1977856123664'> and <Mock name='mock._view' id='1977856123616'> will cause conflicting metrics identities\r\nWARNING  opentelemetry.sdk.metrics._internal.metric_reader_storage:metric_reader_storage.py:263 Views <Mock name='mock._view' id='1977856124096'> and <Mock name='mock._view' id='1977856123616'> will cause conflicting metrics identities\r\nPASSED                                                                   [ 35%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_race_concurrent_measurements PASSED [ 35%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_same_collection_start PASSED [ 36%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_view_instrument_match_conflict_0 PASSED [ 36%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_view_instrument_match_conflict_1 PASSED [ 36%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_view_instrument_match_conflict_2 PASSED [ 36%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_view_instrument_match_conflict_3 PASSED [ 37%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_view_instrument_match_conflict_4 PASSED [ 37%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_view_instrument_match_conflict_5 PASSED [ 37%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_view_instrument_match_conflict_6 PASSED [ 38%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_view_instrument_match_conflict_7 PASSED [ 38%]\r\nmetrics\\test_metric_reader_storage.py::TestMetricReaderStorage::test_view_instrument_match_conflict_8 PASSED [ 38%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_consume_measurement_counter PASSED [ 39%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_consume_measurement_histogram PASSED [ 39%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_consume_measurement_up_down_counter PASSED [ 39%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_creates_sync_measurement_consumer PASSED [ 39%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_get_meter PASSED        [ 40%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_get_meter_duplicate PASSED [ 40%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_get_meter_empty \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.metrics._internal:__init__.py:478 Meter name cannot be None or empty.\r\nWARNING  opentelemetry.sdk.metrics._internal:__init__.py:478 Meter name cannot be None or empty.\r\nPASSED                                                                   [ 40%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_measurement_collect_callback PASSED [ 41%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_register_asynchronous_instrument PASSED [ 41%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_register_metric_readers PASSED [ 41%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_resource PASSED         [ 41%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_shutdown PASSED         [ 42%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_shutdown_race PASSED    [ 42%]\r\nmetrics\\test_metrics.py::TestMeterProvider::test_shutdown_subsequent_calls PASSED [ 42%]\r\nmetrics\\test_metrics.py::TestMeter::test_create_counter PASSED           [ 43%]\r\nmetrics\\test_metrics.py::TestMeter::test_create_histogram PASSED         [ 43%]\r\nmetrics\\test_metrics.py::TestMeter::test_create_observable_counter PASSED [ 43%]\r\nmetrics\\test_metrics.py::TestMeter::test_create_observable_gauge PASSED  [ 43%]\r\nmetrics\\test_metrics.py::TestMeter::test_create_observable_up_down_counter PASSED [ 44%]\r\nmetrics\\test_metrics.py::TestMeter::test_create_up_down_counter PASSED   [ 44%]\r\nmetrics\\test_metrics.py::TestMeter::test_repeated_instrument_names PASSED [ 44%]\r\nmetrics\\test_metrics.py::TestDuplicateInstrumentAggregateData::test_duplicate_instrument_aggregate_data \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.metrics._internal:__init__.py:81 An instrument with name counter, type Counter, unit unit and description description has been created already.\r\nWARNING  opentelemetry.sdk.metrics._internal.metric_reader_storage:metric_reader_storage.py:263 Views <opentelemetry.sdk.metrics.view.View object at 0x000001CC81681FA0> and <opentelemetry.sdk.metrics.view.View object at 0x000001CC81681FA0> will cause conflicting metrics identities\r\nPASSED                                                                   [ 45%]\r\nmetrics\\test_periodic_exporting_metric_reader.py::TestPeriodicExportingMetricReader::test_defaults \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.metrics._internal.export:__init__.py:299 Cannot call collect on a MetricReader until it is registered on a MeterProvider\r\nPASSED                                                                   [ 45%]\r\nmetrics\\test_periodic_exporting_metric_reader.py::TestPeriodicExportingMetricReader::test_exporter_aggregation_preference PASSED [ 45%]\r\nmetrics\\test_periodic_exporting_metric_reader.py::TestPeriodicExportingMetricReader::test_exporter_temporality_preference PASSED [ 45%]\r\nmetrics\\test_periodic_exporting_metric_reader.py::TestPeriodicExportingMetricReader::test_shutdown PASSED [ 46%]\r\nmetrics\\test_periodic_exporting_metric_reader.py::TestPeriodicExportingMetricReader::test_shutdown_multiple_times \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.metrics._internal.export:__init__.py:482 Can't shutdown multiple times\r\nPASSED                                                                   [ 46%]\r\nmetrics\\test_periodic_exporting_metric_reader.py::TestPeriodicExportingMetricReader::test_ticker_called PASSED [ 46%]\r\nmetrics\\test_periodic_exporting_metric_reader.py::TestPeriodicExportingMetricReader::test_ticker_collects_metrics PASSED [ 47%]\r\nmetrics\\test_point.py::TestToJson::test_gauge PASSED                     [ 47%]\r\nmetrics\\test_point.py::TestToJson::test_histogram PASSED                 [ 47%]\r\nmetrics\\test_point.py::TestToJson::test_histogram_data_point PASSED      [ 47%]\r\nmetrics\\test_point.py::TestToJson::test_metric PASSED                    [ 48%]\r\nmetrics\\test_point.py::TestToJson::test_metrics_data PASSED              [ 48%]\r\nmetrics\\test_point.py::TestToJson::test_number_data_point PASSED         [ 48%]\r\nmetrics\\test_point.py::TestToJson::test_resource_metrics PASSED          [ 49%]\r\nmetrics\\test_point.py::TestToJson::test_scope_metrics PASSED             [ 49%]\r\nmetrics\\test_point.py::TestToJson::test_sum PASSED                       [ 49%]\r\nmetrics\\test_view.py::TestView::test_additive_criteria PASSED            [ 50%]\r\nmetrics\\test_view.py::TestView::test_instrument_name PASSED              [ 50%]\r\nmetrics\\test_view.py::TestView::test_instrument_type PASSED              [ 50%]\r\nmetrics\\test_view.py::TestView::test_meter_name PASSED                   [ 50%]\r\nmetrics\\test_view.py::TestView::test_meter_schema_url PASSED             [ 51%]\r\nmetrics\\test_view.py::TestView::test_meter_version PASSED                [ 51%]\r\nmetrics\\test_view.py::TestView::test_required_instrument_criteria PASSED [ 51%]\r\nmetrics\\test_view.py::TestView::test_view_name PASSED                    [ 52%]\r\nmetrics\\test_view_instrument_match.py::Test_ViewInstrumentMatch::test_collect PASSED [ 52%]\r\nmetrics\\test_view_instrument_match.py::Test_ViewInstrumentMatch::test_consume_measurement PASSED [ 52%]\r\nmetrics\\test_view_instrument_match.py::Test_ViewInstrumentMatch::test_data_point_check PASSED [ 52%]\r\nmetrics\\test_view_instrument_match.py::Test_ViewInstrumentMatch::test_setting_aggregation PASSED [ 53%]\r\nmetrics\\integration_test\\test_console_exporter.py::TestConsoleExporter::test_console_exporter \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.metrics._internal:__init__.py:746 Overriding of current MeterProvider is not allowed\r\nPASSED                                                                   [ 53%]\r\nmetrics\\integration_test\\test_cpu_time.py::TestCpuTimeIntegration::test_cpu_time_callback PASSED [ 53%]\r\nmetrics\\integration_test\\test_cpu_time.py::TestCpuTimeIntegration::test_cpu_time_generator PASSED [ 54%]\r\nmetrics\\integration_test\\test_disable_default_views.py::TestDisableDefaultViews::test_disable_default_views PASSED [ 54%]\r\nmetrics\\integration_test\\test_disable_default_views.py::TestDisableDefaultViews::test_disable_default_views_add_custom PASSED [ 54%]\r\nmetrics\\integration_test\\test_time_align.py::TestTimeAlign::test_time_align_cumulative PASSED [ 54%]\r\nmetrics\\integration_test\\test_time_align.py::TestTimeAlign::test_time_align_delta SKIPPED [ 55%]\r\nperformance\\benchmarks\\trace\\test_benchmark_trace.py::test_simple_start_span PASSED [ 55%]\r\nperformance\\benchmarks\\trace\\test_benchmark_trace.py::test_simple_start_as_current_span PASSED [ 55%]\r\nresources\\test_resources.py::TestResources::test_aggregated_resources_different_schema_urls PASSED [ 56%]\r\nresources\\test_resources.py::TestResources::test_aggregated_resources_multiple_detectors PASSED [ 56%]\r\nresources\\test_resources.py::TestResources::test_aggregated_resources_no_detectors PASSED [ 56%]\r\nresources\\test_resources.py::TestResources::test_aggregated_resources_with_default_destroying_static_resource PASSED [ 56%]\r\nresources\\test_resources.py::TestResources::test_create PASSED           [ 57%]\r\nresources\\test_resources.py::TestResources::test_env_priority PASSED     [ 57%]\r\nresources\\test_resources.py::TestResources::test_immutability PASSED     [ 57%]\r\nresources\\test_resources.py::TestResources::test_invalid_resource_attribute_values \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.attributes:__init__.py:99 Invalid type dict for attribute value. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or a sequence of those types\r\nWARNING  opentelemetry.attributes:__init__.py:118 Byte attribute could not be decoded.\r\nWARNING  opentelemetry.attributes:__init__.py:51 invalid key ``. must be non-empty string.\r\nWARNING  opentelemetry.attributes:__init__.py:51 invalid key `None`. must be non-empty string.\r\nWARNING  opentelemetry.attributes:__init__.py:99 Invalid type UUID for attribute value. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or a sequence of those types\r\nPASSED                                                                   [ 58%]\r\nresources\\test_resources.py::TestResources::test_resource_detector_ignore_error \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.resources:__init__.py:347 Exception  in detector <Mock spec='ResourceDetector' id='1977856035568'>, ignoring\r\nPASSED                                                                   [ 58%]\r\nresources\\test_resources.py::TestResources::test_resource_detector_raise_error PASSED [ 58%]\r\nresources\\test_resources.py::TestResources::test_resource_merge PASSED   [ 58%]\r\nresources\\test_resources.py::TestResources::test_resource_merge_empty_string PASSED [ 59%]\r\nresources\\test_resources.py::TestResources::test_service_name_env PASSED [ 59%]\r\nresources\\test_resources.py::TestResources::test_service_name_using_process_name PASSED [ 59%]\r\nresources\\test_resources.py::TestOTELResourceDetector::test_empty PASSED [ 60%]\r\nresources\\test_resources.py::TestOTELResourceDetector::test_invalid_key_value_pairs \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.resources:__init__.py:286 Invalid key value resource attribute pair invalid: not enough values to unpack (expected 2, got 1)\r\nWARNING  opentelemetry.sdk.resources:__init__.py:286 Invalid key value resource attribute pair : not enough values to unpack (expected 2, got 1)\r\nWARNING  opentelemetry.sdk.resources:__init__.py:286 Invalid key value resource attribute pair : not enough values to unpack (expected 2, got 1)\r\nPASSED                                                                   [ 60%]\r\nresources\\test_resources.py::TestOTELResourceDetector::test_multiple PASSED [ 60%]\r\nresources\\test_resources.py::TestOTELResourceDetector::test_multiple_with_whitespace PASSED [ 60%]\r\nresources\\test_resources.py::TestOTELResourceDetector::test_one PASSED   [ 61%]\r\nresources\\test_resources.py::TestOTELResourceDetector::test_one_with_whitespace PASSED [ 61%]\r\nresources\\test_resources.py::TestOTELResourceDetector::test_process_detector PASSED [ 61%]\r\nresources\\test_resources.py::TestOTELResourceDetector::test_service_name_env PASSED [ 62%]\r\nresources\\test_resources.py::TestOTELResourceDetector::test_service_name_env_precedence PASSED [ 62%]\r\ntrace\\test_globals.py::TestGlobals::test_tracer_provider_override_warning PASSED [ 62%]\r\ntrace\\test_implementation.py::TestTracerImplementation::test_span PASSED [ 63%]\r\ntrace\\test_implementation.py::TestTracerImplementation::test_tracer PASSED [ 63%]\r\ntrace\\test_sampling.py::TestDecision::test_is_recording PASSED           [ 63%]\r\ntrace\\test_sampling.py::TestDecision::test_is_sampled PASSED             [ 63%]\r\ntrace\\test_sampling.py::TestSamplingResult::test_ctr PASSED              [ 64%]\r\ntrace\\test_sampling.py::TestSampler::test_always_off PASSED              [ 64%]\r\ntrace\\test_sampling.py::TestSampler::test_always_on PASSED               [ 64%]\r\ntrace\\test_sampling.py::TestSampler::test_default_off PASSED             [ 65%]\r\ntrace\\test_sampling.py::TestSampler::test_default_on PASSED              [ 65%]\r\ntrace\\test_sampling.py::TestSampler::test_parent_based_explicit_parent_context PASSED [ 65%]\r\ntrace\\test_sampling.py::TestSampler::test_parent_based_implicit_parent_context PASSED [ 65%]\r\ntrace\\test_sampling.py::TestSampler::test_probability_sampler PASSED     [ 66%]\r\ntrace\\test_sampling.py::TestSampler::test_probability_sampler_limits PASSED [ 66%]\r\ntrace\\test_sampling.py::TestSampler::test_probability_sampler_one PASSED [ 66%]\r\ntrace\\test_sampling.py::TestSampler::test_probability_sampler_zero PASSED [ 67%]\r\ntrace\\test_span_processor.py::TestSpanProcessor::test_add_span_processor_after_span_creation PASSED [ 67%]\r\ntrace\\test_span_processor.py::TestSpanProcessor::test_span_processor PASSED [ 67%]\r\ntrace\\test_span_processor.py::TestSynchronousMultiSpanProcessor::test_force_flush PASSED [ 67%]\r\ntrace\\test_span_processor.py::TestSynchronousMultiSpanProcessor::test_force_flush_late_by_span_processor PASSED [ 68%]\r\ntrace\\test_span_processor.py::TestSynchronousMultiSpanProcessor::test_force_flush_late_by_timeout PASSED [ 68%]\r\ntrace\\test_span_processor.py::TestSynchronousMultiSpanProcessor::test_on_end PASSED [ 68%]\r\ntrace\\test_span_processor.py::TestSynchronousMultiSpanProcessor::test_on_shutdown PASSED [ 69%]\r\ntrace\\test_span_processor.py::TestSynchronousMultiSpanProcessor::test_on_start PASSED [ 69%]\r\ntrace\\test_span_processor.py::TestConcurrentMultiSpanProcessor::test_force_flush PASSED [ 69%]\r\ntrace\\test_span_processor.py::TestConcurrentMultiSpanProcessor::test_force_flush_late_by_span_processor PASSED [ 69%]\r\ntrace\\test_span_processor.py::TestConcurrentMultiSpanProcessor::test_force_flush_late_by_timeout PASSED [ 70%]\r\ntrace\\test_span_processor.py::TestConcurrentMultiSpanProcessor::test_on_end PASSED [ 70%]\r\ntrace\\test_span_processor.py::TestConcurrentMultiSpanProcessor::test_on_shutdown PASSED [ 70%]\r\ntrace\\test_span_processor.py::TestConcurrentMultiSpanProcessor::test_on_start PASSED [ 71%]\r\ntrace\\test_trace.py::TestTracer::test_extends_api PASSED                 [ 71%]\r\ntrace\\test_trace.py::TestTracer::test_shutdown PASSED                    [ 71%]\r\ntrace\\test_trace.py::TestTracer::test_tracer_provider_accepts_concurrent_multi_span_processor PASSED [ 71%]\r\ntrace\\test_trace.py::TestTracerSampling::test_default_sampler PASSED     [ 72%]\r\ntrace\\test_trace.py::TestTracerSampling::test_default_sampler_type PASSED [ 72%]\r\ntrace\\test_trace.py::TestTracerSampling::test_ratio_sampler_with_env PASSED [ 72%]\r\ntrace\\test_trace.py::TestTracerSampling::test_sampler_no_sampling PASSED [ 73%]\r\ntrace\\test_trace.py::TestTracerSampling::test_sampler_with_env PASSED    [ 73%]\r\ntrace\\test_trace.py::TestSpanCreation::test_default_span_resource PASSED [ 73%]\r\ntrace\\test_trace.py::TestSpanCreation::test_disallow_direct_span_creation PASSED [ 73%]\r\ntrace\\test_trace.py::TestSpanCreation::test_explicit_span_resource PASSED [ 74%]\r\ntrace\\test_trace.py::TestSpanCreation::test_instrumentation_info PASSED  [ 74%]\r\ntrace\\test_trace.py::TestSpanCreation::test_invalid_instrumentation_info PASSED [ 74%]\r\ntrace\\test_trace.py::TestSpanCreation::test_span_context_remote_flag PASSED [ 75%]\r\ntrace\\test_trace.py::TestSpanCreation::test_span_processor_for_source PASSED [ 75%]\r\ntrace\\test_trace.py::TestSpanCreation::test_start_as_current_span_decorator PASSED [ 75%]\r\ntrace\\test_trace.py::TestSpanCreation::test_start_as_current_span_explicit PASSED [ 76%]\r\ntrace\\test_trace.py::TestSpanCreation::test_start_as_current_span_implicit PASSED [ 76%]\r\ntrace\\test_trace.py::TestSpanCreation::test_start_as_current_span_no_end_on_exit PASSED [ 76%]\r\ntrace\\test_trace.py::TestSpanCreation::test_start_span_explicit PASSED   [ 76%]\r\ntrace\\test_trace.py::TestSpanCreation::test_start_span_implicit PASSED   [ 77%]\r\ntrace\\test_trace.py::TestSpanCreation::test_start_span_invalid_spancontext PASSED [ 77%]\r\ntrace\\test_trace.py::TestSpanCreation::test_surplus_span_attributes PASSED [ 77%]\r\ntrace\\test_trace.py::TestSpanCreation::test_surplus_span_links PASSED    [ 78%]\r\ntrace\\test_trace.py::TestReadableSpan::test_events PASSED                [ 78%]\r\ntrace\\test_trace.py::TestReadableSpan::test_links PASSED                 [ 78%]\r\ntrace\\test_trace.py::TestSpan::test_attributes PASSED                    [ 78%]\r\ntrace\\test_trace.py::TestSpan::test_basic_span PASSED                    [ 79%]\r\ntrace\\test_trace.py::TestSpan::test_byte_type_attribute_value PASSED     [ 79%]\r\ntrace\\test_trace.py::TestSpan::test_ended_span PASSED                    [ 79%]\r\ntrace\\test_trace.py::TestSpan::test_error_status PASSED                  [ 80%]\r\ntrace\\test_trace.py::TestSpan::test_event_attributes_are_immutable PASSED [ 80%]\r\ntrace\\test_trace.py::TestSpan::test_events PASSED                        [ 80%]\r\ntrace\\test_trace.py::TestSpan::test_events_are_immutable PASSED          [ 80%]\r\ntrace\\test_trace.py::TestSpan::test_invalid_attribute_values \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.attributes:__init__.py:99 Invalid type dict for attribute value. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or a sequence of those types\r\nWARNING  opentelemetry.attributes:__init__.py:99 Invalid type dict for attribute value. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or a sequence of those types\r\nWARNING  opentelemetry.attributes:__init__.py:87 Mixed types int and bool in attribute value sequence\r\nWARNING  opentelemetry.attributes:__init__.py:87 Mixed types bool and int in attribute value sequence\r\nWARNING  opentelemetry.attributes:__init__.py:70 Invalid type dict in attribute value sequence. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or None\r\nWARNING  opentelemetry.attributes:__init__.py:87 Mixed types int and bool in attribute value sequence\r\nWARNING  opentelemetry.attributes:__init__.py:51 invalid key ``. must be non-empty string.\r\nWARNING  opentelemetry.attributes:__init__.py:51 invalid key `None`. must be non-empty string.\r\nPASSED                                                                   [ 81%]\r\ntrace\\test_trace.py::TestSpan::test_invalid_event_attributes \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.attributes:__init__.py:87 Mixed types str and bool in attribute value sequence\r\nWARNING  opentelemetry.attributes:__init__.py:99 Invalid type dict for attribute value. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or a sequence of those types\r\nWARNING  opentelemetry.attributes:__init__.py:70 Invalid type list in attribute value sequence. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or None\r\nWARNING  opentelemetry.attributes:__init__.py:70 Invalid type dict in attribute value sequence. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or None\r\nPASSED                                                                   [ 81%]\r\ntrace\\test_trace.py::TestSpan::test_last_status_wins PASSED              [ 81%]\r\ntrace\\test_trace.py::TestSpan::test_links PASSED                         [ 82%]\r\ntrace\\test_trace.py::TestSpan::test_record_exception PASSED              [ 82%]\r\ntrace\\test_trace.py::TestSpan::test_record_exception_context_manager PASSED [ 82%]\r\ntrace\\test_trace.py::TestSpan::test_record_exception_escaped PASSED      [ 82%]\r\ntrace\\test_trace.py::TestSpan::test_record_exception_with_attributes PASSED [ 83%]\r\ntrace\\test_trace.py::TestSpan::test_record_exception_with_attributes_and_timestamp PASSED [ 83%]\r\ntrace\\test_trace.py::TestSpan::test_record_exception_with_timestamp PASSED [ 83%]\r\ntrace\\test_trace.py::TestSpan::test_sampling_attributes PASSED           [ 84%]\r\ntrace\\test_trace.py::TestSpan::test_span_override_start_and_end_time PASSED [ 84%]\r\ntrace\\test_trace.py::TestSpan::test_span_set_status PASSED               [ 84%]\r\ntrace\\test_trace.py::TestSpan::test_start_accepts_context PASSED         [ 84%]\r\ntrace\\test_trace.py::TestSpan::test_start_span PASSED                    [ 85%]\r\ntrace\\test_trace.py::TestSpan::test_status_cannot_override_ok PASSED     [ 85%]\r\ntrace\\test_trace.py::TestSpan::test_status_cannot_set_unset \r\n-------------------------------- live log call --------------------------------\r\nWARNING  opentelemetry.sdk.trace:__init__.py:343 Tried calling set_status on an ended span.\r\nWARNING  opentelemetry.sdk.trace:__init__.py:343 Tried calling set_status on an ended span.\r\nPASSED                                                                   [ 85%]\r\ntrace\\test_trace.py::TestSpan::test_update_name PASSED                   [ 86%]\r\ntrace\\test_trace.py::TestSpanProcessor::test_add_span_processor_after_span_creation PASSED [ 86%]\r\ntrace\\test_trace.py::TestSpanProcessor::test_attributes_to_json PASSED   [ 86%]\r\ntrace\\test_trace.py::TestSpanProcessor::test_span_processor PASSED       [ 86%]\r\ntrace\\test_trace.py::TestSpanProcessor::test_to_json PASSED              [ 87%]\r\ntrace\\test_trace.py::TestSpanLimits::test_dropped_attributes PASSED      [ 87%]\r\ntrace\\test_trace.py::TestSpanLimits::test_limits_attribute_length_limits_code PASSED [ 87%]\r\ntrace\\test_trace.py::TestSpanLimits::test_limits_defaults PASSED         [ 88%]\r\ntrace\\test_trace.py::TestSpanLimits::test_limits_values_code PASSED      [ 88%]\r\ntrace\\test_trace.py::TestSpanLimits::test_limits_values_env PASSED       [ 88%]\r\ntrace\\test_trace.py::TestSpanLimits::test_span_limits_code PASSED        [ 89%]\r\ntrace\\test_trace.py::TestSpanLimits::test_span_limits_default_to_env PASSED [ 89%]\r\ntrace\\test_trace.py::TestSpanLimits::test_span_limits_env PASSED         [ 89%]\r\ntrace\\test_trace.py::TestSpanLimits::test_span_limits_global_env PASSED  [ 89%]\r\ntrace\\test_trace.py::TestSpanLimits::test_span_no_limits_code PASSED     [ 90%]\r\ntrace\\test_trace.py::TestSpanLimits::test_span_no_limits_env PASSED      [ 90%]\r\ntrace\\test_trace.py::TestSpanLimits::test_span_zero_global_limit PASSED  [ 90%]\r\ntrace\\test_trace.py::TestSpanLimits::test_span_zero_global_nonzero_model PASSED [ 91%]\r\ntrace\\test_trace.py::TestSpanLimits::test_span_zero_global_unset_model PASSED [ 91%]\r\ntrace\\test_trace.py::TestTraceFlags::test_constant_default PASSED        [ 91%]\r\ntrace\\test_trace.py::TestTraceFlags::test_constant_default_trace_options PASSED [ 91%]\r\ntrace\\test_trace.py::TestTraceFlags::test_constant_sampled PASSED        [ 92%]\r\ntrace\\test_trace.py::TestTraceFlags::test_get_default PASSED             [ 92%]\r\ntrace\\test_trace.py::TestTraceFlags::test_sampled_false PASSED           [ 92%]\r\ntrace\\test_trace.py::TestTraceFlags::test_sampled_true PASSED            [ 93%]\r\ntrace\\export\\test_export.py::TestSimpleSpanProcessor::test_on_start_accepts_context PASSED [ 93%]\r\ntrace\\export\\test_export.py::TestSimpleSpanProcessor::test_simple_span_processor PASSED [ 93%]\r\ntrace\\export\\test_export.py::TestSimpleSpanProcessor::test_simple_span_processor_no_context PASSED [ 93%]\r\ntrace\\export\\test_export.py::TestSimpleSpanProcessor::test_simple_span_processor_not_sampled PASSED [ 94%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_batch_span_processor_environment_variables PASSED [ 94%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_batch_span_processor_fork SKIPPED [ 94%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_batch_span_processor_lossless PASSED [ 95%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_batch_span_processor_many_spans PASSED [ 95%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_batch_span_processor_not_sampled PASSED [ 95%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_batch_span_processor_parameters PASSED [ 95%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_batch_span_processor_reset_timeout PASSED [ 96%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_batch_span_processor_scheduled_delay PASSED [ 96%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_flush PASSED   [ 96%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_flush_empty PASSED [ 97%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_flush_from_multiple_threads PASSED [ 97%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_flush_timeout PASSED [ 97%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_on_start_accepts_parent_context PASSED [ 97%]\r\ntrace\\export\\test_export.py::TestBatchSpanProcessor::test_shutdown PASSED [ 98%]\r\ntrace\\export\\test_export.py::TestConsoleSpanExporter::test_export PASSED [ 98%]\r\ntrace\\export\\test_export.py::TestConsoleSpanExporter::test_export_custom PASSED [ 98%]\r\ntrace\\export\\test_in_memory_span_exporter.py::TestInMemorySpanExporter::test_clear PASSED [ 99%]\r\ntrace\\export\\test_in_memory_span_exporter.py::TestInMemorySpanExporter::test_get_finished_spans PASSED [ 99%]\r\ntrace\\export\\test_in_memory_span_exporter.py::TestInMemorySpanExporter::test_return_code PASSED [ 99%]\r\ntrace\\export\\test_in_memory_span_exporter.py::TestInMemorySpanExporter::test_shutdown PASSED [100%]\r\n\r\n============================== warnings summary ===============================\r\n..\\..\\.tox\\opentelemetry-sdk\\lib\\site-packages\\opentelemetry\\sdk\\trace\\__init__.py:1162: 1 warning\r\nopentelemetry-sdk/tests/context/test_asyncio.py: 1 warning\r\nopentelemetry-sdk/tests/logs/test_export.py: 1 warning\r\nopentelemetry-sdk/tests/logs/test_handler.py: 1 warning\r\nopentelemetry-sdk/tests/trace/test_implementation.py: 1 warning\r\nopentelemetry-sdk/tests/trace/test_span_processor.py: 2 warnings\r\nopentelemetry-sdk/tests/trace/test_trace.py: 69 warnings\r\nopentelemetry-sdk/tests/trace/export/test_export.py: 6 warnings\r\nopentelemetry-sdk/tests/trace/export/test_in_memory_span_exporter.py: 4 warnings\r\n  C:\\...\\.tox\\opentelemetry-sdk\\lib\\site-packages\\opentelemetry\\sdk\\trace\\__init__.py:1162: DeprecationWarning: Call to deprecated method __init__. (You should use InstrumentationScope) -- Deprecated since version 1.11.1.\r\n    InstrumentationInfo(\r\n\r\nopentelemetry-sdk/tests/trace/test_trace.py::TestSpanCreation::test_instrumentation_info\r\n  C:\\...\\opentelemetry-sdk\\tests\\trace\\test_trace.py:246: DeprecationWarning: Call to deprecated function (or staticmethod) instrumentation_info. (You should use instrumentation_scope) -- Deprecated since version 1.11.1.\r\n    span1.instrumentation_info, InstrumentationInfo(\"instr1\", \"\")\r\n\r\nopentelemetry-sdk/tests/trace/test_trace.py::TestSpanCreation::test_instrumentation_info\r\n  C:\\...\\opentelemetry-sdk\\tests\\trace\\test_trace.py:246: DeprecationWarning: Call to deprecated method __init__. (You should use InstrumentationScope) -- Deprecated since version 1.11.1.\r\n    span1.instrumentation_info, InstrumentationInfo(\"instr1\", \"\")\r\n\r\nopentelemetry-sdk/tests/trace/test_trace.py::TestSpanCreation::test_instrumentation_info\r\n  C:\\...\\opentelemetry-sdk\\tests\\trace\\test_trace.py:249: DeprecationWarning: Call to deprecated function (or staticmethod) instrumentation_info. (You should use instrumentation_scope) -- Deprecated since version 1.11.1.\r\n    span2.instrumentation_info,\r\n\r\nopentelemetry-sdk/tests/trace/test_trace.py::TestSpanCreation::test_instrumentation_info\r\n  C:\\...\\opentelemetry-sdk\\tests\\trace\\test_trace.py:250: DeprecationWarning: Call to deprecated method __init__. (You should use InstrumentationScope) -- Deprecated since version 1.11.1.\r\n    InstrumentationInfo(\"instr2\", \"1.3b3\", schema_url),\r\n\r\nopentelemetry-sdk/tests/trace/test_trace.py::TestSpanCreation::test_instrumentation_info\r\n  C:\\...\\opentelemetry-sdk\\tests\\trace\\test_trace.py:253: DeprecationWarning: Call to deprecated function (or staticmethod) instrumentation_info. (You should use instrumentation_scope) -- Deprecated since version 1.11.1.\r\n    self.assertEqual(span2.instrumentation_info.schema_url, schema_url)\r\n\r\nopentelemetry-sdk/tests/trace/test_trace.py::TestSpanCreation::test_instrumentation_info\r\n  C:\\...\\opentelemetry-sdk\\tests\\trace\\test_trace.py:254: DeprecationWarning: Call to deprecated function (or staticmethod) instrumentation_info. (You should use instrumentation_scope) -- Deprecated since version 1.11.1.\r\n    self.assertEqual(span2.instrumentation_info.version, \"1.3b3\")\r\n\r\nopentelemetry-sdk/tests/trace/test_trace.py::TestSpanCreation::test_instrumentation_info\r\n  C:\\...\\opentelemetry-sdk\\tests\\trace\\test_trace.py:255: DeprecationWarning: Call to deprecated function (or staticmethod) instrumentation_info. (You should use instrumentation_scope) -- Deprecated since version 1.11.1.\r\n    self.assertEqual(span2.instrumentation_info.name, \"instr2\")\r\n\r\nopentelemetry-sdk/tests/trace/test_trace.py::TestSpanCreation::test_instrumentation_info\r\nopentelemetry-sdk/tests/trace/test_trace.py::TestSpanCreation::test_instrumentation_info\r\n  C:\\...\\opentelemetry-sdk\\tests\\trace\\test_trace.py:258: DeprecationWarning: Call to deprecated function (or staticmethod) instrumentation_info. (You should use instrumentation_scope) -- Deprecated since version 1.11.1.\r\n    span1.instrumentation_info, span2.instrumentation_info\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n\r\n-------------------------------------------------------------------------------------------- benchmark: 2 tests -------------------------------------------------------------------------------------------\r\nName (time in us)                         Min                 Max               Mean            StdDev             Median               IQR            Outliers  OPS (Kops/s)            Rounds  Iterations\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\ntest_simple_start_span                28.0000 (1.0)      124.7000 (1.0)      31.6529 (1.0)      3.6020 (1.0)      31.8000 (1.0)      2.0000 (1.0)       171;165       31.5927 (1.0)        6799           1\r\ntest_simple_start_as_current_span     38.0000 (1.36)     204.2000 (1.64)     43.6937 (1.38)     6.2809 (1.74)     43.8000 (1.38)     3.4000 (1.70)      383;385       22.8866 (0.72)      10788           1\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nLegend:\r\n  Outliers: 1 Standard Deviation from Mean; 1.5 IQR (InterQuartile Range) from 1st Quartile and 3rd Quartile.\r\n  OPS: Operations Per Second, computed as 1 / Mean\r\n===Flaky Test Report===\r\n\r\ntest_ticker_collects_metrics passed 1 out of the required 1 times. Success!\r\n\r\n===End Flaky Test Report===\r\n=========================== short test summary info ===========================\r\nSKIPPED [1] logs\\test_export.py:265: needs *nix\r\nSKIPPED [1] metrics\\integration_test\\test_time_align.py:149: test failing in CI when run in Windows\r\nSKIPPED [1] trace\\export\\test_export.py:370: needs *nix\r\n================ 343 passed, 3 skipped, 95 warnings in 13.44s =================\r\nException while exporting metrics I/O operation on closed file.\r\nTraceback (most recent call last):\r\n  File \"C:\\...\\.tox\\opentelemetry-sdk\\lib\\site-packages\\opentelemetry\\sdk\\metrics\\_internal\\export\\__init__.py\", line 469, in _receive_metrics\r\n    self._exporter.export(metrics_data, timeout_millis=timeout_millis)\r\n  File \"C:\\...\\.tox\\opentelemetry-sdk\\lib\\site-packages\\opentelemetry\\sdk\\metrics\\_internal\\export\\__init__.py\", line 150, in export\r\n    self.out.write(self.formatter(metrics_data))\r\nValueError: I/O operation on closed file.\r\nCan't shutdown multiple times\r\nError in atexit._run_exitfuncs:\r\nTraceback (most recent call last):\r\n  File \"C:\\...\\.tox\\opentelemetry-sdk\\lib\\site-packages\\opentelemetry\\sdk\\metrics\\_internal\\__init__.py\", line 419, in shutdown\r\n    did_shutdown = self._shutdown_once.do_once(_shutdown)\r\nAttributeError: 'MeterProvider' object has no attribute '_shutdown_once'\r\n___________________________________ summary ___________________________________\r\n  opentelemetry-sdk: commands succeeded\r\n  congratulations :)\r\n```\r\n\r\n</details>\r\n\r\n\r\n- [x] Ran linters\r\n\r\n<details>\r\n  <summary>Test Results</summary>\r\n\r\n```\r\n> .tox/lint/Scripts/isort.exe . --check\r\nSkipped 25 files\r\n\r\n> .tox/lint/Scripts/black.exe . --check --extend-exclude=\"\\.venv\"\r\nAll done!\r\n432 files would be left unchanged.\r\n```\r\n\r\n</details>\r\n\r\n\r\n- [x] Confirmed that code does not add any public symbols\r\n\r\n<details>\r\n  <summary>Test Results</summary>\r\n\r\n```\r\n> tox -e public-symbols-check\r\npublic-symbols-check recreate: C:\\...\\.tox\\public-symbols-check\r\npublic-symbols-check installdeps: GitPython\r\npublic-symbols-check installed: gitdb==4.0.9,GitPython==3.1.27,smmap==5.0.0\r\npublic-symbols-check run-test-pre: PYTHONHASHSEED='150'\r\npublic-symbols-check run-test: commands[0] | python 'C:\\.../scripts/public_symbols_checker.py'\r\nThe code in this branch will not add any public symbols\r\n___________________________________ summary ___________________________________\r\n  public-symbols-check: commands succeeded\r\n  congratulations :)\r\n```\r\n\r\n</details>\r\n\r\n\r\n- [x] Ran spellcheck\r\n\r\n<details>\r\n  <summary>Test Results</summary>\r\n\r\n```\r\n> .tox/spellcheck/Scripts/codespell.exe --skip=\".venv\"\r\n\r\n```\r\n\r\n</details>\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. (I _think_ so, based on the first example)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated",
    "head_branch": "feature/Fix-issue-2584",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: pranavmarla / name: Pranav Marla  (fcb75611133b4010c2a245d53f9a4f63db44264b, b1d749559d2c100c01be78132546fd9e07f7591c, 22b81fef03814e8305efce5082a0d5e2e4f0a9e7, b8c33061cbcacd36e3c397d2a07f14bc1141902b, 559ae9a927a3b7240dd24a12f53366238e4b01fe, 6b1ef2d6d72b4629cc2087bf115075bf4349fd1b, a7094fb4c666d2149b9571e660e53ef675b278be)</li></ul>",
      "@srikanthccv \r\nI attempted to fix all the failing workflow checks that I could, by updating the changelog and linting the code. (The `docker-tests` check seems to have failed due to some network issue on the test runner side, unrelated to my changes).\r\n\r\nWould you mind running the workflow checks again so I can confirm there are no more changes that need to be made from my side?",
      "@srikanthccv Done!\r\n\r\n**Update**: For clarity, added to summary of changes in original post",
      "Update: \r\n- Linted example\r\n- Ran new spellcheck check to be safe and updated PR description with results",
      "Unfortunately, pulling to my local feature branch (after rebasing the remote feature branch here on GitHub) caused a merge commit :(\r\nTrying to see if there's some way I can get rid of that",
      "All your commits will be squashed before merging.",
      "> All your commits will be squashed before merging.\r\n\r\nThanks, that's good to know! Having the merge+duplicate commits hanging around was still bugging me though, so I ended up digging into rebase until I was able to fix it! 🎉",
      "Glad to see it merged -- thanks for the guidance, @srikanthccv!",
      "Feel free to pick some new issues. I will be happy to help you. "
    ],
    "commit_messages": [
      "Remove LogEmitter.flush() to align with OTel Log Spec (#2863)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2244ee515ce6a4e3f3",
    "number": 2862,
    "body": null,
    "head_branch": "release/1.13.0-0.33b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2244ee515ce6a4e3f4",
    "number": 2853,
    "body": "Fixes #2816",
    "head_branch": "issue_2816",
    "is_a_fork": true,
    "comments": [
      "@ocelotl are you planning to udpate PeriodicExportingMetricReader to call `MetricExporter.force_flush()` in this PR or in another?",
      "> @ocelotl are you planning to udpate PeriodicExportingMetricReader to call `MetricExporter.force_flush()` in this PR or in another?\r\n\r\nAdded it here.",
      "All your comments have been addressed, @aabmass PTAL"
    ],
    "commit_messages": [
      "Use force_flush (#2853)\n\n* Use force_flush\r\n\r\nFixes #2816\r\n\r\n* Refactor time out passing\r\n\r\n* Fix test cases\r\n\r\n* Add documentation\r\n\r\n* Add test case\r\n\r\n* Fix docs\r\n\r\n* Remove final decorator\r\n\r\n* Check for timeout in async calls\r\n\r\n* Remove timeout checking in metric reader\r\n\r\n* Add force_flush to PeriodicExportingMetricReader\r\n\r\n* Use TimeoutError\r\n\r\n* Fix lint\r\n\r\n* Address timeout comments\r\n\r\n* Add MetricsTimeoutError\r\n\r\n* Fix test case"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2344ee515ce6a4e3f5",
    "number": 2852,
    "body": "Fixes #2850",
    "head_branch": "issue_2850",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add force flush method to metric exporter (#2852)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2444ee515ce6a4e3f6",
    "number": 2849,
    "body": "Fixes #2848",
    "head_branch": "issue_2848",
    "is_a_fork": true,
    "comments": [
      "> It MUST support [BMP (Unicode Plane 0)](https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane), which is basically only the first three bytes of UTF-8 (or utf8mb3). [OpenTelemetry API](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#api) authors MAY decide if they want to support more Unicode [Planes](https://en.wikipedia.org/wiki/Plane_(Unicode)).\r\nIt MUST support at least 1023 characters. [OpenTelemetry API](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#api) authors MAY decide if they want to support more.\r\n\r\nI'm assuming the above two checks are already fulfilled as part of `description`'s formatting in the specs?",
      "> > It MUST support [BMP (Unicode Plane 0)](https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane), which is basically only the first three bytes of UTF-8 (or utf8mb3). [OpenTelemetry API](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#api) authors MAY decide if they want to support more Unicode [Planes](https://en.wikipedia.org/wiki/Plane_(Unicode)).\r\n> > It MUST support at least 1023 characters. [OpenTelemetry API](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#api) authors MAY decide if they want to support more.\r\n> \r\n> I'm assuming the above two checks are already fulfilled as part of `description`'s formatting in the specs?\r\n\r\nPython strings already support these 2 requirements by default AFAIK."
    ],
    "commit_messages": [
      "Refactor instrument name, unit and description checks (#2849)\n\nFixes #2848"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2544ee515ce6a4e3f7",
    "number": 2845,
    "body": "Fixes #2559\r\nFixes #2560\r\nFixes #2558",
    "head_branch": "issue_2558",
    "is_a_fork": true,
    "comments": [
      "If this fixes #2558, shouldn't it remove the todo from https://github.com/open-telemetry/opentelemetry-python/blob/75313b6c6d58945c1401622b6683ccdd28657984/opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/__init__.py#L79-L81",
      "I won't be working on this PR no more for the foreseeable future, closing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2644ee515ce6a4e3f8",
    "number": 2844,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2550",
    "head_branch": "issue-2550",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Instrument instances are always created through a Meter (#2844)\n\n* Instrument instances are always created through a Meter\r\n\r\n* Fix lint and add changelog\r\n\r\n* fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2644ee515ce6a4e3f9",
    "number": 2843,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/2792\r\n\r\nAdds `preferred_temporality` and `preferred_aggregation` configuration to metrics exporter (which is currently only used by `PeriodicExportingMetricReader`.\r\n\r\nMoved `OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE ` configuration to OTLPMetricExporter.",
    "head_branch": "temp",
    "is_a_fork": true,
    "comments": [
      "If I could make a suggestion, the entrypoints for `OTEL_METRIC_EXPORTERS` should provide a `MetricReader` factory function. For example, for otlp that could be something like\r\n\r\n```py\r\ndef provide_reader() -> MetricReader:\r\n  preferred_temporality=environ.get(\r\n                    OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE,\r\n                    \"CUMULATIVE\",\r\n                )\r\n                .upper()\r\n                .strip()\r\n\r\n  return PeriodicExportingMetricReader(\r\n    exporter=OTLPExporter(),\r\n    preferred_temporality=preferred_temporality,\r\n    ...,\r\n  )\r\n```\r\n\r\nthen update https://github.com/open-telemetry/opentelemetry-python/blob/b9a6358583c0676482a043279c01b252dc6c308e/exporter/opentelemetry-exporter-otlp-proto-grpc/setup.cfg#L62\r\n\r\nto\r\n```cfg\r\n otlp_proto_grpc = opentelemetry.exporter.otlp.proto.grpc.metric_exporter:provide_reader\r\n```\r\n\r\none downside of this approach is some code duplication across implementations of `provide_reader()` for other exporters if we have common environment variables to check. However it would simplify things for using MetricReaders like Prometheus which act as a \"pull exporter\", as they can easily implement this method as well. Right now im not sure how we would implement `OTEL_METRICS_EXPORTER=prometheus`",
      "That looks good for the auto instrumentation. How does this work If I am setting up metrics manually?",
      "@aabmass \r\nWould the recommendation for users who manually setup their metrics pipeline with otlp exporter to use `provide_reader`?\r\n\r\n```python\r\n...\r\nreader = provide_reader()\r\nprovider = MeterProvider(metric_readers=[reader])\r\nset_meter_provider(provider)\r\n...\r\n```\r\nI'm also wondering how we will handle all the optional configuration needed for otlp exporter and the `PeriodicExportingMetricReader`, will we have all of these as optional parameters in `provide_reader`?",
      "> Would the recommendation for users who manually setup their metrics pipeline with otlp exporter to use `provide_reader`?\r\n\r\nno that wasn't the intention, i see your point. The other option we discussed in SIG was having PeriodicExportingMetricReader defer to the paired exporter for returning the preferred temporality. What do you think of that? FWIW, [the spec says](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/sdk.md#:~:text=Metric%20Exporters%20always,for%20an%20Exporter.)\r\n\r\n> Metric Exporters always have an associated MetricReader. The aggregation and temporality properties used by the OpenTelemetry Metric SDK are determined when registering Metric Exporters through their associated [MetricReader](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/sdk.md#metricreader). OpenTelemetry language implementations MAY support automatically configuring the MetricReader to use for an Exporter.\r\n\r\nso i imagine this was the intended behavior",
      "> The other option we discussed in SIG was having PeriodicExportingMetricReader defer to the paired exporter for returning the preferred temporality.\r\n\r\nWould this only be for otlp exporters, or are you thinking of making any metric exporter configurable for temprality/aggregation?",
      "Any of them",
      "@aabmass @ocelotl @srikanthccv \r\nAs discussed in the SIG, added `preferred_temporality` and `preferred_aggregation` configuration in the exporter. `PeriodicExportingMetricReader` will take into account exporter configuration first, and then its own configuration. The OTLP metric exporter also configures temporality via env var `OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE`.",
      "I also noticed the docstring still mentions environment variables but doens't seem to check any https://github.com/open-telemetry/opentelemetry-python/blob/2d1bfb36e0bb7f0a85d393e5d3886576127fc88f/opentelemetry-sdk/src/opentelemetry/sdk/metrics/_internal/export/__init__.py#L167-L168"
    ],
    "commit_messages": [
      "Respect OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE only for otlp exporter (#2843)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2744ee515ce6a4e3fa",
    "number": 2839,
    "body": "# Description\r\n\r\nThis reverts commit aa367302989978a1ae04badee7e3948502b96616.\r\n\r\nIt is no longer required on Python 3.11.0b4 and later; see https://github.com/open-telemetry/opentelemetry-python/pull/2771#issuecomment-1193421508 and https://mail.python.org/archives/list/python-dev@python.org/message/73YP4RS4QOJXUS63BQZVLTQHK3OP3L3H/.\r\n\r\nSpecifically, the `^^^^…` are now omitted when they would “underline” the whole preceding line, which is the case here, so the expected output is the same as for Python 3.10 and earlier.\r\n\r\nFixes (no issue file)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI've built the Fedora package on Python 3.11.0b4; it fails with https://github.com/open-telemetry/opentelemetry-python/commit/aa367302989978a1ae04badee7e3948502b96616 applied as a patch, and succeeds with the patch removed as in this PR.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "python-3.11b4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert \"Python 3.11: Enhanced error locations in tracebacks (#2771)\" (#2839)\n\nThis reverts commit aa367302989978a1ae04badee7e3948502b96616.\r\n\r\nIt is no longer required on Python 3.11.0b4 and later; see\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/2771#issuecomment-1193421508\r\nand\r\nhttps://mail.python.org/archives/list/python-dev@python.org/message/73YP4RS4QOJXUS63BQZVLTQHK3OP3L3H/.\r\n\r\nSpecifically, the ^^^^… are now omitted when they would “underline” the\r\nwhole preceding line, which is the case here, so the expected output is\r\nthe same as for Python 3.10 and earlier."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2844ee515ce6a4e3fb",
    "number": 2838,
    "body": "# Description\r\n\r\n- Resolve missing API details within auto generated docs (https://github.com/open-telemetry/opentelemetry-python/issues/2786)\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "update-docs",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: RobsonSutton / name: Robson Sutton  (2a92899fbba28180b37a89afa1d47bd38ab3253c)</li></ul>",
      "Do you want to update the docs for all exporters or just the span exporter? Please update the title to reflect that. ",
      "@RobsonSutton, this looks like an easy and important fix. Would you like tidy it up and mark it ready for reviews?",
      "@RobsonSutton, another friendly ping. Would you like to tidy this up and make it open for reviews?",
      "@srikanthccv - Apologies! Just seen this and completely blanked on this PR..! I'll see if I can carve out some time this week to just finish this up and make it available for merging 👍 ",
      "@RobsonSutton friendly ping"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2944ee515ce6a4e3fc",
    "number": 2832,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/2803\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2802",
    "head_branch": "example",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Add an example for preferred temporality and aggregation for metric reader (#2832)\n\n* example\r\n\r\n* remove test\r\n\r\n* comments\r\n\r\n* docs\r\n\r\n* docs\r\n\r\n* seconds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2a44ee515ce6a4e3fd",
    "number": 2830,
    "body": "# Description\r\n\r\nFix get_log_emitter instrumenting_module_version args typo\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [+] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-typo",
    "is_a_fork": true,
    "comments": [
      "Sorry forgot to add changelog, @oxeye-nikolay could you take a look again ? :bow: "
    ],
    "commit_messages": [
      "fix instrumenting_module_version typo (#2830)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2b44ee515ce6a4e3fe",
    "number": 2827,
    "body": "# Description\r\n\r\nFixes #2756 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e opentelemetry-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n\r\n",
    "head_branch": "issue-2756",
    "is_a_fork": true,
    "comments": [
      "Meeting on 30th Jul: We won't make this part of the stable release. Probably create a convenience package."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2b44ee515ce6a4e3ff",
    "number": 2826,
    "body": "# Description\r\n\r\nFixes #2736 \r\n",
    "head_branch": "issue-2736",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: add example to show how to drop measurements from an instrument (#2826)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2c44ee515ce6a4e400",
    "number": 2825,
    "body": "Fixes #2824",
    "head_branch": "issue_2824",
    "is_a_fork": true,
    "comments": [
      "Closing because of #2823."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2d44ee515ce6a4e401",
    "number": 2823,
    "body": null,
    "head_branch": "links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix links for pass tests (#2823)\n\n* links\r\n\r\n* fix links\r\n\r\n* link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2e44ee515ce6a4e402",
    "number": 2821,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\n> Testing allows product creators to verify the functionality of that product. A testing suite during phases of CI/CD\r\n> can prevent bugs from ever reaching end users.\r\n\r\n> Should the testing results be inaccurate, and the creators have now lost all insight into their product.\r\n> What this change does is add a layer of security into the testing suite, randomizing the order in which tests are run.\r\n> Up until now, a UnitTest child-class would have functions A, B, and C, and they would be run in order A->B->C.\r\n> With this change, the order of tests would be randomized, based on a seed of the current unixtime.\r\n> Essentially in the form of (3c1)->(2c1)->(1c1), using the example of A, B, and C.\r\n\r\n> Why does this add a layer of security? It allows us to immediately spot which test are dependent on others, \r\n> as these very test fail during this migration to a random testing order. A test that is dependent on another is\r\n> not a test by itself, but moreso simply an extension of the dependency test.\r\n\r\n> Upon adding pytest-randomly plugin into Tox's environment, we see that the immediate failure of tests proves\r\n> that many tests are dependent on others, and our current testing suite is flawed.\r\n\r\n> Dependency added: `pytest-randomly` to `testenv`.\r\n\r\nFixes #2760\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n> This fix is different than most proposed tests/features. \r\n> After the migration to a fully randomized testing environment, the sheer fact of all tests passing and working as \r\n> expected proves that the testenv has returned to its \"normalcy\" and proper functionality.\r\n\r\n- [X] Test A\r\n\r\n> `exporter/opentelemetry-exporter-zipkin-json` Has been the main package inspected during development\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "test-random-order",
    "is_a_fork": true,
    "comments": [
      "@ronnathaniel are you still interested in completing this work?",
      "@ronnathaniel are you still continuing this work?",
      "@ronnathaniel Please re-open when you have time for this again."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d2f44ee515ce6a4e403",
    "number": 2819,
    "body": "# Description\r\n\r\nFixes #2766\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] misc/tests\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1193\r\n\r\n",
    "head_branch": "issue-2766",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "move tracing sdk setup from setUpClass to setUp (#2819)\n\n* move tracing sdk setup from setUpClass to setUp\r\n\r\n* Update contrib SHA"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3044ee515ce6a4e404",
    "number": 2818,
    "body": "Fixes #2817",
    "head_branch": "issue_2817",
    "is_a_fork": true,
    "comments": [
      "I believe the gh-pages branch is specifically for this task. let's hold this if we can find a correct link to replace instead. ",
      "> anch is specifically for this task. let's hold thi\r\n\r\nI say we merge this, this is actually fixing a bug on CI."
    ],
    "commit_messages": [
      "Remove dead link (#2818)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3044ee515ce6a4e405",
    "number": 2814,
    "body": "Unfortunately I have no time to review or contribute to this repo these days. As such please remove me from the approvers group.\r\n",
    "head_branch": "codeboten/rm-codeboten",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[chore] update approvers list (#2814)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3144ee515ce6a4e406",
    "number": 2812,
    "body": "Fixes #2718 ",
    "head_branch": "feature/links_check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add markdown links check (#2812)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3244ee515ce6a4e407",
    "number": 2811,
    "body": "# Description\r\n\r\nFixes #2806 \r\nFixes #2807 \r\nFixes #2737 \r\n\r\n## Type of change\r\n- [x] docs",
    "head_branch": "views-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: add examples to show common view scenarios (#2811)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3344ee515ce6a4e408",
    "number": 2810,
    "body": "# Description\r\n\r\nAs per [this documentation](https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/cloud_provider/aws/logs/), it's possible for `LabelValue` to be a list of strings.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPresumably, if type checks pass then this should be good to go.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nFrom what I can tell, no.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: rmorshea / name: Ryan Morshead  (fdbaf0979e58e401d81e5c7c97a5ef20bf4e5e56)</li></ul>",
      "@srikanthccv, just a note, having `types.Attributes` be `Optional[Mapping]` feels like an odd choice. If it weren't for it being `Optional` you could just re-use the type in `resources/__init__.py` instead of defining a new one.",
      "`Attributes` is usually optional throughout the codebase since they could be no attribute with `None` passed. But I agree the original type could have been just mapping and the `Optional` added wherever needed. I don't recall why that decision was made.",
      "To avoid backwards incompatible changes, perhaps there could be a `RequiredAttributes` type. Otherwise you'll end up with a bunch of non optional `Attributes` declarations throughout the code-base. I'm actually realizing that the declaration in `resources` might also be incorrect since it's a `dict` rather than a non-mutable `Mapping`.",
      "Not sure that we want this change implemented in this way. This is making `LabelValue` equivalent to `AttributeValue`. If a change in `AttributeValue` happens later, it will reflect in `LabelValue` without us noticing. Maybe it would be better to copy the code that defines `AttributeValue` in the definition of `LabelValue`.",
      "If it was not the breaking change, we would have removed it since the `LabelValue` and `AttributeValue` use to indicate the same. The attribute value definition is common across traces/resources/metrics/logs so I don't think we should copy.",
      "+1 to @srikanthccv \r\n\r\nWe don't really want two types representing the same thing.",
      "> If it was not the breaking change, we would have removed it since the `LabelValue` and `AttributeValue` use to indicate the same. The attribute value definition is common across traces/resources/metrics/logs so I don't think we should copy.\r\n\r\nIn that case, shouldn't we mark `LabelValue` as deprecated?",
      "Sure, we could do that but I think it's not as straight forward to deprecate global var as some class/def. Now it's an alias for `AttributeValue`. This can be done in separate PR.",
      "In such a follow-up PR I'd recommend creating a `RequiredAttributes` type to avoid redefinitions of non-nullaable `Attributes` throughout the code-base.",
      "Attributes are optional and can be `None` across the signals this project supports traces/metrics/logs.",
      "Is this [non-optional `Attributes`](https://github.com/rmorshea/opentelemetry-python/blob/979422972b291500c15a17bafe2761435912c879/opentelemetry-sdk/src/opentelemetry/sdk/resources/__init__.py#L77) redefinition incorrect then?",
      "Yes"
    ],
    "commit_messages": [
      "LabelValue can be list of strings (#2810)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3444ee515ce6a4e409",
    "number": 2809,
    "body": "# Description\r\n\r\nAdd a configurable max_export_batch_size to the gRPC metrics exporter.\r\nThis is to avoid reaching the 4MB gRPC limit when observables generate a lot metrics\r\n\r\nFixes #2710 \r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added unit tests to test the split logic\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes.\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/metrics/otlp-export-max-batch-size",
    "is_a_fork": true,
    "comments": [
      "Thanks for all the comments, I will fix them.\r\nOne thing though, I think I'm not going deep enough when splitting the metrics_data.\r\nI should apply the _max_export_batch_size to the number of data-points rather than the number of metrics.\r\nWDYT ?",
      "> Thanks for all the comments, I will fix them. One thing though, I think I'm not going deep enough when splitting the metrics_data. I should apply the _max_export_batch_size to the number of data-points rather than the number of metrics. WDYT ?\r\n\r\nIf I remember correctly, there will be one data point for each possible attribute set. So the number of metrics should be fine. In the issue, you noticed from your end what was the underlying issue? Was it number of points being high or total number of metrics exceeding the limit overall?",
      "The number of points being high...",
      "Then you will probably have to divide the batch based on data points.",
      "@overmeulen thanks, approving. Please don't force push your commits to your PR branch, it makes it hard to review new changes because the old commits don't show up anymore. Don't worry about how it will look in `main` when merged, before merging github will squash all commits into one.",
      "> @overmeulen thanks, approving. Please don't force push your commits to your PR branch, it makes it hard to review new changes because the old commits don't show up anymore. Don't worry about how it will look in `main` when merged, before merging github will squash all commits into one.\r\n\r\nNoted for next time !",
      "I don't think the last failure is coming from my PR, I see the same failure on other PRs...",
      "Contrib SHA needs to be updated. It will be fixed in https://github.com/open-telemetry/opentelemetry-python/pull/2919"
    ],
    "commit_messages": [
      "Add a configurable max_export_batch_size to the gRPC metrics exporter (#2809)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3544ee515ce6a4e40a",
    "number": 2796,
    "body": "Fixes #2793",
    "head_branch": "issue_2793",
    "is_a_fork": true,
    "comments": [
      "@ocelotl I think this requires a changelog since it's fixing the bug"
    ],
    "commit_messages": [
      "Fix unit and name regexes (#2796)\n\n* Fix unit and name regexes\r\n\r\nFixes #2793\r\n\r\n* Add changelog entry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3644ee515ce6a4e40b",
    "number": 2795,
    "body": null,
    "head_branch": "release/1.12.0rc2-0.32b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release 1.12.0rc2-0.32b0 (#2795)\n\n* Release 1.12.0rc2-0.32b0\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3644ee515ce6a4e40c",
    "number": 2790,
    "body": "Fixes #2789",
    "head_branch": "issue_2789",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow git to check out files with long names in Windows (#2790)\n\n* Allow git to check out files with long names in Windows\r\n\r\nFixes #2789\r\n\r\n* Update contrib SHA"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3744ee515ce6a4e40d",
    "number": 2785,
    "body": "Looks like this important core module was completely missing from the docs (it is also not mentioned at https://opentelemetry.io/docs/instrumentation/python/manual/ and I believe https://opentelemetry.io/docs/instrumentation/python/cookbook/#manually-setting-span-context mentions something either outdated or a bad practice, namely instantiating TraceContextTextMapPropagator directly instead of going through the global accessor)",
    "head_branch": "bugfix/docs-missing-propagate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Propagate API module & propagators package missing from API docs (#2785)\n\n* Propagate API module missing from docs.\r\n\r\n* Add CHANGELOG.\r\n\r\n* Sphinx complains about more missing classes.\r\n\r\n* More fixes, understood why Sphinx didn't find some link targets.\r\n\r\n* Update CHANGELOG."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3844ee515ce6a4e40e",
    "number": 2784,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # [2747](https://github.com/open-telemetry/opentelemetry-python/issues/2747)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\nThis change is really a reorganization/refactor and thus does not fit into the above categories.\r\n\r\n# How Has This Been Tested?\r\nRan tests on Windows 11\r\n\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `pytest opentelemetry-sdk/tests/trace/`\r\n- [x] `python scripts/eachdist.py test`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\nNo.\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "jeremyvoss",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change tracing to use `Resource.to_json()` (#2784)\n\n* Change tracing to use Resource.to_json()\r\n\r\n* Edited CHANGELOG\r\n\r\n* Added PR # to CHANGELOG\r\n\r\n* Change tracing to use Resource.to_json()\r\n\r\n* Edited CHANGELOG\r\n\r\n* Added PR # to CHANGELOG\r\n\r\n* Generalized removal of empty or blank values\r\n\r\n* Simplified trace to_json to include empty and null values.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3944ee515ce6a4e40f",
    "number": 2783,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\n> Currently, Trace Exporters are forced to instantiate their own Session object, taken from the `requests` module, on initalization.\r\n>\r\n> This change will allow Users to specify Session objects for the Trace Exporters to use.\r\n> \r\n> These specified Sessions will be passed in as optional paramaters to the Exporter's constructor.\r\n> \r\n> `requests` is the only dependency, and is optional.\r\n\r\nFixes #2489\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Test A\r\n\r\n> Updated all Unit Tests for session-utilizing exporters. These exporters include:\r\n> - opentelemetry-exporter-otlp-proto-http\r\n>  - Span Exporter\r\n>  - Log Exporter\r\n> - opentelemetry-exporter-zipkin-proto-http\r\n>  - Span Exporter\r\n> - opentelemetry-exporter-zipkin-json\r\n>  - Span Exporter\r\n>\r\n> All Unit Tests have passed, as expected.\r\n\r\n- [x] Test B\r\n\r\n> Running Locally. As an optional parameter, I passed in an already-Instantiated \r\n> Session object, taken from the already-leveraged `requests` module.\r\n> \r\n> Very Simply:\r\n> \r\n> `zipkin_exporter = ZipkinExporter(session=requests.Session())`\r\n> \r\n> And proceeded to export Spans and Traces to a local backend.\r\n\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "exporter-session-param",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ronnathaniel / name: Ron Nathaniel  (962e9bc2aecb1a540991bf0ad8cac1765bb43b6a, 802443313842b7faae7eb73d5dd3fc41409111fe, 85cd4ecba329f5d8d2917759b3b57dfff48be1c5, 5bf5f0e51a38e10e0b49d36b70392ae278343538, 08c1fb255803eaa03167d1e9cc79c235dfda338b)</li></ul>",
      "Unsure why all Jobs are stuck on `Expected - Waiting for Status`, re-requested approvals",
      "@ronnathaniel \r\nLooks like the build is failing on actual tests?",
      "> @ronnathaniel Looks like the build is failing on actual tests?\r\n\r\nThanks for noticing. Should be fixed now. Waiting for tests to run to confirm",
      "@ronnathaniel \r\nThere's some lint errors failing the build. Please make sure to run and pass your tests locally by running `tox`."
    ],
    "commit_messages": [
      "Adding optional session parameter to Trace Exporters constructors (#2783)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3a44ee515ce6a4e410",
    "number": 2782,
    "body": "Fixes #2772",
    "head_branch": "issue_2772",
    "is_a_fork": true,
    "comments": [
      "There is a dead link in our contributing documentation. Merging this PR to address that issue later."
    ],
    "commit_messages": [
      "Remove eachdist from contributing documentation (#2782)\n\nFixes #2772\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3b44ee515ce6a4e411",
    "number": 2781,
    "body": "Fixes #2780",
    "head_branch": "issue_2780",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix warning message for OTLP gRPC exporter mixin (#2781)\n\n* Fix warning message for OTLP gRPC exporter mixin\r\n\r\nFixes #2780\r\n\r\n* Refactor export parameter type\r\n\r\n* Add changelog entry\r\n\r\n* Use fixed warning messages for traces and metrics\r\n\r\n* Use subclass-specific error messages\r\n\r\n* Fix test cases\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3b44ee515ce6a4e412",
    "number": 2777,
    "body": "Failing build\r\nhttps://github.com/open-telemetry/opentelemetry-python/runs/7010024626?check_suite_focus=true\r\n\r\nLatest version of [googleapis-common-protos](https://pypi.org/project/googleapis-common-protos/1.56.3/) causing tests in jaeger to fail.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2778",
    "head_branch": "proto",
    "is_a_fork": true,
    "comments": [
      "Thanks @srikanthccv! As part of this, could you also lock protobuf at 3.20.1? The newer version of 4.20.1, which the googleapis-common-protos sometimes comes with seems to cause the same issue. 1.56.2 of the google package comes with 3.20.1 of protobuf. 1.56.3 comes with protobuf 4.20.1. But, if protobuf 4.20.1 is in the pip cache, then it will be installed when installing google 1.56.2. Since protobuf seems to be the real culprit, I think we should explicitly pin that, too.",
      "@jeremydvoss \r\n\r\nv1.5.2 of `googleapis-common-protos` does not support protobuf versions [4.x](https://github.com/googleapis/python-api-common-protos/blob/v1.56.2/setup.py#L25) so that's not needed."
    ],
    "commit_messages": [
      "Update setup.cfg (#2777)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3c44ee515ce6a4e413",
    "number": 2776,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3d44ee515ce6a4e414",
    "number": 2774,
    "body": "# Description\r\n\r\nAs discussed in #2606, change the method from error to exception to include the traceback.\r\n\r\n## Type of change\r\n\r\nn/a\r\n\r\n# How Has This Been Tested?\r\n\r\nSmall code change; manual testing\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "error-to-exc",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: kasium / name: kasium  (f50b36dd93be1ed0cb7cca359fa68f9e02e89531)</li></ul>",
      "@lzchen can you please have a look into the test errors. They seem not to be caused by this change"
    ],
    "commit_messages": [
      "Change log of detach error to exception (#2774)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3e44ee515ce6a4e415",
    "number": 2773,
    "body": "Fixes #2755",
    "head_branch": "issue_2755",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Verify previous point is returned for cumulative instruments (#2773)\n\n* Verify previous point is returned for cumulative instruments\r\n\r\nFixes #2755\r\n\r\n* Reject non-cumulative temporalities for Prometheus metric reader\r\n\r\n* Add test case for InMemoryMetricReader\r\n\r\n* Fix prometheus import paths\r\n\r\n* Remove parameters for Prometheus init\r\n\r\n* Add sleep for windows tests\r\n\r\n* Add temporality overriding dictionary"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d3f44ee515ce6a4e416",
    "number": 2771,
    "body": "\r\n\r\n# Description\r\n\r\nExpect ^^^^^^^^^ in tracebacks when testing them\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI've built the Fedora package on Python 3.11.0b3.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\nI've opened this here because I needed it in Fedora, but I am currently herding dozens of similar issues as the Fedora's Python 3.11 mass rebuild is in progress. I won't be able to dedicate my time to fixing any style issues, changelog fragments, or similar things. Sorry about that. Feel free to adjust this in any way you see fit or even close it if it's not up to the project's standards.",
    "head_branch": "python3.11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Python 3.11: Enhanced error locations in tracebacks (#2771)\n\n* Python 3.11: Enhanced error locations in tracebacks\r\n\r\nExpect ^^^^^^^^^ in tracebacks when testing them\r\n\r\n* Update opentelemetry-sdk/tests/trace/test_trace.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4044ee515ce6a4e417",
    "number": 2764,
    "body": "Fixes #2750",
    "head_branch": "issue_2750",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use always empty for None schema url value (#2764)\n\n* Use always None for empty schema url value\r\n\r\nFixes #2750\r\n\r\n* Revert \"Use always None for empty schema url value\"\r\n\r\nThis reverts commit 8ef29dbd665c5c3ed812266452cb510081f50f16.\r\n\r\n* Use empty string as default value for schema_url"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4044ee515ce6a4e418",
    "number": 2763,
    "body": "Fixes #2360 and because I am always looking for the corresponding contrib repo PR, [here](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/853) it is.\r\n\r\n\r\n6 months have passed since 3.6 reached its [end of life](https://devguide.python.org/devcycle/#end-of-life-branches). [Our policy](https://github.com/open-telemetry/opentelemetry-python#python-version-support-addition-and-removal) requires we remove support for 3.6.",
    "head_branch": "issue_2360",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove support for 3.6 (#2763)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4144ee515ce6a4e419",
    "number": 2762,
    "body": "Fixes #2348\r\n\r\n# Description\r\n\r\nThis is a simple fix for #2348, where the jaeger exporter fails to handle a NonRecordingSpan correctly. It just basically skips the parent ID retrieval and moves along as if nothing else happened. This only occurs when a NonRecordingSpan has a valid context, which apparently we have trigged periodically in our app.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nI created a new unit test inspired by an existing test, but done with a NonRecordingSpan to ensure that this doesn't cause the process to fail.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [n/a] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [n/a] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix #2348, add handling for non recording span in jaeger propagator (#2762)\n\n* Fix #2348, add handling for non recording span in jaeger exporter\r\n\r\n* Fix pylint errors\r\n\r\n* Changes for black"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4244ee515ce6a4e41a",
    "number": 2759,
    "body": "Fixes #2582",
    "head_branch": "issue_2582",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add min max fields to Histogram (#2759)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4344ee515ce6a4e41b",
    "number": 2757,
    "body": "# Description\r\n\r\nThis removes the redundant setup code in `SpanTestBase` and moves the metrics setup to instance methods.\r\n\r\nFixes #1993 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] misc\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "issue-1993",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "TestBase and SpanTestBase are redundant (#2757)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4444ee515ce6a4e41c",
    "number": 2754,
    "body": "# Description\r\n\r\nRelated to https://github.com/open-telemetry/opentelemetry-python/issues/2621 and https://github.com/open-telemetry/opentelemetry-python/pull/2708\r\n\r\nWhen using the tracing decorator documented as part of the issue and PR above, functions might not actually be instrumented when the decorator is used on a function before a tracing provider is configured. \r\n\r\nConsidering the following case : \r\n```\r\n\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\n\r\n\r\ntracer = trace.get_tracer(__name__)\r\n\r\ndef setup_tracing() -> None:\r\n    provider = TracerProvider()\r\n    processor = BatchSpanProcessor(ConsoleSpanExporter())\r\n    provider.add_span_processor(processor)\r\n    trace.set_tracer_provider(provider)\r\n\r\n@tracer.start_as_current_span(\"toto\")\r\ndef toto():\r\n    print(\"toto\")\r\n\r\ndef main():\r\n    setup_tracing()\r\n    toto()\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nHere, the `toto` function will not actually be instrumented, even after configuration of a tracing provider. This is particularly problematic with instrumenting submodules for example, because if the module is imported before a tracer provider is configured, most uses of the decorator will be no-ops, and no tracing will be done.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added test case in [opentelemetry-api/tests/trace/test_proxy.py](https://github.com/open-telemetry/opentelemetry-python/pull/2754/files#diff-844b01bfe505a5b57da262b80c87b4bfa58cb0ec5bb7ef15b3896fe3087c1e91)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "fix_tracing_decorator_with_late_config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix tracing decorator with late configuration (#2754)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4544ee515ce6a4e41d",
    "number": 2753,
    "body": "# Description\r\n\r\nAs part of revamping the getting started and autoinstrumentation documentation to include metrics, I noticed this was missing. This adds entry points for OTLP exporter\r\n\r\nPart of #2732\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTested locally with `opentelemetry-instrument --metrics_exporter otlp ...`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- ~[ ] Documentation has been updated~ (coming in separate PR to opentelemetry.io repo)\r\n",
    "head_branch": "otlp-metrics-entrypoint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4544ee515ce6a4e41e",
    "number": 2748,
    "body": "# Description\r\n\r\nAdds `opentelemetry_metrics_exporter` entry points \r\n",
    "head_branch": "metrics-exporter-entrypoint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add entrypoint for metrics exporter (#2748)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4644ee515ce6a4e41f",
    "number": 2745,
    "body": "Fixes #2743",
    "head_branch": "issue_2743",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Check data point before yielding (#2745)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4744ee515ce6a4e420",
    "number": 2742,
    "body": "# Description\r\n\r\nAdd OTEL_EXPORTER_JAEGER_INSECURE environment variable for OpenTelemetry Jaeger Protobuf exporter.\r\n\r\nWith OTEL_EXPORTER_JAEGER_INSECURE user can using a jaeger collector without https when using automatic instrumentation.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "add-exporter-jaeger-insecure-envvar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4844ee515ce6a4e421",
    "number": 2735,
    "body": "# Description\r\n\r\nFixes #2702 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e opentelemetry-api`\r\n- [x] `tox -e opentelemetry-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n\r\n",
    "head_branch": "issue-2702",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      " Allow `set_status` to accept the StatusCode and optional description  (#2735)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4944ee515ce6a4e422",
    "number": 2731,
    "body": "# Description\r\n\r\nFixes #2730 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e opentelemetry-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n\r\n- [x] No.\r\n\r\n",
    "head_branch": "issue-2730c",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: update entry point object references for metrics (#2731)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4a44ee515ce6a4e423",
    "number": 2729,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nThis change aims to fix the issue outlined in [opentelemetry-python-contrib issue #930](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/930) where urllib3 downstream spans are not being suppressed with a requests upstream, causing an extra span to be created.\r\n\r\nThe root cause of this bug lies in the create_key() method in opentelemetry context which adds a unique `uuid` to the end of each key created. Since a new `_SUPPRESS_HTTP_INSTRUMENTATION` key is being created in the instrumentation for each library, this results in a different key being created by each instrumentation instead of the creation of a single key that suppresses HTTP instrumentation so proceeding libraries know not to instrument further. \r\n\r\nThis fix involves creating the `_SUPPRESS_HTTP_INSTRUMENTATION` once in opentelemetry context to avoid the bug that causes a new suppress http instrumentation key to be created by each instrumentation. By having only 1 key that is accessible to all instrumentations, its true value can be passed on from one instrumentation to the next without being set to None every time the instrumentation of a new library begins. This does not conflict with the [context spec](https://github.com/open-telemetry/opentelemetry-specification/blob/v1.1.0/specification/context/context.md#context) since the `_SUPPRESS_HTTP_INSTRUMENTATION_KEY` is meant to be shared, and creating a unique version of it in each library instrumentation is not the correct implementation of this concept. \r\n\r\nFixes [#930 in opentelemetry-python-contrib](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/930)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Tox unit tests for each affected library (in contrib repo)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1116\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-suppress-http-instrumentation-key",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Create Suppress HTTP Instrumentation key in opentelemetry context (#2729)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4a44ee515ce6a4e424",
    "number": 2728,
    "body": "# Description\r\n\r\nFixes #2594 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e opentelemetry-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n",
    "head_branch": "issue-2594",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support logs SDK auto instrumentation enable/disable with env (#2728)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4b44ee515ce6a4e425",
    "number": 2727,
    "body": "# Description\r\n\r\nFixes #2723 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e opentelemetry-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n",
    "head_branch": "issue-2723",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: `frozenset` object has no attribute `items` (#2727)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4c44ee515ce6a4e426",
    "number": 2726,
    "body": "# Description\r\n\r\nThe `backoff` library made a major version bump to `2.0.0` when dropping support for Python 3.6:\r\nhttps://github.com/litl/backoff/blob/master/CHANGELOG.md\r\n\r\nThis PR allows for using newer `backoff` versions under Python versions 3.7 and above, I can add an upper bound on `3.0.0` if that's preferred, but in my experience it's best to skip capping upper bounds by default and only add them when necessary.\r\n\r\nFixes #2693",
    "head_branch": "loosen-backoff-dep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Loosen dependency on backoff for newer Python versions (#2726)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4d44ee515ce6a4e427",
    "number": 2724,
    "body": null,
    "head_branch": "name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Specify name for worker threads for logging and metrics (#2724)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4d44ee515ce6a4e428",
    "number": 2722,
    "body": "Fixes #2716",
    "head_branch": "issue_2716",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing to_json methods (#2722)\n\n* Add missing to_json methods\r\n\r\nFixes #2716\r\n\r\n* Added resource to_json method\r\n\r\n* Rename to metrics data\r\n\r\n* Add to_json to Instrumentation Scope as well\r\n\r\nFixes #2716"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4e44ee515ce6a4e429",
    "number": 2720,
    "body": "This is a stop-gap until the generated code can be updated with a newer\r\nversion of protoc, as required by the protobuf 4.x release.\r\n\r\n# Description\r\n\r\n`protobuf` 4.x requires that the generated files be generated with a newer version of protoc than has been used.\r\n\r\nThis is a historical breakage (i.e. affects previously released versions), so this is a simple fix that could be trivially backported to previous releases if desired.\r\n\r\nMany existing `protobuf` dependencies are already more-tightly defined, so I didn't touch those.\r\n\r\nFixes #2717\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] CI run\r\n- [x] pip\r\n\r\n## Pip test\r\n\r\nIn a clean venv, install the changed packages and force protobuf>4 (i.e. the incompatible version)\r\n```\r\npython -m pip install --upgrade --upgrade-strategy eager .\\opentelemetry-python\\opentelemetry-proto\\ .\\opentelemetry-python\\exporter\\opentelemetry-exporter-opencensus .\\opentelemetry-python\\exporter/opentelemetry-exporter-zipkin-proto-http protobuf>4\r\n```\r\n\r\nThis succeeds in main.\r\n\r\nWith this PR, the same command fails (as expected)\r\n```\r\nERROR: Cannot install opentelemetry-proto==1.12.0rc1 and protobuf>4 because these package versions have conflicting dependencies.\r\n\r\nThe conflict is caused by:\r\n    The user requested protobuf>4\r\n    opentelemetry-proto 1.12.0rc1 depends on protobuf~=3.13.0\r\n```\r\n\r\nNote that right now, this test must explicitly specify `protobuf>4` because the protobuf 4.x release package has been yanked, so it's no longer selected by default. Had this not been done, the test for this PR would have successfully installed, but chosen an earlier version of protobuf.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\nThere's a matching PR at https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1109 though.\r\n\r\n# Checklist:\r\n\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "restrict-protobuf-to-3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "narrow protobuf dependencies to exclude protobuf >= 4 (#2720)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d4f44ee515ce6a4e42a",
    "number": 2715,
    "body": "Fixes #2709",
    "head_branch": "issue_2709",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix link in README (#2715)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5044ee515ce6a4e42b",
    "number": 2714,
    "body": "# Description\r\n\r\nFixes #2713\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] We have a 10 minutes NFR test on our side that was almost consistently failing. All runs are now green with this fix\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bugfix/logs/force-flush",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix LogEmitterProvider.force_flush hanging randomly (#2714)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5144ee515ce6a4e42c",
    "number": 2712,
    "body": "Fixes #2687",
    "head_branch": "issue_2687",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Document preferred method for attribute setting (#2712)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5244ee515ce6a4e42d",
    "number": 2708,
    "body": "Fixes #2621",
    "head_branch": "issue_2621",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Document usage of stat_as_current_span as decorator (#2708)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5244ee515ce6a4e42e",
    "number": 2707,
    "body": "# Description\r\n\r\nAs we start writing instrumentation for contrib packages, it is common need to have the global meter provider set with an in memory metrics reader to easily write the assertions. This commit introduces those changes to TestBase.",
    "head_branch": "test-base-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add meter provider and in memory reader to TestBase (#2707)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5344ee515ce6a4e42f",
    "number": 2705,
    "body": "# Description\r\n\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1096\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e opentelemetry-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "config-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Configure auto instrumentation to support metrics (#2705)\n\n* Configure auto instrumentation to support metrics\r\n\r\n* Add tests\r\n\r\n* Update test_configurator.py\r\n\r\n* Add CHANGELOG entry\r\n\r\n* lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5444ee515ce6a4e430",
    "number": 2698,
    "body": null,
    "head_branch": "release/1.12.0rc1-0.31b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release 1.12.0rc1-0.31b0 (#2698)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5544ee515ce6a4e431",
    "number": 2696,
    "body": "# Description\r\n\r\nCLI added the parameter '--insecure' to support whether or not to communicate securely. The opentElemetry auto instrument cannot use the 'insecure' parameter\r\n\r\nFixes # ([issue](https://github.com/open-telemetry/opentelemetry-python/issues/2694))",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "feat:: Added `--insecure` of CLI argument (#2696)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5644ee515ce6a4e432",
    "number": 2695,
    "body": null,
    "head_branch": "release/1.12.0rc-0.31b1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5644ee515ce6a4e433",
    "number": 2690,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #2689\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] opentelemetry-sdk/tests/logs/test_handler.py::test_log_exc_info_false\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/2689",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix #2689 LoggingHandler to handle exc_info=False (#2690)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5744ee515ce6a4e434",
    "number": 2684,
    "body": "Fixes #2682",
    "head_branch": "issue_2682",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make metrics public (#2684)\n\n* Make metrics public\n\nFixes #2682\n\n* Make environment variable public\n\n* Make environment variable public\n\n* Fix example\n\n* Make exporter public\n\n* Fix environment variable import path\n\n* Fix exporter\n\n* Fix lint\n\n* Fix import order\n\n* Add tag\n\n* Fix import path"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5844ee515ce6a4e435",
    "number": 2679,
    "body": "Fixes #2677",
    "head_branch": "issue_2677",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Align collection start times (#2679)\n\n* Align collection start times\r\n\r\nFixes #2677\r\n\r\n* Undo unnecessary change\r\n\r\n* Use fixed values for more deterministic tests\r\n\r\n* Align start times\r\n\r\n* Rename variable\r\n\r\n* Add time align test case\r\n\r\n* Remove unnecessary views\r\n\r\n* Add more test cases"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5944ee515ce6a4e436",
    "number": 2676,
    "body": "Fixes #2675",
    "head_branch": "issue_2675",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add attributes to aggregation constructor parameters (#2676)\n\nFixes #2675"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5a44ee515ce6a4e437",
    "number": 2674,
    "body": "Fixes #2673",
    "head_branch": "issue_2673",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove instrument_class_temporality from collect args (#2674)\n\nFixes #2673"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5a44ee515ce6a4e438",
    "number": 2671,
    "body": "Fixes #2665",
    "head_branch": "issue_2665",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Check exceptions in force_flush too (#2671)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5b44ee515ce6a4e439",
    "number": 2670,
    "body": "Fixes #2666",
    "head_branch": "issue_2666",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor metrics SDK paths (#2670)\n\n* Refactor metrics SDK paths\r\n\r\nFixes #2666\r\n\r\n* Add fix for 3.6\r\n\r\n* Fix OTLP metrics exporter\r\n\r\n* Address some feedback\r\n\r\n* Address more feedback\r\n\r\n* Add comments explaining imports\r\n\r\n* Add view module\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5c44ee515ce6a4e43a",
    "number": 2669,
    "body": "# Description\r\n\r\nGenerated semantic conventions based on latest release.\r\n",
    "head_branch": "semconv-1.11.0-spec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update to semantic conventions v1.11.0 (#2669)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5d44ee515ce6a4e43b",
    "number": 2668,
    "body": "# Description\r\n\r\nFollowing this release https://github.com/open-telemetry/opentelemetry-proto/releases/tag/v0.17.0. This will help closing adding min/max to exporter issue.",
    "head_branch": "proto-0.17.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update opentelemetry-proto to v0.17.0 (#2668)\n\n* Update opentelemetry-proto to v0.17.0\r\n\r\n* Add CHANGELOG entry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5e44ee515ce6a4e43c",
    "number": 2664,
    "body": "# Description\r\n\r\nAdd a `CallbackOptions` dataclass to be passed into observable callbacks. This is to pass along a `timeout_millis` param which the callbacks should respect. Any additional things we add in the future can be added to the dataclass in backward compatible way. The reason to use a dataclass over function arguments is:\r\n\r\n1. it is easier for users to get right, while python signatures can be tricky. this is the one of the main things users will provide that the SDK will invoke, so it's important to get right\r\n2. for the \"generator form\", where the callback is a generator that yields batches of Observations, we need a way to send the options in. Generators support a sending a _single value_ to become the result of the yield expression. See updated docs for examples.\r\n\r\nPart of https://github.com/open-telemetry/opentelemetry-python/issues/2663\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nNeed to update tests still\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. - Link to PR: \r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "timeout-callbacks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add callback options with timeout to observable callbacks (#2664)\n\n* Add callback options with timeout to observable callbacks\r\n\r\n* remove debugging code\r\n\r\n* changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5f44ee515ce6a4e43d",
    "number": 2660,
    "body": "# Description\r\n\r\nImplement support for the the `process.runtime.name`, `process.runtime.version` and `process.runtime.description` as specified in the [resource semantic conventions for processes](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/resource/semantic_conventions/process.md#python-runtimes) through a new `opentelemetry.sdk.resources.ProcessResourceDetector` detector.\r\n\r\nFixes #2659\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit tests\r\n- [x] Use a locally build version of the `opentelemetry-sdk` package using the code from https://opentelemetry.io/docs/instrumentation/python/getting-started/ and check the resource attributes written out.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "process_resource_attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement 'process.runtime.*' resource detector (#2660)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d5f44ee515ce6a4e43e",
    "number": 2658,
    "body": "Fixes #2646\r\n\r\nThis PR has been refactored completely to address [this](https://github.com/open-telemetry/opentelemetry-python/pull/2658#discussion_r866462665) comment.\r\n\r\nSince this is a big PR, here is some information to help review:\r\n\r\nThis PR basically unflattens this [`Metric`](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/src/opentelemetry/sdk/_metrics/_internal/_view_instrument_match.py#L153-L169) object to make it match the [OTLP `Metric`](https://github.com/open-telemetry/opentelemetry-proto/blob/main/opentelemetry/proto/metrics/v1/metrics.proto#L207) object, and it is implemented [here](https://github.com/open-telemetry/opentelemetry-python/pull/2658/files#diff-b4bee4f0abf754ee12c2b65ce965c7f28d40c46d7765eb513ee62913c42584d5R124).\r\n\r\nThis means, our `Metric` object now contains a `Sum`, `Histogram` or `Gauge` object and those objects now contain a series of `NumberDataPoint` or `HistogramDataPoint` objects as defined by the proto.\r\n\r\nThis changes many things but it is pretty much just a rearranging of data. The only \"significant\" change is that it was necessary to remove `_convert_aggregation_temporality`, this conversion has been split and moved into each aggregation `collect` method. I find it better since we now don't have all the `if`s that did something different depending on the point type but instead that specific code is moved into each aggregation that matches the corresponding point type.\r\n\r\n",
    "head_branch": "issue_2646",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor metric format (#2658)\n\n* Refactor metric format\r\n\r\nFixes #2646\r\n\r\n* Do not overwrite pb2_scope_metrics\r\n\r\n* Refactor for loops\r\n\r\n* Add multiple scope test case\r\n\r\n* Fix interfaces\r\n\r\n* Fix docs\r\n\r\n* Update exporter/opentelemetry-exporter-prometheus/src/opentelemetry/exporter/prometheus/__init__.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Fix lint\r\n\r\n* Remove resource check\r\n\r\n* Remove instrumentation_scope check\r\n\r\n* Group metrics by instrumentation scopes in the SDK\r\n\r\n* Remove label_keyss\r\n\r\n* Use strings instead of mocks\r\n\r\n* Return generator instead of a list\r\n\r\n* Fix lint\r\n\r\n* Rename variables\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6044ee515ce6a4e43f",
    "number": 2657,
    "body": "# Description\r\n\r\nAdd `Generic[CarrierT]` to `textmap.Getter` and `textmap.Setter` in order to allow inherited classes to be typed properly.\r\n\r\nUltimately, the default `getter` and `setter` work with more specific types than `CarrierT`.  That means we need to either work with a [complex system of overloads](https://github.com/open-telemetry/opentelemetry-python/pull/1690#discussion_r601630218) or alternatively lie to the type system at some point.\r\n\r\nThe original code did this through `# type: ignore` on the function signatures of inherited classes from `Getter` and `Setter`.  But that means any inherited classes in a type-checked context need to do the same.  This PR just lies to the type system in a different place: instead declaring `default_getter` and `default_setter` as typed generically but ignoring the fact that the classes `DefaultGetter` and `DefaultSetter` are not.  \r\n\r\nFixes #2656 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran through `tox -e mypy` to verify changes locally\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] No.  See https://github.com/open-telemetry/opentelemetry-python/pull/2657#issuecomment-1136219956\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added (typehints only, N/A)\r\n- [ ] Documentation has been updated (typehints only, N/A)\r\n",
    "head_branch": "issue_2656",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added generic to textmap getter and setter (#2657)\n\n* added generic to textmap getter and setter\r\n\r\n* added CHANGELOG entry\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6144ee515ce6a4e440",
    "number": 2654,
    "body": "Fixes #2650",
    "head_branch": "issue_2650",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add variadic arguments to metric exporter/reader interfaces (#2654)\n\n* Add variadic arguments to metric exporter/reader interfaces\r\n\r\nFixes #2650\r\n\r\n* Add changelog entry\r\n\r\n* Remove args\r\n\r\n* Add args again\r\n\r\nThis reverts commit 7eb61349ee0f45aaeb64888bc107027c3deaa2d1.\r\n\r\n* Add missing args"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6244ee515ce6a4e441",
    "number": 2653,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #2402\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTests pass\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add timeouts to metric SDK (#2653)\n\n* Add timeouts to metric SDK\r\n\r\n* comments\r\n\r\n* don't use TimeoutError as it is intended for OS related timeouts\r\n\r\n* changelog and typo\r\n\r\n* isort\r\n\r\n* fix _time_ns import\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* use self.fail in tests\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6344ee515ce6a4e442",
    "number": 2651,
    "body": "# Description\r\n\r\nMoves the Metrics API behind an internal package `opentelemetry._metrics._internal`. This will remain with the underscore once we make a stable release of metrics i.e. `opentelemetry.metrics._internal`. Finally, all of the public API is expose in `opentelemetry._metrics` package `__init__.py` file. This clearly shows what the public is.\r\n\r\nUpdated tests and documentation to build with these changes.\r\n\r\nFixes #2622\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTests passing, docs look good\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "aaron-api-private",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move Metrics API behind internal package (#2651)\n\n* Move __init__.py file\r\n\r\n* Move Metrics API behind internal package"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6444ee515ce6a4e443",
    "number": 2649,
    "body": "Hey all!\r\n\r\nWe've spent a lot of time lately improving our release workflow in the OTel Java repos, and I'd like to see if our toil and pain can be of any benefit to other repos (starting with python of course!).\r\n\r\nI also think there's some benefit of shared cross-SIG knowledge going forward if we follow somewhat similar workflow practices.\r\n\r\nI've tried to document things here: https://github.com/trask/repository-template/blob/main/template-docs/release-automation.md\r\n\r\nSome highlights in this PR:\r\n* Uses `-dev` version suffix on `main` (@lzchen mentioned you were thinking about doing this anyways)\r\n* The release workflow autogenerates the release notes from the change log and publishes the github release\r\n* Uses the bot workaround discussed in https://github.com/open-telemetry/community/issues/809#issuecomment-1015121722 (maybe we should consider creating a shared otel bot that all repos could use?)\r\n* The branch names are based on the minor release (e.g. `release/v1.12.x-0.31bx`), and patch releases are made out of those same branches. Tags are still applied to each individual release.\r\n\r\nNew complications in this repo that we hadn't faced in the Java repos:\r\n* Separate versions for stable/unstable components (this wasn't a big deal, just a bit more workflow code to handle/increment them both).\r\n* I tried adding the `Skip Changelog` label to the generated pull requests that target `main`, but that requires giving the bot triage rights to the repo, so instead suppressed the changelog workflow when `github.actor` is the bot.\r\n\r\nI'd love to stop by your SIG meeting, but it's always at the same time as the Java SIG 😢. Maybe next week I can sneak away and jump to your meeting for a bit.\r\n\r\nPlease throw your questions this way though, I'd love to better understand where we can align more, and where things will naturally diverge based on SIG needs/preferences.",
    "head_branch": "release-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Automated release workflow (#2649)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6444ee515ce6a4e444",
    "number": 2648,
    "body": "Fixes #2647\r\n\r\n@lzchen we are intentionally leaving out `description` from these checks, since regular Python strings naturally support what is reuqired.",
    "head_branch": "issue_2647",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Check instrument names and units (#2648)\n\n* Check instrument names and units\r\n\r\nFixes #2647\r\n\r\n* Update opentelemetry-api/src/opentelemetry/_metrics/instrument.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Add missing type\r\n\r\n* Add missing type\r\n\r\n* Fix error message\r\n\r\n* Update opentelemetry-api/src/opentelemetry/_metrics/_internal/instrument.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6544ee515ce6a4e445",
    "number": 2644,
    "body": "Fixes #2643\r\n\r\n@srikanthccv PTAL",
    "head_branch": "issue_2643",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use JSON formatting for all values except strings (#2644)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6644ee515ce6a4e446",
    "number": 2642,
    "body": "Fixes #2589",
    "head_branch": "issue_2589",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Convert label sequences to JSON in Prometheus exporter (#2642)\n\n* JSON Convert Values for prometheus collector\r\n\r\n* Add more fixes and a test case\r\n\r\n* Use Sequence instead\r\n\r\n* Add test case and separate function\r\n\r\nCo-authored-by: Arvind Mishra <mishraarvind2222@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6744ee515ce6a4e447",
    "number": 2641,
    "body": "Fixes #2129",
    "head_branch": "issue_2129",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add more documentation (#2641)\n\nFixes #2129"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6844ee515ce6a4e448",
    "number": 2639,
    "body": "Fixes #2628\r\n\r\nI have a few questions that I added in the code, PTAL @aabmass :v:\r\n\r\nRunning with the code in `main` produces this output:\r\n\r\n```\r\n# HELP foo_total \r\n# TYPE foo_total counter\r\nfoo_total{myattr=\"foo\"} 31.1400038580668\r\n# HELP foo_total \r\n# TYPE foo_total counter\r\nfoo_total{myattr=\"var\"} 36.23854433851441\r\n# HELP foo_total \r\n# TYPE foo_total counter\r\nfoo_total{myattr=\"baz\"} 85.16625110920084\r\n```\r\n\r\nRunning with the code in this PR produces this output:\r\n\r\n```\r\n# HELP foo_total \r\n# TYPE foo_total counter\r\nfoo_total{myattr=\"foo\"} 8.793889836022661\r\nfoo_total{myattr=\"var\"} 7.434922493674145\r\nfoo_total{myattr=\"baz\"} 86.80937661900853\r\n```",
    "head_branch": "issue_2628",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Reuse metric family (#2639)\n\n* Reuse metric family\r\n\r\nFixes #2628\r\n\r\n* Add typing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6944ee515ce6a4e449",
    "number": 2638,
    "body": "Fixes #2635",
    "head_branch": "issue_2635",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement MetricReader default aggregation controls (#2638)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6944ee515ce6a4e44a",
    "number": 2637,
    "body": "Fixes #2627\r\nFixes #2636",
    "head_branch": "issue_2627",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement MetricReader temporality controls (#2637)\n\n* Implement MetricReader temporality controls\r\n\r\nFixes #2627\r\nFixes #2636\r\n\r\n* Fix type\r\n\r\n* Add temporality check\r\n\r\n* Fix check\r\n\r\n* Fix check\r\n\r\n* Fix lint\r\n\r\n* Fix check\r\n\r\n* Fix docs\r\n\r\n* Add changelog\r\n\r\n* Update changelog message\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6a44ee515ce6a4e44b",
    "number": 2634,
    "body": null,
    "head_branch": "release/1.11.1-0.30b1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release/1.11.1 0.30b1 (#2634)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6b44ee515ce6a4e44c",
    "number": 2632,
    "body": "# Description\r\n\r\nfix opentelemetry-proto changing to resource span definition.\r\n\r\nRef: https://github.com/open-telemetry/opentelemetry-proto/pull/362\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix_scope_spans",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6c44ee515ce6a4e44d",
    "number": 2630,
    "body": null,
    "head_branch": "codeboten/more-docs-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] adding documentation for aggregation types (#2630)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6d44ee515ce6a4e44e",
    "number": 2626,
    "body": "Fixes #2622\r\n\r\n### Note for reviewers\r\n\r\nThis PR is big but it is mostly just renaming public modules to make them private. For example, if there is `a/b.py`, this PR adds `a/_b.py`, then it adds a blank `a/b.py` and imports in `a/b.py` all the public symbols that are in `a/_b.py`.\r\n\r\nThe idea behind this is to make public only the intended public symbols, here is an example:\r\n\r\n``` python\r\n# a/_b.py\r\n\r\nfrom re import match\r\n\r\n\r\ndef function(a, b):\r\n    return match(a, b)\r\n```\r\n``` python\r\n# a/b.py\r\nfrom a._b import function\r\n\r\n__all__ = [\"function\"]\r\n```\r\n\r\nIn this way we don't expose `re.match` as part of our public API, because to import that the user would have to do this: `from a._b import match`.",
    "head_branch": "issue_2622",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6d44ee515ce6a4e44f",
    "number": 2625,
    "body": "Fixes #2389\r\n\r\nRefactored to mach our API, PTAL @aabmass, @lzchen, @srikanthccv.",
    "head_branch": "issue_2389",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make necessary SDK metrics symbols private (#2625)\n\nFixes #2389"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6e44ee515ce6a4e450",
    "number": 2620,
    "body": "Adding point, export modules to SDK documentation. Fixing a couple of issues w/ the existing docs. This is all preparation for adding new documentation.\r\n",
    "head_branch": "codeboten/metrics-sdk-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] SDK documentation fixes (#2620)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d6f44ee515ce6a4e451",
    "number": 2619,
    "body": "Bumping OTLP to 0.16.0. This only removes the name field in the log data model.\r\n",
    "head_branch": "codeboten/update-otlp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update OTLP to v0.16.0 (#2619)\n\n* update OTLP to v0.16.0\r\n\r\nBumping OTLP to 0.16.0. This only removes the name field in the log data model.\r\n\r\n* update changelog\r\n\r\n* update readme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7044ee515ce6a4e452",
    "number": 2617,
    "body": "Fixes #2451",
    "head_branch": "issue_2451",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename Measurement to Observation (#2617)\n\n* Rename Measurement to Observation\r\n\r\nFixes #2451\r\n\r\n* Fix docs\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* Fix examples\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7144ee515ce6a4e453",
    "number": 2616,
    "body": "To remain consistent with NoOpMeterProvider and NoOpMeter, the instruments they produce have been renamed as well.\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/default-noop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[opentelemetry-api] rename Default instruments to NoOp (#2616)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7144ee515ce6a4e454",
    "number": 2615,
    "body": "While adding documentation i've also added some type annotations.\r\n\r\nRelated #2129",
    "head_branch": "codeboten/docs-metrics-init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] add more documentation to metrics API (#2615)\n\n* [docs] add more documentation to metrics API\r\n\r\n* Update opentelemetry-api/src/opentelemetry/_metrics/__init__.py\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\n* Update opentelemetry-api/src/opentelemetry/_metrics/__init__.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7244ee515ce6a4e455",
    "number": 2614,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/2545",
    "head_branch": "async",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Continue processing async instruments if callback fails (#2614)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7344ee515ce6a4e456",
    "number": 2612,
    "body": "Fixes #2582, review #2611 first.",
    "head_branch": "issue_2582",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7444ee515ce6a4e457",
    "number": 2611,
    "body": "Update proto, this adds min/max fields for Histogram. This is needed for #2612.",
    "head_branch": "issue_2610",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7544ee515ce6a4e458",
    "number": 2609,
    "body": "This is opened just to more easily explain the justification to close #2555.",
    "head_branch": "issue_2555",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7644ee515ce6a4e459",
    "number": 2608,
    "body": "Fixes #2556",
    "head_branch": "issue_2556",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Inform the user of conflicting view configuration (#2608)\n\n* Inform the user if there is a view configuration conflict\r\n\r\nFixes #2556\r\n\r\n* Add test case\r\n\r\n* Fix lint\r\n\r\n* Add test case for another kind of collision\r\n\r\n* Fix test cases\r\n\r\n* Fix lint\r\n\r\n* Fix tests\r\n\r\n* Add equal comparison between views\r\n\r\n* Rename __eq__ to conflicts\r\n\r\n* Refactor deep code into a function\r\n\r\n* Refactor conflict handling methods\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/_internal/_view_instrument_match.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/_internal/_view_instrument_match.py\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* Use continue\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7744ee515ce6a4e45a",
    "number": 2607,
    "body": "Installing ~1.3 dependency on testutil first causes tests for components to [fail](https://github.com/open-telemetry/opentelemetry-python-contrib/runs/6042307561?check_suite_focus=true) if installed first and the dependency for the component is not pinned. Pinning the version for `opentelemetry-api` and `opentelemetry-sdk` for testutils for now to avoid these complications. We should increase the versions  everytime we release now.",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update setup.cfg (#2607)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7744ee515ce6a4e45b",
    "number": 2605,
    "body": "`opentelemetry-sdk ~= 1.10.0` prevents from upgrading to 1.11.0. Changing to greater than.\r\n\r\n",
    "head_branch": "lzchen-patch-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix dependency for otlp exporter (#2605)\n\n`opentelemetry-sdk ~= 1.10.0` prevents from upgrading to 1.11.0. Changing to greater than."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7844ee515ce6a4e45c",
    "number": 2604,
    "body": null,
    "head_branch": "release/1.11.0-0.30b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release 1.11.0-0.30b0 (#2604)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7944ee515ce6a4e45d",
    "number": 2603,
    "body": "Fixes #2557",
    "head_branch": "issue_2557",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Aggregate together data from identical instruments (#2603)\n\n* Aggregate together data from identical instruments\r\n\r\nFixes #2557\r\n\r\n* Remove duplicate test\r\n\r\n* Update boolean value\r\n\r\n* Update opentelemetry-api/src/opentelemetry/_metrics/__init__.py\r\n\r\nCo-authored-by: Alex Boten <alex@boten.ca>\r\n\r\n* Add sleep\r\n\r\nCo-authored-by: Alex Boten <alex@boten.ca>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7a44ee515ce6a4e45e",
    "number": 2602,
    "body": "Fixes #2601",
    "head_branch": "issue_2601",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for zero or more callbacks (#2602)\n\n* Add support for zero or more callbacks\r\n\r\nFixes #2601\r\n\r\n* Add changelog entry\r\n\r\n* Update opentelemetry-api/src/opentelemetry/_metrics/__init__.py\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* Update opentelemetry-api/src/opentelemetry/_metrics/__init__.py\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7b44ee515ce6a4e45f",
    "number": 2599,
    "body": "Fixes #2406",
    "head_branch": "issue_2406",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use exceptions to report shutdown result (#2599)\n\n* Use exceptions to report shutdown result\r\n\r\nFixes #2406\r\n\r\n* Fix mypy\r\n\r\n* Make exceptions private\r\n\r\n* Fix exceptions module path\r\n\r\n* Remove exceptions and show failed metric readers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7c44ee515ce6a4e460",
    "number": 2597,
    "body": "Replacement PR for https://github.com/open-telemetry/opentelemetry-python/pull/2472",
    "head_branch": "codeboten/fixtypo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo in example (#2597)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7c44ee515ce6a4e461",
    "number": 2596,
    "body": "Fixes #2595",
    "head_branch": "issue_2595",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix bleach version (#2596)\n\nFixes #2595"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7d44ee515ce6a4e462",
    "number": 2593,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "pin-exact",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7e44ee515ce6a4e463",
    "number": 2592,
    "body": null,
    "head_branch": "codeboten/updatereadme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] update maintainers (#2592)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d7f44ee515ce6a4e464",
    "number": 2589,
    "body": "* Fixes #2502\r\n\r\n# Convert values to native JSON \r\n\r\nConvert values to native JSON instead of string in the Prometheus Collector\r\n* Changes in the list for `_translate_to_prometheus`\r\n\r\nFixes #2502\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-2502-json-prom-export",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8044ee515ce6a4e465",
    "number": 2587,
    "body": "Removing `flask` as a dependency for `test-utils`. This was left in from a previous [PR](https://github.com/open-telemetry/opentelemetry-python/pull/206) but is no longer needed since we define dependencies for the flask instrumentation [here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-flask/setup.py#L57) and `test-utils` itself does not use `flask`.\r\n\r\nAdding `asgiref` as a dependency for `test-utils` because it uses that library. Previous builds have passed because the tests that use `asgiref` are only in the asgi instrumentation and it has a dependency on [asgiref](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-asgi/setup.cfg#L47) already defined.\r\n\r\nAlso pinning `protobuf` version for now since upgrading to protobuf v3.20.0 causes lint to [fail](https://github.com/open-telemetry/opentelemetry-python/runs/5822427748?check_suite_focus=true).\r\n\r\nOpened an [issue](https://github.com/protocolbuffers/protobuf/issues/9730) on protobuf.",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix dependencies for test utils (#2587)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8144ee515ce6a4e466",
    "number": 2583,
    "body": "# Description\r\n\r\nThis spec PR https://github.com/open-telemetry/opentelemetry-specification/pull/2276 introduced the concept of `InstrumentationScope`. Naming in our components is varying. The deprecated `InstrumentationLibrary` from spec is [`InstrumentationInfo`](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/src/opentelemetry/sdk/util/instrumentation.py#L17). And the arguments naming have the mixed usage of \"module\" and \"library\" [`instrumenting_module_name`](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py#L1110) and [`instrumenting_library_version`](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py#L1111). I introduced another class and properties wherever necessary for backward compatibility and replaced in the experimental packages. I would like to test these changes manually but opening it for reviews.\r\n\r\nFixes #2516 \r\n\r\n",
    "head_branch": "issue-2516",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add InstrumentationScope and deprecate InstrumentationLibraryInfo (#2583)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8144ee515ce6a4e467",
    "number": 2581,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/2580\r\n\r\nTODO: Add min/max to otlp metrics exporter once proto is updated -> https://github.com/open-telemetry/opentelemetry-python/issues/2582\r\n",
    "head_branch": "hist",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Include min/max information in Histogram point (#2581)\n\n* hist\r\n\r\n* changelog\r\n\r\n* tests\r\n\r\n* agg\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8244ee515ce6a4e468",
    "number": 2578,
    "body": "# Description\r\n\r\nNot all span implementation have the parent attribute . For example, [NonRecordingSpan](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-api/src/opentelemetry/trace/span.py#L484-L534) don't have parent\r\n\r\nWhen using ShimTracer , we can have NonRecordingSpan that is retrieved at propagator level \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTest with ShimTracer + JaegerPropagator and then try to inject some\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n",
    "head_branch": "fix_propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8344ee515ce6a4e469",
    "number": 2577,
    "body": "# Description\r\n\r\nThis PR does two things:\r\n1.  Make sure trace flags are parsed properly when extracting traceparent\r\n2. Expands tests for traceparent parsing (including the above issue) and trace flags handling.\r\n\r\n~~Fixes # (issue)~~ (no current issue)\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] The test which exercises the traceparent trace flags parsing issue is `test_extract_non_decimal_trace_flags` in `opentelemetry-api/tests/propagators/test_propagators.py` and passes with the change to `opentelemetry-api/src/opentelemetry/trace/propagation/tracecontext.py`.\r\n- [x] Added a number of other unit tests to exercise related functionality.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- ~~[ ] Documentation has been updated~~\r\n",
    "head_branch": "tracecontext-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      " Make sure trace flags are parsed properly when extracting traceparent and expand tests (#2577)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8444ee515ce6a4e46a",
    "number": 2576,
    "body": "Fixes #2542",
    "head_branch": "issue_2542",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Check for current point type before warning (#2576)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8544ee515ce6a4e46b",
    "number": 2575,
    "body": "# Description\r\n\r\nUpdating backoff lib dependency for otpl-proto-grpc exporter to be more lax with version constraints. \r\n\r\nFixes #2384 \r\n\r\n\r\n",
    "head_branch": "lax-backoff-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Loosen up the dependency on backoff (#2575)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8544ee515ce6a4e46c",
    "number": 2574,
    "body": "Adding docs around instruments and the methods to create them. I've also added an exclusion list for things that aren't really useful for users.\r\n",
    "head_branch": "codeboten/add-more-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] adding more metrics documentation (#2574)\n\n* [docs] adding more metrics documentation\r\n\r\nAdding docs around instruments and the methods to create them. I've also added an exclusion list for things that aren't really useful for users.\r\n\r\n* fix lint\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8644ee515ce6a4e46d",
    "number": 2572,
    "body": "# Description\r\n\r\nFix the build failure. Relevant issue https://github.com/psf/black/issues/2964\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Misc\r\n\r\n # How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e lint`\r\n",
    "head_branch": "bump-black",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump black version (#2572)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8744ee515ce6a4e46e",
    "number": 2571,
    "body": "# Description\r\n\r\nFix typo of logs -> metrics\r\n\r\n## Type of change\r\n\r\nDocs fix\r\n\r\n# How Has This Been Tested?\r\n\r\nn/a\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "typo-in-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo in metrics sdk docs (#2571)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8844ee515ce6a4e46f",
    "number": 2570,
    "body": "# Description\r\n\r\nCurrently, Otel spans created from opentracing shim have kind = \"internal\" argument even if \"span.kind\" tag has been\r\nset in Opentracing span This PR proposes to (optionally) set the Otel king argument to the corresponding Opentracing tag (and remove \"span.kind\" entry from opentracing tag)\r\n\r\nFixes #2549\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n* Unit tests are present in the PR \r\n* Test has been done with Jaeger thrift exporter : \r\n  * Without the patch, when setting a span with tag span.kind = \"consumer, we see in Jaeger the span with 2 tags : \r\n    * 1 tag span.kind = consumer \r\n    * 1 tag span.kind = internal \r\n  * With the patch (and feature activated) , when setting a span with tag span.kind = \"consumer, we see in Jaeger the span with 2 tags : \r\n    * 1 tag span.kind = consumer \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "opentracing_shim_kind_tag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8944ee515ce6a4e470",
    "number": 2569,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "noop-provider-based",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8a44ee515ce6a4e471",
    "number": 2568,
    "body": "Fixes #2471",
    "head_branch": "issue_2471",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add type annotations (#2568)\n\nFixes #2471\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8a44ee515ce6a4e472",
    "number": 2566,
    "body": "# Description\r\n\r\nUpdate the OTLP proto version to 0.15.0. One notable change is the addition of Scope and deprecation InstrumentationInfo.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n",
    "head_branch": "bump-proto-15",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update opentelemetry-proto to v0.15.0 (#2566)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8b44ee515ce6a4e473",
    "number": 2565,
    "body": "# Description\r\n\r\nName field is dropped from the data model. we should no longer use that.\r\nFixes #2439 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e opentelemetry-sdk`\r\n\r\n- [x] `tox -e opentelemetry-exporter-otlp-proto-grpc` \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n",
    "head_branch": "issue-2439",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Drop the usage of name field (#2565)\n\n* Drop the usage of name field\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8c44ee515ce6a4e474",
    "number": 2564,
    "body": "Fixes #2561",
    "head_branch": "issue_2561",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Avoid multiple registration of MetricReaders (#2564)\n\n* Avoid multiple registration of MetricReaders\n\nFixes #2561\n\n* Remove unused attribute\n\n* Add lock\n\n* Fix typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8d44ee515ce6a4e475",
    "number": 2563,
    "body": "This change covers NoOpMeterProvider, NoOpMeter.\r\n\r\nPart of #2129\r\n",
    "head_branch": "codeboten/document-noop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] add documentation for no-op components (#2563)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8e44ee515ce6a4e476",
    "number": 2551,
    "body": "# Description\r\n\r\nSphinx expects constructors to be documented in the class's docstring, not the `__init__` method's. Move the `View.__init__` docstring to the class as Sphinx is expecting. Otherwise, the documentation doesn't get generated.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\nn/a\r\n\r\n# How Has This Been Tested?\r\n\r\nn/a\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-view-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix View doc string (#2551)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8e44ee515ce6a4e477",
    "number": 2547,
    "body": "# Description\r\n\r\nFixes #2546. Also updated the docs and explained what the spec suggests.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded integration test\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "2546-remove-default-view",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove `enable_default_view` option from sdk MeterProvider (#2547)\n\n* Remove enable_default_view option from sdk MeterProvider\r\n\r\n* document rest of MeterProvider constructor params\r\n\r\n* fix docs build\r\n\r\n* remove unused function\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d8f44ee515ce6a4e478",
    "number": 2544,
    "body": "Fixes #2536",
    "head_branch": "issue_2536",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add drop aggregation (#2544)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9044ee515ce6a4e479",
    "number": 2543,
    "body": "Fixes #2537",
    "head_branch": "issue_2537",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add default aggregation (#2543)\n\n* Add default aggregation\r\n\r\nFixes #2537\r\n\r\n* Add changelog\r\n\r\n* Raise exception\r\n\r\n* Fix lint\r\n\r\n* Small fixes\r\n\r\n* Add more fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9144ee515ce6a4e47a",
    "number": 2540,
    "body": "# Description\r\n\r\nFixes #2539\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit test\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "2539-in-mem-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add InMemoryMetricReader to metrics SDK (#2540)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9244ee515ce6a4e47b",
    "number": 2538,
    "body": "Fixes #2532",
    "head_branch": "issue_2532",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9244ee515ce6a4e47c",
    "number": 2535,
    "body": "# Description\r\n\r\n`shutdown()` is only relevant to TracerProvider. Individual tracers can't be shutdown, so the docs are misleading.\r\n\r\n## Type of change\r\n\r\n- [x] Doc update\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "tracedocs-small-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Small fixes to SpanProcessor docs around shutdown() (#2535)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9344ee515ce6a4e47d",
    "number": 2533,
    "body": "# Description\r\n\r\nThis PR fixes an issue where `_ExplicitBucketHistogramAggregation` does not reset the `_sum` field on collection, even though it always creates an `AggregationTemporality.DELTA` histogram and resets `_bucket_counts` to an all-zero array. This caused `sum` values to be wrong on export for both `AggregationTemporality.DELTA` and `AggregationTemporality.CUMULATIVE`\r\n\r\nFixes #2532\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added missing assertions to unit test.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-delta-histograms",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix delta histogram sum not being reset on collection (#2533)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9444ee515ce6a4e47e",
    "number": 2531,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/2529\r\n\r\nFrom specs:\r\nCapture as attributes - https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/logs/data-model.md#errors-and-exceptions\r\nSemantic conventions - https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/exceptions.md#attributes",
    "head_branch": "exc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Capture exception information in log attributes (#2531)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9544ee515ce6a4e47f",
    "number": 2528,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/2506",
    "head_branch": "logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename OTLPHandler -> LoggingHandler (#2528)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9644ee515ce6a4e480",
    "number": 2526,
    "body": "`1.6.1-0.25b1` had the changelog entry that was supposed to be for `1.6.2-0.25b2`. Compare with release notes at:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/releases/tag/v1.6.1\r\nhttps://github.com/open-telemetry/opentelemetry-python/releases/tag/v1.6.2\r\n\r\n# Description\r\n\r\nOne changelog entry is moved to the correct release. Before this PR, `1.6.2-0.25b2` had no changes listed. I did not file an issue for this trivial fix.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n(none)\r\n\r\n# How Has This Been Tested?\r\n\r\nInspect the changelog.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated **I don’t think a changelog correction needs a changelog entry, but I could be wrong.**\r\n- [ ] Unit tests have been added **not applicable**\r\n- [ ] Documentation has been updated **not applicable**\r\n",
    "head_branch": "changelog-mixup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix a mixed-up changelog entry (#2526)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9644ee515ce6a4e481",
    "number": 2525,
    "body": "These “convenience” packages were incorrectly installed in `site-packages/src`, although the actual implementation packages they depended on were installed in the correct paths (which is probably why this was not noticed sooner).\r\n\r\nPlease see #2020 for full details.\r\n\r\n# Description\r\n\r\nAdds the following to the `setup.cfg` file for each of these packages—previously missing as compared to other `opentelmetry` packages:\r\n\r\n```ini\r\n[options]\r\npackage_dir=\r\n    =src\r\n \r\n[options.packages.find]\r\nwhere = src\r\n```\r\n\r\nFixes #2020\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI’ve been carrying this patch downstream in Fedora Linux, where I find it fixes the install path as expected.\r\n\r\nYou can probably best verify this by using your usual workflow to install the patched `opentelemetry-exporter-jaeger`, `opentelemetry-exporter-otlp`, and `opentelemetry-exporter-zipkin` (separately or all at once) into a virtualenv, then looking inside the virtualenv directory to verify that no `lib/python*/site-packages/src` directory exists. See #2020 for details.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added **not applicable**\r\n- [ ] Documentation has been updated **not applicable**\r\n",
    "head_branch": "issue-2020",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix exporter-{jaeger,otlp,zipkin} install paths (#2525)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9744ee515ce6a4e482",
    "number": 2523,
    "body": null,
    "head_branch": "release/1.10.0-0.29b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.10.0-0.29b0 (#2522) (#2523)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9844ee515ce6a4e483",
    "number": 2522,
    "body": null,
    "head_branch": "release/1.10.0-0.29b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.10.0-0.29b0 (#2522)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9944ee515ce6a4e484",
    "number": 2521,
    "body": null,
    "head_branch": "release/1.10.0-0.29b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9a44ee515ce6a4e485",
    "number": 2520,
    "body": null,
    "head_branch": "release/1.10.0-0.29b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9a44ee515ce6a4e486",
    "number": 2519,
    "body": null,
    "head_branch": "release/1.10.1-0.29b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9b44ee515ce6a4e487",
    "number": 2518,
    "body": null,
    "head_branch": "release/1.10.0-0.28b1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9c44ee515ce6a4e488",
    "number": 2517,
    "body": "# Description\r\n\r\nAdds deprecation note to the Datadog Span Exporter example.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Documentation change\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/900\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "munir/ddtrace/deprecate-ddog-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "datadog-apm: deprecate opentelemetry datadog exporter (#2517)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9d44ee515ce6a4e489",
    "number": 2515,
    "body": "# Description\r\n\r\nI don't think I'll be able to contribute a lot of the project over the next few weeks/months so I'm giving up maintainer-ship until I can allocate considerable time to the project again.\r\n",
    "head_branch": "owais-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Moving owais to approvers (#2515)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9e44ee515ce6a4e48a",
    "number": 2513,
    "body": "Fixes #2512",
    "head_branch": "issue_2512",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add instructions to fix black and isort errors (#2513)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9f44ee515ce6a4e48b",
    "number": 2510,
    "body": "# Description\r\n\r\nFixes the bug where async instruments' aggregations were not being reset after each collection interval. Since they observe a total value, they should be reset each collection. For example\r\n\r\n```py\r\ndef total_number_of_processes_callback() -> Iterable[Measurement]:\r\n    yield Measurement(get_current_cpu_time())\r\n\r\nmeter.create_observable_counter(\r\n  \"system_processes_count\",\r\n  cpu_time_callback,\r\n  description=\"The total number of processes that have run on this machine\",\r\n)\r\n```\r\nThe SDK would report the wrong values like so:\r\n\r\n| expected total num proceses  | actual reported by SDK |\r\n| ----------- | ----------- |\r\n| 20      | 20       |\r\n| 24   | 44        |\r\n| 30   | 74        |\r\n\r\nThis PR fixes it so we correctly report the total num processes.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated tests to capture behavior. Also manually tested with prometheus and scraping `/proc/stat`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "async-agg-resets",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Reset async instrumentation aggregations each collection interval (#2510)\n\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200d9f44ee515ce6a4e48c",
    "number": 2508,
    "body": "# Description\r\n\r\nFixes the prometheus exporter to report the `+Inf` overflow bucket which should be equivalent to the count. The previous code assumed there was no overflow bucket, but there will always be an overflow bucket generated by the SDK. The test was using a faulty `Histogram` without one.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated unit tests, tested exporter with the real SDK.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "prom-hist",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix prometheus histogram \"+Inf\" bucket (#2508)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da044ee515ce6a4e48d",
    "number": 2507,
    "body": "Adding different instruments to the example code.\r\n",
    "head_branch": "codeboten/test-async",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] updating metrics examples (#2507)\n\n* [docs] updating metrics examples\r\n\r\nAdding different instruments to the example code.\r\n\r\n* use correct Measurement\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da144ee515ce6a4e48e",
    "number": 2505,
    "body": "Keeping this in draft until https://github.com/open-telemetry/opentelemetry-python/pull/2503 is merged.",
    "head_branch": "release/1.10.0-0.29b1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da244ee515ce6a4e48f",
    "number": 2503,
    "body": "# Description\r\n\r\nPreviously, ViewInstrumentMatch was using a single aggregation for ALL attribute sets. It should be one unique aggregation per attribute set. I also refactored view/instrument specific code into ViewInstrumentMatch class.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated tests. Also manually tested, with the script mentioned in https://github.com/open-telemetry/opentelemetry-python/pull/2501#issue-1159889008\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "fix-sdk-attribute-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix ViewInstrumentMatch to create new aggregation for each attribute set (#2503)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da344ee515ce6a4e490",
    "number": 2501,
    "body": "# Description\r\n\r\nThe metrics SDK was not previously working for async instruments. The callbacks need to emit Measurements which can be consumed by MeasurementConsumer. This fixes it.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated tests and manually tested with this script\r\n\r\n```py\r\nimport time\r\nfrom rich.pretty import pprint\r\nfrom typing import Iterable\r\nfrom opentelemetry._metrics.measurement import Measurement\r\nfrom opentelemetry.sdk._metrics import MeterProvider\r\nfrom opentelemetry.sdk._metrics.metric_reader import MetricReader\r\nfrom opentelemetry.sdk._metrics.point import AggregationTemporality, Metric\r\n\r\n\r\nclass MyReader(MetricReader):\r\n    def _receive_metrics(self, metrics: Iterable[Metric]) -> None:\r\n        \"\"\"Called by `MetricReader.collect` when it receives a batch of metrics\"\"\"\r\n        pprint(metrics)\r\n\r\n    def shutdown(self) -> bool:\r\n        print(\"shutdown called\")\r\n        return True\r\n\r\n\r\ndef cpu_time_callback() -> Iterable[Measurement]:\r\n    with open(\"/proc/stat\") as procstat:\r\n        procstat.readline()  # skip the first line\r\n        for line in procstat:\r\n            if not line.startswith(\"cpu\"):\r\n                break\r\n            cpu, *states = line.split()\r\n            yield Measurement(\r\n                int(states[0]) // 100, {\"cpu\": cpu, \"state\": \"user\"}\r\n            )\r\n            yield Measurement(\r\n                int(states[1]) // 100, {\"cpu\": cpu, \"state\": \"nice\"}\r\n            )\r\n            # ... other states\r\n\r\n\r\ndef main() -> None:\r\n    reader = MyReader(preferred_temporality=AggregationTemporality.CUMULATIVE)\r\n    mp = MeterProvider(metric_readers=[reader])\r\n    meter = mp.get_meter(\"hellometer\")\r\n    mycounter = meter.create_counter(\"mycounter\")\r\n    meter.create_observable_counter(\r\n        \"system.cpu.time\",\r\n        callback=cpu_time_callback,\r\n        unit=\"ms\",\r\n        description=\"System's CPU time\",\r\n    )\r\n    for _ in range(20):\r\n        mycounter.add(12, {\"path\": \"/hello\"})\r\n        mycounter.add(10, {\"path\": \"/world\"})\r\n\r\n    reader.collect()\r\n\r\n    time.sleep(2)\r\n    mp.shutdown()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nThe output is: https://gist.github.com/aabmass/d61350cdffe6f112401d2616eb41f866\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "fix-sdk-async-instruments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix SDK observable instruments to emit SDK Measurement (#2501)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da444ee515ce6a4e491",
    "number": 2499,
    "body": "Minor update to examples to pass a version to get_meter.\r\n",
    "head_branch": "codeboten/minor-fixes2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] add version to get_meter (#2499)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da444ee515ce6a4e492",
    "number": 2498,
    "body": "- Contributes to\r\n  - #2172\r\n  - https://github.com/open-telemetry/opentelemetry.io/issues/1109\r\n- This PR is the Python-docs counterpart to [opentelemetry.io PR#1118](https://github.com/open-telemetry/opentelemetry.io/pull/1118.\r\n  - For the auto-instrumentation page, guide readers to the new page on the OTel website.\r\n  - For the distro page, this is where it was moved to: \r\n  https://opentelemetry-python.readthedocs.io/en/latest/examples/distro/README.html → https://opentelemetry.io/docs/instrumentation/python/distro/\r\n\r\n/cc @cartermp @austinlparker ",
    "head_branch": "chalin-inform-about-moved-pages-2022-03-03",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] Remove / adjusted auto-instr and distro pages since they've moved (#2498)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da544ee515ce6a4e493",
    "number": 2497,
    "body": null,
    "head_branch": "chalin-contrib-2022-03-03",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CONTRIBUTING: add cmd to install tox on first mention of tox (#2497)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da644ee515ce6a4e494",
    "number": 2494,
    "body": "# Description\r\n\r\nFixes #2465 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Misc update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e mypy`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n",
    "head_branch": "issue-2465",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump mypy to 0.931 (#2494)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da744ee515ce6a4e495",
    "number": 2493,
    "body": "# Description\r\n\r\nThis change updates the OTLP HTTP trace exporter to append `v1/traces` to the `OTEL_EXPORTER_OTLP_ENDPOINT` env var value if it is used.\r\n\r\nFixes #2443 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI tested this change by writing 2 new unit tests, and updating others.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "issue-2443",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix OTLP HTTP Endpoint Usage (#2493)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da844ee515ce6a4e496",
    "number": 2492,
    "body": "Fixes #2491",
    "head_branch": "issue_2491",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update protobuf (#2492)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200da944ee515ce6a4e497",
    "number": 2490,
    "body": "Fixes #2457",
    "head_branch": "issue_2457",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix documentation (#2490)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200daa44ee515ce6a4e498",
    "number": 2488,
    "body": "# Description\r\nWhen metric reader storage is storing 'Counter' type, it should also process 'UpDownCounter' as well. Failing to check the instance of UpDownCounter would result of the counter value not getting Sum aggregated, but ended up to store only the last value given.\r\n\r\nFixes # (issue)\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/2487\r\n\r\n## Type of change\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\ntests were performed using the script given in https://github.com/open-telemetry/opentelemetry-python/issues/2487\r\n\r\n- [x] increment and decrement values using UpDownCounter\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200daa44ee515ce6a4e499",
    "number": 2484,
    "body": "This will make the code available for other exporters that will need to test different metric types.\r\n",
    "head_branch": "codeboten/refactor-metric-test-util",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "move metrics util function to test package (#2484)\n\n* move metrics util function to test package\r\n\r\nThis will make the code available for other exporters that will need to test different metric types.\r\n\r\n* fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dab44ee515ce6a4e49a",
    "number": 2482,
    "body": "Fixes #2481\r\n",
    "head_branch": "codeboten/aggregation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add factories for aggregations (#2482)\n\n* add factories for aggregations\r\n\r\nFixes #2481\r\n\r\n* fix lint\r\n\r\n* make classes/methods private\r\n\r\n* updates from feedback\r\n\r\n* remove Factory suffix\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dac44ee515ce6a4e49b",
    "number": 2480,
    "body": "# Description\r\n\r\nFixes #2346 \r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tax -e opentelemetry-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n",
    "head_branch": "issue-2346",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Re-enable pypy test (#2480)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dad44ee515ce6a4e49c",
    "number": 2479,
    "body": "The type _aggregation is a function and therefore, should not contain '( )' when being assigned.\r\n\r\n# Description\r\n\r\nI was running a test on opentelemetry metrics, and found a bug which was trying to call a function '()' to an object (e.g. SumAggregator). By removing the (), the code runs properly.\r\n\r\nFixes # 2478\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n- Tested on my local environment (MacOS 12.2.1) using python 3.9.9.\r\n- cloned the repo and installed the opentelemetry-sdk and opentelemetry-api\r\n- used sample script that emits metrics.\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration : As for the reproduction, please see https://github.com/open-telemetry/opentelemetry-python/issues/2478\r\n\r\n- [x] removed '()' at line 71 of opentelemetry-sdk/src/opentelemetry/sdk/_metrics/_view_instrument_match.py\r\n\r\n# Does This PR Require a Contrib Repo Change? - No\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated - Not necessary - this is a simple typo correction\r\n- [ ] Unit tests have been added - Not necessary - this is a simple typo correction\r\n- [ ] Documentation has been updated - Not necessary - this is a simple typo correction\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dae44ee515ce6a4e49d",
    "number": 2475,
    "body": "Implementing the to_json method for Metric to be used with the ConsoleMetricExporter.\r\n",
    "head_branch": "codeboten/to-json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "implement to_json for Metric (#2475)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dae44ee515ce6a4e49e",
    "number": 2474,
    "body": "# Description\r\n\r\nFixes #2473 \r\n\r\nAdditional context https://github.com/pallets/markupsafe/issues/282#issuecomment-1043899655",
    "head_branch": "issue-2473",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pin markupsafe version to 2.0.1 (#2474)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200daf44ee515ce6a4e49f",
    "number": 2472,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db044ee515ce6a4e4a0",
    "number": 2469,
    "body": "The previous code was passing in a value. This will need an end-to-end test, but the functionality can only get tested once #2456 is merged.",
    "head_branch": "codeboten/fix-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] aggregate expects a measurement (#2469)\n\nThe previous code was passing in a value."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db144ee515ce6a4e4a1",
    "number": 2468,
    "body": "If those are None, frozenset will raise an exception.\r\n",
    "head_branch": "codeboten/add-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add check for measurement attributes (#2468)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db244ee515ce6a4e4a2",
    "number": 2467,
    "body": "Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.14.0 to 3.15.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/protocolbuffers/protobuf/releases\">protobuf's releases</a>.</em></p>\n<blockquote>\n<h2>Protocol Buffers v3.15.0</h2>\n<h1>Protocol Compiler</h1>\n<ul>\n<li>Optional fields for proto3 are enabled by default, and no longer require\nthe --experimental_allow_proto3_optional flag.</li>\n</ul>\n<h1>C++</h1>\n<ul>\n<li>MessageDifferencer: fixed bug when using custom ignore with multiple\nunknown fields</li>\n<li>Use init_seg in MSVC to push initialization to an earlier phase.</li>\n<li>Runtime no longer triggers -Wsign-compare warnings.</li>\n<li>Fixed -Wtautological-constant-out-of-range-compare warning.</li>\n<li>DynamicCastToGenerated works for nullptr input for even if RTTI is disabled</li>\n<li>Arena is refactored and optimized.</li>\n<li>Clarified/specified that the exact value of Arena::SpaceAllocated() is an\nimplementation detail users must not rely on. It should not be used in\nunit tests.</li>\n<li>Change the signature of Any::PackFrom() to return false on error.</li>\n<li>Add fast reflection getter API for strings.</li>\n<li>Constant initialize the global message instances</li>\n<li>Avoid potential for missed wakeup in UnknownFieldSet</li>\n<li>Now Proto3 Oneof fields have &quot;has&quot; methods for checking their presence in\nC++.</li>\n<li>Bugfix for NVCC</li>\n<li>Return early in _InternalSerialize for empty maps.</li>\n<li>Adding functionality for outputting map key values in proto path logging\noutput (does not affect comparison logic) and stop printing 'value' in the\npath. The modified print functionality is in the\nMessageDifferencer::StreamReporter.</li>\n<li>Fixed <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8129\">protocolbuffers/protobuf#8129</a></li>\n<li>Ensure that null char symbol, package and file names do not result in a\ncrash.</li>\n<li>Constant initialize the global message instances</li>\n<li>Pretty print 'max' instead of numeric values in reserved ranges.</li>\n<li>Removed remaining instances of std::is_pod, which is deprecated in C++20.</li>\n<li>Changes to reduce code size for unknown field handling by making uncommon\ncases out of line.</li>\n<li>Fix std::is_pod deprecated in C++20 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/7180\">#7180</a>)</li>\n<li>Fix some -Wunused-parameter warnings (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8053\">#8053</a>)</li>\n<li>Fix detecting file as directory on zOS issue <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8051\">#8051</a> (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8052\">#8052</a>)</li>\n<li>Don't include sys/param.h for _BYTE_ORDER (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8106\">#8106</a>)</li>\n<li>remove CMAKE_THREAD_LIBS_INIT from pkgconfig CFLAGS (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8154\">#8154</a>)</li>\n<li>Fix TextFormatMapTest.DynamicMessage issue#5136 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8159\">#8159</a>)</li>\n<li>Fix for compiler warning issue#8145 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8160\">#8160</a>)</li>\n<li>fix: support deprecated enums for GCC &lt; 6 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8164\">#8164</a>)</li>\n<li>Fix some warning when compiling with Visual Studio 2019 on x64 target (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8125\">#8125</a>)</li>\n</ul>\n<h1>Python</h1>\n<ul>\n<li>Provided an override for the reverse() method that will reverse the internal\ncollection directly instead of using the other methods of the BaseContainer.</li>\n<li>MessageFactory.CreateProtoype can be overridden to customize class creation.</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/ae50d9b9902526efd6c7a1907d09739f959c6297\"><code>ae50d9b</code></a> Update protobuf version</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/8260126500f073894c38b2211d383442eb7e58d5\"><code>8260126</code></a> Update protobuf version</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/c741c4660443da46bfaf6c96fd1f01e743f97b56\"><code>c741c46</code></a> Resovled issue in the .pb.cc files</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/eef276412ec417e2f0563c1c51d59a968cb2a6db\"><code>eef2764</code></a> Resolved an issue where NO_DESTROY and CONSTINIT were in incorrect order</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/0040102e6f001724194d9c4c6bcd5effcec52bf1\"><code>0040102</code></a> Updated collect_all_artifacts.sh for Ubuntu Xenial</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/26cb6a7a6d7973657f09fc44b201287c046da62e\"><code>26cb6a7</code></a> Delete root-owned files in Kokoro builds</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/1e924efa90b476d23157426ad1eb17301bc4df41\"><code>1e924ef</code></a> Update port_def.inc</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/9a80cf12254dec1af833d9fb78a80673dce45dc4\"><code>9a80cf1</code></a> Update coded_stream.h</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/a97c4f4f2c9e5ffce0db787268414eb141194c62\"><code>a97c4f4</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8276\">#8276</a> from haberman/php-warning</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/44cd75d2153fab614480517e40ee4c10cb153716\"><code>44cd75d</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8282\">#8282</a> from haberman/changelog</li>\n<li>Additional commits viewable in <a href=\"https://github.com/protocolbuffers/protobuf/compare/v3.14.0...v3.15.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=protobuf&package-manager=pip&previous-version=3.14.0&new-version=3.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-uwsgi/protobuf-3.15.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db344ee515ce6a4e4a3",
    "number": 2466,
    "body": "From this https://github.com/open-telemetry/opentelemetry-python/pull/2460",
    "head_branch": "bump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump protobuf from 3.14.0 to 3.15.0 in /docs/examples/fork-process-model/flask-gunicorn  (#2466)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db344ee515ce6a4e4a4",
    "number": 2464,
    "body": "Minor Fix with exception handling in get_aggregated_resources\r\n\r\n# Description\r\n\r\nFixes \r\n```\r\nUnboundLocalError: local variable 'detected_resource' referenced before assignment \r\n```\r\nThis happen only if raise_on_error is True with a resource detector.\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nRun with and without patch.\r\n```python\r\nfrom opentelemetry.sdk.resources import ResourceDetector\r\nfrom opentelemetry.sdk.resources import get_aggregated_resources\r\n\r\n\r\nclass ErrorDetector(ResourceDetector):\r\n    def __init__(self, raise_on_error=False):\r\n        super().__init__(raise_on_error)\r\n\r\n    def detect(self):\r\n        raise Exception\r\n\r\n\r\nget_aggregated_resources([ErrorDetector(raise_on_error=True)])\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix except handling in get_aggregated_resources (#2464)\n\n* fix except handling in get_aggregated_resources\r\n\r\nAvoids UnboundLocalError: local variable 'detected_resource' referenced before assignment if raise_on_error is True\r\n\r\n* add changelog\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db444ee515ce6a4e4a5",
    "number": 2462,
    "body": "# Description\r\n\r\nFixes #2446 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e opentelemetry-exporter-otlp-proto-http`\r\n- [x] Manually tested\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "issue-2446",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTLP/HTTP log exporter (#2462)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db544ee515ce6a4e4a6",
    "number": 2461,
    "body": "# Description\r\n\r\nSome hbase/cassandra semantic conventions were removed but I don't think we are using them in out instrumentations. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e opentelemetry-semantic-conventions`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n",
    "head_branch": "bump-semconv-1.8.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump semantic conventions from 1.6.1 to 1.8.0 (#2461)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db644ee515ce6a4e4a7",
    "number": 2460,
    "body": "Bumps [protobuf](https://github.com/protocolbuffers/protobuf) from 3.14.0 to 3.15.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/protocolbuffers/protobuf/releases\">protobuf's releases</a>.</em></p>\n<blockquote>\n<h2>Protocol Buffers v3.15.0</h2>\n<h1>Protocol Compiler</h1>\n<ul>\n<li>Optional fields for proto3 are enabled by default, and no longer require\nthe --experimental_allow_proto3_optional flag.</li>\n</ul>\n<h1>C++</h1>\n<ul>\n<li>MessageDifferencer: fixed bug when using custom ignore with multiple\nunknown fields</li>\n<li>Use init_seg in MSVC to push initialization to an earlier phase.</li>\n<li>Runtime no longer triggers -Wsign-compare warnings.</li>\n<li>Fixed -Wtautological-constant-out-of-range-compare warning.</li>\n<li>DynamicCastToGenerated works for nullptr input for even if RTTI is disabled</li>\n<li>Arena is refactored and optimized.</li>\n<li>Clarified/specified that the exact value of Arena::SpaceAllocated() is an\nimplementation detail users must not rely on. It should not be used in\nunit tests.</li>\n<li>Change the signature of Any::PackFrom() to return false on error.</li>\n<li>Add fast reflection getter API for strings.</li>\n<li>Constant initialize the global message instances</li>\n<li>Avoid potential for missed wakeup in UnknownFieldSet</li>\n<li>Now Proto3 Oneof fields have &quot;has&quot; methods for checking their presence in\nC++.</li>\n<li>Bugfix for NVCC</li>\n<li>Return early in _InternalSerialize for empty maps.</li>\n<li>Adding functionality for outputting map key values in proto path logging\noutput (does not affect comparison logic) and stop printing 'value' in the\npath. The modified print functionality is in the\nMessageDifferencer::StreamReporter.</li>\n<li>Fixed <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8129\">protocolbuffers/protobuf#8129</a></li>\n<li>Ensure that null char symbol, package and file names do not result in a\ncrash.</li>\n<li>Constant initialize the global message instances</li>\n<li>Pretty print 'max' instead of numeric values in reserved ranges.</li>\n<li>Removed remaining instances of std::is_pod, which is deprecated in C++20.</li>\n<li>Changes to reduce code size for unknown field handling by making uncommon\ncases out of line.</li>\n<li>Fix std::is_pod deprecated in C++20 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/7180\">#7180</a>)</li>\n<li>Fix some -Wunused-parameter warnings (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8053\">#8053</a>)</li>\n<li>Fix detecting file as directory on zOS issue <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8051\">#8051</a> (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8052\">#8052</a>)</li>\n<li>Don't include sys/param.h for _BYTE_ORDER (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8106\">#8106</a>)</li>\n<li>remove CMAKE_THREAD_LIBS_INIT from pkgconfig CFLAGS (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8154\">#8154</a>)</li>\n<li>Fix TextFormatMapTest.DynamicMessage issue#5136 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8159\">#8159</a>)</li>\n<li>Fix for compiler warning issue#8145 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8160\">#8160</a>)</li>\n<li>fix: support deprecated enums for GCC &lt; 6 (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8164\">#8164</a>)</li>\n<li>Fix some warning when compiling with Visual Studio 2019 on x64 target (<a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8125\">#8125</a>)</li>\n</ul>\n<h1>Python</h1>\n<ul>\n<li>Provided an override for the reverse() method that will reverse the internal\ncollection directly instead of using the other methods of the BaseContainer.</li>\n<li>MessageFactory.CreateProtoype can be overridden to customize class creation.</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/ae50d9b9902526efd6c7a1907d09739f959c6297\"><code>ae50d9b</code></a> Update protobuf version</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/8260126500f073894c38b2211d383442eb7e58d5\"><code>8260126</code></a> Update protobuf version</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/c741c4660443da46bfaf6c96fd1f01e743f97b56\"><code>c741c46</code></a> Resovled issue in the .pb.cc files</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/eef276412ec417e2f0563c1c51d59a968cb2a6db\"><code>eef2764</code></a> Resolved an issue where NO_DESTROY and CONSTINIT were in incorrect order</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/0040102e6f001724194d9c4c6bcd5effcec52bf1\"><code>0040102</code></a> Updated collect_all_artifacts.sh for Ubuntu Xenial</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/26cb6a7a6d7973657f09fc44b201287c046da62e\"><code>26cb6a7</code></a> Delete root-owned files in Kokoro builds</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/1e924efa90b476d23157426ad1eb17301bc4df41\"><code>1e924ef</code></a> Update port_def.inc</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/9a80cf12254dec1af833d9fb78a80673dce45dc4\"><code>9a80cf1</code></a> Update coded_stream.h</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/a97c4f4f2c9e5ffce0db787268414eb141194c62\"><code>a97c4f4</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8276\">#8276</a> from haberman/php-warning</li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/commit/44cd75d2153fab614480517e40ee4c10cb153716\"><code>44cd75d</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/8282\">#8282</a> from haberman/changelog</li>\n<li>Additional commits viewable in <a href=\"https://github.com/protocolbuffers/protobuf/compare/v3.14.0...v3.15.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=protobuf&package-manager=pip&previous-version=3.14.0&new-version=3.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/examples/fork-process-model/flask-gunicorn/protobuf-3.15.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db744ee515ce6a4e4a8",
    "number": 2459,
    "body": "- Only check for public symbols in public packages\n- For demonstration only\n",
    "head_branch": "test-fix-public-checker",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db744ee515ce6a4e4a9",
    "number": 2458,
    "body": "# Description\r\n\r\nUpdate public symbols checker to skip files which:\r\n- Have a path part starting with a single leading underscore, for example `opentelemetry-sdk/src/opentelemetry/sdk/_metrics/__init__.py` would not be checked but `opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py` would be\r\n- Have the full string `tests` as one of the path parts, for example `opentelemetry-sdk/tests/metrics/test_metrics.py` would not be checked but `opentelemetry-sdk/src/opentelemetry/foo/equalitytests/foo.py` would be.'\r\n  \r\n  Note this could skip a file like `opentelemetry-sdk/src/opentelemetry/foo/tests/foo.py`, but since some of our packages are within another directory e.g. `exporter/opentelemetry-exporter-otlp-grpc` I can't simply check the second path part.\r\n\r\n\r\n## Type of change\r\n\r\nTooling\r\n\r\n# How Has This Been Tested?\r\n\r\nTested by creating new commits on top that pass/fail the check, see #2459 [CI run](https://github.com/open-telemetry/opentelemetry-python/runs/5147192191?check_suite_focus=true):\r\n\r\n```\r\nThe code in this branch adds the following public symbols:\r\n\r\n- opentelemetry-sdk/src/opentelemetry/sdk/trace/testsfoo.py\r\n\tFoo\r\n\r\n- opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py\r\n\tFoo\r\n\r\nPlease make sure that all of them are strictly necessary, if not, please consider prefixing them with an underscore to make them private. After that, please label this PR with \"Skip Public API check\".\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nN/A\r\n",
    "head_branch": "fix-public-checker",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Only check for public symbols in public packages (#2458)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db844ee515ce6a4e4aa",
    "number": 2456,
    "body": "# Description\r\n\r\nImplements `MetricReaderStorage`. See issue for more details and links to design doc.\r\n\r\nFixes #2378\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded a new test cases mocking out dependencies including one concurrency test for race condition. This is now wired into the `MeterProvider`, so existing integration test cases cover it.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "metric-reader-storage-2378",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement MetricReaderStorage (#2456)\n\n* Implement MetricReaderStorage\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\n* fix tset\r\n\r\n* syntax error\r\n\r\n* move async instrument callback invocation into the metric reader storage\r\n\r\n* Rename ViewStorage -> ViewInstrumentMatch\r\n\r\nTests still need to be fixed.\r\n\r\n* Implement MetricReaderStorage\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\n* fix tset\r\n\r\n* syntax error\r\n\r\n* move async instrument callback invocation into the metric reader storage\r\n\r\n* Rename ViewStorage -> ViewInstrumentMatch\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/__init__.py\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\n* refactor to have the measurement consumer handle async callbacks again\r\n\r\n* remove print\r\n\r\n* lint\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>\r\nCo-authored-by: Alex Boten <alex@boten.ca>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200db944ee515ce6a4e4ab",
    "number": 2453,
    "body": "- Contributes to\r\n  - #2172\r\n  - https://github.com/open-telemetry/opentelemetry.io/issues/1109\r\n- Index page sections and other pages are moving to the OTel website via [opentelemetry.io PR#1116](https://github.com/open-telemetry/opentelemetry.io/pull/1116). This PR removes the sections & pages that have migrated, and reworks the index page a bit. Here the parts that are being moved:\r\n  - https://opentelemetry-python.readthedocs.io/en/stable/getting-started.html → https://opentelemetry.io/docs/instrumentation/python/getting-started/\r\n  - https://opentelemetry-python.readthedocs.io/en/stable/faq-and-cookbook.html → https://opentelemetry.io/docs/instrumentation/python/cookbook/\r\n  - https://opentelemetry-python.readthedocs.io/en/stable/performance/benchmarks.html → https://opentelemetry.io/docs/instrumentation/python/#learn-more \r\n- I've also added index pages for some of the sections to make it easier to reference (and it makes breadcrumbs work better for those sections).\r\n\r\n/cc @cartermp @austinlparker \r\n\r\nPreview: ... hmm, I'm not sure how to link to a preview -- anyone else know? In the meantime, I've included a screenshot below.\r\n\r\n---\r\n\r\n<img width=\"1104\" alt=\"image\" src=\"https://user-images.githubusercontent.com/4140793/153251868-4adc2d00-8a4c-426b-acff-b06ebc3e6fea.png\">\r\n",
    "head_branch": "chalin-link-to-otel-io-2022-02-09",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] Rework API docs (#2453)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dba44ee515ce6a4e4ac",
    "number": 2452,
    "body": "- Contributes to https://github.com/open-telemetry/opentelemetry.io/issues/1109\r\n- Removes the `website_docs` folder, and \r\ntweaks the doc generation script. \r\n(Keeping the script for now since it'll help with the rest of the https://github.com/open-telemetry/opentelemetry.io/issues/1109).\r\n\r\n/cc @austinlparker @cartermp ",
    "head_branch": "chalin-drop-website-docs-2022-02-08",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[website_docs] Remove folder (#2452)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dbb44ee515ce6a4e4ad",
    "number": 2450,
    "body": "# Description\r\n\r\nFixes #2448 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
    "head_branch": "issue-2448",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bugfix(auto-instrumentation): attach OTLPHandler to root logger (#2450)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dbb44ee515ce6a4e4ae",
    "number": 2445,
    "body": "# Description\r\n\r\nFixes #2390\r\n\r\n",
    "head_branch": "issue-2390",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add temporality conversion for histogram (#2445)\n\n* Add temporality conversion for histogram\r\n\r\n* Add tests and update histogram point\r\n\r\n* point->count\r\n\r\n* Fix lint\r\n\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dbc44ee515ce6a4e4af",
    "number": 2442,
    "body": "# Description\r\n\r\nOTLP gRPC exporter depends on a new feature (env var constant) from opentelemetry-sdk added in 1.9. This PR updates the minimum compatible version of SDK for the OTLP gRPC exporter.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2438\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Exisring tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otlp-grpc-exp-sdk-dep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update opentelemetry-sdk min compatible version (#2442)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dbd44ee515ce6a4e4b0",
    "number": 2441,
    "body": "# Description\r\n\r\nOTLP gRPC exporter depends on a new feature (env var constant) from opentelemetry-sdk added in 1.9. This PR updates the minimum compatible version of SDK for the OTLP gRPC exporter.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2438\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Exisring tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otlp-grpc-exp-sdk-dep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dbe44ee515ce6a4e4b1",
    "number": 2440,
    "body": "# Description\r\n\r\nOTLP gRPC exporter depends on a new feature (env var constant) from opentelemetry-sdk added in 1.9. This PR updates the minimum compatible version of SDK for the OTLP gRPC exporter.\r\n\r\nFixes #2438 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Existing Tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otlp-grpc-exp-sdk-dep",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dbf44ee515ce6a4e4b2",
    "number": 2437,
    "body": "Fixes #2436",
    "head_branch": "issue_2436",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Mark test as flaky (#2437)\n\nFixes #2436\r\n\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc044ee515ce6a4e4b3",
    "number": 2435,
    "body": "Follow up to https://github.com/open-telemetry/opentelemetry-python/pull/2429.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2430",
    "head_branch": "codeboten/otlp-histo-sum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OTLP histo sum (#2435)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc044ee515ce6a4e4b4",
    "number": 2431,
    "body": "This makes `sum` available to be exported. Part of #2430\r\n",
    "head_branch": "codeboten/add-sum-to-histo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[metrics] add sum attribute to Histogram (#2431)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc144ee515ce6a4e4b5",
    "number": 2429,
    "body": "# Description\r\n\r\nAdding support for Histogram data point types. Note this doesn't support the sum of the histogram yet.\r\n\r\nFixes #2386 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "codeboten/otlp-histo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[exporter/otlp-proto-grpc] add histogram (#2429)\n\n* [exporter/otlp-proto-grpc] add histogram\r\n\r\nAdding support for Histogram data point types. Note this doesn't support the sum of the histogram yet.\r\n\r\n* update changelog\r\n\r\n* update changelog\r\n\r\n* fix test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc244ee515ce6a4e4b6",
    "number": 2428,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1200",
    "head_branch": "name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Return noopmeter on invalid name getmeter (#2428)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc344ee515ce6a4e4b7",
    "number": 2427,
    "body": "# Description\r\n\r\nUpgraded black to latest 22.1.0 which is also the first stable release for black.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n- [x] Dev/Tooling update\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "upgrade-black-22",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgraded black to 22.1.0 (#2427)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc444ee515ce6a4e4b8",
    "number": 2424,
    "body": "Fixes the incorrect status\r\n\r\n<img width=\"743\" alt=\"Screenshot 2022-01-31 at 9 53 08 AM\" src=\"https://user-images.githubusercontent.com/22846633/151738645-2884dc06-0c3e-4a67-a8bc-851d3182b1c5.png\">\r\n",
    "head_branch": "change-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update logging component status (#2424)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc444ee515ce6a4e4b9",
    "number": 2423,
    "body": "# Description\r\n\r\nRelease 1.9.1 & 0.28b1\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Release PR\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/887\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/1.9.1-0.28b1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.9.1-0.28b1 (#2423)\n\n* updating changelogs and version to 1.9.1-0.28b1\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>\r\n\r\nCo-authored-by: Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc544ee515ce6a4e4ba",
    "number": 2422,
    "body": "# Description\r\n\r\nRelease 0.28b1\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Release PR\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/886\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/1.9.0-0.28b1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc644ee515ce6a4e4bb",
    "number": 2417,
    "body": "Fixes #2416",
    "head_branch": "issue_2416",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Slightly increase wait time (#2417)\n\nFixes #2416"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc744ee515ce6a4e4bc",
    "number": 2415,
    "body": "# Description\r\n\r\nThis PR updates the proto to the latest release. Notable change:\r\n\r\n* Deprecated status codes no longer supported\r\n\r\nFixes #2221\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "codeboten/proto-0.12.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update proto to 0.12.0 (#2415)\n\n* update proto to 0.12.0\r\n\r\nThis PR updates the proto to the latest release.\r\n\r\n* remove deprecated status codes, no longer supported\r\n\r\n* update logs to log_records\r\n\r\n* remove unused import\r\n\r\n* update changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc844ee515ce6a4e4bd",
    "number": 2414,
    "body": "Fixes #2413\r\n",
    "head_branch": "issue_2413",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix log message (#2414)\n\nFixes #2413"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc944ee515ce6a4e4be",
    "number": 2412,
    "body": "# Description\r\n\r\nThis PR will contain an API for asynchronously exporting spans, logs and metrics.\r\n\r\nFixes #62\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nIt hasn't yet but it will have unit tests and we will test it manually.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dc944ee515ce6a4e4bf",
    "number": 2411,
    "body": "# Description\r\n\r\nPreparing 1.9.0 and 0.28b0 release\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New Release\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "release/1.9.0-0.28b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.9.0-0.28b0 (#2411)\n\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dca44ee515ce6a4e4c0",
    "number": 2410,
    "body": "If the trace or span ID is None for a log entry, the result would raise an error, this change prevents that.\r\n",
    "head_branch": "codeboten/fix-log-id-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[logs] prevent None from causing problems (#2410)\n\n* [logs] prevent None from causing problems\r\n\r\nIf the trace or span ID is None for a log entry, the result would raise an error, this change prevents that.\r\n\r\n* update changelog\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* add unit test\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dcb44ee515ce6a4e4c1",
    "number": 2409,
    "body": "Fixes #2142\r\n\r\nThis PR adds the checking for duplicate instrument names in the API. Others may disagree and would consider this belongs in the SDK, please leave your comments :v:\r\n\r\n\r\nThe issue includes this question:\r\n\r\n> [Which instrument fields are considered non-identifying (description?)](https://github.com/open-telemetry/opentelemetry-python/issues/2142#issue-1005792307)\r\n\r\nI think that since the [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/api.md#instrument) only requires that the instrument names are not repeated, we should be concerned with the `name` attribute of instruments only.",
    "head_branch": "issue_2142",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add check for duplicate instrument names (#2409)\n\n* Add check for duplicate instrument names\r\n\r\nFixes #2142\r\n\r\n* Add repeated instrument names for SDK as well\r\n\r\n* Update opentelemetry-api/src/opentelemetry/_metrics/__init__.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Add instrument names lock\r\n\r\n* Replace raised exception for a warning\r\n\r\n* Added some fiexes\r\n\r\n* Add double check\r\n\r\n* Add type annotations\r\n\r\n* Update opentelemetry-api/src/opentelemetry/_metrics/__init__.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Move check invocation to SDK\r\n\r\n* Fix lint\r\n\r\n* Separate instrument checking from warning logging\r\n\r\n* Use consistent class\r\n\r\n* Fix typo in example (#2597)\r\n\r\n* Fix docs\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dcc44ee515ce6a4e4c2",
    "number": 2408,
    "body": "Fixes #2385\r\n",
    "head_branch": "codeboten/add-sum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding implementation for Gauge (#2408)\n\n* Adding implementation for Gauge\r\n\r\nFixes #2385\r\n\r\n* update changelog\r\n\r\n* Update exporter/opentelemetry-exporter-otlp-proto-grpc/tests/metrics/test_otlp_metrics_exporter.py\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dcd44ee515ce6a4e4c3",
    "number": 2405,
    "body": "Fixes #2404",
    "head_branch": "issue_2404",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make shutdown function be called always (#2405)\n\n* Make shutdown function be called always\r\n\r\nFixes #2404\r\n\r\n* Fix warning handling\r\n\r\n* Log specific metric reader\r\n\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dce44ee515ce6a4e4c4",
    "number": 2401,
    "body": "# Description\r\n\r\nFixes race in `shutdown` and correctly sets the measurement consumer callback for the `MetricReader`\r\n\r\nFixes #2331 \r\nFixes #2245 \r\nFixes #2239 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e opentelemetry-sdk`\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "meter-provider-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor SDK MeterProvider (#2401)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dce44ee515ce6a4e4c5",
    "number": 2400,
    "body": "Fixes #2300\r\n\r\nThis class is intentionally named `ViewInstrumentMatch` because it represents a match between a View and an Instrument. There will be as many instances of `ViewInstrumentMatch` as there will be matches between Views and Instruments. I think this is a more descriptive name than `ViewStorage` considering the fact that instances of this class do no store any Views.",
    "head_branch": "issue_2300",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add _ViewInstrumentMatch (#2400)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dcf44ee515ce6a4e4c6",
    "number": 2399,
    "body": "The metrics examples have been updated to include the MetricReader and the return value shutdown has been updated, as the exporter doesn't return a bool.\r\n",
    "head_branch": "codeboten/minor-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixing documentation and return value (#2399)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd044ee515ce6a4e4c7",
    "number": 2398,
    "body": "# Description\r\n\r\nSpanLimits now properly supports a global attribute limit of 0. Previously it would treat 0 the same as `None`, and cause a cascade of limits to default.\r\n\r\nAdded tests to verify this behavior (`test_span_zero_global_limit`, `test_span_zero_global_nonzero_model`, `test_span_zero_global_unset_model`).\r\n\r\nFixes #2392 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e py38-opentelemetry-sdk -- trace/test_trace.py::TestSpanLimits\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed: No\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added: No\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-spanlimits-zero-global",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add support for 0 global attribute limit and tests (#2398)\n\n* add support for 0 global attribute limit and tests\r\n\r\n* add PR number to changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd144ee515ce6a4e4c8",
    "number": 2397,
    "body": "Fixes #2395",
    "head_branch": "issue_2395",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Python version support policy (#2397)\n\n* Add Python version support policy\n\nFixes #2395\n\n* Address comments\n\n* Fix a mistake"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd244ee515ce6a4e4c9",
    "number": 2394,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/2393\r\n\r\n@ocelotl \r\nI know some of these MAY get addressed in an abstract manner with your error handling [pr](https://github.com/open-telemetry/opentelemetry-python/pull/2244) but just adding these checks for now for completion and until we decide to move forward with a generic error handling method. Other language implementations have this in the SDK as well.",
    "head_branch": "warn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Validate add/record operations for instruments (#2394)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd344ee515ce6a4e4ca",
    "number": 2391,
    "body": "Fixes #2247\r\n\r\nFixes #2478\r\n\r\nFixes #2487",
    "head_branch": "issue_2247",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adds Views to metrics SDK (#2391)\n\n* Adds Views to metrics SDK\r\n\r\n* Add view documentation\r\n\r\n* Add type for instrument\r\n\r\n* Add more restrictions to matching criteria\r\n\r\n* Remove regex matching from meter name\r\n\r\n* Remove name from matching criteria\r\n\r\n* Add some fixes\r\n\r\n* Rename attribute\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/view.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Update attribute keys type\r\n\r\n* More fixes\r\n\r\n* Remove regex and default view mechanism\r\n\r\n* Raise exceptions instead of logging warnings\r\n\r\n* Refactor warning\r\n\r\n* Fix issues\r\n\r\n* Add support for fnmatch and fix view matching\r\n\r\n* Fix test case\r\n\r\n* Add some fixes\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Add final decorator\r\n\r\n* Fix lint\r\n\r\n* Use f string\r\n\r\n* Fix documentation\r\n\r\n* Fix documentation\r\n\r\n* Remove check\r\n\r\n* Remove unnecessary attribute\r\n\r\n* Fix documentation\r\n\r\n* Fix documentation\r\n\r\n* Fix tests\r\n\r\n* More fixes\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/metric_reader_storage.py\r\n\r\nCo-authored-by: Alex Boten <alex@boten.ca>\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/metric_reader_storage.py\r\n\r\nCo-authored-by: Alex Boten <alex@boten.ca>\r\n\r\n* More fixes\r\n\r\n* WIP fix tests\r\n\r\n* WIP\r\n\r\n* More fixing\r\n\r\n* Fix issue with 3.6\r\n\r\n* Add comment for private view attributes\r\n\r\n* Fix view matching\r\n\r\n* Handle view aggregations in metric reader storage\r\n\r\n* Fix docs\r\n\r\n* Remove wildcard support for meter attributes\r\n\r\n* Fix documentation\r\n\r\n* Rename to _default_aggregation\r\n\r\n* Use default view argument\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/view.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\nCo-authored-by: Alex Boten <alex@boten.ca>\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd344ee515ce6a4e4cb",
    "number": 2388,
    "body": "# Description\r\n\r\n- Implemented the `SynchronousMeasurementConsumer` from the design.\r\n- Added a stub implementation and TODO for implementing the MetricReaderStorage (#2378)\r\n- Added a small (internal) `SdkConfiguration` dataclass for passing through SDK configuration from MeterProvider. This avoids having to access private methods/variables on the MeterProvider class.\r\n\r\nFixes #2328\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded test case mocking out dependencies.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "2328-measurementconsumer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement SynchronousMeasurementConsumer (#2388)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd444ee515ce6a4e4cc",
    "number": 2383,
    "body": "# Description\r\n\r\nFor consistency with the tracer, renamed the default meter and meter provider to NoOp instead.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "codeboten/noop-meter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rename _DefaultMeter & _DefaultMeterProvider to NoOp* (#2383)\n\n* rename _DefaultMeter & _DefaultMeterProvider to NoOp*\r\n\r\n* update changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd544ee515ce6a4e4cd",
    "number": 2381,
    "body": "# Description\r\n\r\nWe need a way to take users directly to the content and have the heading section \"Release\", \"License\", \"build status\" etc visible.  Currently there is no bookmark to link directly to that level.  We either are able to skip that header or link to top level.  This change is also in alignment with other language readme formats.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Previewed in branch\r\n\r\n# Does This PR Require a Contrib Repo Change? NO\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:NA\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "readmeupdate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use bookmark to skip folderlist when linking (#2381)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd644ee515ce6a4e4ce",
    "number": 2380,
    "body": "Fixes #2329",
    "head_branch": "issue_2329",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add aggregation temporality conversion algorithm (#2380)\n\n* Implement temporality conversion\r\n\r\nFixes #2329\r\n\r\n* Add aggregation temporality conversion algorithm\r\n\r\nFixes #2329\r\n\r\n* Fix start_time_unix_nano\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/aggregation.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Add warning test\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/aggregation.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Add comments to algorigthm\r\n\r\nThese comments intend to identify the conditional blocks of the\r\nalgorithm with the sections defined in the design document.\r\n\r\n* Add check for previous point cumulative aggregation temporality\r\n\r\n* Added named arguments for gauge\r\n\r\n* Change to gauge\r\n\r\n* Fix lint\r\n\r\n* Remove numbers from comment\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/aggregation.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Revert \"Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/aggregation.py\"\r\n\r\nThis reverts commit 8bdbe4943f4965a3cf3c81dc189374211c6bffd4.\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd744ee515ce6a4e4cf",
    "number": 2379,
    "body": "Fixes #2353\r\n",
    "head_branch": "issue_2353",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge Asynchronous and Synchronous sum aggregations (#2379)\n\n* Merge Asynchronous and Synchronous sum aggregations\r\n\r\nFixes #2353\r\n\r\n* Don't use None for self._value\r\n\r\n* Remove temporality check from sum aggregate\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/aggregation.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Add cumulative test cases\r\n\r\n* Fix lint\r\n\r\n* Set value to None\r\n\r\nThis is done in order to identify the situation when aggregate has not\r\nbeen called before collect is.\r\n\r\n* Refactor collect\r\n\r\n* Fix initial value\r\n\r\n* Update opentelemetry-sdk/tests/metrics/test_aggregation.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Undo changes to lastvalueaggrgation\r\n\r\n* Fix test case\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd844ee515ce6a4e4d0",
    "number": 2377,
    "body": "# Description\r\n\r\nFixes a few things in `ExplicitBucketHistogramAggregation`:\r\n- rename `value` to `_bucket_counts` to match OTLP. I would rename boundaries as well, but that is different in the SDK spec than the data model for some reason.\r\n- Update boundaries param to accept floating point (see [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/sdk.md#explicit-bucket-histogram-aggregation)). Make the member an immutable tuple\r\n- Remove `inf` from boundaries, it is implicit in the data model.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests are passing\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "remove-inf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix a few ExplicitBucketHistogram issues (#2377)\n\n* Fix a few ExplicitBucketHistogram issues\r\n\r\n* make default boundaries floats\r\n\r\n* Update helper func name\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd844ee515ce6a4e4d1",
    "number": 2375,
    "body": "Also, rename the function to make it clear that this parsing is specific\r\nto headers provided via ENV variables.\r\n\r\n# Description\r\nI ran into this issue recently, and the error message was only somewhat helpful. I read up on some history here (#2248, #2103, #2010) and I think this error message should help point folks in the right direction. I think it's particularly useful here since this is a change from 1.5.0, so if folks are upgrading down the road, their ENV variables will stop working, and it'd be nice to help point them to what they need to change.\r\n\r\nI also renamed the method and docstring because my understanding is that this method is specifically (in our context) to parse headers as they are encoded in ENV files, and will fail to parse non-encoded headers, so I wanted to make it clearer what it is doing so it doesn't seem like a general-purpose header parser.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Documentation fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI ran the tox tests and everything passed. There should be no functional change in this commit.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes.\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ N/A ] Unit tests have been added\r\n- [ N/A ] Documentation has been updated\r\n\r\n(I will double-check on these shortly)\r\n",
    "head_branch": "header-format-error-message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dd944ee515ce6a4e4d2",
    "number": 2374,
    "body": "Fixes #2365\r\n",
    "head_branch": "issue_2365",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dda44ee515ce6a4e4d3",
    "number": 2373,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/2141",
    "head_branch": "dupe-meter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Handle duplicate meters (#2373)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ddb44ee515ce6a4e4d4",
    "number": 2372,
    "body": "The collector configuration needed updating in the logs example. The root logger also needed fixing.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/fix-logs-example",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] fix logs example (#2372)\n\nThe collector configuration needed updating in the logs example. The root logger also needed fixing.\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ddc44ee515ce6a4e4d5",
    "number": 2371,
    "body": "Although these aren't complete by any means, having an example will give us a sense of when we have a working end-to-end SDK.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/metrics-example-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] add metrics examples (#2371)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ddc44ee515ce6a4e4d6",
    "number": 2370,
    "body": "# Description\r\n\r\nAdding support for exporting Sum datapoints.\r\n\r\nPart of #2337 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "codeboten/fill-otlp-metrics-details",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[exporter/otlp] add support for Sum (#2370)\n\n* [exporter/otlp] add support for Sum\r\n\r\nAdding support for exporting Sum datapoints.\r\n\r\n* update based on feedback\r\n\r\n* update changelog\r\n\r\n* clean up imports\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* feedback update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ddd44ee515ce6a4e4d7",
    "number": 2364,
    "body": "Fixes #2327",
    "head_branch": "metrics-exposition",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Complete metric exporter format and update OTLP exporter (#2364)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dde44ee515ce6a4e4d8",
    "number": 2363,
    "body": "# Description\r\n\r\nAdd `NoOpTracer` and `NoOpTracerProvider`. Marking `_DefaultTracer` and `_DefaultTracerProvider` as deprecated.\r\n\r\nFixes #2362\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "codeboten/default-to-noop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add NoOpTracer and NoOpTracerProvider classes (#2363)\n\n* Add _NoOpTracer and _NoOpTracerProvider classes\r\n\r\nAdd `_NoOpTracer` and `_NoOpTracerProvider`. Marking `_DefaultTracer` and `_DefaultTracerProvider` as deprecated.\r\n\r\nFixes #2362\r\n\r\n* update changelog\r\n\r\n* update class\r\n\r\n* fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ddf44ee515ce6a4e4d9",
    "number": 2361,
    "body": "Fixes #2360",
    "head_branch": "issue_2360",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de044ee515ce6a4e4da",
    "number": 2359,
    "body": "Fixes #2316\r\n",
    "head_branch": "issue_2316",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove metric exporters from MeterProvider (#2359)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de044ee515ce6a4e4db",
    "number": 2355,
    "body": "# Description\r\n\r\nThe method to translate attributes is common across signals, refactoring the code to make it so.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Refactor, internal only\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "codeboten/refactor-translate-attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[otlp-exporter] refactor _translate_attributes (#2355)\n\n* [otlp-exporter] refactor _translate_attributes\r\n\r\nThe method to translate attributes is common across signals, rafactoring the code to make it so.\r\n\r\n* fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de144ee515ce6a4e4dc",
    "number": 2354,
    "body": "# Description\r\n\r\nAdding the `opentelemtry_meter_provider` entrypoints `default_meter_provider` & `sdk_meter_provider`. This is consistent with the tracing signal. Note the logging signal doesn't have a default log emitter provider. Should this be raised as an issue?\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/add-entry-point-meter-provider",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[api/sdk] add entrypoint for meter provider (#2354)\n\n* [api/sdk] add entrypoint for meter provider\r\n\r\nAdding the opentelemtry_meter_provider entrypoints default_meter_provider & sdk_meter_provider.\r\n\r\n* update sha\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de244ee515ce6a4e4dd",
    "number": 2351,
    "body": "Fixes #2336 #2368",
    "head_branch": "issue_2336",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use binary search for histogram values (#2351)\n\n* Use binary search for histogram values\r\n\r\nFixes #2336\r\n\r\n* Refactor Histogram aggregation data structures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de344ee515ce6a4e4de",
    "number": 2350,
    "body": "# Description\r\n\r\nThis updates the OTLP gRPC exporter behavior to better conform to the [spec](https://opentelemetry.io/docs/reference/specification/protocol/exporter/).\r\n* Enable HTTPS by default, i.e. nothing is set for `insecure`. (Not in the linked issue but in the spec: `insecure:default=False`.)\r\n* Enable HTTPS if the endpoint scheme is HTTPS even if `insecure=True`.\r\n* Allow setting the `insecure` flag by environment variable.\r\n\r\nFixes #1981\r\n\r\n## Type of change\r\n\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit tests to `test_otlp_trace_exporter.py` that ensure the correct endpoint and correct secure/insecure channel is being used. New cases ensure the default is set and the https scheme supersedes the `insecure` option and test the new environment variable.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "support-insecure-configuration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support insecure configuration (#2350)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de444ee515ce6a4e4df",
    "number": 2345,
    "body": "# Description\r\n\r\nAllow to use x-b3-sampled=0 alone to disable tracing.\r\n\r\nFixes # (issue)\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/2341\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] test x-b3-sampled=0 alone\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is adde\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix_sampled",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de544ee515ce6a4e4e0",
    "number": 2344,
    "body": "# Description\r\n\r\nimproves the error message by showing the name of propagator where loading failed and `strip` to handle spaces\r\n",
    "head_branch": "load-propagator-error-msg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "helpful propagator entry point loading error message (#2344)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de544ee515ce6a4e4e1",
    "number": 2343,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-delay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de644ee515ce6a4e4e2",
    "number": 2342,
    "body": "# Description\r\n\r\nUpdated contrib SHA\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Existing tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-core-sha",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated contrib SHA (#2342)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de744ee515ce6a4e4e3",
    "number": 2340,
    "body": "# Description\r\n\r\nFixes #2332 \r\nFixes #2295\r\n",
    "head_branch": "issue-2332",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add periodic exporting metric reader (#2340)\n\n* Add periodic exporting metric reader\r\n\r\n* Fix lint\r\n\r\n* Fix typing and env\r\n\r\n* lint: black format\r\n\r\n* formatting\r\n\r\n* lot of changes\r\n\r\n* Fix lint\r\n\r\n* Lint again\r\n\r\n* Pylint fix\r\n\r\n* Review suggestions\r\n\r\n* fix failures\r\n\r\n* Address review suggestions\r\n\r\n* Once wrapper, set callback, refactor, and more\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Add preferred_temporality to exporter; update doc string\r\n\r\n* Fix lint\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de844ee515ce6a4e4e4",
    "number": 2339,
    "body": "Fixes #2326",
    "head_branch": "issue_2326",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add measurement consumer (#2339)\n\n* Add measurement consumer\r\n\r\n* Fix lint\r\n\r\n* Address comments\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/instrument.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Rename Serial to Synchronous\r\n\r\n* Fix asynchronous instrument registering bug\r\n\r\n* Fix type\r\n\r\n* Use right path\r\n\r\n* Fix lint\r\n\r\n* Fix circular import\r\n\r\n* Pass name first\r\n\r\n* Implement different fix for circular import\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200de944ee515ce6a4e4e5",
    "number": 2338,
    "body": null,
    "head_branch": "release/1.8.0-0.27b1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.8.0-0.27b0 (#2338)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dea44ee515ce6a4e4e6",
    "number": 2335,
    "body": "# Description\r\n\r\nFixes #2631 \r\n",
    "head_branch": "mypy-sdk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Run mypy checks on Metrics API (#2335)\n\n* Run mypy checks on sdk\r\n\r\n* Add more api type\r\n\r\n* Update callbacks\r\n\r\n* Fix conflicts\r\n\r\n* Fix incorrect comparision\r\n\r\n* Fix lint\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200deb44ee515ce6a4e4e7",
    "number": 2334,
    "body": "# Description\r\n\r\nThe `pkg_resources` module is provided by `setuptools`.\r\nThe `setuptools` package is not part of the Python stdlib but is often available in the system environment as a build-time requirement.\r\n\r\nExplicitly listing `setuptools` as a requirement protects `opentelemetry-python` from breaking with import errors in cases where `setuptools` is not available system-wide.\r\n\r\nThis commit pins the version to `setuptools >= 16.0` which is the first release that includes the required imports (2015).\r\nA similar change was adopted in [opentelemetry-python-contrib](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/781).\r\n\r\nFixes #2282\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `mkdir /tmp/pkg && pip install -t /tmp/pkg {modified-pkg} && test -f /tmp/pkg/pkg_resources`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "issue/2282",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add setuptools runtime requirement (#2334)\n\n* Add setuptools runtime requirement\r\n\r\nThe `pkg_resources` module is provided by `setuptools`.\r\nThe `setuptools` package is not part of the Python stdlib but is often\r\navailable in the system environment as a build-time requirement.\r\n\r\nExplicitly listing `setuptools` as a requirement protects\r\n`opentelemetry-python` from breaking with import errors in cases where\r\n`setuptools` is not available system-wide.\r\n\r\nThis commit pins the version to `setuptools >= 16.0` which is the first\r\nrelease that includes the required imports (2015).\r\n\r\n* Update CHANGELOG"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200deb44ee515ce6a4e4e8",
    "number": 2333,
    "body": "# Description\r\n\r\nAdds an explicit section in the FAQ/Cookbook about creating nested spans\r\n\r\nContributes to https://github.com/open-telemetry/opentelemetry.io/issues/974\r\n\r\n## Type of change\r\n\r\nDocs update\r\n\r\n# How Has This Been Tested?\r\n\r\nI ran this sample and verified the span were created with the sample used.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nNope.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "cartermp.add-nested-spans-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add section in FAQ/cookbook for nested spans (#2333)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dec44ee515ce6a4e4e9",
    "number": 2325,
    "body": "A couple of the exporters were not being tested by the opentelemetry-exporter-otlp package tests.\r\n",
    "head_branch": "codeboten/add-missing-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`tests`: added missing tests (#2325)\n\nA couple of the exporters were not being tested by the opentelemetry-exporter-otlp package tests.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ded44ee515ce6a4e4ea",
    "number": 2323,
    "body": "# Description\r\n\r\nAdding metrics to the OTLP exporter\r\n\r\nPart of #2337 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/add-otlp-metrics-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`exporter-otlp`: adding metrics exporter structure (#2323)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dee44ee515ce6a4e4eb",
    "number": 2322,
    "body": "# Description\r\n\r\nTo be in-line with the trace exporter.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n",
    "head_branch": "codeboten/add-otlp-logs-exporter-ep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add `otlp` entrypoint for logs (#2322)\n\n* add `otlp` entrypoint for logs\r\n\r\nTo be in-line with the trace exporter.\r\n\r\n* update changelog\r\n\r\n* add newline"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200def44ee515ce6a4e4ec",
    "number": 2321,
    "body": "# Description\r\n\r\nThe Prometheus exporter was moved into the `metrics` branch prior to releasing 1.0 for tracing. Now that the metrics API and SDK are further along, we can bring back the exporter and update it to use the new methods. The original code for this PR comes from https://github.com/open-telemetry/opentelemetry-python/tree/metrics/exporter/opentelemetry-exporter-prometheus\r\n\r\nFixes #2291\r\n",
    "head_branch": "codeboten/restore-prometheus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`opentelemetry-exporter-prometheus`: restore package (#2321)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df044ee515ce6a4e4ed",
    "number": 2320,
    "body": "As per the change in the specification (https://github.com/open-telemetry/opentelemetry-specification/commit/9fc9757df59c10acd92f0910484f4309d722fc18) making the OTEL_LOGS_EXPORTER variable official.\r\n\r\nFixes #2315\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/add-logs-exporter-env-var",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add OTEL_LOGS_EXPORTER env variable (#2320)\n\nAs per the change in the specification, adding the variable. There will be a follow up PR to use the variable."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df144ee515ce6a4e4ee",
    "number": 2317,
    "body": "# Description\r\n\r\nWhile following the current Auto-Instrumentation example, I had to install `opentelemetry-distro` (without any extras like `[otlp]`) to get the agent+server_uninstrumented process to emit spans, even as JSON to the console.\r\n\r\nI've also included a rephrasing of the sentences about what the reader should expect to see from running the instrumented apps. There were a few people who were trying to follow these instructions and were confused by the references to \"JSON responses\" from a web app when instead they ought to be looking for JSON written to STDOUT.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change ~requires~ **_is_** a  documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I followed the steps as written in this doc update in a clean Python environment and installed only the packages listed. Successfully saw span JSON from the auto-instrumented server process.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- ~Followed the style guidelines of this project~ N/A?\r\n- [ ] Changelogs have been updated\r\n  + I suspect that this is not worthy of a changelog update which can often cause merge conflicts, but I am happy to provide one if you would like.\r\n- ~Unit tests have been added~ N/A?\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "distro-needed-for-autoinst-example",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] Include opentelemetry-distro as dep for auto-instrumentation example (#2317)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df144ee515ce6a4e4ef",
    "number": 2312,
    "body": "# Description\r\n\r\nThe [opentelemetry-specification](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md#specifying-headers-via-environment-variables) wants `OTEL_EXPORTER_OTLP_HEADERS` to conform to the [Baggage HTTP Header Format](https://github.com/w3c/baggage/blob/main/baggage/HTTP_HEADER_FORMAT.md).\r\n\r\nTo effectively use the headers from `OTEL_EXPORTER_OTLP_HEADERS` for things like authentication (a common use case) the values need to be decoded.\r\n\r\nGiven a header like this:\r\n\r\n```\r\nexport OTEL_EXPORTER_OTLP_HEADERS=\"Authorization=Basic base64\"\r\n```\r\n\r\nThe code prior to this commit would reject the header for containing white space mid-value.\r\n\r\nIf the header is modified to this:\r\n\r\n```\r\nexport OTEL_EXPORTER_OTLP_HEADERS=\"Authorization=Basic%20base64\"\r\n```\r\n\r\nThe code prior to this commit would send the header as `Authorization: Basic%20base64`, which will be rejected upstream.\r\n\r\nThis change applies `urllib.parse.unquote` to header **names** and **values**, based on precedent set by the following libraries:\r\n\r\n- [opentelemetry-go](https://github.com/open-telemetry/opentelemetry-go)\r\n- [opentelemetry-js](https://github.com/open-telemetry/opentelemetry-js)\r\n- [opentelemetry-ruby](https://github.com/open-telemetry/opentelemetry-ruby)\r\n\r\nFixes #2248 <sup>1</sup>\r\n\r\n<sup>1</sup> This PR does not restore previous functionality (where the header `str` could be provided with spaces in the values), but it does provide the ability to provide a header `str` with encoded spaces.  I also added the ability to pass `headers` as `Dict[str, str]` to address both issues raised in #2248. These can be split into individual PRs if needed.\r\n\r\n> Note 1: This could probably use a documentation update that addresses the need to url-encode header values.\r\n> Note 2: I unquoted header names as well as values (based on prior art), but wasn't 100% clear if that's what the spec defines.\r\n> Note 3: Could this be considered a breaking change? Prior to this (including prior to the re-implementation of the header parsing) all names/values were sent as-is.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Extending the unit tests for `re.py`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue/2248",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Decode URL-encoded headers in environment vars (#2312)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df244ee515ce6a4e4f0",
    "number": 2308,
    "body": "Fixes #2305 \r\n",
    "head_branch": "issue_2305",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor aggregations (#2308)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df344ee515ce6a4e4f1",
    "number": 2307,
    "body": "# Description\r\n\r\nFixes #2306\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n\r\nThis change will require a rebase once #2253 is merged",
    "head_branch": "codeboten/rename-console-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rename ConsoleExporter to ConsoleLogExporter (#2307)\n\n* rename ConsoleExporter to ConsoleLogExporter\r\n\r\n* update changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df444ee515ce6a4e4f2",
    "number": 2303,
    "body": "Fixes #2302\r\n",
    "head_branch": "codeboten/fix-metrics-env-var",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "opentelemetry-api: update OTEL_METRICS_EXPORTER variable (#2303)\n\n* opentelemetry-api: update OTEL_METRICS_EXPORTER variable\r\n\r\nFixes #2302\r\n\r\n* Update CHANGELOG.md\r\n\r\n* fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df544ee515ce6a4e4f3",
    "number": 2301,
    "body": "Review #2299 first",
    "head_branch": "issue_2296",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df644ee515ce6a4e4f4",
    "number": 2299,
    "body": "Fixes #2295\r\n\r\nReview #2298 first",
    "head_branch": "issue_2295",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df644ee515ce6a4e4f5",
    "number": 2298,
    "body": "Fixes #2293\r\n\r\nReview #2308 first",
    "head_branch": "issue_2293",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df744ee515ce6a4e4f6",
    "number": 2297,
    "body": "Refactors instruments\r\n\r\n1. Moves the handling of callable and generator callbacks for asynchronous instruments to the SDK\r\n2. Adds default aggregations to instruments\r\n3. Adds test cases",
    "head_branch": "issue_2294",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor metrics instrument (#2297)\n\n* Refactor instrument\r\n\r\nFixes #2294\r\n\r\n* Add Callback type back to API\r\n\r\n* Create instrument with meter\r\n\r\n* Make default_aggregation public\r\n\r\n* Use right import\r\n\r\n* Remove default aggregations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df844ee515ce6a4e4f7",
    "number": 2296,
    "body": "Fixes #2292\r\n\r\nBoth `Meter` and `MeterProvider` need some refactoring (in the arguments they accept, the methods they have, how they interact with instruments, etc.). Refactoring them to get them ready for the next metrics PRs.\r\n\r\nRemoving my previous comment as this has been explained in today's meeting.",
    "head_branch": "issue_2292",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor Meter and MeterProvider (#2296)\n\n* Refactor Meter and MeterProvider\r\n\r\nFixes #2292\r\n\r\n* Remove synchronous instruments list\r\n\r\n* Undo changes to _time.py\r\n\r\n* Make lint pass\r\n\r\n* Remove unnecesary docstring\r\n\r\n* Remove _create_instrument\r\n\r\n* Add missing callback\r\n\r\n* Remove instrument creating methods from MeterProvider\r\n\r\n* Remove views and other attributes\r\n\r\n* Removed dataclass dependency\r\n\r\n* Add warning\r\n\r\n* Add export directory\r\n\r\n* Add missing callbacks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200df944ee515ce6a4e4f8",
    "number": 2287,
    "body": "Removed direct Zoom link as it's no longer accurate; pointed to the community calendar instead.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove hardcoded Zoom link (#2287)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dfa44ee515ce6a4e4f9",
    "number": 2285,
    "body": "# Description\r\n\r\nHelps with #2284. Let us warn when there is a chance of recovering and error when we drop the batch.",
    "head_branch": "improve-log-message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve log message in OTLP exporters (#2285)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dfb44ee515ce6a4e4fa",
    "number": 2283,
    "body": "Adds Views to metrics SDK\r\n\r\nFixes #2247",
    "head_branch": "issue_2247",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dfb44ee515ce6a4e4fb",
    "number": 2280,
    "body": "Prototype implementation of [OTel Python Metrics SDK Design](https://docs.google.com/document/d/1FOmpGCiZAWTd6a3vcEHBnm1LKp7HAKuD4BBN3YCkymc/edit#) doc. I am planning to split this into individual commits and add tests as the design is reviewed by others.\r\n\r\nPlease add your comments but do not merge!",
    "head_branch": "metrics-sdk-proto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dfc44ee515ce6a4e4fc",
    "number": 2279,
    "body": "Contributes to https://github.com/open-telemetry/opentelemetry.io/issues/905. /cc @austinlparker\n",
    "head_branch": "chalin-releases-2021-11-16",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[website_docs] Link to latest release (#2279)\n\nContributes to https://github.com/open-telemetry/opentelemetry.io/issues/905. /cc @austinlparker"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dfd44ee515ce6a4e4fd",
    "number": 2277,
    "body": "# Description\r\n\r\nThe change introduced in #2242 didn't work for uwsgi since its worker process management is implemented in C and `_at_fork_reinit` is never invoked. We solve this by invoking it manually when we find process ids do not match.\r\n\r\nFixes #2266 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
    "head_branch": "bugfix-issue-2266",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bugfix: batch processor doesn't work with uwsgi (#2277)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dfe44ee515ce6a4e4fe",
    "number": 2276,
    "body": "Contributes to https://github.com/open-telemetry/opentelemetry.io/issues/908\r\n\r\n/cc @austinlparker ",
    "head_branch": "chalin-link-to-spec-2021-11-12",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[website_docs] Link to website spec pages (#2276)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200dff44ee515ce6a4e4ff",
    "number": 2274,
    "body": "\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/809\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/1.7.1-0.26b1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.7.1-0.26b1 (#2274)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0044ee515ce6a4e500",
    "number": 2273,
    "body": "# Description\r\n\r\npypi does not like the name `opentelemtry-test` so renaming the package to `opentelemetry-test-utils`. \r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Replicated the issue with test.pypi.org and verified that it accepts the new name\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/807\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "rename-test-utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename opentelemetry-test to opentelemetry-test-utils (#2273)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0044ee515ce6a4e501",
    "number": 2272,
    "body": "Preparing 1.7.0 and 0.26b0 release\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Release prep\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/805\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/1.7.0-0.26b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.7.0-0.26b0 (#2272)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0144ee515ce6a4e502",
    "number": 2271,
    "body": "Fixes #2270",
    "head_branch": "issue_2270",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use parentheses in PR link (#2271)\n\nFixes #2270"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0244ee515ce6a4e503",
    "number": 2269,
    "body": "# Description\r\n\r\nFixes #2263\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/804\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release-test-utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release opentelemetry-test (#2269)\n\nfixes #2263"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0344ee515ce6a4e504",
    "number": 2268,
    "body": "Fixes #2258",
    "head_branch": "issue_2258",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use augmented assignments (#2268)\n\nFixes #2258"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0444ee515ce6a4e505",
    "number": 2262,
    "body": "this PR is to bring in the changes from the `logs` feature branch into `main`.\r\n\r\n**DO NOT SQUASH THIS CHANGE**",
    "head_branch": "codeboten/dont-squash-logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "move log_exporter to _log_exporter as it's still experimental (#2252)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0544ee515ce6a4e506",
    "number": 2261,
    "body": "- Update links in the main index.rst file to not link to feature branches\r\n- Added warning to logs example ",
    "head_branch": "update-docs-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove links to metrics/logs feature branches from docs (#2261)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0544ee515ce6a4e507",
    "number": 2260,
    "body": "This reverts commit 7c90cf4052e86e1a77e4a645eb5a902b49e781bf. Was squashed rather than rebased.",
    "head_branch": "codeboten/revert-log-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert \"Add logging signal to main (#2251)\" (#2260)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0644ee515ce6a4e508",
    "number": 2257,
    "body": "bugfix: delay init worker_thread avoid fork processor will cause thread not work\r\n\r\n# Description\r\n\r\nat uwsgi fork processor, The Fork process is not performed until BatchProcessor is initialized, and the thread will not work because the Fork will not copy the thread. so at on_end() init work_thread will aovid the case\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test BatchProcessor work_thead delay init\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0744ee515ce6a4e509",
    "number": 2256,
    "body": "# Description\r\n\r\nSanitze the `OTEL_RESOURCE_ATTRIBUTES` environment variable for \"invalid\" key/value pairs so that we do not throw a \r\n\r\n```python\r\nValueError: not enough values to unpack (expected 2, got 1)\r\n```\r\n\r\nexception.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- Added a unit test to for the empty string `\"\"` as well as a pair that does not have the `=` symbol.\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n~- [] Documentation has been updated~\r\n",
    "head_branch": "filter-invalid-resource-attributes-pairs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Filter invalid resource attribute pairs (#2256)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0844ee515ce6a4e50a",
    "number": 2255,
    "body": null,
    "head_branch": "metrics_envvar_private",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make metrics envvar constants private (#2255)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e0944ee515ce6a4e50b",
    "number": 2254,
    "body": "#2249 made the prototype metrics API/SDK a private package. It can now be merged into main so we don't have to keep a feature branch around.\r\n\r\nI cherry-picked the below commits from `metrics_new` into this branch to remove ugly merge commits, since this PR will not be squashed:\r\n\r\n- Adds metrics API (#1887)\r\n- Make measurement a concrete class (#2153)\r\n- Remove checks and callbacks from API (#2164)\r\n- Return proxy instruments from ProxyMeter (#2169)\r\n- Add MeterProvider and Meter to the SDK (#2227)\r\n- Make metrics api/sdk packages private `*._metrics` (#2249)\r\n- Make metrics envvar constants private (#2255)\r\n\r\n## Maintainers: ⚠️ MERGE with \"Rebase and Merge\" ⚠️\r\n**Do not squash and merge, in order to keep history.**",
    "head_branch": "metrics-new-cherry-pick",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make metrics envvar constants private (#2255)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0a44ee515ce6a4e50c",
    "number": 2253,
    "body": "This replicates the trace exporter pattern for the logging signal. It includes:\r\n- adding entrypoint for the OTLP and console log exporters\r\n- loads the log exporter and log emitter provider as part of the configuration for auto-instrumentation\r\n",
    "head_branch": "codeboten/add-console-entrypoint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding support for entrypoint loading of log exporters (#2253)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0b44ee515ce6a4e50d",
    "number": 2252,
    "body": "Following the same pattern as for `_logs` to denote experimental support for the OTLP log exporter.\r\n",
    "head_branch": "codeboten/move-log-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "move log_exporter to _log_exporter as it's still experimental (#2252)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e0b44ee515ce6a4e50e",
    "number": 2251,
    "body": "# Description\r\n\r\nThe following PR adds **experimental** signal support for logging. Note to maintainers: please remember to not squash this change.\r\n\r\nPart of https://github.com/open-telemetry/opentelemetry-python/issues/1890\r\n\r\nNot marking that issue as fixed until this signal is no longer experimental.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "logs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add logging signal to main (#2251)\n\n* Add initial overall structure and classes for logs sdk (#1894)\r\n\r\n* Add global LogEmitterProvider and convenience function get_log_emitter (#1901)\r\n\r\n* Add OTLPHandler for standard library logging module (#1903)\r\n\r\n* Add LogProcessors implementation (#1916)\r\n\r\n* Fix typos in test_handler.py (#1953)\r\n\r\n* Add support for OTLP Log exporter (#1943)\r\n\r\n* Add support for user defined attributes in OTLPHandler (#1952)\r\n\r\n* use timeout in force_flush (#2118)\r\n\r\n* use timeout in force_flush\r\n\r\n* fix lint\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/logs/export/__init__.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* fix lint\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* add a ConsoleExporter for logging (#2099)\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Update SDK docs and Add example with OTEL collector logging (debug) exporter (#2050)\r\n\r\n* Fix exception in severity number transformation (#2208)\r\n\r\n* Fix exception with warning message transformation\r\n\r\n* Fix lint\r\n\r\n* Fix lint\r\n\r\n* fstring\r\n\r\n* Demonstrate how to set the Resource for LogEmitterProvider (#2209)\r\n\r\n* Demonstrate how to set the Resource for LogEmitterProvider\r\n\r\nAdded a Resource to the logs example to make it more complete.\r\nPreviously it was using the built-in Resource. Now it adds the\r\nservice.name and service.instance.id attributes.\r\n\r\nThe resulting emitted log records look like this:\r\n```\r\nResource labels:\r\n     -> telemetry.sdk.language: STRING(python)\r\n     -> telemetry.sdk.name: STRING(opentelemetry)\r\n     -> telemetry.sdk.version: STRING(1.5.0)\r\n     -> service.name: STRING(shoppingcart)\r\n     -> service.instance.id: STRING(instance-12)\r\nInstrumentationLibraryLogs #0\r\nInstrumentationLibrary __main__ 0.1\r\nLogRecord #0\r\nTimestamp: 2021-10-14 18:33:43.425820928 +0000 UTC\r\nSeverity: ERROR\r\nShortName:\r\nBody: Hyderabad, we have a major problem.\r\nTrace ID: ce1577e4a703f42d569e72593ad71888\r\nSpan ID: f8908ac4258ceff6\r\nFlags: 1\r\n```\r\n\r\n* Fix linting\r\n\r\n* Use batch processor in example (#2225)\r\n\r\n* move logs to _logs (#2240)\r\n\r\n* move logs to _logs\r\n\r\n* fix lint\r\n\r\n* move log_exporter to _log_exporter as it's still experimental (#2252)\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Adrian Garcia Badaracco <1755071+adriangb@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Tigran Najaryan <4194920+tigrannajaryan@users.noreply.github.com>\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0c44ee515ce6a4e50f",
    "number": 2250,
    "body": "Fixed some issues in CHANGELOG, otherwise there were no conflicts.\r\n\r\n```sh\r\ngit switch metrics_new\r\ngit switch -c metrics_new-merge\r\ngit merge main\r\n```\r\n\r\nAfter this PR is merged, we should be able to merge metrics_new into main (metrics packages are private from #2249)",
    "head_branch": "metrics_new-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge main into metrics_new (#2250)\n\n* updating changelogs and version to 1.6.1-0.25b1 (#2223)\r\n\r\n* default value is invalid, was renamed (#2226)\r\n\r\n* Website: support GH page links to canonical src, and aliases (#2224)\r\n\r\n* Fix opentracing shim references (#2180)\r\n\r\n* Prepare release v1.6.2 and 0.25b2 (#2230)\r\n\r\n* update changelog to note the rename of entrypoints in 1.6.0 (#2228)\r\n\r\n* add note about proto version to README.rst (#2232)\r\n\r\n* ReadableSpan events and links now return a tuple (#2215)\r\n\r\n* ReadableSpan events and links now return a tuple\r\n\r\nRemoved MappingProxy since events and links are not mappings\r\n\r\nSigned-off-by: Ted Kern <tkern@arnatious.com>\r\n\r\n* fix lint\r\n\r\nSigned-off-by: Ted Kern <tkern@arnatious.com>\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* adding CI testing for python 3.10 (#2207)\r\n\r\n* remove `X-B3-ParentSpanId` for B3 propagator as per OpenTelemetry Specification (#2237)\r\n\r\n* remove X-B3-ParentSpanId for B3 propagator as per OpenTelemetry specification\r\n\r\n* revert changes - run tests\r\n\r\n* re-commit changes\r\n\r\n* add entry to CHANGELOG\r\n\r\n* remove ParentSpanId in B3SingleFormat\r\n\r\n* Remove lingering distro pkg files (#2241)\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Patrice Chalin <chalin@users.noreply.github.com>\r\nCo-authored-by: Ben Roberts <robertsben@users.noreply.github.com>\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>\r\nCo-authored-by: Ted Kern <tkern@arnatious.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: James <45812677+JamesJHPark@users.noreply.github.com>\r\nCo-authored-by: (Eliseo) Nathaniel Ruiz Nowell <nathanielruiz98@gmail.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0d44ee515ce6a4e510",
    "number": 2249,
    "body": "As per the discussion in the issue here: #2233\r\n\r\n Make metrics api/sdk packages private `*._metrics` and rename everywhere. Also added a warning in the docs.",
    "head_branch": "metrics-private",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make metrics api/sdk packages private `*._metrics` (#2249)\n\n* Make metrics api/sdk packages private `*._metrics`\r\n\r\n* add warning"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e0e44ee515ce6a4e511",
    "number": 2244,
    "body": "This is a safety prototype.\r\n\r\nI am opening this draft PR not with the intention of merging this into `main` but to make it possible for other contributors to comment on this prototype.",
    "head_branch": "safety_prototype",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e0f44ee515ce6a4e512",
    "number": 2243,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/773 in conjunction with https://github.com/open-telemetry/opentelemetry-python-contrib/pull/783.\r\n\r\nAlso updates auto-instrumentation doc and add some type hints.",
    "head_branch": "comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Populate `auto.version` in Resource if using autoinstrumentation (#2243)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1044ee515ce6a4e513",
    "number": 2242,
    "body": "# Description\r\n\r\nSince 3.7 python provides [`register_at_fork`](https://docs.python.org/3/library/os.html?highlight=at_fork#os.register_at_fork) which can be used to make our batch processor fork-safe.\r\ncelery/gunicorn don't already support Windows since `os.fork` is not available. ASK: where to document this? Some stats about minor version usage from pypystats.org https://pypistats.org/packages/opentelemetry-sdk.\r\n\r\nI have created a repo containing working examples using this change without library worker hooks here https://github.com/lonewolf3739/potential-potato",
    "head_branch": "delay-start",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make batch processor fork aware and reinit when needed (#2242)\n\nSince 3.7 python provides register_at_fork which can be used to make our batch processor fork-safe."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1044ee515ce6a4e514",
    "number": 2241,
    "body": "# Description\r\n\r\nRemove the distro file which was introduced back in #2207 when it was removed in #2196.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "remove-lingering-distro-files",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove lingering distro pkg files (#2241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1144ee515ce6a4e515",
    "number": 2240,
    "body": "As per the discussion in the issue here: https://github.com/open-telemetry/opentelemetry-python/issues/2233\r\n\r\nThis moves the logs signal to `_logs` as a step to make it available as part of the regular package with the caveat that this *will* be moved to `logs` once it's ready to be released.",
    "head_branch": "codeboten/logs-_logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "move logs to _logs (#2240)\n\n* move logs to _logs\r\n\r\n* fix lint"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e1244ee515ce6a4e516",
    "number": 2238,
    "body": "# Description\r\n\r\nThis diff is the result of applying the following command to the project:\r\n\r\n```shell\r\nfind . -type f -name \"*.py\" -exec pyupgrade --py36-plus '{}' +\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Existing CI test coverage.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "pyupgrade-py36-run",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor code using pyupgrade for Python 3.6 (#2238)\n\n* Refactor code using pyupgrade for Python 3.6\r\n\r\nThis diff is the result of applying the following command to the project:\r\n\r\n```shell\r\nfind . -type f -name \"*.py\" -exec pyupgrade --py36-plus '{}' +\r\n```\r\n\r\n* Revert changes in autogenerated files\r\n\r\n* Remove changes on autogenerated files\r\n\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1344ee515ce6a4e517",
    "number": 2237,
    "body": "This PR is to remove `X-B3-ParentSpanId` for B3 propagator as per B3 Requirements in [OpenTelemetry Specification Propagators API](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md#b3-inject): \r\n\r\n> MUST NOT propagate X-B3-ParentSpanId as OpenTelemetry does not support reusing the same id for both sides of a request.\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #2231 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox` tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "otel-spec-B3-propagator-B3-ParentSpanID",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove `X-B3-ParentSpanId` for B3 propagator as per OpenTelemetry Specification (#2237)\n\n* remove X-B3-ParentSpanId for B3 propagator as per OpenTelemetry specification\r\n\r\n* revert changes - run tests\r\n\r\n* re-commit changes\r\n\r\n* add entry to CHANGELOG\r\n\r\n* remove ParentSpanId in B3SingleFormat"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1444ee515ce6a4e518",
    "number": 2236,
    "body": null,
    "head_branch": "merge_main_4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge main 4 (#2236)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e1544ee515ce6a4e519",
    "number": 2234,
    "body": "Merge #2227 first.\r\n\r\nFixes #2229",
    "head_branch": "issue_2229",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adds Aggregation and instruments as part of Metrics SDK (#2234)\n\n* Adds metrics API (#1887)\r\n\r\n* Adds metric prototype\r\n\r\nFixes #1835\r\n\r\n* Fix docs\r\n\r\n* Add API metrics doc\r\n\r\n* Add missing docs\r\n\r\n* Add files\r\n\r\n* Adding docs\r\n\r\n* Refactor to _initialize\r\n\r\n* Refactor initialize\r\n\r\n* Add more documentation\r\n\r\n* Add exporter test\r\n\r\n* Add process\r\n\r\n* Fix tests\r\n\r\n* Try to add aggregator_class argument\r\n\r\nTests are failing here\r\n\r\n* Fix instrument parent classes\r\n\r\n* Test default aggregator\r\n\r\n* WIP\r\n\r\n* Add prototype test\r\n\r\n* Tests passing again\r\n\r\n* Use right counters\r\n\r\n* All tests passing\r\n\r\n* Rearrange instrument storage\r\n\r\n* Fix tests\r\n\r\n* Add HTTP server test\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Add prototype\r\n\r\n* WIP\r\n\r\n* Fail the test\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Add views\r\n\r\n* Discard instruments via views\r\n\r\n* Fix tests\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Fix lint\r\n\r\n* WIP\r\n\r\n* Fix test\r\n\r\n* Fix lint\r\n\r\n* Fix method\r\n\r\n* Fix lint\r\n\r\n* Mypy workaround\r\n\r\n* Skip if 3.6\r\n\r\n* Fix lint\r\n\r\n* Add reason\r\n\r\n* Fix 3.6\r\n\r\n* Fix run\r\n\r\n* Fix lint\r\n\r\n* Remove SDK metrics\r\n\r\n* Remove SDK docs\r\n\r\n* Remove metrics\r\n\r\n* Remove assertnotraises mixin\r\n\r\n* Revert sdk docs conf\r\n\r\n* Remove SDK env var changes\r\n\r\n* Fix unit checking\r\n\r\n* Define positional-only arguments\r\n\r\n* Add Metrics plans\r\n\r\n* Add API tests\r\n\r\n* WIP\r\n\r\n* WIP test\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Set provider test passing\r\n\r\n* Use a fixture\r\n\r\n* Add test for get_provider\r\n\r\n* Rename tests\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Remove non specific requirement\r\n\r\n* Add meter requirements\r\n\r\n* Put all meter provider tests in one file\r\n\r\n* Add meter tests\r\n\r\n* Make attributes be passed as a dictionary\r\n\r\n* Make some interfaces private\r\n\r\n* Log an error instead\r\n\r\n* Remove ASCII flag\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Add instrument tests\r\n\r\n* All tests passing\r\n\r\n* Add test\r\n\r\n* Add name tests\r\n\r\n* Add unit tests\r\n\r\n* Add description tests\r\n\r\n* Add counter tests\r\n\r\n* Add more tests\r\n\r\n* Add Histogram tests\r\n\r\n* Add observable gauge tests\r\n\r\n* Add updowncounter tests\r\n\r\n* Add observableupdowncounter tests\r\n\r\n* Fix lint\r\n\r\n* Fix docs\r\n\r\n* Fix lint\r\n\r\n* Ignore mypy\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Add locks to meter and meterprovider\r\n\r\n* Add lock to instruments\r\n\r\n* Fix fixmes\r\n\r\n* Fix lint\r\n\r\n* Add documentation placeholder\r\n\r\n* Remove blank line as requested.\r\n\r\n* Do not override Rlock\r\n\r\n* Remove unecessary super calls\r\n\r\n* Add missing super calls\r\n\r\n* Remove plan files\r\n\r\n* Add missing parameters\r\n\r\n* Rename observe to callback\r\n\r\n* Fix lint\r\n\r\n* Rename to secure_instrument_name\r\n\r\n* Remove locks\r\n\r\n* Fix lint\r\n\r\n* Remove args and kwargs\r\n\r\n* Remove implementation that gives meters access to meter provider\r\n\r\n* Allow creating async instruments with either a callback function or generator\r\n\r\n* add additional test with callback form of observable counter\r\n\r\n* add a test/example that reads measurements from proc stat\r\n\r\n* implement cpu time integration test with generator too\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Make measurement a concrete class (#2153)\r\n\r\n* Make Measurement a concrete class\r\n\r\n* comments\r\n\r\n* update changelog\r\n\r\n* Return proxy instruments from ProxyMeter (#2169)\r\n\r\n* Merge main 4 (#2236)\r\n\r\n* Add MeterProvider and Meter to the SDK\r\n\r\nFixes #2200\r\n\r\n* Add FIXMEs\r\n\r\n* Fix docstring\r\n\r\n* Add FIXME\r\n\r\n* Fix meter return\r\n\r\n* Log an error if a force flush fails\r\n\r\n* Add FIXME\r\n\r\n* Fix lint\r\n\r\n* Remove SDK API module\r\n\r\n* Unregister\r\n\r\n* Fix API names\r\n\r\n* Return _DefaultMeter\r\n\r\n* Remove properties\r\n\r\n* Pass MeterProvider as a parameter to __init__\r\n\r\n* Add FIXMEs\r\n\r\n* Add FIXMEs\r\n\r\n* Fix lint\r\n\r\n* Add Aggregation to the metrics SDK\r\n\r\nFixes #2229\r\n\r\n* lint fix wip\r\n\r\n* Fix lint\r\n\r\n* Add proto to setup.cfg\r\n\r\n* Add timestamp for last value\r\n\r\n* Rename modules to be private\r\n\r\n* Fix paths\r\n\r\n* Set value in concrete classes init\r\n\r\n* Fix test\r\n\r\n* Fix lint\r\n\r\n* Remove temporalities\r\n\r\n* Use frozenset as key\r\n\r\n* Test instruments\r\n\r\n* Handle min, max and sum in explicit bucket histogram aggregator\r\n\r\n* Add test for negative values\r\n\r\n* Remove collect method from aggregations\r\n\r\n* Add make_point_and_reset\r\n\r\n* Remove add implementation\r\n\r\n* Remove _Synchronous\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/_metrics/aggregation.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Requested fixes\r\n\r\n* Remove NoneAggregation\r\n\r\n* Add changelog entry\r\n\r\n* Fix tests\r\n\r\n* Fix boundaries\r\n\r\n* More fixes\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1644ee515ce6a4e51a",
    "number": 2232,
    "body": "# Description\r\nAdds a note to the `opentelemetry-proto` readme file about the proto version used in the package. also added a note to the proto generation script to remind its caller to update this document.\r\n\r\nFixes #2222 \r\n",
    "head_branch": "codeboten/add-proto-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add note about proto version to README.rst (#2232)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1644ee515ce6a4e51b",
    "number": 2230,
    "body": "# Description\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New release\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/762\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/1.6.2-0.25b2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prepare release v1.6.2 and 0.25b2 (#2230)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1744ee515ce6a4e51c",
    "number": 2228,
    "body": "Follow up to discussion here https://github.com/open-telemetry/opentelemetry-python-contrib/pull/755#issuecomment-946457829",
    "head_branch": "update-changelog-1.6.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update changelog to note the rename of entrypoints in 1.6.0 (#2228)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1844ee515ce6a4e51d",
    "number": 2227,
    "body": "Fixes #2200",
    "head_branch": "issue_2200",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add MeterProvider and Meter to the SDK (#2227)\n\n* Add MeterProvider and Meter to the SDK\r\n\r\nFixes #2200\r\n\r\n* Add FIXMEs\r\n\r\n* Fix docstring\r\n\r\n* Add FIXME\r\n\r\n* Fix meter return\r\n\r\n* Log an error if a force flush fails\r\n\r\n* Add FIXME\r\n\r\n* Fix lint\r\n\r\n* Remove SDK API module\r\n\r\n* Unregister\r\n\r\n* Fix API names\r\n\r\n* Return _DefaultMeter\r\n\r\n* Remove properties\r\n\r\n* Pass MeterProvider as a parameter to __init__\r\n\r\n* Add FIXMEs\r\n\r\n* Add FIXMEs\r\n\r\n* Fix lint"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e1944ee515ce6a4e51e",
    "number": 2226,
    "body": "The default value was renamed to remove the `_span` suffix.",
    "head_branch": "codeboten/fix-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "default value is invalid, was renamed (#2226)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1a44ee515ce6a4e51f",
    "number": 2225,
    "body": "Fixes #2220 ",
    "head_branch": "update-example-logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use batch processor in example (#2225)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1b44ee515ce6a4e520",
    "number": 2224,
    "body": "- This is a `website_docs`-only change\r\n- Contributes to:\r\n  - https://github.com/open-telemetry/opentelemetry.io/issues/542\r\n  - https://github.com/open-telemetry/opentelemetry.io/issues/665\r\n\r\n/cc @austinlparker \r\n",
    "head_branch": "chalin-python-alias-2021-10-18",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Website: support GH page links to canonical src, and aliases (#2224)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1b44ee515ce6a4e521",
    "number": 2223,
    "body": null,
    "head_branch": "release/1.6.1-0.25b1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.6.1-0.25b1 (#2223)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1c44ee515ce6a4e522",
    "number": 2216,
    "body": "# Description\r\n\r\nAdding one missing letter to fix documentation typo.\r\n\r\nDoes not fix a specific GitHub issue\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis has not been tested.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nNone of these seem relevant.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixing typo (#2216)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1d44ee515ce6a4e523",
    "number": 2215,
    "body": "# Description\r\n\r\nReadableSpan events and links attributes now return a sequence, as described, removing a TypeError.\r\n\r\nNo longer attempt to wrap Links and Events in `MappingProxy`'s since they are not descendants of Mapping like `Attributes`.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2214\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran `tox -e py38-opentelemetry-sdk -- trace/test_trace.py::TestReadableSpan` (tested on Python 3.8.10 on Ubuntu on WSL2)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-readablespan-events-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ReadableSpan events and links now return a tuple (#2215)\n\n* ReadableSpan events and links now return a tuple\r\n\r\nRemoved MappingProxy since events and links are not mappings\r\n\r\nSigned-off-by: Ted Kern <tkern@arnatious.com>\r\n\r\n* fix lint\r\n\r\nSigned-off-by: Ted Kern <tkern@arnatious.com>\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1e44ee515ce6a4e524",
    "number": 2213,
    "body": "# Description\r\n\r\nI think a PR that changed bootstrap_gen.py was merged after the instrumentation package was removed resulting in this leftover file. \r\n\r\n",
    "head_branch": "remove-left-over-files",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove left-over bootstrap_gen.py file (#2213)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e1f44ee515ce6a4e525",
    "number": 2212,
    "body": "# Description\r\n\r\nWarnings were being logged about the baggage header being too long when the header was not present. This PR just adds a check to make sure the warning is only emitted when the header exists.\r\n\r\nThe main issue is that this was creating a lot of noise in logs, because the project where opentelemetry is used is the first one to receive requests (and thus will never have the baggage header set).\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTox has been run. I'm not sure much else is necessary, given that no behavior has been changed, only logging.\r\n\r\n- [x] Run tox\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix(baggage): oversized header warn only with a header (#2212)\n\nThis commit makes sure that warnings about the baggage header length are\r\nonly emitted when the header is actually present, since it does not make\r\nsense to warn about a missing header's length."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2044ee515ce6a4e526",
    "number": 2211,
    "body": null,
    "head_branch": "merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2044ee515ce6a4e527",
    "number": 2209,
    "body": "# Description\r\n\r\nAdded a Resource to the logs example to make it more complete.\r\nPreviously it was using the built-in Resource. Now it adds the\r\nservice.name and service.instance.id attributes.\r\n\r\nThe resulting emitted log records look like this:\r\n```\r\nResource labels:\r\n     -> telemetry.sdk.language: STRING(python)\r\n     -> telemetry.sdk.name: STRING(opentelemetry)\r\n     -> telemetry.sdk.version: STRING(1.5.0)\r\n     -> service.name: STRING(shoppingcart)\r\n     -> service.instance.id: STRING(instance-12)\r\nInstrumentationLibraryLogs #0\r\nInstrumentationLibrary __main__ 0.1\r\nLogRecord #0\r\nTimestamp: 2021-10-14 18:33:43.425820928 +0000 UTC\r\nSeverity: ERROR\r\nShortName:\r\nBody: Hyderabad, we have a major problem.\r\nTrace ID: ce1577e4a703f42d569e72593ad71888\r\nSpan ID: f8908ac4258ceff6\r\nFlags: 1\r\n```\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nRun the example and watch the Collector's `logging` exporter output.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated `Not needed`\r\n- [ ] Unit tests have been added `Not applicable. Example.`\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-resource-to-logs-example",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Demonstrate how to set the Resource for LogEmitterProvider (#2209)\n\n* Demonstrate how to set the Resource for LogEmitterProvider\r\n\r\nAdded a Resource to the logs example to make it more complete.\r\nPreviously it was using the built-in Resource. Now it adds the\r\nservice.name and service.instance.id attributes.\r\n\r\nThe resulting emitted log records look like this:\r\n```\r\nResource labels:\r\n     -> telemetry.sdk.language: STRING(python)\r\n     -> telemetry.sdk.name: STRING(opentelemetry)\r\n     -> telemetry.sdk.version: STRING(1.5.0)\r\n     -> service.name: STRING(shoppingcart)\r\n     -> service.instance.id: STRING(instance-12)\r\nInstrumentationLibraryLogs #0\r\nInstrumentationLibrary __main__ 0.1\r\nLogRecord #0\r\nTimestamp: 2021-10-14 18:33:43.425820928 +0000 UTC\r\nSeverity: ERROR\r\nShortName:\r\nBody: Hyderabad, we have a major problem.\r\nTrace ID: ce1577e4a703f42d569e72593ad71888\r\nSpan ID: f8908ac4258ceff6\r\nFlags: 1\r\n```\r\n\r\n* Fix linting"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2144ee515ce6a4e528",
    "number": 2208,
    "body": "# Description\r\n\r\nFixes #2205 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n- [x] updated the tests\r\n- [x] manually verified the change \r\n\r\n",
    "head_branch": "bug-fix-warn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix exception in severity number transformation (#2208)\n\n* Fix exception with warning message transformation\r\n\r\n* Fix lint\r\n\r\n* Fix lint"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2244ee515ce6a4e529",
    "number": 2207,
    "body": "Python 3.10 was released on Oct 4, see [announcement](https://www.python.org/downloads/release/python-3100/), this PR  adds CI pipelines to test with it.",
    "head_branch": "codeboten/add-py3.10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding CI testing for python 3.10 (#2207)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2344ee515ce6a4e52a",
    "number": 2206,
    "body": "# Description\r\n\r\nAdded a Resource to the logs example to make it more complete.\r\nPreviously it was using the built-in Resource. Now it adds the\r\nservice.name and service.instance.id attributes.\r\n\r\nThe resulting emitted log records look like this:\r\n```\r\nResource labels:\r\n     -> telemetry.sdk.language: STRING(python)\r\n     -> telemetry.sdk.name: STRING(opentelemetry)\r\n     -> telemetry.sdk.version: STRING(1.5.0)\r\n     -> service.name: STRING(shoppingcart)\r\n     -> service.instance.id: STRING(instance-12)\r\nInstrumentationLibraryLogs #0\r\nInstrumentationLibrary __main__ 0.1\r\nLogRecord #0\r\nTimestamp: 2021-10-14 18:33:43.425820928 +0000 UTC\r\nSeverity: ERROR\r\nShortName:\r\nBody: Hyderabad, we have a major problem.\r\nTrace ID: ce1577e4a703f42d569e72593ad71888\r\nSpan ID: f8908ac4258ceff6\r\nFlags: 1\r\n```\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nRun the example and watch the Collector's `logging` exporter output.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated `Not needed`\r\n- [ ] Unit tests have been added `Not applicable. Example.`\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2444ee515ce6a4e52b",
    "number": 2204,
    "body": "- This is a doc-only PR\r\n- Closes #2170\r\n\r\n/cc @austinlparker",
    "head_branch": "chalin-patch-2021-10-05-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove redundant title from Getting started page (#2204)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2544ee515ce6a4e52c",
    "number": 2201,
    "body": "Fixes #2195\r\n\r\n- Upgrade the dependencies in dev-requirements.txt. I switched a few of them to `~=` instead of `>=`.\r\n- Regenerate protos with `./scripts/proto_codegen.sh`\r\n- Black was trying to reformat the code in `opentelemetry/proto/logs` so updated the ignore in pyproject.toml to be more general\r\n\r\nI'm wondering if we should pin dev-dependencies.txt and introduce some automation to bump them automatically instead of giving ranges",
    "head_branch": "upgrade-grpc-proto-deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade GRPC/protobuf related dependency, regenerate otlp protobufs (#2201)\n\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2544ee515ce6a4e52d",
    "number": 2199,
    "body": "Merge `main` into `metrics_new`. Fixes #2194",
    "head_branch": "merge_main_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge main 2 (#2199)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e2644ee515ce6a4e52e",
    "number": 2198,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2744ee515ce6a4e52f",
    "number": 2197,
    "body": "# Description\r\n\r\nComes out of a result of https://github.com/open-telemetry/opentelemetry-python-contrib/pull/739 where we add instrumentation for AWS Lambda.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/739\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "add-aws_lambda-instrumentation-to-bootstrap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add AWS Lambda Instrumentation to boostrap_gen.py (#2197)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2844ee515ce6a4e530",
    "number": 2196,
    "body": "# Description\r\n\r\nNow that SDK does not depend on opentelemetry-instrumentation anymore and opentelemetry-instrumentation has actual build time dependencies on the contrib repo, it makes maintanence a lot easier if we move opentelemetry-instrumentation to contrib repo. opentelemetry-distro depends on opentelemetry-instrumentation and is being moved as well. Neither of the two packages are really part of \"core\" Otel python anyway.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/738\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-instrumentation-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move instrumentation and distro to contrib (#2196)\n\nNow that SDK does not depend on opentelemetry-instrumentation\r\nanymore and opentelemetry-instrumentation has actual build time\r\ndependencies on the contrib repo, it makes maintanence a lot\r\neasier if we move opentelemetry-instrumentation to contrib repo.\r\nopentelemetry-distro depends on opentelemetry-instrumentation\r\nand is being moved as well. Neither of the two packages are\r\nreally part of \"core\" Otel python anyway."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2944ee515ce6a4e531",
    "number": 2193,
    "body": null,
    "head_branch": "release/1.6.0-0.25b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.6.0-0.25b0 (#2193)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2a44ee515ce6a4e532",
    "number": 2192,
    "body": "# Description\r\n\r\nWe do not need to run the entire contrib test matrix on core. We need enough confidence that core API changes don’t break anything in contrib. It should be enough to run each test suite on just one version of Python to achieve that. So for core, we can run only Python3.6 contrib workflows. That should be more than enough IMO to ensure nothing breaks in core. \r\n\r\nAlso disabled contrib docker tests as contrib unit tests should be enough to catch any breakage. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Dev/Tooling enhancement\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing Tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "dont-run-entire-contrib-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Only run Python3.6 contrib tests (#2192)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2a44ee515ce6a4e533",
    "number": 2191,
    "body": "# Description\r\nUpdated contrib SHA to include the fix for docker tests.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-contrib-docker-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update contrib SHA for Github Actions workflow (#2191)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2b44ee515ce6a4e534",
    "number": 2188,
    "body": "# Description\r\n\r\nThis allows the SDK to ditch dependency on opentelemetry-instrumentation. Distro authors will still be able to use BaseConfigurator class by importing it from the SDK. As part of config refactor, we could end up removing the class completely or re-work/move it to another package.\r\n\r\nFixes #2184\r\n\r\nDepends on #2187 so please review after that is merged\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Internal enhancement/refactor\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-private-configurator-from-sdk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move BaseConfigurator to SDK (#2188)\n\n* Move _SUPPRESS_INTRUMENTATION key from instrumentation to api\r\n\r\nThis will continue to be part of the internal API but live in the API\r\ncontext package.\r\n\r\n* Move BaseConfigurator from isntrumentation to SDK\r\n\r\nThis allows SDK to not depend on instrumentation package anymore."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2c44ee515ce6a4e535",
    "number": 2187,
    "body": "# Description\r\nThis will continue to be part of the internal API but live in the API\r\ncontext package.\r\n\r\nFixes #2184\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Internal enhancement/refactor\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-instrumentation-sdk-dep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move _SUPPRESS_INTRUMENTATION key from instrumentation to api (#2187)\n\nThis will continue to be part of the internal API but live in the API\r\ncontext package."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2d44ee515ce6a4e536",
    "number": 2186,
    "body": "# Description\r\n\r\nAdding a name to the `BatchSpanProcessor` worker thread.  This helps with debugging since this worker thread currently needs to live in the same process as the instrumented code.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis is covered by existing tests.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bcampbell/BatchSpanProcessor_named_thread",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding BatchSpanProcessor thread name (#2186)\n\n* Adding thread name\r\n\r\n* Updating CHANGELOG"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2e44ee515ce6a4e537",
    "number": 2183,
    "body": "# Description\r\n\r\nUpdate bootstrap_gen.py for Jinja2 versions. https://github.com/open-telemetry/opentelemetry-python-contrib/pull/712\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nNo tests, this is an update of versions for bootstrap\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nYes: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/712\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update bootstrap_gen.py for jinja2 versions (#2183)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2f44ee515ce6a4e538",
    "number": 2182,
    "body": "# Description\r\n\r\nFixes an unlikely race condition where multiple threads can set the global tracer provider at once, bypassing the check that the global tracer provider can only be set once.\r\n\r\nFixes #2181\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added unit tests that try to call `set_tracer_provider()` in 100 threads\r\n- [x] Existing tests are passing fine otherwise\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated **N/A**\r\n",
    "head_branch": "set-tracer-provider-race",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix race in `set_tracer_provider()` (#2182)\n\n* Fix race in set_tracer_provider\r\n\r\n* refactor _reset_globals to a test util\r\n\r\n* get rid of \"Mixin\" name and simplify code a bit\r\n\r\n* add some comments to concurrency_test.py\r\n\r\n* actually respect log option\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e2f44ee515ce6a4e539",
    "number": 2180,
    "body": "# Description\r\n\r\nThis addresses the issue described in https://github.com/open-telemetry/opentelemetry-python/issues/2179\r\n\r\nFixes #2179 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] This was tested in a minimal working example [here](https://github.com/robertsben/otel-example/tree/follows-from-ref)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-opentracing-shim-references",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix opentracing shim references (#2180)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3044ee515ce6a4e53a",
    "number": 2177,
    "body": "Following https://github.com/open-telemetry/opentelemetry-python/pull/2171, update releasing guidelines to exclude website docs publishing workflow.",
    "head_branch": "contributing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update RELEASING.md (#2177)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3144ee515ce6a4e53b",
    "number": 2176,
    "body": null,
    "head_branch": "main",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge branch 'merge_main_1' into metrics_new"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e3244ee515ce6a4e53c",
    "number": 2173,
    "body": "# Description\r\nRemoved instrument and bootstrap commands\r\nThese are being moved to the new `opentelemetry` contrib package.\r\n\r\nPart of:  https://docs.google.com/document/d/1qb05E45hEGbxKQ7UVXpB-7aGTN7Pjh4vok1l07weudA/edit#heading=h.rkrrdheasnx9\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nDoes not technically depend on a contrib PR linking to the contrib PR that adds the instrument and bootstrap command:\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/709\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3344ee515ce6a4e53d",
    "number": 2171,
    "body": "Moving forward (https://github.com/open-telemetry/opentelemetry.io/issues/661, #2116), this workflow will no longer be used.\r\n\r\n/cc @austinlparker ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Delete docs-update.yml (#2171)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3344ee515ce6a4e53e",
    "number": 2169,
    "body": "Fixes #2144\r\n\r\nThis PR implements proxy instruments to be returned from the metrics API before an SDK is set up. This is slightly different than how this is implemented for tracing because of the complication of asynchronous instruments. In tracing, we resolve the proxied Tracer whenever spans are created by a user: https://github.com/open-telemetry/opentelemetry-python/blob/18b5cb046bebab0c70841c662268bb7980c2fd5e/opentelemetry-api/src/opentelemetry/trace/__init__.py#L411-L415\r\n\r\nThis would work for synchronous instruments. However, the user never interacts with asynchronous instruments, so we need to keep them reachable by reference so when an SDK is swapped in, we can create SDK instances of each async instrument.",
    "head_branch": "metrics-proxy-2144",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Return proxy instruments from ProxyMeter (#2169)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e3444ee515ce6a4e53f",
    "number": 2168,
    "body": "# Description\r\n\r\nImplements `sdk.conf.configure_tracing` as proposed in https://docs.google.com/document/d/1qb05E45hEGbxKQ7UVXpB-7aGTN7Pjh4vok1l07weudA/edit#heading=h.rkrrdheasnx9\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested manually\r\n- [x] Added unit tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sdk-conf-module",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3544ee515ce6a4e540",
    "number": 2167,
    "body": "# Description\r\n\r\nUpdated the baggage implementation to follow the definition spec'd here https://w3c.github.io/baggage/#definition\r\n\r\nAlso Fixes #2010 ",
    "head_branch": "bugfix-GH2010",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make baggage implementation w3c spec complaint (#2167)\n\n* Add regexes to check keys and values\r\n\r\nFixes #2010\r\n\r\n* Fix tests\r\n\r\n* Add changelog\r\n\r\n* Fix test\r\n\r\n* Add checks to set_baggage\r\n\r\n* Fix lint\r\n\r\n* Add changelog entry\r\n\r\n* Fix mypy\r\n\r\n* Fix mypy\r\n\r\n* Cast to string\r\n\r\n* WIP\r\n\r\n* Key value format\r\n\r\n* Mostly done\r\n\r\n* Remove old changelog entry\r\n\r\n* fomat\r\n\r\n* Correct typing\r\n\r\n* Fix lint\r\n\r\n* Fix issues\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Make changes as discussed in SIG meeting\r\n\r\n* Update opentelemetry-api/src/opentelemetry/baggage/__init__.py\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3644ee515ce6a4e541",
    "number": 2165,
    "body": null,
    "head_branch": "merge_main_0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3744ee515ce6a4e542",
    "number": 2164,
    "body": "Fixes #2151",
    "head_branch": "issue_2151",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove checks and callbacks from API (#2164)\n\n* Remove checks and callbacks from API\r\n\r\nFixes #2151\r\n\r\n* Fix tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e3844ee515ce6a4e543",
    "number": 2163,
    "body": "This is a draft PR whose only purpose is to see how tests would run on CI for the `metrics_new` branch. It is not expected to be merged into `main` soon, and it is expected to remain as draft for the time being.\r\n\r\nPlease do not merge this PR into `main`.",
    "head_branch": "metrics_new",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3944ee515ce6a4e544",
    "number": 2160,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nNo active tests have been executed as this code solely updates `boostrap_gen.py` for the Pika Instrumentation module.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. - [PR #680](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/680):\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/add_pika_instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated bootstrap_gen.py for pika instrumentation in the contrib (#2160)\n\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3944ee515ce6a4e545",
    "number": 2159,
    "body": "Adding a convenience method to simplify instrumentation tests.",
    "head_branch": "codeboten/add-test-method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add assertTraceResponseHeaderMatchesSpan method (#2159)\n\n* add assertTraceResponseHeaderMatchesSpan method\r\n\r\n* fix lint\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3a44ee515ce6a4e546",
    "number": 2158,
    "body": null,
    "head_branch": "codeboten/update-bootstrap-gen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating bootstrap_gen (#2158)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3b44ee515ce6a4e547",
    "number": 2157,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "metrics_new_new",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3c44ee515ce6a4e548",
    "number": 2156,
    "body": "* Adds metric prototype\r\n\r\nFixes #1835\r\n\r\n* Fix docs\r\n\r\n* Add API metrics doc\r\n\r\n* Add missing docs\r\n\r\n* Add files\r\n\r\n* Adding docs\r\n\r\n* Refactor to _initialize\r\n\r\n* Refactor initialize\r\n\r\n* Add more documentation\r\n\r\n* Add exporter test\r\n\r\n* Add process\r\n\r\n* Fix tests\r\n\r\n* Try to add aggregator_class argument\r\n\r\nTests are failing here\r\n\r\n* Fix instrument parent classes\r\n\r\n* Test default aggregator\r\n\r\n* WIP\r\n\r\n* Add prototype test\r\n\r\n* Tests passing again\r\n\r\n* Use right counters\r\n\r\n* All tests passing\r\n\r\n* Rearrange instrument storage\r\n\r\n* Fix tests\r\n\r\n* Add HTTP server test\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Add prototype\r\n\r\n* WIP\r\n\r\n* Fail the test\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Add views\r\n\r\n* Discard instruments via views\r\n\r\n* Fix tests\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Fix lint\r\n\r\n* WIP\r\n\r\n* Fix test\r\n\r\n* Fix lint\r\n\r\n* Fix method\r\n\r\n* Fix lint\r\n\r\n* Mypy workaround\r\n\r\n* Skip if 3.6\r\n\r\n* Fix lint\r\n\r\n* Add reason\r\n\r\n* Fix 3.6\r\n\r\n* Fix run\r\n\r\n* Fix lint\r\n\r\n* Remove SDK metrics\r\n\r\n* Remove SDK docs\r\n\r\n* Remove metrics\r\n\r\n* Remove assertnotraises mixin\r\n\r\n* Revert sdk docs conf\r\n\r\n* Remove SDK env var changes\r\n\r\n* Fix unit checking\r\n\r\n* Define positional-only arguments\r\n\r\n* Add Metrics plans\r\n\r\n* Add API tests\r\n\r\n* WIP\r\n\r\n* WIP test\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Set provider test passing\r\n\r\n* Use a fixture\r\n\r\n* Add test for get_provider\r\n\r\n* Rename tests\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Remove non specific requirement\r\n\r\n* Add meter requirements\r\n\r\n* Put all meter provider tests in one file\r\n\r\n* Add meter tests\r\n\r\n* Make attributes be passed as a dictionary\r\n\r\n* Make some interfaces private\r\n\r\n* Log an error instead\r\n\r\n* Remove ASCII flag\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Add instrument tests\r\n\r\n* All tests passing\r\n\r\n* Add test\r\n\r\n* Add name tests\r\n\r\n* Add unit tests\r\n\r\n* Add description tests\r\n\r\n* Add counter tests\r\n\r\n* Add more tests\r\n\r\n* Add Histogram tests\r\n\r\n* Add observable gauge tests\r\n\r\n* Add updowncounter tests\r\n\r\n* Add observableupdowncounter tests\r\n\r\n* Fix lint\r\n\r\n* Fix docs\r\n\r\n* Fix lint\r\n\r\n* Ignore mypy\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Add locks to meter and meterprovider\r\n\r\n* Add lock to instruments\r\n\r\n* Fix fixmes\r\n\r\n* Fix lint\r\n\r\n* Add documentation placeholder\r\n\r\n* Remove blank line as requested.\r\n\r\n* Do not override Rlock\r\n\r\n* Remove unecessary super calls\r\n\r\n* Add missing super calls\r\n\r\n* Remove plan files\r\n\r\n* Add missing parameters\r\n\r\n* Rename observe to callback\r\n\r\n* Fix lint\r\n\r\n* Rename to secure_instrument_name\r\n\r\n* Remove locks\r\n\r\n* Fix lint\r\n\r\n* Remove args and kwargs\r\n\r\n* Remove implementation that gives meters access to meter provider\r\n\r\n* Allow creating async instruments with either a callback function or generator\r\n\r\n* add additional test with callback form of observable counter\r\n\r\n* add a test/example that reads measurements from proc stat\r\n\r\n* implement cpu time integration test with generator too\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "metrics_new",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3d44ee515ce6a4e549",
    "number": 2155,
    "body": "# Description\r\n\r\nI think the reason this test has been failing is that it is so slow on pypy+windows that the processor completes a partial, one or even multiple 50ms ticks by the time we start measuring. If the worker is well into a 50ms tick (first or nth), our span will take less than 50ms to be exporter. This PR starts measuring time right before creating the processor as it guarantees the elapsed time will include the processor timeout + the time it takes the processor to initialize. We increase the timeout generously to account for slow processor start.\r\n\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Tooling/dev enhancement\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated existing test\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "windows-batch-exporter-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix slow batch processor test for pypy + windows (#2155)\n\n* wip\r\n\r\n* test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3e44ee515ce6a4e54a",
    "number": 2154,
    "body": "# Description\r\n\r\nThe [specification of Tracing API ](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#get-a-tracer) in 1.4.0 added an optional parameter `schema_url` to the method, `TracerProvider.get_tracer`. This requires addition of `schema_url` field in `InstrumentationInfo` class and updates to API, SDK packages. Tests have been modified to implement and reflect the addition of the optional parameter. \r\n\r\nFixes issue #1971\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nTests have been implemented with `tox` tests \r\n- [x] `tox` tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "Add-SchemaURL-to-TracerProvider-get-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add `schema_url` to `TracerProvider.get_tracer` (#2154)\n\n* add schema_url to TracerProvider.get_tracer\r\n\r\n* update CHANGELOG\r\n\r\n* fix CHANGELOG\r\n\r\n* modify tests and optional parameter in InstrumentationInfo\r\n\r\n* fixed syntax\r\n\r\n* update instrumentation_library_version typed Optional\r\n\r\n* resolve syntax error\r\n\r\n* fix lint failures\r\n\r\n* resolve lint failure"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e3f44ee515ce6a4e54b",
    "number": 2153,
    "body": "Fixes #2150",
    "head_branch": "measurement-concrete-2150",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make measurement a concrete class (#2153)\n\n* Make Measurement a concrete class\r\n\r\n* comments\r\n\r\n* update changelog"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e3f44ee515ce6a4e54c",
    "number": 2152,
    "body": "This provides a mechanism to make it possible to have classes and functions that don't raise errors but instead return NoOps.\r\n\r\nFixes #2148",
    "head_branch": "issue_2148",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4044ee515ce6a4e54d",
    "number": 2147,
    "body": "# Description\r\n\r\nAdds OTLP HTTP exporter as a dependency to `opentelemetry-exporter-otlp` convenience package to make it install together when the convenience package gets installed. \r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "otlp-exporter-add-otlp-http-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add OTLP HTTP exporter as dependency to OTLP exporter package (#2147)\n\n* Add OTLP HTTP exporter as dependency to OTLP exporter package\r\n\r\n* changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4144ee515ce6a4e54e",
    "number": 2146,
    "body": "Since the imported `ReadableSpan` is only used as type annotation there is no behavioral change.\r\n\r\n",
    "head_branch": "fix-gprc-exporter-import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix ReadableSpan import in OTLP grpc exporter (#2146)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4244ee515ce6a4e54f",
    "number": 2145,
    "body": "# Description\r\n\r\nThis PR addresses the following issues for calculating the validity when creating a `SpanContext`:\r\n* validity calculation for trace ID was off by one, so the maximum value for the trace ID (`2^128 -1`) was actually considered invalid.\r\n* span IDs were not checked if they exceed the maximum allowed value of `2^64 - 1`.\r\n* negative values for trace and span IDs were considered valid although they are actually outside the valid range of values due to how python handles signed numbers.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nadds additional unit tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/697\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "fix-trace-id-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix validity calculation for trace/span ID (#2145)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4344ee515ce6a4e550",
    "number": 2139,
    "body": "# Description\r\n\r\n\r\nFixes #2055\r\nFixes #2111\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated and added tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "support-otel-attribute-count-limit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTEL_ATTRIBUTE_COUNT_LIMIT (#2139)\n\n* Add support for OTEL_ATTRIBUTE_COUNT_LIMIT\r\n\r\nFixes #2055\r\nFixes #2111\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4344ee515ce6a4e551",
    "number": 2138,
    "body": "# Description\r\n\r\nExempts resources from attribute limits as is now recommended by the spec: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/common/common.md#exempt-entities\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated existing test\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "exempt-resource-from-limits",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Exempt resource attributes from span limits (#2138)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4444ee515ce6a4e552",
    "number": 2136,
    "body": "As discussed in the SIG last week, the issues backlog is in a good enough place we don't need this workflow anymore.\r\n\r\nSuperseeds #2114 ",
    "head_branch": "codeboten/rm-auto-stale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      " removing workflow to automatically close issues (#2136)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4544ee515ce6a4e553",
    "number": 2135,
    "body": "# Description\r\n\r\nDon't use deprecated method.\r\n```\r\nW1513: Using deprecated decorator abc.abstractclassmethod() (deprecated-decorator)\r\n```\r\n\r\nFixes #2134 \r\nPart of #2123 ",
    "head_branch": "codeboten/abstractclassmethod2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "don't use deprecated abstractclassmethod (#2135)\n\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4644ee515ce6a4e554",
    "number": 2133,
    "body": "# Description\r\nContinuing fixes from pylint 2.11.0 warnings:\r\n```\r\nR1735: Consider using {} instead of dict() (use-dict-literal)\r\n```\r\n\r\nFixes #2132 \r\nPart of #2123 \r\n",
    "head_branch": "codeboten/replace-dict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use {} instead of dict() (#2133)\n\n* use {} instead of dict()\r\n\r\n* fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4744ee515ce6a4e555",
    "number": 2131,
    "body": "# Description\r\n\r\nUpdate code to use fstrings as per pylint 2.11.0 suggestions:\r\n`C0209: Formatting a regular string which could be a f-string (consider-using-f-string)`\r\n\r\nFixes #2130 \r\nPart of #2123 \r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "codeboten/fstrings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use f-strings (#2131)\n\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4844ee515ce6a4e556",
    "number": 2127,
    "body": "# Description\r\n\r\nEnsure all calls to `open` pass an encoding as suggested by pylint:\r\n`W1514: Using open without explicitly specifying an encoding (unspecified-encoding)`\r\n\r\nFixes #2126 \r\nPart of #2123 \r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "codeboten/fix-open",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update open calls to pass encoding (#2127)\n\n* update open calls to pass encoding\r\n\r\n* don't use encoding for binary files\r\n\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4944ee515ce6a4e557",
    "number": 2124,
    "body": "# Description\r\n\r\nClean up imports based on pylint 2.11.0 recommendations.\r\n\r\nPart of #2123\r\nFixes #2125 \r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "codeboten/fix-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix imports based on pylint recommendations (#2124)\n\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4944ee515ce6a4e558",
    "number": 2119,
    "body": "# Description\r\n\r\nUpgrade pylint to 2.11.0\r\n\r\nFixes #2123\r\n",
    "head_branch": "codeboten/pylint-2.11.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update to pylint 2.11.0 (#2119)\n\n* test pylint 2.11.0\r\n\r\n* address last few pylint issues\r\n\r\n* fix mypy\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4a44ee515ce6a4e559",
    "number": 2118,
    "body": "# Description\r\n\r\nThe tests for the logs branch were hanging every so often, especially with pypy3, I tracked the issue down to a missing timeout on force_flush in the `BatchLogProcessor`.\r\n\r\nFixes #2117\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/add-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use timeout in force_flush (#2118)\n\n* use timeout in force_flush\r\n\r\n* fix lint\r\n\r\n* Update opentelemetry-sdk/src/opentelemetry/sdk/logs/export/__init__.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* fix lint\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4b44ee515ce6a4e55a",
    "number": 2115,
    "body": "# Description\r\nThe [auto-instrumentation documentation](https://github.com/open-telemetry/opentelemetry-python/tree/main/docs/examples/auto-instrumentation#additional-resources) readme has a broken link to the [distro](https://github.com/open-telemetry/opentelemetry-python/tree/main/docs/examples/distro) folder.  This PR just fixes the broken link.\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n# How Has This Been Tested?\r\n\r\nThis is just a README update.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nNo \r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixing broken link in README (#2115)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4c44ee515ce6a4e55b",
    "number": 2114,
    "body": "As discussed in the SIG last week, the issues backlog is in a good enough place we don't need this workflow anymore.\r\n",
    "head_branch": "codeboten/rm-auto-stale",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4d44ee515ce6a4e55c",
    "number": 2112,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4e44ee515ce6a4e55d",
    "number": 2110,
    "body": "# Description\r\n\r\nExtended opentelemetry-python to develop a propagator that helps in inter-process propagation of trace/baggage details in a particular format (b3/w3c/any other) using environment dictionary as the carrier.\r\n\r\nUsing environment dictionary as the carrier will help to connect batch processes.\r\nFor example: The environment dictionary containing trace/baggage details can be passed to the next process\r\nin the subprocess call, thereby propagating the trace/baggage details across processes.\r\n\r\nThe propagator has dependency on opentelemetry-api.\r\n\r\nRelates to [opentelemetry-specification issue #740](https://github.com/open-telemetry/opentelemetry-specification/issues/740)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nAll the functions in the propagator have been tested using unittest library.\r\n\r\nFollowing steps can be followed to run the tests:\r\n\r\n1. `cd opentelemetry-python/propagator/opentelemetry-propagator-env`\r\n2. Run the command to install the propagator in editable mode: `pip install -e .[test]`\r\n    For z-shell, use the command: `pip install -e \".[test]\"`\r\n3. Run the tests: `python3 -m unittest`\r\nThen you can uninstall the project by using the command: `pip uninstall opentelemetry-propagator-env`\r\nyou could also run individual test files by using the command format: `python3 -m unittest tests.<test_file_name>.<test_file_class>`\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/env_propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4e44ee515ce6a4e55e",
    "number": 2109,
    "body": "This looks like leftover from the transition back to the core repo.",
    "head_branch": "codeboten/fix-setup-cfg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix opentelemetry-instrumentation setup.cfg (#2109)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e4f44ee515ce6a4e55f",
    "number": 2108,
    "body": "# Description\r\n\r\nRather than cloning the contrib repo, tox now installs the packages directly from the contrib repository in github. It uses the env variable `CONTRIB_REPO_SHA` to determine what commit to use when installing the packages. It defaults to `main` unless specified. In the CI, that env variable is set, so we should be good to go.\r\n\r\nThis is a followup to https://github.com/open-telemetry/opentelemetry-python/pull/2105, will rebase once that's merged.",
    "head_branch": "codeboten/devtools2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove dependency on contrib repo to run tox (#2108)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5044ee515ce6a4e560",
    "number": 2107,
    "body": null,
    "head_branch": "merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge main into logs (#2107)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e5144ee515ce6a4e561",
    "number": 2105,
    "body": "# Description\r\n\r\nFirst step towards making developer experience more intuitive, renamed the tox environments to `opentelemetry-` since `test-core-` isn't really clear. This allows users to run\r\n\r\n`tox -e opentelemetry-api` or `tox -e opentelemetry-sdk` to run tests which is to me makes more sense. Would love others' input of course. `opentelemetry-protobuf` is the only package that doesn't match its directory name, because `opentelemetry-proto` caused all envs for exporters with the words proto in their names to also run due to tox factor being used.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/devtools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rename test-core env to opentelemetry (#2105)\n\nImprove test suite\r\n\r\n- rename test-core env to opentelemetry\r\n- for now separate what used to be 'core' packages in CI\r\n- use protobuf instead of proto"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5244ee515ce6a4e562",
    "number": 2103,
    "body": "# Description\r\n\r\nThis introduces internal `parse_headers` method following the spec for reading headers via environment variables. Fixes #1949 ",
    "head_branch": "issue-1949",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix incorrect headers parsing via environment variables (#2103)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5344ee515ce6a4e563",
    "number": 2101,
    "body": "# Description\r\n\r\nThis is a new test base class that starts a localhost HTTP server. It is used for tests in this contrib PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/661\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis is a test utility. It has not been tested by itself.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nNo, but this change is required for a contrib PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/661\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- ~~[ ] Unit tests have been added~~\r\n- ~~[ ] Documentation has been updated~~\r\n",
    "head_branch": "http-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add test base class with local HTTP server. (#2101)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5344ee515ce6a4e564",
    "number": 2099,
    "body": "# Description\r\n\r\nThe following PR proposes a `ConsoleExporter` for logging, this can be useful for debugging.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/add-console-log-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add a ConsoleExporter for logging (#2099)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e5444ee515ce6a4e565",
    "number": 2097,
    "body": "# Description\r\n\r\nFixes #2094",
    "head_branch": "issue-2094",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not skip sequence attribute on decode error (#2097)\n\nDo not skip sequence attribute on decode error\r\n\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5544ee515ce6a4e566",
    "number": 2096,
    "body": "# Description\r\n\r\nFixes #2095",
    "head_branch": "issur-2095",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not count invalid attributes for dropped (#2096)\n\nDo not count invalid attributes for dropped\r\n\r\n\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5644ee515ce6a4e567",
    "number": 2093,
    "body": "# Description\r\n\r\nFixes #2062 \r\n\r\n",
    "head_branch": "issue-2062",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add entry point for exporters with default protocol (#2093)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5744ee515ce6a4e568",
    "number": 2090,
    "body": "Fixes #2089",
    "head_branch": "issue_2089",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5744ee515ce6a4e569",
    "number": 2088,
    "body": null,
    "head_branch": "issue_2087",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5844ee515ce6a4e56a",
    "number": 2085,
    "body": "# Description\r\n\r\nCurrently the read the docs call this library beta, which it no longer is. I've also added links to the metrics and logs branches.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/update-docs-index",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update index.rst (#2085)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5944ee515ce6a4e56b",
    "number": 2084,
    "body": "# Description\r\n\r\nUpdate base test class to have more consistent assertion methods with rest of Python ecosystem.\r\n\r\n- [x] Dev/Tooling enchancement\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Existing Tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/641\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-base-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename base test assertion methods for consistency (#2084)\n\n* Rename base test assertion methods for consistency\r\n\r\n* Renamed assertion method\r\n\r\n* Updated contrib SHA\r\n\r\n* Updated contrib SHA"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5a44ee515ce6a4e56c",
    "number": 2082,
    "body": "# Description\r\n\r\nGenerate website docs\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-website-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated website docs (#2082)\n\n* Updated website docs\r\n\r\n* Update docs/getting-started.rst\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5b44ee515ce6a4e56d",
    "number": 2080,
    "body": "Fixes #2072",
    "head_branch": "issue_2072",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Escape reserved characters in baggage keys (#2080)\n\n* Escape reserved characters in baggage keys\r\n\r\nFixes #2072\r\n\r\n* Add extract tests\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5c44ee515ce6a4e56e",
    "number": 2079,
    "body": "Fixes #2071",
    "head_branch": "issue_2071",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not count skipped baggage entries (#2079)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5d44ee515ce6a4e56f",
    "number": 2077,
    "body": "# Description\r\n\r\nUpdate to latest released version of spec https://github.com/open-telemetry/opentelemetry-specification/releases/tag/v1.6.1.",
    "head_branch": "bump-semconv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update to semantic conventions v1.6.1 (#2077)\n\n* Update to semantic conventions v1.6.1\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5d44ee515ce6a4e570",
    "number": 2076,
    "body": "Fixes #2075",
    "head_branch": "issue_2075",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix lint (#2076)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5e44ee515ce6a4e571",
    "number": 2074,
    "body": "Fixes #2073\r\n\r\nStill in draft until I figure out how to add a test case for this change.",
    "head_branch": "issue_2073",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e5f44ee515ce6a4e572",
    "number": 2070,
    "body": "# Description\r\n\r\nThis speeds up tox as pip knows exactly what to install. Otherwise pip\r\ndownloads multiple versions of requests slowing things down.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Dev/Tooling enchancement\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests pass\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-getting-started-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use exact dep versions in getting started docs tests (#2070)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6044ee515ce6a4e573",
    "number": 2069,
    "body": null,
    "head_branch": "release/1.5.0-0.24b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.5.0-0.24b0 (#2069)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6144ee515ce6a4e574",
    "number": 2068,
    "body": null,
    "head_branch": "release/1.6.0-0.24b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6144ee515ce6a4e575",
    "number": 2064,
    "body": "# Description\r\n\r\nAdd ability to connect to zipkin server by providing ca bundle and client side authentication cert and key.\r\nThis will use environments add in this [PR](https://github.com/open-telemetry/opentelemetry-python/pull/2063)\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2063\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6244ee515ce6a4e576",
    "number": 2063,
    "body": "# Description\r\n\r\nAdded environment variable to pass ca bundle for zipkin and client side certificate and key.\r\nThese variables will be used by the changes suggested this this [PR](https://github.com/open-telemetry/opentelemetry-python/pull/2064)\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6344ee515ce6a4e577",
    "number": 2061,
    "body": "# Description\r\n\r\nwas following the auto-instrumentation example under docs. it is missing `pip install flask` to work correctly.\r\n\r\nFixes #2060  (issue)\r\nadd the pip install command to README\r\n\r\n## Type of change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nRun it locally on my fresh setup and got an error about \"No module named 'flask'\". After installing it as part of the setup the example wroks\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\nNo\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "auto-instrumentation-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs(auto-instrument): add missing pip install in README (#2061)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6444ee515ce6a4e578",
    "number": 2059,
    "body": "Fixes #2058 ",
    "head_branch": "issue_2058",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6544ee515ce6a4e579",
    "number": 2057,
    "body": "# Description\r\n\r\nAccording to the spec:\r\n\r\n> The attribute key, which MUST be a non-null and non-empty string.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/common/common.md\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n- [x] Unit tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "restrict-attr-keys-to-strings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Restrict attribute keys to non-empty strings (#2057)\n\nAccording to the spec:\r\n\r\n> The attribute key, which MUST be a non-null and non-empty string.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/common/common.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6644ee515ce6a4e57a",
    "number": 2056,
    "body": "# Description\r\n\r\nFixes #2051\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Manually\r\n- [x] Added/updated tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-2051",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for `OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT` env var (#2056)\n\n* Added support for `OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT`\r\n\r\nFixes #2045\r\nFixes #2043\r\nFixes #2042\r\nFixes #2041"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6744ee515ce6a4e57b",
    "number": 2054,
    "body": "# Description\r\n\r\nLimit env vars set to an empty value will be treated as unset/unlimited.\r\n\r\n\r\nFixes #2052 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Manually tests\r\n- [ ] Updated exsiting tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-2052",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix limit env vars unset/unlimited values (#2054)\n\n* Added support for `OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT`\r\n\r\nFixes #2045\r\nFixes #2043\r\nFixes #2042\r\nFixes #2041\r\n\r\n* SpanLimit: Treat empty value env vars as unset\r\n\r\nFixes #2052\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6744ee515ce6a4e57c",
    "number": 2053,
    "body": "Found someone running into issues here https://github.com/open-telemetry/opentelemetry-python/issues/2024.",
    "head_branch": "use-bsp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update getting-started guide (#2053)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6844ee515ce6a4e57d",
    "number": 2050,
    "body": "# Description\r\n\r\nPart 6 of #1890 . This add sdk documentation and basic example with config for exporting data to OTEL collector.",
    "head_branch": "add-docs-example",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update SDK docs and Add example with OTEL collector logging (debug) exporter (#2050)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e6944ee515ce6a4e57e",
    "number": 2046,
    "body": "# Description\r\n\r\nAdd instructions for auto-instrumentation\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6a44ee515ce6a4e57f",
    "number": 2044,
    "body": "# Description\r\nAdded support for `OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT`, `OTEL_LINK_ATTRIBUTE_COUNT_LIMIT` & `OTEL_EVENT_ATTRIBUTE_COUNT_LIMIT`, and fixes a number of bugs.\r\n\r\nFixes #2045\r\nFixes #2043\r\nFixes #2042\r\nFixes #2041\r\n\r\n\r\nOtel Specification: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/sdk-environment-variables.md#span-limits-\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added/updated tests\r\n- [x]  Manual testing\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "span-attr-length-limit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added support for `OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT` (#2044)\n\nFixes #2045\r\nFixes #2043\r\nFixes #2042\r\nFixes #2041"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6b44ee515ce6a4e580",
    "number": 2040,
    "body": null,
    "head_branch": "comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix sampling comment (#2040)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6b44ee515ce6a4e581",
    "number": 2039,
    "body": "# Description\r\n\r\nThis PR fixes typos where `it's` (“it is”) is written, but context indicates `its` (possessive) is intended.\r\n\r\nThere is no open issue for these typos. I have marked it as a bug fix since some typos are user-visible.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI did not test it at all, since it contains only trivial string changes.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated **Do you update changelogs for trivial fixes like this?**\r\n- [ ] Unit tests have been added **not applicable**\r\n- [ ] Documentation has been updated **not applicable**\r\n",
    "head_branch": "its",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typos of “it's” where “its” is meant (#2039)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6c44ee515ce6a4e582",
    "number": 2037,
    "body": null,
    "head_branch": "logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6d44ee515ce6a4e583",
    "number": 2036,
    "body": null,
    "head_branch": "codeboten/update-contrib-sha",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update contrib SHA (#2036)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6e44ee515ce6a4e584",
    "number": 2031,
    "body": "This is a workaround for @overmeulen ",
    "head_branch": "workaround",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e6f44ee515ce6a4e585",
    "number": 2029,
    "body": "if you copy the example of the documentation, the name of the service will be \"unkown_service\"\r\n\r\n![image](https://user-images.githubusercontent.com/14133711/128786741-06ffe4b5-1649-4638-91b6-26e113d886d7.png)\r\n\r\n",
    "head_branch": "update-doc-example-jaeger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update __init__.py (#2029)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7044ee515ce6a4e586",
    "number": 2028,
    "body": "Fixes #2027",
    "head_branch": "issue_2027",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Nathaniel to approvers list (#2028)\n\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: (Eliseo) Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7144ee515ce6a4e587",
    "number": 2026,
    "body": "With @lzchen, @ocelotl & @owais in the maintainer group, I'm moving over to an approver role.\r\n",
    "head_branch": "codeboten/maintainer-to-approver",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "update codeboten from maintainer -> approver (#2026)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7144ee515ce6a4e588",
    "number": 2025,
    "body": "Fixes #2003",
    "head_branch": "issue_2003",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Owais to maintainers list (#2025)\n\nFixes #2003\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7244ee515ce6a4e589",
    "number": 2023,
    "body": "Following the auto-instrumentation README and examples, I encountered 2 inconsistencies between doc and code, so I fixed the documentation:\r\n\r\nfix: documentation on \"Well known exporters\" -> zipkin doesn't exist but zipkin_json and zipkin_proto exist, etc. Thanks @ocelotl \r\nfix: documentation env var is not OTEL_TRACE_EXPORTER but OTEL_TRACE**S**_EXPORTER",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: documentation on \"Well known exporters\" zipkin -> zipkin_json, etc. (#2023)\n\nfix: documentation OTEL_TRACE_EXPORTER -> OTEL_TRACES_EXPORTER\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7344ee515ce6a4e58a",
    "number": 2022,
    "body": "Fixes #2021\r\n\r\nThis is an attempted workaround for the slow CI running.",
    "head_branch": "issue_2021",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7444ee515ce6a4e58b",
    "number": 2018,
    "body": "The first argument of `traceback.format_exception()` has been renamed from “`etype`” to “`exc`” and is now positional-only. Passing it as a positional argument rather than a keyword argument fixes a `TypeError` on Python 3.10 while remaining compatible with previous Python releases:\r\n  - On Python 3.10, the parameter *should* be the exception object; it is now possible to call `format_exception()` with only the exception object, omitting “`value`” and “`tb`”. Here the type of the exception object is given instead; however, this is OK because “`value`” and “`tb`” are also given, and therefore the positional “`exc`” parameter is ignored and may have any value or type whatsoever.\r\n  - From Python 3.5 to 3.9, the first argument is “`etype`” and is correctly the type of the exception object; however, its actual value is still ignored in favor of the type of “`value`”.\r\n  - Prior to Python 3.5, the “`etype`” would actually be used, if this project supported those Python versions.\r\n\r\nThe changes in the `traceback` module in Python 3.10 are documented at:\r\nhttps://docs.python.org/3.10/library/traceback.html#traceback.print_exception\r\nhttps://docs.python.org/3.10/library/traceback.html#traceback.format_exception\r\nhttps://docs.python.org/3.10/library/traceback.html#traceback.format_exception_only\r\nhttps://docs.python.org/3.10/library/traceback.html#traceback.TracebackException.format_exception_only\r\n\r\n# Description\r\n\r\nSee the formatted commit message text above.\r\n\r\nFixes # (issue)\r\n\r\nNo issue has been filed.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI’m working on updating the `python-opentelemetry` package on Fedora Linux, which I just started maintaining. I can confirm this fixes failing `opentelemetry-opentracing-shim` tests on Fedora Rawhide (the development version) with a pre-release version of Python 3.10. The updated package isn’t yet ready, but fortunately you don’t need to use the same environment as I am to replicate this.\r\n\r\nSuffice it to say that if you try to run the tests on Python 3.10 in *any* environment, you should see a `TypeError` in the `opentelemetry-opentracing-shim` tests, and you should find that this PR fixes it. Furthermore, you can confirm compatibility with Python 3.9 and older by running the tests however you normally run them. Nothing about this PR is sensitive to the particulars of your environment other than the Python version.\r\n\r\n- [x] Run the tests on Python 3.10 and on existing supported Python versions—with no special requirements for the test environment.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added *N/A—this PR only fixes existing test code*\r\n- [ ] Documentation has been updated *N/A—this PR is only an internal change to test code*\r\n",
    "head_branch": "format_exception-etype-python3.10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Handle traceback.format_exception() API change in Python 3.10 (#2018)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7544ee515ce6a4e58c",
    "number": 2017,
    "body": "Fixes #2010",
    "head_branch": "issue_2010",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7644ee515ce6a4e58d",
    "number": 2016,
    "body": "# Description\r\n\r\nUpdate the OTLP over HTTP default port in the examples to match the spec.  This also updates the classifier to `Development Status :: 5 - Production/Stable` as the spec confirmed the port moving forward.\r\n\r\nFixes #2015 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/2015",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update OTLP/HTTP example & test port to 4318 (#2016)\n\n* update OTLP/HTTP port to 4318\r\n\r\n* map 4318->55681 in the collector for now\r\n\r\n* update development status\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7744ee515ce6a4e58e",
    "number": 2013,
    "body": "# Description\r\n\r\nWe want the business metrics `_DEFAULT_RESOURCE` attributes to be set on the resource returned by `get_aggregated_resources()`, and we also want the `service_name` to be set to some default if it is not.\r\n\r\nIn this PR, we update `get_aggregated_resources()` so that it adds both those things, and the `Resource.create()` will call it instead so that it retains all its attributes as before.\r\n\r\nThe `get_aggregated_resources()` method had something _added_ to its API, but other than that nothing API related changes.\r\n\r\nFixes #1996\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "better-aggregate-resource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add default and service name to get_aggregated_resource (#2013)\n\n* Add default & service name to resource aggregator\r\n\r\n* Aggregator calls Resource.create() to set default attributes\r\n\r\n* Allow get aggregated resources to remove defaults"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7744ee515ce6a4e58f",
    "number": 2012,
    "body": "Fixes #2011",
    "head_branch": "fix-2011",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "unpin opentelemetry-api dependency in instrumentation package (#2012)\n\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7844ee515ce6a4e590",
    "number": 2009,
    "body": "Fixes #2008",
    "head_branch": "issue_2008",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove contextvars workaround (#2009)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7944ee515ce6a4e591",
    "number": 2007,
    "body": "Fixes #2006",
    "head_branch": "issue_2006",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unused imports (#2007)\n\nFixes #2006\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7a44ee515ce6a4e592",
    "number": 2002,
    "body": "Fixes #2001",
    "head_branch": "issue_2001",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove deprecated @asyncio.coroutine (#2002)\n\nFixes #2001"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7b44ee515ce6a4e593",
    "number": 1999,
    "body": "",
    "head_branch": "release/1.4.1-0.23b2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "hotfix: 1.4.1 0.23b2 (#1999)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7c44ee515ce6a4e594",
    "number": 1995,
    "body": "Fixes #1994",
    "head_branch": "issue_1994",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7c44ee515ce6a4e595",
    "number": 1992,
    "body": "# Description\r\n\r\nThis adds the validator in the constructor of SpanContext so that we can detect the invalid trace ID as early as possible.\r\n\r\nFixes #1991 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] TestSpanContext\r\n\r\nI added the section in TestSpanContext in `opentelemetry-api/tests/trace/test_span_context.py` to validate Trace ID.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "b-1991",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add validation for Trace ID (#1992)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7d44ee515ce6a4e596",
    "number": 1987,
    "body": "# Description\r\n\r\nThe last release included a bug, the bootstrap generation script was not updated to the released version.\r\n\r\nFixes #1988 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "codeboten/0.23.1-hotfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix opentelemetry-bootstrap bug (#1987)\n\n* fix opentelemetry-bootstrap bug\r\n\r\n* Update CHANGELOG.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7e44ee515ce6a4e597",
    "number": 1985,
    "body": "",
    "head_branch": "1.5-chore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Back to develop after 1.4.0 release (#1985)\n\n* Back to develop after 1.4.0 release\r\n\r\n* update\r\n\r\n* Update SHA\r\n\r\n* Update missed files\r\n\r\n* Update distro version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e7f44ee515ce6a4e598",
    "number": 1984,
    "body": "# Description\r\n\r\nImprove robustness of Jaeger thrift tests that depend on size of serialized spans.\r\n\r\nOne part that is incorporated in the span is the `telemetry.sdk.version`. If the version number becomes too long, some tests may fail because the maximum packet size is exceeded. If the version number becomes too short, other tests may fail because a Batch was split into fewer packets than expected.\r\n\r\nWe ran into this internally at Dynatrace where we have a use-case where we replace the version with something including a timestamp.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis _is_ a test improvement.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project: See build\r\n-  ~~Changelogs have been updated~~: N/A\r\n- [X] Unit tests have been added\r\n-  ~~Documentation has been updated~~\r\n",
    "head_branch": "jaeger-split-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make test deterministic. (#1984)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8044ee515ce6a4e599",
    "number": 1983,
    "body": "Fixes #1982 ",
    "head_branch": "issue_1982",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add pre and post instrument entrypoints (#1983)\n\n* Add pre and post instrument entry points\r\n\r\nFixes #1982\r\n\r\n\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8144ee515ce6a4e59a",
    "number": 1980,
    "body": "Fixes #1979\r\n\r\n",
    "head_branch": "codeboten/add-ocelotl-maintainer",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add ocelotl to maintainers list (#1980)\n\nFixes #1979"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8144ee515ce6a4e59b",
    "number": 1977,
    "body": "",
    "head_branch": "codeboten/patch-publish-workflow",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Listen for publish events (#1977)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8244ee515ce6a4e59c",
    "number": 1976,
    "body": "",
    "head_branch": "codeboten/update-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update changelog date (#1976)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8344ee515ce6a4e59d",
    "number": 1974,
    "body": "# Description\r\n\r\nAdd the LICENSE file and the tests directory to the package published to PyPi.\r\n\r\nFixes #1973 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI built a package locally.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-license-tests-to-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation: Add LICENSE + tests (#1974)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8444ee515ce6a4e59e",
    "number": 1969,
    "body": "Fixes #1968\r\n\r\nThis PR makes all `OTEL_`-prefixed environment variables to be loaded as options for `opentelemetry-instrument`.\r\n\r\nThe `opentelemetry-instrument --help` command now shows this:\r\n\r\n```\r\nusage: opentelemetry-instrument [-h]\r\n                                [--OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT]\r\n                                [--OTEL_BSP_EXPORT_TIMEOUT OTEL_BSP_EXPORT_TIMEOUT]\r\n                                [--OTEL_BSP_MAX_EXPORT_BATCH_SIZE OTEL_BSP_MAX_EXPORT_BATCH_SIZE]\r\n                                [--OTEL_BSP_MAX_QUEUE_SIZE OTEL_BSP_MAX_QUEUE_SIZE]\r\n                                [--OTEL_BSP_SCHEDULE_DELAY OTEL_BSP_SCHEDULE_DELAY]\r\n                                [--OTEL_EVENT_ATTRIBUTE_COUNT_LIMIT OTEL_EVENT_ATTRIBUTE_COUNT_LIMIT]\r\n                                [--OTEL_EXPORTER_JAEGER_AGENT_HOST OTEL_EXPORTER_JAEGER_AGENT_HOST]\r\n                                [--OTEL_EXPORTER_JAEGER_AGENT_PORT OTEL_EXPORTER_JAEGER_AGENT_PORT]\r\n                                [--OTEL_EXPORTER_JAEGER_AGENT_SPLIT_OVERSIZED_BATCHES OTEL_EXPORTER_JAEGER_AGENT_SPLIT_OVERSIZED_BATCHES]\r\n                                [--OTEL_EXPORTER_JAEGER_CERTIFICATE OTEL_EXPORTER_JAEGER_CERTIFICATE]\r\n                                [--OTEL_EXPORTER_JAEGER_ENDPOINT OTEL_EXPORTER_JAEGER_ENDPOINT]\r\n                                [--OTEL_EXPORTER_JAEGER_PASSWORD OTEL_EXPORTER_JAEGER_PASSWORD]\r\n                                [--OTEL_EXPORTER_JAEGER_TIMEOUT OTEL_EXPORTER_JAEGER_TIMEOUT]\r\n                                [--OTEL_EXPORTER_JAEGER_USER OTEL_EXPORTER_JAEGER_USER]\r\n                                [--OTEL_EXPORTER_OTLP_CERTIFICATE OTEL_EXPORTER_OTLP_CERTIFICATE]\r\n                                [--OTEL_EXPORTER_OTLP_COMPRESSION OTEL_EXPORTER_OTLP_COMPRESSION]\r\n                                [--OTEL_EXPORTER_OTLP_ENDPOINT OTEL_EXPORTER_OTLP_ENDPOINT]\r\n                                [--OTEL_EXPORTER_OTLP_HEADERS OTEL_EXPORTER_OTLP_HEADERS]\r\n                                [--OTEL_EXPORTER_OTLP_PROTOCOL OTEL_EXPORTER_OTLP_PROTOCOL]\r\n                                [--OTEL_EXPORTER_OTLP_TIMEOUT OTEL_EXPORTER_OTLP_TIMEOUT]\r\n                                [--OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE]\r\n                                [--OTEL_EXPORTER_OTLP_TRACES_COMPRESSION OTEL_EXPORTER_OTLP_TRACES_COMPRESSION]\r\n                                [--OTEL_EXPORTER_OTLP_TRACES_ENDPOINT OTEL_EXPORTER_OTLP_TRACES_ENDPOINT]\r\n                                [--OTEL_EXPORTER_OTLP_TRACES_HEADERS OTEL_EXPORTER_OTLP_TRACES_HEADERS]\r\n                                [--OTEL_EXPORTER_OTLP_TRACES_PROTOCOL OTEL_EXPORTER_OTLP_TRACES_PROTOCOL]\r\n                                [--OTEL_EXPORTER_OTLP_TRACES_TIMEOUT OTEL_EXPORTER_OTLP_TRACES_TIMEOUT]\r\n                                [--OTEL_EXPORTER_ZIPKIN_ENDPOINT OTEL_EXPORTER_ZIPKIN_ENDPOINT]\r\n                                [--OTEL_EXPORTER_ZIPKIN_TIMEOUT OTEL_EXPORTER_ZIPKIN_TIMEOUT]\r\n                                [--OTEL_LINK_ATTRIBUTE_COUNT_LIMIT OTEL_LINK_ATTRIBUTE_COUNT_LIMIT]\r\n                                [--OTEL_LOG_LEVEL OTEL_LOG_LEVEL]\r\n                                [--OTEL_RESOURCE_ATTRIBUTES OTEL_RESOURCE_ATTRIBUTES]\r\n                                [--OTEL_SERVICE_NAME OTEL_SERVICE_NAME]\r\n                                [--OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT]\r\n                                [--OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT]\r\n                                [--OTEL_SPAN_EVENT_COUNT_LIMIT OTEL_SPAN_EVENT_COUNT_LIMIT]\r\n                                [--OTEL_SPAN_LINK_COUNT_LIMIT OTEL_SPAN_LINK_COUNT_LIMIT]\r\n                                [--OTEL_TRACES_SAMPLER OTEL_TRACES_SAMPLER]\r\n                                [--OTEL_TRACES_SAMPLER_ARG OTEL_TRACES_SAMPLER_ARG]\r\n                                [--OTEL_PYTHON_DISABLED_INSTRUMENTATIONS OTEL_PYTHON_DISABLED_INSTRUMENTATIONS]\r\n                                [--OTEL_PROPAGATORS OTEL_PROPAGATORS]\r\n                                [--OTEL_PYTHON_CONTEXT OTEL_PYTHON_CONTEXT]\r\n                                [--OTEL_PYTHON_ID_GENERATOR OTEL_PYTHON_ID_GENERATOR]\r\n                                [--OTEL_PYTHON_TRACER_PROVIDER OTEL_PYTHON_TRACER_PROVIDER]\r\n                                [--OTEL_TRACES_EXPORTER OTEL_TRACES_EXPORTER]\r\n                                command ...\r\n\r\nopentelemetry-instrument automatically instruments a Python program and its\r\ndependencies and then runs the program.\r\n\r\npositional arguments:\r\n  command               Your Python application.\r\n  command_args          Arguments for your application.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  --OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT\r\n  --OTEL_BSP_EXPORT_TIMEOUT OTEL_BSP_EXPORT_TIMEOUT\r\n  --OTEL_BSP_MAX_EXPORT_BATCH_SIZE OTEL_BSP_MAX_EXPORT_BATCH_SIZE\r\n  --OTEL_BSP_MAX_QUEUE_SIZE OTEL_BSP_MAX_QUEUE_SIZE\r\n  --OTEL_BSP_SCHEDULE_DELAY OTEL_BSP_SCHEDULE_DELAY\r\n  --OTEL_EVENT_ATTRIBUTE_COUNT_LIMIT OTEL_EVENT_ATTRIBUTE_COUNT_LIMIT\r\n  --OTEL_EXPORTER_JAEGER_AGENT_HOST OTEL_EXPORTER_JAEGER_AGENT_HOST\r\n  --OTEL_EXPORTER_JAEGER_AGENT_PORT OTEL_EXPORTER_JAEGER_AGENT_PORT\r\n  --OTEL_EXPORTER_JAEGER_AGENT_SPLIT_OVERSIZED_BATCHES OTEL_EXPORTER_JAEGER_AGENT_SPLIT_OVERSIZED_BATCHES\r\n  --OTEL_EXPORTER_JAEGER_CERTIFICATE OTEL_EXPORTER_JAEGER_CERTIFICATE\r\n  --OTEL_EXPORTER_JAEGER_ENDPOINT OTEL_EXPORTER_JAEGER_ENDPOINT\r\n  --OTEL_EXPORTER_JAEGER_PASSWORD OTEL_EXPORTER_JAEGER_PASSWORD\r\n  --OTEL_EXPORTER_JAEGER_TIMEOUT OTEL_EXPORTER_JAEGER_TIMEOUT\r\n  --OTEL_EXPORTER_JAEGER_USER OTEL_EXPORTER_JAEGER_USER\r\n  --OTEL_EXPORTER_OTLP_CERTIFICATE OTEL_EXPORTER_OTLP_CERTIFICATE\r\n  --OTEL_EXPORTER_OTLP_COMPRESSION OTEL_EXPORTER_OTLP_COMPRESSION\r\n  --OTEL_EXPORTER_OTLP_ENDPOINT OTEL_EXPORTER_OTLP_ENDPOINT\r\n  --OTEL_EXPORTER_OTLP_HEADERS OTEL_EXPORTER_OTLP_HEADERS\r\n  --OTEL_EXPORTER_OTLP_PROTOCOL OTEL_EXPORTER_OTLP_PROTOCOL\r\n  --OTEL_EXPORTER_OTLP_TIMEOUT OTEL_EXPORTER_OTLP_TIMEOUT\r\n  --OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE\r\n  --OTEL_EXPORTER_OTLP_TRACES_COMPRESSION OTEL_EXPORTER_OTLP_TRACES_COMPRESSION\r\n  --OTEL_EXPORTER_OTLP_TRACES_ENDPOINT OTEL_EXPORTER_OTLP_TRACES_ENDPOINT\r\n  --OTEL_EXPORTER_OTLP_TRACES_HEADERS OTEL_EXPORTER_OTLP_TRACES_HEADERS\r\n  --OTEL_EXPORTER_OTLP_TRACES_PROTOCOL OTEL_EXPORTER_OTLP_TRACES_PROTOCOL\r\n  --OTEL_EXPORTER_OTLP_TRACES_TIMEOUT OTEL_EXPORTER_OTLP_TRACES_TIMEOUT\r\n  --OTEL_EXPORTER_ZIPKIN_ENDPOINT OTEL_EXPORTER_ZIPKIN_ENDPOINT\r\n  --OTEL_EXPORTER_ZIPKIN_TIMEOUT OTEL_EXPORTER_ZIPKIN_TIMEOUT\r\n  --OTEL_LINK_ATTRIBUTE_COUNT_LIMIT OTEL_LINK_ATTRIBUTE_COUNT_LIMIT\r\n  --OTEL_LOG_LEVEL OTEL_LOG_LEVEL\r\n  --OTEL_RESOURCE_ATTRIBUTES OTEL_RESOURCE_ATTRIBUTES\r\n  --OTEL_SERVICE_NAME OTEL_SERVICE_NAME\r\n  --OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT\r\n  --OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT\r\n  --OTEL_SPAN_EVENT_COUNT_LIMIT OTEL_SPAN_EVENT_COUNT_LIMIT\r\n  --OTEL_SPAN_LINK_COUNT_LIMIT OTEL_SPAN_LINK_COUNT_LIMIT\r\n  --OTEL_TRACES_SAMPLER OTEL_TRACES_SAMPLER\r\n  --OTEL_TRACES_SAMPLER_ARG OTEL_TRACES_SAMPLER_ARG\r\n  --OTEL_PYTHON_DISABLED_INSTRUMENTATIONS OTEL_PYTHON_DISABLED_INSTRUMENTATIONS\r\n  --OTEL_PROPAGATORS OTEL_PROPAGATORS\r\n  --OTEL_PYTHON_CONTEXT OTEL_PYTHON_CONTEXT\r\n  --OTEL_PYTHON_ID_GENERATOR OTEL_PYTHON_ID_GENERATOR\r\n  --OTEL_PYTHON_TRACER_PROVIDER OTEL_PYTHON_TRACER_PROVIDER\r\n  --OTEL_TRACES_EXPORTER OTEL_TRACES_EXPORTER\r\n```",
    "head_branch": "issue_1968",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Load environment variables as options for opentelemetry-instrument (#1969)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8544ee515ce6a4e59f",
    "number": 1967,
    "body": "",
    "head_branch": "refactor_environment_variables",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8544ee515ce6a4e5a0",
    "number": 1966,
    "body": "This is a proposed refactoring of the distro mechanism. This PR is being opened so that the general approach can be reviewed, formal tests are still pending.\r\n\r\nIt implements [solution B](https://github.com/open-telemetry/opentelemetry-python/discussions/1960#discussion-3463736).\r\n\r\nI found a few issues with the current distro mechanism:\r\n\r\n1. There is redundancy between `Distro`s and `Configurator`s. Both perform configuration. \r\n2. We require a `Distro` to be installed for `opentelemtetry-instrumentation` to work. I disagree with this because `opentelemetry-instrumentation` is something that is (at least partially) defined in the spec, `Distro` is not.\r\n3. `opentelemetry-instrumentation` is directly coupled with `Distro`. `Distro` is a configuration mechanism that may not be preferred by the end user who may prefer to configure instead with a configuration file or a bash script, etc.\r\n\r\nTo solve these issues, this PR does the following, respectively:\r\n\r\n1. I find `Configurator` to have the most representative name, so this PR removes `Distro` and refactors `Configurator`.\r\n2. Having a `Configurator` is no longer required for `opentelemetry-instrumentation` to work.\r\n3. `opentelemetry-instrumentation` now provides 2 entry points, one for plugins that are called before instrumentation and other for plugins that are called after instrumentation. `Configurator` is decoupled from `opentelemetry-instrumentation` by making it a plugin that is called before instrumentation.\r\n\r\n`opentelemetry-configurator` provides an entry point by itself. In this way several `Configurator`s can be registered and several can be called in the order defined by the environment variable `OTEL_PYTHON_CONFIGURATORS` if there is more than one `Configurator` installed.\r\n\r\n`Configurator`s are classes. This approach makes it possible to share common configuration by just inheriting from another one and calling `super`.",
    "head_branch": "refactor-distros",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8644ee515ce6a4e5a1",
    "number": 1965,
    "body": "",
    "head_branch": "release/1.4.0-0.23b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.4.0-0.23b0 (#1965)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8744ee515ce6a4e5a2",
    "number": 1962,
    "body": "This reverts commit bb41b81093d4010dadb233f146e8ba04973ec5a3.\r\n\r\nFixes #1961",
    "head_branch": "issue_1961",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert \"updating changelogs and version to 1.4.0-0.23b0 (#1956)\" (#1962)\n\nThis reverts commit bb41b81093d4010dadb233f146e8ba04973ec5a3."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8844ee515ce6a4e5a3",
    "number": 1959,
    "body": "Fixes #1958\r\n",
    "head_branch": "issue_1958",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add opentelemetry-instrumentation (#1959)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8944ee515ce6a4e5a4",
    "number": 1956,
    "body": "",
    "head_branch": "release/1.4.0-0.23b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.4.0-0.23b0 (#1956)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8a44ee515ce6a4e5a5",
    "number": 1955,
    "body": "Fixes #1954",
    "head_branch": "issue_1954",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use basename to get file name (#1955)\n\nFixes #1954"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8b44ee515ce6a4e5a6",
    "number": 1953,
    "body": "Fixes minor typos in tests",
    "head_branch": "fix-log-test-typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typos in test_handler.py (#1953)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8b44ee515ce6a4e5a7",
    "number": 1952,
    "body": "# Description\r\n\r\nThis gives users the ability to inject custom attributes into emitted logs.\r\n\r\nI think this should solve the discussion in https://github.com/open-telemetry/opentelemetry-python/pull/1903/files#r653092699\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI added 2 tests for the functionality verifying that the attributes end up in the emitted LogRecord and that the user can specify a sub-key to pull attributes from.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "custom-attributes-log-handler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for user defined attributes in OTLPHandler (#1952)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e8c44ee515ce6a4e5a8",
    "number": 1951,
    "body": "",
    "head_branch": "release/1.4.0-0.23b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8d44ee515ce6a4e5a9",
    "number": 1950,
    "body": "",
    "head_branch": "release/1.5.0.dev0-0.24.dev0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e8e44ee515ce6a4e5aa",
    "number": 1947,
    "body": "",
    "head_branch": "logs-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[no need for review] Merge main into logs (#1947)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e8f44ee515ce6a4e5ab",
    "number": 1946,
    "body": "# Description\r\n\r\nUpdates the semantic conventions constants to the [v1.5.0 tag](https://github.com/open-telemetry/opentelemetry-specification/tree/v1.5.0/specification/resource/semantic_conventions) using the `./scripts/semconv/generate.sh` script.\r\n\r\nAdditionally, after learning how to run the script by updating the Docker image tag with @lonewolf3739 's help from [this Slack message](https://cloud-native.slack.com/archives/C01PD4HUVBL/p1625870622183400), I thought it would be helpful to pull that tag version out as a variable in the `generate.sh` script.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nI manually checked all the variables which changed and ensured that no one in contrib or core was using them. Other than that no tests are needed.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/587 (POST MERGE EDIT: In retrospect even though it doesn't BREAK Contrib, we should probably move the Contrib forward at the same time.)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~ (Not needed?)\r\n",
    "head_branch": "update-specifications-to-1.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Generate semconv constants update for OTel Spec 1.5.0 (#1946)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9044ee515ce6a4e5ac",
    "number": 1943,
    "body": "# Description\r\n\r\nPart-5 for #1890",
    "head_branch": "logs-otlp-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTLP Log exporter (#1943)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9144ee515ce6a4e5ad",
    "number": 1942,
    "body": "Fixes #1941",
    "head_branch": "issue_1941",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not check every string character (#1942)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9144ee515ce6a4e5ae",
    "number": 1940,
    "body": "# Description\r\n\r\nThis PR fixes some code formatting issues in the documentation for the Django instrumentation example. It also corrects the instructions on how to auto-instrument a Django application (i.e. use `opentelemetry-instrument` instead of `opentelemetry-instrumentation`).\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n(This is the documentation update).\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Run `tox -e docs` locally to confirm proper formatting\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "update_instrumentation_docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix formatting errors in Django instrumentation example docs (#1940)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9244ee515ce6a4e5af",
    "number": 1937,
    "body": "# Description\r\n\r\nIn order to make it easier for users to write distros, we remove the useful code in the `opentelemetry-distro` package and make it available to all distros in the `opentelemetry-sdk` package.\r\n\r\n## Important points\r\n\r\n- Every distro must provide a `Configurator` and a `Distro`.\r\n\r\n- The Configurator can simply subclass `_OTelSDKConfigurator` which provides a default initalization of `TracerProvider` among other things. However, this class should never be instantiated itself. `Configurators` should belong to distros.\r\n\r\n- No dependencies changed because\r\n  - `opentelemetry-distro` depends on `opentelemetry-sdk`\r\n  - `opentelemetry-sdk` depends on `opentelemetry-instrumentation`\r\n  - `opentelemetry-distro` depends on `opentelemetry-instrumentation`\r\n  - Therefore, you still only need to `pip install opentelemetry-distro` to get started with Auto Instrumentation\r\n\r\n- I tried to do something clever to preserve git history when moving `opentelemetry-distro` -> `opentelemetry-sdk` but I'm worried it will be lost in the Squash & Merge :]\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/551\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI used editable installs (e.g. `pip install -e ~/my/repo/path/opentelemetry-python/optelemetry-distro`) to verify that I can still use the Auto Instrumentation executable `opentelemetry-instrument python3 my_app.py` and the distro still gets asked to configure OTel Python.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [ ] Unit tests have been added~ (We didn't ADD any tests but we did move the related Configurator tests to the `test-core-sdk` test suite!)\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "default-configurators-do-more-for-distros",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Default configurators do more for distros (#1937)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9344ee515ce6a4e5b0",
    "number": 1933,
    "body": "# Description\r\n\r\nThis changes the dependency for packages to match the major version for API and SDK packages. This allows users more freedom to use packages with various versions, including experimental ones. I've left pinned version for specific packages that I think will still need specific versions. But after this change has been merged and the next version released, I think we should be able to move away from having to release all packages with every release and only release packages for code that has changed.\r\n\r\nFixes #1924\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n",
    "head_branch": "codeboten/unpin-api-sdk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "require dependency for api/sdk to match major version (#1933)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9444ee515ce6a4e5b1",
    "number": 1932,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\nJust fixes an addition to the wrong bit of the changelog.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- No tests, just documentation\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "move fix to correct section in changelog (#1932)\n\nCo-authored-by: alrex <alrex.boten@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9544ee515ce6a4e5b2",
    "number": 1928,
    "body": "# Description\r\n\r\nNoticed some people mistakenly configuring `SimpleSpanProcessor`(picked up from our guides) in prod environment. This updates all examples to use `BatchSpanProcessor`.",
    "head_branch": "update-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use BatchSpanProcessor in examples (#1928)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9544ee515ce6a4e5b3",
    "number": 1927,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1814\r\n\r\nSplit exported spans based of Resource and InstrumentationInfo.",
    "head_branch": "bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix OTLP exporter not grouping exported spans properly (#1927)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9644ee515ce6a4e5b4",
    "number": 1925,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1888",
    "head_branch": "hot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add excerpt for hotfixes (#1925)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9744ee515ce6a4e5b5",
    "number": 1920,
    "body": "# Description\r\n\r\nA quick PR to update the Zoom meeting link to the one on the OTel Public Calendar",
    "head_branch": "update-meeting-link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Zoom meeting link to match calendar (#1920)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9844ee515ce6a4e5b6",
    "number": 1916,
    "body": "# Description\r\n\r\nPart-4 of #1890. This PR adds support for log processors implementation.\r\n\r\n",
    "head_branch": "logs-processor-impl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add LogProcessors implementation (#1916)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e9944ee515ce6a4e5b7",
    "number": 1915,
    "body": "# Description\r\n\r\nContinuing towards making attributes consistent across Span, Link, Event and Resource by utilizing BoundedDict everywhere. Added `BoundedDict` to the API to make it available for `Link` which is defined in the API. Marked `BoundedDict` in the SDK as deprecated as a result. This is getting us one step closer to supporting dropped attribute counts in the exporters. One question I have for reviewers is whether the BoundedDict should be in `opentelemetry.attributes` or not, it could live in utils or something like that instead.\r\n\r\nFixes #1906 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/api-bounded-dict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use BoundedAttributes for attributes in link, event, resource, spans (#1915)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9944ee515ce6a4e5b8",
    "number": 1914,
    "body": "N/A",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Typo fixes (#1914)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9a44ee515ce6a4e5b9",
    "number": 1911,
    "body": "# Description\r\n\r\nFix formatting of unordered list in README.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Checked Preview of file on GitHub UI.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix unordered list formatting (#1911)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9b44ee515ce6a4e5ba",
    "number": 1909,
    "body": "# Description\r\n\r\nThis change ensures Event, Link and Resource attributes are made immutable in a consistent fashion. Note that this does change the behaviour to raise a `TypeError` when someone tries to modify a resource or link attribute, but I believe this is the correct behaviour, rather than silently failing to modify the attributes.\r\n\r\nFixes #1907 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "codeboten/consistent-immutable-attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "make immutable attributes consistent (#1909)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9c44ee515ce6a4e5bb",
    "number": 1908,
    "body": "",
    "head_branch": "codeboten/fix-dependabot-alert",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix dependabot alert about fastAPI (#1908)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9d44ee515ce6a4e5bc",
    "number": 1905,
    "body": "# Description\r\n\r\nAdd example  for some scenarios",
    "head_branch": "few-how-to-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add some how-to examples (#1905)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9e44ee515ce6a4e5bd",
    "number": 1903,
    "body": "# Description\r\n\r\nPart-3 of #1890. Builds on top of #1901. This adds OTLPHandler for logging module. Python logging module provides a way to send the log records to the one or more appropriate destinations. More info about handler https://docs.python.org/3/library/logging.html#handler-objects\r\n",
    "head_branch": "logging-otlp-handler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add OTLPHandler for standard library logging module (#1903)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200e9f44ee515ce6a4e5be",
    "number": 1902,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1900",
    "head_branch": "status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Span.set_status priority (#1902)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200e9f44ee515ce6a4e5bf",
    "number": 1901,
    "body": "# Description\r\n\r\nPart-2 of #1890. This adds support for set/register and access a global default LogEmitterProvider.",
    "head_branch": "log-emitter-global-provider",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add global LogEmitterProvider and convenience function get_log_emitter (#1901)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200ea044ee515ce6a4e5c0",
    "number": 1898,
    "body": "# Description\r\n\r\nAdded description to environment variables in the opentelemetry-specification\r\n\r\nFixes # 1147\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nDocumentation update only.\r\n- [ ] The docs test (tox) ran successfully.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1147",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Issue-1147 Adding description to the environment variables (#1898)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ea144ee515ce6a4e5c1",
    "number": 1897,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1714",
    "head_branch": "opencensus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Opencensus exporters should populate service_name from Span Resource (#1897)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ea244ee515ce6a4e5c2",
    "number": 1896,
    "body": "# Description\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/1878/checks?check_run_id=2765346109\r\n\r\nWe have made change not install lib dependencies with it's corresponding instrumentation. This is breaking the getting-started tests as they need `flask` and `requests` to be installed to work. ",
    "head_branch": "pipeline-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix pipeline failure (#1896)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ea344ee515ce6a4e5c3",
    "number": 1895,
    "body": "# Description\r\n\r\nThis builds on top of #1894 and adds global `LogEmitterProvider` and convenience function get_log_emitter\r\n\r\nPart of #1890 \r\n",
    "head_branch": "logs-global-provider",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ea444ee515ce6a4e5c4",
    "number": 1894,
    "body": "# Description\r\n\r\nThis commit adds initial structure and classes based on the OTEP https://github.com/open-telemetry/oteps/blob/main/text/logs/0150-logging-library-sdk.md#specification\r\n\r\n\r\nPart of #1890 ",
    "head_branch": "logs-initial-skeleton",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add initial overall structure and classes for logs sdk (#1894)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200ea444ee515ce6a4e5c5",
    "number": 1893,
    "body": "# Description\r\n\r\nAs mentioned in issue #1850, the spec added definition for how dropped attributes, links and events counts should be reported via non-otlp exporters. This PR addresses that. \r\n\r\nThis PR has been updated with the latest changes from the refactors.\r\n\r\nFixes #1850 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests added\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/dropped_attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Report dropped attributes/events/links for otlp/jaeger/zipkin exporters (#1893)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ea544ee515ce6a4e5c6",
    "number": 1892,
    "body": "Fixes #1891",
    "head_branch": "issue_1891",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ea644ee515ce6a4e5c7",
    "number": 1889,
    "body": "# Description\r\n\r\nFixes #910\r\n\r\nRun core tests on Windows in addition to Ubuntu. Contrib tests will be enabled after the contrib repo enables windows tests.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Automated Tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/643\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "test-on-windows",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "let's do this (run tests on windows) (#1889)\n\nRun tests on Windows in Github CI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ea744ee515ce6a4e5c8",
    "number": 1887,
    "body": "Add metrics API prototype.",
    "head_branch": "issue_1835",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adds metrics API (#1887)\n\n* Adds metric prototype\r\n\r\nFixes #1835\r\n\r\n* Fix docs\r\n\r\n* Add API metrics doc\r\n\r\n* Add missing docs\r\n\r\n* Add files\r\n\r\n* Adding docs\r\n\r\n* Refactor to _initialize\r\n\r\n* Refactor initialize\r\n\r\n* Add more documentation\r\n\r\n* Add exporter test\r\n\r\n* Add process\r\n\r\n* Fix tests\r\n\r\n* Try to add aggregator_class argument\r\n\r\nTests are failing here\r\n\r\n* Fix instrument parent classes\r\n\r\n* Test default aggregator\r\n\r\n* WIP\r\n\r\n* Add prototype test\r\n\r\n* Tests passing again\r\n\r\n* Use right counters\r\n\r\n* All tests passing\r\n\r\n* Rearrange instrument storage\r\n\r\n* Fix tests\r\n\r\n* Add HTTP server test\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Add prototype\r\n\r\n* WIP\r\n\r\n* Fail the test\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Add views\r\n\r\n* Discard instruments via views\r\n\r\n* Fix tests\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Fix lint\r\n\r\n* WIP\r\n\r\n* Fix test\r\n\r\n* Fix lint\r\n\r\n* Fix method\r\n\r\n* Fix lint\r\n\r\n* Mypy workaround\r\n\r\n* Skip if 3.6\r\n\r\n* Fix lint\r\n\r\n* Add reason\r\n\r\n* Fix 3.6\r\n\r\n* Fix run\r\n\r\n* Fix lint\r\n\r\n* Remove SDK metrics\r\n\r\n* Remove SDK docs\r\n\r\n* Remove metrics\r\n\r\n* Remove assertnotraises mixin\r\n\r\n* Revert sdk docs conf\r\n\r\n* Remove SDK env var changes\r\n\r\n* Fix unit checking\r\n\r\n* Define positional-only arguments\r\n\r\n* Add Metrics plans\r\n\r\n* Add API tests\r\n\r\n* WIP\r\n\r\n* WIP test\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Set provider test passing\r\n\r\n* Use a fixture\r\n\r\n* Add test for get_provider\r\n\r\n* Rename tests\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* Remove non specific requirement\r\n\r\n* Add meter requirements\r\n\r\n* Put all meter provider tests in one file\r\n\r\n* Add meter tests\r\n\r\n* Make attributes be passed as a dictionary\r\n\r\n* Make some interfaces private\r\n\r\n* Log an error instead\r\n\r\n* Remove ASCII flag\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Add instrument tests\r\n\r\n* All tests passing\r\n\r\n* Add test\r\n\r\n* Add name tests\r\n\r\n* Add unit tests\r\n\r\n* Add description tests\r\n\r\n* Add counter tests\r\n\r\n* Add more tests\r\n\r\n* Add Histogram tests\r\n\r\n* Add observable gauge tests\r\n\r\n* Add updowncounter tests\r\n\r\n* Add observableupdowncounter tests\r\n\r\n* Fix lint\r\n\r\n* Fix docs\r\n\r\n* Fix lint\r\n\r\n* Ignore mypy\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Remove useless pylint skip\r\n\r\n* Add locks to meter and meterprovider\r\n\r\n* Add lock to instruments\r\n\r\n* Fix fixmes\r\n\r\n* Fix lint\r\n\r\n* Add documentation placeholder\r\n\r\n* Remove blank line as requested.\r\n\r\n* Do not override Rlock\r\n\r\n* Remove unecessary super calls\r\n\r\n* Add missing super calls\r\n\r\n* Remove plan files\r\n\r\n* Add missing parameters\r\n\r\n* Rename observe to callback\r\n\r\n* Fix lint\r\n\r\n* Rename to secure_instrument_name\r\n\r\n* Remove locks\r\n\r\n* Fix lint\r\n\r\n* Remove args and kwargs\r\n\r\n* Remove implementation that gives meters access to meter provider\r\n\r\n* Allow creating async instruments with either a callback function or generator\r\n\r\n* add additional test with callback form of observable counter\r\n\r\n* add a test/example that reads measurements from proc stat\r\n\r\n* implement cpu time integration test with generator too\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200ea844ee515ce6a4e5c9",
    "number": 1886,
    "body": "",
    "head_branch": "chore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[chore] update main after 1.3.0 release (#1886)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ea944ee515ce6a4e5ca",
    "number": 1885,
    "body": "Fixes #1884",
    "head_branch": "issue_1884",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add employer for Diego (#1885)\n\nFixes #1884"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ea944ee515ce6a4e5cb",
    "number": 1883,
    "body": "Paths in Windows use backslashes instead of forward slashes. Updated release script to use package name instead of path to find target in release script.",
    "head_branch": "release/1.3.0-0.22b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release for V1.3.0 and 0.22b0, update release script (#1883)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eaa44ee515ce6a4e5cc",
    "number": 1882,
    "body": "# Description\r\n\r\nUnlike tracing and metrics, logs specification doesn't define new logging API. Many existing logging libraries have some sort of extension mechanism that allows to customize how log records are encoded and delivered to their destinations. The OpenTelemetry Logging Library SDK is intended to be used by such extensions to emit logs in OpenTelemetry formats. In Python this can be achieved with [`logging.Handlers`](https://docs.python.org/3/library/logging.handlers.html) and Python standard library provides many handlers out of the box.\r\n\r\nOur `LogEmitter` implements the base [Handler](https://docs.python.org/3/library/logging.html?#logging.Handler) interface defined in logging module and emits the log events in OpenTelemetry manner. The remaining parts of logging SDK resembles the tracing SDK to ensure consistency and less cognitive overhead. End users can simply plug-in the OTEL handler and get their logs exported to preferred backend in OTLP format. Small snippet to show how this can be done.\r\n```python\r\nprovider = get_log_emitter_provider()\r\nexporter = OTLPLogExporter(...)\r\nprovider.add_log_processor(SimpleLogProcessor(exporter))\r\nemitter = provider.get_log_emitter(__name__, \"0.1\")\r\n\r\nlogging.getLogger('root').addHandler(emitter)\r\n```  \r\n\r\nThis PR adds the functional logging sdk implementation without an exporters (I will send a follow up PR which adds support for OTLP exporters with more documentation and examples). We believe there won't be significantly drastic changes to SDK specification and providing a pre-release/experimental package helps us gather early feedback which will be helpful for both this SIG and logs SIG. \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e test-core-sdk\r\n- [x] tox -e docs\r\n- [x] tox -e lint \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "logs-sdk-experimental",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eab44ee515ce6a4e5cd",
    "number": 1881,
    "body": "Fixes #1880",
    "head_branch": "issue_1880",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix error in license files (#1881)\n\nFixes #1880"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eac44ee515ce6a4e5ce",
    "number": 1878,
    "body": "# Description\r\n\r\nThis PR looks to address the issue where the opentracing-shim is not reporting errors correctly in the opentelemetry specification format.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1848\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis has been tested by installing the branch as an editable requirement (`pip -e`) in a [minimal working example](https://github.com/robertsben/otel-example), exporting traces to jaeger and elastic APM via an opentelemetry-collector and using the opentracing-shim. To reproduce checkout the [fix branch](https://github.com/robertsben/otel-example/compare/tracing-shim-fix) of that repo and follow instructions in the README.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-opentracing-shim-exception-reporting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix #1848 opentracing shim exception reporting (#1878)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ead44ee515ce6a4e5cf",
    "number": 1877,
    "body": "# Description\r\n\r\nThis renames the internal `_Limits` class to `SpanLimits` and allows an instance of SpanLimits to be passed to TracerProvider.\r\n\r\nImplements the following proposal: [discussion](https://github.com/open-telemetry/opentelemetry-python/discussions/1859)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "tracer-provider-limits",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Introduce SpanLimits class to tracing SDK (#1877)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ead44ee515ce6a4e5d0",
    "number": 1876,
    "body": "The label is \"Approve Public API check\" not \"Skip Public API check\".\r\n",
    "head_branch": "codeboten/patch-github-action",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "use correct label in github action (#1876)\n\nThe label is \"Approve Public API check\" not \"Skip Public API check\"."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eae44ee515ce6a4e5d1",
    "number": 1874,
    "body": "Noticed that lint and some of the other targets were still using python 3.8, updating them to 3.9",
    "head_branch": "codeboten/update-lint-py39",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update base version of python to 3.9 (#1874)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eaf44ee515ce6a4e5d2",
    "number": 1873,
    "body": "# Description\r\n\r\nRegenerated the protos to update to 0.9.0. Note this also includes some metrics protos definitions, which I'm not sure if we should include or not. Would like some feedback on this. According to the maturity matrix, the metrics protos are now stable: https://github.com/open-telemetry/opentelemetry-proto#maturity-level\r\n\r\nFixes #1872\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "codeboten/opentelemetry-proto-v0.9.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bump proto to 0.9.0 (#1873)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb044ee515ce6a4e5d3",
    "number": 1871,
    "body": "[#1862](https://github.com/open-telemetry/opentelemetry-python/issues/1862)\r\n\r\nA [change in the OTel specification](https://github.com/open-telemetry/opentelemetry-specification/pull/1692/files) requires a new `schema_url` field in the `Resource` class. This change implements the field, updates the `Resource` factory method and merge method, updates the behavior of `OTELResourceDetector` when aggregating `Resource`s, and modifies tests which used the old constructor signature. \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAll `tox` tests were ran on Python 3.9. Three tests were made or substantively modified, with a number of others modified for failing to conform to the new constructor signature. \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n\r\n- [ ] Yes.\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-schema_url-attribute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add schema_url to Resource (#1871)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb144ee515ce6a4e5d4",
    "number": 1869,
    "body": "# Description\r\n\r\nThis PR fixes the way the otel Python Exporter parses OTEL_EXPORTER_OTLP_HEADERS to align with the [otel exporter specs](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md#specifying-headers-via-environment-variables). Now, the headers, which are represented in a format matching the [W3C Correlation-Context specs for HTTP header formats.](https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md), are correctly parsed:\r\n\r\nFixes [#1851](https://github.com/open-telemetry/opentelemetry-python/issues/1851) by casting key string to lowercase, and [#1852](https://github.com/open-telemetry/opentelemetry-python/issues/1852) by correctly splitting on just the first equals sign `'='` and removing optional white spaces (OWS). \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-exporter-otlp-proto-grpc` successfully completes.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\nNo.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "update-otlp-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update otel-exporter OTLP headers parsing to match format specs (#1869)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb244ee515ce6a4e5d5",
    "number": 1868,
    "body": "# Description\r\n\r\nFixes #1106 ",
    "head_branch": "otlp-http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTLP Exporter Protobuf over HTTP (#1868)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb344ee515ce6a4e5d6",
    "number": 1867,
    "body": "# Description\r\n\r\nWhen developing on Python older than 3.7 a warning is logged about timing\r\nprecision, this fixes that warning to reference PEP 564. This is the PEP\r\nthat talks about nanosecond precision in python:\r\n\r\nhttps://www.python.org/dev/peps/pep-0564/\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe above link has been read and verified it refers to time precision instead of\r\nbackporting SSL memory to Python 2.7 (PEP 546).\r\n\r\n# Checklist:\r\n\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Correct SDK PEP 564 nanosecond time reference (#1867)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb444ee515ce6a4e5d7",
    "number": 1866,
    "body": "[#](url) Description\r\n\r\nA [change in the OTel specification](https://github.com/open-telemetry/opentelemetry-specification/pull/1692/files) requires a new `schema_url` field in the `Resource` class. This change implements the field, updates the Resource factory method and merge method, and modifies tests which used the old constructor signature. \r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAll `tox` tests were ran on Python 3.9. Two tests were substantively modified, with a number of others modified for failing to conform to the new constructor signature. \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n\r\n- [x] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-schema_url-attribute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb444ee515ce6a4e5d8",
    "number": 1863,
    "body": "# Description\r\n\r\nFixes #1781",
    "head_branch": "jaeger-env-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTEL_EXPORTER_JAEGER_TIMEOUT (#1863)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb544ee515ce6a4e5d9",
    "number": 1856,
    "body": "# Description\r\n\r\nRelevant Spec [here](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#span-limits).\r\n\r\nWe should not be raising `ValueError` when starting a span if the number of links or attributes exceeds the configured maxima. Surplus attributes and links can be discarded instead.\r\n\r\n* `opentelemetry.sdk.util.BoundedList.from_seq(...)` behavior changes to not raise ValueError. Instead uses `BoundedList.extend` to fill the deque to capacity and preserve a dropped count for excess items.\r\n*  `opentelemetry.sdk.util.BoundedDict.from_map(...)` behavior changes to not raise ValueError. Instead it iterates on the input mapping and inserts keys one by one relying on `BoundedDict.__setitem__` to discard excess items.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1844\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Just the `tox` test suite\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n*I'm not positive - could use some help on this front*\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "span-limits-do-not-raise",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Trace SDK does not raise when Span attribute and link limits are exceeded (#1856)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb644ee515ce6a4e5da",
    "number": 1855,
    "body": "# Description\r\n\r\nPer [attribute specifications](https://github.com/open-telemetry/opentelemetry-specification/blob/v1.1.0/specification/common/common.md#attributes), `None` values should be discouraged in AttributeValues, but Python cannot actually prevent `None` values. Thus, the new changes will ensure that mypy users will be alerted when trying to add None to an AttributeValue array, without altering the current code that may continue to accept None.\r\n\r\nFixes issue #1738 \r\n\r\n## Type of change\r\nThis is a simple bug fix that will help mypy users conform with specifications.\r\n\r\n# How Has This Been Tested?\r\nRunning the following test suites returned a clean report:\r\n```\r\ntox -e test-core-api\r\ntox -e mypy\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated",
    "head_branch": "update-typechecking-array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change AttributeValue sequences from optional to nonoptional (#1855)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb744ee515ce6a4e5db",
    "number": 1854,
    "body": "# Description\r\n\r\n[Specification change #1654](https://github.com/open-telemetry/opentelemetry-specification/pull/1654) requires invalid names to be converted to an empty string, as described in the tracer specification below. Passing `None` or the empty string `\"\"` as the `name` parameter to `trace.get_tracer(name, version)` will now return a tracer with an empty string for `tracer.instrumentation_info.name`. Full details available in the [Trace API specifications](https://github.com/carlosalberto/opentelemetry-specification/blob/e4bea087ae84e343e400bae20e87fb08ce8aee5b/specification/trace/api.md#get-a-tracer).\r\n\r\nFixes [#1849](https://github.com/open-telemetry/opentelemetry-python/issues/1849)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] The test_invalid_instrumentation_info unit test has been updated to expect an empty string output of `get_tracer` for the given invalid inputs, and the `tox -e test-core-sdk` tests passed.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n\r\nHooray for my first PR!",
    "head_branch": "update-gettracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update gettracer (#1854)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb844ee515ce6a4e5dc",
    "number": 1853,
    "body": "This PR implements the CreateKey functionality such that it aligns partially with the [context specification](https://github.com/open-telemetry/opentelemetry-specification/blob/v1.1.0/specification/context/context.md#create-a-key) and does not make any breaking changes to the API. \r\n\r\nLike before, the Opentelemetry-python context uses strings as input to keys for context. However, changes have been made such that it now first goes through `create_key` to generate a unique key for every inputted key names. \r\n\r\n> Multiple calls to CreateKey with the same name SHOULD NOT return the same value unless language constraints dictate otherwise. Different languages may impose different restrictions on the expected types, so this parameter remains an implementation detail.\r\n\r\nThe following part of the specification is not met in order to avoid breaking changes in the API.\r\n> The API MUST return an opaque object representing the newly created key.\r\n\r\nKey implementation detail:\r\n\r\n* `create_key` method to create a new unique key string every time it is called. \r\n* The outputted key from `create_key` gets inputted into `get_value` and `set_value methods`.\r\n* Added unit tests for the `create_key` method.\r\n* Updated b3 and jaeger propagator unit tests to work with unique keys.\r\n\r\nFixes #1737 \r\n\r\n**Type of change**\r\n\r\n* [x] New feature (non-breaking change which adds functionality)\r\n\r\n**How Has This Been Tested?**\r\n\r\nNew unit tests were added to ensure that same `key name` does not generate the same `key`. \r\n`tox` was ran to ensure the new and existing unit tests all pass. \r\n\r\n\r\n\r\n**Checklist:**\r\n\r\n* [x] Followed the style guidelines of this project\r\n* [x] Changelogs have been updated\r\n* [x] Unit tests have been added\r\n\r\ncc @alolita ",
    "head_branch": "create-context-key",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement CreateKey Functionality (#1853)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb844ee515ce6a4e5dd",
    "number": 1847,
    "body": "# Description\r\n\r\nAdds support for OTEL_SPAN_ATTRIBUTE_SIZE_LIMIT to allow limiting/truncating string values in attributes.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated and added tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "max-attr-length-limit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eb944ee515ce6a4e5de",
    "number": 1843,
    "body": "",
    "head_branch": "codeboten/bump-versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[chore] bump 1.3.0.dev0 & 0.22.dev0 versions (#1843)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eba44ee515ce6a4e5df",
    "number": 1842,
    "body": "# Description\r\n\r\nWe agreed that OTLP exporter transient error retry timeout is way to high and change it to some reasonable number. This also updates the retryable codes list for grpc; `PERMISSION_DENIED` and `UNAUTHENTICATED` do not belong to that list.\r\n\r\nFixes #1670 \r\n",
    "head_branch": "otlp-transient-errors-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update transient errors retry timeout and retryable status codes (#1842)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ebb44ee515ce6a4e5e0",
    "number": 1841,
    "body": "Preparing 1.2.0/0.21b0 release",
    "head_branch": "release/1.2.0-0.21b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.2.0, 0.21b0 (#1841)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ebc44ee515ce6a4e5e1",
    "number": 1840,
    "body": "# Description\r\n\r\nThe following changes update the release process for maintainers. The release versioning is now stored in eachdist.ini and is applied per release \"group\" (stable, prerelease, experimental). I think this will reduce the chances for accidentally changing the wrong version number in the process. See the updated RELEASING.md for the process.",
    "head_branch": "codeboten/update-release-process",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "improving the release process for maintainers (#1840)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ebd44ee515ce6a4e5e2",
    "number": 1839,
    "body": "# Description\r\n\r\n\r\n- Added SpanLimits class\r\n- TracerProvider now optionally accepts an instance of SpanLimits which is passed all the way down to Spans.\r\n- Spans use the limits to created bounded lists or dicts for different fields.\r\n\r\nfixes #1838 \r\n\r\n# Please delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "span-limits-feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow users to \"unset\" SDK limits and evaluate default limits lazily instead of on import (#1839)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ebd44ee515ce6a4e5e3",
    "number": 1837,
    "body": "# Description\r\n\r\nThe following change adds a script for maintainers to use at release time. It re-generates the getting started guide markdown used by opentelemetry.io.\r\n\r\nFixes #1827 \r\n\r\nAlso in this change is a minor update to the getting started guide, the image was causing the build for the website to fail, and i'm not sure if there's a lot of value in having the image there in the first place, so i removed it.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/add-script-generate-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding script to automatically generate otel website docs (#1837)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ebe44ee515ce6a4e5e4",
    "number": 1836,
    "body": "# Description\r\n\r\nFollow up to https://github.com/open-telemetry/opentelemetry-python/pull/1809 to add the same logic to the thrift exporter\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/thrift-jaeger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ebf44ee515ce6a4e5e5",
    "number": 1834,
    "body": "Fixes #1831 ",
    "head_branch": "issue-1831",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Apply validation of attributes to `Resource`, move attribute related logic to util package (#1834)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec044ee515ce6a4e5e6",
    "number": 1833,
    "body": "# Description\r\n\r\nFixes #1832, funny enough the documentation was showing the parent_id with a leading `0x` which means it's likely this was working at some point.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/fix-1832",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix parent_id formatting inconsistency (#1833)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec144ee515ce6a4e5e7",
    "number": 1830,
    "body": "# Description\r\n\r\nThs spec recommends most span limits to default to 128 and allow users\r\nto change it via environment variables. It does not dictate that limits\r\nshould always be set though. So users should be able to remove these\r\nlimits. This commit accepts `\"none\"` as a valid value for the limit\r\nconfig environment variables.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "allow-to-unset-limits",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec144ee515ce6a4e5e8",
    "number": 1829,
    "body": "# Description\r\n\r\nSpec PR: https://github.com/open-telemetry/opentelemetry-specification/pull/1677\r\n\r\nPlease review but don't merge until the spec PR is merged.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "otel-service-name-env",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTEL_SERVICE_NAME env var. (#1829)\n\nSpec PR: https://github.com/open-telemetry/opentelemetry-specification/pull/1677"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec244ee515ce6a4e5e9",
    "number": 1828,
    "body": "Took a pass through cleaning up some formatting issues in our readthedocs. Mostly I wanted to ensure the left menu only had relevant information for users. See the before and after comparison below:\r\n![Screen Shot 2021-05-07 at 1 16 19 PM](https://user-images.githubusercontent.com/223565/117503940-8e929d00-af36-11eb-8d76-fb1864dc948a.png)\r\n",
    "head_branch": "codeboten/fix-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "various fixes to the documentation (#1828)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec344ee515ce6a4e5ea",
    "number": 1826,
    "body": "The current link points to 404. Following this https://github.com/open-telemetry/opentelemetry-python/pull/1797, the docs for instrumentation were moved to contrib\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix link to instrumentation (#1826)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec444ee515ce6a4e5eb",
    "number": 1825,
    "body": "In case some users have python3-pip installed, the commands to install the opentelemetry-api & opentelemetry-sdk is `pip3` instead of `pip`\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec544ee515ce6a4e5ec",
    "number": 1824,
    "body": "# Description\r\nAdded `max_attr_value_length` option to OTLP exporter just like Zipkin and Jaeger exporters support already.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added test case\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "otlp-max-attr-length",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec544ee515ce6a4e5ed",
    "number": 1823,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1821 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "b3-multi-propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added B3 single-header propagator (#1823)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec644ee515ce6a4e5ee",
    "number": 1820,
    "body": "Thanks for all the contributions @hectorhdzg!\r\n",
    "head_branch": "codeboten/update-approvers",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "remove hectorhdzg from approvers (#1820)\n\nThanks for all the contributions @hectorhdzg!"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec744ee515ce6a4e5ef",
    "number": 1819,
    "body": "# Description\r\n\r\nFound a broken link, am fixing it ❤️ \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nNo testing, I'm fixing a link in a `.md`\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated (this is smol, so nope)\r\n- [x] Unit tests have been added (none needed)\r\n- [x] Documentation has been updated (mostly, yeah)\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: fix typo in URL (#1819)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec844ee515ce6a4e5f0",
    "number": 1818,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1755\r\n\r\nAs of today, [span attributes](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/common/common.md#attributes) cannot be a mapping type, so the logic for translating mapping types should never be hit.\r\n\r\nProto supports [KeyValueList](https://github.com/open-telemetry/opentelemetry-proto/blob/main/opentelemetry/proto/common/v1/common.proto#L36), which might be ahead of the tracing spec in terms of data types that it supports.\r\n\r\nThanks @LouisStAmour for the code snippet.",
    "head_branch": "otlp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix otlp exporter translating sequence types (#1818)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec944ee515ce6a4e5f1",
    "number": 1816,
    "body": "# Description\r\n\r\nThis adds a tool that can be called with `tox -e public-symbols-check` and will show the user what public symbols are being added by a branch (as compared against `main`). For example, for [this](https://github.com/ocelotl/opentelemetry-python/tree/test_public_symbols_check) branch, the tool produces this output:\r\n```\r\n141 ocelotl@harrison:~/github/ocelotl/opentelemetry-python$ tox -e public-symbols-check \r\npublic-symbols-check recreate: /home/ocelotl/github/ocelotl/opentelemetry-python/.tox/public-symbols-check\r\npublic-symbols-check installdeps: GitPython\r\npublic-symbols-check installed: gitdb==4.0.7,GitPython==3.1.14,smmap==4.0.0\r\npublic-symbols-check run-test-pre: PYTHONHASHSEED='1504796717'\r\npublic-symbols-check run-test: commands[0] | python /home/ocelotl/github/ocelotl/opentelemetry-python/scripts/public_symbols_checker.py\r\nThe test_public_symbols_check branch adds the following public symbols:\r\n\r\n- opentelemetry-api/src/opentelemetry/trace/propagation/trucecontext.py\r\n        TraceContextTextMapPropagator\r\n\r\n- opentelemetry-api/src/opentelemetry/trace/span.py\r\n        var\r\n\r\nPlease make sure that all of them are strictly necessary, if not, please consider prefixing them with an underscore to make them private.\r\n___________________________________________________________________________________________ summary ____________________________________________________________________________________________\r\n  public-symbols-check: commands succeeded\r\n  congratulations :)\r\n```\r\nFixes #1815 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "issue_1815",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add public symbols checker script (#1816)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ec944ee515ce6a4e5f2",
    "number": 1813,
    "body": "# Description\r\n\r\nFixes #1606 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n\r\nDocumentation looks like this ![Screen Shot 2021-05-04 at 9 18 39 AM](https://user-images.githubusercontent.com/223565/117035934-c0e39680-acb9-11eb-81f3-fa15ad65ab9d.png)",
    "head_branch": "codeboten/docs-distro",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding documentation for using opentelemetry-distro (#1813)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eca44ee515ce6a4e5f3",
    "number": 1812,
    "body": "# Description\r\n\r\nAdded `format` command to eachdist.py script. This just run black and isort over the entire repository or the provided path via `--path` option.\r\n\r\nUsage:\r\n\r\n```\r\n./scripts/eachdist.py format\r\n```\r\n\r\nor\r\n\r\n```\r\n./scripts/eachdist.py format --path opentelemetry-api\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n- [x] Tooling enhancement\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested manually\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "format-command",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added `eachdist.py format` command (#1812)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ecb44ee515ce6a4e5f4",
    "number": 1811,
    "body": "# Description\r\n\r\nPropagators use the root context as default value for the `extract` operation. Additionally avoid modifying the context in case there is nothing to extract or the carrier does not hold valid data.\r\n\r\nFixes #1765\r\n\r\nFixes also an issue in the `jaeger` propagator where trace/span id validity was comparing str with int values.\r\n\r\n## Type of change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] Breaking change (behavioral change since root context is now the default value for extract)\r\n\r\n# How Has This Been Tested?\r\nadditional unit tests have been added\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "propagator-extract-ctxt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make propagators conform to spec (#1811)\n\n* do not modify / set an invalid span in the passed context in case\r\n  a propagator did not manage to extract\r\n* in case no context is passed to propagator.extract assume the root\r\n  context as default so that a new trace is started instead of continung\r\n  the current active trace in case extraction fails\r\n* fix also jaeger propagator which compared int with str trace/span ids\r\n  when checking for validity in extract"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ecc44ee515ce6a4e5f5",
    "number": 1810,
    "body": "# Description\r\n\r\nThe log message per se does not provide much actionable information as it does not mention the key for whose attribute we had a decoding issue. This PR includes the key in the warning.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Improvement\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: improves logs for warning (#1810)\n\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ecd44ee515ce6a4e5f6",
    "number": 1809,
    "body": "# Description\r\n\r\nThis extracts the parent span and adds it as a CHILD_OF reference in the\r\ngRPC export, so that we get the expected hierarchy of spans.\r\n\r\nFixes #1808\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- I have manually tested this by exporting to a Jaeger collector via gRPC and inspecting the exported data to ensure it has the correct hierarchy.\r\n- I have updated a unit test and the expected data conforms to my expectations, test suite passes!\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project (I believe so, it's very simple Python in this case)\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] ~~Documentation has been updated~~ (no docs update for a bug fix)",
    "head_branch": "1808-fix-jaeger-grpc-child-of",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Include parent span in Jaeger gRPC export (#1809)\n\nThis extracts the parent span and adds it as a CHILD_OF reference in the\r\ngRPC export, so that we get the expected hierarchy of spans.\r\n\r\nTest case is updated to cover this case."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ecd44ee515ce6a4e5f7",
    "number": 1807,
    "body": "# Description\r\n\r\nRenaming CompositeHTTPPropagator to CompositePropagator. Note this change adds the dependency on the `Deprecated` package to the API, we may or may not want this, would love some feedback from reviewers. The following is what users will see when using `CompositeHTTPPropagator`:\r\n\r\n```\r\n>>> from opentelemetry.propagators.composite import CompositeHTTPPropagator\r\n>>> CompositeHTTPPropagator([])\r\n<stdin>:1: DeprecationWarning: Call to deprecated class CompositeHTTPPropagator. (You should use CompositePropagator) -- Deprecated since version 1.2.0.\r\n<opentelemetry.propagators.composite.CompositeHTTPPropagator object at 0x108712be0>\r\n```\r\n\r\nFixes #1775 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "codeboten/fix-1775",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rename CompositeHTTPPropagator, add deprecation notice (#1807)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ece44ee515ce6a4e5f8",
    "number": 1806,
    "body": "# Description\r\n\r\nWhen an endpoint without a protocol is passed in, urlparse sets the host as the scheme and leaves the net location empty. This changes catches that and skips setting the endpoint in that case.\r\n\r\nFixes #1801 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/fix-1801",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix otlp grpc exporter bug when no scheme is passed in (#1806)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ecf44ee515ce6a4e5f9",
    "number": 1805,
    "body": "# Description\r\n\r\nIt seems that there have been some changes to the open-telemetry collector image that cause issues in running this example. I updated the config file to avoid these, but an alternative would be to pin the image to a specific version rather than using the `latest` tag.\r\n\r\nAnyway, the issues I ran into running the image with the given yaml file were:\r\n\r\n1.  Empty configuration for the OLTP receiver\r\n```Error: cannot load configuration: error reading receivers configuration for otlp: empty config for OTLP receiver```, which is fixed by adding the \r\n```\r\nprotocols:\r\n    grpc:\r\n    http:\r\n```\r\nbit.\r\n\r\n2.  `unknown processors type \"queued_retry\" for queued_retry`. It looks like this processor was [removed](https://github.com/open-telemetry/opentelemetry-operator/issues/18) from the collector, so I just dropped the references to it.\r\n\r\n\r\n# Checklist:\r\n\r\n- [ x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ x] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update example collector-config.yaml (#1805)\n\nIt seems that there have been some changes to the open-telemetry collector image that cause issues in running this example. I updated the config file to avoid these, but an alternative would be to pin the image to a specific version rather than using the `latest` tag.\r\n\r\nAnyway, the issues I ran into running the image with the given yaml file were:\r\n\r\n1.  Empty configuration for the OLTP receiver\r\n```Error: cannot load configuration: error reading receivers configuration for otlp: empty config for OTLP receiver```, which is fixed by adding the \r\n```protocols:\r\n    grpc:\r\n    http:\r\n```\r\nbit.\r\n\r\n2.  `unknown processors type \"queued_retry\" for queued_retry`. It looks like this processor was [removed](https://github.com/open-telemetry/opentelemetry-operator/issues/18) from the collector, so I just dropped the references to it."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed044ee515ce6a4e5fa",
    "number": 1803,
    "body": "Fixes #1593\r\n\r\nReview after #1795.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1593",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add example for Django with auto instrumentation (#1803)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed144ee515ce6a4e5fb",
    "number": 1802,
    "body": "Leftover from https://github.com/open-telemetry/opentelemetry-python/pull/1797",
    "head_branch": "instr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove extra docs (#1802)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed244ee515ce6a4e5fc",
    "number": 1799,
    "body": "# Description\r\n\r\nThis adds timeout support for zipkin exporter via constructor param and env var `OTEL_EXPORTER_ZIPKIN_TIMEOUT` and implements shutdown. Additionally changed the exporter to use [requests.Session](https://github.com/psf/requests/blob/master/requests/sessions.py#L337) to avoid making new connection to zipkin collector on each export call.\r\n\r\nPart of #346 and #1791 ",
    "head_branch": "zipkin-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Zipkin exporter: Add timeout support and implement shutdown (#1799)\n\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed344ee515ce6a4e5fd",
    "number": 1798,
    "body": "Pypi defines a typed classifer (https://pypi.org/classifiers/) that we can use\r\nfor all packages that contain types and the py.types file.\r\n\r\nFixes #979.",
    "head_branch": "hakon/tags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add \"Typing :: Typed\" tags to all packages with py.types (#1798)\n\nPypi defines a typed classifer (https://pypi.org/classifiers/) that we can use\r\nfor all packages that contain types and the py.types file."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed444ee515ce6a4e5fe",
    "number": 1797,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1532",
    "head_branch": "instr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move opentelemetry-instrumentation to contrib (#1797)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed444ee515ce6a4e5ff",
    "number": 1795,
    "body": "Fixes #1794\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1794",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Explain usage of --noreload (#1795)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed544ee515ce6a4e600",
    "number": 1793,
    "body": "Fixes #1792\r\n\r\n# Description\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1792",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix examples and documentation (#1793)\n\nFixes #1792"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed644ee515ce6a4e601",
    "number": 1789,
    "body": "",
    "head_branch": "codeboten/add-docs-update-workflow",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "adding workflow to update website (#1789)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed744ee515ce6a4e602",
    "number": 1788,
    "body": "Generated the getting-started from the rst files.\r\n\r\nFixes #1363 ",
    "head_branch": "codeboten/add-getting-started",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding getting started to website docs (#1788)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed844ee515ce6a4e603",
    "number": 1786,
    "body": "",
    "head_branch": "update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[chore] Update main after 1.1.0 release (#1786)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed944ee515ce6a4e604",
    "number": 1783,
    "body": "",
    "head_branch": "release/1.1.0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release 1.1.0/0.20b0 (#1783)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ed944ee515ce6a4e605",
    "number": 1782,
    "body": "",
    "head_branch": "release/1.1.0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eda44ee515ce6a4e606",
    "number": 1778,
    "body": "# Description\r\nThe open census exporters that require service_name collects it via the constructor. So, this PR provides a possible fix for the same, by populating the open census exporters from the span resource itself. The change is done in accordance with the jaeger implementation of the same.\r\nFixes #1714\r\n\r\n## Type of change\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n",
    "head_branch": "exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200edb44ee515ce6a4e607",
    "number": 1777,
    "body": "Upgrading black and isort.",
    "head_branch": "update-tools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgraded black and isort (#1777)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200edc44ee515ce6a4e608",
    "number": 1776,
    "body": "# Description\r\n\r\nThe OpenTracing shim was unnecessarily wrapping a valid span in a `NonRecordingSpan`. This was done because of an assumption that the span was a `SpanContext`. Added a check to ensure only `SpanContext` are wrapped\r\n\r\nFixes #1166 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTested w/ the code provided in the issue, updated to account for changed package names/paths\r\n\r\n```\r\nimport requests\r\nfrom opentracing import Format\r\nfrom opentracing.ext import tags\r\n\r\n\r\ndef load_jaeger(host, port, service_name=\"testing-jaeger\"):\r\n    from jaeger_client.config import Config\r\n    config = Config(\r\n        config={\r\n            \"sampler\": {\r\n                \"type\": \"const\",\r\n                \"param\": 1,\r\n            },\r\n            \"local_agent\": {\r\n                \"reporting_host\": host,\r\n                \"reporting_port\": port,\r\n            },\r\n            \"logging\": True,\r\n            \"reporter_batch_size\": 1,\r\n        },\r\n        service_name=service_name,\r\n    )\r\n    return config.new_tracer()\r\n\r\n\r\ndef load_shim(host, port, service_name=\"testing-shim\"):\r\n    from opentelemetry import trace\r\n    from opentelemetry.exporter.jaeger.thrift import JaegerExporter\r\n    from opentelemetry.shim import opentracing_shim\r\n    from opentelemetry.sdk.trace import TracerProvider\r\n    from opentelemetry.sdk.trace.export import SimpleSpanProcessor\r\n    # Configure the tracer using the default implementation\r\n    trace.set_tracer_provider(TracerProvider())\r\n    tracer_provider = trace.get_tracer_provider()\r\n\r\n    # Configure the tracer to export traces to Jaeger\r\n    jaeger_exporter = JaegerExporter(\r\n        agent_host_name=host,\r\n        agent_port=port,\r\n    )\r\n    span_processor = SimpleSpanProcessor(jaeger_exporter)\r\n    tracer_provider.add_span_processor(span_processor)\r\n\r\n    # Create an OpenTracing shim. This implements the OpenTracing tracer API, but\r\n    # forwards calls to the underlying OpenTelemetry tracer.\r\n    return opentracing_shim.create_tracer(tracer_provider)\r\n\r\n\r\ndef get_tracer(use_shim):\r\n    host = 'localhost'\r\n    port = 6831\r\n    if use_shim:\r\n        return load_shim(host, port)\r\n    else:\r\n        return load_jaeger(host, port)\r\n\r\n\r\n# imagine this is also used by an additional logging handler\r\ndef add_log(event, data=None):\r\n    if tracer.active_span:\r\n        if not data:\r\n            data = {}\r\n        data[\"event\"] = event\r\n        tracer.active_span.log_kv(data)\r\n\r\ndef init_trace(request):\r\n    span_ctx = tracer.extract(Format.HTTP_HEADERS, request.headers)\r\n    span_tags = {tags.SPAN_KIND: tags.SPAN_KIND_RPC_SERVER}\r\n    tracer.start_active_span(\"test\", child_of=span_ctx, tags=span_tags)\r\n    add_log(\"start\")\r\n\r\n\r\ndef add_headers_for_trace(method, url, headers):\r\n    if tracer.active_span:\r\n        add_log(\"call\", {\"method\": method, \"url\": url})\r\n        span = tracer.active_span\r\n        span.set_tag(tags.HTTP_METHOD, method)\r\n        span.set_tag(tags.HTTP_URL, url)\r\n        span.set_tag(tags.SPAN_KIND, tags.SPAN_KIND_RPC_CLIENT)\r\n        tracer.inject(span, Format.HTTP_HEADERS, headers)  # fails with shim\r\n    return headers\r\n\r\n\r\ndef complete_trace():\r\n    if tracer.active_span:\r\n        add_log(\"complete\")\r\n        tracer.active_span.finish()\r\n\r\n\r\ndef run_trace_example(request):\r\n    init_trace(request)\r\n    add_log(\"log\", {\"message\": \"Hello\"})\r\n    method = \"GET\"\r\n    url = \"http://example.com/\"  # pretending this to be a real service we're calling\r\n    headers = add_headers_for_trace(method, url, {\"content-type\": \"application/json\"})\r\n    r = requests.request(method, url, headers=headers)\r\n    add_log(\"response\", {\"status\": r.status_code})\r\n    complete_trace()\r\n\r\n\r\ndummy_request = lambda x: x\r\nsetattr(dummy_request, \"headers\", {\"content-type\": \"application/json\"})\r\n\r\n# This works perfectly with the Jaeger Client\r\ntracer = get_tracer(False)\r\nrun_trace_example(dummy_request)\r\ntracer.close()\r\n\r\n# remove the tracer and start over\r\ndel tracer\r\n\r\n# This fails with the Shim.\r\ntracer = get_tracer(True)\r\nrun_trace_example(dummy_request)\r\ntracer.close()\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/issue-1166",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix issue in opentracing shim causing span to be wrapped unnecessarily (#1776)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200edd44ee515ce6a4e609",
    "number": 1773,
    "body": "# Description\r\n\r\nAdds `__contains__` to `TraceState` - having this prevents accidentally assuming it's present and will work as expected.\r\n\r\nThis actually fixes a bug reported in the contrib repo: https://github.com/open-telemetry/opentelemetry-python-contrib/issues/262 and possibly others.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] `TestTraceContextFormat.test_trace_contains`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "tracestate-contains",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add __contains__ to TraceState (#1773)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ede44ee515ce6a4e60a",
    "number": 1772,
    "body": "# Description\r\n\r\nhttps://github.com/open-telemetry/opentelemetry.io/issues/520, as referenced in the following issue, the tracing version for python on the open telemetry website, is still beta, although the SDK has a 1.0 release. \r\nSince, the docs pages for the Python SDK are live here, making the change will lead to the change getting pulled in the open-telemetry.io repo and will update the same on the website.\r\n\r\n# Changes Made\r\nUpdated the trace version to 1.0 in the website_docs, index.md\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ede44ee515ce6a4e60b",
    "number": 1771,
    "body": "# Description\r\n\r\nAs per the specification, the otlp exporter must use the scheme from the endpoint to determine if a connection should be secure or not. https://github.com/open-telemetry/opentelemetry-specification/blob/f62744a679814937214fd17394ab3fa8a9099424/specification/protocol/exporter.md#configuration-options\r\n\r\n> A scheme of https indicates a secure connection.\r\n\r\nFixes #1747\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran manual tests w/ the collector locally\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "codeboten/issue-1747",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OTLP exporter uses scheme from endpoint configuration (#1771)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200edf44ee515ce6a4e60c",
    "number": 1768,
    "body": "# Description\r\n\r\nRight now we have some issues with our public API, mostly these:\r\n\r\n1. Some public symbols don't need to be. This is a problem because it adds to our burden of keeping them compatible between versions when they are implementation details.\r\n2. Some public symbols do not follow [PEP8](https://www.python.org/dev/peps/pep-0008/#constants).\r\n\r\nNow, regarding the second point: I have intentionally tried to be as strict as possible when writing this PR. I have considered constants to be only numeric types, strings, booleans and `None`, that should be the kind of things that always return the same result from `id` when passed as an argument:\r\n\r\n```python\r\n>>> none_0 = None\r\n>>> id(none_0)\r\n94865325304416\r\n>>> none_1 = None\r\n>>> id(none_1)\r\n94865325304416\r\n>>> true_0 = True\r\n>>> id(true_0)\r\n94865325415904\r\n>>> true_1 = True\r\n>>> id(true_1)\r\n94865325415904\r\n>>> string_0 = \"string\"\r\n>>> id(string_0)\r\n140069704282416\r\n>>> string_1 = \"string\"\r\n>>> id(string_1)\r\n140069704282416\r\n>>> class Test:\r\n...     pass\r\n... \r\n>>> \r\n>>> test_0 = Test()\r\n>>> id(test_0)\r\n140069704320384\r\n>>> test_1 = Test()\r\n>>> id(test_1)\r\n140069704648064\r\n```\r\n\r\nI have not been able to find anywhere that says this is the \"official\" definition of a constant anywhere, so I understand any argument against these (constants being what I just defined) kind of changes considering that these should be breaking changes.\r\n\r\nI have also added a [script](https://github.com/open-telemetry/opentelemetry-python/pull/1768/files#diff-c98843160fef598c6a3200eb8cf39a1ca8b0756fba1e171424ec1a4e578cbfdf) that looks through our code and finds what should be public symbols. [This](https://github.com/open-telemetry/opentelemetry-python/pull/1768/files#diff-c9571d90d0c1dda483c76249db49e78e626aee0fa4cfb4103f52a1e46b93a076) is the result of running it right now.\r\n\r\nAdding the execution of this script as part of our review process should be a good idea because it should alert us of any non-necessary public symbol being added to the API.\r\n\r\nBefore I continue to the changes for the contrib repo, I would like for your thoughts on this, I'll bring this to the next SIG.\r\n\r\nFixes #1710 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1710",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee044ee515ce6a4e60d",
    "number": 1766,
    "body": "# Description\r\n\r\nFixes #453",
    "head_branch": "codeboten/fix-sphinx-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "no longer pin sphinx (#1766)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee144ee515ce6a4e60e",
    "number": 1764,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1763\r\n\r\n1. Adds `SpanKind` to `should_sample`\r\n2. `should_sample` uses `trace_state` from the passed in `Context` 's `SpanContext` 's `TraceState` instead of the explicitly passed in `TraceState`.",
    "head_branch": "sample",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change `should_sample` parameters to be spec compliant (#1764)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee244ee515ce6a4e60f",
    "number": 1762,
    "body": "# Description\r\n\r\nThe experimental back propagators inject trace response headers into\r\nHTTP responses. These are meant to be used by instrumentations and are\r\nnot considered stable.\r\n\r\nContrib PRs that need this feature: open-telemetry/opentelemetry-python-contrib#436\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests\r\n- [x] Manual testing\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "response-propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added experimental HTTP backpropagators (#1762)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee344ee515ce6a4e610",
    "number": 1759,
    "body": "# Description\r\n\r\nFixes #1022 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/428\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "auto-semconv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Autogenerate semantic convention constants (#1759)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee344ee515ce6a4e611",
    "number": 1758,
    "body": "# Description\r\n\r\nI observed the following pattern:\r\n\r\n```\r\n<output of cmd 1>\r\n<output of cmd 2>\r\n>>> cmd1\r\n>>> cmd2\r\n```\r\n\r\nThe `>>> cmd` header should come immediately before the command output to facilitate debugging & progress reporting.\r\n\r\nAlso remove a leftover comment fragment.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nOnly locally.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated: No, IMHO too minor but can do if requested\r\n- [ ] Unit tests have been added: N/A\r\n- [ ] Documentation has been updated: N/A\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix eachdist.py not printing invoked commands. (#1758)\n\nI observed the following pattern:\r\n```\r\n<output of cmd 1>\r\n<output of cmd 2>\r\n>>> cmd1\r\n>>> cmd2\r\n```\r\n\r\nThe `>>> cmd` header should come immediately before the command output to facilitate debugging & progress reporting."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee444ee515ce6a4e612",
    "number": 1753,
    "body": "Fixes #1730\r\n\r\n# Description\r\n\r\nFixes #1730 \r\n\r\nI am unpinning the micro (rightmost) number here. @davidpickup I was a bit confused by the issue description, please let me know if this PR is what you had in mind to fix it.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1730",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Unpin micro version (#1753)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee544ee515ce6a4e613",
    "number": 1751,
    "body": "# Description\r\n\r\nThis feature allows distros to customize instrumentation initialization when using automatically instrumenting with the `opentelemetry-instrument` command. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested manually\r\n- [x] Added test for newly introduced method \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes.\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "instrumentation-loader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee644ee515ce6a4e614",
    "number": 1750,
    "body": "# Description\r\n\r\nB3 propagator was returning `None` instead of invalid context after last\r\nchange. This resulted in many apps crashing when B3 failed to extract a\r\nvalid context from carrier. This PR patches it to not make apps crash\r\nand return an invalid context when one cannot be extracted from the\r\ncarrier.\r\n\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added test case\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes.\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-b3-propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed B3 Propagator (#1750)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee744ee515ce6a4e615",
    "number": 1749,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "intrumentor-entry-point",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee844ee515ce6a4e616",
    "number": 1748,
    "body": "# Description\r\n\r\nPreparing 1.10a0 experimental release. This release adds the experimental metrics API/SDK and will include the following packages:\r\n\r\n```\r\n  opentelemetry-exporter-prometheus\r\n  opentelemetry-api\r\n  opentelemetry-sdk\r\n  opentelemetry-exporter-otlp-proto-grpc\r\n  opentelemetry-exporter-otlp\r\n```\r\n",
    "head_branch": "metrics-1.10a0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "prepare 1.10a0 experimental release (#1748)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee844ee515ce6a4e617",
    "number": 1746,
    "body": "Following https://github.com/open-telemetry/opentelemetry-python/pull/1724",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update RELEASING.md (#1746)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ee944ee515ce6a4e618",
    "number": 1744,
    "body": "# Description\r\n\r\nofficially removing toumorokoshi as an approver.\r\n\r\nWith opentelemetry-python officially at 1.0, and my involvement in the project and awareness  changes waning significantly, I think it's a good time to remove myself as an approver.\r\n\r\nIt's been a fantastic journey, and thanks for having me! I hope I have the opportunity to get involved again in the future, but regardless it was great meeting and working with everyone.\r\n\r\nUpon merge of this PR I'll remove myself from the GitHub group. \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/404\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/goodbye-yusuke",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove toumorokoshi from python-approvers (#1744)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eea44ee515ce6a4e619",
    "number": 1741,
    "body": "# Description\r\n\r\nThis is a POC solution for the problem discussed in https://github.com/open-telemetry/opentelemetry-python/discussions/1729 and #1563 \r\n\r\n\r\n### Details\r\nInstead of specifying instrumented libraries (target dependencies) as regular dependencies, instrumentation packages can specify such dependencies as extras with the label `target`.  For example, `opentelemetry-instrumentation-aiohttp-client` can specify `aoihttp` as a target dependencies instead of a regular one:\r\n\r\n```\r\n[options.extras_require]\r\ntarget = \r\n    aiohttp ~= 3.0\r\n```\r\n\r\n- This will make `opentelemetry-instrumentation-aiohttp-client` installable without automatically installing or updating  `aiohttp`.\r\n- `opentelemetry-instrument` command will be able to tell that the instrumentor needs `aiohttp ~= 3.0`. It'll only load the instrumentor if this requirement is satisfied i.e, `aiohttp ~= 3.0` is installed as well.\r\n- If the target package is not installed, the instrumentation package will not be loaded. This will prevent the instrumentor from running and causing import errors.\r\n- This still allows users to automatically install the target dependencies if they want by suffixing `[target]` to the instrumentation package name `opentelemetry-instrumentation-aiohttp-client[target]`\r\n~- Purely a packaging change. Does not require any interface or code changes to instrumentors.~\r\n- Mostly a packaging change. Requires minimal code changes to instrumentations i.e adding a simple `package_name` method.\r\n\r\nThe instrument command will not require instrumentors to specify target dependencies. If an instrumentor does not specify any target dependencies, the instrument command will always load and apply the instrumentor. \r\n\r\n### Changes required to be made to instrumentations\r\n\r\nEvery instrumentation will need two changes. \r\n\r\n1. Move the target dependencies from regular deps to extra_require under label target.\r\n2. Each instrumentor would need to define a `package_name() -> str` method.  This method would return the Python package name of the instrumentor. For example `RequestsInstrumentor().package_name()` would return `opentelemetry-instrumentation-requests`.\r\n\r\nThis demo contrib PR showcases what changes every instrumentation package would need: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/397/files\r\n\r\n### Considerations\r\n- Do we enforce all instrumentors to always specify \"target\" dependencies like this? Instrumentors that don't specify target dependencies can still be used manually but the opentelemetry-instrument command will ignore them. Can we think of any cases where specifying target dependencies may not be viable or desirable?\r\n- I'm not sure about using the name `target` to represent instrumented libraries. I just picked something to allow me to move forward with the POC. What would be a better name for such deps?\r\n- We need the package_name method in order to fetch the instrumentation distribution using pkg_resource and validate it's dependencies. Can we somehow automatically detect an instrumentation's package name without it having to explicitly specify it as a method? Such auto-detection needs to be highly reliable and have acceptable performance.\r\n- Instead of making the instrumentors define a `package_name()` method that returns the Python package name of the instrumentor, we can have the instrumentors define a `package_name() -> str` method that just returns the package name of the instrumentor itself. We can implement it either way and it has almost no impact on the implementation. The question is what makes more sense for instrumentation authors.\r\n- \r\n\r\n```python\r\nclass RequestsInstrumention:\r\n    def package_name(self):\r\n         return 'opentelemetry-instrumentation-requests'\r\n```\r\n\r\nvs\r\n\r\n\r\n```python\r\nclass RequestsInstrumention:\r\n    def target_dependencies(self):\r\n         return ['requests ~= 2.0']\r\n```\r\n\r\n### Future iterations\r\n- Evaluate lazily applying instrumentors as [suggested here](https://github.com/open-telemetry/opentelemetry-python/discussions/1729#discussioncomment-551596). This would require code changes to all instrumentors but can be built on top of this POC.\r\n- Bootstrap command can be updated to support optionally installing target dependencies as well.\r\n",
    "head_branch": "instrumentation-runtime-checks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eeb44ee515ce6a4e61a",
    "number": 1740,
    "body": "# Description\r\n\r\nUpdate version to 1.0.1.dev0 & 0.20.dev0\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/396\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "codeboten/bump-version-to-1.0.1.dev0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update dev version to 1.0.1.dev0 & 0.20.dev0 (#1740)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eec44ee515ce6a4e61b",
    "number": 1739,
    "body": "# Description\r\n\r\nChanges from https://github.com/open-telemetry/opentelemetry-python/pull/1669/ have not been reflected in the docs\r\n\r\n## Type of change\r\n\r\nDocumentation update",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Include new `service_name` workflow (#1739)\n\nChanges from https://github.com/open-telemetry/opentelemetry-python/pull/1669/ have not been reflected in the docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eec44ee515ce6a4e61c",
    "number": 1736,
    "body": "Error message was displaying for ANY status being created that's not StatusCode.Error",
    "head_branch": "status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eed44ee515ce6a4e61d",
    "number": 1733,
    "body": "Fixes #1618",
    "head_branch": "codeboten/issue-1618",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add automation to close stale issues (#1733)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eee44ee515ce6a4e61e",
    "number": 1732,
    "body": "# Description\r\n\r\nThis is a follow up to https://github.com/open-telemetry/opentelemetry-python/pull/1728.\r\n\r\nWith the current design of the propagators pipeline every single propagator is responsible for defaulting to the current context in case the context is not provided as an input, which `TextMapPropagator` interface mandates: https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-api/src/opentelemetry/propagators/textmap.py#L153.\r\n\r\n[Recent changes](https://github.com/open-telemetry/opentelemetry-python/pull/1728) to the B3 format propagator amplified this breach of contract, because there is a possibility that no context is given and in the case of an empty carrier, the context is returned as is, which then would result in a caller receiving `None` instead of `Context` promised in the signature (see [unit test](https://github.com/open-telemetry/opentelemetry-python/pull/1732/commits/39b79127942d034e416be0a0d59de087388721fc#diff-b97391ef2053a76fa0e904bb632df6ecdcc43adc7777f94633e3df96e090fd94R302)).\r\nPreviously this behavior was masked, because some `Context` was always returned (possibly invalid) even if it was not the current one, giving an impression that it is what is expected.\r\n\r\nContributes to #1727\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nSee implemented [unit test](https://github.com/open-telemetry/opentelemetry-python/pull/1732/commits/39b79127942d034e416be0a0d59de087388721fc#diff-b97391ef2053a76fa0e904bb632df6ecdcc43adc7777f94633e3df96e090fd94R302).\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "b3-default-contxt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eef44ee515ce6a4e61f",
    "number": 1731,
    "body": "# Description\r\n\r\nBrings `metrics` branch on par with `main`\r\n\r\n# How Has This Been Tested?\r\n\r\nAll the tests merged from `main` pass after the necessary adjustments connected to the changes in the codebase (import moves, name changes, package structure changes, etc.)\r\n\r\n# Misc / Open points\r\n- not sure how to make diff here manageable\r\n- support for 3.5 was cut, but for this branch the CI checks from 3.5 are still expected",
    "head_branch": "metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef044ee515ce6a4e620",
    "number": 1728,
    "body": "# Description\r\n\r\nAdjust B3 propagator to not modify context in case of:\r\n- missing headers\r\n- invalid headers\r\n- empty/no headers\r\n\r\nContributes to #1727\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests extended and modified accordingly to reflect the new behavior.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "non-compliant-propagators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make B3 propagator spec compliant (#1728)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef144ee515ce6a4e621",
    "number": 1726,
    "body": "# Description\r\n\r\nIntroduces a proxy tracer provider and proxy tracer implementations. The proxies return noop implementations until a global tracer provider is set by the user. Once a global provider is set the proxies delegate to the real provider and tracer implementations.\r\n\r\nUpdated `get_tracer_provider()` to return a proxy tracer provider if a the user has not set a global provider via code or env vars.\r\n\r\nFixes #1159\r\nFixes #1276\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/405\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new test case\r\n- [x] Manually tested with https://github.com/owais/otel-django-test\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/399\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\n",
    "head_branch": "proxy-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prototype proxy tracer/provider to enable lazy setup of tracing pipeline (#1726)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef144ee515ce6a4e622",
    "number": 1725,
    "body": "# Description\r\n\r\nType Stub for the variable `dropped` was missing in OTel SDK\r\nAlso, this fixes the added pragma in this PR: https://github.com/GoogleCloudPlatform/opentelemetry-operations-python/pull/101/files/688b4bf84ad632635dc91a86628c624f69c89d86#diff-6e7e9495c01b3a91f2e2d9cdb033d1f0c9e032ed3b7b7f7aefbf4f2731d02bb2R416 (I can write another PR after this merges to remove that pragma)\r\n\r\nFixes #1573\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1573-boundedlist-type-stub",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add type stub for dropped in BoundedList/BoundedDict (#1725)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef244ee515ce6a4e623",
    "number": 1724,
    "body": "Per open-telemetry/opentelemetry.io#472, we're mirroring the docs content on the website to each SIG. When a release occurs and these docs are updated, please make an issue or PR mirroring them to their appropriate location in the website repo (https://github.com/open-telemetry/opentelemetry.io/tree/main/content/en/docs/python).\r\n\r\nNote: We don't have a getting started guide for Python yet, you should be able to adapt your existing content pretty easily into a format like the other languages: https://opentelemetry.io/docs/go/getting-started/",
    "head_branch": "addWebsiteDocs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add opentelemetry.io docs (#1724)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef344ee515ce6a4e624",
    "number": 1722,
    "body": "# Description\r\n\r\nThis commit updates the bootstrap command to ensure it'll install\r\ninstrumentation packages compatible with the opentelemetry-instrument\r\npackage.\r\n\r\nSince opentelemetry-instrumentation (as as a result all\r\ninstrumentations) are not stable yet, installing an instrumentation\r\npackage older or newer than opentelemtry-instrumentation can result in\r\na broken setup. This commit updates the bootstrap command so that it'll\r\nalways install instrumentation packages with the exact same version as\r\nit's own.\r\n\r\nThis will only work as long as we keep releasing newer versions of all instrumentation packages in tandem with the opentelemetry-instrumentation package but I think we'll keep doing that until opentelemetry-instrumentation hits 1.0. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bootstrap-install-same-version-as-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update bootstrap cmd to use exact version when installing (#1722)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef444ee515ce6a4e625",
    "number": 1721,
    "body": "# Description\r\n\r\nCurrently we log a warning that status description should only be set\r\nfor an error condition even when description is not being set. This\r\ncommit silences such warnings.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-unnecessary-status-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unnecessary warning when (not) setting status description (#1721)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef544ee515ce6a4e626",
    "number": 1720,
    "body": "\r\n# Description\r\n\r\nIf I understand correctly, we only need a single py.typed file per package instead of every module. \r\nRemoved py.typed from a few modules and added it to the root of every\r\npackage.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-py-typed-file-to-propagate-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added a py.typed file every package. (#1720)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef644ee515ce6a4e627",
    "number": 1719,
    "body": "# Description\r\n\r\npy.typed file was missing from the propagate module. This commit adds it. \r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-py-typed-file-to-propagate-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef644ee515ce6a4e628",
    "number": 1718,
    "body": "",
    "head_branch": "codeboten/prepare-1.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "preparing 1.0.0/0.19b0 release (#1718)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef744ee515ce6a4e629",
    "number": 1717,
    "body": "",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix link in rationale.md (#1717)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef844ee515ce6a4e62a",
    "number": 1713,
    "body": "# Description\r\n\r\nI have an OTEL debugging code in a script as below.\r\n\r\n```python\r\nfrom opentelemetry.sdk.trace.export import ConsoleSpanExporter, SimpleExportSpanProcessor\r\n\r\nif os.getenv(\"_OTEL_ENABLE_CONSOLE_EXPORTER\", None):\r\n    out = sys.stdout\r\n    out_path = os.getenv(\"_OTEL_EXPORTER_CONSOLE_OUT_PATH\", None)\r\n    if out_path is not None:\r\n        out = open(out_path, \"a\")\r\n\r\n        def formatter(span: Span) -> str:\r\n            return cast(str, span.to_json(indent=None)) + \"\\n\"\r\n\r\n        tracer_provider.add_span_processor(\r\n            SimpleExportSpanProcessor(ConsoleSpanExporter(out=out, formatter=formatter))\r\n        )\r\n```\r\n\r\nAnd want to import the JSON-serialized spans later into Jaeger just to confirm the spans as below.\r\n\r\n```python\r\nfrom opentelemetry.exporter.jaeger import JaegerSpanExporter\r\n\r\nexporter = JaegerSpanExporter(\"something\")\r\n\r\nwith open(filename, \"r\") as f:\r\n    for line in f.readlines():\r\n        span = some_method_to_deserialize_json_to_span(line)\r\n        exporter.export([span])\r\n```\r\n\r\nHowever, there's no method for JSON-deserialization in the `Span` class so I needed to map the items by myself. I implemented the `Span.from_json` method so we can easily get back a span from a JSON string for debugging.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nI added unit tests.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "impl-from-json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ef944ee515ce6a4e62b",
    "number": 1712,
    "body": "# Description\r\n\r\nAdds code cleanup.\r\n\r\nFixes #1710\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1710",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200efa44ee515ce6a4e62c",
    "number": 1709,
    "body": "# Description\r\n\r\nrename package from `opentelemetry-exporter-jaeger-proto` to `opentelemetry-exporter-jaeger-proto-grpc`\r\n\r\nFixes #1604 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "codeboten/mv-jaeger-proto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rename package to opentelemetry-exporter-jaeger-proto-grpc (#1709)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200efb44ee515ce6a4e62d",
    "number": 1707,
    "body": "# Description\r\n\r\nWith the current condition, `_get_exporter_names` always fails with no `OTEL_TRACES_EXPORTER`.\r\n\r\n```\r\nPython 3.8.2 (default, Apr 27 2020, 15:52:40)\r\n[Clang 11.0.0 (clang-1100.0.33.17)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from opentelemetry.distro import Configurator\r\ndescription should only be set when status_code is set to StatusCode.ERROR\r\n>>> Configurator().configure()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/dtaniwaki/.pyenv/versions/3.8.2/lib/python3.8/site-packages/opentelemetry/instrumentation/configurator.py\", line 50, in configure\r\n    self._configure(**kwargs)\r\n  File \"/Users/dtaniwaki/github/opentelemetry-python/opentelemetry-distro/src/opentelemetry/distro/__init__.py\", line 152, in _configure\r\n    _initialize_components()\r\n  File \"/Users/dtaniwaki/github/opentelemetry-python/opentelemetry-distro/src/opentelemetry/distro/__init__.py\", line 143, in _initialize_components\r\n    exporter_names = _get_exporter_names()\r\n  File \"/Users/dtaniwaki/github/opentelemetry-python/opentelemetry-distro/src/opentelemetry/distro/__init__.py\", line 55, in _get_exporter_names\r\n    or trace_exporters.lower().strip() != \"none\"\r\nAttributeError: 'NoneType' object has no attribute 'lower'\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tried to configure it with `Configurator().configure()` w/ and w/o `OTEL_TRACES_EXPORTER`.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix get exporter names condition (#1707)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200efb44ee515ce6a4e62e",
    "number": 1706,
    "body": "# Description\r\n\r\nFixes #1698 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/374\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/deprecate-3.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove python 3.5 support (#1706)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200efc44ee515ce6a4e62f",
    "number": 1705,
    "body": "# Description\r\n\r\nFixes #1575 \r\n\r\nMypy Was updated to 0.812 version.\r\n\r\nIt turned out that in the existing configuration not all files from _opentelemetry-api/src/opentelemetry/_ and  _opentelemetry-api/tests/_ were processed by Mypy. It was caused by Mypy 0.790 being unable to detect some of the packages.\r\n2 typing issues were found in _opentelemetry-api/src/opentelemetry/_, 72 in _opentelemetry-api/tests/_.\r\nI've fixed all issues in the main code. For tests, I marked all previously unchecked files as ignore. It would be good to fix them in separate PR.\r\n# How Has This Been Tested?\r\n- [ x] _tox --recreate -e mypy_\r\n- [ x] _tox --recreate -e mypyinstalled_",
    "head_branch": "upgrade_mypy_to_0.812",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade Mypy to version 0.812 (#1705)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200efd44ee515ce6a4e630",
    "number": 1703,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/issues/1685",
    "head_branch": "jaeger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Populate service_name from exporting span in JaegerExporters (#1703)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200efe44ee515ce6a4e631",
    "number": 1702,
    "body": "Fixing an issue reported by a user in Gitter. The arg used to be `-e`, it is now `--trace-exporter`",
    "head_branch": "codeboten/fix-auto-instrumentation-doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "fix wrong argument (#1702)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200eff44ee515ce6a4e632",
    "number": 1699,
    "body": "# Description\r\n\r\nSplitting the zipkin exporter package into `opentelemetry-exporter-zipkin-json` and `opentelemetry-exporter-zipkin-proto` packages. Note that since there's no additional dependencies for `opentelemetry-exporter-zipkin-json`, I used it as the base for `opentelemetry-exporter-zipkin-proto`. I'm open to changing this if it's too confusing.\r\n\r\nLast part of #1604 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/split-zipkin-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "split zipkin exporter into json/proto packages (#1699)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0044ee515ce6a4e633",
    "number": 1697,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1672",
    "head_branch": "baggage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "don't copy baggage for each call to get (#1697)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0044ee515ce6a4e634",
    "number": 1696,
    "body": "https://github.com/open-telemetry/opentelemetry-python/issues/1685",
    "head_branch": "service",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Zipkin exporter to get service_name from span instead of global tracer_provider (#1696)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0144ee515ce6a4e635",
    "number": 1695,
    "body": "# Description\r\n\r\nThe following moves the code from the existing OTLP exporter to `opentelemetry-exporter-otlp-proto-grpc` and creates a meta package that installs it as its dependency `opentelemetry-exporter-otlp`\r\n\r\nPart of #1604 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/split-otlp-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "split otlp exporter (#1695)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0244ee515ce6a4e636",
    "number": 1694,
    "body": "# Description\r\n\r\nThis splits the Jaeger exporter into 3 packages to reduce the amount of dependency a user has to take on to export using their preferred serialization method:\r\n\r\n`opentelemetry-exporter-jaeger`\r\n`opentelemetry-exporter-jaeger-proto`\r\n`opentelemetry-exporter-jaeger-thrift`\r\n\r\nThe first package adds a dependency on the other two for users that don't mind installing both exporters.\r\n\r\nPart of #1604\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nDocumentation in the contrib repo needs updating, but it is not a hard dependency\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/split-jaeger-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "split jaeger exporter for proto/thrift (#1694)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0344ee515ce6a4e637",
    "number": 1692,
    "body": "# Description\r\n\r\nAdding an OpenTelemetry collector as part of the docker tests to ensure the OTLP exporter works w/ it.\r\n\r\nFixes #472 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "codeboten/fix-472",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add otlp grpc exporter test (#1692)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0444ee515ce6a4e638",
    "number": 1690,
    "body": "This PR makes optional the setters and getters from `inject` and `extract`.\r\n\r\nFixes #1644\r\n\r\n# Description\r\n\r\nRemoves setters and getters\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/372\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1644",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make setters and getters optional (#1690)\n\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0544ee515ce6a4e639",
    "number": 1687,
    "body": "once approved the PR, lonewolf3739 will be added to the approvers team",
    "head_branch": "app",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md (#1687)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0644ee515ce6a4e63a",
    "number": 1686,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1150",
    "head_branch": "doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update docs to specify to use Resource APIs to work with Resource (#1686)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0644ee515ce6a4e63b",
    "number": 1684,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1640",
    "head_branch": "ele",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Hide certain implementation specific classes/variables (#1684)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0744ee515ce6a4e63c",
    "number": 1682,
    "body": "# Description\r\n\r\nFixes #1649\r\n",
    "head_branch": "remove-insecure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove insecure param from exporters constructor and OTEL_EXPORTER_*_ INSECURE env var (#1682)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0844ee515ce6a4e63d",
    "number": 1681,
    "body": "# Description\r\n\r\nExposing `StatusCode` from `opentelemetry.trace`\r\n\r\nFixes #1619\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nPR is not required, but did refactor the contrib repo to use this new path\r\n\r\n- [x] Yes. - Link to PR: \r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "expose-status-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "expose StatusCode from opentelemetry.trace (#1681)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0944ee515ce6a4e63e",
    "number": 1680,
    "body": "# Description\r\n\r\nDepends on #1671, must be rebased before merge\r\n\r\n### Live demo https://aabmass.github.io/opentelemetry-python/docs-envvar-demo/exporter/otlp/otlp.html\r\n\r\n- Centralized all the sphinx `.. envvar::` docs into the API/SDK environment variable modules\r\n- Added `.. envvar::` docstrings where they were missing, so they now show in the docs\r\n- Added references to that documentation elsewhere where the envvars are relevant (exporters, BSP, etc.)\r\n- Actually writing the docstrings is todo – i was thinking we could commit this and others can fill in what they know about over time\r\n\r\nPart of #1147\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nBuilt docs to see how it all looks. Here are some screenshots:\r\n\r\n- \r\n  <img width=\"586\" alt=\"Screen Shot 2021-03-08 at 1 04 13 PM\" src=\"https://user-images.githubusercontent.com/1510004/110362422-3f4fef00-800f-11eb-81d4-c8422256a26e.png\">\r\n- \r\n  <img width=\"707\" alt=\"Screen Shot 2021-03-08 at 1 05 47 PM\" src=\"https://user-images.githubusercontent.com/1510004/110362428-4119b280-800f-11eb-990b-cf3041f7c8e5.png\">\r\n- Sphinx index builds a full list of environment variables\r\n  <img width=\"430\" alt=\"Screen Shot 2021-03-08 at 1 06 58 PM\" src=\"https://user-images.githubusercontent.com/1510004/110362429-41b24900-800f-11eb-8d2c-b758c565912d.png\">\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No. **(it can be done separate)**\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "envvar-docs-1147",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve documentation around environment variables (#1680)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0a44ee515ce6a4e63f",
    "number": 1679,
    "body": "# Description\r\n\r\nFix changelog formatting\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n# How Has This Been Tested?\r\n\r\nViewed markdown\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n\r\n",
    "head_branch": "fix-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixed changelog formatting issues (#1679)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0a44ee515ce6a4e640",
    "number": 1676,
    "body": "# Description\r\n\r\nFixes #1643\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/document-default-propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: update documentation to reflect default (#1676)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0b44ee515ce6a4e641",
    "number": 1675,
    "body": "# Description\r\n\r\nAdding documentation for `format_trace_id` and `format_span_id`. In the process starting using the methods wherever trace/span ID formatting duplicated code existed. Note this also removes a couple of very similar methods which I could not find of.\r\n\r\nFixes #1639 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/format-methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "cleaning up trace/span id format methods (#1675)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0c44ee515ce6a4e642",
    "number": 1674,
    "body": "\r\n\r\n# Description\r\n\r\nThis generates OTLP proto again for version 0.7.0. The version had no breaking changes.\r\n\r\nFixes #1667\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Verified all existing tests pass\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otlp-070",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use opentelemetry-proto 0.7.0 (#1674)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0d44ee515ce6a4e643",
    "number": 1673,
    "body": "# Description\r\n\r\nAccording to the spec:\r\n\r\n> Description MUST only be used with the Error StatusCode value.\r\n> An empty Description is equivalent with a not present one.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#set-status\r\n\r\nThis commit updates the `Status` implementation to comply with the spec.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Add new tests\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n\r\nYes, https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#set-status\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "status-code-description",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Span Status: only set description for ERROR status code. (#1673)\n\n\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0e44ee515ce6a4e644",
    "number": 1671,
    "body": "# Description\r\n\r\n- Clean up OTLP exporter compression options and envvar code.\r\n- Added tests for this code as well.\r\n- Rename env vars `OTEL_EXPORTER_OTLP_SPAN_*` -> `OTEL_EXPORTER_OTLP_TRACES_*` per spec update\r\n- Updated and moved envvar documentation into the `opentelemetry.sdk.environment_variables` package\r\n- ~Fixed the changelog formatting 😄~ moved to #1679 \r\n\r\n[Relevant part of spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md#user-content-configuration-options:~:text=Supported%20values%20for%20OTEL_EXPORTER_OTLP_*COMPRESSION%20options%3A,be%20documented%20for%20each%20particular%20language.):\r\n> Supported values for `OTEL_EXPORTER_OTLP_*COMPRESSION` options:\r\n>\r\n> - If the value is missing, then compression is disabled.\r\n> - `gzip` is the only specified compression method for now. Other options MAY be supported by language SDKs and should be documented for each particular language.\r\n\r\nThe gRPC python impl supports `Deflate` so I have added it as well.\r\n\r\nFixes #1327\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded lots of new test cases\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated",
    "head_branch": "otlp-compression-cleanup-1327",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup OTLP exporter compression options, add tests (#1671)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0e44ee515ce6a4e645",
    "number": 1669,
    "body": "# Description\r\nThe service-name parameter from the constructors of exporters of Opencensus, jaeger was removed.\r\nInstead the  Resource's service.name attribute from Tracer/Span was used to get the service_name\r\n\r\nFixes # (issue)\r\n#1607 \r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove_service_name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove service name (#1669)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f0f44ee515ce6a4e646",
    "number": 1668,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1630 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated/Added tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n\r\nResult of: https://github.com/open-telemetry/opentelemetry-python/issues/1630\r\n\r\n\r\n- [x] Yes. - Link to PR:  https://github.com/open-telemetry/opentelemetry-python-contrib/pull/364\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "move-usespan-out-of-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move `use_span()` method from Tracer to `opentelemetry.trace.use_span()` (#1668)\n\nFixes: #1630"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1044ee515ce6a4e647",
    "number": 1666,
    "body": "# Description\r\n\r\nFixes #1622 \r\n\r\nIt was not possible to change Jaeger protocol via env vars when attempting to use gRPC or Thrift over HTTP. Besides, the exporter configuration started deviating from the Zipkin exporter configuration where Zipkin has an optional `protocol` input field ([example](https://github.com/open-telemetry/opentelemetry-python/blob/main/exporter/opentelemetry-exporter-zipkin/src/opentelemetry/exporter/zipkin/__init__.py#L44)).\r\n\r\nZipkin already has a reserved environment variable [`OTEL_EXPORTER_ZIPKIN_PROTOCOL`](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/sdk-environment-variables.md#zipkin-exporter) in the spec for the same purpose so this is an attempt to unify the configurations.\r\n\r\nThere's an existing spec PR to add `OTEL_EXPORTER_JAEGER_PROTOCOL` [here](https://github.com/open-telemetry/opentelemetry-specification/pull/1453).\r\n\r\nUpdated documentation to reflect the supported Jaeger exporter environment variables.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests and manual run with the service described in #1622 \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "jaeger-grpc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1144ee515ce6a4e648",
    "number": 1664,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1642",
    "head_branch": "span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove 'span' for jaeger and zipkin exporters (#1664)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1244ee515ce6a4e649",
    "number": 1663,
    "body": "# Description\r\n\r\nRenames `BaggagePropagator` to `W3CBaggagePropagator`\r\n\r\nFixes #1637 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "rename-baggage-propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rename BaggagePropagator to W3CBaggagePropagator (#1663)\n\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1244ee515ce6a4e64a",
    "number": 1662,
    "body": "# Description\r\n\r\nMoving `Getter`, `Setter` and `TextMapPropagator` out of `opentelemetry.trace.propagation` and into `opentelemetry.propagators`\r\n\r\nFixes #1638 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/355\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "move-getter-setter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "move textmap propagators to opentelemetry.propagators (#1662)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1344ee515ce6a4e64b",
    "number": 1661,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1635",
    "head_branch": "rec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename DefaultSpan to NonRecordingSpan (#1661)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1444ee515ce6a4e64c",
    "number": 1657,
    "body": "# Description\r\n\r\nInitializing otel distro failed due to wrong usage of `set.pop()`. Fixed it and added test cases.\r\n\r\nFixes #1623\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit tests and tested with the same setup as in the original issue.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-distro-set-usage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "distro: fix auto instrumentation with otlp OTEL_TRACES_EXPORTER env var (#1657)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1544ee515ce6a4e64d",
    "number": 1656,
    "body": "# Description\r\n\r\nRenamed `BatchExportSpanProcessor` to `BatchSpanProcessor` and `SimpleExportSpanProcessor` to\r\n  `SimpleSpanProcessor`\r\n\r\nFixes #1634\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "rename-span-processor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rename span processor (#1656)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1644ee515ce6a4e64e",
    "number": 1655,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n",
    "head_branch": "fix-example-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1744ee515ce6a4e64f",
    "number": 1653,
    "body": "# Description\r\n\r\nFixes #1632 \r\n",
    "head_branch": "rename-create-empty",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename Resource's create_empty to get_empty (#1653)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1744ee515ce6a4e650",
    "number": 1652,
    "body": "# Description\r\n\r\nFixes #1631 \r\n",
    "head_branch": "resource-private",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make TracerProvider's resource private (#1652)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1844ee515ce6a4e651",
    "number": 1651,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1629",
    "head_branch": "id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename IdsGenerator to IdGenerator (#1651)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1944ee515ce6a4e652",
    "number": 1650,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1624",
    "head_branch": "update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove gitter from docs (#1650)\n\n\r\nCo-authored-by: alrex <alrex.boten@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1a44ee515ce6a4e653",
    "number": 1633,
    "body": "# Description\r\n\r\nThis commit adds ability to specifiy maximum length for string\r\nattributes to the Jaeger exporter. This is similar to how Zipkin\r\nexporter supports `max_tag_value_length`.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "jaeger-max-tag-value-length",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add `max_tag_value_length` support to Jaeger exporter (#1633)\n\nThis commit adds ability to specifiy maximum length for string\r\nattributes to the Jaeger exporter. This is similar to how Zipkin\r\nexporter supports `max_tag_value_length`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1b44ee515ce6a4e654",
    "number": 1626,
    "body": "# Description\r\n\r\nUpdate documentation to reflect minimum version of Python\r\n\r\nFixes #1625 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\nThere will be a corresponding PR for updating the documentation in the contrib repo but there's no hard requirement on it.\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/add-version-requirement",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add minimum Python requirement (#1626)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1c44ee515ce6a4e655",
    "number": 1621,
    "body": "Bumping versions to pass builds for https://github.com/open-telemetry/opentelemetry-python-contrib/pull/347",
    "head_branch": "hotfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Hotfix (#1621)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200f1d44ee515ce6a4e656",
    "number": 1616,
    "body": "",
    "head_branch": "update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1d44ee515ce6a4e657",
    "number": 1615,
    "body": "# Description\r\n\r\nAdds support for the http/protobuf protocol. Code structure has been refactored to introduce the notions of `Encoders` (e.g. Protobuf) and `Senders` (e.g. GRPC, HTTP) akin to the recent refactoring of the Zipkin Exporter. This was done to decouple the functionality to allow for the introduction of additional implementations of each and, as importantly, for easier and cleaner testing. The structure is also well suited for handling the re-introduction of metric signals when the code becomes stable (I initially had the metric code refactored and included ;) but pulled it out when it was moved to experimental status).\r\n\r\n**Breaking Changes**\r\n`OTLPSpanExporter`:\r\n- moved from `opentelemetry.exporter.otlp.exporter` => `opentelemetry.exporter.otlp`\r\n- `__init__` signature argument changes:\r\n  - `protocol`: new and required\r\n  - `compression`: type changed from string to enum\r\n  - `headers`: type changed from Sequence to Dict for more apt structure. Headers, whether passed in or retrieved from env vars, are now parsed into a common dict structure before being passed into the Senders.\r\n  - `credentials`: changed to `certificate_file` (optional string). This aligns with the [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md#configuration-options) and is necessary since http/protobuf can not make use of a `ChannelCredentials` object - which is what the type was for credentials.\r\n\r\nFixes #1106 \r\n\r\n## Type of change\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n- [x] unit tests\r\n- [ ] manual testing against local OTLP server:\r\n  - [ ] http/protobuf support\r\n  - [ ] grpc regression testing\r\n  - [ ] http/protobuf & grpc output comparison\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1106_otlp_exporter_http_protobuf_support_v3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1e44ee515ce6a4e658",
    "number": 1614,
    "body": "",
    "head_branch": "update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Chore] Update main after 0.18b0 release (#1614)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f1f44ee515ce6a4e659",
    "number": 1613,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1611\r\n\r\nPylint failing after latest release. Temporary fix to unblock PRs.",
    "head_branch": "lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix for pylint (#1613)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2044ee515ce6a4e65a",
    "number": 1612,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2144ee515ce6a4e65b",
    "number": 1610,
    "body": "Release for 0.18b0 which updates components to use 1.0.0rc1.\r\nWould only target the below non-core opentelemetry packages:\r\n\r\n`opentelemetry-distro`\r\n`opentelemetry-exporter-opencensus`\r\n`opentelemetry-instrumentation`\r\n`opentelemetry-opentracing-shim`\r\n",
    "head_branch": "release/0.18b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release for 0.18b0 (#1610)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66200f2144ee515ce6a4e65c",
    "number": 1609,
    "body": "# Description\r\n\r\nAdd how to work with fork process web server models(Gunicorn, uWSGI etc...)\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/291\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e docs`\r\n- [x] `tox -e lint`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fork-process",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Document how to work with fork process web server models(Gunicorn, uWSGI etc...) (#1609)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2244ee515ce6a4e65d",
    "number": 1603,
    "body": "",
    "head_branch": "version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update main after 1.0.0rc1 release (#1603)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2344ee515ce6a4e65e",
    "number": 1602,
    "body": "This PR depends on #1599, I have marked this PR as a draft until #1599 gets merged to avoid trouble when reviewing.\r\n\r\n# Description\r\n\r\nThis removes `time_ns` from our API. We were providing this only to support Python versions older than 3.7 that did not include `time_ns` as a function of `time`. The problem with the current approach is that it provides a function that does not have the resolution that the new `time_ns` provides, it is misleading for our users to have a function named `time_ns` that does not provide actual nanosecond resolution. Having this function in our API is problematic, having a function that returns the time in nanoseconds is not part of the spec and makes us have to support it in future versions.\r\n\r\nThe solution here artificially adds a function named `time_ns` to `time` for Python versions older than 3.7. With this approach, our users can always do `from time import time_ns` and when we decide not to support Python 3.5 (which has [reached end of life already](https://www.python.org/downloads/release/python-3510/)) or Python 3.6 (which will [reach end of life by the end of this year](https://www.python.org/dev/peps/pep-0494/#and-beyond-schedule)) then we can simply remove this solution. This will be completely transparent to our users because they will never import any `time_ns` function from an `opentelemetry` package.\r\n\r\nFixes #1594\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [X] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/342\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1594",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove time_ns from API (#1602)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2444ee515ce6a4e65f",
    "number": 1601,
    "body": "Will only be releasing:\r\n\r\nopentelemetry-api\r\nopentelemetry-sdk\r\nopentelemetry-exporter-jaeger\r\nopentelemetry-exporter-otlp\r\nopentelemetry-exporter-zipkin\r\nopentelemetry-proto\r\nopentelemetry-propagator-b3\r\nopentelemetry-propagator-jaeger\r\n\r\nThe build script (`build.sh`) has been modified to only create dists for these above packages.\r\n\r\nSince it is only rc1, we will not be adding the `Development Status :: 5 - Production/Stable` classifier as of yet.\r\n\r\nThe packages that are not rcing will be kept at `0.17b0` and a separate release will be cut for those.",
    "head_branch": "release/1.0.0rc1-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release for 1.0.0rc1 (#1601)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2544ee515ce6a4e660",
    "number": 1600,
    "body": "Will only be releasing:\r\n\r\nopentelemetry-api\r\nopentelemetry-sdk\r\nopentelemetry-exporter-jaeger\r\nopentelemetry-exporter-otlp\r\nopentelemetry-exporter-zipkin\r\nopentelemetry-proto\r\nopentelemetry-propagator-b3\r\nopentelemetry-propagator-jaeger\r\n\r\nThe build script (`build.sh`) has been modified to only create dists for these above packages.\r\n\r\nSince it is only rc1, we will not be adding the `Development Status :: 5 - Production/Stable` classifier as of yet.",
    "head_branch": "release/1.0.0rc1-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2644ee515ce6a4e661",
    "number": 1599,
    "body": "# Description\r\n\r\nThe contents of `opentelemetry.utils` include some things that should be private and some things that belong somewhere else.\r\nThis refactors this package to fix that.\r\n\r\nFixes #1598\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [X] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/331\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1598",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor utils (#1599)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2644ee515ce6a4e662",
    "number": 1597,
    "body": "# Description\r\n\r\nAs per spec change: https://github.com/open-telemetry/opentelemetry-specification/commit/03a6f0fd9d1d2f5e08858b102ba620ebf3e4a6fa\r\n\r\nFixes #1596 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-limits-128",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update limits as per specification (#1597)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2744ee515ce6a4e663",
    "number": 1595,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1566",
    "head_branch": "traces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename env vars from OTEL_TRACE -> OTEL_TRACES (#1595)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2844ee515ce6a4e664",
    "number": 1591,
    "body": "Fixes #1590\r\n\r\nMakes propagators a namespace so that we can have proper propagators in the contrib repo as well as here.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/302\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1590",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make propagators a namespace (#1591)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2944ee515ce6a4e665",
    "number": 1589,
    "body": "Fixes #1576 \r\n",
    "head_branch": "use-github-discussions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update README.md (#1589)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2944ee515ce6a4e666",
    "number": 1588,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1547",
    "head_branch": "version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update versioning doc (#1588)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2a44ee515ce6a4e667",
    "number": 1584,
    "body": "# Description\r\n\r\nThis change adds `urllib` to opentelemetry auto instrumentation target list of libraries.",
    "head_branch": "bootstrap-urllib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add urllib to opentelemetry-bootstrap target list (#1584)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2b44ee515ce6a4e668",
    "number": 1583,
    "body": "Fixes #1580\r\n\r\nThis is necessary to avoid sitecustomize from being run more than once\r\nif the command executed byt opentelemetry-instrument also invokes the\r\npython interpreter.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1580",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove sitecustomize path from PYTHONPATH (#1583)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2c44ee515ce6a4e669",
    "number": 1582,
    "body": "Fixes #1581\r\n\r\nThis basically renames the __init__.py file in opentelemetry-api/util to\r\nmake opentelemetry.util a proper namespace. This is needed since we are\r\nnow adding components in the contrib repo in this namespace. More\r\ninformation here:\r\n\r\nhttps://packaging.python.org/guides/packaging-namespace-packages/#native-namespace-packages\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/319\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1581",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make util a namespace (#1582)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2d44ee515ce6a4e66a",
    "number": 1579,
    "body": "",
    "head_branch": "metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update CONTRIBUTING.md with instructions for branches (#1579)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2e44ee515ce6a4e66b",
    "number": 1578,
    "body": "# Description\r\n\r\nA missing dependency in tox was causing the getting-started task to fail, this fixes that.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/317\r\n- [ ] No.\r\n",
    "head_branch": "update-sha",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix missing wsgi dependency (#1578)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2f44ee515ce6a4e66c",
    "number": 1574,
    "body": "Updating old instrumentation folder reference and mix of markdown & rst formats.",
    "head_branch": "readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md (#1574)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f2f44ee515ce6a4e66d",
    "number": 1571,
    "body": "Fixes #1569\r\n\r\n# Description\r\n\r\nMeter and Tracer provider environment variables were not consistent with the rest after `Configuration` was removed, this fixes that problem.\r\n\r\nFixes #1569\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1569",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use environment variables for tracer and meter providers (#1571)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3044ee515ce6a4e66e",
    "number": 1568,
    "body": "As part of the discussion [here](https://github.com/open-telemetry/opentelemetry-python/issues/1547#issuecomment-768592654)",
    "head_branch": "remove-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove metrics from main branch (#1568)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3144ee515ce6a4e66f",
    "number": 1565,
    "body": "Fixes #1564\r\n\r\n# Description\r\n\r\nSets actions cache version back to V2\r\n\r\nFixes #1564\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1564",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set actions cache back to V2 (#1565)\n\nFixes #1564"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3244ee515ce6a4e670",
    "number": 1561,
    "body": "# Description\r\n\r\nMinor updates to the release process script, don't bother creating an `auto` branch and updates only the single changelog.\r\n\r\nFixes #1540 \r\n\r\n",
    "head_branch": "update-release-script",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "minor fixes to release scripts (#1561)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3344ee515ce6a4e671",
    "number": 1560,
    "body": "# Description\r\n\r\nThis PR adds `ReadableSpan` to provide read-only access to attributes of a Span\r\n\r\nFixes #1001 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "readable-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding readable span (#1560)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3344ee515ce6a4e672",
    "number": 1558,
    "body": "Fixes #1549 \r\n",
    "head_branch": "rename-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating references to main (#1558)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3444ee515ce6a4e673",
    "number": 1555,
    "body": "In https://github.com/open-telemetry/opentelemetry-python-contrib/pull/301 setting the `component` span attribute is removed in all instrumentations. This PR cleans up references in the core repo.\r\n",
    "head_branch": "cleanup-component-semconv-attr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup references to semantic convetion 'component' attribute (#1555)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3544ee515ce6a4e674",
    "number": 1553,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/issues/1133 ",
    "head_branch": "docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update some docs (#1553)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3644ee515ce6a4e675",
    "number": 1552,
    "body": "# Description\r\n\r\nThe stable build *should* be fixed, but if not, added a note in the release doc to ensure maintainers check the state of the build and trigger it if it did not run.\r\n\r\nFixes #1352\r\n",
    "head_branch": "update-release-doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "adding note to check on the stable docs build (#1552)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3744ee515ce6a4e676",
    "number": 1551,
    "body": "",
    "head_branch": "conf-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3844ee515ce6a4e677",
    "number": 1550,
    "body": "# Description\r\nAdded the new passcode for Zoom meetings. This is a documentation-only change.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Zoom passcode (#1550)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3944ee515ce6a4e678",
    "number": 1548,
    "body": "# Description\r\n\r\nThe example mentioned in basic resource needs a dependency `opentelemetry-tools-google-cloud` to work.  https://github.com/open-telemetry/opentelemetry-python/blob/ca8c0970f88b083b57c85322c997595d0ffc3702/docs/examples/basic_tracer/resources.py#L1-L19\r\n\r\n\r\nBased on discussion https://github.com/open-telemetry/opentelemetry-python/pull/1548#discussion_r563560194 removed the GCP resource detector and added simple resource creation.",
    "head_branch": "docs-exm-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update docs (#1548)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3944ee515ce6a4e679",
    "number": 1545,
    "body": "# Description\r\n\r\nAdds support for missing carriers from Jaeger\r\n\r\nFixes #1542 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nCreated a failing unit test.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Unit tests have been added\r\n",
    "head_branch": "issue_1542_allow_jaeger_propagation_to_work_without_contexts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "1542. Allow missing carrier headers to continue without raising AttributeError (#1545)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3a44ee515ce6a4e67a",
    "number": 1544,
    "body": "# Description\r\n\r\nFixes #1543 \r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-core-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "resource-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Resource merge key conflict precedence (#1544)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3b44ee515ce6a4e67b",
    "number": 1541,
    "body": "",
    "head_branch": "update-version-18dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[post-release] updating version to 0.18.dev0 (#1541)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3c44ee515ce6a4e67c",
    "number": 1539,
    "body": "# Description\r\n\r\nThe opentracing shim was moved from `instrumentation` to `shim`, this build script was not updated as part of that change. This fixes that.\r\n",
    "head_branch": "fix-build-script",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "rename instrumentation to shim (#1539)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3d44ee515ce6a4e67d",
    "number": 1538,
    "body": "",
    "head_branch": "release/0.17b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-release] Update changelogs, version [0.17b0] (#1538)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3e44ee515ce6a4e67e",
    "number": 1536,
    "body": "# Description\r\n\r\nFrom Sampler [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/sdk.md#getdescription)\r\n\r\n> ### GetDescription\r\n> Returns the sampler name or short description with the configuration. This may be displayed on debug pages or in the logs. Example: `\"TraceIdRatioBased{0.000100}\"`.\r\nDescription MUST NOT change over time and caller can cache the returned value.\r\n\r\nThis implies rate should not be changed after instantiation, hence removing the rate setter from `TraceIdRatioBasedSampler`. Adding cache doesn't really change anything as there are no computationally expensive operations.",
    "head_branch": "remote-rate-setter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove rate property setter from TraceIdRatioBasedSampler (#1536)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3e44ee515ce6a4e67f",
    "number": 1535,
    "body": "# Description\r\n\r\nFrom sdk exporters [specs](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/sdk_exporters/jaeger.md#instrumentationlibrary).\r\n\r\nOpenTelemetry Span's `InstrumentationLibrary` MUST be reported as span `tags` to Jaeger/Zipkin using the following mapping.\r\n\r\n\r\nOpenTelemetry | Jaeger/Zipkin\r\n-- | --\r\n`InstrumentationLibrary.name` | `otel.library.name`\r\n`InstrumentationLibrary.version` | `otel.library.version`\r\n",
    "head_branch": "instrumentation-lib-key",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update InstrumentationInfo tag keys for Jaeger and Zipkin exporters (#1535)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f3f44ee515ce6a4e680",
    "number": 1533,
    "body": "Fixes #1359 ",
    "head_branch": "shim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move opentracing-shim folder out of instrumentation folder (#1533)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4044ee515ce6a4e681",
    "number": 1530,
    "body": "# Description\r\n\r\nFixes #1529\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-b3-test-job",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding propagator to GH action (#1530)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4144ee515ce6a4e682",
    "number": 1528,
    "body": "",
    "head_branch": "perf-benchmark-example",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4244ee515ce6a4e683",
    "number": 1525,
    "body": "# Description\r\n\r\nThis PR moves the jaeger propagator into its own package opentelemetry-propagator-jaeger as per the spec.\r\n\r\nFixes #1524\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] unit tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "move-jaeger-propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move jaeger propagator out of SDK (#1525)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4244ee515ce6a4e684",
    "number": 1523,
    "body": "Remove `Configuration` from everywhere.\r\n\r\nFixes #1494 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [X] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/285\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1494",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove `Configuration` (#1523)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4344ee515ce6a4e685",
    "number": 1521,
    "body": "# Description\r\n\r\nCurrently `BatchExportSpanProcessor` [skips the sleep if it already has `max_export_batch_size` in queue](https://github.com/open-telemetry/opentelemetry-python/blob/5450e6decfbc82b9fa1d2b159272efa33b112c97/opentelemetry-sdk/src/opentelemetry/sdk/trace/export/__init__.py#L211), 512 by default. But it interrupts that sleep only when [it collects 1024 items in the queue](https://github.com/open-telemetry/opentelemetry-python/blob/5450e6decfbc82b9fa1d2b159272efa33b112c97/opentelemetry-sdk/src/opentelemetry/sdk/trace/export/__init__.py#L197).\r\n\r\nIt should export immediately when there are `max_export_batch_size` items in the queue.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nManually by creating spans and analysing logs\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "export-earlier",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Flush export queue when it reaches `max_export_batch_size` (#1521)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4444ee515ce6a4e686",
    "number": 1520,
    "body": "# Description\r\n\r\nOnly static span attributes could be added via `start_as_current_span` when it's used as decorator. If then many dynamic attributes should be added, multiple calls of `set_attribute` have to be made. Every call acquires/releases a lock, checks if span is ended. \r\n\r\nUse case:\r\n```py\r\n@tracer.start_as_current_span('handle_request')\r\ndef handle(request):\r\n    current_span = trace_api.get_current_span()\r\n    current_span.set_attribute('http.method', request.method)\r\n    current_span.set_attribute('http.url', request.url)\r\n    ...\r\n```\r\nvs\r\n```py\r\n@tracer.start_as_current_span('handle_request')\r\ndef handle(request):\r\n    trace_api.get_current_span().set_attributes({\r\n        'http.method': request.method,\r\n        'http.url': request.url\r\n    })\r\n    ...\r\n```\r\n\r\nNot less lines, but less copypaste and much more readable (from my perspective).\r\n\r\nAlso useful when attributes are [conditionally, dynamically] gathered as a dict in many places of a method and then set to span at one call.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests updated respectively\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-set-attributes-method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add `Span.set_attributes` method (#1520)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4544ee515ce6a4e687",
    "number": 1519,
    "body": "# Description\r\n\r\n`start_as_current_span` is just a helper that combines `start_span` and `use_span` methods. But it doesn't allow to change `end_on_exit` attribute. When it's required user have to call two underlying methods explicitly. Wrapper should expose all attributes to cover all cases.\r\n\r\nExample use case:\r\n```py\r\ndef demo():\r\n    with tracer.start_as_current_span('task', end_on_exit=False) as span:\r\n        # Do some synchronous task preparation \r\n        # that must be part of the span\r\n        task_data = ...\r\n\r\n        # Contunue asynchronously\r\n        executor.submit(\r\n            tracer.use_span(span, use_span=True)(task_handler),\r\n            task_data,\r\n        )\r\n```\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests updated respectively\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "start-span-no-end-on-exit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow to `start_as_current_span` with `end_on_exit=False` (#1519)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4644ee515ce6a4e688",
    "number": 1518,
    "body": "# Description\r\n\r\nCurrent implementation requires to import 2 classes (`Status` and `StatusCode`) from rather arbitrary location and requires 5 lines of code for that simple action every time:\r\n```py\r\nspan.set_status(\r\n    trace.status.Status(\r\n        status_code=trace.status.StatusCode.OK,\r\n    )\r\n)\r\n```\r\n\r\nThat is not convenient and not a python way to do things.\r\n\r\nWith this PR I'm simplifying `Span.set_status` interface to accept `StatusCode` or enum name. With that simple action becomes simple in code:\r\n```py\r\nspan.set_status('OK')\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests updated respectively\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "easy-set-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4644ee515ce6a4e689",
    "number": 1516,
    "body": "# Description\r\n\r\nFixes #1515 \r\n",
    "head_branch": "otlp-port-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update default port for OTLP exporter to 4317 (#1516)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4744ee515ce6a4e68a",
    "number": 1514,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1493",
    "head_branch": "id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move idsgenerator from api into sdk package (#1514)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4844ee515ce6a4e68b",
    "number": 1513,
    "body": "# Description\r\n\r\nThis PR moves the b3 propagator into its own package `opentelemetry-propagator-b3` as per the spec.\r\n\r\nFixes #1221\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] unit tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "move-b3-out",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move b3 propagator out of SDK (#1513)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4944ee515ce6a4e68c",
    "number": 1512,
    "body": "Probably missed in #1099 . Default context for py3.5+ is [contextvars_context](https://github.com/codeboten/opentelemetry-python/blob/406748992054b1e2d3b1d24b1ad44ca050a52efa/opentelemetry-api/src/opentelemetry/context/__init__.py#L50)\r\n\r\nFixes #1511 ",
    "head_branch": "fsk-threadlocalcontext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove ThreadLocalRuntimeContext since py34 is no longer supported (#1512)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4a44ee515ce6a4e68d",
    "number": 1509,
    "body": "Fixes #1508 ",
    "head_branch": "zipkin-bool-attrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Zipkin: Update span boolean attribute conversion (#1509)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4b44ee515ce6a4e68e",
    "number": 1507,
    "body": "# Description\r\n\r\nThe header data was previously passed in as a string, this was incorrect according to the definition of metadata in gRPC.\r\n\r\nFixes #1506 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pass OTLP metadata as tuple instead of string (#1507)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4c44ee515ce6a4e68f",
    "number": 1505,
    "body": "## Motivation\r\nFollow up to issue Follow up to issue https://github.com/open-telemetry/oteps/issues/144 \r\n\r\n\r\n[CodeQL](https://github.com/github/codeql-action) is GitHub's static analysis engine which scans repos for security vulnerabilities. As the project grows and we near GA it might be useful to have a workflow which checks for security vulnerabilities with every PR so we can ensure every incremental change is following best development practices. Also passing basic security checks will also make sure that there aren't any glaring issues for our users. \r\n\r\n## Changes\r\n\r\n* This PR adds [CodeQL](https://github.com/github/codeql-action) security checks to the repo\r\n* After every run the workflow uploads the results to GitHub. Details on the run and security alerts will show up in the `security` tab of this repo. \r\n\r\n**Workflow Triggers**\r\n* daily cron job at 1:30am\r\n* workflow_dispatch (in case maintainers want to trigger a security check manually)\r\n\r\ncc- @alolita ",
    "head_branch": "CodeQLWorkflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added CodeQL Analysis workflow (#1505)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4c44ee515ce6a4e690",
    "number": 1503,
    "body": "",
    "head_branch": "status-code-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Code cleanup (#1503)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4d44ee515ce6a4e691",
    "number": 1502,
    "body": "# Description\r\n\r\nFixes #1487 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-core-api`\r\n- [x] `tox -e test-core-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes, Link to PR https://github.com/open-telemetry/opentelemetry-python-contrib/pull/276.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "trace-state-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix TraceState to adhere to specs (#1502)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4e44ee515ce6a4e692",
    "number": 1501,
    "body": "# Description\r\nAttempting to discourage accessing Span Attributes outside the SDK using the method suggested by @Oberon00.\r\n\r\nFixes #1001 \r\n\r\n# How Has This Been Tested?\r\nThis is currently failing tests and is a work in progress. The pull request has only been opened as a draft for feedback on the method.",
    "head_branch": "MakeSpanAttributesPrivate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f4f44ee515ce6a4e693",
    "number": 1500,
    "body": "# Description\r\n\r\nIf we use the BatchExportSpanProcessor combined with the\r\nJaegerSpanExporter and use instrumentations that add a lot of metadata\r\nto the spans like sqlalchemy, then we run occationally into the \"Data\r\nexceeds the max UDP packet size\" warning causing dropped spans and\r\nincomplete data.\r\n\r\nThe option to reduce the general batch-size to a very small number (in\r\nmy case >30) may cause a performance issue as the worker thread of the\r\nbatch exporter gets very busy. Instead this change allows the user to\r\nask the exporter to split oversized batches when they get detected and\r\nsend the splits separately instead of dropping them. Depending on the\r\nusecase this is a better option than reducing the batch-size to a very\r\nsmall value because every now and then they contain a couple of large\r\nspans.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] A unittest was added\r\n- [x] Its running successfully in production \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "jaeger-split-batches",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add possibility to split oversized udp batches (#1500)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5044ee515ce6a4e694",
    "number": 1499,
    "body": "# Description\r\n\r\nAdds resource usage tests (testing CPU & Memory) according to the performance tests guideline on [the specifications](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/performance-benchmark.md#instrumentation-cost).\r\n\r\nThis PR adds example files that can be run to see where CPU & Memory allocations are mostly made over simple test cases for the OTel SDK.\r\n\r\nWe don't have an automated solution for reporting on CPU & Memory usage right now, but I added the tests in this PR description just like [how the Java SDK does it](https://github.com/open-telemetry/opentelemetry-java/pull/2186) as a temporary solution.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAll tests were run on a m5.xlarge EC2 instance:\r\n\r\n1. Install scalene using the following command\r\n\r\n```\r\npip install -U scalene\r\n```\r\n\r\n2a. Run the `SimpleExportSpanProcessor` `scalene` test using\r\n```\r\nscalene opentelemetry-sdk/tests/performance/resource-usage/trace/profile_resource_usage_simple_export.py\r\n```\r\n\r\nGet the following results:\r\n```\r\n                                                                                                                                                                                            Memory usage: ▅▆▆▆▆▆▆▇▇▇▇▆▇▇▇████ (max:  25.00MB)\r\n                                                                                                                                                    opentelemetry-sdk/tests/performance/resource-usage/trace/profile_resource_usage_simple_export.py: % of time = 100.00% out of  23.57s.\r\n       ╷       ╷        ╷    ╷       ╷      ╷              ╷       ╷\r\n  Line │Time % │Time %  │Sys │Mem %  │Net   │Memory usage  │Copy   │\r\n       │Python │native  │%   │Python │(MB)  │over time / % │(MB/s) │opentelemetry-sdk/tests/performance/resource-usage/trace/profile_resource_usage_simple_export.py\r\n╺━━━━━━┿━━━━━━━┿━━━━━━━━┿━━━━┿━━━━━━━┿━━━━━━┿━━━━━━━━━━━━━━┿━━━━━━━┿━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸\r\n     1 │       │        │    │       │      │              │       │# Copyright The OpenTelemetry Authors\r\n     2 │       │        │    │       │      │              │       │#\r\n     3 │       │        │    │       │      │              │       │# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n     4 │       │        │    │       │      │              │       │# you may not use this file except in compliance with the License.\r\n     5 │       │        │    │       │      │              │       │# You may obtain a copy of the License at\r\n     6 │       │        │    │       │      │              │       │#\r\n     7 │       │        │    │       │      │              │       │#     http://www.apache.org/licenses/LICENSE-2.0\r\n     8 │       │        │    │       │      │              │       │#\r\n     9 │       │        │    │       │      │              │       │# Unless required by applicable law or agreed to in writing, software\r\n    10 │       │        │    │       │      │              │       │# distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    11 │       │        │    │       │      │              │       │# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    12 │       │        │    │       │      │              │       │# See the License for the specific language governing permissions and\r\n    13 │       │        │    │       │      │              │       │# limitations under the License.\r\n    14 │       │        │    │       │      │              │       │\r\n    15 │       │        │    │       │      │              │       │import time\r\n    16 │       │        │    │  100% │   17 │▂▂▂▂▃▂▃▃▃     │       │from unittest.mock import patch\r\n    17 │       │        │    │       │      │              │       │\r\n    18 │       │        │    │   97% │    8 │▄▄▅▅ 62%      │     1 │from opentelemetry.exporter.otlp.trace_exporter import OTLPSpanExporter\r\n    19 │       │        │    │       │      │              │       │from opentelemetry.sdk.trace import TracerProvider, sampling\r\n    20 │       │        │    │       │      │              │       │from opentelemetry.sdk.trace.export import SimpleExportSpanProcessor\r\n    21 │       │        │    │       │      │              │       │\r\n    22 │       │        │    │       │      │              │       │TEST_DURATION_SECONDS = 15\r\n    23 │       │        │    │       │      │              │       │SPANS_PER_SECOND = 10_000\r\n    24 │       │        │    │       │      │              │       │\r\n    25 │       │        │    │       │      │              │       │\r\n    26 │       │        │    │       │      │              │       │class MockTraceServiceStub(object):\r\n    27 │       │        │    │       │      │              │       │    def __init__(self, channel):\r\n    28 │       │        │    │       │      │              │       │        self.Export = lambda *args, **kwargs: None\r\n    29 │       │        │    │       │      │              │       │\r\n    30 │       │        │    │       │      │              │       │\r\n    31 │       │        │    │       │      │              │       │old_stub = OTLPSpanExporter._stub\r\n    32 │       │        │    │       │      │              │       │OTLPSpanExporter._stub = MockTraceServiceStub\r\n    33 │       │        │    │       │      │              │       │\r\n    34 │       │        │    │       │      │              │       │simple_span_processor = SimpleExportSpanProcessor(OTLPSpanExporter())\r\n    35 │       │        │    │       │      │              │       │tracer = TracerProvider(\r\n    36 │       │        │    │       │      │              │       │    active_span_processor=simple_span_processor, sampler=sampling.DEFAULT_ON,\r\n    37 │       │        │    │       │      │              │       │).get_tracer(\"resource_usage_tracer\")\r\n    38 │       │        │    │       │      │              │       │\r\n    39 │       │        │    │       │      │              │       │starttime = time.time()\r\n    40 │       │        │    │       │      │              │       │for _ in range(TEST_DURATION_SECONDS):\r\n    41 │       │        │    │       │      │              │       │    for _ in range(SPANS_PER_SECOND):\r\n    42 │   26% │     1% │    │       │      │              │     3 │        span = tracer.start_span(\"benchmarkedSpan\")\r\n    43 │   71% │     2% │    │       │      │              │    10 │        span.end()\r\n    44 │       │        │    │       │      │              │       │    time_to_finish_spans = time.time() - starttime\r\n    45 │       │        │    │       │      │              │       │    time.sleep(1.0 - time_to_finish_spans if time_to_finish_spans < 1.0 else 0)\r\n    46 │       │        │    │       │      │              │       │\r\n    47 │       │        │    │       │      │              │       │OTLPSpanExporter._stub = old_stub\r\n       ╵       ╵        ╵    ╵       ╵      ╵              ╵       ╵\r\n```\r\n\r\n2b. Run the `BatchExportSpanProcessor` `scalene` test using\r\n\r\n```\r\nscalene opentelemetry-sdk/tests/performance/resource-usage/trace/profile_resource_usage_batch_export.py\r\n```\r\n\r\nGet the following results:\r\n\r\n```\r\n                                                                                     Memory usage: ▆▇██▇▇█████ (max:  36.00MB)\r\n                                         opentelemetry-sdk/tests/performance/resource-usage/trace/profile_resource_usage_batch_export.py: % of time = 100.00% out of  13.32s.\r\n       ╷       ╷        ╷     ╷       ╷      ╷              ╷       ╷\r\n  Line │Time % │Time %  │Sys  │Mem %  │Net   │Memory usage  │Copy   │\r\n       │Python │native  │%    │Python │(MB)  │over time / % │(MB/s) │opentelemetry-sdk/tests/performance/resource-usage/trace/profile_resource_usage_batch_export.py\r\n╺━━━━━━┿━━━━━━━┿━━━━━━━━┿━━━━━┿━━━━━━━┿━━━━━━┿━━━━━━━━━━━━━━┿━━━━━━━┿━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸\r\n     1 │       │        │     │       │      │              │       │# Copyright The OpenTelemetry Authors\r\n     2 │       │        │     │       │      │              │       │#\r\n     3 │       │        │     │       │      │              │       │# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n     4 │       │        │     │       │      │              │       │# you may not use this file except in compliance with the License.\r\n     5 │       │        │     │       │      │              │       │# You may obtain a copy of the License at\r\n     6 │       │        │     │       │      │              │       │#\r\n     7 │       │        │     │       │      │              │       │#     http://www.apache.org/licenses/LICENSE-2.0\r\n     8 │       │        │     │       │      │              │       │#\r\n     9 │       │        │     │       │      │              │       │# Unless required by applicable law or agreed to in writing, software\r\n    10 │       │        │     │       │      │              │       │# distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    11 │       │        │     │       │      │              │       │# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    12 │       │        │     │       │      │              │       │# See the License for the specific language governing permissions and\r\n    13 │       │        │     │       │      │              │       │# limitations under the License.\r\n    14 │       │        │     │       │      │              │       │\r\n    15 │       │        │     │       │      │              │       │import time\r\n    16 │       │        │     │   98% │   16 │▁▁▁▁▁▁        │       │from unittest.mock import patch\r\n    17 │       │        │     │       │      │              │       │\r\n    18 │    1% │        │     │  100% │   17 │▆▆▆▆▆ 74%     │     2 │from opentelemetry.exporter.otlp.trace_exporter import OTLPSpanExporter\r\n    19 │       │        │     │       │      │              │       │from opentelemetry.sdk.trace import TracerProvider, sampling\r\n    20 │       │        │     │       │      │              │       │from opentelemetry.sdk.trace.export import BatchExportSpanProcessor\r\n    21 │       │        │     │       │      │              │       │\r\n    22 │       │        │     │       │      │              │       │TEST_DURATION_SECONDS = 15\r\n    23 │       │        │     │       │      │              │       │SPANS_PER_SECOND = 10_000\r\n    24 │       │        │     │       │      │              │       │\r\n    25 │       │        │     │       │      │              │       │\r\n    26 │       │        │     │       │      │              │       │class MockTraceServiceStub(object):\r\n    27 │       │        │     │       │      │              │       │    def __init__(self, channel):\r\n    28 │       │        │     │       │      │              │       │        self.Export = lambda *args, **kwargs: None\r\n    29 │       │        │     │       │      │              │       │\r\n    30 │       │        │     │       │      │              │       │\r\n    31 │       │        │     │       │      │              │       │old_stub = OTLPSpanExporter._stub\r\n    32 │       │        │     │       │      │              │       │OTLPSpanExporter._stub = MockTraceServiceStub\r\n    33 │       │        │     │       │      │              │       │\r\n    34 │       │        │     │       │      │              │       │simple_span_processor = BatchExportSpanProcessor(OTLPSpanExporter())\r\n    35 │       │        │     │       │      │              │       │tracer = TracerProvider(\r\n    36 │       │        │     │       │      │              │       │    active_span_processor=simple_span_processor, sampler=sampling.DEFAULT_ON,\r\n    37 │       │        │     │       │      │              │       │).get_tracer(\"resource_usage_tracer\")\r\n    38 │       │        │     │       │      │              │       │\r\n    39 │       │        │     │       │      │              │       │starttime = time.time()\r\n    40 │       │        │     │       │      │              │       │for _ in range(TEST_DURATION_SECONDS):\r\n    41 │       │        │     │       │      │              │       │    for _ in range(SPANS_PER_SECOND):\r\n    42 │   72% │    15% │  1% │       │      │              │    15 │        span = tracer.start_span(\"benchmarkedSpan\")\r\n    43 │    9% │     2% │     │       │      │              │     1 │        span.end()\r\n    44 │       │        │     │       │      │              │       │    time_to_finish_spans = time.time() - starttime\r\n    45 │    1% │        │     │       │      │              │       │    time.sleep(1.0 - time_to_finish_spans if time_to_finish_spans < 1.0 else 0)\r\n    46 │       │        │     │       │      │              │       │\r\n    47 │       │        │     │       │      │              │       │OTLPSpanExporter._stub = old_stub\r\n       ╵       ╵        ╵     ╵       ╵      ╵              ╵       ╵\r\n```\r\n\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "add-resource-usage-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add resource usage performance tests for creating a span (#1499)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5044ee515ce6a4e695",
    "number": 1498,
    "body": "# Description\r\n\r\nAs a follow up to #1443, this PR adds a limit to the number of commits saved and displayed in the performance graph.\r\n\r\nBy default [there is no limit](https://github.com/rhysd/github-action-benchmark#max-items-in-chart-optional) so I thought this would be a good preemptative measure to avoid a noisy (and maybe unreadable?) graph.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "max-items-in-performance-chart",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set max number of commits in performance graph (#1498)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5144ee515ce6a4e696",
    "number": 1496,
    "body": "# Description\r\n\r\nFixes #1476 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-core-sdk`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "trace-sampler-env",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTEL_TRACE_SAMPLER and OTEL_TRACE_SAMPLER_ARG env variables (#1496)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5244ee515ce6a4e697",
    "number": 1492,
    "body": "This file is not longer in use, removing it\r\n",
    "head_branch": "codeboten-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Deleting unused file (#1492)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5344ee515ce6a4e698",
    "number": 1491,
    "body": "# Description\r\n\r\nAccording to the [Performance testing Spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/performance-benchmark.md#throughput-measurement), we should have performance tests to test the throughput of the OTLP Exporter.\r\n\r\nIn the [Java equivalent tests](https://github.com/open-telemetry/opentelemetry-java/pull/2214), they actually run the Collector.\r\n\r\nHowever, for these tests, I thought it would be sufficient to turn the gRPC export command into a No-op. We can then say that these tests test how much the SDK side exporter can export in a second.\r\n\r\nI think it is possible that some spans won't be exported before the benchmark finishes, but it looks like that was not a concern for the Java tests, should we be concerned with that?\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- Running `tox -e test-exporter-otlp` runs these benchmarking tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "add-exporter-throughput-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add throughput performance tests for OTLP exporter (#1491)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5444ee515ce6a4e699",
    "number": 1489,
    "body": "# Description\r\n\r\nAdds benchmarks for injecting and extract context from a span using the B3 propagator.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdds results to the `tox -e test-core-sdk` test suite.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "add-b3-performance-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add b3 format benchmark tests (#1489)\n\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5544ee515ce6a4e69a",
    "number": 1488,
    "body": "Fixes #1474 \r\n\r\nNote: Error tag part is already taken care [here](https://github.com/open-telemetry/opentelemetry-python/blob/master/exporter/opentelemetry-exporter-jaeger/src/opentelemetry/exporter/jaeger/translate/protobuf.py#L214-L216) and [here](https://github.com/open-telemetry/opentelemetry-python/blob/master/exporter/opentelemetry-exporter-jaeger/src/opentelemetry/exporter/jaeger/translate/thrift.py#L136-L138).",
    "head_branch": "jaeger-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Jaeger exporter status code (#1488)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5644ee515ce6a4e69b",
    "number": 1486,
    "body": "Fixes #1475 ",
    "head_branch": "zipkin-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update zipkin exporter status code and error tag (#1486)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5644ee515ce6a4e69c",
    "number": 1485,
    "body": "# Description\r\n\r\nImprove `__repr__` of DefaultSpan and SpanContext.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nOnly manually.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- ~~[ ] Unit tests have been added~~\r\n- ~~[ ] Documentation has been updated~~\r\n",
    "head_branch": "trace-repr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add some repr()s to basic trace types. (#1485)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5744ee515ce6a4e69d",
    "number": 1484,
    "body": "Fixes #1419\r\n\r\n# Description\r\n\r\nUse only uppercase characters if testing in Windows.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] test_configuration\r\n\r\n# Does This PR Require a Contrib Repo Change? no\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1419",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use uppercase if testing in windows (#1484)\n\nFixes #1419"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5844ee515ce6a4e69e",
    "number": 1483,
    "body": "",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5944ee515ce6a4e69f",
    "number": 1482,
    "body": "# Description\r\n\r\nAs per the discussion in the SIG meeting on 12/03, providing an entrypoint that is loaded before the configurator would reduce the amount of work needed by users in creating distro's for otel python. This PR proposes that change by introducing an `opentelemetry_distro` entrypoint, as well as a distro that configures the OTLP exporter by default.\r\n\r\nFixes #1481\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "distro",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding opentelemetry-distro package and entrypoint (#1482)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5a44ee515ce6a4e6a0",
    "number": 1480,
    "body": "Adding global variables with supported resources\r\nAdding default service name population\r\n\r\nFixes #1477",
    "head_branch": "hectorhdzg/resources",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make sure Resources follow semantic conventions (#1480)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5b44ee515ce6a4e6a1",
    "number": 1479,
    "body": "The initial datapoints did not have the correct entry name",
    "head_branch": "cleanup-invalid-changes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "removing invalid datapoints (#1479)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5b44ee515ce6a4e6a2",
    "number": 1478,
    "body": "# Description\r\n\r\n~After #1473, the GitHub action would try to fetch the `gh-pages` branch using the `secrets.GITHUB_TOKEN` of the pull request author. This will always fail, so we should skip this step using the undocumented `skip-fetch-gh-pages` flag of the GitHub action we use. See [source code that tries to pull gh-pages](https://github.com/rhysd/github-action-benchmark/blob/7cadfa13e55c8155d15ef0c2c6d0d2b112185dcb/src/write.ts#L374)~\r\n\r\nWe narrowed the problem to the `comment-always: true` flag being set. And further, it only happens when *multiple tests want to comment at the same time*.\r\n\r\nTo unblock the tests for now, we remove the feature which comments on the \"new\" benchmarks versus the \"previous\" benchmarks. We can come back and investigate later.\r\n\r\nExample failed run: https://github.com/open-telemetry/opentelemetry-python/pull/1470/checks?check_run_id=1552050085#step:9:55\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nCI test should prove that this fix unblocks master tests.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "dont-pull-gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not try to comment on PR after benchmarks (#1478)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5c44ee515ce6a4e6a3",
    "number": 1473,
    "body": "# Description\r\n\r\nFollow up to #1469. We had the incorrect name for the package. This means the benchmarks will be recorded without package name in the table title. This is important for grouping of similar benchmarks across commits.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "fix-benchmark-name-group",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Benchmarks grouping name (#1473)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5d44ee515ce6a4e6a4",
    "number": 1472,
    "body": "Fixes #1376 \r\nFixes #1294 ",
    "head_branch": "otlp-0.6.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTLP v0.6.0 (#1472)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5e44ee515ce6a4e6a5",
    "number": 1471,
    "body": "# Description\r\n\r\nThis change adds ability to export traces to Jaeger with protobuf via gRPC.\r\n\r\nFixes #1437 \r\n\r\n\r\n## Type of change\r\n\r\n\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manual testing with jaeger-all-in-one\r\n- [x] Added unit tests for protobuf translation\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "jaeger-protobuf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add protobuf via gRPC exporting support for Jaeger (#1471)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5f44ee515ce6a4e6a6",
    "number": 1470,
    "body": "# Description\r\n\r\nAs a follow up to #1464 I found that the docs tests pass just fine if there these packages are not installed.\r\n\r\nMaking this PR to mostly ask questions if anyone knows why these were needed!\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n`tox -e docs` passes and the sphinx build is created without a problem.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "remove-unecessary-installs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unnecessary contrib pkgs from docs install (#1470)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f5f44ee515ce6a4e6a7",
    "number": 1469,
    "body": "# Description\r\n\r\nAs a follow up to #1443 we found out that the GitHub action [will fetch the branch even if it on that branch which produces an error](https://github.com/rhysd/github-action-benchmark/issues/51).\r\n\r\nThis PR goes back to using `gh-pages` and adds a link in the ReadTheDocs directory to point to the benchmarks graphs which will live on the `gh-pages` branch.\r\n\r\nThis is also a good idea to reduce the noise on the `master` branch.\r\n\r\nThis will fix the current Core Repo Tests.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nSee [my example repo](https://github.com/NathanielRN/github-benchmarks-example/runs/1532810344?check_suite_focus=true#step:8:25) which uses `gh-pages` correctly to publish to https://nathanielrn.github.io/github-benchmarks-example/benchmarks/index.html\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "benchmarks-on-gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use gh-pages to save performance benchmarks results (#1469)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6044ee515ce6a4e6a8",
    "number": 1467,
    "body": "isort and black can be incompatible. Often isort re-writes files in a\r\nway black doesn't like. It takes quite some time and manual effort to\r\nmake changes that satisfy both isort and black.\r\n\r\nFortunately, newer versions of isort support a black compatibility mode by setting\r\nisort profile to \"black\". This makes isort order imports in a way that\r\nis compatible with how black formats Python code. This PR configures\r\nisort to use the black profile by default.\r\n",
    "head_branch": "isort-and-black-be-friends",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade isort and enable black compat mode (#1467)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6144ee515ce6a4e6a9",
    "number": 1465,
    "body": "# Description\r\n\r\nIn the linked issue, it was pointed out that the [readTheDocs build is failing](https://readthedocs.org/projects/opentelemetry-python/builds/12515452/) with the following error message:\r\n\r\n```\r\nERROR: Invalid requirement: './opentelemetry-python-contrib/exporter/opentelemetry-exporter-datadog' (from line 9 of docs-requirements.txt)\r\nHint: It looks like a path. File './opentelemetry-python-contrib/exporter/opentelemetry-exporter-datadog' does not exist.\r\n```\r\n\r\nI've seen this error before and hope that this PR has the solution :smile:\r\n\r\nFixes #1352\r\n\r\n## Solution Explanation\r\n\r\nIn this solution, we remove all examples in the docs that include references to packages that exist in the Contrib repo. These examples can be moved there so that they can be near the source code they are concerned with.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRunning `tox -e docs` works fine, and it's very quick 😄 \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "remove-all-contrib-docs-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6244ee515ce6a4e6aa",
    "number": 1464,
    "body": "# Description\r\n\r\nIn the linked issue, it was pointed out that the [readTheDocs build is failing](https://readthedocs.org/projects/opentelemetry-python/builds/12515452/) with the following error message:\r\n\r\n```\r\nERROR: Invalid requirement: './opentelemetry-python-contrib/exporter/opentelemetry-exporter-datadog' (from line 9 of docs-requirements.txt)\r\nHint: It looks like a path. File './opentelemetry-python-contrib/exporter/opentelemetry-exporter-datadog' does not exist.\r\n```\r\n\r\nI've seen this error before and hope that this PR has the solution :smile:\r\n\r\nRelated to: #1352\r\n\r\n## Solution Explanation\r\n\r\nInitially I was hoping to take advantage of `pip`'s [--src](https://pip.pypa.io/en/stable/reference/pip_install/#cmdoption-src) or [--target](https://pip.pypa.io/en/stable/reference/pip_install/#cmdoption-t) options to have the repo cloned to the directory I wanted (i.e. `./opentelemtry-python-contrib`) but [pip does not allow certain options in its requirements.txt file](https://stackoverflow.com/a/60372140/7460739) :confused:\r\n\r\nNext, I read how the [readTheDocs configuration file](https://docs.readthedocs.io/en/stable/config-file/v2.html#supported-settings) works.\r\n* The submodule option seemed possible but in contradiction to splitting the repos.\r\n* `readTheDocs` supports [using conda enviornment variables](https://docs.readthedocs.io/en/stable/config-file/v2.html#conda-environment) but new versions of Conda have [an issue that means environment variables are not passed to pip correctly](https://github.com/conda/conda/issues/6805) so we again can't do `--src`\r\n\r\nSo no luck on readTheDocs.\r\n\r\nIf we knew the path to the virtual env then we could expect the first `-e` install and clone the repo at the path `<venv_path>/src` [as in the docs](https://pip.pypa.io/en/stable/reference/pip_install/#vcs-support) but the build says the venv name is `python3.8 -mvirtualenv /home/docs/checkouts/readthedocs.org/user_builds/opentelemetry-python/envs/latest` so I don't know what would happen if it went to `.... /stable` 😕 \r\n\r\nFinally I decided to just go with cloning the repo every time for these packages. The Contrib repo is 40MB large, and there is a 3GB limit for readTheDocs. We should be fine to merge this, but I think a good follow up would be to remove all the references in docs that need these Contrib packages 😄 \r\n\r\nBut if we merge this at least the build will be fixed 😄 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI wasn't able to get a local build of readTheDocs working... but hopefully we can try this first and I'll follow up with additional fixes if needed :smile:\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "fix-docs-build-contrib-requirements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Clone the contrib for every docs build requirement (#1464)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6344ee515ce6a4e6ab",
    "number": 1463,
    "body": "…up unused imports\r\n\r\n# Description\r\nUpdate usage for `Meter.create_counter` in tests and examples, clean up unused imports.\r\n\r\nI was running the example provided for testing purposes, and noticed that there might be some usages of `Meter.create_counter` that was out of date.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI was running the same test as described in the README s for the examples.\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "create_counter_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update usage for `Meter.create_counter` in tests and examples, clean up unused imports (#1463)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6444ee515ce6a4e6ac",
    "number": 1461,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n#1240 \r\n## Type of change\r\nCode\r\nPlease delete options that are not relevant.\r\n\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Auto-instrumentation should exclude packages mentioned in OTEL_PYTHON_DISABLED_INSTRUMENTATIONS env variable (#1461)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6444ee515ce6a4e6ad",
    "number": 1460,
    "body": "Addresses: https://github.com/open-telemetry/opentelemetry-specification/issues/1267\r\nFixes: https://github.com/open-telemetry/opentelemetry-python/issues/1458",
    "head_branch": "rationale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add rationale document with versioning/releasing details (#1460)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6544ee515ce6a4e6ae",
    "number": 1457,
    "body": "# Description\r\n\r\nTo unblock the build, pinning the version of pip to 20.2.4. It appears there's an [issue](https://github.com/pypa/pip/issues/8785) causing trouble in the 20.3.x release. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Infrastructure change\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "pin-pip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6644ee515ce6a4e6af",
    "number": 1456,
    "body": "Builds are [failing](https://github.com/open-telemetry/opentelemetry-python/pull/1447/checks?check_run_id=1512422935) due to `python scripts/eachdist.py install --editable --with-test-deps` command in the lint env. Apparently appending all packages into one install statement is not working (`eachdist.py` constructs a large install statement like `python -m pip install -e '{toxinidir}/opentelemetry-api[test]' -e '{toxinidir}/opentelemetry-sdk[test]' ...`.\r\n\r\nSplitting them up works for some reason. Also, `eachdist.py` is quite complicated, now that our packages are simpler (instrumentations are in the contrib), maybe we can refactor it to make it simpler.",
    "head_branch": "lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Explicitly install dependencies in lint env for tox (#1456)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6744ee515ce6a4e6b0",
    "number": 1455,
    "body": "",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6844ee515ce6a4e6b1",
    "number": 1454,
    "body": "",
    "head_branch": "old-resolver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6844ee515ce6a4e6b2",
    "number": 1453,
    "body": "",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6944ee515ce6a4e6b3",
    "number": 1452,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nReviewed with document reader \r\n\r\n# Does This PR Require a Contrib Repo Change?\r\nNo\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix typo (#1452)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6a44ee515ce6a4e6b4",
    "number": 1451,
    "body": "# Description\r\n\r\n`start_as_current_span` could be used as decorator. But it works incorrectly in this case — a span is created only once on decoration time and it is reused for every run of function.\r\n\r\nWith that change it creates new span on every run.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit test provided\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "recreate-span-on-every-run",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Recreate span on every run of a decorated function (#1451)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6b44ee515ce6a4e6b5",
    "number": 1450,
    "body": "",
    "head_branch": "oltp-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo (#1450)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6c44ee515ce6a4e6b6",
    "number": 1449,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1274",
    "head_branch": "prop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Return none for Getter if key does not exist (#1449)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6c44ee515ce6a4e6b7",
    "number": 1447,
    "body": "# Description\r\n\r\nFixes #1446\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "unify-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Combine changelogs (#1447)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6d44ee515ce6a4e6b8",
    "number": 1445,
    "body": "# Description\r\n\r\nAllow to override global `tracer_provider` after `tracer`s creation.\r\n\r\nWith this change any module may do\r\n```python\r\nfrom opentelemetry import trace\r\n\r\ntracer = trace.get_tracer(__name__)\r\n````\r\nand wire that tracer to its code (e.g. by applying `start_as_current_span` decorator).\r\n\r\nAnd such modules may be safely imported to a main app before initializing/configuring real tracer provider. All tracers created before (on import time) will use that provider.\r\n\r\nFixes # (issue)\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/1159\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/1276\r\nhttps://gitter.im/open-telemetry/opentelemetry-python?at=5fc8be67f46e246609860465\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nsubmodule.py\r\n```python\r\nfrom opentelemetry import trace\r\n\r\ntracer = trace.get_tracer(__name__)\r\n\r\n\r\n@tracer.start_as_current_span(\"submodule decorator created before configuration\")\r\ndef echo(text):\r\n    with tracer.start_as_current_span(\"submodule context manager\"):\r\n        print(text)\r\n```\r\n\r\nmain.py\r\n```python\r\nimport submodule\r\n\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\nfrom opentelemetry.sdk.trace.export import (\r\n    ConsoleSpanExporter,\r\n    SimpleExportSpanProcessor,\r\n)\r\n\r\ntracer = trace.get_tracer(\"__main__\")\r\n\r\n\r\n@tracer.start_as_current_span(\"another decorator created before configuration\")\r\ndef main():\r\n    with tracer.start_as_current_span(\"submodule context manager\"):\r\n        submodule.echo(\"Hello world from OpenTelemetry Python!\")\r\n\r\ndef init():\r\n    trace.set_tracer_provider(TracerProvider())\r\n    trace.get_tracer_provider().add_span_processor(\r\n        SimpleExportSpanProcessor(ConsoleSpanExporter())\r\n    )\r\n\r\ninit()\r\nmain()\r\n```\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "override-global",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6e44ee515ce6a4e6b9",
    "number": 1443,
    "body": "# Description\r\n\r\nPart of #335, this PR aims to include the `pytest-benchmark` library to get micro benching results on some key SDK operations.\r\n\r\nSpecifically, this follows the [OpenTelemetry Specifications on Performance Benchmarking](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/performance-benchmark.md) guidelines.\r\n\r\nRegarding `pytest-benchmark`:\r\n\r\nPros:\r\n- Easy to use (integrates with `pytest`\r\n- Lots of features (it was easy to mock and pass parameters to functions under test)\r\n- Nice ways to output (See [the pytest-benchmark Command Line Options](https://pytest-benchmark.readthedocs.io/en/latest/usage.html#commandline-options)\r\n    - Table in Terminal\r\n    - Histogram (Since all the .json logs will stay in `gh-pages`, people can create these or we can create these!)\r\n    - Stats summary file\r\n    - Detailed Stats summary file\r\n\r\nCons:\r\n- No resource profiling (CPU/RAM/IO) (See the [open issue on resource profiling](https://github.com/ionelmc/pytest-benchmark/issues/28) for more information. Will mean we need a different profiler for these things?)\r\n\r\n## Type of change\r\n\r\nIn this PR:\r\n* Benchmarks for every python version are added\r\n* The package tests will **FAIL** if during comparison. performance regresses by 200% from the most recent recorded test (To avoid flaky failing of tests)\r\n* Benchmark results are printed to the workflow output (to know what happened + to update the current results if needed)\r\n* Performance tests work locally too! (The first run fails because there are no benchmarks yet)\r\n* It is easy to add more benchmarks by adding\r\n  - The tests themselves\r\n  - Updating `tox.ini` to print the tests using the added `tests/print_benchmarks.py` script\r\n  - Added their most recent recorded results in the relevant package folder.\r\n* All the history of the logs will be available in the `gh-pages` branch and at the link https://open-telemetry.github.io/opentelemetry-python/benchmarks/index.html\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n## Locally\r\n\r\nRunning `tox -e test-core-sdk` produces the following table:\r\n\r\n```\r\ntest-core-sdk run-test: commands[0] | pytest\r\n================================================================================================================================================= test session starts =================================================================================================================================================\r\nplatform darwin -- Python 3.8.2, pytest-6.1.2, py-1.9.0, pluggy-0.13.1 -- /Users/enowell/git/opentelemetry-python/.tox/test-core-sdk/bin/python\r\ncachedir: .tox/test-core-sdk/.pytest_cache\r\nbenchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\r\nrootdir: /Users/enowell/git/opentelemetry-python, configfile: pyproject.toml\r\nplugins: benchmark-3.2.3\r\ncollected 249 items\r\n\r\n...\r\n\r\n-------------------------------------------------------------------------------------------- benchmark: 2 tests --------------------------------------------------------------------------------------------\r\nName (time in us)                         Min                 Max               Mean             StdDev             Median               IQR            Outliers  OPS (Kops/s)            Rounds  Iterations\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\ntest_simple_start_span                27.3250 (1.0)      223.2550 (1.0)      31.0913 (1.0)       9.2509 (1.0)      28.6885 (1.0)      1.5250 (1.55)     218;1017       32.1634 (1.0)        5320           1\r\ntest_simple_start_as_current_span     36.0340 (1.32)     251.3840 (1.13)     40.2968 (1.30)     11.7254 (1.27)     37.5900 (1.31)     0.9810 (1.0)      744;2070       24.8159 (0.77)      14010           1\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nLegend:\r\n  Outliers: 1 Standard Deviation from Mean; 1.5 IQR (InterQuartile Range) from 1st Quartile and 3rd Quartile.\r\n  OPS: Operations Per Second, computed as 1 / Mean\r\n=========================================================================================================================================== 249 passed, 1 warning in 8.83s ============================================================================================================================================\r\n_______________________________________________________________________________________________________________________________________________________ summary _______________________________________________________________________________________________________________________________________________________\r\n  test-core-sdk: commands succeeded\r\n  congratulations :)\r\n```\r\n\r\n## Example Repo\r\n\r\nI made [an example repo](https://github.com/NathanielRN/github-benchmarks-example) here to prove the json merging works\r\n\r\nYou can see the difference between [PRs that have different performance benchmarks](https://github.com/NathanielRN/github-benchmarks-example/pulls):\r\n- [Worse Performance](https://github.com/NathanielRN/github-benchmarks-example/pull/3)\r\n- [Better Performance](https://github.com/NathanielRN/github-benchmarks-example/pull/2)\r\n\r\nThis combines all the tests under `OpenTelemetry Python Benchmark` as [seen here](https://nathanielrn.github.io/github-benchmarks-example/benchmarks/index.html). The fluctuations are _on purpose_ because I made the test take longer.\r\n\r\n![image](https://user-images.githubusercontent.com/23139455/101705562-08803200-3a3c-11eb-9e55-a372e07d03cf.png)\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No. (But it will be a good follow up)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [] Changelogs have been updated~ (Not changing functionality, only adding tests\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "add-sdk-span-performance-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add performance testing + test SDK Span Creation (#1443)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f6f44ee515ce6a4e6ba",
    "number": 1441,
    "body": "# Description\r\n\r\nAdd Python 3.9 to build",
    "head_branch": "python9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Python 3.9 to build (#1441)\n\nSigned-off-by: Gábor Lipták <gliptak@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7044ee515ce6a4e6bb",
    "number": 1440,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1397",
    "head_branch": "sample",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use a delegate sampler for each possible case in ParentBased Sampler (#1440)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7144ee515ce6a4e6bc",
    "number": 1438,
    "body": "# Description\r\n\r\nFixes #1201 \r\n",
    "head_branch": "ot-1201",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Throw an error when multiple instruments are registered by the same name (#1438)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7244ee515ce6a4e6bd",
    "number": 1435,
    "body": "# Description\r\nThe auto-instrumentation example given in the docs does not work as expected.\r\nThe changes were made to make the example work as expected.\r\n\r\nFixes # (issue)\r\nAuto-instrumentation example fix.\r\nFixes #1432 \r\n\r\n## Type of change\r\nCode \r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\nNo\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "auto-instru-example-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix to run the Auto instrumentation example in the docs (#1435)\n\n* Fix to run the auto-instrumentation example successfully\r\n\r\n* reverting the changes in ConsoleSpanExporter, setup.cfg\r\nModifying the README.rst accordingly.\r\n\r\n* changes to include a consolespanexporter and consolemetricsexporter as per review comments.\r\n\r\n* Change as per review comments to replace **kwargs with service_name\r\n\r\n* moving the service_name as the first parameter in the ConsoleSpanExporter since some py35-exporter-zipkin test were failing.\r\n\r\n* changes to add the service_name to the exported span\r\n\r\n* pass the service name to the exported span\r\nfix the unit tests for the above change.\r\n\r\n* update the setup.cfg to the correct path of ConsoleMetricsExporter\r\n\r\n* revert the changes to add the service_name to the exported span.\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7244ee515ce6a4e6be",
    "number": 1434,
    "body": "",
    "head_branch": "default-span-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update set_status docstring (#1434)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7344ee515ce6a4e6bf",
    "number": 1433,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1390 which is a minor bug introduced in #1254\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] New test file added `test_metrics.py`\r\n- [x] A local test has been done, metrics_example.py code runs as expected:\r\n`/home/yang/python-workspace/opentelemetry-python-example/metrics.py \r\nConsoleMetricsExporter(data=\"Counter(name=\"requests\", description=\"number of requests\")\", labels=\"(('environment', 'staging'),)\", value=25, resource={'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '0.16b1'})\r\nConsoleMetricsExporter(data=\"Counter(name=\"requests\", description=\"number of requests\")\", labels=\"(('environment', 'staging'),)\", value=45, resource={'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '0.16b1'})`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1390",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes #1390 - Remove unexpected keyword argument in metrics_example (#1433)\n\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7444ee515ce6a4e6c0",
    "number": 1430,
    "body": "# Description\r\n\r\nPrior to this change, the OTLP exporter raises an error if the user doesn't configure a certificate file for setting up a secure channel for grpc. This is unnecessary, because the implementation of gRPC can use a default location if none is specified.\r\n\r\nFixes #1429 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-1429",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OTLP exporter use grpc runtime cert if not set (#1430)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7544ee515ce6a4e6c1",
    "number": 1428,
    "body": "# Description\r\n\r\nGeneral readability improvements, grammatical fixes, and general conformity to google developer documentation style guide.\r\n\r\n# Checklist:\r\n\r\n- [X ] Followed the style guidelines of this project\r\n- [ X] Changelogs have been updated\r\n- [ X] Unit tests have been added\r\n- [X ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md (#1428)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7644ee515ce6a4e6c2",
    "number": 1427,
    "body": "",
    "head_branch": "release/0.16b1-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-release] Update changelogs, version [0.16b1] (#1427)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7744ee515ce6a4e6c3",
    "number": 1426,
    "body": "# Description\r\n\r\nFixes #1217 \r\n\r\n## Type of change\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/220\r\n",
    "head_branch": "config-common",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add convenience methods to access common config options in Configuration class (#1426)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7744ee515ce6a4e6c4",
    "number": 1425,
    "body": "Fixes #1424\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\nAnswer the following question based on these examples of changes that would require a Contrib Repo Change:\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n- The method interfaces of `opentelemetry-instrumentation/` have changed\r\n- The method interfaces of `test/util` have changed\r\n- Scripts in `scripts/` that were copied over to the Contrib repo have changed\r\n- Configuration files that were copied over to the Contrib repo have changed (when consistency between repositories is applicable) such as in\r\n    - `pyproject.toml`\r\n    - `isort.cfg`\r\n    - `.flake8`\r\n- When a new `.github/CODEOWNER` is added\r\n- Major changes to project information, such as in:\r\n    - `README.md`\r\n    - `CONTRIBUTING.md`\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1424",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add meter to observers (#1425)\n\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7844ee515ce6a4e6c5",
    "number": 1423,
    "body": "",
    "head_branch": "bump-0.17dev0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1423 from open-telemetry/bump-0.17dev0\n\nUpdate master branch to 0.17.dev0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7944ee515ce6a4e6c6",
    "number": 1422,
    "body": "Preparing 0.16b0 release, third time's a charm",
    "head_branch": "release/0.16b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-release] Update changelogs, version [0.16b0] (#1422)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7a44ee515ce6a4e6c7",
    "number": 1420,
    "body": "# Description\r\n\r\nThis change moves the component initializing code that needs the SDK into the SDK's configuration module. This is then loaded in the auto instrumentation via entrypoint to ensure other SDKs can implement their own.\r\n\r\nNOTE: the dependency from the SDK on the instrumentation package is only needed if we choose to include the configurator interface in the SDK. There is a following PR coming that propose this could be moved into a `configure_distro` entrypoint. This future PR will also include an `opentelemetry-distro` package that configures the defaults.\r\n\r\nFixes #1421 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "instrumentation-decoupling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove SDK dependency from auto-instrumentation (#1420)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7b44ee515ce6a4e6c8",
    "number": 1418,
    "body": "Fixes #1417\r\n\r\n# Description\r\n\r\nAdd missing instrumentation library attributes to the OTLP exported metrics\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] translate_metrics\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1417",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add instrumentation library name and version to OTLP exported metrics (#1418)\n\nFixes #1417"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7b44ee515ce6a4e6c9",
    "number": 1416,
    "body": "# Description\r\n\r\nI'm not sure what this list is for, but it seemed like an incomplete list of the packages for which we have instrumentation for. Added the missing packages (`aiohttp-client`, `aiopg`, `sklearn`, `system-metrics`) according to those packages in the Contrib repo!\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests cover this change\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "update-bootstrap-packages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing references to instrumented packages (#1416)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7c44ee515ce6a4e6ca",
    "number": 1415,
    "body": "# Description\r\n\r\nAs a follow up to #1306 where we made Auto Instrumentation configurable (which was important because once the Tracer Provider is configured you never can configure it again!) we took a dependency on `opentelemtry-sdk`.\r\n\r\nThis is okay for the auto instrumentation _alone_, but the actual instrumentation packages should not be forced to depend on the SDK as mentioned in #1252.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nUnit tests are all passing.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [] Unit tests have been added~\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "move-auto-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7d44ee515ce6a4e6cb",
    "number": 1414,
    "body": "# Description\r\n\r\nRemove double entry in SDK Changelog",
    "head_branch": "remove-double-changelog-entry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7e44ee515ce6a4e6cc",
    "number": 1413,
    "body": "Preparing 0.16b0 release",
    "head_branch": "release/0.16b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-release] Update changelogs, version [0.16b0] (#1413)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f7f44ee515ce6a4e6cd",
    "number": 1412,
    "body": "Minor changelog update",
    "head_branch": "fix-changelog-sdk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "modify tracestate log was in wrong release (#1412)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8044ee515ce6a4e6ce",
    "number": 1411,
    "body": "# Description\r\n\r\nAdds support for the Zipkin Exporter [v1 API json format](https://github.com/openzipkin/zipkin-api/blob/master/zipkin-api.yaml) . Since this brings the number of supported formats to 3 (v1-json, v2-json, v2-protobuf) and with v1-thrift on the way, the PR includes notable refactoring of the exporter to introduce the concept of an Encoder.\r\n\r\n**Breaking changes**\r\n- `ZipkinSpanExporter()` signature changes:\r\n  - `service_name` removed to conform to new [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk_exporters/zipkin.md#service-name)\r\n  - `protocol` mandatory arg added (required arg ordering change)\r\n  - `url` => `endpoint` to be consistent with spec terminology and related env var `OTEL_EXPORTER_ZIPKIN_ENDPOINT` and package `DEFAULT_ENDPOINT`\r\n  - `ipv4` => `local_node_ipv4`  to more clearly denote this is for the local node endpoint \r\n  - `ipv6` => `local_node_ipv6`  to more clearly denote this is for the local node endpoint \r\n  - `local_node_port`: added. This value was being improperly parsed from the `url` when it is supposed to represent the local node listening port. Added param so that it can be passed in along with the local node ip addresses if desired.\r\n  - `retry` removed for now to avoid confusion since the logic is not currently implemented.\r\n\r\nFixes #1173\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- Manual testing against local zipkin server:\r\n  - v1-json support\r\n  - v1-json / v2-json / v2-protobuf output comparison testing\r\n  - regression testing of v2-json and v2-protobuf\r\n- Unit tests have been greatly reworked & expanded.\r\n- Full tox run\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1173_zipkin_exporter_v1_json_support_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Zipkin exporter add support for v1 api json format (#1411)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8044ee515ce6a4e6cf",
    "number": 1410,
    "body": "# Description\r\n\r\nRemoving the example app. This app currently creates a circular dependency on the contrib repo and the value of the app itself is not clear.\r\n\r\nFixes #1391 \r\n",
    "head_branch": "rm-example-app",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "removing example app (#1410)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8144ee515ce6a4e6d0",
    "number": 1409,
    "body": "# Description\r\n\r\nFollow up to #1408 which adds additional missing dependencies.",
    "head_branch": "more-lint-dependencies-ordering",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add dependency ordering for lint tests (#1409)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8244ee515ce6a4e6d1",
    "number": 1408,
    "body": "# Description\r\n\r\nAdding to the strength of the argument in https://github.com/open-telemetry/opentelemetry-python/issues/1391, the Example App is causing `linting` errors in the Core repo unless the instrumentation packages are downloaded _explicitly_. These errors are valid because they say that this Example App only makes sense if the instrumentations are present, which they are not because they are in the Contrib repo.\r\n\r\nAs a quick fix to unblock the release, we add the instrumentations specifically, but the solution to https://github.com/open-telemetry/opentelemetry-python/issues/1391 should also remove these lines.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it worked.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "lint-example-app-deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Example app dependencies needed to pass lint (#1408)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8344ee515ce6a4e6d2",
    "number": 1407,
    "body": "# Description\r\n\r\nIn light of #1406, it was discovered that the Example App is using published packages instead of dev packages. This PR adds the **development** version of the `opentelemetry-instrumentation-grpc` package to the required install dependencies\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nCovered by CI\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "fix-example-app-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ex app tests use dev grpc instrumentation (#1407)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8444ee515ce6a4e6d3",
    "number": 1406,
    "body": "Preparing release 0.16b0",
    "head_branch": "release/0.16b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8544ee515ce6a4e6d4",
    "number": 1405,
    "body": "# Description\r\n\r\nAs a follow up to https://github.com/open-telemetry/opentelemetry-python/pull/1036, with the new configurability, the instrumentation package takes a dependency on `opentelemetry.sdk` because of its use in `opentelemetry-instrumentation/src/opentelemetry/instrumentation/auto_instrumentation/components.py`\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [ ] Unit tests have been added~\r\n~- [] Documentation has been updated~\r\n",
    "head_branch": "instrumentation-dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Instrumentation Package depends on the OTel SDK (#1405)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8544ee515ce6a4e6d5",
    "number": 1404,
    "body": "# Description\r\n\r\nAs a follow up to #1036, this PR adds a parameter to the `opentelemetry-instrument` executable to allow the IDs Generator to be configurable.\r\n\r\nThis is a necessary part for auto instrumentation with backends which need custom IDs, because once the `opentelemetry-instrument` executable sets up the `TracerProvider`, it is too late for the instrumented downstream application to configure the IDs.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "otlp-env-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add IDs Generator as Configurable Property of Auto Instrumentation (#1404)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8644ee515ce6a4e6d6",
    "number": 1403,
    "body": "# Description\r\n\r\nThis PR includes readability fixes to the auto-instrumentation example docs including removal of passive voice, some spelling fixes, removal of future-looking language, and general adherence to Google's style guide: https://developers.google.com/style\r\n\r\n# Checklist:\r\n\r\n- [X ] Followed the style guidelines of this project\r\n- [X ] Changelogs have been updated\r\n- [X ] Unit tests have been added\r\n- [X ] Documentation has been updated\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.rst (#1403)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8744ee515ce6a4e6d7",
    "number": 1401,
    "body": "Fixes #1400 ",
    "head_branch": "rm-gh-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove github action (#1401)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8844ee515ce6a4e6d8",
    "number": 1399,
    "body": "# Description\r\n\r\nQuick PR to add prompt in PR template regarding opening a Contrib PR\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "contrib-repo-pr-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add PR question regarding Contrib Repo Link (#1399)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8944ee515ce6a4e6d9",
    "number": 1396,
    "body": "when running tests for `test_b3_format.py` without any other tests they were failing since the B3 propagator expects an SDK TracerProvider to be setup but in the context of the test this was never done.\r\n\r\napparently there are other tests in the SDK which set the global TracerProvider but do not reset it after the test finishes.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] unit test fix\r\n",
    "head_branch": "fix-b3-propagator-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix b3 format tests (#1396)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8a44ee515ce6a4e6da",
    "number": 1395,
    "body": "thests for the OTLP exporter failed when cwd pointed to something different than the test's directory because the file `fixtures/test.cert` could not be found.\r\n\r\n## Type of change\r\n- [x] unit test fix\r\n\r\n",
    "head_branch": "fix-otlp-exporter-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix OTLP exporter config tests (#1395)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8a44ee515ce6a4e6db",
    "number": 1394,
    "body": "The `ParentBased` sampler currently is only considering parent spans if an explicit parent `Context` gets passed. Implicit spans in the current `Context` are ignored and sampling is forwarded to the delegating sampler.\r\nWith this PR also parent spans via the implicit/current `Context` are considered.\r\n\r\nFixes #1393\r\n\r\n## Type of change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\nAdditional `ParentBased` sampler unit tests considering implicit parent spans.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "fix-parent-based-sampler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix ParentBased sampler for implicit parent spans (#1394)\n\nconsider the sample decision of implicit parent spans (when creating\r\na span without explicitly providing a context) instead of forwarding\r\nto the delegating sampler.\r\n\r\n* fix trace_state erasure for dropped spans\r\n\r\n* samplers did not return the trace_state in the sampling result\r\n  when a span was dropped. This caused the trace_state extracted\r\n  from a remote parent span to be erased and further context\r\n  propagation to break.\r\n* fix also TraceIdRatioBased which erased the trace_state independent\r\n  of the sampling outcome."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8b44ee515ce6a4e6dc",
    "number": 1392,
    "body": "# Description\r\n\r\nFollow up to #1371 \r\n\r\nI had a syntax error in my YAML which meant the docs build still didn't work. Further, I realized it's better and simpler to put the docs dependencies in the `docs-requirements.txt` file, so I've moved it out of tox and into there.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTo fully test it this time, I temporarily disable the \"only on push to `master`\" condition and saw that the build succeeded on my fork.\r\n\r\nIt only failed on the publish command as expected. See the run here: https://github.com/NathanielRN/opentelemetry-python/runs/1420741830?check_suite_focus=true\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "fix-docs-yaml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix syntax for Docs Build Workflow (#1392)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8c44ee515ce6a4e6dd",
    "number": 1389,
    "body": "This addresses several differences the current API and SDK have with the\r\nmetrics specification.\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1388",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8d44ee515ce6a4e6de",
    "number": 1387,
    "body": "The changelog mentioned \"Renaming TracerSource to TraceProvider\", it is actually renamed to \"TracerProvider\". Correct this will avoid confuse when searching \"TraceProvider\" in this project.",
    "head_branch": "tomtan/FixTraceProviderTypo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo of TraceProvider in changelog (#1387)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8e44ee515ce6a4e6df",
    "number": 1386,
    "body": "Forgot to do this as part of https://github.com/open-telemetry/opentelemetry-python/pull/1365.\r\n\r\n\r\nShould be merged after https://github.com/open-telemetry/opentelemetry-python-contrib/pull/190 since requests instrumentation uses the constant.",
    "head_branch": "exc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "recording (#1386)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8e44ee515ce6a4e6e0",
    "number": 1385,
    "body": "# Description\r\n\r\nAdds type stubs for `opentelemetry/sdk/util/__init__py`, most importantly `BoundedList` and `BoundedDict` which are pretty widely used. I could not put the annotations inline because you can't subclass `typing.Sequence` and `collections.abc.Sequence`, and you can't add generic parameters to `collections.abc.Sequence` either.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThese are typing changes only, so I tested only by running mypy on this module\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bound-list-dict-typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "boundlist typing wip (#1385)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f8f44ee515ce6a4e6e1",
    "number": 1384,
    "body": "Fixes #1383\r\n\r\n# Description\r\n\r\nChanges temporality for Counter and UpDownCounter to CUMULATIVE.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n- [x] test_otlp_metric_exporter.py\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1383",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change temporality for Counter and UpDownCounter to CUMULATIVE (#1384)\n\nFixes #1383"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9044ee515ce6a4e6e2",
    "number": 1382,
    "body": "# Description\r\n\r\nAs a follow up to this week's SIG meeting, we will add notes in `CONTRIBUTING.md` to explain the workflow for PRs which may affect Contrib repo packages.\r\n\r\n## Type of change\r\n\r\nDocumentation update.\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "core-pr-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Workflow for PRs that would affect Contrib (#1382)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9144ee515ce6a4e6e3",
    "number": 1381,
    "body": "# Description\r\nImplemented the Config validation, parsing and tests for the PrometheusRemoteWriteExporter\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\nRan config unit tests and they passed. Methods work as intended.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated (Will do on python-contrib repo)\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated (Will do once exporter is finished)\r\n",
    "head_branch": "ConfigValidation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9244ee515ce6a4e6e4",
    "number": 1380,
    "body": "# Description\r\n\r\nSpanContext does not support pickle due to missing getnewargs function. Add function to SpanContext.\r\n\r\nFixes # (issue)\r\n#1375 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Tor\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "bug_pickle_support_spancontext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add __getnewargs__ to SpanContext class (#1380)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9344ee515ce6a4e6e5",
    "number": 1379,
    "body": "# Description\r\n\r\nSpanContext does not support pickle due to missing __getnewargs__. Add it to the SpanContext class\r\n\r\nFixes # (issue)\r\n\r\n#1375 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nCreate SpanContext class and use pickle.dumps and pickle.loads without issue\r\n\r\n- [X] Tor\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "bug_1375_unable_to_pickle_spancontext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9444ee515ce6a4e6e6",
    "number": 1377,
    "body": "This adds support for the following env variables:\r\n* OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT (Maximum allowed span attribute count)\r\n* OTEL_SPAN_EVENT_COUNT_LIMIT (Maximum allowed span event count)\r\n* OTEL_SPAN_LINK_COUNT_LIMIT (Maximum allowed span link count)\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1364\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update  (not sure?)\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests added\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated (Needed? If yes, where?)\r\n",
    "head_branch": "1364-support-span-collection-limit-via-env-vars",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for span collection limit via env vars (#1377)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9444ee515ce6a4e6e7",
    "number": 1374,
    "body": "Fixes #1104\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] test_fields\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\nTagging @carlosalberto as requested :+1: ",
    "head_branch": "issue_1104",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add fields property (#1374)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9544ee515ce6a4e6e8",
    "number": 1373,
    "body": "# Description\r\n\r\nThis PR addresses Issue https://github.com/open-telemetry/opentelemetry-python/issues/1343 and issue https://github.com/open-telemetry/opentelemetry-python/issues/1307 by renaming the `Record` class in the metrics sdk to `Accumulation`\r\n\r\nrelated to PR https://github.com/open-telemetry/opentelemetry-python/pull/1372 and issue https://github.com/open-telemetry/opentelemetry-python/issues/1342\r\n\r\n## Summary of Changes\r\n\r\n1. rename `Record` class to `Accumulation`\r\n2. rename all `record = metrics.Accumulation()` to `accumulation = metrics.Accumulation()` for consistency\r\n\r\n## Rationale behind changes\r\n\r\n**1. rename `Record` class to `Accumulation`**\r\n* PR https://github.com/open-telemetry/opentelemetry-python/pull/1372 showed that the `Meter` class should be renamed to `Accumulator`\r\n* According to the [Spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/metrics/sdk.md#accumulator-collect-function), the type computed/collected by the Accumulator must be named Accumulation\r\n\r\n**2. rename all `record = metrics.Accumulation()` to `accumulation = metrics.Accumulation()` for consistency**\r\n\r\n* cleaning up vestigial naming scheme from when Accumulation used to be called Record. \r\n* variable name should reflect what is actually behind returned\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- ~~[ ] Bug fix (non-breaking change which fixes an issue)~~\r\n- ~~[ ] New feature (non-breaking change which adds functionality)~~\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nJust made sure all the tests are passing post naming change\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] ~~Unit tests have been added~~\r\n- [ ] ~~Documentation has been updated~~\r\n\r\ncc - @ocelotl ",
    "head_branch": "rename-record-to-accumulation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename Record class in Metrics SDK to Accumulation to follow spec (#1373)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9644ee515ce6a4e6e9",
    "number": 1372,
    "body": "# Description\r\n\r\nThis PR addresses Issue https://github.com/open-telemetry/opentelemetry-python/issues/1342 and issue https://github.com/open-telemetry/opentelemetry-python/issues/1307 by renaming the `Meter` class in the metrics sdk to `Accumulator`\r\n\r\n## Summary of changes\r\n\r\n1. rename `Meter` class to `Accumulator`\r\n2. ~~rename all `meter = meter_provider.get_meter()` to `accumulator = meter_provider.get_meter()` for consistency~~\r\n\r\n## Rationale behind changes\r\n1. **rename Meter class to Accumulator**\r\n* The [Meter Class](https://github.com/open-telemetry/opentelemetry-python/blob/master/opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py#L341) does a lot of the same things as the [Accumulator in Go](https://github.com/open-telemetry/opentelemetry-go/blob/master/sdk/metric/sdk.go)\r\n\r\n|Similarities|Meter class|Accumulator struct|\r\n|----|----|----|\r\n|collects all metrics|[def collect](https://github.com/open-telemetry/opentelemetry-python/blob/master/opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py#L363)| [func collect](https://github.com/open-telemetry/opentelemetry-go/blob/master/sdk/metric/sdk.go#L348)|\r\n| helper func to collect from sync instruments| [def _collect_metrics](https://github.com/open-telemetry/opentelemetry-python/blob/master/opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py#L374)| [func collectSyncInstruments](https://github.com/open-telemetry/opentelemetry-go/blob/master/sdk/metric/sdk.go#L359)|\r\n| helper func to collect from async instruments| [def _collect_observers](https://github.com/open-telemetry/opentelemetry-python/blob/master/opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py#L397) | [func observeAsyncInstruments](https://github.com/open-telemetry/opentelemetry-go/blob/master/sdk/metric/sdk.go#L413)|\r\n| record batch metric events | [def record_batch](https://github.com/open-telemetry/opentelemetry-python/blob/master/opentelemetry-sdk/src/opentelemetry/sdk/metrics/__init__.py#L410) | [func RecordBatch](https://github.com/open-telemetry/opentelemetry-go/blob/master/sdk/metric/sdk.go#L480)|\r\n| register sync instruments | create_counter, create_updowncounter etc | [func NewSyncInstrument](https://github.com/open-telemetry/opentelemetry-go/blob/master/sdk/metric/sdk.go#L317)|\r\n| register async instruments | register_sumobserver, register_updownsumobserver etc | [func NewAsyncInstrument](https://github.com/open-telemetry/opentelemetry-go/blob/master/sdk/metric/sdk.go#L327) |\r\n\r\n* The `Meter` class does all of what is defined for the`Accumulator` in the [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/metrics/sdk.md#dataflow-diagram) \r\n    * extends the `Meter` interface\r\n    * adds collection methods for Synchronous and Asynchronous instruments (which are metrics and observers respectively in Python)\r\n    * registers records to concurrency update and aggregate records of metric data\r\n\r\n2. ~~**rename all `meter = meter_provider.get_meter()` to `accumulator = meter_provider.get_meter()` for consistency**~~\r\n\r\n*  ~~feels awkward to have an instance of a `meter` since a meter is an interface~~\r\n*  ~~now that the metrics sdk meter_provider returns an accumulator, the usage in various tests and examples should reflect what is actually being returned~~\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] ~~Bug fix (non-breaking change which fixes an issue)~~\r\n- [ ] ~~New feature (non-breaking change which adds functionality)~~\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nJust made sure all the tests are passing post name changes.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] ~~Unit tests have been added~~\r\n- [x] Documentation has been updated\r\n\r\ncc - @ocelotl ",
    "head_branch": "1342-rename-meter-to-accumulator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Renaming Meter to Accumulator in Metrics SDK context (#1372)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9744ee515ce6a4e6ea",
    "number": 1371,
    "body": "# Description\r\n\r\nThis fixes the issue with the docs build which is failing because the Contrib repo is not checked out as part of the `docs.yml` workflow.\r\n\r\nThe failure can be seen here: https://github.com/open-telemetry/opentelemetry-python/runs/1379941084\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nNo tests, but the errors logs say it's because the `opentelemetry-python-contrib` repo directory does not exist which makes sense.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "fix-docs-push",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Contrib repo checkout for docs build (#1371)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9844ee515ce6a4e6eb",
    "number": 1369,
    "body": "# oops, accidentally created PR upstream instead of my fork. Please ignore",
    "head_branch": "1342-rename-meter-to-accumulator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9844ee515ce6a4e6ec",
    "number": 1368,
    "body": "# Description\r\n\r\nThis PR includes readability fixes to the getting started page, including removal of passive voice, some spelling fixes, removal of future-looking language, and rewording to accommodate users with a screen reader. It doesn't include any code changes.\r\n\r\nChecklist:\r\n[X ] Followed the style guidelines of this project\r\n[X ] Changelogs have been updated\r\n[X ] Unit tests have been added\r\n[X ] Documentation has been updated",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Edits to getting started docs (#1368)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9944ee515ce6a4e6ed",
    "number": 1367,
    "body": "# Description\r\nRenaming all instances of MetricRecord to ExportRecord to adhere to [Metric Spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/metrics/sdk.md)\r\n\r\nRelates to issues #1345  and #1307 \r\n\r\n## Type of change\r\n- [x] Spec Compliance (non-breaking change which further complies sdk with spec)\r\n\r\n# How Has This Been Tested?\r\nI ran tox to make sure nothing had been accidentally broken while renaming.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been updated added\r\n",
    "head_branch": "RenameToExportRecord",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename MetricRecord to ExportRecord (#1367)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9a44ee515ce6a4e6ee",
    "number": 1366,
    "body": "Signed-off-by: Abhilash Gnan <abhilashgnan@gmail.com>\r\n\r\n# Description\r\n\r\nEnv var support for OTLP exporter was added in https://github.com/open-telemetry/opentelemetry-python/pull/1101. There is a error case(https://github.com/open-telemetry/opentelemetry-python/pull/1101#discussion_r515398394) which needs to be handled when `credentials` is not available in case of `insecure=False`(default).\r\n\r\nThis PR adds a `ValueError` for such case. Also, modified sample code to have `insecure=True`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "jan25/issue-1004-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OTLP exporter: Handle error case when no credentials supplied (#1366)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9b44ee515ce6a4e6ef",
    "number": 1365,
    "body": "`start_as_current_span()` and `start_span()` should have identical constructors. For the parameters related to exception and status:\r\n1. record_exception - whether or not to automatically call `record_exception()` if exception raised\r\n2. set_status_on_exception - whether or not to automatically set span status to `ERROR` if exception raised\r\n\r\nAs well, from [this comment](https://github.com/open-telemetry/opentelemetry-python/issues/1301#issuecomment-721121940),\r\nadding `exception.escaped` attribute when exception raised from span being used as a context manager.",
    "head_branch": "exp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Align optional parameters for span related to exceptions, add exception.escaped for record_exception (#1365)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9c44ee515ce6a4e6f0",
    "number": 1362,
    "body": "# Description\r\n\r\nThe `test/util` package was not downloading the `opentelemetry-api` and `opentelemetry-sdk` package at the matching version.\r\n\r\nNormally this wasn't a problem because they get installed first, but if `tests/util` were to be installed first, then it would install from Pypi (which would be an older version).\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAll CI test still pass as they normally would.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "tests-util-dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set dependencies version for tests util pkg (#1362)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9c44ee515ce6a4e6f1",
    "number": 1361,
    "body": "Addresses #1304 ",
    "head_branch": "none-invalid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Document None attribute values as undefined behavior (#1361)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9d44ee515ce6a4e6f2",
    "number": 1358,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1331\r\n\r\n@NathanielRN \r\n\r\nThis PR will affect the migration.",
    "head_branch": "http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9e44ee515ce6a4e6f3",
    "number": 1357,
    "body": "# Description\r\n\r\nAdd tests to check if PRs on the Core repo will break tests from the Contrib Repo.\r\n\r\nTo test against a particular Contrib Repo PR, change the env variable `CONTRIB_REPO_SHA` to prove tests pass. Once they pass, PRs in Core and Contrib can be merged at the same time.\r\n\r\nThis fixes:\r\n- `tox -e lint`\r\n- `tox -e docs`\r\n\r\nRelated to #1233\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nNew tests added to make sure Core changes don't affect Contrib.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n- [x] Unit tests have been added\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "add-contrib-repo-tests-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Contrib Repo Tests workflow on Core PRs (#1357)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200f9f44ee515ce6a4e6f4",
    "number": 1356,
    "body": "Fixes #1355\r\n\r\n# Description\r\n\r\nUpdates the version of `protobuf` to the latest one.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAll regular tests are passing.\r\n\r\n- [ ] Test A\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1355",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update protobuf versions (#1356)\n\nFixes #1355"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa044ee515ce6a4e6f5",
    "number": 1354,
    "body": "Addresses #1298 \r\n",
    "head_branch": "spec-db",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa144ee515ce6a4e6f6",
    "number": 1329,
    "body": "According to opentracing semantic conventions, span.kind attribute\r\nshould be one of the following four values: \"server\", \"client\",\r\n\"producer\", \"consumer\". The spec does not mention the casing of the\r\nstrings but all examples show them in lower case. Moreoever, the\r\nOpenTelemetry collector recognizes these values only when they are\r\nlower case. Today if opentelemetry-python exports a span using the\r\njaeger exporter to the OpenTelemetry collector, it loses the span.kind\r\ninformation. Using the debug logger exporter in the collector prints the\r\nfollowing to the screen:\r\n\r\n    Span #0\r\n        Trace ID       : 31789e02d79452eaedb72769bed5fac7\r\n        Parent ID      : a6398bc507d8a982\r\n        ID             : 4a00eaa815e69785\r\n        Name           : custom\r\n        Kind           : SPAN_KIND_UNSPECIFIED\r\n\r\n    Span #1\r\n        Trace ID       : 31789e02d79452eaedb72769bed5fac7\r\n        Parent ID      :\r\n        ID             : a6398bc507d8a982\r\n        Name           : HelloWorldResource.on_get\r\n        Kind           : SPAN_KIND_UNSPECIFIED\r\n\r\nAfter the patch, span kind is correctly understood and represented by\r\nthe collector:\r\n\r\n    Span #0\r\n        Trace ID       : 8e4aeaa621f7e67c813a9cf26c56a202\r\n        Parent ID      : 13f4cc8db8dfe5b3\r\n        ID             : e8032193bb9dca98\r\n        Name           : custom\r\n        Kind           : SPAN_KIND_INTERNAL\r\n\r\n    Span #1\r\n        Trace ID       : 8e4aeaa621f7e67c813a9cf26c56a202\r\n        Parent ID      :\r\n        ID             : 13f4cc8db8dfe5b3\r\n        Name           : HelloWorldResource.on_get\r\n        Kind           : SPAN_KIND_SERVER\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated existing tests\r\n- [x] Manually tested by exporting to Jaeger collector and OpenTelemetry collector\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n\r\n",
    "head_branch": "jaeger-exporter-status-code-translation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Jaeger exporter to correctly translate span.kind attribute (#1329)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa144ee515ce6a4e6f7",
    "number": 1326,
    "body": "# Description\r\n\r\nFixes #1321 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nTest suite runs correctly. No changes to logic here :)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-py34-checks-1321",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove remaining checks in setup.py files for python3.4 (#1326)\n\n* remove remaining checks and type comments for python3.4\r\n\r\n* remove variable annotation changes, that is still not supported in python3.5 :("
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa244ee515ce6a4e6f8",
    "number": 1325,
    "body": "# Description\r\n\r\nThis PR adds a missing word in the OT shim documentation.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThis PR doesn't contain code changes.\r\n",
    "head_branch": "johananl/ot-shim-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing \"is\" in OT shim docs (#1325)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa344ee515ce6a4e6f9",
    "number": 1324,
    "body": "# Description\r\n\r\nFixes #1323 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "otlp-headers-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating docs now that metadata has been renamed (#1324)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa444ee515ce6a4e6fa",
    "number": 1322,
    "body": "Updating dev version to 0.16.dev0 and merging update to changelogs into master",
    "head_branch": "v0.15b0-master-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1322 from open-telemetry/v0.15b0-master-update\n\n[release] Updating dev version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa544ee515ce6a4e6fb",
    "number": 1320,
    "body": "Preparing 0.15b0 release",
    "head_branch": "release/0.15b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-release] Update changelogs, version [0.15b0] (#1320)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa644ee515ce6a4e6fc",
    "number": 1319,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1220",
    "head_branch": "tracestate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow samplers to modify TraceState (#1319)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa644ee515ce6a4e6fd",
    "number": 1318,
    "body": "# Description\r\n\r\nAdds support for the Zipkin Exporter v2 API's [protobuf format](https://github.com/openzipkin/zipkin-api/blob/master/zipkin.proto). \r\n\r\nIncludes 2 auto-generated files related to the protobuf format:\r\n- `exporter/opentelemetry-exporter-zipkin/src/opentelemetry/exporter/zipkin/zipkin_pb2.py` the core buffer code\r\n- `exporter/opentelemetry-exporter-zipkin/src/opentelemetry/exporter/zipkin/zipkin_pb2.pyi` derived mypy stub file to aid development\r\n\r\nFile gen command (based on [google docs](https://developers.google.com/protocol-buffers/docs/overview#generating)):\r\n```\r\n./protoc -I=exporter/opentelemetry-exporter-zipkin/src/opentelemetry/exporter/zipkin/ \\\r\n  --python_out=exporter/opentelemetry-exporter-zipkin/src/opentelemetry/exporter/zipkin/ \\\r\n  --mypy_out=exporter/opentelemetry-exporter-zipkin/src/opentelemetry/exporter/zipkin/ \\\r\n  zipkin.proto\r\n```\r\n\r\n\r\nFixes #1175 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\nBreaking change is minor - the dict `opentelemetry.exporter.zipkin.SPAN_KIND_MAP` structure has changed but I suspect this is only being internally used by the module.\r\n\r\n# How Has This Been Tested?\r\n\r\nManual testing with local zipkin server doing comparisons between JSON & protobuf data exports to ensure they identically matched. Plus full tox run against envs:\r\n- 3.5.10\r\n- 3.6.12\r\n- 3.7.9\r\n- 3.8.6\r\n- 3.9.0\r\n- pypy3.6-7.3.1\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1175_zipkin_exporter_v2_protobuf_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Zipkin exporter v2 api support for protobuf format (#1318)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa744ee515ce6a4e6fe",
    "number": 1317,
    "body": "# Description\r\n\r\nAvoid logging inside a lock.\r\n\r\nFixes #1316 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit test\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "dont-lock-loggin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Exit the lock before logging (#1317)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa844ee515ce6a4e6ff",
    "number": 1315,
    "body": "Found a few discrepancies in the changelogs that needed to be fixed\r\n",
    "head_branch": "fix-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixing changelogs (#1315)\n\nFound a few discrepancies in the changelogs that needed to be fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fa944ee515ce6a4e700",
    "number": 1314,
    "body": "# Description\r\n[Spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/api.md#record-exception) says,\r\n\r\nTo facilitate recording an exception languages SHOULD provide a `RecordException` method if the language uses exceptions. This is a specialized variant of `AddEvent`, so for anything not specified here, the same requirements as for `AddEvent` apply.\r\n\r\n`AddEvent` accepts optional event attributes and timestamp. This PR makes `Span.record_exception` to to adhere to specs\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox`\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "span-record_exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Span.record_exception to to adhere to specs (#1314)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200faa44ee515ce6a4e701",
    "number": 1313,
    "body": "# Description\r\n`TracerProvider` for `trace.set_tracer_provider` can't be abstract `TracerProvider` for instrumentation.",
    "head_branch": "usage-bug-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fab44ee515ce6a4e702",
    "number": 1312,
    "body": "# Description\r\n\r\n Update README, docs and examples. Probably missed in #953.\r\n\r\n## Type of change\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e docs`\r\n\r\n# Checklist:\r\n\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update docs (#1312)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fab44ee515ce6a4e703",
    "number": 1310,
    "body": "# Description\r\n\r\nThis PR aims to simplify the `botocore` instrumentation by only adding a few key attributes to every span.\r\n\r\nChanges include:\r\n- Removed code that modified `span.resource` since resource is immutable\r\n- Remove code that searches for nested attributes using `deep_getattr` and instead counts on these attributes being there\r\n- Change `SpanKind` from `CONSUMER` to `CLIENT` because `botocore` api calls can be considered _remote outgoing_ and _synchronous requests_ requests as laid out in the [SpanKind specifications](https://github.com/open-telemetry/opentelemetry-specification/blob/06d16d7db88c3e266636f84887de61e3363b5429/specification/trace/api.md#spankind) - Important so that AWS services are treated as separate services in Tracing Backends.\r\n- Removed _params_ from attributes. There is [a PR](https://github.com/open-telemetry/opentelemetry-specification/pull/1095/files) to add more specific semantic conventions for `botocore` in the specifications so the plan was to revisit when it gets merged\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] With the change to `SpanKind.CLIENT`, S3 (and other services) are considered their own services\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/23139455/97763226-3fbc0480-1ac8-11eb-93a8-00b9c2871fed.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/23139455/97763170-0f746600-1ac8-11eb-8d87-ddfd284c46a1.png)\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "update-botocore-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fac44ee515ce6a4e704",
    "number": 1309,
    "body": "# Description\r\n\r\nFix: Django instrumentation if request have query_string will not correct resolver we need use request.path to replace request.get_full_path()\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test have query string and not have query string to get correct span name\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bugfix_django_instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bugfix django instrumentation (#1309)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fad44ee515ce6a4e705",
    "number": 1308,
    "body": "# Description\r\n\r\nAs of #1214, the status codes changed and no longer line up with gRPC status codes, so now we'll just set `StatusCode.ERROR` and store the actual gRPC status code in the trace as `grpc.status_code`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nMostly observation in Jaeger.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "grpc-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rework gRPC status based on new rules (#1308)\n\nAs of #1214, the status codes changed and no longer line up with gRPC\r\nstatus codes, so now we'll just set `StatusCode.ERROR` and store the\r\nactual gRPC status code in the trace as `grpc.status_code`.\r\n\r\nSpecifically this: https://github.com/open-telemetry/opentelemetry-specification/pull/1156"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fae44ee515ce6a4e706",
    "number": 1306,
    "body": "# Description\r\n\r\nAdd env variable to enable the user to run off the collection of db.statement.parameters\r\n\r\nFixes # (issue)\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/1215\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ x ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit Tests\r\n",
    "head_branch": "dbapi-add-skip-sql-param-capture-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200faf44ee515ce6a4e707",
    "number": 1295,
    "body": "# Description\r\n\r\nRemoves coupling of `TracerProvider` in `Tracer()` by explicitly passing in tracer dependencies instead of a `TracerProvider` object.\r\n\r\nFixes (#1181)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\ntox  full run against envs:\r\n- 3.5.10\r\n- 3.6.12\r\n- 3.7.9\r\n- 3.8.6\r\n- 3.9.0\r\n- pypy3.6-7.3.1\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1181_remove_tracerprovider_dep_from_tracer_init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removing TracerProvider coupling from Tracer init (#1295)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb044ee515ce6a4e708",
    "number": 1293,
    "body": "There is a build error with the docs Github action currently,\r\nthat is due to incorrect Python specifier syntax.\r\n\r\n\tRun actions/setup-python@v2\r\n\tVersion py38 was not found in the local cache\r\n\tError: Version py38 with arch x64 not found\r\n\tThe list of all available versions can be found here: https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json\r\n\r\n## Type of change\r\n\r\n- [x] build issue\r\n\r\n# How Has This Been Tested?\r\n\r\nI don't have the ability to test this on my side, but I can attest that this syntax is correct.",
    "head_branch": "feature/fix-doccs-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: using correct python specifier for docs action (#1293)\n\nThere is a build error with the docs Github action currently,\r\nthat is due to incorrect Python specifier syntax.\r\n\r\n\tRun actions/setup-python@v2\r\n\tVersion py38 was not found in the local cache\r\n\tError: Version py38 with arch x64 not found\r\n\tThe list of all available versions can be found here: https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb044ee515ce6a4e709",
    "number": 1292,
    "body": "observer_type is no longer required.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nLocally, running the docs/ examples.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/fix-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Fixing observer example (#1292)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb144ee515ce6a4e70a",
    "number": 1291,
    "body": "# Description\r\n\r\nI am going to create an AWS XRay exporter in OpenTelemetry-Python, to emit telemetry data to AWS XRay service via boto3 API [XRay.put_trace_segments()](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/xray.html?highlight=xray#XRay.Client.put_trace_segments). This PR is the prerequisite for this in-process exporter. \r\nWhen I was working on the AWSXrayExporter, the botocore instrumentor would instrument function `XRay.put_trace_segments()` inside of AWSXrayExporter, causes infinite recursive loop. This PR is inspired from AWS XRay SDK, skip instrument this specific function to avoid infinite recursion.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] End to end test\r\nHave created the AWSXrayExporter in local and enable botocore instrumentor in my test App to instrument a boto3 S3.list_buckets function. No infinite recursion problem happen.\r\n\r\n- [ ] Covered by unit test\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb244ee515ce6a4e70b",
    "number": 1289,
    "body": "… span has ended\r\n\r\n# Description\r\n\r\n`Span.is_recording()` is now based off `self._end_time` and returns `False` if a span has ended.\r\n\r\nFixes (#1243)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\ntox full run against pyenvs:\r\n\r\n- 3.5.10\r\n- 3.6.12\r\n- 3.7.9\r\n- 3.8.6\r\n- 3.9.0\r\n- pypy3.6-7.3.1\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1243_isrecording_becomes_false_after_end_v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Span.is_recording() now based off self._end_time and returns False if… (#1289)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb344ee515ce6a4e70c",
    "number": 1286,
    "body": "# Description\r\n\r\nAchieving OpenTelemetry instrumentation in a Django production servers like gunicorn, since instrumentation of the application alone works on a development server. This fix calls for instrumentation of both the development and production servers. You have to install gunicorn and create a separate file called tracing.py in your application to effect this change. \r\n\r\nFixes # (1197)\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\ntox environments:\r\n\r\n* py37\r\n\r\napplied tox lint checks\r\n",
    "head_branch": "doc-production-server",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb444ee515ce6a4e70d",
    "number": 1285,
    "body": "# Description\r\n\r\nAdds support for basic sequence (list, tuple, range) attribute values in the Zipkin exporter.\r\n\r\nSince the value is serialized to a JSON list string, specific logic is needed to ensure max_tag_value_length is honored at the element boundary.\r\n\r\nAs an aside, I believe I've identified a bug in that bool objects are supposed to be serialized to `true` or `false` to adhere to JSON spec, but we appear to be retaining python formatting of `True` and `False`. Will file a separate bug report.\r\n\r\nFixes #1110\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\ntox environments:\r\n- py35-test-exporter-zipkin\r\n- py36-test-exporter-zipkin\r\n- py37-test-exporter-zipkin\r\n- py38-test-exporter-zipkin\r\n- pypy3-test-exporter-zipkin\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1110_zipkin_exporter_support_array_attrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding support for array attributes to Zipkin exporter (#1285)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb444ee515ce6a4e70e",
    "number": 1284,
    "body": "# Description\r\n\r\nThe current docs github action uses python latest, which has switched to python 3.9. Tracking the issue to support python 3.9 in #1283, but for addressing the docs build failure, switching the environment to build using python 3.8\r\n\r\nFixes #1280 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTested building docs with python 3.8\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "issue_1280",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use python 3.8 to build docs (#1284)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb544ee515ce6a4e70f",
    "number": 1282,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1214\r\n\r\nChanges status canonical codes to comply with spec changes. Also changes behavior for setting status within instrumentations. The general idea is: instrumentations should not set status ever unless if an error happens. Span api/sdk should not set status either, so the only time that the span status is set to OK is by the user.\r\n\r\n1. Renames StatusCanonicalCode to StatusCode: https://github.com/open-telemetry/opentelemetry-specification/pull/1081\r\n2. Changes default StatusCode to `UNSET`.\r\n3. Change `UNKNOWN` to `ERROR`\r\n4. Change `http_to_canonical_code` to follow https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md#status\r\n5. On span creation, default status has status code `StatusCode.UNSET`. Do not set status to `StatusCode.OK` upon span end if not set.\r\n6. Instrumentations do not set status anymore except on ERROR\r\n\r\nTODO:\r\n1. Fix otlpexporter/opencensusexporter mapping from statuscode once protobuf is updated.\r\n2. Add `record_exception` option to span `__exit__`\r\n3. Add `set_status_on_exception` parameter to `start_as_current_span`\r\n\r\n",
    "head_branch": "status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change status codes from grpc status codes, remove setting status in instrumentations except on ERROR (#1282)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb644ee515ce6a4e710",
    "number": 1281,
    "body": "While investigating docs failures #1280, found some config leftover from the move to `instrumentation` from `ext`.",
    "head_branch": "fix-docs-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs workflow not triggered on instrumentation push (#1281)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb744ee515ce6a4e711",
    "number": 1279,
    "body": "DO NOT REVIEW",
    "head_branch": "release/0.0.11-auto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb844ee515ce6a4e712",
    "number": 1278,
    "body": "# Description\r\n\r\nSpan.is_recording() returns false after end() has been called. Also added an 'is_recording' attr to Span.to_json() output for more transparency.\r\n\r\nFixes (#1243)\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n`tox` with installed pyenvs:\r\n* 3.5.10\r\n* 3.6.12\r\n* 3.7.9\r\n* 3.8.6\r\n* 3.9.0\r\n* pypy3.6-7.3.1\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1243_isrecording_becomes_false_after_end",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb844ee515ce6a4e713",
    "number": 1277,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/flask_exception_handling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fb944ee515ce6a4e714",
    "number": 1275,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "org-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fba44ee515ce6a4e715",
    "number": 1272,
    "body": "# Description\r\n\r\nAchieving OpenTelemetry instrumentation in a Django production servers like gunicorn, since instrumentation of the application on works on a development server. You have to install gunicorn in your application to effect this change.\r\n\r\nFixes # (1197)\r\n\r\n## Documentation\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI have applied tox lint checks\r\n",
    "head_branch": "doc-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fbb44ee515ce6a4e716",
    "number": 1271,
    "body": "# Description\r\n\r\nThis is a minor fix for a small issue from PR #1116. The example file for demonstrating http metrics is named as http.py. This leads to a shadow import with another file in requests causing the import scream.\r\n\r\n```\r\n\r\n(env) basic_meter $ python http.py \r\nTraceback (most recent call last):\r\n  File \"http.py\", line 19, in <module>\r\n    import requests\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/requests/__init__.py\", line 43, in <module>\r\n    import urllib3\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/__init__.py\", line 7, in <module>\r\n    from .connectionpool import HTTPConnectionPool, HTTPSConnectionPool, connection_from_url\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 11, in <module>\r\n    from .exceptions import (\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/exceptions.py\", line 2, in <module>\r\n    from .packages.six.moves.http_client import IncompleteRead as httplib_IncompleteRead\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 199, in load_module\r\n    mod = mod._resolve()\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 113, in _resolve\r\n    return _import_module(self.mod)\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 82, in _import_module\r\n    __import__(name)\r\n  File \"/Users/pavankri/ot/opentelemetry-python/docs/examples/basic_meter/http.py\", line 22, in <module>\r\n    from opentelemetry.instrumentation.requests import RequestsInstrumentor\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/opentelemetry/instrumentation/requests/__init__.py\", line 39, in <module>\r\n    from requests import Timeout, URLRequired\r\nImportError: cannot import name 'Timeout' from partially initialized module 'requests' (most likely due to a circular import) (/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/requests/__init__.py)\r\n```\r\n\r\n\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n- Renamed the file to something appropriate `http_metrics.py` and that resolved the issue. Verified the example is working as expected \r\n\r\n- [ X] Test A\r\n\r\n```\r\n(env) basic_meter   $ mv http.py http_metrics.py\r\n(env) basic_meter   $ python http_metrics.py \r\n...\r\nConsoleMetricsExporter(data=\"ValueRecorder(name=\"http.client.duration\", description=\"measures the duration of the outbound HTTP request\")\", labels=\"(('http.flavor', '1.1'), ('http.method', 'GET'), ('http.status_code', '200'), ('http.url', 'http://example.com'))\", value=minmaxsumcount(min=77.86989212036133, max=77.86989212036133, sum=77.86989212036133, count=1), resource={'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '0.15.dev0'})\r\n```\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated (N/A)\r\n- [ ] Unit tests have been added (N/A)\r\n- [X] Documentation has been updated\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "naming a file http.py leads to shadowing of http module in urllib (#1271)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fbc44ee515ce6a4e717",
    "number": 1270,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "org-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fbd44ee515ce6a4e718",
    "number": 1269,
    "body": "# Description\r\n\r\nThis is a minor fix for a small issue from PR #1116. The example file for demonstrating http metrics is named as http.py. This leads to a shadow import with another file in requests causing the import scream.\r\n\r\n```\r\n\r\n(env) basic_meter $ python http.py \r\nTraceback (most recent call last):\r\n  File \"http.py\", line 19, in <module>\r\n    import requests\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/requests/__init__.py\", line 43, in <module>\r\n    import urllib3\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/__init__.py\", line 7, in <module>\r\n    from .connectionpool import HTTPConnectionPool, HTTPSConnectionPool, connection_from_url\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 11, in <module>\r\n    from .exceptions import (\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/exceptions.py\", line 2, in <module>\r\n    from .packages.six.moves.http_client import IncompleteRead as httplib_IncompleteRead\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 199, in load_module\r\n    mod = mod._resolve()\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 113, in _resolve\r\n    return _import_module(self.mod)\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 82, in _import_module\r\n    __import__(name)\r\n  File \"/Users/pavankri/ot/opentelemetry-python/docs/examples/basic_meter/http.py\", line 22, in <module>\r\n    from opentelemetry.instrumentation.requests import RequestsInstrumentor\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/opentelemetry/instrumentation/requests/__init__.py\", line 39, in <module>\r\n    from requests import Timeout, URLRequired\r\nImportError: cannot import name 'Timeout' from partially initialized module 'requests' (most likely due to a circular import) (/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/requests/__init__.py)\r\n```\r\n\r\n\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n- Renamed the file to something appropriate `http_metrics.py` and that resolved the issue. Verified the example is working as expected \r\n\r\n- [ X] Test A\r\n\r\n```\r\n(env) basic_meter   $ mv http.py http_metrics.py\r\n(env) basic_meter   $ python http_metrics.py \r\n...\r\nConsoleMetricsExporter(data=\"ValueRecorder(name=\"http.client.duration\", description=\"measures the duration of the outbound HTTP request\")\", labels=\"(('http.flavor', '1.1'), ('http.method', 'GET'), ('http.status_code', '200'), ('http.url', 'http://example.com'))\", value=minmaxsumcount(min=77.86989212036133, max=77.86989212036133, sum=77.86989212036133, count=1), resource={'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '0.15.dev0'})\r\n```\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated (N/A)\r\n- [ ] Unit tests have been added (N/A)\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fbd44ee515ce6a4e719",
    "number": 1268,
    "body": "# Description\r\n\r\nThis is a minor fix for a small issue from PR #1116. The example file for demonstrating http metrics is named as http.py. This leads to a shadow import with another file in requests causing the import scream.\r\n\r\n```\r\n\r\n(env) basic_meter $ python http.py \r\nTraceback (most recent call last):\r\n  File \"http.py\", line 19, in <module>\r\n    import requests\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/requests/__init__.py\", line 43, in <module>\r\n    import urllib3\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/__init__.py\", line 7, in <module>\r\n    from .connectionpool import HTTPConnectionPool, HTTPSConnectionPool, connection_from_url\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 11, in <module>\r\n    from .exceptions import (\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/exceptions.py\", line 2, in <module>\r\n    from .packages.six.moves.http_client import IncompleteRead as httplib_IncompleteRead\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 199, in load_module\r\n    mod = mod._resolve()\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 113, in _resolve\r\n    return _import_module(self.mod)\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 82, in _import_module\r\n    __import__(name)\r\n  File \"/Users/pavankri/ot/opentelemetry-python/docs/examples/basic_meter/http.py\", line 22, in <module>\r\n    from opentelemetry.instrumentation.requests import RequestsInstrumentor\r\n  File \"/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/opentelemetry/instrumentation/requests/__init__.py\", line 39, in <module>\r\n    from requests import Timeout, URLRequired\r\nImportError: cannot import name 'Timeout' from partially initialized module 'requests' (most likely due to a circular import) (/Users/pavankri/ot/opentelemetry-python/env/lib/python3.8/site-packages/requests/__init__.py)\r\n```\r\n\r\n\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n- Renamed the file to something appropriate `http_metrics.py` and that resolved the issue. Verified the example is working as expected \r\n\r\n- [ X] Test A\r\n\r\n```\r\n(env) basic_meter   $ mv http.py http_metrics.py\r\n(env) basic_meter   $ python http_metrics.py \r\n...\r\nConsoleMetricsExporter(data=\"ValueRecorder(name=\"http.client.duration\", description=\"measures the duration of the outbound HTTP request\")\", labels=\"(('http.flavor', '1.1'), ('http.method', 'GET'), ('http.status_code', '200'), ('http.url', 'http://example.com'))\", value=minmaxsumcount(min=77.86989212036133, max=77.86989212036133, sum=77.86989212036133, count=1), resource={'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '0.15.dev0'})\r\n```\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated (N/A)\r\n- [ ] Unit tests have been added (N/A)\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fbe44ee515ce6a4e71a",
    "number": 1267,
    "body": "Fixes #1262",
    "head_branch": "tracestate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pass in context instead of parentcontext into samplers (#1267)\n\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fbf44ee515ce6a4e71b",
    "number": 1265,
    "body": "# Description\r\n\r\nFixes #1264\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1264",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix typo in entrypoint definition (#1265)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc044ee515ce6a4e71c",
    "number": 1263,
    "body": "# Description\r\n\r\nThis fix applies to the `opentelemetry-instrumentation-grpc` module.\r\n\r\nWhen using a channel as a context manager, the original implementation will auto-close the channel on context exit:\r\n```\r\nwith grpc.insecure_channel(\"localhost:25565\") as channel:\r\n   # use channel\r\n```\r\n\r\nWhen instrumentation is enabled, the same code above throws a `NotImplementedError` because the `__entry__` and `__exit__` methods were not implemented on `_InterceptorChannel`.  This PR implements those methods\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added Test: `test_client_interceptor.TestClientProto.test_channel_context_manager`\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix_grpc_channel_context_manager",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc144ee515ce6a4e71d",
    "number": 1261,
    "body": "# Description\r\n\r\nFollow up to https://github.com/open-telemetry/opentelemetry-python-contrib/pull/49\r\n\r\n# How Has This Been Tested?\r\n\r\nCI has been updated to remove package tests (since they will live in the Contrib repo instead)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated (Is this needed?)\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "remove-aiohttp-client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc144ee515ce6a4e71e",
    "number": 1260,
    "body": "From the title, we don't want to be using `endpoint` for the span name. See [specs](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/api.md#span) for span name.\r\n\r\nUse `url.rule` instead if exists. If not, default to HTTP <method>",
    "head_branch": "flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use url.rule instead of request.endpoint for span name flask instrumentation (#1260)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc244ee515ce6a4e71f",
    "number": 1259,
    "body": "# Description\r\n\r\nBefore this change, the following would cause unintended behaviour in the Span API's add_event, update_name and set_status methods:\r\n\r\n- thread A calls set_status, locks to check if a span has ended, and releases the lock\r\n- thread B obtains the lock and ends a span\r\n- thread A continues its call of set_status\r\n\r\nThis change ensures that the update operations are done with the lock being held. It's done in a decorator, but that is completely optional.\r\n\r\nFixes #1157 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI updated the code in `set_status` to raise an exception when the status was updated on an already ended span and was able to reproduce the issue, it was too unreliable to write a unit test for it. The only way I managed to reproduce with about 1% of the time was to introduce a delay in `set_status`\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "validate-tracer-thread-safe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "addressing concurrency issue in Span API (#1259)\n\nBefore this change, the following would cause unintended behaviour in the Span API's add_event, update_name and set_status methods:\r\n\r\n- thread A calls set_status, locks to check if a span has ended, and releases the lock\r\n- thread B obtains the lock and ends a span\r\n- thread A continues its call of set_status\r\n\r\nThis change ensures that the update operations are done with the lock being held. It's done in a decorator, but that is completely optional."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc344ee515ce6a4e720",
    "number": 1258,
    "body": "# Description\r\n\r\nRemoves code that will be destined for the Contrib Repository as outlined in [this PR](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/47).\r\n\r\nFixes #1233\r\n\r\n## Type of change\r\n\r\nMoving files to another repo without breaking API calls\r\n\r\n# How Has This Been Tested?\r\n\r\nThe Contrib repo has a CI build to validate changes there use the APIs and SDK here.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n~- [ ] Unit tests have been added~\r\n~- [] Documentation has been updated~\r\n",
    "head_branch": "remove-contrib-files",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removes Instrumentation and Exporter Code From Core Repo (#1258)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc444ee515ce6a4e721",
    "number": 1257,
    "body": "# Description\r\n\r\nUpdate Django instrumentation to record http.status_code and span status on exception.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated unit test\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "django-exception-status-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Django: Record status, http.status_code and event on exception (#1257)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc544ee515ce6a4e722",
    "number": 1256,
    "body": "# Description\r\n\r\n[As per the spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/common/common.md#attributes), None values in attribute sequences are valid\r\n\r\n> `null` values within arrays MUST be preserved as-is (i.e., passed on to spanprocessors / exporters as `null`). If exporters do not support exporting `null` values, they MAY replace those values by 0, `false`, or empty strings.\r\nThis is required for map/dictionary structures represented as two arrays with indices that are kept in sync (e.g., two attributes `header_keys` and `header_values`, both containing an array of strings to represent a mapping `header_keys[i] -> header_values[i]`).\r\n\r\nFixes #998\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests have been added\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added",
    "head_branch": "998-set-attribute-with-invalid-value-pops-attribute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow None in sequence attributes values (#998) (#1256)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc644ee515ce6a4e723",
    "number": 1254,
    "body": "Originally we abstracted the metric instrument constructors to avoid duplicate code.\r\nSplit them up so we don't take a dependency on the implementation of the instrument to determine what instrument is instantiated. Rather we depend on the type of `MeterProvider` implementation now.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1182",
    "head_branch": "metric",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Split up metric instrument constructors (#1254)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc744ee515ce6a4e724",
    "number": 1253,
    "body": "# Description\r\n\r\nCorrelation context was renamed to baggage, this file was left behind in the process.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "rm-cc-test",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "removing unused test file (#1253)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc844ee515ce6a4e725",
    "number": 1251,
    "body": "# Description\r\nAdds optional parent `Context` parameter to `SpanProcessor.on_start` as per spec.\r\n\r\nFixes #1250 \r\n\r\n## Type of change\r\n\r\n- [x]  Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\nAdditional unit tests checking that the parent Context is passed through from tracer.start_span to SpanProcessor.on_start\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "span_processor_on_start_parent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make SpanProcessor.on_start accept parent Context (#1251)\n\n* context from Tracer.start_span is passed through to the SpanProcessor\r\n* fix linting issue in falcon test app when linting with eachdist script\r\n* fix global error handler test as it read installed extensions\r\n* reset global Configuration object state after tests were run"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc844ee515ce6a4e726",
    "number": 1249,
    "body": "# Description\r\n\r\nFixes #1244 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-limits",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Updating limits for attributes, events, links (#1249)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fc944ee515ce6a4e727",
    "number": 1248,
    "body": "# Description\r\n\r\nAs per the change in the spec, SpanContext is now SpanReference. I took some time in this PR to also rename the context parameter in the Span and Link classes to reference.\r\n\r\nFixes #1245 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "rename-span-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fca44ee515ce6a4e728",
    "number": 1247,
    "body": "# Description\r\n\r\nSwitched DBAPI so that it will not capture parameterized query parameters.  Capturing this would be a problem in production environments since they will contain sensitive information such as session tokens and hashed passwords.\r\n\r\nHave added a parameter to the instrumentation constructor to allow for this feature to be turned on.\r\n\r\nI will mark this as a breaking change since I am removing the db.statement.parameter span attribute and something might be depending on it. \r\n\r\nFixes # (issue)\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/1215\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit Tests\r\n\r\n# Checklist:\r\n\r\n- [ x] Followed the style guidelines of this project\r\n- [ x] Changelogs have been updated\r\n- [ x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "dbapi-skip-params-by-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fcb44ee515ce6a4e729",
    "number": 1246,
    "body": "Since `Event` s as part of a `Span` are immutable, the attributes associated with them were created to be immutable as well (`MappingProxyType`) [here](https://github.com/open-telemetry/opentelemetry-python/blob/master/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py#L343). These did not serialize properly since we missed the [type check](https://github.com/open-telemetry/opentelemetry-python/blob/master/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py#L464) here. Simply adding the type check and returning the underlying dictionary if attempting to format the immutable attributes is the solution.",
    "head_branch": "console",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bug fix: Serialize event attributes properly (#1246)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fcc44ee515ce6a4e72a",
    "number": 1242,
    "body": "This fixes #1102.\r\nI have added two additional attributes to `record_exception` method. Those are \r\n```\r\nattributes: types.Attributes = None,\r\ntimestamp: typing.Optional[int] = None,\r\n```\r\nI have applied the tox lint checks. ",
    "head_branch": "record-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add optional parameter to record_exception method (#1242)\n\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fcd44ee515ce6a4e72b",
    "number": 1241,
    "body": "Fixes #1057 ",
    "head_branch": "record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use is_recording flag in jinja, celery, esearch, falcon instrumentations (#1241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fce44ee515ce6a4e72c",
    "number": 1239,
    "body": "# Description\r\n\r\nDjango instrumentation required that OTEL_PYTHON_DJANGO_INSTRUMENT\r\nenvironment variable be set to \"True\" by users. All other\r\ninstrumentations are enabled out of the box and there is no apparent\r\nreason to disable Django by default. This commit changes the logic so\r\nthat Django instrumentation is applied by default. Users can set\r\n`OTEL_PYTHON_DJANGO_INSTRUMENT` env var to `\"False\"` to disable it.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Updated test suite\r\n- [x] Manual testing\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "enable-django-instrumentation-by-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow django to be instrumented automatically (#1239)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fce44ee515ce6a4e72d",
    "number": 1237,
    "body": "Fixes #1236\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated `translate_metrics test`\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1236",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Data points in exporter shouldnt use bound instruments (#1237)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fcf44ee515ce6a4e72e",
    "number": 1235,
    "body": "Updating version to 0.15dev0",
    "head_branch": "v0.14b-master-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd044ee515ce6a4e72f",
    "number": 1232,
    "body": "Prepare release.",
    "head_branch": "release/0.14b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 0.14b0 (#1232)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd144ee515ce6a4e730",
    "number": 1231,
    "body": "# Description\r\n\r\nDPAPI captures sql statement parameters as db.statement.properties.  This will result in capturing all values placed into the DB through sql statements as well as values used for queries.  In a production environment, this would be a large privacy and probably a security issue as well.\r\n\r\nSince I do not see the property, db.statement.properties, documented in the spec: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/database.md#call-level-attributes, I have chosen to simply remove the code that sets the property.\r\n\r\nIf this is not desired, please advise how I could put the setting of this property behind a flag.  Can the flag have the property disabled by default?  I suspect will be the preferred production configuration. \r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ x ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ x  ] Unit Tests\r\n\r\n# Checklist:\r\n\r\n- [x ] Followed the style guidelines of this project\r\n- [x ] Changelogs have been updated\r\n- [x ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "dbapi-stop-capturing-statement-parameters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd244ee515ce6a4e731",
    "number": 1230,
    "body": "Similar to https://github.com/open-telemetry/opentelemetry-python/pull/1116.\r\n\r\nAdding the ability to collect duration metrics from `Django` instrumentation.\r\n\r\nSemantic conventions for metrics can be found [here](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/metrics/semantic_conventions/http-metrics.md)\r\n\r\nCurrently `django` only supports SERVER type (since we don't have database tracking yet). The `HTTPMetricRecorder` is also being passed via `settings` from the `DjangoInstrumentor` to the `middleware`.\r\n\r\nAlso included in this PR:\r\n- a few changes to `MetricMixin` in the instrumentation package: Support both `SERVER` and `CLIENT` types, add a function to calculate duration without the use of context manager",
    "head_branch": "django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding metric collection as part of instrumentations - Django (#1230)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd344ee515ce6a4e732",
    "number": 1228,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1227",
    "head_branch": "pymy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump PyMySql Instrumentation version (#1228)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd344ee515ce6a4e733",
    "number": 1226,
    "body": "# Description DjangoInstrumentor middleware so that it captures the resolved function path for the route as the span attribute http.route.  This will allow the function path to be shown used as an organizing operation name in AppInsights.\r\n\r\nExtends \r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ X ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nExtended instrumentation/opentelemetry-instrumentation-django/tests/test_middleware.py to cover this change\r\n- [ X ] Test instrumentation/opentelemetry-instrumentation-django/tests/test_middleware.py\r\n\r\n# Checklist:\r\n\r\n- [ x ] Followed the style guidelines of this project\r\n- [ x ] Changelogs have been updated\r\n- [ x ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add_http.route_capture_to_DjangoInstrumentor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add capture of http.route to DjangoInstrumentor middleware (#1226)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd444ee515ce6a4e734",
    "number": 1219,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\n\r\nFixes #1103 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding support for Jaeger propagator (#1219)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd544ee515ce6a4e735",
    "number": 1218,
    "body": "# Description\r\n\r\nThis PR tells the worker thread loop on `BatchExportSpanProcessor` (and `DatadogExportSpanProcessor`, since it uses similar logic) to reset the condition variable timeout on each loop execution. Previously, this did not occur, and the worker thread could devolve into timeout-less busy-waiting if a high latency span batch was processed, followed by no new spans for subsequent worker thread loop iterations.\r\n\r\nFixes #1210 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added tests to `opentelemetry-sdk/tests/trace/export/__init__.py` and `exporter/opentelemetry-exporter-datadog/tests/test_datadog_exporter.py`\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "span-processor-reset-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix BatchExportSpanProcessor not resetting timeout on worker loop (#1218)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd644ee515ce6a4e736",
    "number": 1212,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/issues/1057",
    "head_branch": "record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use is_recording flag in aiopg, asyncpg, dbapi, psycopg2, pymemcache, pymongo, redis, sqlalchemy instrumentations (#1212)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd744ee515ce6a4e737",
    "number": 1211,
    "body": "# Description\r\n\r\nupdate doc to fix link to opentelemetry exporters, possibly missed in #953 \r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix link to opentelemetry exporters (#1211)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd844ee515ce6a4e738",
    "number": 1209,
    "body": "# Description\r\n\r\nAdding the Resource as a parameter to the Batcher (aka Processor see #1203). Not having the resource in the MetricRecord currently causes an issue retrieving resource information in the OTLP exporter.\r\n\r\nFixes #1208\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been update\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "resource-in-metric-record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding Resource to MetricRecord (#1209)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd944ee515ce6a4e739",
    "number": 1207,
    "body": "# Description\r\n\r\nNot all configured metrics are available on all operating systems, added a hasattr call before calling the observer.\r\n\r\nFixes #1206\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan the instrumentation manually again after the change, error messages were gone.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-system-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix issue when metrics are not available (#1207)\n\nNot all configured metrics are available on all operating\r\nsystems, added a hasattr call before calling the observer."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fd944ee515ce6a4e73a",
    "number": 1205,
    "body": "# Description\r\n\r\nSets up SDK package to be a Namespace Package.\r\n\r\nA `.pyi` file (instead of a `.py` file) allows packages to be registered and imported under the `opentelemetry.sdk.*` namespace.\r\n\r\nThis will allow vendors to ship packages under a `opentelemetry.sdk.extension` package, for example.\r\n\r\nFixes #1204\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] You can create a package with the following structure:\r\n```\r\nopentelemetry-sdk-extension-my-extension\r\n├── CHANGELOG.md\r\n├── LICENSE\r\n├── README.rst\r\n├── setup.cfg\r\n├── setup.py\r\n├── src\r\n│   ├── opentelemetry\r\n│   │   └── sdk\r\n│   │       └── my_extension\r\n│   │           ├── __init__.py\r\n│   │           └── version.py\r\n│   └── opentelemetry_sdk_extension_my_extension.egg-info\r\n│       ├── PKG-INFO\r\n│       ├── SOURCES.txt\r\n│       ├── dependency_links.txt\r\n│       ├── requires.txt\r\n│       └── top_level.txt\r\n└── tests\r\n    ├── __init__.py\r\n    ├── base_test.py\r\n    ├── test_automatic.py\r\n    └── test_programmatic.py\r\n\r\n```\r\nand see that if you run\r\n```\r\npip install -e ./opentelemetry-sdk-extenion\r\n```\r\nyou can now start a python environment and install BOTH the regular SDK and the extension:\r\n```\r\n$ python\r\nPython 3.8.2 (default, Aug 25 2020, 09:23:57)\r\n[Clang 12.0.0 (clang-1200.0.32.2)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import opentelemetry.sdk\r\n>>> import opentelemetry.sdk.my_extension\r\n```\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- ~[] Changelogs have been updated~ Not necessary?\r\n",
    "head_branch": "sdk-namespace-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SDK as namespace package makes it extendable (#1205)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fda44ee515ce6a4e73b",
    "number": 1203,
    "body": "# Description\r\n\r\nRenaming the Batcher to Processor as per metrics spec.\r\n\r\nFixes #1202\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "rename-batcher",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Renaming batcher to processor (#1203)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fdb44ee515ce6a4e73c",
    "number": 1199,
    "body": "# Description\r\n\r\nAdd timestamps to aggregators and OTLP metrics exporter.\r\n\r\nFixes #1008\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nRefactored aggregator and OTLP metric exporter tests.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1008",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add timestamps to aggregators and OTLP metrics exporter (#1199)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fdc44ee515ce6a4e73d",
    "number": 1198,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\nas part of [#546](https://github.com/open-telemetry/opentelemetry-specification/pull/546/files) specifications have been moved to subdirectory. updating this in propagators __init__.py.\r\n\r\n## Type of change\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: updated broken Propagation API Spec link in propagators __init__.py (#1198)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fdd44ee515ce6a4e73e",
    "number": 1196,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1084\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit Tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "text-map-keys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Converted TextMap propagator getter to a class and added keys method (#1196)\n\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fde44ee515ce6a4e73f",
    "number": 1195,
    "body": "# Description\r\n\r\nThis PR makes it more difficult for someone to edit the attributes of an `Event` once it has been added to a `Span`, as well as adding some regression tests around the other properties of an `Event` to ensure they have similar protections.\r\n\r\nIt isn't particularly straightforward or idiomatic to make objects truly immutable in Python, but if these steps don't go far enough let me know!\r\n\r\nI don't believe a documentation change is necessary because events are meant to be immutable[ according to the spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/api.md#add-events), but this should probably be considered a breaking change in case people were relying on the event attributes being mutable up until now.\r\n\r\nFixes #1038\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI've added regression tests to:\r\n- make sure that the properties of an `Event` raise an error when someone directly tries to change them; and\r\n- make sure that an error is raised if someone tries to directly edit any of the `attributes` dictionary tuples.\r\n\r\nI've also added a new test for my change to make sure that an error is raised if someone tryies to directly edit the `attributes` dictionary itself.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1038-make-events-immutable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make event attributes immutable (#1195)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fde44ee515ce6a4e740",
    "number": 1194,
    "body": "# Description\r\n\r\nUpdate the header name to match the spec.\r\n\r\nFixes #1193 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-baggage-header",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update baggage propagation header (#1194)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fdf44ee515ce6a4e741",
    "number": 1192,
    "body": "once approved the PR, owais will be added to the approvers team",
    "head_branch": "add-approver-owais",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "meta: adding owais as approver (#1192)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe044ee515ce6a4e742",
    "number": 1191,
    "body": "# Description\r\n\r\nPrototype for moving `SpanContext` into `Span` (https://github.com/open-telemetry/opentelemetry-specification/pull/1022) \r\n\r\nFor simplicity purposes, only updated:\r\n* API\r\n* SDK\r\n* The Jaeger exporter\r\n\r\nI'd like to get the Maintainers feedback - from my side here are my points:\r\n\r\n* This prototype required changes that have been only **very recently** merged to the Specification (such as https://github.com/open-telemetry/opentelemetry-specification/pull/994). Although we have prototypes for the aforementioned changes, we actually won't know how *good* it all these recent changes will play along with **this specific** change, and there's the general possibility that this *may* become a can of warms.\r\n* The changes, from instrumentation code perspective, do not really represent a change, as mostly this has to be updated in the API/SDK/`Propagator`s (no instrumentation, based on my digging, would need to be greatly updated).\r\n* Now `Link` will either reference `Span` (as shown in the prototype) or replicate the Trace/Span/ ids and flag/state. Not a pretty change, but it will work.\r\n* The change itself is neither a *big issue* nor a *big improvement* for Python overall. It won't break much existing user's code, but it doesn't bring anything useful to the table IMHO.\r\n\r\ncc @lzchen @codeboten in case I may have overseen either *good* or *bad* impacts of this change ;)\r\n",
    "head_branch": "spancontext_into_span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe144ee515ce6a4e743",
    "number": 1189,
    "body": "# Description\r\n\r\nRight now, you can configure OTel to trace with custom `Resource` definitions, and (soon) will be able to trace with custom `IdsGenerator` implementations.\r\n\r\nIn addition to the defaults provided by the OTel SDK, this PR hopes to add a format to include **SDK Extensions**. SDK Extensions are similar to `instrumentation/` packages in that they are optional packages that a customer can pull in to provide additional functionality. The `sdk-extension/` packages would each individually provide a set of pre-built interface implementations to run OTel \"differently\". An OTel which runs \"differently\" can now support tracing in a necessarily specific way, which if traced under the default implementations would provide traces that were undesirable.\r\n\r\nSpecifically, this is a solution for services like the AWS X-Ray backend service, which requires IDs to be generated in the [AWS X-Ray Trace ID Format](https://docs.aws.amazon.com/xray/latest/devguide/xray-api-sendingdata.html#xray-api-traceids). Having this `opentelemetry-sdk-extension-aws` package makes it easy to import the necessary `AWSXrayIdsGenerator` class and create a `TracerProvider` which sends IDs in the correct format right at the start. (Which will be important for downstream propagation and finally arrival at the X-Ray backend service).\r\n\r\nThe goal is to be able to do something like the following:\r\n```\r\npip install opentelemetry-sdk-extension-aws\r\n```\r\nand subsequently,\r\n```\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.sdk.extension.aws.trace import AWSXrayIdsGenerator\r\n\r\ntrace.set_tracer_provider(TracerProvider(ids_generator=AWSXrayIdsGenerator()))\r\ntracer = trace.get_tracer(__name__)\r\n\r\nif __name__ == '__main__':\r\n    with tracer.start_span('my_first_span', kind=SpanKind.SERVER):\r\n        with tracer.start_span('my_second_span', parent=trace.get_current_span(), kind=SpanKind.SERVER):\r\n            print('Hello, world!')\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nThe following tests also implicity test that importing an `sdk-extension/` package works properly.\r\n- [x] Added unit test to test that generated of AWS X-Ray IDs is valid\r\n- [x] Added unit test to test that generated AWS X-Ray IDs correctly use 24 bits to record the time the trace ID was created (which must be within the last 30 days)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sdk-extension-aws",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe244ee515ce6a4e744",
    "number": 1188,
    "body": "# Description\r\n\r\n`Span` now throws a `TypeError` in the constructor, and all instances of Span must now be instantiated by `_Span` constructor. The was implemented by overriding the `__new__` constructor in the `Span` class.\r\n\r\nFixes [#1000](https://github.com/open-telemetry/opentelemetry-python/issues/1000)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit test to verify an exception will be thrown when the constructor is called without the additional argument\r\n- [X] Tox suite to check no existing functionality has been broken\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n\r\n",
    "head_branch": "1000-private-sdk-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Protect access to Span implementation (#1188)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe244ee515ce6a4e745",
    "number": 1187,
    "body": "# Description\r\n\r\nUse right case in example.\r\n\r\nFixes #1186\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)",
    "head_branch": "issue_1186",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use right case (#1187)\n\nFixes #1186"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe344ee515ce6a4e746",
    "number": 1185,
    "body": "# Description\r\n\r\nMove a test that imports SDK from the API.\r\n\r\nFixes #1184\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan the API and SDK tests.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated",
    "head_branch": "issue_1184",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move test that imports SDK from the API (#1185)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe444ee515ce6a4e747",
    "number": 1183,
    "body": "The tox targets were updated a while ago, but the contributing doc was not.",
    "head_branch": "codeboten/update-contrib",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "docs: updating tox target in contributing doc (#1183)\n\nThe tox targets were updated a while ago, but the\r\ncontributing doc was not."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe544ee515ce6a4e748",
    "number": 1179,
    "body": "# Description\r\n\r\nWe've been using GitHub actions for some time, they seem to work well, we don't need CircleCI anymore.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "rm-circleci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "removing the circleci config (#1179)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe644ee515ce6a4e749",
    "number": 1178,
    "body": "# Description\r\n\r\nOTEL_PYTHON_TORNADO_TRACED_REQUEST_ATTRS env var can be set to a command\r\nseparated list of attributes names that will be extracted from Tornado's\r\nrequest object and set as attributes on spans. \r\n\r\nAlso fixes #1176 \r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit Tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "tornado-request-attrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      " Added ability to extract span attributes from tornado request objects (#1178)\n\nOTEL_PYTHON_TONADO_TRACED_REQUEST_ATTRS env var can be set to a command\r\nseparated list of attributes names that will be extracted from Tornado's\r\nrequest object and set as attributes on spans.\r\n\r\nCo-authored-by: (Eliseo) Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe744ee515ce6a4e74a",
    "number": 1171,
    "body": "# Description\r\n\r\nRework the gRPC server interceptor to follow current practices with gRPC, and to fix several problems:\r\n\r\n* The previous method would wrap the `grpc.Server()` improperly in order to add its interceptor, preventing interceptors from be added *after* the OpenTelemetry interceptor.  I've removed the wrapper entirely, as it's not necessary, and made the Interceptor be part of the public API, to allow users to instantiate this and insert it into the interceptor chain anywhere they want.  There is still the `instrument` and `uninstrument` methods to basically monkeypatch the gRPC library, should you choose to use that, but these are reworked to provide the Interceptor in a more modern way.\r\n\r\n* The wrapper around the gRPC `Context` was incompletely implemented, probably before new features were added.\r\n\r\n* The method used to try to catch errors in RPCs was incomplete - interceptors cannot inspect the results of a call, so we now use our Context wrapper to obtain response codes and messages.  We do still catch non-abort exceptions (i.e. those which are not an empty `Exception()`) in the Interceptor, and provide any message via the span.\r\n\r\nNew features:\r\n\r\n* There are now additional data added to the span for each call: status code and message, peer network info, and user-agent.\r\n* Reporting on bare (i.e. non gRPC `abort()`) exceptions\r\n* Less code :)\r\n\r\nFixes #1112 \r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\nThis change is slightly breaking, depending on how you used the library.  If you follow the minimalistic example in the docs, nothing will have changed, but if you implemented like in the sample application, there will be changes required.\r\n\r\n# How Has This Been Tested?\r\n\r\nI've used the standard tests provided, and implemented a detailed application with this library as it is now.  I could probably add some tests for the new data in the spans, but I'm not very familiar with that part of OpenTelemetry.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated\r\n\r\nI'm not sure which changelog needs to be updated, or what to put in it.",
    "head_branch": "grpc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rewrite gRPC server interceptor (#1171)\n\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe844ee515ce6a4e74b",
    "number": 1170,
    "body": "The current docstrings were not factually correct, and different\r\nwording provided better clarity:\r\n\r\n- start_as_current_span shoudl return the current span back\r\n  to the previous current span in the context, rather than the\r\n  parent span. This is the behavior of the SDK.\r\n- There is not \"tracer context\", simply the \"context\" object. So\r\n  renaming references there.\r\n\r\nSee https://github.com/open-telemetry/opentelemetry-specification/pull/1011#discussion_r494904498\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/clarify-trace-api-documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: updating trace API docstrings (#1170)\n\nThe current docstrings were not factually correct, and different\r\nwording provided better clarity:\r\n\r\n- start_as_current_span shoudl return the current span back\r\n  to the previous current span in the context, rather than the\r\n  parent span. This is the behavior of the SDK.\r\n- There is not \"tracer context\", simply the \"context\" object. So\r\n  renaming references there."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe844ee515ce6a4e74c",
    "number": 1169,
    "body": "test PR ",
    "head_branch": "test-branch-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fe944ee515ce6a4e74d",
    "number": 1168,
    "body": "\r\n\r\n# Description\r\n\r\nThis fixes an nondeterministic test in Zipkin exporter related to comparing stringified JSON documents.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Fixed Unit Test\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-json-comparison-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Zipkin: More deterministic unit test for comparing zipkin annotations (#1168)\n\nZipkin annotation values are strings containing JSON documents. We\r\ncannot have deterministic ordering of event attributes as they may come\r\nin any order and python versions older than 3.7 don't have ordered\r\ndicts. We extract the annotations from exported spans, parse the JSON\r\ndocuments into Python dicts and then compare them."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fea44ee515ce6a4e74e",
    "number": 1165,
    "body": "# Description\r\n\r\nThis PR adds coding samples in the documentation highlighting context behaviour.\r\n\r\nFixes [#1140](https://github.com/open-telemetry/opentelemetry-python/issues/1140)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Verified examples could be run on Python 3.5\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "1140-span-coding-samples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add coding examples for context (#1165)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200feb44ee515ce6a4e74f",
    "number": 1164,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/issues/1057",
    "head_branch": "flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use is_recording flag in flask, django, tornado, boto, botocore instrumentations (#1164)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fec44ee515ce6a4e750",
    "number": 1163,
    "body": "# Description\r\n\r\nPrepends Django Instrumentation in the middleware (instead of append) so that middleware methods get instrumented, included as spans of the original request and improving overall latency.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/659\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1160\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTested on production, mysql queries in the middleware are now included as spans of the trace, instead of new/separate traces, latency is more accurate.",
    "head_branch": "prepend-telemetry-middleware",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation/django: prepend opentelemetry middleware instead of append (#1163)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fed44ee515ce6a4e751",
    "number": 1162,
    "body": "# Description\r\n\r\nThis updates the tracer context manager to record exceptions automatically on \r\nexit if an exception was raised within the context manager's context.\r\n\r\nThis should be helpful in some situations when manually instrumenting apps. For example, \r\nit can help record any uncaught/unexpected exceptions which one would expect from a tracing\r\nsystem. This can also be helpful in simplifying auto-instrumentations. I think this should be the\r\ndefault behavior but happy to hear other thoughts. Otel spec does not say anything about this and leaves span creation/activation to each language implementation. Both OpenTracing and OpenCensus did it AFAICT:\r\n\r\n- https://github.com/census-instrumentation/opencensus-python/blob/master/opencensus/trace/span.py#L382-L391\r\n- https://github.com/opentracing/opentracing-python/blob/master/opentracing/scope.py#L79-L83\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit Test\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "record-exceptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Record exception on context manager exit (#1162)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fee44ee515ce6a4e752",
    "number": 1161,
    "body": "# Description\r\n\r\nUpdated zipkin exporter to correctly translate OTLP events as specified by the OpenTelemetry specification: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/sdk_exporters/zipkin.md#events\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit Tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-zipkin-event-translation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Zipkin: Fix OTLP events to Zipkin annotations translation (#1161)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fee44ee515ce6a4e753",
    "number": 1158,
    "body": "# Description\r\n\r\nOTEL_PYTHON_FALCON_TRACED_REQUEST_ATTRS env var can be set to a command\r\nseparated list of attributes names that will be extracted from Falcon's\r\nrequest object and set as attributes on spans.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit test\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "falcon-request-attrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added ability to extract span attributes from falcon request objects. (#1158)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fef44ee515ce6a4e754",
    "number": 1154,
    "body": "\r\n# Description\r\n\r\nOTEL_PYTHON_DJANGO_TRACED_REQUEST_ATTRS env var can be set to a command\r\nseparated list of attributes names that will be extracted from Django's\r\nrequest object and set as attributes on spans. \r\n\r\nThis is ported from OpenTracing Django instrumentation to make the upgrade path smoother for OpenTracing users. (github.com/opentracing-contrib/python-django)\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit Tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "django-request-attrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added ability to extract span attributes from django request objects. (#1154)\n\nOTEL_PYTHON_DJANGO_TRACED_REQUEST_ATTRS env var can be set to a command\r\nseparated list of attributes names that will be extracted from Django's\r\nrequest object and set as attributes on spans."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff044ee515ce6a4e755",
    "number": 1153,
    "body": "# Description\r\n\r\nThis PR moves in the direction of supporting custom forms of trace & span ID generation. The [opentelemtry-java SDK](https://github.com/open-telemetry/opentelemetry-java/blob/485cc52c6ff1bb3fa12cd950d6eb97d3ceae6e41/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/IdsGenerator.java) and [opentelemetry-js SDK](https://github.com/open-telemetry/opentelemetry-js/blob/b7d6e74c5bec6a24f5d617d31402ea95c54f126f/packages/opentelemetry-core/src/trace/IdGenerator.ts) do this as well.\r\n\r\nFixes #1152 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI was able to setup a simple small script that output the traces to the console as expected:\r\n\r\n```\r\n#!/usr/bin/env python3\r\n\r\n# OTel Tracing\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\nfrom opentelemetry.trace import SpanKind\r\nfrom opentelemetry.sdk.trace.export import ConsoleSpanExporter, SimpleExportSpanProcessor\r\n\r\n\r\nif __name__ == '__main__':\r\n    # Console Exporter Setup\r\n    trace.set_tracer_provider(TracerProvider())\r\n\r\n    trace.get_tracer_provider().add_span_processor(\r\n        SimpleExportSpanProcessor(ConsoleSpanExporter())\r\n    )\r\n\r\n    # Final Tracer Setup\r\n    tracer = trace.get_tracer(__name__)\r\n\r\n    with tracer.start_span('my_first_span', kind= SpanKind.SERVER):\r\n        with tracer.start_span('my_second_span', parent=trace.get_current_span(), kind= SpanKind.SERVER):\r\n            print('Hello, world!')\r\n```\r\n\r\nto get output:\r\n\r\n```\r\nHello, world!\r\n{\r\n    \"name\": \"my_second_span\",\r\n    \"context\": {\r\n        \"trace_id\": \"0xdb6a810342a9a20651eb96829f0fa3f4\",\r\n        \"span_id\": \"0xa986b94247d4bc48\",\r\n        \"trace_state\": \"{}\"\r\n    },\r\n    \"kind\": \"SpanKind.SERVER\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2020-09-24T04:05:04.528721Z\",\r\n    \"end_time\": \"2020-09-24T04:05:04.528738Z\",\r\n    \"status\": {\r\n        \"canonical_code\": \"OK\"\r\n    },\r\n    \"attributes\": {},\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"telemetry.sdk.language\": \"python\",\r\n        \"telemetry.sdk.name\": \"opentelemetry\",\r\n        \"telemetry.sdk.version\": \"0.14.dev0\"\r\n    }\r\n}\r\n{\r\n    \"name\": \"my_first_span\",\r\n    \"context\": {\r\n        \"trace_id\": \"0x85354f7a3a0f9e091d54b8d1560d32c0\",\r\n        \"span_id\": \"0x1a39976cb621bcbb\",\r\n        \"trace_state\": \"{}\"\r\n    },\r\n    \"kind\": \"SpanKind.SERVER\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2020-09-24T04:05:04.528678Z\",\r\n    \"end_time\": \"2020-09-24T04:05:04.529366Z\",\r\n    \"status\": {\r\n        \"canonical_code\": \"OK\"\r\n    },\r\n    \"attributes\": {},\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"telemetry.sdk.language\": \"python\",\r\n        \"telemetry.sdk.name\": \"opentelemetry\",\r\n        \"telemetry.sdk.version\": \"0.14.dev0\"\r\n    }\r\n}\r\n```\r\n\r\nHowever, I did not think it was necessary to include tests for the `RandomIdsGenerator.py` file since it is just doing the same thing the SDK was always doing before and the method implementations are just 2 lines overall.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [ ] Unit tests have been added~ No unit tests included for this change\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "provider-ids-generator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement IdsGenerator interface for TracerProvider and include default RandomIdsGenerator (#1153)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff144ee515ce6a4e756",
    "number": 1151,
    "body": "# Description\r\n\r\nZipkin exporter truncates tag values to a maximum length of 128\r\ncharacters. This commit makes this value configurable while keeping\r\n128 as the default value.\r\n\r\nThe change required to move some functions to the zipkin exporter class. This has a nice side-effect of the zipkin exporter becoming a bit more customizable by sub-classing it. It can especially be very useful for vendor distributions.  \r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added unit test\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "configurable-zipkin-tag-size",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make zipkin tag value length configurable (#1151)\n\nZipkin exporter truncates tag values to a maximum length of 128\r\ncharacters. This commit makes this value configurable while keeping\r\n128 as the default value."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff244ee515ce6a4e757",
    "number": 1149,
    "body": "# Description\r\n\r\nZipkin exporter translation was setting `otel.status_code` attribute as\r\nan integer which resulted in Otel collector rejecting the spans. This\r\ncommit casts the value to a string.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manually\r\n- [x] Manually\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-zipkin-exporter-translation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "exporter/zipkin: Fix zipkin exporter translation bug (#1149)\n\nZipkin exporter translation was setting `otel.status_code` attribute as\r\nan integer which resulted in Otel collector rejecting the spans. This\r\ncommit casts the value to a string."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff344ee515ce6a4e758",
    "number": 1148,
    "body": "# Description\r\n\r\nB3 propagator was crashing as it could not find `.context` and `.parent` attributes when passed a context with a DefaultSpan instance. I ran into it while trying to instrument a demo grpc service with opentelemetry. I think grpc instrumentation might probably have another issue where it extracts context from incoming request and uses that as the parent for an outgoing request missing the spans in between. I plan to look into that as well later.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manual test\r\n- [x] Added unit test\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "b3-propagation-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "exporter/b3: Fix B3 propagator to not crash work with DefaultSpan (#1148)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff344ee515ce6a4e759",
    "number": 1146,
    "body": "# Description\r\nAs per the spec change https://github.com/open-telemetry/opentelemetry-specification/pull/875, the parent must always be passed via a Context.\r\n\r\nFixes #1139 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "parent-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Parent is now always passed in via Context, intead of Span or SpanContext (#1146)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff444ee515ce6a4e75a",
    "number": 1145,
    "body": "# Description\r\n\r\nReadTheDocs builds do not currently install the OTel packages in a virtualenv, but just update `sys.path` to include the modules. Autodoc imports the modules, which runs this code, but since the package isn't installed, `pkg_resources.get_distribution()` fails.\r\n\r\nThis change has `opentelemetry-api` and `opentelemetry-sdk` installed in the virtualenv to fix this.\r\n\r\nFixes #1144\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan the commands from https://readthedocs.org/projects/opentelemetry-python/builds/11937984/ and the issue is resolved.\r\n```console\r\n$ python3 -m venv venv-docs && source venv-docs/bin/activate\r\n$ python -m pip install --upgrade --no-cache-dir pip\r\n$ python -m pip install --upgrade --no-cache-dir Pygments==2.3.1 setuptools==41.0.1 docutils==0.14 mock==1.0.1 pillow==5\r\n.4.1 'alabaster>=0.7,<0.8,!=0.7.5' commonmark==0.8.1 recommonmark==0.5.0 'sphinx<2' 'sphinx-rtd-theme<0.5' 'readthedocs-sphinx-ext<1.1'\r\n$ python -m pip install --exists-action=w --no-cache-dir -r docs-requirements.txt\r\n$ sphinx-build -T -E -b html -d _build/doctrees-readthedocs -D language=en . _build/html\r\n```\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project",
    "head_branch": "fix-docs-1144",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ReadTheDocs and pkg_resources fix (#1145)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff544ee515ce6a4e75b",
    "number": 1143,
    "body": "# Description\r\n\r\nUpdating the version of OTLP supported to v0.5.0\r\n\r\nFixes #1071 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otlp-v0.5.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTLP v0.5.0 (#1143)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff644ee515ce6a4e75c",
    "number": 1142,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/issues/1057",
    "head_branch": "asgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use is_recording flag in asgi, pyramid, aiohttp instrumentation (#1142)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff744ee515ce6a4e75d",
    "number": 1141,
    "body": "# Description\r\n\r\nThis PR adds gzip compression to OTLP exporter, closing #1107.\r\n\r\nThe changes have been made following these specifications:\r\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/protocol/exporter.md#opentelemetry-protocol-exporter\r\n\r\nFixes #1107\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan tests for OTLP Exporter\r\n`tox -e py38-test-exporter-otlp`\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "gzip-compression-feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Issue #1107] Add gzip compression support for OTLP exporter (#1141)\n\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff844ee515ce6a4e75e",
    "number": 1138,
    "body": "# Description\r\n\r\nBootstrap command had wrong library: instrumentation mapping. This commit fixes it.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-boostrap-command-package-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed typo in boostrap command to install the correct package (#1138)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff844ee515ce6a4e75f",
    "number": 1136,
    "body": "# Description\r\n\r\nAdding a parameter to SDK Span constructor. An additional argument is now required to call the Span constructor, else an Exception is raised. This is to discourage callers from creating Spans directly.\r\n\r\nFixes [#1000](https://github.com/open-telemetry/opentelemetry-python/issues/1000)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit test to verify an exception will be thrown when the constructor is called without the additional argument\r\n- [X] Tox suite to check no existing functionality has been broken\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "1000-disallow-direct-span-creation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ff944ee515ce6a4e760",
    "number": 1135,
    "body": "# Description\r\n\r\n- Adds context propagation to celery instrumentation. \r\n- Updated celery span operation names to include task type and task name.\r\n\r\nfixes #862 \r\nfixes #876\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manual tests\r\n- [x] Added unit test\r\n- [x] Updated docker tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "celery-propagation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added context propagation support to celery instrumentation (#1135)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ffa44ee515ce6a4e761",
    "number": 1134,
    "body": "# Description\r\n\r\nThis PR makes instances of SpanContext Immutable to match the OpenTelemetry specifications. \r\n\r\nFixes #: https://github.com/open-telemetry/opentelemetry-python/issues/1002\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n[Unit tests](https://github.com/open-o11y/opentelemetry-python/compare/master...open-o11y:1002-make-spancontext-immutable?expand=1#diff-0924a59286313e337f50e00112a27df8) have been added to test the following behavior:\r\n\r\n* instantiating a SpanContext returns an object with the correct values set\r\n* trying to change an attribute throws TypeError\r\n* after trying to change an attribute, the object maintains its original values\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated \r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n\r\n_Note: documentation did not need updating as SpanContext is already assumed to be Immutable (from the specifications)._\r\n",
    "head_branch": "1002-make-spancontext-immutable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make Instances of SpanContext Immutable (#1134)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ffb44ee515ce6a4e762",
    "number": 1132,
    "body": "# Description\r\n\r\nThis is a replacement PR for https://github.com/open-telemetry/opentelemetry-python/pull/1015 as the CLA check is still failing after a month.\r\n\r\nFixes #1012 ",
    "head_branch": "fix-1012",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation/pymongo: Cast PyMongo commands as strings (#1132)\n\nReplacement PR for #1015"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ffc44ee515ce6a4e763",
    "number": 1131,
    "body": "Updating version to 0.14dev0",
    "head_branch": "v0.13b0-master-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1131)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ffd44ee515ce6a4e764",
    "number": 1130,
    "body": "Prepare release ",
    "head_branch": "release/0.13b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "release: updating changelogs and version to 0.13b0  (#1130)\n\n* updating changelogs and version to 0.13b0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ffe44ee515ce6a4e765",
    "number": 1129,
    "body": "Preparing 0.13b0 release",
    "head_branch": "release/0.13b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "release: updating changelogs and version to 0.13b0 (#1129)\n\n* updating changelogs and version to 0.13b0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200ffe44ee515ce6a4e766",
    "number": 1128,
    "body": "# Description\r\n\r\nUpdate to #1115 since there was another renaming in the spec open-telemetry/opentelemetry-specification#956\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "sampling-result-names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update sampling result names (#1128)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66200fff44ee515ce6a4e767",
    "number": 1126,
    "body": "# Description\r\n\r\nCurrently, when a change is pushed to the repo and a pull request is created, the tests are run twice because of the pull request and because of the push to the branch. This change fixes this by only triggering on push to master, and on all pull requests.\r\n\r\n## Type of change\r\n\r\n- [x] Build infrastructure\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "push-only-maaster",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: only trigger tests on push to master (#1126)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100044ee515ce6a4e768",
    "number": 1125,
    "body": "Preparing 0.13b0 release",
    "head_branch": "release/0.13b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100144ee515ce6a4e769",
    "number": 1124,
    "body": "# Description\r\n\r\nThis PR adds status to the tags for the Zipkin Exporter, closing open-telemetry#1111.\r\n\r\nThe changes have been made following these specifications:\r\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/sdk_exporters/zipkin.md#status\r\n\r\nFixes #1111 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan test file for Zipkin Exporter\r\n```tox -e py38-test-exporter-zipkin```\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "zipkin-exporter-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "exporter/zipkin: Add status to the tags for the Zipkin Exporter (#1124)\n\n* [Issue #1111] Add span status to tags for Zipkin exporter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100244ee515ce6a4e76a",
    "number": 1123,
    "body": "Fixes #1058\r\n\r\n# Description\r\n\r\nAdd support for `OTEL_PROPAGATORS`\r\n\r\nFixes #1058\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] `test_propagators`\r\n\r\n# Checklist:\r\n\r\n- [X Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "issue_1058",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTEL_PROPAGATORS (#1123)\n\nFixes #1058"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100344ee515ce6a4e76b",
    "number": 1122,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/issues/1057",
    "head_branch": "record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation/wsgi: Use is_recording flag in wsgi instrumentation (#1122)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100444ee515ce6a4e76c",
    "number": 1121,
    "body": "# Description\r\n\r\nType hints were added to all functions in the OTLP exporter.\r\n\r\nFixes [#1009](https://github.com/open-telemetry/opentelemetry-python/issues/1009)\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan mypy against the changed source files with the following command:\r\n\r\n`MYPYPATH=\"opentelemetry-api/src:opentelemetry-proto/src:opentelemetry-sdk/src:exporter/opentelemetry-exporter-otlp/src\" mypy --namespace-packages --config=mypy-relaxed.ini --follow-imports=silent exporter/opentelemetry-exporter-otlp/src/opentelemetry/exporter/otlp/`\r\n\r\nNo _new_ errors were produced.\r\n\r\nAlso passes tox tests ran with `py3{5,6,7,8}-test-exporter-otlp`\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n",
    "head_branch": "1009-otlp-exporter-type-hints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add type hints to OTLP exporter (#1121)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100444ee515ce6a4e76d",
    "number": 1120,
    "body": "Fixes #1105\r\n\r\n# Description\r\n\r\nAdd support for `OTEL_BSP_*` environment variables\r\n\r\nFixes #1105\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit test case.\r\n\r\n- [X] `test_batch_span_processor_environment_variables`\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1105",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for OTEL_BSP_* environment variables (#1120)\n\nFixes #1105"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100544ee515ce6a4e76e",
    "number": 1119,
    "body": "# Description\r\n\r\nThe configuration object currently stores `\"2\"` as `\"2.0\"`. This change makes it store that value as `\"2\"`.\r\n\r\nFixes #1118\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated test to specifically test this change.\r\n\r\n- [X] `test_integer`\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1118",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Store ints as ints in the configuration object (#1119)\n\nFixes #1118\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100644ee515ce6a4e76f",
    "number": 1116,
    "body": "Adding the ability to collect metrics from instrumentation, starting with the `requests` instrumentation.\r\n\r\nSemantic conventions for metrics can be found [here](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/metrics/semantic_conventions/http-metrics.md)\r\n\r\nThis is similar to what we did for [grpc](https://github.com/open-telemetry/opentelemetry-python/blob/master/instrumentation/opentelemetry-instrumentation-grpc/src/opentelemetry/instrumentation/grpc/_client.py#L90) but abstracted in a way where we can extend this to all instrumentations.\r\n\r\nThe `meter` can be obtained by `RequestsInstrumentor().meter` and users can do what they want with the metrics.\r\n\r\nCurrently, there is only `HTTPMetricRecorder` which takes in a `HTTPMetricType` to indicate what kind of metrics it will generate. As more metric types and semantic conventions are defined, we can add more `MetricRecorder` s.",
    "head_branch": "metric",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding metric collection as part of instrumentations - Requests (#1116)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100744ee515ce6a4e770",
    "number": 1115,
    "body": "# Description\r\n\r\nThe names for the sampling result names need updating after open-telemetry/opentelemetry-specification#938\r\n\r\nspec: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/sdk.md#sampler\r\n\r\n- [x] Changelogs have been updated",
    "head_branch": "sampling-result-names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update names of decisions in SamplingResult (#1115)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100844ee515ce6a4e771",
    "number": 1114,
    "body": "# Description\r\n\r\nI've added possibility to configure **JaegerSpanExporter** by Environment Variables defined by [OTEL_SPEC](https://github.com/open-telemetry/opentelemetry-python/issues/1056)\r\n\r\nFixes # (https://github.com/open-telemetry/opentelemetry-python/issues/1056)\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- I've used the **jaeger_explorter_example.py** script to check if OTEL_ENVS are properly used.\r\n- Updated **test_jaeger_exporter.py**\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Change logs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "rydzykje-support_env_var_conf_jaeger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support Environment Variables for JaegerSpanExporter configuration (#1114)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100944ee515ce6a4e772",
    "number": 1113,
    "body": "# Description\r\n\r\nFix gRPC tutorial.\r\n\r\nAs far as I can tell, the code in the tutorial doesn't actually work without this line.\r\n\r\n## Type of change\r\n\r\n- [x ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [ na] Followed the style guidelines of this project\r\n- [? ] Changelogs have been updated\r\n- [ na] Unit tests have been added\r\n- [ x] Documentation has been updated\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix missing step in docs (#1113)\n\nAs far as I can tell, the tutorial in the docs doesn't actually work\r\nwithout this line."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100944ee515ce6a4e773",
    "number": 1101,
    "body": "# Description\r\n\r\nAdds support for Env variables in OTLP trace and metrics exporter. Implemented subset of variables from [exporter spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/protocol/exporter.md#configuration-options), other variables will be implemented as the usecases are added to otlp exporter.\r\n\r\nFixes #1004 (issue)\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Write unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue-1004",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Env variables in OTLP exporter (#1101)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100a44ee515ce6a4e774",
    "number": 1100,
    "body": "# Description\r\n\r\nThe failing test was introduced I believe by a change in behaviour noted in this issue: https://github.com/spulec/moto/issues/3292. The solution is to set a region in the create_bucket call.\r\n\r\nFixes #1088\r\n\r\n## Type of change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] botocore tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "fix-failing-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation/botocore: fix failing test (#1100)\n\nThe failing test was introduced I believe by a change in behaviour noted in this issue: https://github.com/spulec/moto/issues/3292. The solution is to set a region in the create_bucket call.\r\n\r\nFixes #1088"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100b44ee515ce6a4e775",
    "number": 1099,
    "body": "# Description\r\n\r\nAs discussed at the SIG meeting on Sep 10, it was agreed that dropping support for 3.4 would be better done before we reach GA. This has been previously discussed in this issue here: https://github.com/open-telemetry/opentelemetry-python/issues/25. Many instrumentations that we provide support for only support Python 3.5+ already. Python 3.4 was end of lifed over a year ago (Mar 2019)\r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "drop-3.4-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "dropping support for python 3.4 (#1099)\n\n* dropping support for python 3.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100c44ee515ce6a4e776",
    "number": 1098,
    "body": "Fixes [https://github.com/open-telemetry/opentelemetry-python/issues/1092](https://github.com/open-telemetry/opentelemetry-python/issues/1092)",
    "head_branch": "jaeger_report_instrumentation_info",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Jaeger exporter report instrumentation info (#1098)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100d44ee515ce6a4e777",
    "number": 1097,
    "body": "Fixes [https://github.com/open-telemetry/opentelemetry-python/issues/1093](https://github.com/open-telemetry/opentelemetry-python/issues/1093)",
    "head_branch": "zipkin_report_instrumentation_info",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Zipkin exporter report instrumentation info (#1097)\n\n* Zipkin exporter report instrumentation info"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100e44ee515ce6a4e778",
    "number": 1096,
    "body": "# Description\r\n\r\nMerge in resources detected from `OTELResourceDetector` (which parses `OTEL_RESOURCE_ATTRIBUTES`) when a resource is created. [Here is the relevant section in the spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/resource/sdk.md#specifying-resource-information-via-an-environment-variable). I considered doing this in the module level declaration of `_DEFAULT_RESOURCE`, but then I'm not sure how to test this with mocking since it runs at import time.\r\n\r\nFixes #1063\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] updated `test_resources.py`\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "detect-from-env",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge OTELResourceDetector result when creating resources (#1096)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100e44ee515ce6a4e779",
    "number": 1095,
    "body": "Fixes #1094\r\n",
    "head_branch": "1094",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "exporter/otlp: Add instrumentation info to exported spans (#1095)\n\nFixes #1094"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620100f44ee515ce6a4e77a",
    "number": 1091,
    "body": "# Description\r\n\r\nThe `include` line in `setup.cfg` was causing only packages *under* `opentelemetry.sdk` and `opentelemetry` to be included, missing the `opentelemetry.sdk` package itself (with `version.py` and `__init__.py` files). I don't think we need the `include` at all, so removed. It is not in any of the other packages' setup files.\r\n\r\nFixes #1078\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nInstalling the packages (regular install, not editable) before and after into separate venvs and comparing the site-packages\r\n```bash\r\nrm -rf venv-before\r\npython3 -m venv venv-before\r\nsource venv-before/bin/activate\r\npip install file:./opentelemetry-api file:./opentelemetry-sdk\r\ntree -I *.pyc -I __pycache__ venv-before/lib/python3.8/site-packages/opentelemetry\r\n```\r\n\r\nBefore:\r\n```bash\r\nProcessing ./opentelemetry-api\r\nProcessing ./opentelemetry-sdk\r\nUsing legacy setup.py install for opentelemetry-api, since package 'wheel' is not installed.\r\nUsing legacy setup.py install for opentelemetry-sdk, since package 'wheel' is not installed.\r\nInstalling collected packages: opentelemetry-api, opentelemetry-sdk\r\n    Running setup.py install for opentelemetry-api ... done\r\n    Running setup.py install for opentelemetry-sdk ... done\r\nSuccessfully installed opentelemetry-api-0.13.dev0 opentelemetry-sdk-0.13.dev0\r\nvenv-before/lib/python3.8/site-packages/opentelemetry\r\n├── baggage\r\n│   ├── __init__.py\r\n│   └── propagation\r\n│       └── __init__.py\r\n├── configuration\r\n│   ├── __init__.py\r\n│   └── py.typed\r\n├── context\r\n│   ├── aiocontextvarsfix.py\r\n│   ├── context.py\r\n│   ├── contextvars_context.py\r\n│   ├── __init__.py\r\n│   ├── py.typed\r\n│   └── threadlocal_context.py\r\n├── distributedcontext\r\n│   └── py.typed\r\n├── metrics\r\n│   ├── __init__.py\r\n│   └── py.typed\r\n├── propagators\r\n│   ├── composite.py\r\n│   └── __init__.py\r\n├── sdk\r\n│   ├── metrics\r\n│   │   ├── export\r\n│   │   │   ├── aggregate.py\r\n│   │   │   ├── batcher.py\r\n│   │   │   ├── controller.py\r\n│   │   │   ├── __init__.py\r\n│   │   │   └── in_memory_metrics_exporter.py\r\n│   │   ├── __init__.py\r\n│   │   └── view.py\r\n│   ├── resources\r\n│   │   └── __init__.py\r\n│   ├── trace\r\n│   │   ├── export\r\n│   │   │   ├── __init__.py\r\n│   │   │   └── in_memory_span_exporter.py\r\n│   │   ├── __init__.py\r\n│   │   ├── propagation\r\n│   │   │   ├── b3_format.py\r\n│   │   │   └── __init__.py\r\n│   │   └── sampling.py\r\n│   └── util\r\n│       ├── __init__.py\r\n│       └── instrumentation.py\r\n├── trace\r\n│   ├── __init__.py\r\n│   ├── propagation\r\n│   │   ├── __init__.py\r\n│   │   ├── textmap.py\r\n│   │   └── tracecontext.py\r\n│   ├── py.typed\r\n│   ├── span.py\r\n│   └── status.py\r\n└── util\r\n    ├── __init__.py\r\n    ├── py.typed\r\n    └── types.py\r\n\r\n18 directories, 41 files\r\n```\r\n\r\nAfter:\r\n```bash\r\nProcessing ./opentelemetry-api\r\nProcessing ./opentelemetry-sdk\r\nUsing legacy setup.py install for opentelemetry-api, since package 'wheel' is not installed.\r\nUsing legacy setup.py install for opentelemetry-sdk, since package 'wheel' is not installed.\r\nInstalling collected packages: opentelemetry-api, opentelemetry-sdk\r\n    Running setup.py install for opentelemetry-api ... done\r\n    Running setup.py install for opentelemetry-sdk ... done\r\nSuccessfully installed opentelemetry-api-0.13.dev0 opentelemetry-sdk-0.13.dev0\r\nvenv-after/lib/python3.8/site-packages/opentelemetry\r\n├── baggage\r\n│   ├── __init__.py\r\n│   └── propagation\r\n│       └── __init__.py\r\n├── configuration\r\n│   ├── __init__.py\r\n│   └── py.typed\r\n├── context\r\n│   ├── aiocontextvarsfix.py\r\n│   ├── context.py\r\n│   ├── contextvars_context.py\r\n│   ├── __init__.py\r\n│   ├── py.typed\r\n│   └── threadlocal_context.py\r\n├── distributedcontext\r\n│   └── py.typed\r\n├── __init__.pyi\r\n├── metrics\r\n│   ├── __init__.py\r\n│   └── py.typed\r\n├── propagators\r\n│   ├── composite.py\r\n│   └── __init__.py\r\n├── sdk\r\n│   ├── __init__.py\r\n│   ├── metrics\r\n│   │   ├── export\r\n│   │   │   ├── aggregate.py\r\n│   │   │   ├── batcher.py\r\n│   │   │   ├── controller.py\r\n│   │   │   ├── __init__.py\r\n│   │   │   └── in_memory_metrics_exporter.py\r\n│   │   ├── __init__.py\r\n│   │   └── view.py\r\n│   ├── resources\r\n│   │   └── __init__.py\r\n│   ├── trace\r\n│   │   ├── export\r\n│   │   │   ├── __init__.py\r\n│   │   │   └── in_memory_span_exporter.py\r\n│   │   ├── __init__.py\r\n│   │   ├── propagation\r\n│   │   │   ├── b3_format.py\r\n│   │   │   └── __init__.py\r\n│   │   └── sampling.py\r\n│   ├── util\r\n│   │   ├── __init__.py\r\n│   │   └── instrumentation.py\r\n│   └── version.py\r\n├── trace\r\n│   ├── __init__.py\r\n│   ├── propagation\r\n│   │   ├── __init__.py\r\n│   │   ├── textmap.py\r\n│   │   └── tracecontext.py\r\n│   ├── py.typed\r\n│   ├── span.py\r\n│   └── status.py\r\n├── util\r\n│   ├── __init__.py\r\n│   ├── py.typed\r\n│   └── types.py\r\n└── version.py\r\n\r\n18 directories, 45 files\r\n```\r\n\r\nDiff of two venvs with `diff --color <(find venv-before/lib/python3.8/site-packages/ -type f -not -name \"*.pyc\" -printf \"%P\\n\" | sort) <(find venv-after/lib/python3.8/site-packages/ -type f -not -name \"*.pyc\" -printf \"%P\\n\" | sort)`\r\n```diff\r\n20a21\r\n> opentelemetry/__init__.pyi\r\n32a34\r\n> opentelemetry/sdk/__init__.py\r\n48a51\r\n> opentelemetry/sdk/version.py\r\n58a62\r\n> opentelemetry/version.py\r\n```\r\n\r\nSo those 4 extra files were included after this change.\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sdk-init-1078",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix sdk/__init__.py not being included (#1091)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101044ee515ce6a4e77b",
    "number": 1090,
    "body": "# Description\r\n\r\n<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->\r\n\r\nHola! :wave:\r\n\r\n**Motivation**\r\n\r\nI was working through adding the ASGI `opentelemetry-python` instrumentation to `awesome-asgi` (see https://github.com/florimondmanca/awesome-asgi/pull/47), and it popped out to me that the [docs page](https://opentelemetry-python.readthedocs.io/en/stable/instrumentation/asgi/asgi.html) for this instrumentation was a bit sub-par compared to what we have for most other instrumentations. That is, there's currently only an API reference, without usage examples.\r\n\r\nTurns out we _do_ have usage examples in the [`opentelemetry-instrumentation-asgi` README](https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-asgi), so…\r\n\r\n**Description of changes**\r\n\r\n I took the same approach than the Starlette instrumentation docs and updated the ASGI docs to:\r\n\r\n- Include the ASGI instrumentation `README.rst`.\r\n- List the existing API reference below.\r\n\r\nI also:\r\n\r\n- Added a \"raw ASGI\" usage example at the bottom of the page.\r\n- Updated the page title to match the \"XYZ Instrumentation\" model for other pages.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n<!-- Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration -->\r\n\r\nBuilt the docs locally and here's what [the page](https://opentelemetry-python.readthedocs.io/en/stable/instrumentation/asgi/asgi.html) now looks like:\r\n\r\n![asgi](https://user-images.githubusercontent.com/15911462/92722747-57003080-f368-11ea-8ba8-9e767c101504.png)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fm/opentelemetry-asgi-docs-revamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update ASGI instrumentation docs (#1090)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101144ee515ce6a4e77c",
    "number": 1089,
    "body": "Unblocks [this](https://github.com/open-telemetry/opentelemetry-python/issues/1088) temporarily. Still need to fix the tests.",
    "head_branch": "boto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Comment out botocore test (#1089)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101244ee515ce6a4e77d",
    "number": 1087,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/issues/1057\r\n\r\nThe test util was also missing a dependency to the sdk package, which it [uses](https://github.com/open-telemetry/opentelemetry-python/blob/master/tests/util/src/opentelemetry/test/test_base.py#L21)",
    "head_branch": "record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use is_recording flag in requests instrumentation (#1087)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101344ee515ce6a4e77e",
    "number": 1086,
    "body": "# Description\r\n\r\nMoves pytest configuration from `pytest.ini` to `pyproject.toml`\r\n\r\nSince version 6.0, pytest supports configuration via the `pyproject.toml` file. I think it would be nice to get rid of some files in the repo's root directory, so I can also look into moving other configuration if this is something we want. Pretty much every tool has at least an open ticket for `pyproject.toml` support by now.\r\n\r\n# How Has This Been Tested?\r\n\r\nI ran `tox -f py38-api` to make sure the output looks the same.",
    "head_branch": "migrate-pytest-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Migrate pytest config to pyproject.toml (#1086)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101344ee515ce6a4e77f",
    "number": 1085,
    "body": "# Description\r\n\r\nAs per spec, this change renames the HTTPTextFormat to TextFormatPropagator. Updated the file names accordingly.\r\n\r\nFixes #1083 \r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "issue-1083",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename HTTPTextFormat to TextMapPropagator (#1085)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101444ee515ce6a4e780",
    "number": 1082,
    "body": "# Description\r\n\r\nThis aligns with the specification for Resources.\r\n\r\nFixes #1081 \r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "rename-labels-attrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: rename resource labels to attributes (#1082)\n\nThis aligns with the specification for Resources"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101544ee515ce6a4e781",
    "number": 1080,
    "body": "# Description\r\n\r\nAdd a global error handler. This object allows users to pass exceptions to pre-registered error handlers.\r\n\r\nFixes #1079 \r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit tests.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "issue_1079",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Global Error Handler (#1080)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101644ee515ce6a4e782",
    "number": 1077,
    "body": "# Description\r\n\r\nRemove non-inclusive language from comments in pylint\r\n\r\nAddresses #1076 the actionable part\r\n\r\n## Type of change\r\n\r\nComment change in code\r\n\r\n# How Has This Been Tested?\r\n\r\nLocally\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "flands/inclusive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove non-inclusive language from comments in pylint (#1077)\n\n* Remove non-inclusive language from comments in pylint\r\nCo-authored-by: Daniel <61800298+ffe4@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101744ee515ce6a4e783",
    "number": 1075,
    "body": "# Description\r\n\r\nCurrent `aiohttp-client` instrumentation requires to explicitly create a `TraceConfig` and pass it to the constructor of a `ClientSession`.\r\nThis PR introduces an instrumentor for aiohttp `ClientSession`s which automatically adds a `TraceConfig` when a `ClientSession` is created.\r\nAlso adds the entry point for auto-instrumenting aiohttp client sessions.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nManual tests + additional unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "aiohttp-instrumentor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add instrumentor and auto instrumentation support for aiohttp (#1075)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101844ee515ce6a4e784",
    "number": 1074,
    "body": "# Description\r\n\r\nThis PR adds support within the Datadog Exporter for capturing resource labels as datadog span tags as well as to set the service name using the more OpenTelemetry standard Resource `service.name`. This aligns the exporter with the more broadly accepted OpenTelemetry standards and allows existing users of OpenTelemetry to leverage their existing patterns for service and span tagging if they choose to export to Datadog.\r\n\r\n\r\ncc @majorgreys for review and any comments here, if there's improvements or something I've missed please let me know.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI've updated the Unit Tests as well as the Example\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "update_datadog_resource_label_usage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "exporter/datadog: add support for resource labels and service.name (#1074)\n\n* exporter/datadog: add support for resource labels and service.name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101844ee515ce6a4e785",
    "number": 1073,
    "body": "Fixes #1072\r\n\r\n# Description\r\n\r\nThere is a missing underscore before an attribute.\r\n\r\nFixes #1072\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `exporter/opentelemetry-exporter-otlp/tests/test_otlp_trace_exporter.test_failure`\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1072",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing underscore (#1073)\n\nFixes #1072"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101944ee515ce6a4e786",
    "number": 1070,
    "body": "Updates spanprocessors to not pass on span if sampled flag not set to exporter.\r\n\r\nAccording to the table here https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/sdk.md#sampling",
    "head_branch": "sp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SpanExporter to not receive span if not sampled (#1070)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101a44ee515ce6a4e787",
    "number": 1069,
    "body": "# Description\r\n\r\nAdds support for configuring the SDK log level using the `OTEL_LOG_LEVEL` environment variable.\r\n\r\nFixes #1059 \r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue/1059-loglevel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101b44ee515ce6a4e788",
    "number": 1068,
    "body": "# Description\r\n\r\nAdding an FAQ section, which can also serve as a quick reference.\r\n\r\nNot having such a section makes common scenarios harder to discover.\r\n\r\n## Type of change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/cookbook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: adding faq (#1068)\n\nAdding an FAQ section, which can also serve as a quick reference.\r\n\r\nNot having such a section makes common scenarios harder to discover."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101c44ee515ce6a4e789",
    "number": 1067,
    "body": "# Description\r\n\r\nThis test was causing pypy3-core-getting-started jobs to fail intermittently. Removing the arbitrary sleep and replacing it with a retry strategy.\r\n\r\nFixes #1044\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "fix-pypy3-core-failures",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: fix intermittent build failures (#1067)\n\nThis test was causing pypy3-core-getting-started jobs to fail intermittently. Removing the arbitrary sleep and replacing it with a retry strategy."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101d44ee515ce6a4e78a",
    "number": 1066,
    "body": "Part of [#906]\r\n\r\nSolves [#1065]\r\n\r\nAlso renamed `correlationcontext` folder-> `baggage` , leftover from rename PR: https://github.com/open-telemetry/opentelemetry-python/pull/1060\r\n\r\nAdded `opentelemetry-sdk` as a dependency to `system-metrics`. -> This package uses classes  from the [sdk](https://github.com/open-telemetry/opentelemetry-python/blob/master/instrumentation/opentelemetry-instrumentation-system-metrics/src/opentelemetry/instrumentation/system_metrics/__init__.py#L64). Not sure how this was installable previously.",
    "head_branch": "attr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Attributes returned from SamplingResult must be immutable (#1066)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101d44ee515ce6a4e78b",
    "number": 1064,
    "body": "# Description\r\n\r\nAs per spec, adding support for env var:`OTEL_EXPORTER_ZIPKIN_ENDPOINT`\r\n\r\nFixes #1055 \r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "zipkin-env-var",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "exporter/zipkin: adding support for env var OTEL_EXPORTER_ZIPKIN_ENDPOINT (#1064)\n\n* add support for env var: OTEL_EXPORTER_ZIPKIN_ENDPOINT\r\n* update method signature to use url"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101e44ee515ce6a4e78c",
    "number": 1062,
    "body": "# Description\r\n\r\nImprove flushing in the `BatchExportSpanProcessor` by using a `threading.Event` for requesting a flush operation and signaling that a flush operation finished.\r\nThe idea is to have the thread which calls `force_flush` to create a flush request (`threading.Event` + num spans to flush) and wait on this request until it gets signaled by the worker thread or the flush timeout expires.\r\nThe worker thread checks in each export interval if a flush request exists, unsets it and uses the local reference to signal the end of a flush/export operation.\r\nBy using a `threading.Event` for signaling, wakeup notifications are not missed since the wait call will return immediately once being signaled.\r\n\r\nThis also addresses the issue that calls to `force_flush` were not thread safe since the indiciation if a flush operation was in progress relied on a boolean flag on the span processors instance which gets reset once the first `force_flush` call finishes.\r\n\r\nAddresses #949 \r\n\r\n## Type of change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "improve-batch-span-processor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve BatchExportSpanProcessor (#1062)\n\n* it was possible for force flush calls to miss the flush finished\r\n  notifications by the worker thread. in case a flush token got added\r\n  in the main thread and the worker thread processed and notified the\r\n  flush condition before the main thread called wait on the flush\r\n  condition, the wakup is missed and the main thread has to wait the\r\n  full flush timeout\r\n* calls to force flush were not really thread safe since the state\r\n  if a flush operation is in progress was indictated by a single boolean\r\n  flag which gets reset when the first force flush call finishes.\r\n* instead of having a boolean flag to indicate a flush request use an\r\n  Event. When a call to force flush is made it is looked up if a\r\n  flush request event is currently pending or a new one is created.\r\n  The worker thread will check if a flush request event exists, unset it\r\n  and use a local reference for signaling once the export operation finished.\r\n  Force flush calls will wait in the meantime on the flush request event until\r\n  they are signaled by the worker thread.\r\n  This also makes calls to force flush thread safe since multiple threads\r\n  can/might wait on one event."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620101f44ee515ce6a4e78d",
    "number": 1060,
    "body": "# Description\r\n\r\nMost of this PR is just renaming in response to [spec#857](https://github.com/open-telemetry/opentelemetry-specification/pull/857). I also removed some unused imports and changed the header name to `otcorrelations`, which has been specified in the spec for a while I think. The header name will probably soon change again, however ([spec#879](https://github.com/open-telemetry/opentelemetry-specification/issues/879)).\r\n\r\nFixes #1041\r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been **updated**\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "issue_1041_baggage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: Rename CorrelationContext to Baggage (#1060)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102044ee515ce6a4e78e",
    "number": 1054,
    "body": "# Description\r\n\r\nProvides an opentelemetry instrumentation package for sklearn models, instrumenting internal spans at the estimator level. The motivation is to provide observability into machine learning models that run for realtime predictive applications that have many complex transformers and predictors.\r\n\r\nThe instrumentor adds spans to sklearn estimators according to a set of default estimator methods (namely `fit`, `predict`, `predict_proba` and `transform`) and other configuration parameters that determine how spans are implemented through the model hierarchy. The default configuration also handles `Pipeline` and `FeatureUnion` hierarchies. Since sklearn's API is easily extended, the configuration parameters allow for custom model hierarchy traversal, allowing spans to be implemented in custom estimators as well.\r\n\r\n## Type of change\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThe package provides two tests for the implementation.\r\n\r\n- [ ] `test_span_properties` uses an sklearn model fixture and asserts span names, kinds, and parent-child relationships.\r\n- [ ] `test_attrib_config` uses the same fixture to assert implementation of non-default configuration parameters.\r\n\r\nI also have an example implementation here: https://github.com/crflynn/opentelemetry-sklearn\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "opentelemetry-sklearn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102144ee515ce6a4e78f",
    "number": 1053,
    "body": "As per [semantic conventions](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/resource/semantic_conventions/README.md#telemetry-sdk) , this changes sets the `telemetry.sdk` resource attributes.\r\n\r\nFixes #1033 \r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] ran unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "add-telemetry-sdk-params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Populate resource attributes as per semantic conventions (#1053)\n\nAs per semantic conventions, set the `telemetry.sdk` parameters."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102244ee515ce6a4e790",
    "number": 1052,
    "body": "The releases section of the README was starting to get fairly out of date so I'm removing it with this change. I've also updated the first section to align it more closely with the opentelemetry-go",
    "head_branch": "update-readme",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "docs: updating readme (#1052)\n\n* docs: updating readme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102344ee515ce6a4e791",
    "number": 1051,
    "body": "Fixes #1050.\r\n\r\n- Pass meter into Observer constructors, like we already do for synchronous instruments\r\n- Updated tests\r\n",
    "head_branch": "pass-meter-1050",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102344ee515ce6a4e792",
    "number": 1047,
    "body": "# Description\r\n\r\n`README.md` and the opentelemetry website say this library is in beta, and releases have been called betas since March, so update `docs/index.rst` to be consistent with that.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Checked that the markdown preview in Github looks right.\r\n\r\n# Checklist:\r\n\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: fix outdated alpha statement (#1047)\n\n`README.md` and the opentelemetry website say this library is in beta,\r\nand releases have been called betas since March, so update\r\n`docs/index.rst` to be consistent with that."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102444ee515ce6a4e793",
    "number": 1046,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "propagate-unsampled-trace-flags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102544ee515ce6a4e794",
    "number": 1045,
    "body": "As per spec change https://github.com/open-telemetry/opentelemetry-specification/pull/840, removing lazy event api.\r\n\r\nFixes #1032 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "codeboten/remove-lazy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove lazy Event and Link API from Span interface (#1045)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102644ee515ce6a4e795",
    "number": 1040,
    "body": "# Description\r\n\r\nThe `RequestsInstrumentor` was currently only instrumeting `Session.request`. Sending a prepared request with a direct call to `Session.send` were not tracked.\r\nThis PR adds instrumentation support for prepared requests by instrumenting `Session.send` in addition to `Session.request`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdditional unit tests for sending prepared requests were added.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "requests-instrument-prepared",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "RequestsInstrumentor: Add support for prepared requests (#1040)\n\nin addition to Session.request instrument Session.send to also\r\ncreate spans for prepared requests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102744ee515ce6a4e796",
    "number": 1039,
    "body": "Add instrumentation for Falcon 2.0+\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ships with automated tests\r\n- [x] Tested with a demo app \r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "falcon-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation/falcon: Added Falcon 2.0+ instrumentation (#1039)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102744ee515ce6a4e797",
    "number": 1036,
    "body": "This PR adds support to the `opentelemetry-instrument` command to automatically configure a tracer provider and exporter. By default configures the OTLP exporter (like other Otel auto-instrumentations. e.g, Java: https://github.com/open-telemetry/opentelemetry-java-instrumentation#getting-started). It also allows using a different in-built or 3rd party via a CLI argument or env variable. \r\n\r\nDetails can be found on opentelemetry-instrumentation's README package. \r\n\r\nFixes #663 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Ships with automated tests\r\n- [x] Tested with a demo app \r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n\r\n",
    "head_branch": "otlp-env-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add true auto-instrumentation support to opentelemetry-instrument (#1036)\n\nThis commit extends the instrument command so it automatically\r\nconfigures tracing with a provider, span processor and exporter. Most of\r\nthe component used can be customized with env vars or CLI arguments.\r\n\r\nDetails can be found on opentelemetry-instrumentation's README package.\r\n\r\nFixes #663"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102844ee515ce6a4e798",
    "number": 1034,
    "body": "# Description\r\n\r\nPart of https://github.com/open-telemetry/opentelemetry-python/issues/906 to adhere to https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/sdk.md#sampling\r\nUpdates classes to adhere to the sampling spec.\r\n\r\nFixes # (issue)\r\n\r\nSampling changes \r\n\r\n- Decision is an enum.\r\n- Change Decision -> Sampling Result \r\n- should_sample returns sampling result \r\n- Remove span_id from should_sample fn def \r\n- Seperates ProbabilitySampler from ParentOrElse \r\n- ParentOrElseSampler new class \r\n- GetDescription method for all samplers \r\n- change is_recording_Events to is_recording \r\n- Remove \"Optional\" typing for Attributes in some method definitions (Attributes already has Optional [typing](https://github.com/open-telemetry/opentelemetry-python/blob/master/opentelemetry-api/src/opentelemetry/util/types.py#L28))\r\n\r\nTODO\r\n1. Make attributes in samplers immutable \r\n2. how to handle is_recording -> send to processor/exporter ",
    "head_branch": "sample",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Align sampling specs in SDK (#1034)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102944ee515ce6a4e799",
    "number": 1031,
    "body": "Update grpc to a more recent version.",
    "head_branch": "issue_1030",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102a44ee515ce6a4e79a",
    "number": 1028,
    "body": "# Description\r\n\r\nThis PR is a replacement for #821 with added docker tests.\r\n\r\nI also added the `-v` flag to `docker-compose down` in the tox config to clean up anonymous volumes that get left behind and not reused.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "pr-821-docker-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for db cursors and connections in context managers (#1028)\n\nHere is an example snippet that will not report tracing without this patch:\r\n\r\nwith psycopg2.connect(...) as conn, conn.cursor() as cursor:\r\n    cursor.execute(\"select 1;\")\r\n\r\nCo-authored-by: Carl Bordum Hansen <carl@bordum.dk>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102b44ee515ce6a4e79b",
    "number": 1027,
    "body": "# Description\r\n\r\nWhen running the grpc tests from the command line with `pytest instrumentation/opentelemetry-instrumentation-grpc/tests` or `python scripts/eachdist.py test` the 2nd test in the `TestClientProto` test case was failing with:\r\n```\r\ninstrumentation/opentelemetry-instrumentation-grpc/tests/test_client_interceptor.py:200: in _verify_error_records\r\n    (\"status_code\", grpc.StatusCode.INVALID_ARGUMENT),\r\nE   AssertionError: Tuples differ: (('me[65 chars]code', <StatusCode.UNAVAILABLE: (14, 'unavailable')>)) != (('me[65 chars]code', <StatusCode.INVALID_ARGUMENT: (3, 'invalid argument')>))\r\nE   \r\nE   First differing element 1:\r\nE   ('status_code', <StatusCode.UNAVAILABLE: (14, 'unavailable')>)\r\nE   ('status_code', <StatusCode.INVALID_ARGUMENT: (3, 'invalid argument')>)\r\nE   \r\nE     (('method', '/GRPCTestServer/BidirectionalStreamingMethod'),\r\nE   -  ('status_code', <StatusCode.UNAVAILABLE: (14, 'unavailable')>))\r\nE   ?                              ^ -   ^ ^^    ^^   ^ -   ^ ^^\r\nE   \r\nE   +  ('status_code', <StatusCode.INVALID_ARGUMENT: (3, 'invalid argument')>))\r\nE   ?                              ^   + ^^ ^^^^ ++ \r\n```\r\nLooks like the problem is a leftover connection from the previous test due to the `channel` not being properly closed on test teardown. The current test then fails to connect to the test server which results in `StatusCode.UNAVAILABLE`.\r\n\r\nFor tox tests this was already addressed in #974 by pinning the gprc version to 1.30\r\n\r\n## Type of change\r\n\r\n- [x] ~~Bug~~ fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nRun `pytest instrumentation/opentelemetry-instrumentation-grpc/tests` without and with closing the `channel`.\r\n\r\n",
    "head_branch": "fix-grpc-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix grpc tests when running from cmd-line/eachdist script (#1027)\n\n* when running the grpc tests with pytest or eachdist from the command\r\n  line the 2nd test trying to connect to the test server failed with\r\n  a connection refused message.\r\n  Seems like the connection from the previous test was still alive due to\r\n  the channel not being properly closed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102b44ee515ce6a4e79c",
    "number": 1026,
    "body": "Increases the retry count for the pre-test availability checks in the docker-tests from 5 to 8.\r\n\r\nMySQL was not always ready in time on my laptop. Bumping retries up to 6 was enough for me, but as this stage normally shouldn't fail, I thought giving it another 10 extra seconds would not hurt.",
    "head_branch": "docker-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Increase docker-tests retry count (#1026)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102c44ee515ce6a4e79d",
    "number": 1024,
    "body": "# Description\r\n\r\nMakes return value of `get_correlations` immutable via a proxy view of a copy of the original dict.\r\n\r\nAccording to the [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/correlationcontext/api.md#get-correlations):\r\n\r\n> the returned value can be either an immutable collection or an immutable iterator\r\n\r\nFixes #1020 \r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1020",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make return value of `get_correlations` immutable (#1024)\n\n* Make return value of `get_correlations` immutable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102d44ee515ce6a4e79e",
    "number": 1023,
    "body": "Part of [#206] move, samplers to SDK package.",
    "head_branch": "sample",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move samplers to SDK package (#1023)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102e44ee515ce6a4e79f",
    "number": 1021,
    "body": "Updating meeting to 9am only as agreed in the SIG meeting.",
    "head_branch": "codeboten/update-meeting-time",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update README.md (#1021)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102f44ee515ce6a4e7a0",
    "number": 1019,
    "body": "Update System Metrics as per https://github.com/open-telemetry/oteps/pull/119",
    "head_branch": "issue_1006",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation/system-metrics: Update System Metrics (#1019)\n\nFixes #1006"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620102f44ee515ce6a4e7a1",
    "number": 1018,
    "body": "# Description\r\n\r\nThis commit adds auto-instrumentation for Tornado 6 and above on Python\r\nversions 3.5 and above.\r\n\r\nFixes #627\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested manually with a demo Tornado app\r\n- [x] Ships with automated tests \r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "tornado",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added instrumentation for Tornado 6 and above (#1018)\n\nThis commit adds auto-instrumentation for Tornado 6 and above on Python\r\nversions 3.5 and above."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103044ee515ce6a4e7a2",
    "number": 1017,
    "body": "# Description\r\n\r\nThis reverts commit 021723a5c1cdde8cd15b542179e1fd83bd32819b.\r\n\r\nUnderlying issue was fixed by commit 20cf4cb087371\r\n\r\n\r\nFixes #680 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n```console\r\n$ flake8 --version\r\n3.8.0 (mccabe: 0.6.1, pycodestyle: 2.6.0, pyflakes: 2.2.0) CPython 3.8.2 on Darwin\r\n$ git checkout 20cf4cb087371\r\nNote: switching to '20cf4cb087371'.\r\n…\r\nHEAD is now at 20cf4cb refactor: Typing fixes #768, upgrade mypy to 0.770 (#769)\r\n$ flake8 ./opentelemetry-api/src/opentelemetry/util/__init__.py\r\n$ git checkout HEAD~1\r\nPrevious HEAD position was 20cf4cb refactor: Typing fixes #768, upgrade mypy to 0.770 (#769)\r\nHEAD is now at b108596 bugfix: Fix for byte type attributes crashing spans       (#775)\r\n$ flake8 ./opentelemetry-api/src/opentelemetry/util/__init__.py\r\n./opentelemetry-api/src/opentelemetry/util/__init__.py:39:12: F821 undefined name 'TracerProvider'\r\n./opentelemetry-api/src/opentelemetry/util/__init__.py:39:30: F821 undefined name 'MeterProvider'\r\n\r\n```",
    "head_branch": "issue_680",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert \"pin flake8 at 3.7.9 (#679)\" (#1017)\n\nThis reverts commit 021723a5c1cdde8cd15b542179e1fd83bd32819b.\r\nUnderlying issue was fixed by commit 20cf4cb087371."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103144ee515ce6a4e7a3",
    "number": 1015,
    "body": "# Description\r\n\r\nCast the pymongo `command` as a string when starting spans for pymongo events. When the `getMore` action is executed the `command` is an `int`.\r\n\r\nFixes #1012 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\nquerying a mongo collection for records when the batch size is less than the total number of records to be returned, e.g:\r\n```pyhton\r\nfrom pymongo import MongoClient\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.trace import TracerProvider\r\nfrom opentelemetry.instrumentation.pymongo import PymongoInstrumentor\r\n\r\ntrace.set_tracer_provider(TracerProvider())\r\n\r\nPymongoInstrumentor().instrument()\r\nclient = MongoClient()\r\ndb = client[\"MongoDB_Database\"]\r\ncollection = db[\"MongoDB_Collection\"]\r\ncollection.find({'batch_size': 1})\r\n```\r\nAlso ran the `tox` test suite.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "pymongo-command-type-coercion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103244ee515ce6a4e7a4",
    "number": 1014,
    "body": "Part of [#928] and solves [#1013].",
    "head_branch": "events",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Filter attributes on lazy event add (#1014)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103344ee515ce6a4e7a5",
    "number": 1011,
    "body": "Fixes [#1010]",
    "head_branch": "bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bug (#1011)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103444ee515ce6a4e7a6",
    "number": 1005,
    "body": "# Description\r\n\r\nRefactoring of `SpanContext.is_valid()` to be a variable, rather than a method. This makes the API consistent with `is_remote`, which is defined similarly in the [specification](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/api.md#spancontext).\r\n\r\nSince I am new to this project, I am not sure whether the removal of the method might break something downstream, but adding a deprecation warning would require also choosing a different name for the attribute.\r\n\r\nFixes #996\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated **(where?)**\r\n- [x] Unit tests have been **updated**\r\n- [x] Documentation has been **removed (by removing the method)**\r\n",
    "head_branch": "issue_996",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor is_valid to be an instance attribute (#1005)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103444ee515ce6a4e7a7",
    "number": 993,
    "body": "# Description\r\n\r\nRemoves py38 from the matrix of the primary build job. Since python 3.8 has a separate build job, it does not need to be in the main matrix. Its inclusion results in the same tests being run twice.\r\n\r\n# Checklist:\r\n\r\n- [ ] Changelogs have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "circleci-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove redundant circleci matrix parameter (#993)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103544ee515ce6a4e7a8",
    "number": 992,
    "body": "# Description\r\n\r\nChanged span name extracting method to comply with convention. Besides the inconsistency, the current method had a flaw that could name different handlers with the same name. For example `api.v1.cities.main` and `api.v2.cities.main` will have the same name `main`. There is a case for older versions of django below version 2.2, when it was impossible to get the url pattern. In this case, the full name of the function will be used, indicating the module where this function is located. This will resolve the issue of collisions of the same function names. Changed `process_view` to `process_request` as `process_view` \r\nargument `view_func` not required anymore\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded 2 unit tests for span names and fixed all other tests\r\n\r\n- [ ] test_span_name\r\n- [ ] test_span_name_404\r\n",
    "head_branch": "feature/django-span-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Django span names according to convention (#992)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103644ee515ce6a4e7a9",
    "number": 991,
    "body": "Bumping version to 0.13.dev0",
    "head_branch": "v0.12b0.master-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: 0.13.dev0 version update (#991)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103744ee515ce6a4e7aa",
    "number": 990,
    "body": "",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update build.sh (#990)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103844ee515ce6a4e7ab",
    "number": 989,
    "body": "# Description\r\n\r\nFixes these kinds of type errors which I'm seeing in the Google cloud exporter:\r\n\r\n```py\r\ndef usesAttributes(a: types.Attributes) -> None:\r\n    pass\r\n\r\nfoo: Dict[str, str] = {\"key\": \"value\"}\r\n\r\n# Causes type error:\r\n# has incompatible type \"Dict[str, str]\"; expected\r\n# \"Optional[Dict[str, Union[str, bool, int, float, Sequence[str], Sequence[bool], Sequence[int], Sequence[float]]]]\r\nusesAttributes(foo)\r\n```\r\n\r\n- This happens because `Dict` is invariant ([see this mypy FAQ](https://mypy.readthedocs.io/en/latest/common_issues.html#variance)). Using `Mapping` solves this because it is covariant.\r\n- This also has the benefit that `Mapping` is immutable so MyPy will complain if you try and set a value on it.\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFor GoogleCloudPlatform/opentelemetry-operations-python#64\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis is just a type annotation change. All mypy assertions are passing\r\n\r\n- [x] MyPy tox env\r\n\r\n# Checklist:\r\n(rest are N/A)\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "type_changes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "in types.Attributes, change Dict -> Mapping (#989)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103944ee515ce6a4e7ac",
    "number": 988,
    "body": "",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update changelog for pyramid (#988)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103944ee515ce6a4e7ad",
    "number": 987,
    "body": "Forgot to add CHANGELOG for starlette.",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update CHANGELOG for starlette for release (#987)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103a44ee515ce6a4e7ae",
    "number": 986,
    "body": "Preparing 0.12b0 release",
    "head_branch": "release/0.12b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "prepare release (#986)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103b44ee515ce6a4e7af",
    "number": 984,
    "body": "# Description\r\n\r\nA GHA test workflow as suggested in #870. The workflow runs the same jobs as the CircleCI workflow and all jobs cache the `.tox` directory. The `py35-instrumentation` test segfails on ubuntu-18.04. As a workaround it is running it on 20.04 instead.\r\n\r\nGHA has 5GB of cache space, after which old caches get deleted. This should be enough to cache two iterations of `tox.ini`/`dev-requirements.txt`. The OTEL org has a shared concurrency limit of at least 60 jobs according to [this comment](https://github.com/open-telemetry/community/issues/398#issuecomment-666998754).\r\n\r\nHere’s a table with completion times of the most recent cached runs.\r\n\r\n| Commit  | CircleCI | GitHub Actions |\r\n|---------|----------|----------------|\r\n| 8e5e3c8 | 8m 28s   | 10m 34s        |\r\n| 4b24542 | 10m 14s  | 8m 2s          |\r\n| cc902bc | 10m 12s  | 7m 33s         |\r\n| ba74b80 | 10m 42s  | 9m 38s         |\r\n| 9595728 | 10m 54s  | 8m 0s          |\r\n\r\n\r\n\r\nFixes #870",
    "head_branch": "gha-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "build/infra: Add GitHub Action for tox runs (#984)\n\nThe Python 3.5 intrumentation test segfaults when importing the mysql connector. Running this test on Ubuntu-20.04 fixes this issue."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103c44ee515ce6a4e7b0",
    "number": 982,
    "body": "# Description\r\n\r\nFixes #981 \r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n",
    "head_branch": "issue/981",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "exporter/jaeger: Either collector submit batch or Agent emit batch (#982)\n\n* Either collector submit batch or Agent emit batch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103d44ee515ce6a4e7b1",
    "number": 978,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #962 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated existing tests to check if the transfer-protocol is correctly set in both default and non-default cases.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "set_collector_prot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add protocol as an argument to the Jaeger exporter constructor (#978)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103e44ee515ce6a4e7b2",
    "number": 977,
    "body": "# Description\r\n\r\nUpdating default OTLP port.\r\n\r\nFixes #968\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "update-otlp-port",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: update default OTLP port to 55680 (#977)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103e44ee515ce6a4e7b3",
    "number": 975,
    "body": "Fixes #974",
    "head_branch": "issue_974",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix grpc version to previous version (#975)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620103f44ee515ce6a4e7b4",
    "number": 973,
    "body": "# Description\r\n\r\nThe environment variable OTEL_RESOURCE has been renamed to OTEL_RESOURCE_ATTRIBUTES as per the specification open-telemetry/opentelemetry-specification#758\r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit tests have been run\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "rename-resource-labels",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Renaming OTEL_RESOURCE env var (#973)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104044ee515ce6a4e7b5",
    "number": 972,
    "body": "# Description\r\n\r\nUsing the path for span names in the requests instrumentation led to high cardinality in the reported data. This changes updates the name to use the method instead as defined in the [semantic conventions](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md#name)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested locally\r\n- [x] Ran unit tests\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "reduce-cardinality-requests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Span name updated to follow semantic conventions to reduce cardinality (#972)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104144ee515ce6a4e7b6",
    "number": 969,
    "body": "# Description\r\n\r\nPart of [#760]. Renaming remaining packages.\r\n\r\n# Checklist:\r\n\r\n1. changelogs \r\n\r\n2. folder name ext -> subfolder ext \r\n\r\n3. setup.cfg/setup.py \r\n\r\n4. tox \r\n\r\n5. README \r\n\r\nMoved docker-tests under /tests folder.",
    "head_branch": "rename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename remaining framework packages from \"ext\" to \"instrumentation\" (#969)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104244ee515ce6a4e7b7",
    "number": 967,
    "body": "When HistogramAggregator is created with a list of bounds (instead of a tuple), we need to turn the list into a tuple before trying to use it as a dictionary key (this PR fixes that).\r\n\r\nAlso, when the batcher verifies duplicate record calls to `process()` with `if batch_value != aggregator:` the check was failing due to the stateful batcher duplicating the aggregator, which isn't necessary anymore.",
    "head_branch": "views",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "views: properly hash config dict, don't copy aggregator when stateful (#967)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104344ee515ce6a4e7b8",
    "number": 966,
    "body": "# Description\r\n\r\nPart of [#760]. Renaming db related packages.\r\n\r\n# Checklist:\r\n\r\n1. changelogs \r\n\r\n2. folder name ext -> subfolder ext \r\n\r\n3. setup.cfg/setup.py \r\n\r\n4. tox \r\n\r\n5. README \r\n",
    "head_branch": "rename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename db framework packages from \"ext\" to \"instrumentation\" (#966)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104344ee515ce6a4e7b9",
    "number": 965,
    "body": "# Description\r\n\r\nThis is a tiny change to set the `SpanKind` of the redis instrumentor to `CLIENT`. This is a small semantic change I'm suggesting so that tools which display spans based on SpanKind can show these connections in the correct context.\r\n\r\n## Type of change\r\n\r\nMinor enhancement.\r\n\r\n# How Has This Been Tested?\r\n\r\nOne test was added to validate the `SpanKind` and also added validation for `span.name`.\r\n\r\n- [x] Test the property of the `Span.SpanKind`\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "redis_spankind",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation/redis: Change Redis instrument to use SpanKind.CLIENT (#965)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104444ee515ce6a4e7ba",
    "number": 964,
    "body": "Signed-off-by: Abhilash Gnan <abhilashgnan@gmail.com>\r\n\r\n# Description\r\n\r\nFixes #720\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue-720",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add HTTP user-agent in WSGI instrumentation (#964)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104544ee515ce6a4e7bb",
    "number": 963,
    "body": "It is common for those who are using different propagation protocols\r\n(e.g. B3) to be confused about why their applications are not using\r\ntheir HTTPTextFormat of choice.\r\n\r\nAdding this missing documentation to the getting-started also\r\nindicates to those new to OpenTelemetry that they will need to make\r\na conscious choice of propagation protocol.\r\n\r\n# Checklist:\r\n\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/add-propagators-documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Add propagators section to getting started (#963)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104644ee515ce6a4e7bc",
    "number": 961,
    "body": "# Description\r\n\r\nPart of [#760]. Renaming web related packages.\r\n\r\n# Checklist:\r\n\r\n1. changelogs \r\n\r\n2. folder name ext -> subfolder ext \r\n\r\n3. setup.cfg/setup.py \r\n\r\n4. tox \r\n\r\n5. README \r\n",
    "head_branch": "rename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename web framework packages from \"ext\" to \"instrumentation\" (#961)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104744ee515ce6a4e7bd",
    "number": 960,
    "body": "See https://github.com/open-telemetry/opentelemetry-specification/pull/750 and associated issue https://github.com/open-telemetry/opentelemetry-specification/issues/728\r\n\r\n## Type of change\r\n\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "mitchell/change-default-sampler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change default Sampler to ParentOrElse(AlwaysOn) (#960)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104844ee515ce6a4e7be",
    "number": 959,
    "body": "# Description\r\n\r\nThe actual behavior allows overriding of the current `TracerProvider`. Setting of `TracerProvider` can happen in the auto instrumentation steps and later it can be overridden in application code, causing span processors to be lost.\r\n\r\nFixes #958\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis PR introduces a change in the following test that asserts that the appropriate warning is raised and that the tracer provider is not overridden even after calling `set_tracer_provider` twice.\r\n\r\n\r\n- [x] `opentelemetry-api/tests/trace/test_globals.py:test_tracer_provider_override_warning`\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "issue_958",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Stop TracerProvider from being overridden (#959)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104944ee515ce6a4e7bf",
    "number": 957,
    "body": "# Description\r\n\r\nThis change propagates the {`trace_id`, `span_id`} of the parent span and the `span_id` of the span of the publisher task.\r\n\r\nFixes #876\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] test on an internal project (cannot upload it, sorry)\r\n- [x] tested on a modified version of the `django-email-celery` example from #876. I uploaded the modified version here, along with a screenshot of the result in jaeger.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\n![Screenshot_2020-07-29 Jaeger UI](https://user-images.githubusercontent.com/7265382/88806263-796f2d80-d1b0-11ea-9f83-b07348c9adcd.png)\r\n[django-email-celery.zip](https://github.com/open-telemetry/opentelemetry-python/files/4995134/django-email-celery.zip)",
    "head_branch": "celery-propagate-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104944ee515ce6a4e7c0",
    "number": 956,
    "body": "# Description\r\n\r\nBumping version to 0.12.dev0",
    "head_branch": "v0.11b0-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "chore: merging release branch updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104a44ee515ce6a4e7c1",
    "number": 954,
    "body": "Preparing 0.11b0 release",
    "head_branch": "release/0.11b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "release: updating versions and changelogs (#954)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104b44ee515ce6a4e7c2",
    "number": 953,
    "body": "# Description\r\n\r\nPart of [#760]. Renaming just the exporters first to minimize mistakes.\r\n\r\n# Checklist:\r\n\r\n1. readmes \r\n\r\n2. setup files \r\n\r\n3. generated docs \r\n\r\n4. tox \r\n\r\n5. changelogs \r\n",
    "head_branch": "rename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename exporter packages from \"ext\" to \"exporter\" (#953)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104c44ee515ce6a4e7c3",
    "number": 952,
    "body": "Adding a template for PRs",
    "head_branch": "add-github-pr-template",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "chore: create pull_request_template.md (#952)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104d44ee515ce6a4e7c4",
    "number": 950,
    "body": "Hello there.\r\n\r\nThis tiny change add support for django configurations where the middlewares are listed as a tuple (I am under the impression this is fairly common in \"old\" projects).\r\n\r\nHave a nice day !\r\n\r\n",
    "head_branch": "django-support-tuples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/django: accept middlewares declared as tuples (#950)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104e44ee515ce6a4e7c5",
    "number": 948,
    "body": "I haven't contributed to the project in a while and I don't expect to start\r\ncontributing again. This commit removes myself as an approver of the project.",
    "head_branch": "mauricio/remove-from-approvers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Drop mauriciovasquezbernal from approvers (#948)\n\nI haven't contributed to the project in a while and I don't expect to start\r\ncontributing again. This commit removes myself as an approver of the project."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104e44ee515ce6a4e7c6",
    "number": 947,
    "body": "Add's concurrency tests to ensure that force_flush() and shutdown() could be called concurrently without causing racing coniditions.\r\n\r\nAddresses:\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/392",
    "head_branch": "adding_multithreading_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620104f44ee515ce6a4e7c7",
    "number": 945,
    "body": "This PR fixes the export of `MinMaxSumCountAggregator` aggregated metrics in Prometheus.\r\n\r\nBefore this PR, the specified test produces the following exception:\r\n```\r\nTypeError: (\"float() argument must be a string or a number, not 'minmaxsumcount'\", Metric(testprefix_test_name, testdesc, unknown, , [Sample(name='testprefix_test_name', labels={}, value=minmaxsumcount(min=123, max=456, sum=579, count=2), timestamp=None, exemplar=None)]))\r\n```\r\n\r\nTo fix this, the `_translate_to_prometheus` function checks if the metric's checkpoint value is a minmaxsumcount namedtuple instance and creates a `SummaryMetricFamily` object of it as this seems to be the best possible supported Prometheus Export type, thus dropping recording of the min and max entries, but persisting the `sum` and `count` calculations.\r\n\r\nAdditionally, this PR adds types to all functions within this package. Some unused imports have also been removed.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix(ext/prometheus): support minmaxsumcount aggregator (#945)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105044ee515ce6a4e7c8",
    "number": 942,
    "body": "Fixes #762",
    "head_branch": "issue_762",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move duplicated code to a dependency (#942)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105144ee515ce6a4e7c9",
    "number": 941,
    "body": "once approved the PR, aabmass will be added to the approvers team",
    "head_branch": "codeboten/approver-aabmass",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "meta: adding aabmass as approver (#941)\n\nonce approved the PR, aabmass will be added to the approvers team"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105244ee515ce6a4e7ca",
    "number": 938,
    "body": "Adding span getter method to solve:\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/715",
    "head_branch": "adding_span_getter_method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105344ee515ce6a4e7cb",
    "number": 937,
    "body": "Fixes #940, fixes #951.\r\n\r\n1. Pass `start_timestamp` for stateful metrics\r\n2. Export resources as well. For resource type, copied logic from the Collector in https://github.com/open-telemetry/opentelemetry-collector/pull/1462\r\n2. Convert any labels to `str` when setting it in proto. The labels should all be strings, but this is currently only type-checked.\r\n\r\nPreviously, `start_timestamp` wasn't being passed at all. For metrics that are cumulative over the life of the process, the exporter should be sending a start time since startup. [The docstring for this start_timestamp](https://github.com/census-instrumentation/opencensus-proto/blob/a9646cb397b005487c839c47296c96c0c27cb0b2/src/opencensus/proto/metrics/v1/metrics.proto#L127-L130):\r\n\r\n```proto\r\n// Must be present for cumulative metrics. The time when the cumulative value\r\n// was reset to zero. Exclusive. The cumulative value is over the time interval\r\n// (start_timestamp, timestamp]. If not specified, the backend can use the\r\n// previous recorded value.\r\ngoogle.protobuf.Timestamp start_timestamp = 1;\r\n```\r\n\r\nThe OpenCensus to OpenCensus Agent exporter sends the `start_timestamp` that is attached to each series, but OT doesn't store the start time in the aggregator or batcher AFAIK. I feel like this should be added, but we are waiting for the SDK specification still.\r\n\r\n### Questions\r\n- Should we also send the start_timestamp for non-stateful instruments? There is no nice way to get the interval's start time AFAIK; the Google cloud monitoring exporter is just caching the previous end time and using that as the start_timestamp of the next collection window: https://github.com/GoogleCloudPlatform/opentelemetry-operations-python/blob/a3f35dab9bf9e90fde5ab6acd274f6ec7b2567b4/opentelemetry-exporter-cloud-monitoring/src/opentelemetry/exporter/cloud_monitoring/__init__.py#L253-L255\r\n- Is there a way to specify which resource keys should be sent? Right now I am sending all of them, which is added to each metric in the request. I don't see any sanctioned way to do this in the spec.",
    "head_branch": "fix-oc-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OC Exporter - send start_timestamp, resource labels, and convert labels to strings (#937)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105344ee515ce6a4e7cc",
    "number": 936,
    "body": "This PR introduces exemplars into the SDK (for details on exemplars, see OTEP [#113](https://github.com/open-telemetry/oteps/pull/113))\r\n\r\nThese change are (of course) experimental, as no major backend supports \"statistical\" exemplars and there is no concrete SDK spec for exemplars yet (only an OTEP). So any feedback is very much appreciated :)\r\n\r\nBuilt off of the views API prototype: #596 \r\n\r\n",
    "head_branch": "exemplars",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105444ee515ce6a4e7cd",
    "number": 935,
    "body": "minor typo",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Update README.rst (#935)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105544ee515ce6a4e7ce",
    "number": 934,
    "body": "Fixes #933\r\n\r\nThese fields are not being handled correctly when one or both of them\r\nreceive invalid values.",
    "head_branch": "issue_933",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Handle B3 trace_id and span_id correctly (#934)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105644ee515ce6a4e7cf",
    "number": 927,
    "body": "The spec renamed record_error to record_exception. This change follows that change. See https://github.com/open-telemetry/opentelemetry-specification/blob/b8948d9cec3994e396898feca7a10025d08370db/specification/trace/api.md#record-exception",
    "head_branch": "codeboten/record-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api/sdk: Rename record_error to record_exception per spec (#927)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105744ee515ce6a4e7d0",
    "number": 925,
    "body": "Fixes #305",
    "head_branch": "issue_305",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revisit OpenTracing Shim docs (#925)\n\nCo-authored-by: Yusuke Tsutsumi <tsutsumi.yusuke@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105844ee515ce6a4e7d1",
    "number": 924,
    "body": "Fixes #161",
    "head_branch": "issue_161",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation/opentracing-shim: Preserve parent-child relationship between OpenTelemetry and OpenTracing spans (#924)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105944ee515ce6a4e7d2",
    "number": 922,
    "body": "Fixes #242 ",
    "head_branch": "issue_242",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "opentracing-shim: Return consistent ScopeShim objects (#922)\n\nThis uses the OpenTelemetry context management mechanism to store a\r\nScopeShim object in order to make active return the same object as the\r\none returned by start_active_span."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105944ee515ce6a4e7d3",
    "number": 921,
    "body": "Looks like a few tox targets were no longer being executed in CI:\r\n* tracecontext\r\n* mypy\r\n* mypyinstalled\r\n\r\nThis change fixes that",
    "head_branch": "codeboten/add-missing-tox-jobs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: updating circle ci to add tracecontext and mypy jobs (#921)\n\n* chore: updating circle ci to add tracecontext and mypy jobs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105a44ee515ce6a4e7d4",
    "number": 920,
    "body": "Last step in finishing the migration from Travis to CircleCI:\r\n\r\n* Remove travis configuration\r\n* Update badge to show circle status",
    "head_branch": "codeboten/rm-travis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: finish migrating to circleci (#920)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105b44ee515ce6a4e7d5",
    "number": 919,
    "body": "This test fails inconsistently, skipping it for now.",
    "head_branch": "codeboten/skip-inconsistent-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "one more inconsistent test to skip (#919)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105c44ee515ce6a4e7d6",
    "number": 918,
    "body": "Google has setup our own repo to hold our exporters https://github.com/GoogleCloudPlatform/opentelemetry-operations-python. This PR simply removes those exporters from the community repo to avoid confusion. Leaves the documentation files",
    "head_branch": "delete_google",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove google exporter files (#918)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105d44ee515ce6a4e7d7",
    "number": 917,
    "body": "part 2/2 of #878 ",
    "head_branch": "grpc_metrics_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "automatic metrics for gRPC client interceptor (#917)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105e44ee515ce6a4e7d8",
    "number": 915,
    "body": "Fixes #914",
    "head_branch": "issue_914",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix a few issues with the Django example (#915)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105e44ee515ce6a4e7d9",
    "number": 913,
    "body": "A few new instrumentations have been added since the last update to bootstrap, fixing this.",
    "head_branch": "codeboten/update-bootstrap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: update bootstrap with new instrumentations (#913)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620105f44ee515ce6a4e7da",
    "number": 912,
    "body": "Fixes #239",
    "head_branch": "issue_239",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/opentracing: Implement get_attribute and set_attribute (#912)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106044ee515ce6a4e7db",
    "number": 911,
    "body": "Add the ability to detect GKE resources in the Google Cloud Resource Detector and to export this info to Cloud Trace and Cloud Monitoring",
    "head_branch": "gke_detector",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106144ee515ce6a4e7dc",
    "number": 909,
    "body": "Small change to make the status check name more obvious",
    "head_branch": "rename-circleci-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: rename workflow to give it more meaning (#909)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106244ee515ce6a4e7dd",
    "number": 908,
    "body": "traceId length 32, parentId and spanId length 16\r\nFor compatibility with jaeger-collector\r\nFixes #907",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add proper length zero padding to hex strings of traceId, spanId, parentId sent on the wire (#908)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106344ee515ce6a4e7de",
    "number": 905,
    "body": "Closes #894. Added instructions to run `./scripts/proto_codegen.sh` to regenerate code.\r\n\r\n@ocelotl also mentioned the virtualenv check was confusing, so I removed it. Instead, the script just creates its own temporary virtualenv on each run to get a repeatable build.",
    "head_branch": "proto-readme-894",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add instructions to proto package README (#905)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106344ee515ce6a4e7df",
    "number": 904,
    "body": "Fixes #903",
    "head_branch": "issue_903",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update environment variable names (#904)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106444ee515ce6a4e7e0",
    "number": 901,
    "body": "As discussed in the SIG, toumorokoshi is stepping down\r\nas a maintainer.",
    "head_branch": "feature/remove-toumorokoshi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "step down toumorokoshi to approver (#901)\n\nAs discussed in the SIG, toumorokoshi is stepping down\r\nas a maintainer.\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106544ee515ce6a4e7e1",
    "number": 900,
    "body": "Disabling flaky celery integration tests to unblock CI and created #899 to track needing to get to the bottom of the issue.",
    "head_branch": "disable-celery-async-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "disabling tests that have failed inconsistently (#900)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106644ee515ce6a4e7e2",
    "number": 898,
    "body": "Uses CUMULATIVE instead of GAUGE for proper representation of Counter, and handles the correct start_time when stateful or stateless.\r\n\r\nOpen problem: When stateless, if the push interval is too small then data will be lost (blocked by exporter, and aggregator resets). Will need to save records when you can't push and merge into one pushing record once you can.",
    "head_branch": "stateful_stackdriver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106744ee515ce6a4e7e3",
    "number": 897,
    "body": "This is a small typo I noticed while going through the codebase. Not sure if this was ever an issue but this error message could be slightly confusing if someone ever saw it as it contains an impossible condition!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix typo in BatchExportSpanProcessor value error (#897)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106844ee515ce6a4e7e4",
    "number": 896,
    "body": "part 1/2 of #878 \r\n\r\nAlso adds status code responses to the interceptor.",
    "head_branch": "grpc_client_testing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation/grpc: Testing for gRPC Client Interceptor (#896)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106844ee515ce6a4e7e5",
    "number": 893,
    "body": "Improve resource and resource detector tests to be more granular and readable. Also adds comments to increase clarity  for some more involved tests.",
    "head_branch": "improve_resources_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update resources tests (#893)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106944ee515ce6a4e7e6",
    "number": 892,
    "body": "Adding to the GoogleCloudResourceDetector the ability to detect GKE resources (if applicable) and updating Cloud Trace and Monitoring to export these resources when available. ",
    "head_branch": "gke_detector",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106a44ee515ce6a4e7e7",
    "number": 891,
    "body": "Solves https://github.com/open-telemetry/opentelemetry-python/issues/881\r\n\r\nIf TracerProvider is not set, context is never set with current span if the span is used. `get_current_span` will return None if a current span is not found in this case, which will crash applications that use it without configuring  a TracerProvider. We essentially want to have a \"no-op\" behaviour in this case instead of crashing.",
    "head_branch": "span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Return INVALID_SPAN on get_current_span instead of None (#891)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106b44ee515ce6a4e7e8",
    "number": 890,
    "body": "Full fastapi instrumentation. This is very similar to starlette.",
    "head_branch": "feature/fastapi-instrumentation-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fastapi instrumentation (#890)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106c44ee515ce6a4e7e9",
    "number": 889,
    "body": "Fixes #886 ",
    "head_branch": "issue_886",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update to OpenTelemetry Proto 0.4.0 (#889)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106d44ee515ce6a4e7ea",
    "number": 888,
    "body": "Add support for Histogram Aggregator. This is currently planned to be supported by using the DISTRIBUTION value type in Cloud Monitoring. @cnnradams is taking over this PR.",
    "head_branch": "monitoring_distro",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106d44ee515ce6a4e7eb",
    "number": 885,
    "body": "Fixes #555 ",
    "head_branch": "issue_555",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106e44ee515ce6a4e7ec",
    "number": 884,
    "body": "Fixes #883",
    "head_branch": "issue_883",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: Remove unused pytest marks (#884)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620106f44ee515ce6a4e7ed",
    "number": 882,
    "body": "Couldn't find any useful docs for Samplers when I was trying to figure out how they worked, so I added the documentation myself :)\r\n\r\nHaven't added sampling to any of the examples in the docs since they seem to rely on traces always being printed to the console, but if anyone has any suggestions for which ones should have sampling I can add it.",
    "head_branch": "sampling_docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Documentation for sampling (#882)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107044ee515ce6a4e7ee",
    "number": 880,
    "body": "Just adding some boilerplate stuff to the new exporters.",
    "head_branch": "add_license",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add license and manifest (#880)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107144ee515ce6a4e7ef",
    "number": 878,
    "body": "The metrics `duration`, `bytes_in`, `bytes_out` and `errors` are recorded. I also added tests for the gRPC client, since there were none previously.\r\n\r\nIn terms of documentation, I will add it when #788 is merged (or it can add it itself)\r\n\r\nquestion I have: The proto/client for the test case were mainly taken from the gRPC repo, which license should be used at the top? (grpc or OT?)",
    "head_branch": "grpc_metrics_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107244ee515ce6a4e7f0",
    "number": 877,
    "body": "Google cloud trace exporter exports an additional label with all spans of the form\r\n\r\ng.co/agent: \"opentelemetry-python <ot_version>; google-cloud-trace-exporter <exporter_version>\"\r\n\r\nCurrently, <ot_version> and <exporter_version> can have values \"0.10.0b\". The \"b\" makes it difficult for internal metrics at Google, so this PR removes those non numeric characters.",
    "head_branch": "strip_letters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Strip letters (#877)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107244ee515ce6a4e7f1",
    "number": 873,
    "body": "The opentelemetry.instrumentation namespace will be used by\r\nseveral packages as they become compliant to the opentelemetry specification.\r\n\r\nAs a result, top-level instrumentations who have a name identical to their\r\ninstrumented library (e.g. opentelemetry.instrumentation.requests or\r\nopentelemetry.instrumentation.starlette) will have a cyclic import\r\nerror due to opentelemetry-instrument's injection of the\r\nopentelemetry.instrument folder in the path.\r\n\r\nMoving auto-instrumentation to a submodule solves this problem, as\r\nthe only files in the opentelemetry.instrumentation.auto_instrument\r\nfolder is the sitecustomize and the __init__.py itself.\r\n\r\nI ran into this when trying to auto-instrument starlette (imports from module starlette, and Python discovers opentelemetry.instrumentation.starlette.",
    "head_branch": "feature/move-auto-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrument: moving auto-instrumentation to a submodule (#873)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107344ee515ce6a4e7f2",
    "number": 872,
    "body": "resolves #779 ",
    "head_branch": "exclude_lists",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change exclude lists to just exclude_urls, add tests for flask and django (#872)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107444ee515ce6a4e7f3",
    "number": 871,
    "body": "pypi.io does not allow re-uploading of a version, even if it is deleted. As such, bumping an incremental version of ext-datadog to publish a version with fixed dependency versions.",
    "head_branch": "release/0.10b0-bump-datadog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating datadog version (#871)\n\nIt is not possible to re-upload the same package to pypi. As such,\r\nupping the datadog version to ensure we can upload a proper one."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107544ee515ce6a4e7f4",
    "number": 868,
    "body": "eachdist.py release did not catch the version specifiers\r\nin ext-datadog's setup.cfg.\r\n\r\nI would also like to release this fix to 0.10b0, which raises an interesting question: how should we go about doing that?\r\n\r\nI see two options:\r\n\r\n1. delete old 0.10b0 for ext-datadog, and re-release it.\r\n2. update version of ext-datadog to 0.10b1, and release that.\r\n\r\n* pro for 1: no need to wrestle with upping all versions at the same time.\r\n* pro for 2: doesn't replace an existing package that was uploaded. This break an expectation around package contents not changing between versions. Although right now, ext-datadog is unusable anyway (0.10dev0 doesn't really exist in pypi)\r\n\r\nThoughts?",
    "head_branch": "release/0.10.0-dd-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updating datadog dependencies to 0.10b0 (#868)\n\neachdist.py release did not catch the version specifiers\r\nin ext-datadog's setup.cfg."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107644ee515ce6a4e7f5",
    "number": 867,
    "body": "In the last release, eachdist missed updating dependencies\r\non ext-datadog, which has a slightly different, but valid,\r\nway of specifying the version (omitting some spaces).\r\n\r\nMaking the eachdist regex more lenient to catch other valid\r\nversion specifications.\r\n\r\nAlso modifying the ext-datadog dependency specification to\r\nmatch the format of all the others.",
    "head_branch": "feature/eachdist-release-more-permissive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: Making eachdist release catch more deps (#867)\n\nIn the last release, eachdist missed updating dependencies\r\non ext-datadog, which has a slightly different, but valid,\r\nway of specifying the version (omitting some spaces).\r\n\r\nMaking the eachdist regex more lenient to catch other valid\r\nversion specifications.\r\n\r\nAlso modifying the ext-datadog dependency specification to\r\nmatch the format of all the others.\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107744ee515ce6a4e7f6",
    "number": 866,
    "body": "Fixes #817 \r\n\r\nThis PR aims to fix the issue of having the resource attribute in boto and botocore as `string` which fails when exported to Jaeger or zipkin.\r\n\r\nTests are fixed to reflect these changes by converting resource from `string` to `Resource`",
    "head_branch": "resource_str_to_Resource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/boto ext/botocore:Converted resource to hold Resource attribute than a string (#866)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107744ee515ce6a4e7f7",
    "number": 865,
    "body": "Fixes #818 \r\n\r\nThis PR aims at fix the serialization of tuple type values by coercing them into a string.\r\n\r\nTests make sure that this type is handled correctly. The current test is enhanced to include tuple type as well.",
    "head_branch": "serialize_tuple_objects",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/jaeger: Fixing the serialization of a tuple element by coercing it into a string (#865)\n\nCould not serialize attribute aws.region to tag when exporting via jaeger\r\nSerialize tuple type values by coercing them into a string, since Jaeger does not\r\nsupport tuple types."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107844ee515ce6a4e7f8",
    "number": 864,
    "body": "Set `INTERNAL` error span status for unhandled uwsgi exceptions before calling span.end().\r\n\r\nFixes #846 ",
    "head_branch": "issue-846",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/wsgi: Set span status on wsgi errors (#864)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107944ee515ce6a4e7f9",
    "number": 863,
    "body": "Fixes #842 \r\nFixes #845 ",
    "head_branch": "issue_842",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make it possible to set new values in Configuration (#863)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107a44ee515ce6a4e7fa",
    "number": 859,
    "body": "datadog exporter was still referencing API and SDK in version `0.10.dev0` instead of the current version",
    "head_branch": "fix-dd-exporter-dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/datadog: Fix API/SDK dependencies in datadog exporter (#859)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107b44ee515ce6a4e7fb",
    "number": 858,
    "body": "entry point for the `mysql` instrumentation pointed to `pymysql` instrumentation which caused loading of the instrumentation to fail since it does not exist.",
    "head_branch": "mysql-auto-instrumentation-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "mysql: Fix auto instrumentation entry point (#858)\n\nentry point for the mysql instrumentation pointed to pymysql instrumentation which caused loading of the instrumentation to fail since it does not exist.\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107c44ee515ce6a4e7fc",
    "number": 857,
    "body": "",
    "head_branch": "majorgreys/celery-timeouts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix(celery): increase async timeout for tests (#857)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107c44ee515ce6a4e7fd",
    "number": 856,
    "body": "Fixes #840\r\n\r\nThis PR aims at providing a simple warning message when the TracerProvider and MeterProvider are overridden. Any value other than `None` in the globals is considered a set and warnings are thrown on all subsequent set to these variables.\r\n\r\nTests make sure that the relevant log messages are generated when TracerProvider and MeterProvider are overridden.",
    "head_branch": "bitspradp/warning-log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added a warning log when the existing TracerProvider and MeterProvider are overridden (#856)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107d44ee515ce6a4e7fe",
    "number": 854,
    "body": "Including parameterized query parameters in the span's metadata probably shouldn't be the default since they often contain sensitive data (e.g. user session tokens, hashed user passwords, etc).\r\n\r\nTo fix that this PR:\r\n* Switches the default behavior for the asyncpg instrumentor to not capture the query parameters in its metadata\r\n* Updates the tests to ensure that ^ is working as expected\r\n",
    "head_branch": "asyncpg-skip-params-by-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/asyncpg: Shouldn't capture query parameters by default (#854)\n\n* Update CHANGELOG.md\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107e44ee515ce6a4e7ff",
    "number": 853,
    "body": "Adds Resource Detection for Google  tools like GCE and for environment variable resource detection OTEL_RESOURCE. Follows https://github.com/open-telemetry/oteps/pull/111 (Note at the time of writing this OTEP hasn't been updated after our offline discussion so there's currently some discrepancy). \r\n\r\nExample:\r\n```\r\nimport time\r\n\r\nfrom opentelemetry import metrics\r\nfrom opentelemetry.exporter.cloud_monitoring import (\r\n    CloudMonitoringMetricsExporter,\r\n)\r\nfrom opentelemetry.sdk.metrics import Counter, MeterProvider\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.exporter.cloud_trace import CloudTraceSpanExporter\r\nfrom opentelemetry.tools.resource_detector import GoogleCloudResourceDetector\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\nfrom opentelemetry.sdk.trace.export import SimpleExportSpanProcessor\r\nfrom opentelemetry.sdk.resources import Resource, get_aggregated_resources\r\n\r\nresources = get_aggregated_resources([GoogleCloudResourceDetector()])\r\n\r\nmetrics.set_meter_provider(MeterProvider(resource=resources))\r\nmeter = metrics.get_meter(__name__)\r\nmetrics.get_meter_provider().start_pipeline(\r\n    meter, CloudMonitoringMetricsExporter(), 5\r\n)\r\n\r\nrequests_counter = meter.create_metric(\r\n    name=\"request_counter\",\r\n    description=\"number of requests\",\r\n    unit=\"1\",\r\n    value_type=int,\r\n    metric_type=Counter,\r\n    label_keys=(\"environment\"),\r\n)\r\n\r\nstaging_labels = {\"environment\": \"staging\"}\r\n\r\nfor i in range(20):\r\n    requests_counter.add(25, staging_labels)\r\n    time.sleep(10)\r\n```\r\n\r\nTests will be added in the next commit. Doing some manual testing with the code above, it correctly scrapes information when run on a GCE instance and sends it to Monitoring properly.\r\n\r\nAddresses issue https://github.com/GoogleCloudPlatform/opentelemetry-operations-python/issues/8",
    "head_branch": "cloud_resources",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Resources prototype (#853)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620107f44ee515ce6a4e800",
    "number": 852,
    "body": "Fixes #832 \r\n\r\nThis can be implemented as a fix right now, but the issue highlights a more pressing matter, the fact that there is an overlap between configuration in the standard sense (the kind that uses `Configuration`) and the kind that is implemented by the end user as application code.",
    "head_branch": "issue_832",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update instrumentors to use span processors (#852)\n\nFixes #832. By having tracer creation occur on demand, late tracer provider configuration will be honored. \r\n\r\nThis resolves issues with instrumentation occurring before tracer providers are set by the application developer, which would result in the no-op tracer used for the lifetime of the instrumentation.\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108044ee515ce6a4e801",
    "number": 850,
    "body": "",
    "head_branch": "v0.10b-master-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "chore: v0.10b0 master update + dev version bump (#850)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108144ee515ce6a4e802",
    "number": 849,
    "body": "Adding changelog for features for Cloud Trace and Cloud Monitoring exporter that have been added since initial release.",
    "head_branch": "add_changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add changelog for cloud exporters (#849)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108144ee515ce6a4e803",
    "number": 848,
    "body": "",
    "head_branch": "release/0.10b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "release: updating version numbers and changelogs [0.10b0] (#848)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108244ee515ce6a4e804",
    "number": 847,
    "body": "",
    "head_branch": "test_flake",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108344ee515ce6a4e805",
    "number": 844,
    "body": "Fixes #843",
    "head_branch": "issue_843",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108444ee515ce6a4e806",
    "number": 841,
    "body": "Cloud Monitoring allows one update every 10 seconds for a unique tuple (metric_name, metric_label_value_1, metric_label_value_2 ...). To respect this, the exporter has an in memory map of when it last exported each tuple. There are two ways this can be broken.\r\n\r\n1. A user restarts the server more then once every 10 seconds. The in memory map will be deleted between restarts.\r\n2. A user has a multithreaded server or multiple servers.\r\n\r\nFor both cases, a fix has been suggested in the troubleshooting docs. For the second, the ability to add a unique identifier as a label_value has been added. Thanks to @cnnradams for bringing up this issue :)",
    "head_branch": "cloud_monitoring_unique",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add unique identifier to Cloud Monitoring exporter (#841)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108544ee515ce6a4e807",
    "number": 838,
    "body": "OTLP Exporter documentation mislead users wrong configuration which leads to missed traces in jaeger through oltp exporter",
    "head_branch": "fix/otlp-example-misleading",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OTLP Exporter documentation example misleading (#838)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108644ee515ce6a4e808",
    "number": 837,
    "body": "Closes #440 ",
    "head_branch": "majorgreys/pr440",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "feat(wsgi): low cardinality span name and name override (#837)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108744ee515ce6a4e809",
    "number": 836,
    "body": "Resolves #824\r\n\r\nAdds support for unified service tagging with environment variables `DD_SERVICE`, `DD_ENV`, `DD_VERSION` as well global tags with environment variable `DD_TAGS`. \r\n\r\nhttps://docs.datadoghq.com/tracing/setup/python/#configuration\r\nhttps://docs.datadoghq.com/getting_started/tagging/unified_service_tagging",
    "head_branch": "majorgreys/datadog-unified-service-tagging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/datadog: add environment variable configuration (#836)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108744ee515ce6a4e80a",
    "number": 835,
    "body": "Fixes #797 ",
    "head_branch": "issue_797",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "exporter/otlp: Add OTLP metric exporter (#835)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108844ee515ce6a4e80b",
    "number": 834,
    "body": "",
    "head_branch": "fix_last",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix last value aggregation bug + add tests (#834)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108944ee515ce6a4e80c",
    "number": 833,
    "body": "",
    "head_branch": "cloud_trace_gco",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add gco agent span label (#833)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108a44ee515ce6a4e80d",
    "number": 831,
    "body": "The lint job raising an error at installation:\r\n\r\n```\r\nERROR: Could not find a version that satisfies the requirement opentelemetry-ext-asgi==0.10.dev0 (from opentelemetry-instrumentation-starlette==0.10.dev0) (from versions: 0.8b0, 0.9b0)\r\nERROR: No matching distribution found for opentelemetry-ext-asgi==0.10.dev0 (from opentelemetry-instrumentation-starlette==0.10.dev0)\r\n```\r\n\r\nThe `opentelemetry-ext-asgi` should be installed before depending modules.",
    "head_branch": "majorgreys/fix-lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix(tests): install asgi early (#831)\n\nThe lint job raising an error at installation:\r\n\r\nERROR: Could not find a version that satisfies the requirement opentelemetry-ext-asgi==0.10.dev0 (from opentelemetry-instrumentation-starlette==0.10.dev0) (from versions: 0.8b0, 0.9b0)\r\nERROR: No matching distribution found for opentelemetry-ext-asgi==0.10.dev0 (from opentelemetry-instrumentation-starlette==0.10.dev0)\r\n\r\nThe opentelemetry-ext-asgi should be installed before depending modules."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108b44ee515ce6a4e80e",
    "number": 829,
    "body": "First step towards moving away from travis and onto circleci. This doesn't take over for any travis jobs yet, but we can start migrating them over to circleci once we're confident in their results.",
    "head_branch": "add-circleci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: adding circleci config for docs/lint (#829)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108c44ee515ce6a4e80f",
    "number": 828,
    "body": "The following PR configures CircleCI for building the different tox targets we use travis for today. It breaks the build into a core, an exporter and an instrumentation job for each version of python we're building. It also uses tox caching to speed up builds. The number of concurrent jobs we have available in Circle is around 16, compared to 5 in travis. the fastest build time I've seen for all components was around 7 minutes, slowest is comparable to what we're getting today in travis",
    "head_branch": "circleci-project-setup",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "chore: migrate to circleci (#828)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108c44ee515ce6a4e810",
    "number": 827,
    "body": "Shawn ran through the Cloud Trace installation process and found some issues, generally relating to the fact that VMs use Python2 by default. Also updated some links for Application Default Credentials.",
    "head_branch": "cloud_trace_friction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/cloudtrace: added more Cloud Trace troubleshooting tips (#827)\n\nCo-authored-by: Shawn Brunsting <brunsting@google.com>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108d44ee515ce6a4e811",
    "number": 823,
    "body": "Closes #792, closes #793\r\n\r\n- Added a script `scripts/proto_codegen.sh` to regenerate the python code from proto files in the [opentelemetry-proto](https://github.com/open-telemetry/opentelemetry-proto) repo. It does a fresh pull (or clone if needed) each time you build so just run the script to get updates from the other repo. Let me know if the script should be in a different place.\r\n- Generate `.pyi` stub files. This gives type hints for the strange code the protoc generates so tooling and mypy can make sense of it.\r\n- Added `.gitattributes` [pattern for the generated code](https://help.github.com/en/github/administering-a-repository/customizing-how-changed-files-appear-on-github) so you don't have to scroll through it (unless you want to 😄 )\r\n- Updated `MANIFEST.in` so it will pull in the pyi files.",
    "head_branch": "proto-script-792",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Script to regenerate proto code + pyi stubs (#823)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108e44ee515ce6a4e812",
    "number": 821,
    "body": "Here is an example snippet that will not report tracing without this patch:\r\n\r\n``` python\r\nwith psycopg2.connect(...) as conn, conn.cursor() as cursor:\r\n    cursor.execute(\"select 1;\")\r\n```",
    "head_branch": "dbapi-context-manager-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620108f44ee515ce6a4e813",
    "number": 820,
    "body": "Pretty similar to #777. Starlette instrumentation also works for instrument_app, but not auto-instrumentation due to FastAPI not calling Starlette's __init__.\r\n\r\nThought it would be better long term to just make a separate code base entirely.",
    "head_branch": "feature/fastapi-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109044ee515ce6a4e814",
    "number": 819,
    "body": "Some old services (e.g. https://github.com/googleapis/cloud-trace-nodejs/blob/master/samples/app.js) still use the http header \"X-Cloud-Trace-Context\" to pass SpanContext. This propagator allows us both to inject and extract info from this http header so we have backwards compatibility both upstream and downstream.\r\n\r\nAddresses issue https://github.com/GoogleCloudPlatform/opentelemetry-operations-python/issues/5",
    "head_branch": "cloud_propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add cloud trace propagator (#819)\n\nAdding initial cloud trace propagator\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109044ee515ce6a4e815",
    "number": 816,
    "body": "Follow up for #796 as requested by @lzchen. I also renamed a few variables names from `counter*` -> `sum_agg*`.",
    "head_branch": "rename-counteraggregator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api/sdk: Rename CounterAggregator -> SumAggregator (#816)\n\nEnables broader usage of the aggregator, across multiple counter types."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109144ee515ce6a4e816",
    "number": 815,
    "body": "Follow up for #796 as requested by @lzchen. I also renamed a few variables names from `counter*` -> `sum_agg*`.",
    "head_branch": "rename-counteraggregator-754",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109244ee515ce6a4e817",
    "number": 814,
    "body": "Hi everyone!\r\n\r\nAsyncpg instrumentation. Tested on versions 0.12.0 and 0.20.1",
    "head_branch": "feature/asyncpg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Instrumentation for asyncpg (#814)\n\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109344ee515ce6a4e818",
    "number": 813,
    "body": "",
    "head_branch": "v0.9b0-master-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version number"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109444ee515ce6a4e819",
    "number": 812,
    "body": "",
    "head_branch": "release/0.9b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "release: updating version numbers and changelogs (#812)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109544ee515ce6a4e81a",
    "number": 811,
    "body": "",
    "head_branch": "release/0.9b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109544ee515ce6a4e81b",
    "number": 810,
    "body": "Address an inconsistency with the [the semantic conventions for HTTP](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md) the Datadog exporter uses to specify the HTTP route. ",
    "head_branch": "majorgreys/datadog-resource-target",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix(datadog): use http.target not http.path (#810)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109644ee515ce6a4e81c",
    "number": 809,
    "body": "",
    "head_branch": "opentelemetry-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: add opentelemetry-test as a dependancy (#809)\n\nopentelemetry-test was not listed as a test dependency in the asgi instrumentation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109744ee515ce6a4e81d",
    "number": 808,
    "body": "Moving some of the prepare_release.sh script into eachdist.py to clean up the process to prepare a release. ",
    "head_branch": "eachdist-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: moving code to prepare the release to eachdist (#808)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109844ee515ce6a4e81e",
    "number": 807,
    "body": "Minor cleanup of setup.cfg files. Updated the example app to move configuration from setup.py into setup.cfg as well.",
    "head_branch": "fix-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: standardizing setup.cfg files (#807)\n\nMinor cleanup of setup.cfg files. Updated the example app to move configuration from setup.py into setup.cfg as well.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109944ee515ce6a4e81f",
    "number": 806,
    "body": "I missed this in my last 2 instrumentation PRs :grimacing: \r\n\r\nAlso did some formatting for the Pyramid docs\r\n\r\nFixes #805 ",
    "head_branch": "pyramid_instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Docs for Pyramid and SQLite3 (#806)\n\nAdding missing documentation for Pyramid and SQLite3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109a44ee515ce6a4e820",
    "number": 804,
    "body": "I forgot to add the tests for Cloud Monitoring exporter into tox.ini :/",
    "head_branch": "cloud_montoring_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: add test coverage for Cloud Monitoring exporter (#804)\n\nPreviously cloud monitoring was missing coverage."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109b44ee515ce6a4e821",
    "number": 803,
    "body": "Update the Datadog docs for installation and using propagation. ",
    "head_branch": "majorgreys/datadog-exporter-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: update datadog docs (#803)\n\nUpdate the Datadog docs for installation and using propagation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109b44ee515ce6a4e822",
    "number": 802,
    "body": "Already added to the approvers group, this is updating the readme only.\r\n\r\nFixes #799 ",
    "head_branch": "codeboten/add-majorgreys-approver",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "chore: Add majorgreys to approvers (#802)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109c44ee515ce6a4e823",
    "number": 801,
    "body": "Hi, everyone!\r\n\r\nThis is opentelemetry integration to aiopg. It based on dbapi extension with async wrapper and instumentor.",
    "head_branch": "feature/aiopg_integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/aiopg: Add instrumentation for aiopg  (#801)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109d44ee515ce6a4e824",
    "number": 800,
    "body": "Hi, everyone!\r\n\r\nThis is opentelemtry integration to aiopg. It based on dbapi extension with async wrapper and instumentor.",
    "head_branch": "feature/aiopg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109e44ee515ce6a4e825",
    "number": 796,
    "body": "Closes #754. Very similar to `Counter`, I just copied the classes and renamed.\r\n\r\nThings that could be implemented differently:\r\n- `UpDownCounter` could subclass `Counter`, but I think that is a confusing way to do it.\r\n- Instead of using `BoundCounter`, I could copy it to a new class `BoundUpDownCounter`.\r\n- Instead of using `CounterAggregator`, I could create a `UpDownCounterAggregator`. I think it would make more sense to rename `CounterAggregator` -> `SumAggregator` and use it in both. Then `SumAggregator` can be used in the views API.\r\n\r\nLet me know what you think!",
    "head_branch": "up-down-counter-754",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api/sdk: Implement UpDownCounter instrument (#796)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620109f44ee515ce6a4e826",
    "number": 795,
    "body": "Quick PR adding some troubleshooting tips for users with common failures",
    "head_branch": "cloud_trace_troubles",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "cloud-trace: add troubleshooting (#795)\n\nadding some troubleshooting tips for users with common failures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a044ee515ce6a4e827",
    "number": 794,
    "body": "eachdist.py did not support the installation of test packages,\r\n(as defined by the extra_requires:test package group). As a\r\nresult, test packages were being added to dev-requirements.txt\r\n\r\nBy having eachdist.py develop install test packages, and moving\r\ndevelop/test package definitions to the individual instrumentations,\r\nit is easier to determine which packages require which dependencies\r\nfor testing purposes, and enables support for existing dependencies\r\nthat follow the extra_requires:test pattern.",
    "head_branch": "feature/eachdist-include-test-deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: installation of test packages in eachdist (#794)\n\neachdist.py did not support the installation of test packages,\r\n(as defined by the extra_requires:test package group). As a\r\nresult, test packages were being added to dev-requirements.txt\r\n\r\nBy having eachdist.py develop install test packages, and moving\r\ndevelop/test package definitions to the individual instrumentations,\r\nit is easier to determine which packages require which dependencies\r\nfor testing purposes, and enables support for existing dependencies\r\nthat follow the extra_requires:test pattern."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a044ee515ce6a4e828",
    "number": 791,
    "body": "Addresses [#750]\r\n\r\nIntroduces a way to start the collection/export process via `start_pipeline` as part of the `MeterProvider`.\r\nSee below for usage:\r\n```\r\nmetrics.set_meter_provider(MeterProvider())\r\nmeter = metrics.get_meter(__name__)\r\nmetrics.get_meter_provider().start_pipeline(meter, ConsoleMetricsExporter(), 5)\r\n```\r\nThis makes it so that the user does not have to instantiate a `PushController` instance themselves (a concept that is quite confusing) and allows the user a mechanism to explicit say when they want to start collecting/exporting metrics. This makes it so that we do not have to worry about any metrics (or views in the future) defined during/after a collection has already started.\r\n\r\nAs well, the `atexit` logic initially part of `PushController` now belongs to the `MeterProvider`, which will call `shutdown` on all controllers and exporters upon application exit.\r\n\r\nI'm using \"pipeline\" as the term based off the [Go](https://github.com/open-telemetry/opentelemetry-go/blob/21d094af438ee964cfffe677b1677c1e6062448e/exporters/metric/stdout/stdout.go#L122) implementation but open to other suggestions.",
    "head_branch": "controller",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add start_pipeline to MeterProvider in SDK, atexit moved to MeterProvider (#791)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a144ee515ce6a4e829",
    "number": 790,
    "body": "As per https://github.com/open-telemetry/opentelemetry-specification/pull/427, we need an interface for users to record errors. This PR provides one possible solution to record the error as an event on the span.",
    "head_branch": "add_record_error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: Adding record_error to span API (#790)\n\nAs per open-telemetry/opentelemetry-specification#427, we need an interface for users to record errors."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a244ee515ce6a4e82a",
    "number": 789,
    "body": "Resolves [#755] and [#756]\r\n\r\nAbstracts `Observer` instrument as a  base class for all asynchronous instruments.\r\n\r\nSumObserver and UpDownSumObserver are also cumulative, so they use the LastValueAggregator to record.\r\nObserved values must also be non-decreasing, compared to the previous observed value for SumObserver. Observed values can be any value for UpDownSumObserver .",
    "head_branch": "sumobs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add SumObserver and UpDownSumObserver instruments (#789)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a344ee515ce6a4e82b",
    "number": 788,
    "body": "fixes #661 ",
    "head_branch": "feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding gRPC instrumentor  (#788)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a444ee515ce6a4e82c",
    "number": 787,
    "body": "Fixes #786 ",
    "head_branch": "issue_785",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/otlp: Add OTLP span exporter (#787)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a544ee515ce6a4e82d",
    "number": 784,
    "body": "Closes #778.",
    "head_branch": "feature/add-lzhen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add lzchen to maintainers (#784)\n\n* Add lzchen to maintainers\r\n\r\nCloses #778.\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a644ee515ce6a4e82e",
    "number": 780,
    "body": "Resolves #629 and supersedes #648.\r\n\r\nThis is largely a migration of the Datadog-donated integration of Celery though I have made an effort here to add tests for asynchronous tasks. In order to do so, I have used the pytest fixtures provided by Celery. At times I've had to add workarounds for known issues in celery.\r\n\r\nAs a follow-up on this PR, we should address the requests for better handling revoked and rejected tasks https://github.com/open-telemetry/opentelemetry-python/pull/648#pullrequestreview-420692346 and canvases https://github.com/open-telemetry/opentelemetry-python/pull/648#issuecomment-637543329.",
    "head_branch": "majorgreys/instrumentor-celery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add instrumentation for Celery (#780)\n\nPorted from the DataDog instrumentation.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: alrex <alrex.boten@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a644ee515ce6a4e82f",
    "number": 777,
    "body": "Addresses part of #710. ",
    "head_branch": "feature/starlette-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "starlette instrumentation (#777)\n\nadding an initial starlette instrumentation.\r\n\r\ntox does exact match on fields delimited by a dash. Thus,\r\nany instrumentation that includes \"instrumentation\" in the name\r\nwould collide with testing of the \"opentelemetry-instrumentation\"\r\npackage.\r\n\r\nRenaming opentelemetry-instrumentation to opentelemetry-instrumentation-base to fix that.\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a744ee515ce6a4e830",
    "number": 776,
    "body": "This instrumentation follows the same pattern as the Flask implementation, to be able to create the span with the proper name (different than ddtrace/opencensus implementations)\r\n\r\nResolves #632",
    "head_branch": "pyramid_instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Instrumentation for Pyramid (#776)\n\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a844ee515ce6a4e831",
    "number": 775,
    "body": "This pull request addresses the behavior when setting byte type attributes in a span. When a byte type attribute is set, the exporter fails to convert the span to a JSON structure because the byte type is not JSON serializable, and the exporter crashes. This change decodes byte type attributes before adding them to the attributes dictionary.",
    "head_branch": "sdk-exporter-bytes-attribute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bugfix: Fix for byte type attributes crashing spans\t (#775)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010a944ee515ce6a4e832",
    "number": 774,
    "body": "This pull request addresses the behavior when setting byte type attributes in a span. When a byte type attribute is set, the exporter fails to convert the span to a JSON structure because the byte type is not JSON serializable, and the exporter crashes. This change decodes byte type attributes before adding them to the attributes dictionary.",
    "head_branch": "sdk-exporter-bytes-attribute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010aa44ee515ce6a4e833",
    "number": 772,
    "body": "### summary \r\n\r\n 👋 This PR adds pymemcache instrumentation and tests, addressing: https://github.com/open-telemetry/opentelemetry-python/issues/766 . Still a few open questions I have, but at a place where I think this can be reviewed. By and large I tried to port things from [dd-trace-py's pymemcache instumentation](https://github.com/DataDog/dd-trace-py/tree/master/ddtrace/contrib/pymemcache)\r\n\r\n- Open Questions / Todos:\r\n \r\n  - not 100% how to handle changelog and versioning, as well as `setup.cfg` and `setup.py` files. Took some educated guesses and basically just borrowed the structure of other integrations as a guide, let me know if I've botched anything here\r\n\r\n  - Tried to attach licenses everywhere I could but lmk if I've missed anything. \r\n\r\n   - this opentelemetry-ext-pymemcache implementation differs a bit from dd-trace-py, in that dd-trace-py replaces the entire `Client` with a wrapped client, whereas opentelemetry-ext-pymemcache is only wrapping specific methods on the original `Client`. The dd-trace-py approach relies on `Pin`, which isn't a construct available in opentelemetry-python afaik. There were a few gotchas with this approach (like ensuring methods aren't patched multiple times) but overall it behaves the same.\r\n\r\n  - Tried to write the tests as closely as I could to the originals in dd-trace-py but was not super sure how to test some of config/client setting stuff, so left that out for now.\r\n\r\n- Example Usage: \r\n```python\r\n    from opentelemetry import trace\r\n    from opentelemetry.sdk.trace import TracerProvider\r\n    from opentelemetry.ext.pymemcache import PymemcacheInstrumentor\r\n    trace.set_tracer_provider(TracerProvider())\r\n    from pymemcache.client.base import Client\r\n    client = Client(('localhost', 11211))\r\n    client.set('some_key', 'some_value')\r\n```\r\n\r\nThanks for taking a look, happy to help however i can and address any feedback.",
    "head_branch": "add_pymemcache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pymemcache: Add pymemcache instrumentation (#772)\n\ninitial implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ab44ee515ce6a4e834",
    "number": 770,
    "body": "fixes #767 ",
    "head_branch": "update-approvers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: removing Oberon00 from approvers (#770)\n\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ac44ee515ce6a4e835",
    "number": 769,
    "body": "Closes #768. Removes 8 type ignores across api.\r\n\r\n- Removed file-wide `type: ignore` in `opentelemetry-api/src/opentelemetry/configuration/__init__.py`\r\n  * Previously, each config from environment variables was stored directly on the class as `cls._{key}` and a property descriptor was added at `cls.{key}` to access it (read-only). I switched this to just store each value in a dict and instead allow access by overriding `__getattr__()`, which is a little simpler and easier to add typing to directly on the method declaration.\r\n  * This preserves the same semantics and adds typing\r\n- Instead of using `getattr()`, just call `Configuration().get()` which is typed.\r\n- Added `_load_trace_provider()`/`_load_meter_provider()` to keep all the casting in the utils\r\n- Added `opentelemetry-api/src/opentelemetry/__init__.pyi` (that's **`pyi`**)\r\n  * `opentelemetry` directory is a namespace package and shouldn't have an `__init__.py`. However, mypy was seeing everything in `opentelemetry-api/src/opentelemetry/metrics/__init__.py` as if it was the package `metrics` and not `opentelemetry.metrics`.\r\n  * [Adding `__init__.pyi` lets mypy know `opentelemetry` is a package without losing the namespace package behavior](https://github.com/python/mypy/issues/6989#issuecomment-502156258).\r\n- Upgraded mypy 0.770\r\n\r\nNote, tox has a bug where it doesn't detect that the requirements file was updated. To get the new mypy version, force tox to recreate its venvs: `tox --recreate`",
    "head_branch": "typing-fixes-313",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "refactor: Typing fixes #768, upgrade mypy to 0.770 (#769)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ac44ee515ce6a4e836",
    "number": 765,
    "body": "Exception handling for requests instrumentor\r\n\r\n* Canonical codes for different types of exceptions\r\n* Span attributes extracted from exception\r\n* Correct span closing for requests with raised errors (Didn't found my trace as span wasn't closed correct, there was a RequestException)",
    "head_branch": "feature/requests-exception-handling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "requests: better exception handling (#765)\n\nCanonical codes for different types of exceptions\r\n\r\nSpan attributes extracted from exception\r\n\r\nCorrect span closing for requests with raised errors (A span wasn't closed due to a RequestException)\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ad44ee515ce6a4e837",
    "number": 764,
    "body": "Part of [#753].\r\n\r\nName change.\r\n\r\nValueObservers are an API element, so default implementations were made for them in the API.",
    "head_branch": "value_observer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api/sdk: Observer to ValueObserver (#764)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ae44ee515ce6a4e838",
    "number": 763,
    "body": "Broken link here\r\nhttps://opentelemetry-python.readthedocs.io/en/stable/examples/basic_meter/README.html#installation",
    "head_branch": "hectorhdzg/docsfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Fix broken link (#763)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010af44ee515ce6a4e839",
    "number": 761,
    "body": "Part of [#752].\r\n\r\nSimple name change.",
    "head_branch": "value_recorder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename Measure to ValueRecorder (#761)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b044ee515ce6a4e83a",
    "number": 751,
    "body": "Part of [#750]\r\nSimilar to how `Tracer` has a [reference](https://github.com/open-telemetry/opentelemetry-python/blob/master/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py#L590) to `TracerProvider` and [configuration](https://github.com/open-telemetry/opentelemetry-python/blob/master/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py#L727) are done through the `TracerProvider` and passed along to each `Tracer` created for it. Apply similar logic for `stateful` for `MeterProvider` and `Meter`. \r\n\r\nThe purpose of this in terms of SDK design is to move a lot of the configuration to one central place (MeterProvider), instead of giving responsibility to other components. The next logical step would be to move PushController as part of the MeterProvider and have MeterProvider control the config [Dot Net](https://github.com/open-telemetry/opentelemetry-dotnet/blob/master/samples/Exporters/Console/TestPrometheus.cs#L60) is doing something like this). Another option is introduce a new \"Pipeline\" concept, in which we register each component to a `Pipeline` and that will be the path of logic that metrics will take. [Go](https://github.com/open-telemetry/opentelemetry-go/blob/master/example/prometheus/main.go#L35) is doing something like this. Any suggestions not related to this PR please discuss in [#750].",
    "head_branch": "metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "metrics api/sdk: Move \"config\" out from Meter into MeterProvider (#751)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b144ee515ce6a4e83b",
    "number": 749,
    "body": "For #664, in PushController before exit, flush the meter by calling `tick()`.\r\n\r\nMetrics are batched in the `meter` and flushed each `tick()` of the PushController. The fix is to additionally call `tick()` before exiting.",
    "head_branch": "flush-metrics-664",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Flush metrics on exit (#749)\n\nIn PushController before exit, flush the meter by calling tick(), ensuring that all metrics are flushed.\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b244ee515ce6a4e83c",
    "number": 748,
    "body": "Update the README for #600 and #684.",
    "head_branch": "update-approvers-maintainers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: Update approvers/maintainers for recent changes (#748)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b244ee515ce6a4e83d",
    "number": 747,
    "body": "This PR adds elastic search instrumentation mostly adapting existing instrumentation from OpenTracing. The PR contains a few unusual things:\r\n\r\n1. PR allows the BaseInstrumentor class to receive initialization arguments. This'll allow users to configure instrumentation in code in addition or instead of environment vars. elasticsearch instrumentation allows users to customize the span name prefix. This can be done by either setting an env var or by passing the prefix as a param to the instrumentor during initialization.\r\n\r\n2. Instead of one new tox env, it adds four new envs. One for each supported version of elasticsearch-py. Since each new tox env needs to test for a different version of elasticsearch, the tests use a lot of conditional imports based on elasticsearch version. I'm not sure if there is a better way. This looked like the simplest solution. \r\n\r\n3. It updates the lint env to install test dependencies for every package in addition to regular dependencies. This is required as the linter lints test code as well and any packages used by tests that are not used by the actual code wouldn't be installed otherwise. elasticsearch exposed this problem as it adds `elasticsearch-dsl` as a test dependency. AFAIK, no other instrumentation have test distinct test dependencies like this. \r\n\r\n4. Some test helpers for specific elasticsearch versions contain some pylint ignore rules as the latest elasticsearch version would be installed in the lint env. \r\n\r\n",
    "head_branch": "elasticsearch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Initial elasticsearch instrumentation (#747)\n\nThis commit adds auto-instrumentation for elasticsearch. The\r\ninstrumentation has been mostly ported over from OpenTracing\r\nelasticsearch instrumentation.\r\n\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b344ee515ce6a4e83e",
    "number": 745,
    "body": "",
    "head_branch": "v0.8b0-master-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: update master to 0.9.dev0 (#745)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b444ee515ce6a4e83f",
    "number": 744,
    "body": "",
    "head_branch": "release/0.8b0-auto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[pre-release] Update changelogs, version 0.8b0 (#744)\n\n* updating changelogs and version to 0.8b0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b544ee515ce6a4e840",
    "number": 743,
    "body": "",
    "head_branch": "fix-script",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: updating release markdown and script to fetch master (#743)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b644ee515ce6a4e841",
    "number": 742,
    "body": "",
    "head_branch": "release/0.8b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b744ee515ce6a4e842",
    "number": 741,
    "body": "TL;DR:\r\n- opentelemetry-auto-instrumentation package was renamed to opentelemetry-instrumentation\r\n- opentelemetry-auto-instrumentation executable was renamed to opentelemetry-instrument (probably controversial)\r\n- Added utils file to opentelemetry-instrumentation, use it in instrumentations\r\n\r\nResolves #735, resolves #610, resolves #667, resolves #608",
    "head_branch": "utils-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "refactor: Add common utils to opentelemetry-auto-instrumentation, rename opentelemetry-auto-instrumentation (#741)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b744ee515ce6a4e843",
    "number": 740,
    "body": "Set the sampling rate in the Datadog exported span if span was sampled with the `ProbabilitySampler`.",
    "head_branch": "majorgreys/datadog-sampling-rate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "datadog: set sampling rate (#740)\n\nSet the sampling rate in the Datadog exported span if span was sampled with the ProbabilitySampler.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b844ee515ce6a4e844",
    "number": 739,
    "body": "Adding an exporter that supports sending metrics data to cloud monitoring (formerly known as stackdriver). Addresses issue https://github.com/open-telemetry/opentelemetry-python/issues/736",
    "head_branch": "cloud_monitoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "cloud-monitor: Add cloud monitoring exporter (#739)\n\nAdding an exporter that supports sending metrics data to cloud monitoring (formerly known as stackdriver).\r\n\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010b944ee515ce6a4e845",
    "number": 737,
    "body": "",
    "head_branch": "amend-changelogs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: amend changelogs (#737)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ba44ee515ce6a4e846",
    "number": 734,
    "body": "More work to improve release process:\r\n- adding RELEASING.md file to describe release process\r\n- updated `prepare_release.sh` script to allow it to be run manually by maintainers\r\n- removed workflow to automatically publish PR, current recommendation from otel technical committee is not to use bot accounts",
    "head_branch": "prepare-release-script",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "infra: removing workflow, updating script (#734)\n\nMore work to improve release process:\r\n\r\n- adding RELEASING.md file to describe release process\r\n- updated prepare_release.sh script to allow it to be run manually by maintainers\r\n- removed workflow to automatically publish PR, current recommendation from otel technical committee is not to use bot accounts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010bb44ee515ce6a4e847",
    "number": 733,
    "body": "Adding a step to test that uploading packages to pypi should work.\r\n\r\nThis should prevent issues that occurred in the release of 0.7.0 from happening where a classifier was set incorrectly (3 - Beta), causing pypi to return a 400 and fail publishing packages.",
    "head_branch": "infra/check-against-testpypi",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "infra: adding step to publish action (#733)\n\nAdding a step to test that uploading packages to pypi should work.\r\n\r\nThis should prevent issues that occurred in the release of 0.7.0 from happening where a classifier was set incorrectly (3 - Beta), causing pypi to return a 400 and fail publishing packages."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010bc44ee515ce6a4e848",
    "number": 731,
    "body": "Fixes #730",
    "head_branch": "issue_730",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: Remove commented out test case (#731)\n\nFixes #730"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010bc44ee515ce6a4e849",
    "number": 729,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: Fix error message (#729)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010bd44ee515ce6a4e84a",
    "number": 728,
    "body": "Fixes #785 ",
    "head_branch": "issue_669",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "proto: Add proto files (#728)\n\nInitial addition of opentelemetry-proto based protobufs.\r\n\r\nCo-authored-by: alrex <alrex.boten@gmail.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010be44ee515ce6a4e84b",
    "number": 727,
    "body": "re-creation of #274 as I'm still figuring out how to push to a fork. Includes fixes to get tests to pass.",
    "head_branch": "mauricio/add_testbed_for_otshim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "opentracing-shim: add testbed for otshim (#727)\n\nThis commit ports the OpenTracing testbed[1] to check that the ot-shim is\r\nworking as expected using different frameworks.\r\n\r\nGevent doesn't support context vars yet[2], so those tests are not compatible\r\nwith opentelemetry and were not ported.\r\n\r\n[1] https://github.com/opentracing/opentracing-python/tree/master/testbed\r\n[2] https://github.com/gevent/gevent/issues/1407\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010bf44ee515ce6a4e84c",
    "number": 725,
    "body": "This is the followup issue of #718.",
    "head_branch": "add-to_json-unit-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Add a unit test for to_json (#725)\n\nAdding a unit test to the to_json method in the span.\r\n\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c044ee515ce6a4e84d",
    "number": 724,
    "body": "Fixes #702 ",
    "head_branch": "fix-702",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Span.resource will now default to an empty resource (#724)\n\nRight now, A resource object attached to a Span can be None. That means that there's two similar objects that refer to an empty resource: None, and the _EMPTY_RESOURCE global.\r\n\r\nWe should just always default to the _EMPTY_RESOURCE object: this avoids None checks in exporters.\r\n\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c144ee515ce6a4e84e",
    "number": 723,
    "body": "Minor issues with the imports for these two examples.",
    "head_branch": "majorgreys/fix-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: fix imports for pymongo and psycopg2 (#723)\n\nIncorrect import documentation in both pymongo and psycopg2."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c144ee515ce6a4e84f",
    "number": 719,
    "body": "Adds instrumentation for python sqlite3 library.\r\n\r\nThere is a lot of repeat code in the SQLite3Instrumentor (shared with every other DBAPI instrumentor), it could possibly be pulled out into a DBAPIInstrumentor that can be subclassed in this PR or another.\r\n\r\nResolves #683 ",
    "head_branch": "sqlite3-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SQLite3 Instrumentation (#719)\n\nAdds instrumentation for python sqlite3 library."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c244ee515ce6a4e850",
    "number": 718,
    "body": "We want to get a json of span without indent, but it's not possible with `Span#to_json` because the method uses hard-coded indent. We currently use a workaround of `json.loads(span.to_json())` which is not efficient in the performance.",
    "head_branch": "specify-to-json-indent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Specify to_json indent from arguments (#718)\n\nWe want to get a json of span without indent, but it's not possible with Span#to_json because the method uses hard-coded indent. We currently use a workaround of json.loads(span.to_json()) which is not efficient in the performance.\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c344ee515ce6a4e851",
    "number": 717,
    "body": "Hi everyone!\r\n\r\nThis is very cheap correction to be able integration for django >= 1.10",
    "head_branch": "feature/django-downgrade-1.10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/django: django downgrade to 1.10 (#717)\n\nAdding support for django 1.10+"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c444ee515ce6a4e852",
    "number": 716,
    "body": "Updating #402 which had been inactive for some time to get remaining to resolve merge conflicts and address any remaining issues.",
    "head_branch": "majorgreys/feature/ext_asgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "asgi: Add ASGI middleware (#716)\n\nAdding an ASGI extension.\r\n\r\nCo-authored-by: Emil Madsen <sovende@gmail.com>\r\nCo-authored-by: alrex <alrex.boten@gmail.com>\r\nCo-authored-by: Florimond Manca <florimond.manca@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c544ee515ce6a4e853",
    "number": 714,
    "body": "Addresses https://github.com/open-telemetry/opentelemetry-python/issues/713. Previously it was possible for a user (acting against the api) to mutate a default variable. Deepcopying solves this issue.",
    "head_branch": "deep_copy_attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bugfix: deep copy empty attributes (#714)\n\nAddresses #713. Previously it was possible for a user (acting against the api) to mutate a default variable."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c644ee515ce6a4e854",
    "number": 709,
    "body": "fixes https://github.com/open-telemetry/opentelemetry-python/issues/682\r\n\r\nTODO: add unit test that proves it",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "aiohttp_client: fix propagation of traceparent in aiohttp_client (#709)\n\nFix propagation of aiohttp client traces, which were not properly injected previously.\r\n\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c744ee515ce6a4e855",
    "number": 708,
    "body": "Hi everyone!\r\n\r\nMy integration stuck with this little error. If to headers argument explicitly passed None value - it raises exception",
    "head_branch": "fix/requests-none-header-argument",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: requests headers none argument fix (#708)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c744ee515ce6a4e856",
    "number": 707,
    "body": "This PR implements the missing part of exporting the TraceProvider resource into Zipkin.\r\nSame as in [js](https://github.com/open-telemetry/opentelemetry-js/blob/f978377f2f324fa0b52c4964caf9d8c810821123/packages/opentelemetry-exporter-zipkin/src/transform.ts#L86).\r\n\r\nThis PR also aligns Zipkin behavior with my previous PR done to jaeger - https://github.com/open-telemetry/opentelemetry-python/pull/645.\r\n\r\nI wanted to preserve the existing behavior of the `tags` being `None` if attributes do not exist, so I ended with a nested `if`, although I think it's worth discussing maybe the default value should always be `{}`.\r\n\r\nAs for the test, I added another span to cover all tags permutations:\r\n1. Span only has attributes.\r\n2. Span only has resource.\r\n3. Span has both resource and attributes.\r\n4. Span doesn't have either. ",
    "head_branch": "feat/zipkin/resource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/Zipkin - Transform resource to tags when exporting (#707)\n\nImplement the missing part of exporting the TraceProvider resource into Zipkin.\r\nSame as in js. Resources are now included into span tags.\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c844ee515ce6a4e857",
    "number": 705,
    "body": "This adds `DatadogFormat`for extracting and injecting trace contexts with Datadog-specific headers.",
    "head_branch": "majorgreys/datadog-propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "datadog: Add Datadog propagator (#705)\n\nThis adds DatadogFormatfor extracting and injecting trace contexts with Datadog-specific headers."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010c944ee515ce6a4e858",
    "number": 703,
    "body": "",
    "head_branch": "fix-pymongo-event-object-and-string-commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ca44ee515ce6a4e859",
    "number": 701,
    "body": "…formation is present (replica sets.. possibly sharding information).  Ensure that command is stringy when attempting to concatenate strings.  Suggest use fstrings if older pythons can be depreciated",
    "head_branch": "fix-pymongo-event-object-and-string-commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010cb44ee515ce6a4e85a",
    "number": 700,
    "body": "…formation is present (replica sets.. possibly sharding information).  Ensure that command is stringy when attempting to concatenate strings.  Suggest use fstrings if older pythons can be depreciated",
    "head_branch": "fix-pymongo-event-object-and-string-commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010cb44ee515ce6a4e85b",
    "number": 699,
    "body": "Add safety net by using bson/json conversion and reloading into a dict via json",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010cc44ee515ce6a4e85c",
    "number": 698,
    "body": "Addresses https://github.com/open-telemetry/opentelemetry-python/issues/287.\r\nAdding a Cloud Trace (formerly known as stackdriver) trace exporter.",
    "head_branch": "stackdriver_exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "cloud-trace: Cloud Trace exporter (#698)\n\nCo-authored-by: Cheng-Lung Sung <clsung@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010cd44ee515ce6a4e85d",
    "number": 697,
    "body": "Hi there,\r\n\r\nThe documentation for the requests package was a little outdated, so I fixed it.\r\n\r\nLet me know what you think.\r\n\r\nHåkon",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: update docs for requests plugin (#697)\n\nupdating incorrect documentation for requests plugin."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ce44ee515ce6a4e85e",
    "number": 696,
    "body": "This addresses the linting problems caused by a newer version of grpc:\r\n\r\n```\r\n************ Module _interceptor\r\n\r\next/opentelemetry-ext-grpc/src/opentelemetry/ext/grpc/grpcext/_interceptor.py:167:0: W0223: Method '__enter__' is abstract in class 'Channel' but is not overridden (abstract-method)\r\n\r\next/opentelemetry-ext-grpc/src/opentelemetry/ext/grpc/grpcext/_interceptor.py:167:0: W0223: Method '__exit__' is abstract in class 'Channel' but is not overridden (abstract-method)\r\n```",
    "head_branch": "fix-grpc-failure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: new version of grpc causes linting issues if these aren't implemented (#696)\n\nThis addresses the linting problems caused by a newer version of grpc:\r\n\r\n************ Module _interceptor\r\n\r\next/opentelemetry-ext-grpc/src/opentelemetry/ext/grpc/grpcext/_interceptor.py:167:0: W0223: Method '__enter__' is abstract in class 'Channel' but is not overridden (abstract-method)\r\n\r\next/opentelemetry-ext-grpc/src/opentelemetry/ext/grpc/grpcext/_interceptor.py:167:0: W0223: Method '__exit__' is abstract in class 'Channel' but is not overridden (abstract-method)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010cf44ee515ce6a4e85f",
    "number": 695,
    "body": "Fixes #541",
    "head_branch": "issue_541",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "opencensus: Rename otcollector to opencensus (#695)\n\nrenaming otcollector to opencensus, as it's using opencensus under the hood. This was originally intended to be replaced by otlp, by a new package can be created for that instead. \r\n\r\nCo-authored-by: alrex <alrex.boten@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d044ee515ce6a4e860",
    "number": 694,
    "body": "1. Implemented BaseInstrumentor interface to enable auto-instrumentation\r\n2. Added integration tests (same tests as other db integrations)\r\n\r\nSince the psycopg2 connection object can't have properties added to it (for example, ```self._db_api_integration = db_api_integration``` throws an error), I instead closed these properties around the tracing wrappers.\r\n\r\nResolves #633 ",
    "head_branch": "psycopg2-baseinstrumentor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/psycopg2: Implement BaseInstrumentor interface (#694)\n\n- Implemented BaseInstrumentor interface to enable auto-instrumentation\r\n- Added integration tests (same tests as other db integrations)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d144ee515ce6a4e861",
    "number": 693,
    "body": "Some build time improvements:\r\n- split lint/docker-tests/docs into their own steps. Since lint is usually the thing that fails anyways, it's good to have it run first. We could make the build depend on this step to prevent slowing other builds waiting in the pipeline (since we only have 5 workers)\r\n- move all pip install commands into a single line per test environment. this reduces the overhead of calling the pip command separately multiple times per environment.\r\n- removed pip upgrade command. This one I'm not sure about, it could potentially lead to broken builds in the future, but its taking roughly 10s each time it's done, which adds up as we add more extensions.\r\n",
    "head_branch": "faster-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "infra: accelerate builds (#693)\n\nSome build time improvements:\r\n\r\n- split lint/docker-tests/docs into their own steps. Since lint is usually the thing that fails anyways, it's good to have it run first. We could make the build depend on this step to prevent slowing other builds waiting in the pipeline (since we only have 5 workers)\r\n- move all pip install commands into a single line per test environment. this reduces the overhead of calling the pip command separately multiple times per environment.\r\n- removed pip upgrade command for pypy3 and py38"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d144ee515ce6a4e862",
    "number": 692,
    "body": "Trying to reduce build times by allowing tox to run multiple targets in parallel.",
    "head_branch": "parallel-builds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d244ee515ce6a4e863",
    "number": 690,
    "body": "",
    "head_branch": "v0.7b1-master-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "release: updating master to 0.8.dev0 (#690)\n\nBumping dev version number"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d344ee515ce6a4e864",
    "number": 689,
    "body": "Fixes #675",
    "head_branch": "issue_675",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "botocore: Add botocore instrumentation (#689)\n\nAdding initial boto core implementation.\r\n\r\nCo-authored-by: alrex <alrex.boten@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d444ee515ce6a4e865",
    "number": 688,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "release/0.7b1-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "release: Update changelogs, version [refs/heads/release/0.7b1] (#688)\n\n* updating changelogs and version to 0.7b1\r\n* update version in setup config\r\n\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d544ee515ce6a4e866",
    "number": 687,
    "body": "",
    "head_branch": "fix-django-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: Set correct development status (#687)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d644ee515ce6a4e867",
    "number": 686,
    "body": "",
    "head_branch": "v0.7b0-master-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d744ee515ce6a4e868",
    "number": 685,
    "body": "",
    "head_branch": "v0.7b0-master-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d744ee515ce6a4e869",
    "number": 681,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "release/0.7b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "release: Update changelogs, version [refs/heads/release/0.7b0] (#681)\n\n* updating changelogs and version to 0.7b0\r\n* update version in setup config\r\n\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d844ee515ce6a4e86a",
    "number": 679,
    "body": "Workaround for new version of flake8 causing lint failures. We should probably figure out if these are valid failures, but this will unblock the current release.",
    "head_branch": "pin-flake",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pin flake8 at 3.7.9 (#679)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010d944ee515ce6a4e86b",
    "number": 678,
    "body": "This PR addresses issue https://github.com/open-telemetry/opentelemetry-python/issues/352\r\n\r\nValidates attribute values and events upon span creation and setting attributes on spans.\r\n\r\nValidation logic involves checking if value is one of (int, float, str, bool, list), and if list, each element must be valid and must be all the same primitive, valid type\r\nlist values will not contain nested lists\r\nIf value is a list, grants immutable property by converting value to a tuple.",
    "head_branch": "validate_event_attrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add check for event attribute values (#678)\n\nThis PR addresses issue #352\r\n\r\nValidates attribute values and events upon span creation and setting attributes on spans.\r\n\r\nValidation logic involves checking if value is one of (int, float, str, bool, list), and if list, each element must be valid and must be all the same primitive, valid type\r\nlist values will not contain nested lists\r\nIf value is a list, grants immutable property by converting value to a tuple."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010da44ee515ce6a4e86c",
    "number": 677,
    "body": "As per the docs here: https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestbranchestags",
    "head_branch": "codeboten/fix-prepare-release",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "fix branch name filtering (#677)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010db44ee515ce6a4e86d",
    "number": 676,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010dc44ee515ce6a4e86e",
    "number": 674,
    "body": "Fixes #673",
    "head_branch": "issue_673",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: Add missing files (#674)\n\nFixes #673"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010dc44ee515ce6a4e86f",
    "number": 672,
    "body": "Adding a release date to the CHANGELOG.md",
    "head_branch": "codeboten/add-release-date",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Adding released date (#672)\n\nAdding a release date to the CHANGELOG.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010dd44ee515ce6a4e870",
    "number": 671,
    "body": "Halfway through the 0.6 to 0.7 release, a policy was added to\r\nensure changelogs are added to each PR as they are merged in.\r\n\r\nRetroactively backfilling changelog entries that were missed\r\nbefore the policy was enacted.",
    "head_branch": "feature/changelog-update-070",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: backfill changelogs since 0.6 (#671)\n\nHalfway through the 0.6 to 0.7 release, a policy was added to\r\nensure changelogs are added to each PR as they are merged in.\r\n\r\nRetroactively backfilling changelog entries that were missed\r\nbefore the policy was enacted."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010de44ee515ce6a4e871",
    "number": 670,
    "body": "Similar to exclude listing for [flask](https://github.com/open-telemetry/opentelemetry-python/pull/630), implement for Django.\r\n\r\nAlso fixed some tests in `flask` that weren't being executed.",
    "head_branch": "exclude-django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "django: Add exclude lists (#670)\n\nSimilar to flask, enabling exclusion of spans based on host and path.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010df44ee515ce6a4e872",
    "number": 666,
    "body": "The CI is not able to catch many documentation problems because we are ignoring\r\nwarnings. This commit fixes most of the warnings, ignores the rest and enables\r\na flag to treat them as errors.",
    "head_branch": "mauricio/fix-sphinx-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Fix warning and treat them as errors (#666)\n\nThe CI is not able to catch many documentation problems because we are ignoring\r\nwarnings. This commit fixes most of the warnings, ignores the rest and enables\r\na flag to treat them as errors.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e044ee515ce6a4e873",
    "number": 665,
    "body": "Fixes #628 ",
    "head_branch": "issue_628",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/boto: Add boto instrumentation (#665)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e144ee515ce6a4e874",
    "number": 662,
    "body": "Fixes #647",
    "head_branch": "issue_647",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: Handle boolean, integer and float values in Configuration (#662)\n\nMany times, configuration values are just boolean values. The Configuration object now only returns the literal configuration value. It would be useful to have this object return True instead of \"True\" to keep code a bit shorter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e144ee515ce6a4e875",
    "number": 658,
    "body": "Partially fixes https://github.com/open-telemetry/opentelemetry-python/issues/547\r\n\r\nThis PR:\r\n- Removes duplicated examples\r\n- Use literal include to have the examples in .py files\r\n\r\nTo be done in follow up PRs\r\n- Implement tests for other examples in the getting started guide (if feasible)\r\n- Understand what to do with opentelemetry-example-app\r\n\r\nPreview:  https://opentelemetry-python-mauricio.readthedocs.io/en/mauricio-consolidate-getting-started-guide/getting-started.html",
    "head_branch": "mauricio/consolidate-getting-started-guide",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Consolidate getting started guide and remove duplicated examples (#658)\n\nThere are some examples that are duplicated in the getting started guide and in\r\nthe examples folder itself. This commit removes the duplicated examples and\r\nupdates the getting started guide to include then from real source files that\r\nare passed through the linter and have tests.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e244ee515ce6a4e876",
    "number": 657,
    "body": "- Add missing sqlalchemy and django dependencies\r\n- Configure django in docs/conf.py to avoid non configured exeception\r\n\r\nPreview here https://opentelemetry-python-mauricio.readthedocs.io/en/latest/.\r\n\r\n",
    "head_branch": "mauricio/fix-docs-dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Add missing dependencies and fix django (#657)\n\n- Add missing sqlalchemy and django dependencies\r\n- Configure django in docs/conf.py to avoid non configured exeception"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e344ee515ce6a4e877",
    "number": 656,
    "body": "This PR implements passing an **optional** `span_callback` callback when instrumenting `requests`.\r\nThe callback will be called just before returning the result and will be invoked with the `span` and the `result` (type of requests.Response).\r\nThis mimics the same functionality as in [js http plugin](https://github.com/open-telemetry/opentelemetry-js/blob/master/packages/opentelemetry-plugin-http/src/http.ts#L230).\r\n\r\n\r\nExample:\r\n\r\n```python\r\nimport requests\r\nfrom opentelemetry.ext.requests import RequestsInstrumentor\r\nfrom opentelemetry.sdk.trace.export import Span\r\n\r\ndef apply(span: Span, result: requests.Response):\r\n    span.set_attribute(\"http.request.body\", result.request.body)\r\n\r\nRequestsInstrumentor().instrument(\r\n    span_callback=apply\r\n)\r\n```\r\n\r\nPlease LMK if and what docs need to be updated.",
    "head_branch": "feat/requests/apply_custom_attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/requests - apply custom attributes callback (#656)\n\nImplement passing an optional span_callback callback when instrumenting requests.\r\n\r\nThe callback will be called just before returning the result and will be invoked with the span and the result (type of requests.Response).\r\n\r\nThis mimics the same functionality as the js http plugin."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e444ee515ce6a4e878",
    "number": 655,
    "body": "Implement MySQLInstrumentor to (un)instrument the library, also implement (un)instrument_connection to work at the connection level.\r\n\r\nDepends on https://github.com/open-telemetry/opentelemetry-python/pull/624.",
    "head_branch": "mauricio/instrumentor-mysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/mysql: Add instrumentor interface (#655)\n\nImplement to helper methods to allow users to enable / disable instrumentation\r\nin a single connection object.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: alrex <alrex.boten@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e544ee515ce6a4e879",
    "number": 653,
    "body": "Adding InMemoryMetricsExporter to help with unit-tests, as part of the change i'm also adding meter_provider and memory_metrics_exporter to TestBase",
    "head_branch": "in-memory-metrics-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "testing: add in-memory metrics exporter (#653)\n\nAdding InMemoryMetricsExporter to help with unit-tests, as part of the change i'm also adding meter_provider and memory_metrics_exporter to TestBase\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e644ee515ce6a4e87a",
    "number": 652,
    "body": "Adding an extension to provide users an easy mechanism to collect metrics for their system. Some thoughts around this PR:\r\n\r\n- we could make which metrics are observed configurable\r\n- the semantic conventions around metric naming are still being defined so they are likely to change\r\n- the tests are currently checking the aggregators directly, I would like to change this to using the in-memory metrics exporter\r\n\r\nThe PR includes changes which I pulled out into this separate PR https://github.com/open-telemetry/opentelemetry-python/pull/653. I'll resolve if that one gets merged first.\r\n",
    "head_branch": "ext-system-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/system-metrics: adding instrumentation to collect system metrics (#652)\n\nAdding an extension to provide users an easy mechanism to collect metrics for their system."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e644ee515ce6a4e87b",
    "number": 650,
    "body": "This commit introduces a new boostrap command that is shipped as part of\r\nthe opentelemetry-auto-instrumentation package. The command detects\r\ninstalled libraries and installs the relevant auto-instrumentation\r\npackages.",
    "head_branch": "bootstrap-cmd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Introduce a bootstrap command to auto-install packages (#650)\n\nThis commit introduces a new boostrap command that is shipped as part of\r\nthe opentelemetry-auto-instrumentation package. The command detects\r\ninstalled libraries and installs the relevant auto-instrumentation\r\npackages."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e744ee515ce6a4e87c",
    "number": 648,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/629\r\n\r\nNote: Currently this integration doesn't satisfy all the requirements in the semantic conventions for a messaging system: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/messaging.md. In https://github.com/open-telemetry/opentelemetry-python/pull/648/commits/df5bf4819ce757c276fdaab27e545b5db14f33a8 I updated it to include some of the attributes, but I haven't been able to gather the other ones. I'd propose to review this PR as it is and improve the semantic convention compliance in a follow up PR. ",
    "head_branch": "mauricio/instrumentor-celery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e844ee515ce6a4e87d",
    "number": 646,
    "body": "The executemany test fails in some conditions because the argument used is\r\na sequence and not a sequence of sequences as it should be:\r\n\r\nhttps://dev.mysql.com/doc/connector-python/en/connector-python-api-mysqlcursor-executemany.html\r\nhttps://pymysql.readthedocs.io/en/latest/modules/cursors.html#pymysql.cursors.Cursor.executemany\r\nhttps://www.psycopg.org/docs/cursor.html#cursor.executemany\r\n\r\nLink to CI failures:\r\n- https://travis-ci.org/github/mauriciovasquezbernal/opentelemetry-python/jobs/683021674#L7842\r\n- https://travis-ci.org/github/open-telemetry/opentelemetry-python/jobs/683000037#L7824\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/589.",
    "head_branch": "mauricio/fix-sql-docker-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/docker-tests: Fix SQL docker tests (#646)\n\nThe executemany test fails in some conditions because the argument used is a\r\nsequence and not a sequence of sequences as it should be.\r\n\r\nFixes #589."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010e944ee515ce6a4e87e",
    "number": 645,
    "body": "This PR implements the missing part of exporting the TraceProvider resource into Jaeger.\r\nSame as in [js](https://github.com/open-telemetry/opentelemetry-js/blob/master/packages/opentelemetry-exporter-jaeger/src/transform.ts#L67).",
    "head_branch": "feat/jaeger/resource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/jaeger - Transform resource to tags when exporting (#645)\n\nLabels in the resource now populate span tags for the Jaeger exporter.\r\n\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ea44ee515ce6a4e87f",
    "number": 644,
    "body": "This PR implements the missing part of exporting the TraceProvider resource into Jaeger.\r\nSame as in [js](https://github.com/open-telemetry/opentelemetry-js/blob/master/packages/opentelemetry-exporter-jaeger/src/transform.ts#L67).",
    "head_branch": "feat/jaeger/resource-to-tags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010eb44ee515ce6a4e880",
    "number": 643,
    "body": "Fixes #631 ",
    "head_branch": "majorgreys/jinja2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "jinja2: Add jinja2 instrumentation (#643)\n\nMigrating the jinja2 plugin forked from ddtracepy.\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010eb44ee515ce6a4e881",
    "number": 640,
    "body": "During some testing, found that the pymongo instrumentation was setting the status description field as a dict which made the otcollector fail to process any spans. \r\n\r\nAdded a check for the description type to avoid the exporter being throwing an exception.\r\n\r\nAdditionally, added a check in the Status constructor to log and skip setting the description if it is not None and not a string.",
    "head_branch": "collector-exporter-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: ensure status is always string (#640)\n\nEnsuring that exporters can always expect status descriptions to be a string.\r\n\r\nThis was implemented to be defensive against instrumentations such as PyMongo, which currently set status as a dict.\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ec44ee515ce6a4e882",
    "number": 639,
    "body": "This is making the readme consistent with some of the other SIG repos:\r\n- [js](https://github.com/open-telemetry/opentelemetry-js/blob/master/README.md)\r\n- [collector](https://github.com/open-telemetry/opentelemetry-collector)",
    "head_branch": "codeboten/update-readme",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "docs: updating readme (#639)\n\nThis is making the readme consistent with some of the other SIG repos:\r\n- [js](https://github.com/open-telemetry/opentelemetry-js/blob/master/README.md)\r\n- [collector](https://github.com/open-telemetry/opentelemetry-collector)\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ed44ee515ce6a4e883",
    "number": 638,
    "body": "Fixes #637",
    "head_branch": "issue_637",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Add more documentation for the instrumentor base class (#638)\n\nFixes #637\r\n\r\nCo-authored-by: Yusuke Tsutsumi <tsutsumi.yusuke@gmail.com>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ee44ee515ce6a4e884",
    "number": 636,
    "body": "Fixes #634 ",
    "head_branch": "issue_634",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: Add reset for configuration testing (#636)\n\nIt is a common occurrence in tests that the global Configuration object needs to be \"reset\" between tests. This means that its attributes need to be set back to their original values. Since the Configuration object is immutable by design, some additional, non-production available mechanism is needed to perform this action.\r\n\r\nThe need for this feature was mentioned in a conversation in #630."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ef44ee515ce6a4e885",
    "number": 630,
    "body": "Leverage global configurations to allow users to specify paths and hosts that they do not want to trace within their Flask applications. \r\n\r\n`OPENTELEMETRY_PYTHON_FLASK_EXCLUDED_HOSTS` and `OPENTELEMETRY_PYTHON_FLASK_EXCLUDED_PATHS` are the env variables used. Use a comma delimited string to represent seperate hosts/paths to blacklist.\r\n\r\nTODO:\r\n1. Perhaps allow users to pro-grammatically configure these (through code, maybe Configurations should be modifiable through code as well)\r\n2. Related to [#581]. Perhaps we should emit a default span instead of not patching. I don't really see a benefit for this though.",
    "head_branch": "blacklist",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "flask: Add exclude lists for flask integration (#630)\n\nLeverage global configurations to allow users to specify paths and hosts that they do not want to trace within their Flask applications.\r\n\r\nOPENTELEMETRY_PYTHON_FLASK_EXCLUDED_HOSTS and OPENTELEMETRY_PYTHON_FLASK_EXCLUDED_PATHS are the env variables used. Use a comma delimited string to represent seperate hosts/paths to blacklist."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f044ee515ce6a4e886",
    "number": 626,
    "body": "Currently builds take roughly 15 minutes, as the longest job (pypy3) isn't kicked off until one of the other jobs is finished running (max 5 concurrent jobs). Prioritizing the longer jobs first should reduce the build time by about 5 minutes.",
    "head_branch": "reduce-build-times",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "infra: reduce build time by running longest job early (#626)\n\nCurrently builds take roughly 15 minutes, as the longest job (pypy3) isn't\r\nkicked off until one of the other jobs is finished running (max 5 concurrent\r\njobs). Prioritizing the longer jobs first should reduce the build time by about\r\n5 minutes."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f044ee515ce6a4e887",
    "number": 625,
    "body": "- Avoid duplicated dependency list in tox and docs-requirements\r\n- Sort list\r\n- Fix grpc duplicated entries\r\n\r\nPreview available at https://opentelemetry-python-mauricio.readthedocs.io/en/mauricio-fix-docs-dependencies/.\r\n\r\n",
    "head_branch": "mauricio/fix-docs-dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Docs: fix docs dependencies (#625)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f144ee515ce6a4e888",
    "number": 624,
    "body": "Draft until https://github.com/open-telemetry/opentelemetry-python/pull/611 is merged, to avoid solving many conflicts later on.\r\n\r\nThe current integrations based on dbapi allow to patch the `connect` function on those libraries to return an instrumented connection, however it's not possible to enable instrumentation on a connection previously created or to disable instrumentation in an instrumented connection.\r\n\r\nThis PR adds two convenience functions, `instrument_connection` and `uninstrument_connection` that allow to enable  / disable instrumentation in specific connection objects. \r\n\r\nThis PR only implements the logic in PyMySQL, it can be easily done in other instrumentations once we think it's worth to be done.\r\n\r\n@hectorhdzg  @lzchen since you folks have worked in these instrumentations before I'd like to get your opinion on this.\r\n\r\n",
    "head_branch": "mauricio/instrument_connection_pymysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/{dbapi,pymysql}: Implement methods to (un)-instrument connections (#624)\n\nImplement to helper methods to allow users to enable / disable instrumentation\r\nin a single connection object.\r\n\r\nThe current integrations based on dbapi allow to patch the connect function on those libraries to return an instrumented connection, however it's not possible to enable instrumentation on a connection previously created or to disable instrumentation in an instrumented connection.\r\n\r\nThis only implements the logic in PyMySQL, it can be easily done in other instrumentations once we think it's worth to be done.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f244ee515ce6a4e889",
    "number": 621,
    "body": "Looks like this one was missed in #548. \r\n\r\nFixes #620 ",
    "head_branch": "fix-b3-propagation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: b3 propagation needs to check if parent is SpanContext (#621)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f344ee515ce6a4e88a",
    "number": 619,
    "body": "The requests integration is named `http-requests` because at the time it was created there were some problems with pylint. [This commit](https://github.com/open-telemetry/opentelemetry-python/pull/94/commits/1b90a0ddc286c936f7256b14e14ef36fd3c6a24f) and the conversation on [this comment](https://github.com/open-telemetry/opentelemetry-python/pull/94/commits/1b90a0ddc286c936f7256b14e14ef36fd3c6a24f#r317343385) have more information about that.\r\nI think the problem is not present anymore (other integrations are using opentelemetry.ext.integration without problems), I renamed it and the tests are passing without issues. \r\n",
    "head_branch": "mauricio/rename-http-requests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "requests: Rename http_requests to requests (#619)\n\nThe requests integration is named http-requests because at the time it was created there were some problems with pylint. \r\n\r\nother integrations are using opentelemetry.ext.integration without problems, tests are passing without issue, even renamed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f444ee515ce6a4e88b",
    "number": 618,
    "body": "Pinning the version of pylint as it's causing failures in our build. Related issue: https://github.com/PyCQA/pylint/issues/3524",
    "head_branch": "set-pylint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "tests: pin pylint (#618)\n\nPinning the version of pylint as it's causing failures in our build. Related issue: PyCQA/pylint#3524"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f544ee515ce6a4e88c",
    "number": 616,
    "body": "I realized [the gRPC interceptor](https://github.com/open-telemetry/opentelemetry-python/blob/7cb57c78d38836c9b75de720f6a43d648ff600e4/ext/opentelemetry-ext-grpc/src/opentelemetry/ext/grpc/__init__.py#L24) raises another exception while setting status on exception. The bug itself has been fixed by #577, but I think this kind of error should not be propagated to the caller as tracing should be a secondary thing.",
    "head_branch": "handle-exception-on-exit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f544ee515ce6a4e88d",
    "number": 615,
    "body": "The `prepare-release` workflow is triggered when a new `release/<version>` branch is created. This workflow parses the `<version>` number from the branch name and updates version.py/changelog.md files accordingly. It then creates a pull request with those changes\r\n\r\nThis addresses part of #374 ",
    "head_branch": "release-automation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding script and workflow to automate the preparation of releases (#615)\n\nThe prepare-release workflow is triggered when a new release/<version> branch\r\nis created. This workflow parses the <version> number from the branch name and\r\nupdates version.py/changelog.md files accordingly. It then creates a pull\r\nrequest with those changes.\r\n\r\nThis addresses part of #374.\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f644ee515ce6a4e88e",
    "number": 614,
    "body": "Without this, `tox -e lint` fails in my computer.\r\n\r\nFixes #613",
    "head_branch": "issue_613",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test: Add missing dependency (#614)\n\nFixes #613\r\n\r\nsome packages depend on the newest dev version of dbapi, which isn't published yet\r\nwhen a package in a virtualenv is installed, it will attempt to install those dependencies, which searches on pypi\r\n\r\nInstalling the local package ensures that 0.7 is installed, so pip sees that and skips trying to resolve against pypi (when it won't find the version)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f744ee515ce6a4e88f",
    "number": 612,
    "body": "This PR implements the Instrumentor interface for the Pymongo integration. It also implements a way to disable instrumentation.\r\n\r\nI compared with the DataDog donated implementation available at https://github.com/open-telemetry/opentelemetry-python-contrib/tree/master/reference/ddtrace/contrib/pymongo, the already existing implementation is good enough and we do not need to take any from that in this case.\r\n\r\nI'm opening a new PR to supersedes https://github.com/open-telemetry/opentelemetry-python/pull/598 to avoid reviewing and approving my own changes there.\r\n\r\nHow to try:\r\n\r\n```\r\n# install\r\npip install -e ext/opentelemetry-ext-pymymongo/\r\n# set up test db\r\nopentelemetry-ext-docker-tests/tests\r\ndocker-compose up\r\n```\r\n\r\npymongo_example.py:\r\n```\r\n# Configuration code\r\nfrom opentelemetry import trace\r\n\r\nfrom opentelemetry.sdk.trace.export import (\r\n    SimpleExportSpanProcessor,\r\n    ConsoleSpanExporter,\r\n)\r\n\r\ntrace.get_tracer_provider().add_span_processor(\r\n    SimpleExportSpanProcessor(ConsoleSpanExporter())\r\n)\r\n\r\n# Real example starts here\r\nimport os\r\n\r\nfrom pymongo import MongoClient\r\n\r\nMONGODB_HOST = os.getenv(\"MONGODB_HOST \", \"localhost\")\r\nMONGODB_PORT = int(os.getenv(\"MONGODB_PORT \", \"27017\"))\r\nMONGODB_DB_NAME = os.getenv(\"MONGODB_DB_NAME \", \"opentelemetry-tests\")\r\nMONGODB_COLLECTION_NAME = \"test\"\r\n\r\nclient = MongoClient(\r\n    MONGODB_HOST, MONGODB_PORT, serverSelectionTimeoutMS=2000\r\n)\r\ndb = client[MONGODB_DB_NAME]\r\ncollection = db[MONGODB_COLLECTION_NAME]\r\n\r\ncollection.insert_one({\"name\": \"testName\", \"value\": \"testValue\"})\r\n```\r\n\r\n```\r\nOPENTELEMETRY_PYTHON_TRACER_PROVIDER=sdk_tracer_provider opentelemetry-auto-instrumentation pymongo_example.py\r\n```\r\nIf everything went fine you see some spans on the terminal.",
    "head_branch": "mauricio/instrumentation-pymongo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/pymongo: Add instrumentor (#612)\n\nThe current Pymongo integration uses the monitoring.register() [1] to hook\r\nthe different internal calls of Pymongo. This integration doesn't allow to\r\nunregister a monitor. This commit workaround that limitation by adding an\r\nenable flag to the CommandTracer class and adds a logic to disable the\r\nintegration.  This solution is not perfect becasue there will be some overhead\r\neven when the instrumentation is disabled, but that's what we can do with\r\nthe current approach.\r\n\r\n[1] https://api.mongodb.com/python/current/api/pymongo/monitoring.html#pymongo.monitoring.register\r\n\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f844ee515ce6a4e890",
    "number": 611,
    "body": "- Implement a way to uninstrument dbapi connections\r\n- Update pymysql to implement the instrumentor interface and provide a way to uninstrument\r\n\r\nHow to try it:\r\n```\r\n# install\r\npip install -e ext/opentelemetry-ext-pymysql/\r\n# set up test db\r\nopentelemetry-ext-docker-tests/tests\r\ndocker-compose up\r\n```\r\npymysql_example.py\r\n```\r\n# Configuration code\r\nfrom opentelemetry import trace\r\n\r\nfrom opentelemetry.sdk.trace.export import (\r\n    SimpleExportSpanProcessor,\r\n    ConsoleSpanExporter,\r\n)\r\n\r\ntrace.get_tracer_provider().add_span_processor(\r\n    SimpleExportSpanProcessor(ConsoleSpanExporter())\r\n)\r\n\r\n# Real example starts here\r\nimport os\r\n\r\nimport pymysql\r\n\r\nMYSQL_USER = os.getenv(\"MYSQL_USER \", \"testuser\")\r\nMYSQL_PASSWORD = os.getenv(\"MYSQL_PASSWORD \", \"testpassword\")\r\nMYSQL_HOST = os.getenv(\"MYSQL_HOST \", \"localhost\")\r\nMYSQL_PORT = int(os.getenv(\"MYSQL_PORT \", \"3306\"))\r\nMYSQL_DB_NAME = os.getenv(\"MYSQL_DB_NAME \", \"opentelemetry-tests\")\r\n\r\n_connection = None\r\ncursor = None\r\n_connection = pymysql.connect(\r\n   user=MYSQL_USER,\r\n   password=MYSQL_PASSWORD,\r\n   host=MYSQL_HOST,\r\n   port=MYSQL_PORT,\r\n   database=MYSQL_DB_NAME,\r\n)\r\ncursor = _connection.cursor()\r\n\r\ncursor.execute(\"CREATE TABLE IF NOT EXISTS test (id integer)\")\r\n\r\ndata = ((1,), (2,), (3,))\r\nstmt = \"INSERT INTO test (id) VALUES (%s)\"\r\ncursor.executemany(stmt, data)\r\n```\r\n\r\nRun the example:\r\n```\r\nOPENTELEMETRY_PYTHON_TRACER_PROVIDER=sdk_tracer_provider opentelemetry-auto-instrumentation pymysql_example.py\r\n```\r\n\r\nIf everything went fine you see some spans on the terminal.\r\n",
    "head_branch": "mauricio/instrumentor-pymysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/pymysql: Add Instrumentor (#611)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010f944ee515ce6a4e891",
    "number": 609,
    "body": "PR to trigger GH action, won't be merged.",
    "head_branch": "test-pypi-publish",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010fa44ee515ce6a4e892",
    "number": 607,
    "body": "Handling exceptions of external libraries to improve reliability of tests\r\n\r\nFixes #589 ",
    "head_branch": "hetorhdzg/e2etest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010fa44ee515ce6a4e893",
    "number": 605,
    "body": "Opening this PR to start the discussion on how we can provide a method for our users to easily get started with the instrumentation available in our repo.\r\n\r\nThis package would need to be updated as more instrumentation packages are made available.\r\n\r\nFixes #606 ",
    "head_branch": "all-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010fb44ee515ce6a4e894",
    "number": 604,
    "body": "This is causing problems with integration tests as reload changes the `id` of `trace.Span` and therefore makes `isinstance` checks fail. Here's a code snippet of the problem:\r\n\r\n```python\r\n>>> from opentelemetry import trace as trace_api\r\n>>> from opentelemetry.sdk import trace as trace_sdk\r\n>>> span = trace_sdk.Span(\"name\", None)\r\n>>> isinstance(span, trace_api.Span)\r\nTrue\r\n>>> from importlib import reload\r\n>>> reload(trace_api)\r\n<module 'opentelemetry.trace' from '/Users/alrex/dev/opentelemetry-python/opentelemetry-api/src/opentelemetry/trace/__init__.py'>\r\n>>> isinstance(span, trace_api.Span)\r\nFalse\r\n```",
    "head_branch": "remove-reload",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removing reload in testbase (#604)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010fc44ee515ce6a4e895",
    "number": 603,
    "body": "Couple of examples were missing import statements.",
    "head_branch": "fix-docs-import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "minor cleanup of examples (#603)\n\nCouple of examples were missing import statements."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010fd44ee515ce6a4e896",
    "number": 602,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/585\r\n\r\n@lzchen @hectorhdzg I would love to get your opinions on this as it mainly affects the DB integrations that you worked on.\r\n\r\nThe `requests` integration is updated in https://github.com/open-telemetry/opentelemetry-python/pull/597, there are some fixes coming for Flask as well in https://github.com/open-telemetry/opentelemetry-python/pull/601, so I don't update them to avoid conflicts.",
    "head_branch": "mauricio/integrations/use_tracer_provider",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext: Expect tracer provider instead of tracer in integrations (#602)\n\nStandardize the interface that trace providers are specified in integrations, as specified in #585.\r\n\r\nAdding a helper to create and return a configured TracerProvider with a the span\r\nprocessor and the memory exporter\r\n\r\napi: Add tracer provider parameter to trace.get_tracer(). This eliminates the need for a helper function and boilerplate code to retrieve the appropriate tracer from a passed tracer_provider."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010fe44ee515ce6a4e897",
    "number": 601,
    "body": "Fixes #599 \r\n\r\nThis is just a separate PR to keep the Flask changes from blocking the instrumentation enhancements.",
    "head_branch": "issue_599",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "flask: Add Flask Instrumentation fixes (#601)\n\nReffactoring the Flask instrumentation to better enable auto-instrumentation.\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662010ff44ee515ce6a4e898",
    "number": 598,
    "body": "_Mauricio: I took over this one._\r\n\r\nThis PR implements the Instrumentor interface for the Pymongo integration. It also implements a way to disable instrumentation.\r\n\r\nI compared with the DataDog donated implementation available at https://github.com/open-telemetry/opentelemetry-python-contrib/tree/master/reference/ddtrace/contrib/pymongo, the already existing implementation is good enough and we do not need to take any from that in this case.\r\n\r\nThis PR conflicts with https://github.com/open-telemetry/opentelemetry-python/pull/602, I'll keep as draft until that one is merged.\r\n\r\n",
    "head_branch": "instrumentation-pymongo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110044ee515ce6a4e899",
    "number": 597,
    "body": "Implement the `BaseInstrumentor` interface to make this library compatible with the opentelemetry-auto-instr command.  \r\n\r\nThere is an issue about getting the span when the global tracer provider hasn't been configured, this should be changed in the future once we extend the opentelemetry-auto-instr command to also configure the SDK.",
    "head_branch": "mauricio/requests-instrumentor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/requests: Add instrumentor (#597)\n\nImplement the BaseInstrumentor interface to make this library compatible with the opentelemetry-auto-instr command.\r\n\r\nThere is an issue about getting the span when the global tracer provider hasn't been configured, this should be changed in the future once we extend the opentelemetry-auto-instr command to also configure the SDK."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110044ee515ce6a4e89a",
    "number": 596,
    "body": "Views API Prototype. Solves [#578]. Views is pretty much the only large component that is remaining for metrics that is needed to go GA. It was discussed with @c24t that even though the [otep](https://github.com/open-telemetry/oteps/pull/89) is not merged yet, having a prototype will entice people to talk about this and push this forward. I STRONGLY encourage everyone to read the otep PR before reviewing this code. This is also WIP so I have not fixed the tests yet.\r\n\r\nWorkflow of metric recording -> collection -> export logic.\r\nNotice the original api surface of how to RECORD metrics are not changed (there are still metric instrument/bound instrument/batch recording).\r\n\r\nPreviously, bound instruments were 1:1 with the aggregators that belonged to them (for specific metric, labels pair). Now, a bound instrument has a sequence of aggregator, label pairs (view_data), which are initialized upon creation of the bound instrument. Per record, each view_data is then recorded. This is to maintain the instant lookup behavior of the bound instruments to labels that are associated with them.\r\n\r\nThe `ViewManager` contains unique views (uniqueness is based on metric, aggregator type and label keys). `View` s are simply a container that defines a relationship between metric and a specific aggregator exists (i.e. for this metric, I want to aggregate the data by this aggregator type).\r\n\r\n`ViewData` are generated upon boundinstrument creation, which are container representing aggregator/labels. The labels are generated based upon the view configuration (drop keys, ungrouped, etc). This means that per record to boundinstrument, multiple `ViewData` s could be updated as a result (like a fan-out pattern).\r\n\r\nSummary of changes below and their reasonings:\r\n- Add Views API -> ViewManager, View\r\n- View configuration (drop keys, ungrouped, etc)\r\n- If no views are defined for a metric, a default aggregation is used\r\n- Remove label_keys (recommended keys) from metric constructor: The functionality of this is essentially moved to View configuration.\r\n- Remove batcher types (UngroupedBatcher): The functionality of this is replaced by View configuration.\r\n- Verify aggregation types when merging: Since various aggregations can be defined for a single metric now, verify the aggregation types when merging (should never be different but is a good sanity check).\r\n- BoundInstruments hold the sequence of Aggregators with generated labels (`ViewData`) to broadcast updates to everytime there is a record\r\n- Added `metric` to bound instrument constructor, the metric that created the bound instrument: This is because bound instrument is the path that all methods of updating a metric instrument takes underlying. So the view manager needs the metric reference that called the update.\r\n- On meter collect, iterate through all `ViewData` s in bound instruments for metrics that are created\r\n- `aggregator_for` taken out of batcher, moved to views file\r\n- `meter` reference removed for `Observer` types (previously used for `aggregator_for`)\r\n\r\nNOTE: View API only affects METRIC types. Observers functionality does not change.",
    "head_branch": "views",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[WIP] Views API Prototype (#596)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110144ee515ce6a4e89b",
    "number": 595,
    "body": "Porting the existing redis instrumentation from the [contrib repo](https://github.com/open-telemetry/opentelemetry-python-contrib/tree/master/reference/ddtrace/contrib/redis) to using the OpenTelemetry API and the OpenTelemetry Auto-instrumentation Instrumentor interface.\r\n\r\nSimiliar to the sqlalchemy PR, the main thing that will need updating is to remove the patch/unpatch methods once the [instrumentor interface changes](https://github.com/open-telemetry/opentelemetry-python/pull/579) have been merged.\r\n\r\nThis is replacing https://github.com/open-telemetry/opentelemetry-python-contrib/pull/21",
    "head_branch": "instrumentation-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "redis: Porting redis instrumentation from contrib repo (#595)\n\nPorting the existing redis instrumentation from the contrib repo to using the OpenTelemetry API and the OpenTelemetry Auto-instrumentation Instrumentor interface.\r\n\r\nSimiliar to the sqlalchemy PR, the main thing that will need updating is to remove the patch/unpatch methods once the instrumentor interface changes have been merged.\r\n\r\nThis is replacing open-telemetry/opentelemetry-python-contrib#21\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110244ee515ce6a4e89c",
    "number": 594,
    "body": "Since it is currently not (easily) possible to call force flush on the span processor(s) add a function to SDK's tracer provider which delegates to the active span processor (`MultiSpanProcessor`). \r\nAlso implement the `MultiSpanProcessor`'s force flush function to sequentially call force flush on the known span processors by respecting the given timeout.",
    "head_branch": "tracer_provider_force_flush",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make force_flush available on SDK's tracer provider (#594)\n\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110344ee515ce6a4e89d",
    "number": 593,
    "body": "Fixes #592 ",
    "head_branch": "issue_592",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Django instrumentation (#593)\n\nInitial Instrumentation\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Mathieu Hinderyckx <mathieu.hinderyckx@gmail.com>\r\nCo-authored-by: alrex <alrex.boten@gmail.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110444ee515ce6a4e89e",
    "number": 591,
    "body": "Porting the existing sqlalchemy instrumentation from the [contrib repo](https://github.com/open-telemetry/opentelemetry-python-contrib/tree/master/reference/ddtrace/contrib/sqlalchemy) to using the OpenTelemetry API and the OpenTelemetry Auto-instrumentation Patcher interface.\r\n\r\nThis is replacing https://github.com/open-telemetry/opentelemetry-python-contrib/pull/22 ",
    "head_branch": "add-sqlalchemy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Porting sqlalchemy instrumentation from contrib repo (#591)\n\nPorting the existing sqlalchemy instrumentation from\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/tree/master/reference/ddtrace/contrib/sqlalchemy\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110544ee515ce6a4e89f",
    "number": 590,
    "body": "Updating export result enums\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-specification/pull/511",
    "head_branch": "hectorhdzg/exportresult",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updating export result enums (#590)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110544ee515ce6a4e8a0",
    "number": 588,
    "body": "Without using binary here, users will need the tools to compile psycopg2 on their systems.",
    "head_branch": "update-psycopg2-dep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating psycopg2 dependency (#588)\n\nWithout using binary here, users will need the tools to compile psycopg2 on\r\ntheir systems."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110644ee515ce6a4e8a1",
    "number": 586,
    "body": "Update tests to use TestBase as described on https://github.com/open-telemetry/opentelemetry-python/issues/303",
    "head_branch": "mauricio/use-base-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext: Use TestBase (#586)\n\nUpdate tests to use TestBase as described on #303.\r\n\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110744ee515ce6a4e8a2",
    "number": 584,
    "body": "URLs were missing the tree/master part.",
    "head_branch": "mauricio/fix-ext-urls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext: Fix URLs in setup.cfg for ext packages (#584)\n\nURLs were missing the tree/master part."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110844ee515ce6a4e8a3",
    "number": 583,
    "body": "Fixes #582\r\n\r\nThis makes the attributes of the configuration object case sensitive in order to match better the environment variables that are too.\r\n\r\nThis makes the attributes of the configuration object accept any legal Python variable name (`Configuration().some_2_attribute`) is valid now.\r\n\r\nThis makes non-defined attributes return `None` when queried instead of raising an `AttributeError`. This makes it easier to use the configuration object because the user won't have to check for the existence of the attribute beforehand:\r\n\r\n```python\r\n\r\nif Configuration().some_attribute == \"value\":\r\n    # do stuff\r\n```\r\ninstead of \r\n```python\r\nif hasattr(Configuration(), \"some_attribute\") and Configuration().some_attribute == \"value\":\r\n    # do stuff\r\n```",
    "head_branch": "issue_582",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: Add several configuration related fixes (#583)\n\nFixes #582\r\n\r\nThis makes the attributes of the configuration object case sensitive in order to match better the environment variables that are too.\r\n\r\nThis makes the attributes of the configuration object accept any legal Python variable name (Configuration().some_2_attribute) is valid now.\r\n\r\nThis makes non-defined attributes return None when queried instead of raising an AttributeError. This makes it easier to use the configuration object because the user won't have to check for the existence of the attribute beforehand:\r\n\r\nif Configuration().some_attribute == \"value\":\r\n    # do stuff\r\n\r\ninstead of\r\n\r\nif hasattr(Configuration(), \"some_attribute\") and Configuration().some_attribute == \"value\":\r\n    # do stuff"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110944ee515ce6a4e8a4",
    "number": 580,
    "body": "Reflecting the change in meeting times.",
    "head_branch": "codeboten/update-meeting-time",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: updating meeting time in readme (#580)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110944ee515ce6a4e8a5",
    "number": 579,
    "body": "Fixes #554\r\n\r\nThis makes it possible to call the `instrument` method with arguments that make programmatic instrumentation possible.\r\n\r\nThis also makes the children of `BaseInstrumentors` to be singletons. In this way regardless of how many times the programmatic instrumentation or uninstrumentation methods are called they will only be executed once.",
    "head_branch": "issue_554",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "auto-instr: Add support for programmatic instrumentation (#579)\n\nFixes #554\r\n\r\nThis makes it possible to call the instrument method with arguments that make programmatic instrumentation possible.\r\n\r\nThis also makes the children of BaseInstrumentors to be singletons. In this way regardless of how many times the programmatic instrumentation or uninstrumentation methods are called they will only be executed once."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110a44ee515ce6a4e8a6",
    "number": 577,
    "body": "Fixes the error caused by [`span.status` in `use_span`](https://github.com/open-telemetry/opentelemetry-python/blob/c8b336d338289a3fed761053e917398f3bf6fdd7/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py#L608).\r\n\r\nAs `status` is not included in `opentelemetry.trace.Span`, [`span.status` in `use_span`](https://github.com/open-telemetry/opentelemetry-python/blob/c8b336d338289a3fed761053e917398f3bf6fdd7/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py#L608) may cause an error.\r\nFor example, when `use_span` is called with `DefaultSpan`, it causes the error below.\r\n\r\n```\r\n'DefaultSpan' object has no attribute 'status'\r\n```",
    "head_branch": "fix-span-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Fix DefaultSpan raising an exception in use_span (#577)\n\nFixes the error caused by span.status in use_span.\r\n\r\nAs status is not included in opentelemetry.trace.Span, span.status in use_span may cause an error.\r\nFor example, when use_span is called with DefaultSpan, it causes the error below.\r\n\r\n'DefaultSpan' object has no attribute 'status'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110b44ee515ce6a4e8a7",
    "number": 575,
    "body": "Fixes #574",
    "head_branch": "issue_574",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Inform new developers about other related repos (#575)\n\nThis is the main OpenTelemetry Python repo, but now we have another one (and possibly more in the future) for related instrumentation-related code.\r\n\r\nExplain this in the contributing instructions to inform new developers about the existence of this repo so that they are aware of this and they efforts can be directed to the right place."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110c44ee515ce6a4e8a8",
    "number": 573,
    "body": "I started porting the Datadog version of this integration (https://github.com/open-telemetry/opentelemetry-python-contrib/pull/23) to get familiar with the process, while doing so I realized some of the things we are missing in the current integration. The goal of this PR is to improve the current implementation / tests, in a following PR the instrumentor logic will be added.\r\n\r\n- Implement disable_session(): https://github.com/open-telemetry/opentelemetry-python/issues/479\r\n- Improve tests by using in memory span exporter (part of https://github.com/open-telemetry/opentelemetry-python/issues/303)\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/479\r\n\r\n\r\n\r\nThis will conflict with https://github.com/open-telemetry/opentelemetry-python/pull/559, I can update it when that's merged.",
    "head_branch": "mauricio/update-http-requests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "requests: Improvements for requests integration (#573)\n\nAdding a TestBase class which wraps a tracer provider that is configured with a memory span\r\nexporter.  This class inherits from unitest.TestCase, hence other test classes\r\ncan inherit from it to get access to the underlying memory span exporter and\r\ntracer provider.\r\n\r\nAdding a mock propagator that could be used for testing propagation in different packages.\r\nIt was implemented in the opentracing-shim and this commit moves it to a generic\r\nplace.\r\n\r\nAdding disable_session(), which can be used to disable the instrumentation on a single\r\nrequests' session object."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110d44ee515ce6a4e8a9",
    "number": 572,
    "body": "Add an exporter to Datadog. This implementation makes use of `ddtrace` to handle the creation of Datadog traces and writing them to the Datadog agent.",
    "head_branch": "majorgreys/exporter-datadog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add exporter to Datadog (#572)\n\nAdd an exporter to Datadog. This implementation makes use of ddtrace to handle the creation of Datadog traces and writing them to the Datadog agent.\r\n\r\nCo-Authored-By: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110e44ee515ce6a4e8aa",
    "number": 571,
    "body": "Add middleware to use OpenTelemetry tracing with Django\r\n\r\n- TODO: add some formal tests\r\n- TODO: add documentation / descriptions\r\n- TODO: header propagation from incoming request",
    "head_branch": "ext-django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110e44ee515ce6a4e8ab",
    "number": 570,
    "body": "Fixes #569",
    "head_branch": "issue_569",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Remove unnecessary Flask app (#570)\n\nThe current auto instrumentation example includes an unnecessary Flask app in its client."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620110f44ee515ce6a4e8ac",
    "number": 568,
    "body": "B3 format is a specific context propagator for tracing. This commit moves\r\nit to trace/propagation.",
    "head_branch": "mauricio/move_b3_format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Move b3_format to trace/propagation (#568)\n\nB3 format is a specific context propagator for tracing. This commit moves\r\nit to trace/propagation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111044ee515ce6a4e8ad",
    "number": 567,
    "body": "Fixes #566",
    "head_branch": "issue_566",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "auto-instr: Fix the auto instrumentation command (#567)\n\nRight now the auto instrumentation command works like this:\r\n\r\nopentelemetry-auto-instrumentation some_file.py\r\n\r\nThe auto instrumentation command invokes an interpreter that executes the some_file.py. Nevertheless, this will not work for frameworks that have their own execution command (flask_run, for example).\r\n\r\nFixes #566 \r\n\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111144ee515ce6a4e8ae",
    "number": 563,
    "body": "The configuration object used to provide only configuration for the meter and tracer providers. Now it can be used to load any configuration value stored in an environment variable that starts with `OPENTELEMETRY_PYTHON_` whose characters match with `[A-Z_]`. All this is explained with greater detail in the documentation. The documentation also includes a section that gathers and explains all the current environment variables that are meaningful for OpenTelemetry Python. In this way, the end user can have them all listed in one single place. If in the future, more environment variables are used, then they should be added there and documented accordingly.\r\n\r\nFixes #515",
    "head_branch": "issue_515",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: Make the configuration object universal (#563)\n\nThe configuration object used to provide only configuration for the meter and tracer providers. Now it can be used to load any configuration value stored in an environment variable that starts with OPENTELEMETRY_PYTHON_ whose characters match with [A-Z_]. All this is explained with greater detail in the documentation. \r\n\r\nThe documentation also includes a section that gathers and explains all the current environment variables that are meaningful for OpenTelemetry Python. In this way, the end user can have them all listed in one single place. If in the future, more environment variables are used, then they should be added there and documented accordingly."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111244ee515ce6a4e8af",
    "number": 561,
    "body": "Change unversioned requirements for packages in the same repo to `==0.7.dev0`.\r\n\r\ncc @mauriciovasquezbernal ",
    "head_branch": "require-latest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Require latest version of other packages in repo (#561)\n\nChange unversioned requirements for packages in the same repo to ==0.7.dev0.\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111244ee515ce6a4e8b0",
    "number": 560,
    "body": "set_tracer_provider() was called twice using different TracerProvider objects.\r\nIt caused that the \"parent\" span wasn't exported because it was created with a\r\ntracer from the first call to set_tracer_provider that didn't have a configured\r\nspan processor.\r\n\r\nI was happy using blame until I found it was me https://github.com/open-telemetry/opentelemetry-python/blame/master/docs/examples/http/server.py#L33 :laughing: ",
    "head_branch": "mauricio/fix_http_example",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs/examples/http: Remove duplicated call to set_tracer_provider (#560)\n\nset_tracer_provider() was called twice using different TracerProvider objects.\r\nIt caused that the \"parent\" span wasn't exported because it was created with a\r\ntracer from the first call to set_tracer_provider that didn't have a configured\r\nspan processor."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111344ee515ce6a4e8b1",
    "number": 559,
    "body": "`opentelemetry-ext-testutil` is a package with shared test classes used by ext packages (right now only `opentelemetry-ext-flask`). We don't release this package, just import it in other tests.\r\n\r\nRight now, on each release, we build everything in `ext/`. This means whoever does the release has to remember to exclude this package when they push the others to PyPI.\r\n\r\nThis PR moves the files and package:\r\n- Move files `ext/opentelemetry-ext-testutil` -> `tests/util`\r\n- Move package `opentelemetry.ext.testutil` -> `opentelemetry.test`\r\n\r\nThis makes maintainers' lives easier, but it does mean that other packages that use testutils will have to install install the `opentelemetry.test` package from source. But this is _already_ the case since we don't publish `opentelemetry-ext-testutil`.\r\n\r\nThis PR proposes that we move shared test code back into the main repo until we move a package that depends on it into a separate repo, at which point we'll have to put this code in its own top-level package.",
    "head_branch": "move-testutil",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move shared test code from ext/ to tests/ (#559)\n\nopentelemetry-ext-testutil is a package with shared test classes used by ext packages (right now only opentelemetry-ext-flask). We don't release this package, just import it in other tests.\r\n\r\nRight now, on each release, we build everything in ext/. This means whoever does the release has to remember to exclude this package when they push the others to PyPI.\r\n\r\nThis moves the files and package:\r\n\r\nMove files ext/opentelemetry-ext-testutil -> tests/util\r\nMove package opentelemetry.ext.testutil -> opentelemetry.test\r\nThis makes maintainers' lives easier, but it does mean that other packages that use testutils will have to install install the opentelemetry.test package from source. But this is already the case since we don't publish opentelemetry-ext-testutil.\r\n\r\nwe move shared test code back into the main repo until we move a package that depends on it into a separate repo, at which point we'll have to put this code in its own top-level package."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111444ee515ce6a4e8b2",
    "number": 558,
    "body": "We'll eventually need an `opentelemetry.logs` package, but we should remove it until then.\r\n\r\nIt may not have been worth removing this dir if it were just a placeholder in code, but the package gets built and included in releases. We could exclude it from the API package manifest, but I think we may as well remove it altogether.",
    "head_branch": "rm-logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unused logs dir (#558)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111544ee515ce6a4e8b3",
    "number": 557,
    "body": "Fixes #473.\r\n\r\nWe build two artifacts for each package: a source tarball (e.g. `opentelemetry-api-0.7.dev0.tar.gz`) and a wheel (e.g. `opentelemetry_api-0.7.dev0-py3-none-any.whl`). After this change, tests should be included in tarballs but not in wheels, and a license file should be included in both.\r\n\r\nThe full list of files included in both tarballs and wheels is here: https://gist.github.com/c24t/22520673b2e46ba68bb2954d6cc6a2ab.\r\n\r\nChanges in this PR:\r\n\r\n- Add previously-excluded test packages to API and SDK package manifests \r\n- Make API and SDK packages use setup.cfg (like other packages in repo)\r\n- Add license and manifest files to all built packages\r\n- Move API version.py back into top level package, use `pkg_resources` to get version in other packages\r\n- Incidental cleanup and fixes\r\n\r\nI tested `opentelemetry-api` and `opentelemetry-sdk` by installing the packages from wheels in a new virtualenv, extracting the tests from the tarballs and copying them into a new dir, and running them via pytest.\r\n\r\nAFAICT we need to include the license file in each package to include it in the built artifacts.\r\n",
    "head_branch": "packaging-extras",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add tests and license to release tarballs (#557)\n\n- Add previously-excluded test packages to API and SDK package manifests\r\n- Make API and SDK packages use setup.cfg (like other packages in repo)\r\n- Add license and manifest files to all built packages\r\n- Move API version.py back into top level package, use pkg_resources to get\r\n  version in other packages\r\n- Incidental cleanup and fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111644ee515ce6a4e8b4",
    "number": 556,
    "body": "Left over from #327: build the new autoinstrumentation package in build script.",
    "head_branch": "build-auto-instr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add opentelemetry-auto-instrumentation to build.sh (#556)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111744ee515ce6a4e8b5",
    "number": 553,
    "body": "- Add missing one in ext/flask\r\n- Remove year in autoinstrumentation",
    "head_branch": "mauricio/add-missing-copyright-header",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix copyright headers (#553)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111744ee515ce6a4e8b6",
    "number": 552,
    "body": "The span context is no longer coupled with the tracer itself.\r\nAs such, providing a get_current_span method bound to the\r\ntrace api module rather than a specific tracer is semantically\r\ncorrect, and removes a hurdle where someone who wants to retrieve\r\nthe current trace would have to create a tracer to do so.\r\n\r\nrenaming and export get_span_in_context to get_current_span,\r\nas the intention of the API is similar, and reduces unneeded\r\naliasing and duplication.\r\n\r\nset_span_in_context is not renamed, as set_current_span would have\r\nimplied that the span would then be active in the default context,\r\nwhich is only true after attaching the resulting context returned\r\nby set_span_in_context. Keeping that name at least implies some\r\nasymmetric behavior from get_current_span.",
    "head_branch": "feature/trace-get-current-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: adding trace.get_current_span (#552)\n\nThe span context is no longer coupled with the tracer itself.\r\nAs such, providing a get_current_span method bound to the\r\ntrace api module rather than a specific tracer is semantically\r\ncorrect, and removes a hurdle where someone who wants to retrieve\r\nthe current trace would have to create a tracer to do so.\r\n\r\nrenaming and exporting get_span_in_context to get_current_span,\r\nas the intention of the API is similar, and reduces unneeded\r\naliasing and duplication.\r\n\r\nset_span_in_context is not renamed, as set_current_span would have\r\nimplied that the span would then be active in the default context,\r\nwhich is only true after attaching the resulting context returned\r\nby set_span_in_context. Keeping that name at least implies some\r\nasymmetric behavior from get_current_span.\r\n\r\nAfter discussion in the SIG, we decided to remove the\r\nlegacy get_current_span APIs from Tracer and TracerProvider\r\nto reduce long-term confusion of how to idiomatically retrieve\r\nthe span.\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Hector Hernandez <39923391+hectorhdzg@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Andrew Xue <aaxue@google.com>\r\nCo-authored-by: Cheng-Lung Sung <clsung@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111844ee515ce6a4e8b7",
    "number": 551,
    "body": "Fixes #550\r\n\r\nThis fix requires to run code before an `import` statement, which is frowned upon by PEP8 format checkers because this is considered an [error](https://pep8.readthedocs.io/en/release-1.7.x/intro.html#error-codes) (E402). Nevertheless, I prefer to add this as a fix *now* in order to have at least a functional example. Avoiding this error will require more functionality added to the instrumentor.",
    "head_branch": "issue_550",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix example in documentation (#551)\n\nFixes #550"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111944ee515ce6a4e8b8",
    "number": 549,
    "body": "Zipkin spec expects the debug field to be a boolean, not an integer. OpenTelemetry collector rejects spans exported by the Python Zipkin exporter with the following error message:\r\n\r\n```\r\nTraces cannot be uploaded; status code: 400, message json: cannot unmarshal number into Go struct field .debug of type bool\r\n```\r\n\r\nZipkin data model confirms that the field should be a boolean here: https://zipkin.io/zipkin-api/",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed `debug` field usage in zipkin exporter (#549)\n\nZipkin spec expects the debug field to be a boolean, not an integer."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111a44ee515ce6a4e8b9",
    "number": 548,
    "body": "Exporter and span handling complexity was increasing due to the\r\nSpan.parent attribute being either a Span or a SpanContext.\r\n\r\nAs there is no requirement in the specification to have the parent\r\nattribute be a Span, removing this complexity and handling.",
    "head_branch": "feature/parent-spancontext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: span parents are now always spancontext (#548)\n\nExporter and span handling complexity was increasing due to the\r\nSpan.parent attribute being either a Span or a SpanContext.\r\n\r\nAs there is no requirement in the specification to have the parent\r\nattribute be a Span, removing this complexity and handling.\r\n\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111b44ee515ce6a4e8ba",
    "number": 546,
    "body": "Fixes #545",
    "head_branch": "issue_545",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Flask ext dependencies (#546)\n\nSome Flask ext dependencies are missing or misplaced in the configuration file.\r\n\r\nFixes #545"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111b44ee515ce6a4e8bb",
    "number": 544,
    "body": "Two small fixes for autoinstrumentation docs.",
    "head_branch": "mauricio/fix-auinstrumentation-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Fix autoinstrumentation docs (#544)\n\n- Convert file to rst to be included in the generated documentation\r\n- Include docs for main module.\r\n- Use internal reference instead of read the docs link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111c44ee515ce6a4e8bc",
    "number": 543,
    "body": "",
    "head_branch": "lizf.typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: fix typo (#543)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111d44ee515ce6a4e8bd",
    "number": 540,
    "body": "Change the status from \"alpha\" to \"beta\" in the project README, remove the upcoming features table, and fix some typos.\r\n\r\nAt this point we may want to remove the details on past releases or otherwise rewrite the README, but the goal of this PR is just to get it in sync with the last release.",
    "head_branch": "beta-not-alpha",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README for 0.6.0 release (#540)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111e44ee515ce6a4e8be",
    "number": 539,
    "body": "These packages were added after #525, and should have been changed before the release on 3/30.\r\n\r\nThis change only affects the classifier for packages installed from source, the packages on PyPI will be updated with the next release.",
    "head_branch": "more-525",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Mark new packages as beta (#539)\n\nUpdate dev status classifiers to beta\r\nAdd py3.8 classifier\r\n\r\nThis change only affects the classifier for packages installed from source, the packages on PyPI will be updated with the next release."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620111f44ee515ce6a4e8bf",
    "number": 537,
    "body": "See #536 for the release branch PR.",
    "head_branch": "v0.7.dev0-bump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Version bump for master post-v0.6b0 release (#537)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112044ee515ce6a4e8c0",
    "number": 536,
    "body": "Update version numbers for `0.6b.0` on the release branch. See #533 for the changelog updates.",
    "head_branch": "v0.6b.0-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Version bump for 0.6b.0 release (#536)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112044ee515ce6a4e8c1",
    "number": 535,
    "body": "I noticed that `isort --recursive .` didn't pass on master while working on some unrelated changes.\r\n\r\n`isort` also sorted `psutil` as a first-party import in `docs/examples/basic_meter/observer.py` for me.",
    "head_branch": "isort-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Misc isort fixes (#535)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112144ee515ce6a4e8c2",
    "number": 534,
    "body": "The rendered documentation is a little out of sync in a couple areas.\r\nResolving those.\r\n\r\n- Adding an API subsection footer to those that don't have it\r\n- Removing installation instructions in the readme\r\n- Referencing automodule vs a direct include of the readme",
    "head_branch": "feature/minor-doc-formatting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: standard usage format across ext packages (#534)\n\nThe rendered documentation is a little out of sync in a couple areas.\r\nResolving those.\r\n\r\n- Adding an API subsection footer to those that don't have it\r\n- Removing installation instructions in the readme\r\n- Referencing automodule vs a direct include of the readme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112244ee515ce6a4e8c3",
    "number": 533,
    "body": "This includes the full changelog for the 0.6 release.\r\n\r\nProposed release text:\r\n\r\nBeta v6 release\r\n\r\n# Documentation\r\n\r\nDocumentation continues to see large improvements, including re-organizing the examples to make them more discoverable. \r\n\r\nReadmes and the getting started guide also have some corrections.\r\n\r\n# opentelemetry-api\r\n\r\n- Add support for lazy events and links (#474)\r\n- Metrics API no longer uses LabelSet (#527)\r\n- Adding is_remote flag to SpanContext, indicating when a span is remote (#516)\r\n- Allow digit as first char in vendor specific trace state key (#511)\r\n\r\n# opentelemetry-sdk\r\n\r\n- Add support for lazy events and links (#474)\r\n- Metrics API no longer uses LabelSet (#527)\r\n- Adding is_remote flag to SpanContext, indicating when a span is remote (#516)\r\n- Adding a solution to release metric handles and observers (#435)\r\n\r\n# opentelemetry-ext-flask\r\n\r\n- Add an entry_point to be usable in auto-instrumentation (#327)\r\n\r\n# opentelemetry-ext-jaeger\r\n\r\n- Exporting to collector now works (#508)",
    "head_branch": "feature/0.6-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: updating changelogs for 0.6 release (#533)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112344ee515ce6a4e8c4",
    "number": 532,
    "body": "@mauriciovasquezbernal two missing lines from #523.",
    "head_branch": "523-extras",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: Missing license boilerplate fixes (#532)\n\nRemoving copyright year from additional examples, to match the standardize boilerplate."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112444ee515ce6a4e8c5",
    "number": 531,
    "body": "@toumorokoshi \r\nSigned-off-by: Daniel González Lopes <danielgonzalezlopes@gmail.com>",
    "head_branch": "remove-authors-from-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Remove authors from releases (#531)\n\nA git shortlog provides the same functionality.\r\n\r\nSigned-off-by: Daniel González Lopes <danielgonzalezlopes@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112544ee515ce6a4e8c6",
    "number": 529,
    "body": "Fixes #524",
    "head_branch": "hectorhdz/metricsSupress",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Adding suppress_instrumentation in Metrics (#529)\n\nSuppressing instrumentation in metrics to ensure no infinite loops of emitting telemetry."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112544ee515ce6a4e8c7",
    "number": 528,
    "body": "E2E verification for span creation using psycopg2 and dbapi integrations",
    "head_branch": "hectorhdzg/psycopgTests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding functional tests for psycopg2 integration (#528)\n\nEnd to end verification for span creation using psycopg2 and dbapi integrations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112644ee515ce6a4e8c8",
    "number": 527,
    "body": "Remove LabelSet according to OTEP 90:\r\nhttps://github.com/open-telemetry/oteps/blob/master/text/0090-remove-labelset-from-metrics-api.md\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/518.",
    "head_branch": "mauricio/remove-label-set",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "metrics: Remove LabelSet (#527)\n\nRemove LabelSet according to OTEP 90:\r\nhttps://github.com/open-telemetry/oteps/blob/master/text/0090-remove-labelset-from-metrics-api.md\r\n\r\nCo-Authored-By: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112744ee515ce6a4e8c9",
    "number": 526,
    "body": "E2E verification for span creation using mysql and dbapi integrations",
    "head_branch": "hectorhdzg/mysqlfunctionaltests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test: Adding functional tests for MySQL integration (#526)\n\nE2E verification for span creation using mysql and dbapi integrations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112844ee515ce6a4e8ca",
    "number": 525,
    "body": "- Update development status to beta\r\n- Add Python 3.8 to list of languages",
    "head_branch": "mauricio/update-pypi-classifiers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update PyPI classifiers (#525)\n\n- Update development status to beta\r\n- Add Python 3.8 to list of languages"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112944ee515ce6a4e8cb",
    "number": 523,
    "body": "According to https://github.com/open-telemetry/community/issues/113#issuecomment-595377568 we can just remove the year.",
    "head_branch": "mauricio/remove-copyright-year",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove copyright year (#523)\n\nIt is not needed and becomes a burden of maintaince work."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112a44ee515ce6a4e8cc",
    "number": 522,
    "body": "Fixes [#510]\r\n\r\nRefactors `last_updated_timestamp` into aggregators instead of bound metric instrument.",
    "head_branch": "obs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Add last_updated_timestamp for metric observers (#522)\n\nRefactors last_updated_timestamp into aggregators instead of bound metric instrument."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112a44ee515ce6a4e8cd",
    "number": 521,
    "body": "Signed-off-by: Daniel González Lopes <danielgonzalezlopes@gmail.com>",
    "head_branch": "fix-future-releases-table",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "readme: Fix future releases table (#521)\n\nSigned-off-by: Daniel González Lopes <danielgonzalezlopes@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112b44ee515ce6a4e8ce",
    "number": 520,
    "body": "> Caches lets Travis CI store directories between builds, which is useful for storing dependencies that take longer to compile or download. -[Travis CI Docs](https://docs.travis-ci.com/user/caching/)\r\n\r\nPR adds [pip caching](https://docs.travis-ci.com/user/caching/#pip-cache) to the `.travis.yml`\r\nThis could be helpful for #513 \r\n\r\nSigned-off-by: Daniel González Lopes <danielgonzalezlopes@gmail.com>",
    "head_branch": "add-travis-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "build: Add caching for pip files (#520)\n\nCaches lets Travis CI store directories between builds, which is useful for storing dependencies that take longer to compile or download. -Travis CI Docs\r\n\r\nSigned-off-by: Daniel González Lopes danielgonzalezlopes@gmail.com"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112c44ee515ce6a4e8cf",
    "number": 519,
    "body": "This PR contains:\r\n- Bash script to generate the AUTHORS file using `git log`.\r\n- Job to run the script on every release.\r\n- The actual AUTHORS file.\r\n\r\nCloses #517 \r\n\r\nSigned-off-by: Daniel González Lopes <danielgonzalezlopes@gmail.com>",
    "head_branch": "add-authors-action",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112d44ee515ce6a4e8d0",
    "number": 516,
    "body": "According to the [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-tracing.md#spancontext) a `SpanContext` should have an indicator if it was propagated from a remote parent.\r\n\r\nThis PR introduces an `is_remote` flag on the `SpanContext` which gets set when the `SpanContext` is extracted in a propagator.",
    "head_branch": "spancontext-isremote-flag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add indicator if SpanContext was propagated from remote parent (#516)\n\nAccording to the spec a SpanContext should have an indicator if it was propagated from a remote parent.\r\n\r\nIntroduces an is_remote flag on the SpanContext which gets set when the SpanContext is extracted in a propagaton."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112e44ee515ce6a4e8d1",
    "number": 512,
    "body": "This commit fixes a series of issues in the getting started guide:\r\n- Avoid using relative paths for docker volumes. Use `pwd` instead:\r\n  https://github.com/moby/moby/issues/4830#issuecomment-264366876\r\n- Fix indentation in prometheus config\r\n- Fix otcollector example\r\n  - Missing span processor\r\n  - Remove sampling_initial and sampling_thereafter keys in config\r\n\r\nTo reviewers:\r\nPlease check that the old configuration isn't actually working for you and the new one solves it.\r\n\r\n",
    "head_branch": "mauricio/fix-getting-started-guide",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: fix getting started guide (#512)\n\nThis commit fixes a series of issues in the getting started guide:\r\n\r\n- Avoid using relative paths for docker volumes. Use `pwd` instead:\r\n  https://github.com/moby/moby/issues/4830#issuecomment-264366876\r\n- Fix indentation in prometheus config\r\n- Fix otcollector example\r\n  - Missing span processor\r\n  - Remove sampling_initial and sampling_thereafter keys in config"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112f44ee515ce6a4e8d2",
    "number": 511,
    "body": "Allows vendor specific trace state keys to start with a digit as specified in: https://github.com/w3c/trace-context/blob/master/spec/20-http_header_format.md#key",
    "head_branch": "tracecontext-key-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: Allow digit as first chr in vendor specific trace state key (#511)\n\nAllows vendor specific trace state keys to start with a digit as specified in: https://github.com/w3c/trace-context/blob/master/spec/20-http_header_format.md#key"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620112f44ee515ce6a4e8d3",
    "number": 509,
    "body": "",
    "head_branch": "readme-0.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding v0.5.0 notes to readme (#509)\n\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113044ee515ce6a4e8d4",
    "number": 508,
    "body": "Edit: I updated the PR to use THTTPClient directly\r\n\r\n    The exporting of traces to the collector is broken, it replies with the\r\n    \"Unable to process request body: Required field Process is not set\" error.\r\n    \r\n    The current implementation is based on OpenCensus [1], what appears to be broken\r\n    too, it's not totally clear at this time what's wrong with that.\r\n    \r\n    This commit changes the logic to avoid using jaeger.Client that appears to be\r\n    the broken piece, it is changed by a direct invokation to the THTTPClient\r\n    transport from thrift.\r\n\r\n    [1] https://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-jaeger\r\n\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/493.\r\n\r\nHow to test:\r\n\r\nRun the Jaeger collector, I used (notice there is not any port for the agent)\r\n```\r\ndocker run -p 16686:16686 -p 14268:14268 jaegertracing/all-in-one\r\n```\r\n\r\nExport some traces to the collector:\r\n```\r\n# create a JaegerSpanExporter\r\njaeger_exporter = jaeger.JaegerSpanExporter(\r\n    service_name=\"my-helloworld-service\",\r\n    # configure agent\r\n    # agent_host_name=\"localhost\",\r\n    # agent_port=6831,\r\n    # optional: configure also collector\r\n    collector_host_name=\"localhost\",\r\n    collector_port=14268,\r\n    collector_endpoint=\"/api/traces\",\r\n    # username=\"xxxx\",  # optional\r\n    # password=\"xxxx\",  # optional\r\n)\r\n\r\n# create a BatchExportSpanProcessor and add the exporter to it\r\nspan_processor = BatchExportSpanProcessor(jaeger_exporter)\r\n\r\n# add to the tracer factory\r\ntrace.get_tracer_provider().add_span_processor(span_processor)\r\n\r\n# create some spans for testing\r\nwith tracer.start_as_current_span(\"foo\") as foo:\r\n    time.sleep(0.1)\r\n    foo.set_attribute(\"my_atribbute\", True)\r\n    foo.add_event(\"event in foo\", {\"name\": \"foo1\"})\r\n    with tracer.start_as_current_span(\r\n        \"bar\", links=[trace.Link(foo.get_context())]\r\n    ) as bar:\r\n        time.sleep(0.2)\r\n        bar.set_attribute(\"speed\", 100.0)\r\n\r\n        with tracer.start_as_current_span(\"baz\") as baz:\r\n            time.sleep(0.3)\r\n            baz.set_attribute(\"name\", \"mauricio\")\r\n\r\n        time.sleep(0.2)\r\n\r\n    time.sleep(0.1)\r\n```\r\n\r\nCheck that those traces where exported to Jaeger in http://localhost:16686.",
    "head_branch": "mauricio/fix-jaeger-collector-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/jaeger: fix exporting to collector (#508)\n\nThe exporting of traces to the collector is broken, it replies with the\r\n\"Unable to process request body: Required field Process is not set\" error.\r\n\r\nThe current implementation is based on OpenCensus [1], what appears to be broken\r\ntoo, it's not totally clear at this time what's wrong with that.\r\n\r\nThis commit changes the exporting logic to be similar to the opentelemetry-go [2]\r\none that is working. The main change is to perform the request directly without\r\nusing the client provided by the generated files.\r\n\r\n[1] https://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-jaeger\r\n[2] https://github.com/open-telemetry/opentelemetry-go/blob/master/exporters/trace/jaeger/jaeger.go"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113144ee515ce6a4e8d5",
    "number": 507,
    "body": "Fix #506 ",
    "head_branch": "issue_506",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding link to registry in readme (#507)\n\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113244ee515ce6a4e8d6",
    "number": 505,
    "body": "The current version of the exporter prints everything in a single line, making\r\nit difficult to read. It's also missing events, links and attributes.\r\n\r\nThis commit changes the console span exporter to use multiple lines and also\r\nadds the missing information about attributes, events and links.\r\n\r\nFixes: https://github.com/open-telemetry/opentelemetry-python/issues/478\r\n\r\nI started thinking it was a super easy task, then I realized it was more complex than I anticipated. I ended up with this version, I would like to know opinions on this.\r\n\r\nEdit: I realized It was getting too messy by handling all the indentation logic and so on. I created a new version that uses json to format the spans.\r\n\r\nExample code:\r\n\r\n```python\r\nwith tracer.start_as_current_span(\"foo\") as foo:\r\n    time.sleep(0.1)\r\n    foo.set_attribute(\"my_atribbute\", True)\r\n    foo.set_attribute(\"speed\", 100.0)\r\n    foo.add_event(\"event in foo\", {\"name\": \"foo1\"})\r\n    foo.add_event(\"another event \", {\"busy\": \"yes\"})\r\n    with tracer.start_as_current_span(\r\n        \"bar\", links=[trace.Link(foo.get_context())]\r\n    ):\r\n        time.sleep(0.2)\r\n\r\n    time.sleep(0.1)\r\n```\r\n\r\nExample output:\r\n\r\n```\r\n{\r\n    \"name\": \"bar\",\r\n    \"context\": {\r\n        \"trace_id\": \"0x16c0898305a3c8502010bda5f294f1af\",\r\n        \"span_id\": \"0x7c7ed84c9fe216a6\",\r\n        \"trace_state\": \"{}\"\r\n    },\r\n    \"kind\": \"SpanKind.INTERNAL\",\r\n    \"parent_id\": \"0x4110ce5e5d865531\",\r\n    \"start_time\": \"2020-03-19T01:38:43.874587Z\",\r\n    \"end_time\": \"2020-03-19T01:38:44.074997Z\",\r\n    \"attributes\": {},\r\n    \"events\": [],\r\n    \"links\": [\r\n        {\r\n            \"context\": {\r\n                \"trace_id\": \"0x16c0898305a3c8502010bda5f294f1af\",\r\n                \"span_id\": \"0x4110ce5e5d865531\",\r\n                \"trace_state\": \"{}\"\r\n            },\r\n            \"attributes\": {}\r\n        }\r\n    ]\r\n}\r\n{\r\n    \"name\": \"foo\",\r\n    \"context\": {\r\n        \"trace_id\": \"0x16c0898305a3c8502010bda5f294f1af\",\r\n        \"span_id\": \"0x4110ce5e5d865531\",\r\n        \"trace_state\": \"{}\"\r\n    },\r\n    \"kind\": \"SpanKind.INTERNAL\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2020-03-19T01:38:43.773931Z\",\r\n    \"end_time\": \"2020-03-19T01:38:44.175258Z\",\r\n    \"attributes\": {\r\n        \"my_atribbute\": true,\r\n        \"speed\": 100.0\r\n    },\r\n    \"events\": [\r\n        {\r\n            \"name\": \"event in foo\",\r\n            \"timestamp\": \"2020-03-19T01:38:43.874393Z\",\r\n            \"attributes\": {\r\n                \"name\": \"foo1\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"another event \",\r\n            \"timestamp\": \"2020-03-19T01:38:43.874436Z\",\r\n            \"attributes\": {\r\n                \"busy\": \"yes\"\r\n            }\r\n        }\r\n    ],\r\n    \"links\": []\r\n}\r\n\r\n```\r\n",
    "head_branch": "mauricio/improve-console-span-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Improve console span exporter (#505)\n\nThe current version of the exporter prints everything in a single line, making\r\nit difficult to read. It's also missing events, links and attributes.\r\n\r\nThis commit changes the console span exporter to use multiple lines and also\r\nadds the missing information about attributes, events and links."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113344ee515ce6a4e8d7",
    "number": 504,
    "body": "Integration for [PyMySQL](https://pypi.org/project/PyMySQL/).\r\nFixes some documentation as well for other db integrations.\r\nLeverages dbapi.",
    "head_branch": "pymy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "PyMySQL Integration (#504)\n\nIntegration for PyMySQL.\r\n\r\nFixes some documentation as well for other db integrations. Leverages dbapi.\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113444ee515ce6a4e8d8",
    "number": 503,
    "body": "Update to the zipkin/jaeger ext READMEs and also a small doc update.\r\n\r\n0.5.0 changed `.tracer_provider()` to `.get_tracer_provider()`\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/f52468b1b2c3d9bd6a71a203e1f0e99bc1b8eac3/opentelemetry-api/src/opentelemetry/trace/__init__.py#L669",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Update for `get_tracer_provider()` (#503)\n\nUpdate to the zipkin/jaeger ext READMEs and also a small doc update.\r\n\r\n0.5.0 changed .tracer_provider() to .get_tracer_provider()\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113544ee515ce6a4e8d9",
    "number": 502,
    "body": "The \"scm_raw_web\" and \"scm_web\" macros are used in the documentation to create\r\nlinks to specific versions of the documents. It's useful to point to the right\r\nversion of the examples for instance.\r\n\r\nThere is a special \"stable\" version in readthedocs that points to the highest\r\nrelease, generated links to that version are wrongly pointing to a non existing\r\n\"stable\" release. This commit fixes that logic by getting the highest release\r\nby using the Github API when building documents for the stable release.",
    "head_branch": "mauricio/fix-link-stable-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113544ee515ce6a4e8da",
    "number": 500,
    "body": "See #445, which would have caught this.",
    "head_branch": "fix-otcollector-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Fix otcollector README (#500)\n\nFixes % python -m readme_renderer ext/opentelemetry-ext-otcollector/README.rst\r\n<string>:22: (ERROR/3) Unknown target name: \"opentelemetry\"."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113644ee515ce6a4e8db",
    "number": 499,
    "body": "Following the `0.5b0` release in #498.\r\n\r\nThis branch updates all package versions and requirements to `0.6.dev0` and applies the changelog updates from #498 to master.",
    "head_branch": "v0.5b0-master-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update master to 0.6.dev0 (#499)\n\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113744ee515ce6a4e8dc",
    "number": 498,
    "body": "Total Changelog:\r\n\r\nDocumentations has been significantly overhauled, including:\r\n\r\n* a getting started guide\r\n* examples has been consolidated to an docs/examples folder\r\n* several minor improvements to the examples in each extension's readme.\r\n\r\n- Adding Correlation Context API and propagator\r\n  ([#471](https://github.com/open-telemetry/opentelemetry-python/pull/471))\r\n- Adding a global configuration module to simplify setting and getting\r\n  globals\r\n  ([#466](https://github.com/open-telemetry/opentelemetry-python/pull/466))\r\n- Rename metric handle to bound metric\r\n  ([#470](https://github.com/open-telemetry/opentelemetry-python/pull/470))\r\n- Moving resources to sdk\r\n  ([#464](https://github.com/open-telemetry/opentelemetry-python/pull/464))\r\n- Implementing propagators to API to use context\r\n  ([#446](https://github.com/open-telemetry/opentelemetry-python/pull/446))\r\n- Implement observer instrument for metrics\r\n  ([#425](https://github.com/open-telemetry/opentelemetry-python/pull/425))\r\n- Adding named meters, removing batchers\r\n  ([#431](https://github.com/open-telemetry/opentelemetry-python/pull/431))\r\n- Renaming TraceOptions to TraceFlags\r\n  ([#450](https://github.com/open-telemetry/opentelemetry-python/pull/450))\r\n- Renaming TracerSource to TraceProvider\r\n  ([#441](https://github.com/open-telemetry/opentelemetry-python/pull/441))\r\n\r\n- Adding Correlation Context SDK and propagator\r\n  ([#471](https://github.com/open-telemetry/opentelemetry-python/pull/471))\r\n- Adding OT Collector metrics exporter\r\n  ([#454](https://github.com/open-telemetry/opentelemetry-python/pull/454))\r\n- Improve validation of attributes\r\n  ([#460](https://github.com/open-telemetry/opentelemetry-python/pull/460))\r\n- Re-raise errors caught in opentelemetry.sdk.trace.Tracer.use_span()\r\n  (#469)\r\n  ([#469](https://github.com/open-telemetry/opentelemetry-python/pull/469))\r\n- Adding named meters, removing batchers\r\n  ([#431](https://github.com/open-telemetry/opentelemetry-python/pull/431))\r\n- Make counter and MinMaxSumCount aggregators thread safe\r\n  ([#439](https://github.com/open-telemetry/opentelemetry-python/pull/439))\r\n\r\n- Initial release. Support is included for both trace and metrics.",
    "head_branch": "feature/0.5b.x-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Changelog and version updates for 0.5b0 release (#498)\n\nCo-authored-by: Chris Kleinknecht <libc@google.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113844ee515ce6a4e8dd",
    "number": 497,
    "body": "Replace `set_preferred_meter_provider_implementation` with `set_meter_provider`",
    "head_branch": "fix_preferred",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed set_preferred_meter_provider_implementation (#497)\n\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113944ee515ce6a4e8de",
    "number": 496,
    "body": "",
    "head_branch": "mauriciovasquezbernal-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113a44ee515ce6a4e8df",
    "number": 495,
    "body": "The flask run() call was added for completeness, which causes\r\nthe pytest collection to run forever, and time out CI.",
    "head_branch": "feature/fix-example-app-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bugfix: Fixing example app test (#495)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113a44ee515ce6a4e8e0",
    "number": 494,
    "body": "link to docs: https://opentelemetry-python-yusuket.readthedocs.io/en/latest/getting-started.html\r\n\r\nAdding a get started doc page\r\n    \r\nAs a requirement for the opentelemetry beta, providing a documentation\r\npage that runs through the use of traces, metrics, and common exporters.\r\n    \r\nIn the future, the code snippets in the page will be reconciled to use\r\nexisting snippets, after some significant refactors around documentation\r\nis merged in.\r\n\r\nFixes #491 \r\n\r\nI haven't yet been able to get the otcollector or the jaeger example working. Tracking work in #493.",
    "head_branch": "feature/getting-started",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Feature/getting started (#494)\n\nAs a requirement for the opentelemetry beta, providing a documentation\r\npage that runs through the use of traces, metrics, and common exporters.\r\n\r\nIn the future, the code snippets in the page will be reconciled to use\r\nexisting snippets, after some significant refactors around documentation\r\nis merged in.\r\n\r\nFixes #491\r\n\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113b44ee515ce6a4e8e1",
    "number": 492,
    "body": "See #445\r\n\r\nI’ve gone ahead and wrote a simple test script that assumes a `README.rst` is and should be present. Not sure what output and exit behavior would be desirable in that case. I exit normally and print a warning if the `README.rst` is missing. `sys.exit(1)` if there is a syntax error. Example output of  is below.\r\n\r\n~There is apparently already an error in one of the readme files which I'll look at tomorrow~ (fixed in 9ddbfd8). Would something like this be sufficient?\r\n\r\n\r\n```\r\npython scripts/eachdist.py lint\r\n```\r\n```\r\n>>> python tests/check_for_valid_readme.py opentelemetry-api opentelemetry-sdk ext/opentelemetry-ext-wsgi ext/opentelemetry-ext-opentracing-shim ext/opentelemetry-ext-jaeger ext/opentelemetry-ext-otcollector ext/opentelemetry-ext-http-requests ext/opentelemetry-ext-flask ext/opentelemetry-ext-pymongo ext/opentelemetry-ext-psycopg2 ext/opentelemetry-ext-testutil ext/opentelemetry-ext-dbapi ext/opentelemetry-ext-prometheus ext/opentelemetry-ext-mysql ext/opentelemetry-ext-zipkin docs/examples/opentelemetry-example-app\r\n✗ RST syntax errors in ext/opentelemetry-ext-otcollector/README.rst\r\n✗ No README.rst in ext/opentelemetry-ext-testutil\r\n'python tests/check_for_valid_readme.py opentelemetry-api opentelemetry-sdk ext/opentelemetry-ext-wsgi ext/opentelemetry-ext-opentracing-shim ext/opentelemetry-ext-jaeger ext/opentelemetry-ext-otcollector ext/opentelemetry-ext-http-requests ext/opentelemetry-ext-flask ext/opentelemetry-ext-pymongo ext/opentelemetry-ext-psycopg2 ext/opentelemetry-ext-testutil ext/opentelemetry-ext-dbapi ext/opentelemetry-ext-prometheus ext/opentelemetry-ext-mysql ext/opentelemetry-ext-zipkin docs/examples/opentelemetry-example-app' failed with code 1\r\n```",
    "head_branch": "add-test-for-package-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "lint: Add test for package readme syntax errors (#492)\n\nAdd a test to ensure readmes render properly\r\n\r\nAlso adds README.rst for testutil package to pass new test.\r\n\r\nCo-authored-by: Christian Neumüller <christian+github@neumueller.me>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113c44ee515ce6a4e8e2",
    "number": 490,
    "body": "Follow up to #471 to add generated docs.\r\n\r\n![_Users_libc_src_opentelemetry-python_docs__build_html_api_correlationcontext html(iPad Pro)](https://user-images.githubusercontent.com/43799105/76692418-8e895c80-6613-11ea-9cf7-5a1e725f22a3.png)\r\n\r\n![_Users_libc_src_opentelemetry-python_docs__build_html_api_correlationcontext propagation html(iPad Pro)](https://user-images.githubusercontent.com/43799105/76692419-934e1080-6613-11ea-8782-070ec6b5ad08.png)\r\n",
    "head_branch": "correlationcontext-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Correlation context docs (#490)\n\nCo-authored-by: Alex Boten <aboten@lightstep.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113d44ee515ce6a4e8e3",
    "number": 489,
    "body": "Address [@mauriciovasquezbernal's comment on #466](https://github.com/open-telemetry/opentelemetry-python/pull/466/files#r391174407).",
    "head_branch": "fix-versionchanged-copypasta",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix versionchanged doc from #466 (#489)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113e44ee515ce6a4e8e4",
    "number": 488,
    "body": "See https://github.com/open-telemetry/opentelemetry-python/pull/466/files#r392613438.\r\n\r\nThis PR updates docs and example code to use SDK-provided providers following #466.\r\n\r\n#466 removed `set_preferred_implementation` in favor of `set_provider` methods. Before this change, most example code and docs loaded the SDK `TracerProvider` and `MeterProvider`. Although we technically don't need these lines now that it's possible to set the default providers in config, I think it's still useful to include them since we expect most users to use the SDK types. Writing the examples this way means they can run as-is without a separate config file.\r\n\r\ncc @ocelotl.",
    "head_branch": "sdk-providers-in-ex",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use SDK providers in example code (#488)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113f44ee515ce6a4e8e5",
    "number": 487,
    "body": "Add the new configuration module from #466 to the generated docs and fix the docstring so it renders nicely:\r\n\r\n![docs_screenshot](https://user-images.githubusercontent.com/43799105/76689990-22016400-65f9-11ea-84d8-57efb97e5a86.png)\r\n",
    "head_branch": "config-module-doc-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Config module doc fixes (#487)\n\nAdd the new configuration module from #466 to the generated docs.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620113f44ee515ce6a4e8e6",
    "number": 484,
    "body": "This commit removes duplicated content from the main readme and adds a link\r\nto the online documentation.\r\n\r\nOpening as an independent PR to make it easier to review.\r\n\r\nShould we remove the installation instructions as well?",
    "head_branch": "mauricio/update-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update main readme (#484)\n\nRemove duplicated content from the main readme and add a link to the online\r\ndocumentation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114044ee515ce6a4e8e7",
    "number": 483,
    "body": "Update examples according to https://github.com/open-telemetry/opentelemetry-python/issues/482.\r\n\r\nA preview of the resulting documentation is available at https://opentelemetry-python-kinvolk.readthedocs.io/en/reorganize-examples/.\r\n\r\nThis PR also moves the text on the readmes of the external packages to their\r\nsource code as a docstring. This improves the generated documentation and helps\r\nto consolidate the documentation in a single place.\r\n\r\nThis commit uniforms all the readmes present on each packager, they only contain\r\na 1 line description, installation instructions and a link to the online\r\ndocumentation of such package. This small readme will be the one shown on Github\r\nand on PyPI.\r\n\r\nThe full documentation will be generated by autodoc and stored in readthedocs\r\nor whatever site we choose.",
    "head_branch": "reorganize-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Reorganize examples and improve ext packages documentation (#483)\n\nThis commit moves the text on the readmes of the external packages to their\r\nsource code as a docstring. This improves the generated documentation and helps\r\nto consolidate the documentation in a single place.\r\n\r\nAlso unify the readmes present on each package to include a 1 line description, installation instructions and a link to the online documentation. This small readme will be the one shown on Github and on PyPI.\r\n\r\nAlso change the examples structure to have the following examples:\r\n- basic meter & tracer\r\n- http integration\r\n- jaeger, prometheus, otcollector{tracer, metrics}\r\n- opentracing shim\r\n\r\nCo-authored-by: alrex <alrex.boten@gmail.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114144ee515ce6a4e8e8",
    "number": 481,
    "body": "",
    "head_branch": "lizf.pyodbc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add example for pyodbc (#481)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114244ee515ce6a4e8e9",
    "number": 476,
    "body": "This is a port of [`grpcio-opentracing`](https://github.com/opentracing-contrib/python-grpc/), and borrows from [`opencensus-ext-grpc`](https://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-grpc). It adds client and server interceptors that wrap each request in a span and use the new context API to inject/extract the traceparent header to/from gRPC metadata.\r\n\r\n The PR includes two examples copied from [grpc-python](https://github.com/grpc/grpc/tree/master/examples/python/) itself:\r\n\r\n- `helloworld` ([source](https://github.com/grpc/grpc/tree/master/examples/python/helloworld), [docs](https://grpc.io/docs/quickstart/python/)) which shows how to instrument the client and server in a basic unary-unary call pattern\r\n- `route_guide` ([source](https://github.com/grpc/grpc/tree/master/examples/python/route_guide), [docs](https://grpc.io/docs/tutorials/basic/python/)) which includes examples for unary-unary, client-streaming, server-streaming, and bidirectional streaming\r\n\r\n**Running the examples**\r\n\r\n```\r\n% cd ext/opentelemetry-ext-grpc/examples\r\n% ./hello_world_server.py\r\nSpan(name=\"/helloworld.Greeter/SayHello\", context=SpanContext(trace_id=0xdc68d08b983225bf3b86eabfc9a9f02c, span_id=0x12aa95fc91338970, trace_state={}), kind=SpanKind.SERVER, parent=<opentelemetry.trace.DefaultSpan object at 0x10943d190>, start_time=2020-03-25T00:23:31.605991Z, end_time=2020-03-25T00:23:31.606155Z)\r\n```\r\n\r\n```\r\n% ./hello_world_client.py\r\nSpan(name=\"/helloworld.Greeter/SayHello\", context=SpanContext(trace_id=0xdc68d08b983225bf3b86eabfc9a9f02c, span_id=0xb4766ea78457996c, trace_state={}), kind=SpanKind.CLIENT, parent=None, start_time=2020-03-25T00:23:31.574011Z, end_time=2020-03-25T00:23:31.606996Z)\r\nGreeter client received: Hello, YOU!\r\n```\r\n\r\nNote that the client's trace ID gets propagated to the server.\r\n\r\nYou should see something similar running `./route_guide_server.py` and `route_guide_client.py`.\r\n\r\n**Comparing to grpcio-opentracing**\r\n\r\n88e94672 copied some files from [grpcio-opentracing](https://github.com/opentracing-contrib/python-grpc/). To see what changed between OpenTracing and OpenTelemetry, check the [diff against 88e94672](https://github.com/open-telemetry/opentelemetry-python/pull/476/files/88e946724c20fbcf36d74757aa0a1eecddcb986b..HEAD). The important files are `_client.py` and `_server.py`.\r\n\r\nThe `grpcext` package is copied from `grpcio-opentracing`. It implemented interceptors before `grpc-python` had proper support for them. `grpc-python` has since added interceptors, but `grpcio-opentracing` still uses its own implementation.\r\n\r\nThis PR still uses `grpcext`, but we should replace this with the official interceptor API in a follow up PR.\r\n\r\nSee for background:\r\n- https://github.com/grpc-ecosystem/grpc-opentracing/pull/32\r\n- https://github.com/grpc/grpc/issues/8767\r\n\r\n**How to review**\r\n\r\nPlease ignore the generated `_pb2.py` and `_pb2_grpc.py` files. The meat of the PR is in `_client.py` and `_server.py`.\r\n\r\nTry running the tests and examples.\r\n\r\n**Still TODO**\r\n\r\n- This PR only includes server-side unary-unary tests, add tests for both sides for all calling patterns.\r\n- Add span attributes following the [semantic conventions in the spec](https://github.com/open-telemetry/opentelemetry-specification/blob/bc23ca12199836b565c867a393bf752d0fb25f04/specification/data-rpc.md).\r\n- Use the new [gRPC interceptor API](https://github.com/grpc/grpc/blob/master/examples/python/interceptors/headers/greeter_server.py) instead of `grpcext`.\r\n",
    "head_branch": "grpc-again",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "gRPC integration (#476)\n\nThis is a port of grpcio-opentracing, and borrows from opencensus-ext-grpc. It\r\nadds client and server interceptors that wrap each request in a span and use\r\nthe new context API to inject/extract the traceparent header to/from gRPC\r\nmetadata.\r\n\r\nCo-authored-by: alrex <alrex.boten@gmail.com>\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Mario Jonke <mario.jonke@dynatrace.com>\r\nCo-authored-by: Daniel González <danielgonzalezlopes@gmail.com>\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114344ee515ce6a4e8ea",
    "number": 475,
    "body": "This commit moves the text on the readmes of the external packages to their\r\nsource code as a docstring. This improves the generated documentation and helps\r\nto consolidate the documentation in a single place.\r\n\r\nThis commit uniforms all the readmes present on each packager, they only contain\r\na 1 line description, installation instructions and a link to the online\r\ndocumentation of such package. This small readme will be the one shown on Github\r\nand on PyPI.\r\n\r\nThe full documentation will be generated by autodoc and stored in readthedocs\r\nor whatever site we choose.",
    "head_branch": "improve-ext-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114444ee515ce6a4e8eb",
    "number": 474,
    "body": "This PR fix the support for lazy events and links.\r\n\r\nThe idea behind this PR is to have two versions of each class, `Link` and `LazyLink`.\r\n`Link` is constructed using the already calculated attributes, while `LazyLink` receives an `link_formatter` function that returns the attributes when invoked.\r\n\r\nThis PR also moves the class `Event` definition to the SDK because after the changes to `add_lazy_event` it is not used anywhere on the API.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/384.",
    "head_branch": "mauricio/implement-lazy-events-and-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Add support for lazy events and links (#474)\n\nThe computation of attributes is expensive in some conditions, even in\r\nsome cases those attributes are not used at all. This commit fixes the\r\nadd_lazy_event method by providing a true solution that delays the attributes\r\ncalculation until attributes are accessed. It also provides a new LazyLink class.\r\n\r\nEvents are also moved to SDK, as they are not a required object to satisfy the API specification.\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114444ee515ce6a4e8ec",
    "number": 471,
    "body": "This change removes Distributed Context and replaces it with the Correlations Context API. This change also adds the Correlation Context Propagator to the global httptextformat propagator.\r\n\r\nFixes #416\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "rename-distributed-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding Correlation Context API and propagator (#471)\n\nThis change removes Distributed Context and replaces it with the Correlations\r\nContext API. This change also adds the Correlation Context Propagator to the\r\nglobal httptextformat propagator.\r\n\r\nFixes #416\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114544ee515ce6a4e8ed",
    "number": 470,
    "body": "Solves [#468]",
    "head_branch": "bound",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename \"handle\" to \"bound metric\" (#470)\n\nbound metric is the new name, as dictated in the spec."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114644ee515ce6a4e8ee",
    "number": 469,
    "body": "I was expecting the error to get propagated but instead it was swallowed by the context manager.",
    "head_branch": "reraise-error-in-use-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Re-raise errors caught in opentelemetry.sdk.trace.Tracer.use_span() (#469)\n\nUser raised exceptions were consumed by the context manager."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114744ee515ce6a4e8ef",
    "number": 467,
    "body": "I'm opening this PR as a Request For Comments to understand if it makes sense to continue with this approach to improve documentation or not.\r\n\r\nThe problems I'm trying to solve are:\r\n- Current documentation structure is quite plain, an index document with a lot of links to different modules.\r\n- There are not examples in [the current online documentation](https://opentelemetry-python.readthedocs.io/en/latest/).\r\n- It's difficult to keep aligned the examples with the latest released version, i.e, examples in main readme are not synchronized with packages versions on PyPI.\r\n\r\nThis PR:\r\n- Creates a tree structure for documentation, it allows to organize it better from a developer point of view and also the rendered documentation should be easier to navigate.\r\n- Moves partially the main readme to be included in the online docs, the main readme will be updated to have a link to avoid duplicated content)\r\n- Moves the examples folder to the docs, so they can be accessed through the online documentation. \r\n- Creates a new pair of \"macros\" to create links to specific versions. `scm_web` & `scm_raw_web`.\r\n\r\nThe result documentation can be accessed at https://opentelemetry-python-mauricio.readthedocs.io/en/improve-docsv1/index.html, the only updated example is available at https://opentelemetry-python-mauricio.readthedocs.io/en/improve-docsv1/examples/basic_tracer/README.html. (notice that it includes a link to the example source that is dynamic according to the version).\r\n\r\nPlease let me know your feedback, I'll happy to continue working on this if you think the result it worthy.",
    "head_branch": "improve-docsv1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve docs structure (#467)\n\n- Creates a tree structure for documentation, it allows to organize it better\r\n  from a developer point of view and also the rendered documentation should be\r\n  easier to navigate.\r\n- Moves partially the main readme to be included in the online docs, the main\r\n  readme will be updated to have a link to avoid duplicated content)\r\n- Moves the examples folder to the docs, so they can be accessed through the\r\n  online documentation. Creates a new pair of \"macros\" to create links to\r\n  specific versions, scm_web & scm_raw_web.\r\n\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114844ee515ce6a4e8f0",
    "number": 466,
    "body": "Fixes #123\r\n\r\nThis basically removes `loader.py` (uses entry points instead) and all the calls for `set_preferred_implementation*` in order to cleanly separate user code from configuration. It introduces a configuration manager that can have configuration set by a configuration file (for the moment just a JSON file, probably a more suitable format would be ideal) or environment variables that override the former configuration method.\r\n\r\nA couple test environments are still failing (mypy and tracecontext). Opening still to receive input.",
    "head_branch": "issue_123",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a configuration manager (#466)\n\nFixes #123\r\n\r\nThis basically removes loader.py (uses entry points instead) and all the calls\r\nfor set_preferred_implementation* in order to cleanly separate user code from\r\nconfiguration. It introduces a configuration manager that can have\r\nconfiguration set by a configuration file or environment variables that\r\noverride the former configuration method.\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114944ee515ce6a4e8f1",
    "number": 465,
    "body": "Fixes #123\r\n\r\nThis is still in progress. It is also a quite significant change from the actual loader approach. Even in this stage, comments are very welcome :+1: ",
    "head_branch": "issue_123",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114944ee515ce6a4e8f2",
    "number": 464,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/456.\r\n\r\nThis PR updates the resources class:\r\n- Move it to the SDK\r\n- Accept int, float, str, bool\r\n- Bind resource to `MeterProvider` and `TracerProvider`\r\n\r\nIt is still missing how exporters should export this value.\r\n",
    "head_branch": "mauricio/resources-sdk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Resources sdk (#464)\n\n\r\nMoving resources to the SDK, as per the specification.\r\n\r\nModifying the values it accepts to int, float, str, and bool, to match the spec.\r\n\r\nIntroducing an empty resource. To short-circuit the common empty situation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114a44ee515ce6a4e8f3",
    "number": 462,
    "body": "Before #437, `scripts/build.sh` force-removed old built distributions with `rm -rf $DISTDIR/*`.\r\n\r\nThis change caused the build script to fail if the dir was empty, which happens e.g. during automated builds: https://github.com/open-telemetry/opentelemetry-python/commit/1e3768c802465c5c59f944276e89ddd0f66ee70f/checks?check_suite_id=499159591.\r\n\r\n",
    "head_branch": "rm-f-dist-on-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rm -f dist dir on build (#462)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114b44ee515ce6a4e8f4",
    "number": 461,
    "body": "Pick up changes from #444. This is required to push `0.4a1` packages on PyPI.\r\n",
    "head_branch": "v0.4a.x-a4e7a9a8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix new ext READMEs (#444) (#461)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114c44ee515ce6a4e8f5",
    "number": 460,
    "body": "https://github.com/open-telemetry/opentelemetry-python/pull/348 added some runtime checks for attributes values, however I think this could create some issues to the exporter because it's accepting types as fractions, decimal and complex. This PR changes the logic to only accept int and float, otherwise exporter will have to handle all those different datatypes, something that is clearly not done now:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/005575e537ff97f345610c92276d6b55c32e65e5/ext/opentelemetry-ext-jaeger/src/opentelemetry/ext/jaeger/__init__.py#L266-L273\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/005575e537ff97f345610c92276d6b55c32e65e5/ext/opentelemetry-ext-zipkin/src/opentelemetry/ext/zipkin/__init__.py#L157-L163\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/005575e537ff97f345610c92276d6b55c32e65e5/ext/opentelemetry-ext-otcollector/src/opentelemetry/ext/otcollector/util.py#L65-L74\r\n\r\n\r\nI'm aware of https://github.com/open-telemetry/opentelemetry-specification/issues/425, the outcome appears to be that `numeric` refers to `int` and `float` types.\r\n\r\nThis PR also handles the case of an empty key https://github.com/open-telemetry/opentelemetry-specification/pull/459.\r\n\r\nThere are still some things this PR is not handling:\r\n- Validation for attributes in links and events.\r\n- Accept None as value to delete an attribute.",
    "head_branch": "mauricio/improve-attributes-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Improve attributes validation (#460)\n\n4fca8c985769 (\"Add runtime validation in setAttribute (#348)\") added a robust\r\nattribute validation using numbers.Number to validate numeric types.\r\nAlthough the approach is correct, it presents some complications because\r\nComplex, Fraction and Decimal are accepted because they are Numbers. This\r\npresents a problem to the exporters because they will have to consider all\r\nthese different cases when converting attributes to the underlying exporter\r\nrepresentation.\r\n\r\nThis commit simplifies the logic by accepting only int and float as numeric\r\nvalues."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114d44ee515ce6a4e8f6",
    "number": 459,
    "body": "Usage docs for opentelemetry-ext-jaeger need to be updated after the change to `TracerSource` with v0.4. Looks like it was partially updated already.\r\n\r\nUsers following the usage docs will currently run into this error:\r\n`AttributeError: 'Tracer' object has no attribute 'add_span_processor'`",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "jaeger: Usage README Update for opentelemetry-ext-jaeger (#459)\n\nUsage docs for opentelemetry-ext-jaeger need to be updated after the change to `TracerSource` with v0.4. Looks like it was partially updated already.\r\n\r\nUsers following the usage docs will currently run into this error:\r\n`AttributeError: 'Tracer' object has no attribute 'add_span_processor'`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114d44ee515ce6a4e8f7",
    "number": 458,
    "body": "This PR cherry-picks a9e52b8 from master onto the `0.4a.x` release branch so we can build docs for the last-released version of the library and host on readthedocs.org. The goal is to make the default \"stable\" release docs on readthedocs.org match the version of the library that users get by installing the package from PyPI when they don't specify a version.\r\n\r\nThis will be the first micro/patch-level release for this library, which would usually be reserved for non-API-breaking bug fixes. The process I've followed for this release is:\r\n\r\n1. Patch changes in from master\r\n2. Update all version numbers and dependencies (`0.4a0` packages can use `0.4a1` dependencies, but not vice-versa)\r\n3. Update changelogs\r\n4. (TODO after merging this PR) cut a new release from the target branch\r\n5. (also TODO) push new artifacts built from this branch to PyPI\r\n\r\nThis is a lot of ceremony for a trivial change, but AFAICT this is all required if we want every change to a release branch to result in a micro/patch version update, and if we want to keep the version numbers for all packages in sync.",
    "head_branch": "v0.4a1-rtd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "v0.4a1 release to host alpha docs (#458)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114e44ee515ce6a4e8f8",
    "number": 455,
    "body": "19d573af0275 (\"Add io and formatter options to console exporter (#412)\")\r\nchanged the way spans are printed by using write() instead of print().\r\nIn Python 3.x sys.stdout is line-buffered, so the spans were not being printed\r\nto the console at the right timing.\r\n\r\nThis commit fixes that by adding an explicit flush() call at the end of the\r\nexport function , it also changes the default formatter to include a line break.\r\n\r\nTo be precise, only one of the changes was needed to solve the problem, but as\r\na matter of completness both are included, i.e, to handle the case where the\r\nformatter chosen by the user doesn't append a line break.\r\n\r\n\r\nFixes: https://github.com/open-telemetry/opentelemetry-python/issues/448\r\nSupersedes: https://github.com/open-telemetry/opentelemetry-python/pull/451",
    "head_branch": "mauricio/fix-console-span-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: fix ConsoleSpanExporter (#455)\n\n19d573af0275 (\"Add io and formatter options to console exporter (#412)\")\r\nchanged the way spans are printed by using write() instead of print().\r\nIn Python 3.x sys.stdout is line-buffered, so the spans were not being printed\r\nto the console at the right timing.\r\n\r\nThis commit fixes that by adding an explicit flush() call at the end of the\r\nexport function , it also changes the default formatter to include a line break.\r\n\r\nTo be precise, only one of the changes was needed to solve the problem, but as\r\na matter of completness both are included, i.e, to handle the case where the\r\nformatter chosen by the user doesn't append a line break."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620114f44ee515ce6a4e8f9",
    "number": 454,
    "body": "Current implementation use OpenCensus receiver available in Collector, this will need to be updated eventually to use OT receiver when is ready.\r\n\r\nFixes #344 ",
    "head_branch": "hectorhdzg/collector_metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding OT Collector metrics exporter (#454)\n\nCurrent implementation use OpenCensus receiver available in Collector, this\r\nwill need to be updated eventually to use OT receiver when is ready.\r\n\r\nFixes #344\r\n\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115044ee515ce6a4e8fa",
    "number": 452,
    "body": "Fixes #171\r\n\r\nYou can see the hosted docs built from this branch on https://opentelemetry-python.readthedocs.io/en/readthedocs/, and the successful build from 3e7a9e9 at https://readthedocs.org/projects/opentelemetry-python/builds/10524660/.\r\n\r\nNote that the docs can still fail to build on RTD even if `tox -e docs` passes on CI. See https://readthedocs.org/projects/opentelemetry-python/builds/10524617/ for an example of a failing build that passed CI.\r\n\r\nI'll delete the branch and build the docs from master (which should populate the \"latest\" and \"stable\" versions on RTD) once this PR is merged.",
    "head_branch": "readthedocs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prepare to host on readthedocs.org (#452)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115144ee515ce6a4e8fb",
    "number": 451,
    "body": "Fixes #448.\r\n\r\nOther examples still use the batching processor, but don't show a delay between recording the span and exporting it because they exit soon after starting.",
    "head_branch": "simple-export-http-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115244ee515ce6a4e8fc",
    "number": 450,
    "body": "Renaming TraceOptions to TraceFlags, which is the term\r\nused to describe the flags associated with the trace in\r\nthe OpenTelemetry specification.\r\n\r\nCloses #434 ",
    "head_branch": "feature/traceflags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "API: Renaming TraceOptions to TraceFlags (#450)\n\nRenaming TraceOptions to TraceFlags, which is the term used to describe the\r\nflags associated with the trace in the OpenTelemetry specification.\r\n\r\nCloses #434"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115244ee515ce6a4e8fd",
    "number": 449,
    "body": "Re-implements #401 as the original author didn't sign the CLA before going MIA.",
    "head_branch": "401-again",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Freeze sequence-valued span attributes (#449)\n\nreducing potential user errors by converting attributes into immutable tuples\r\nwhen added."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115344ee515ce6a4e8fe",
    "number": 447,
    "body": "See https://github.com/open-telemetry/opentelemetry-python/pull/446#discussion_r384189490.",
    "head_branch": "unused-init-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115444ee515ce6a4e8ff",
    "number": 446,
    "body": "As per the the Propagators API spec: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-propagators.md, the propagation API now uses the Context API as a mechanism for propagation.\r\n\r\nAs part of this change:\r\n- inject/extract now take an optional context parameter\r\n- extract now returns a Context object\r\n- removed binary format as they're not currently in the spec\r\n- added CompositePropagator to support configuring multiple propagators for the same format\r\n\r\nFixes #415 ",
    "head_branch": "propatationapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: Implementing Propagators API to use Context  (#446)\n\nImplementing Propagators API to use Context.\r\n\r\nMoving tracecontexthttptextformat to trace/propagation, as TraceContext is specific to trace rather that broader context propagation.\r\n\r\nUsing attach/detach for wsgi and flask extensions, enabling activation of the full context rather that activating of a sub component such as traces.\r\n\r\nAdding a composite propagator.\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115544ee515ce6a4e900",
    "number": 444,
    "body": "Some of the new ext packages had ReStructuredText errors. PyPI rejected the uploads for these packages with:\r\n\r\n`HTTPError: 400 Client Error: The description failed to render for 'text/x-rst'. See https://pypi.org/help/#description-content-type for more information. for url: https://upload.pypi.org/legacy/`",
    "head_branch": "fix-rst-readmes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix new ext READMEs (#444)\n\nSome of the new ext packages had ReStructuredText errors. PyPI rejected the uploads for these packages with:\r\n\r\nHTTPError: 400 Client Error: The description failed to render for 'text/x-rst'. See https://pypi.org/help/#description-content-type for more information. for url: https://upload.pypi.org/legacy/"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115644ee515ce6a4e901",
    "number": 443,
    "body": "Release branch version updates for `0.5.dev0` following #374.\r\n\r\nSee also #442.",
    "head_branch": "v0.4a0-master-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Version bump for 0.5.dev0 on master (#443)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115744ee515ce6a4e902",
    "number": 442,
    "body": "Release branch version updates for `0.4a0` following #374.\r\n\r\nSee also #443.",
    "head_branch": "v0.4a0-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Version bump for 0.4a0 release (#442)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115744ee515ce6a4e903",
    "number": 441,
    "body": "Following discussion in https://github.com/open-telemetry/opentelemetry-python/issues/434\r\nalign the name with the specification https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-tracing.md#obtaining-a-tracer.",
    "head_branch": "mauricio/rename_trace_source",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename TracerSource to TracerProvider (#441)\n\nFollowing discussion in #434, align the name with the specification.\r\n\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115844ee515ce6a4e904",
    "number": 440,
    "body": "This PR fixes #409, and has an ASGI counterpart here: https://github.com/open-telemetry/opentelemetry-python/pull/402/commits/ede28b2cc42551cb57c015f3af0d153efbdf814d",
    "head_branch": "ticket/409_low_cardinality_span_names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115944ee515ce6a4e905",
    "number": 439,
    "body": "The `update()` and the `take_checkpoint()` functions on these aggregators can be called concurrently, `update()` is called from the user context while `take_checkpoint()` is invoked from the controller. It is also possible to receive concurrent calls to the `update()` function from the user. For these reasons this PR adds a locking mechanism to guarantee that those functions are thread safe. This PR also implements some concurrency tests for those aggregators.\r\n\r\n As a note, it could be a temporal solution as in the future we want to explore atomic to avoid the cost of locking.",
    "head_branch": "mauricio/add-aggregator-locks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make Counter and MinMaxSumCount aggregators thread safe (#439)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115a44ee515ce6a4e906",
    "number": 438,
    "body": "Hi, here's the full changelist for 0.4 as of Thursday, Feb 20th.\r\n\r\nI imagine we will land the prometheus exporter since it's approved. There needs to be a quick rebase + update once that lands. \r\n\r\nCan everyone review and ensure their callouts were incorporated?",
    "head_branch": "feature/0.4-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding changelogs and readme updates for 0.4 (#438)\n\nAdding changelogs and readme updates for 0.4\r\n\r\nCo-Authored-By: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115b44ee515ce6a4e907",
    "number": 437,
    "body": "Fixes #252 \r\n\r\nFollow up to #433. This replaces `setup.py bdist_wheel` with `pip wheel`, but should produce the same artifacts. @Oberon00, @toumorokoshi, please sanity check me on this.",
    "head_branch": "wheel-from-sdist",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Build wheels from source dists (#437)\n\nCo-authored-by: Yusuke Tsutsumi <tsutsumi.yusuke@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115c44ee515ce6a4e908",
    "number": 435,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/399.\r\n\r\nThis commit implements a solution for releasing instrument handles and observers.\r\n\r\nFor the handles it is based on a ref count that is increased each time the\r\nhandled is acquired, when the ref count reaches 0 the handle is removed on\r\ncollection time.  The direct call convention is updated to release the handle\r\nafter it has been updated.\r\n\r\nThe observer instrument is only updated on collection time, so it can be removed\r\nas soon as the user request to do so.",
    "head_branch": "mauricio/release-handle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "metrics: Implement release for handles and observers (#435)\n\nThis commit implements a solution for releasing instrument handles and\r\nobservers.\r\n\r\nFor the handles it is based on a ref count that is increased each time the\r\nhandled is acquired, when the ref count reaches 0 the handle is removed on\r\ncollection time.  The direct call convention is updated to release the handle\r\nafter it has been updated.\r\n\r\nThe observer instrument is only updated on collection time, so it can be\r\nremoved as soon as the user request to do so."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115c44ee515ce6a4e909",
    "number": 433,
    "body": "Some operating systems (such as SUSE with py2pack) have an easier time\r\npackaging source distributions.\r\n\r\nAdding a check for the setup.py before attempting to build\r\ndistributions.\r\n\r\nAddressing part of #427 ",
    "head_branch": "feature/add-sdist",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115d44ee515ce6a4e90a",
    "number": 431,
    "body": "Implements [#221].\r\nAlso fixes [#394].\r\n\r\nFollows [this spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-metrics-user.md#obtaining-a-meter) in regards to implementation, however uses `MeterSource` instead of `MeterProvider` to be consistent with `TracerSource`.\r\n\r\nAlso, `stateful.py` and `stateless.py` in metrics example folder are not changed to use the new loader in anticipation of [#422] being merged first and removing them.\r\n\r\nLastly, moves `InstrumentationInfo` from `trace.py` in the sdk to utils.",
    "head_branch": "named_meter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: Implement \"named\" meters + Remove \"Batcher\" from Meter constructor (#431)\n\nImplements #221.\r\nAlso fixes #394.\r\n\r\nStateful.py and stateless.py in metrics example folder are not changed to use the new loader in anticipation of #422 being merged first and removing them.\r\n\r\nLastly, moves InstrumentationInfo from trace.py in the sdk to utils."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115e44ee515ce6a4e90b",
    "number": 430,
    "body": "As a convenience method to retrieve a tracer, introducing trace.get_tracer.\r\n\r\nOverall I think this removes an extra element that is strongly implied. ",
    "head_branch": "feature/get-tracer-root",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding trace.get_tracer (#430)\n\nIt's fairly common to need to retrieve tracers, and as such adding the\r\nadditional tracer_source() call to every retrieval of a tracer can add to\r\na lot of extra boilerplate at minimal semantic value. It would be uncommon\r\nfor one to use multiple tracer_source objects, as typically one would want\r\nall tracers to be created and behave in a similar way (e.g. passed to the\r\nsame span processor).\r\n\r\nCo-Authored-By: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620115f44ee515ce6a4e90c",
    "number": 429,
    "body": "This change updates the Context API with the following:\r\n- removes the `remove_value` method\r\n- removes the `set_current` method\r\n- adds `attach` and `detach` methods\r\n\r\nFixes #420 \r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "update-context-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding attach/detach methods as per spec (#429)\n\nThis change updates the Context API with the following:\r\n\r\n- removes the remove_value method\r\n- removes the set_current method\r\n- adds attach and detach methods\r\n\r\nFixes #420\r\n\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116044ee515ce6a4e90d",
    "number": 428,
    "body": "Two reasons to remove it:\r\n- Now Context is a class and it doesn't print any useful information.\r\n- We don't expect users to interact directly with the context, so avoid it.",
    "head_branch": "mauricio/update-basic-tracer-example",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove \"print(Context)\" from basic tracer example (#428)\n\nTwo reasons to remove it:\r\n- Now Context is a class and it doesn't print any useful information.\r\n- We don't expect users to interact directly with the context, so avoid it."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116044ee515ce6a4e90e",
    "number": 426,
    "body": "Python3.8 is now stable, and we should run the common tasks under 3.8\r\ninstead of 3.7",
    "head_branch": "feature/upgrade-to-38",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrading tox envs to python3.8 (#426)\n\nPython3.8 is now stable, and we should run the common tasks under 3.8\r\ninstead of 3.7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116144ee515ce6a4e90f",
    "number": 425,
    "body": "This PR implements the Observer instrument: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-metrics.md#observer.\r\n\r\nAn `Observer` is created by calling the new `register_observer` method on `Meter`.  This method  receives a callback that is invoked on collection time with the `Observer` instrument as parameter, this provides the `observe` function for capturing data. It is not possible to unregister an `Observer` yet.\r\n\r\nObservers are aggregated using a `MinMaxSumCountLast` aggregator based on https://github.com/open-telemetry/opentelemetry-python/pull/422.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/403\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/178",
    "head_branch": "mauricio/implement-observer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Implement observer instrument (#425)\n\nObserver instruments are used to capture a current set of values at a point in\r\ntime [1].\r\n\r\nThis commit extends the Meter interface to allow to register an observer\r\ninstrument by pasing a callback that will be executed at collection time.\r\nThe logic inside collection is updated to consider these instruments and\r\na new ObserverAggregator is implemented.\r\n\r\n[1] https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-metrics.md#observer-instruments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116244ee515ce6a4e910",
    "number": 424,
    "body": "The conversation in https://github.com/open-telemetry/opentelemetry-specification/issues/455\r\nis specifying that the tracer is no longer responsible for handling the setting\r\nand getting of active spans. As such, named tracers would only be respnosible\r\nfor creating new spans, but not for setting the active one.\r\n\r\nThis implies that there tracers do not have their own active spans.\r\n\r\nIn addition, there is a benefit of having a single active span, as it\r\nvastly simplifies the process to modify the current span (no need to\r\nexplicitly retrieve the tracer responsible for getting the span).",
    "head_branch": "feature/single-key-for-spans",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "All named tracers now share the same context (#424)\n\nThe conversation in open-telemetry/opentelemetry-specification#455 is\r\nspecifying that the tracer is no longer responsible for handling the setting\r\nand getting of active spans. As such, named tracers would only be responsible\r\nfor creating new spans, but not for setting the active one.\r\n\r\nThis implies that there tracers do not have their own active spans.\r\n\r\nIn addition, there is a benefit of having a single active span, as it vastly\r\nsimplifies the process to modify the current span (no need to explicitly\r\nretrieve the tracer responsible for getting the span)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116344ee515ce6a4e911",
    "number": 422,
    "body": "MinMaxSumCount is the default aggregator for Measure metrics: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-metrics.md#aggregations.\r\n\r\nThis PR implements this aggregator, updates some tests and reworks the example to use it.",
    "head_branch": "mauricio/implement-minmaxsumcount-aggregator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement MinMaxSumCount aggregator (#422)\n\nAdding one of the core aggregators in the metrics API.\r\n\r\nThis aggregator is the default aggregator for measure metrics and\r\nkeeps the minimum, maximum, sum and count of those measures."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116444ee515ce6a4e912",
    "number": 421,
    "body": "Initial attempt at an aiohttp-client integration. Still needs some work to document the usage at a minimum.",
    "head_branch": "aiohttp-client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "aiohttp: aiohttp client (#421)\n\nAdding initial aiohttp client.\r\n\r\nThis module is only supported on Python3.5, which is the oldest supported by\r\naiohttp.\r\n\r\nCo-authored-by: Yusuke Tsutsumi <yusuke@tsutsumi.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116444ee515ce6a4e913",
    "number": 419,
    "body": "While keeping the flexibility of the interface to support additional implementations of the RuntimeContext, moving the `ContextVarsRuntimeContext` and `ThreadLocalRuntimeContext` into the API ensures a useful context implementation for users without requiring additional configuration. This changes checks the version number to determine which implementation to use, unless it is overridden by the `OPENTELEMETRY_CONTEXT` environment variable. Removing the `DefaultRuntimeContext` as part of this change.\r\n\r\nThe discussion suggesting this change can be found [here](https://github.com/open-telemetry/opentelemetry-python/pull/395#issuecomment-585987331)",
    "head_branch": "move-context-to-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Moving contextvars and threadlocal context implementations to the API (#419)\n\nWhile keeping the flexibility of the interface to support additional implementations of the RuntimeContext, moving the ContextVarsRuntimeContext and ThreadLocalRuntimeContext into the API ensures a useful context implementation for users without requiring additional configuration. This changes checks the version number to determine which implementation to use, unless it is overridden by the OPENTELEMETRY_CONTEXT environment variable. Removing the DefaultRuntimeContext as part of this change.\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116544ee515ce6a4e914",
    "number": 417,
    "body": "Remove redundant environments.\r\nSeparate environments into logical groupings for maintainability.",
    "head_branch": "cleanup-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Clean up tox.ini (#417)\n\nRemove redundant environments and separate environments into logical groupings\r\nfor maintainability."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116644ee515ce6a4e915",
    "number": 412,
    "body": "Fixes #411.",
    "head_branch": "console-exporter-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add io and formatter options to console exporter (#412)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116744ee515ce6a4e916",
    "number": 410,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/404.\r\n\r\nFollowing the spec https://github.com/open-telemetry/opentelemetry-specification/pull/430.\r\n\r\nJust some cleanup before implementing other things in the metrics.",
    "head_branch": "mauricio/remove-monotonic-absolute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove monotonic and absolute metrics intrument options (#410)\n\nFollowing opentelemetry-specification/430."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116844ee515ce6a4e917",
    "number": 408,
    "body": "Instead of pypy3.5, debugging #406.\r\n\r\nFixes #406.",
    "head_branch": "try-pypy3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use travis pypy3 (#408)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116944ee515ce6a4e918",
    "number": 407,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/400.",
    "head_branch": "mauricio/set-sampled-flag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SDK: set sampled flag on sampling trace (#407)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116944ee515ce6a4e919",
    "number": 405,
    "body": "Based on [OpenCensus Agent exporter](https://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-ocagent)\r\n\r\nCurrent implementation use OpenCensus receiver available in Collector, this will need to be updated eventually to use OT [receiver](https://github.com/open-telemetry/opentelemetry-collector/issues/480) when is ready, and [Python ](https://github.com/open-telemetry/opentelemetry-proto/issues/91)compiled files for Proto are available once proto definition is final.\r\n\r\nFixes #343 \r\n",
    "head_branch": "hectorhdzg/otcollector",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OT Collector trace exporter (#405)\n\nBased on the OpenCensus agent exporter.\r\n\r\nFixes #343\r\n\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116a44ee515ce6a4e91a",
    "number": 402,
    "body": "This change implements an ASGI counterpart to the WSGI extension.\r\n\r\nIt has been tested with django channels on a dummy project here: https://github.com/Skeen/django_opentelemetry_example\r\n\r\nWSGI Jaeger trace: \r\n![wsgi](https://user-images.githubusercontent.com/225151/74087848-5335c400-4a90-11ea-9cb1-292eabc1099d.png)\r\n\r\nASGI Jaeger trace:\r\n![asgi](https://user-images.githubusercontent.com/225151/74087851-58930e80-4a90-11ea-881c-f9a635180f2c.png)\r\n\r\nASGI websocket Jaeger trace:\r\n![asgi-websocket](https://user-images.githubusercontent.com/225151/74087916-deaf5500-4a90-11ea-9638-b3c94436ae21.png)\r\n\r\n\r\n\r\n",
    "head_branch": "feature/ext_asgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116b44ee515ce6a4e91b",
    "number": 401,
    "body": "",
    "head_branch": "users/mizou/convert-sequence-to-tuple",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116c44ee515ce6a4e91c",
    "number": 397,
    "body": "https://github.com/open-telemetry/opentelemetry-python/pull/389 implemented\r\nforce_flush() for the span processor. For BatchSpanProcessor it was implemented\r\nby exposing an already existing _flush() method, it created a race condition\r\nbecause the _flush() method was intended to be called only from the context\r\nof the worker thread, this because it uses the export() method that is not\r\nthread safe.\r\n\r\nThe result after that PR is that some tests were failing randomly because export()\r\nwas being executed in two different threads, the worker thread and the user\r\nthread calling force_flush().\r\n\r\nThis commit fixes it by implementing a more sophisticated flush mechanism.\r\nWhen a flush is requested, a special span token is inserted in the spans queue,\r\na flag indicating a flush operation is on progress is set and the worker thread\r\nis waken up, after it a condition variable is monitored waiting for the worker\r\nthread to indicate that the token has been processed.\r\n\r\nThe worker thread has a new logic to avoid sleeping (waiting on the condition\r\nvariable) when there is a flush operation going on, it also notifies the\r\ncaller (using another condition variable) when the token has been processed.\r\n\r\nFixes: https://github.com/open-telemetry/opentelemetry-python/issues/396",
    "head_branch": "mauricio/fix-force-flush",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: fix force_flush in batch span processor (#397)\n\n#389 implemented force_flush() for the span processor. For BatchSpanProcessor\r\nit was implemented by exposing an already existing _flush() method, it created\r\na race condition because the _flush() method was intended to be called only\r\nfrom the context of the worker thread, this because it uses the export() method\r\nthat is not thread safe.\r\n\r\nThe result after that PR is that some tests were failing randomly because\r\nexport() was being executed in two different threads, the worker thread and the\r\nuser thread calling force_flush().\r\n\r\nThis commit fixes it by implementing a more sophisticated flush mechanism.\r\nWhen a flush is requested, a special span token is inserted in the spans queue,\r\na flag indicating a flush operation is on progress is set and the worker thread\r\nis waken up, after it a condition variable is monitored waiting for the worker\r\nthread to indicate that the token has been processed.\r\n\r\nThe worker thread has a new logic to avoid sleeping (waiting on the condition\r\nvariable) when there is a flush operation going on, it also notifies the caller\r\n(using another condition variable) when the token has been processed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116d44ee515ce6a4e91d",
    "number": 395,
    "body": "This change implements the Context API portion of [OTEP #66](https://github.com/open-telemetry/oteps/blob/master/text/0066-separate-context-propagation.md). The CorrelationContext API and Propagation API changes will come in future PRs. We're leveraging entrypoints to support other implementations of the Context API if/when necessary. For backwards compatibility, this change uses aiocontextvars for Python versions older than 3.7.\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "adding-context-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding Context API (#395)\n\nThis change implements the Context API portion of OTEP #66. The\r\nCorrelationContext API and Propagation API changes will come in future PRs.\r\nWe're leveraging entrypoints to support other implementations of the Context\r\nAPI if/when necessary. For backwards compatibility, this change uses\r\naiocontextvars for Python versions older than 3.7.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116e44ee515ce6a4e91e",
    "number": 393,
    "body": "As discussed in the SIG call, move the alpha v4 release date three weeks back to account for ongoing work.",
    "head_branch": "delay-4a-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move alpha v4 release date target to 2/21 (#393)\n\nAs discussed in the SIG call, move the alpha v4 release date three weeks back to account for ongoing work."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116f44ee515ce6a4e91f",
    "number": 391,
    "body": "Fixes #390",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing ABC for Metric (#391)\n\nFix #390"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620116f44ee515ce6a4e920",
    "number": 389,
    "body": "https://github.com/open-telemetry/opentelemetry-specification/pull/370 added\r\nthe requirement to have a \"force_flush\" method in the span processors.\r\n\r\nThis commit exposes an already existing internal method on the batch span\r\nprocessor that does exactly the same, it also adds it to the span processor\r\ninterface and as a no-op to the simple span processor.",
    "head_branch": "mauricio/implement-force-flush",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: Implement force_flush for span processors (#389)\n\nhttps://github.com/open-telemetry/opentelemetry-specification/pull/370 added\r\nthe requirement to have a \"force_flush\" method in the span processors.\r\n\r\nThis commit exposes an already existing internal method on the batch span\r\nprocessor that does exactly the same, it also adds it to the span processor\r\ninterface and as a no-op to the simple span processor."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117044ee515ce6a4e921",
    "number": 388,
    "body": "",
    "head_branch": "mauricio/update-readme-approvers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "README: update list of approvers (#388)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117144ee515ce6a4e922",
    "number": 387,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/369.\r\n\r\nExport the span kind as \"span.kind\" tag.\r\n\r\nThis PR contains https://github.com/open-telemetry/opentelemetry-python/pull/367, so it should be merged after it.",
    "head_branch": "mauricio/add-span-kind-jaeger-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/jaeger: export span kind (#387)\n\nEncode the span kind as a \"span.kind\" tag."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117244ee515ce6a4e923",
    "number": 385,
    "body": "This PR implements:\r\n- A general timeout mechanism in `utils.py` using [signal](https://docs.python.org/3/library/signal.html). Example usage:\r\n```python\r\nfrom opentelemetry.sdk.util import timeout_in_seconds\r\ntry:\r\n  with timeout_in_seconds(5):\r\n    func_example()\r\nexcept TimeoutError:\r\n  print('func_example took too long to complete')\r\n```\r\n> Added `set_timeout_signal_handler()` for it's usage on multithreaded code (all signal handler functions must be set in the main thread).\r\n\r\n- Timeouts to exports in `SimpleExportSpanProcessor()` and `BatchExportSpanProcessor()`.\r\n\r\nCloses #346 \r\n\r\nSigned-off-by: Daniel González Lopes <danielgonzalezlopes@gmail.com>",
    "head_branch": "implement-general-timeout-mechanism-in-the-export-layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117344ee515ce6a4e924",
    "number": 381,
    "body": "Fixes #377",
    "head_branch": "issue_377",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set status in start_as_current_span too (#381)\n\nFixes #377"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117444ee515ce6a4e925",
    "number": 380,
    "body": "This PR uses `on.push.paths` [workflow syntax](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onpushpull_requestpaths), so we don't have to rebuild the docs unless source files have changed  (based on https://github.com/open-telemetry/opentelemetry-python/pull/167 from @c24t).\r\n\r\nI think that this path-based approach triggers less unnecessary than a [file-based](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#example-including-paths) one.\r\n \r\nI asked for feedback on [Gitter](https://gitter.im/open-telemetry/opentelemetry-python?at=5e2adb59f85dba0aab07daf8), and I would love if someone had time to throw some thoughts on this :)\r\n\r\nSigned-off-by: Daniel González Lopes <danielgonzalezlopes@gmail.com>",
    "head_branch": "rebuild-docs-on-source-files-changes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rebuild docs if source files change (#380)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117444ee515ce6a4e926",
    "number": 379,
    "body": "This code will rely on the Context Propagation work to be fully implemented, but breaking the work into separate PRs to make the review process a bit easier. This implements part of [otep #66](https://github.com/open-telemetry/oteps/blob/master/text/0066-separate-context-propagation.md), this is tracked in the spec here: https://github.com/open-telemetry/opentelemetry-specification/pull/420\r\n\r\nTo note in this PR:\r\n- DistributedContext-specific propagation has been removed, as this will be implemented in the Propagation API.\r\n- Context specific changes (with_current) will be implemented as part of the Context API changes\r\n- The ContextAPI object implemented here is just a temporary class, will be fully implemented with the rest of the Context Prop. changes\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "rename-dctx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117544ee515ce6a4e927",
    "number": 378,
    "body": "This implementation is based on [OpenCensus Prometheus exporter](https://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-prometheus)\r\n\r\nI added a lot of code from #341 to unblock testing and lint for this, once Metrics code is updated this PR only need to merge with latest changes. Please review Prometheus related changes and add comments in PR 341 PR for Metric related stuff.\r\n\r\nThere are still TODOs regarding supporting histograms and adding tests for Gauges and Measures, this is currently blocked by missing Aggregators in opentelemetry SDK\r\n\r\nFixes #157",
    "head_branch": "hectorhdzg/prometheus_exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prometheus metric exporter (#378)\n\nprometheus-exporter: initial commit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117644ee515ce6a4e928",
    "number": 376,
    "body": "This is `9d3ef06d` split off from #282 at [@mauriciovasquezbernal's request](https://github.com/open-telemetry/opentelemetry-python/pull/282#issuecomment-577710670).\r\n\r\nSee https://github.com/open-telemetry/opentelemetry-python/pull/282#issuecomment-577458423.\r\n\r\nEdit: changed to use `pylint:ignore=no-member` in the modules failing lint instead. These errors are almost never meaningful, and this prevents us from having to play type inference whack-a-mole in the future if these imports change.",
    "head_branch": "ot-shim-import-changes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change imports to avoid pylint namespace errors (#376)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117744ee515ce6a4e929",
    "number": 375,
    "body": "There was one instance of using an ABC Span object\r\nin the unit tests, which is breaking linting and typing.",
    "head_branch": "feature/fix-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Test fix: removing use of ABC Span in API test (#375)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117844ee515ce6a4e92a",
    "number": 370,
    "body": "Using the wsgi integration removes a significant amount\r\nof redundant code, and eliminates a bug where a copied\r\nflask context (which is an accepted scenario) exists\r\nafter the span is actually closed.\r\n\r\nFixes #349.",
    "head_branch": "feature/fix-349",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117944ee515ce6a4e92b",
    "number": 368,
    "body": "Split off from #348 \r\n\r\nThe [OT Spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-tracing.md#set-attributes) states one of the valid AttributeValue types are:\r\n\r\n> An array of primitive type values. The array MUST be homogeneous, i.e. it MUST NOT contain values of different types.\r\n\r\nThis change updates the AttributeValue type to include homogeneous sequences of `str`, `bool`, `int`, and `float`",
    "head_branch": "attribute-value-type-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add int and valid sequences to AttributeValue type (#368)\n\nThe OT Spec states one of the valid AttributeValue types are:\r\n\r\nAn array of primitive type values. The array MUST be homogeneous, i.e. it MUST NOT contain values of different types.\r\n\r\nThis change updates the AttributeValue type to include homogeneous sequences of str, bool, int, and float"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117a44ee515ce6a4e92c",
    "number": 367,
    "body": "- Sets status tags on the Jaeger span.\r\n- Removes TODO from the Jaeger integration that points to a closed [issue](#98) with a merged  [PR](https://github.com/open-telemetry/opentelemetry-python/pull/213).\r\n\r\nSigned-off-by: Daniel González Lopes <danielgonzalezlopes@gmail.com>",
    "head_branch": "remove-status-is-missing-todo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Export span status to Jaeger (#367)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117a44ee515ce6a4e92d",
    "number": 366,
    "body": "Some WSGI servers (such as Gunicorn) expect keys in the environ object\r\nto be strings.\r\n\r\nfixes #354.",
    "head_branch": "feature/string-environ-keys-flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "flask: using string keys for wsgi environ values (#366)\n\nSome WSGI servers (such as Gunicorn) expect keys in the environ object\r\nto be strings."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117b44ee515ce6a4e92e",
    "number": 364,
    "body": "Resolves #329. \r\n\r\nAs @condorcet pointed out, the Multidict bug affecting #329 has been [fixed](https://github.com/aio-libs/multidict/issues/432). This PR removes the workaround added on #330 as it's no longer needed.\r\n\r\nSigned-off-by: dgzlopes <danielgonzalezlopes@gmail.com>",
    "head_branch": "remove-work-around-multidict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove pinned multidict (#364)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117c44ee515ce6a4e92f",
    "number": 363,
    "body": "Fixes #361",
    "head_branch": "issue_361",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Protect start_time and end_time from being set manually by the user (#363)\n\nFixes #361"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117d44ee515ce6a4e930",
    "number": 360,
    "body": "Found a few examples that hadn't been updated to use `tracer_source()` instead of `tracer(), updating them here.\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "fix-doc-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updating examples to use tracer_source (#360)\n\nMany examples were not updated to use the new named tracers code.\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117e44ee515ce6a4e931",
    "number": 358,
    "body": "Fixes #357",
    "head_branch": "issue_357",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set status properly on end (#358)\n\nIn accordance with the specification, a trace status should always be set \r\non an ended span."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620117f44ee515ce6a4e932",
    "number": 356,
    "body": "These changes have already been made to the [python-maintainers](https://github.com/orgs/open-telemetry/teams/python-maintainers/members) and [python-approvers](https://github.com/orgs/open-telemetry/teams/python-approvers/members) teams, this PR just updates the README.",
    "head_branch": "reyang-approver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove @reyang from maintainers in README (#356)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118044ee515ce6a4e933",
    "number": 351,
    "body": "https://github.com/open-telemetry/opentelemetry-python/pull/264#discussion_r361850563",
    "head_branch": "hectorhdzg/logger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use current logger instead of global (#351)\n\nAll loggers should be local to the module, rather than use the global."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118044ee515ce6a4e934",
    "number": 350,
    "body": "Updating names to latest in spec\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/data-span-general.md#general-network-connection-attributes",
    "head_branch": "hectorhdzg/pymongo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updating network connection attributes names to latest in spec (#350)\n\nUpdating attributes names to match https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/data-span-general.md#general-network-connection-attributes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118144ee515ce6a4e935",
    "number": 348,
    "body": "Fixes Issue #347 \r\n\r\n- Added lists as an accepted attribute value data type per the [OT spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-tracing.md#set-attributes)\r\n- Added data type validation when setting an attribute on a span\r\n   - Validates type is one of `int`, `float`, `str`, `bool` or `list`\r\n   - If a value is of type list, validates all values in the list are of a homogeneous primitive data type, per the OT spec\r\n\r\nI wasn't sure what the best way to enforce valid attribute values was. I decided to just drop invalid values since that's what was being done in the PR linked in the issue.  But I was wondering if it made sense to throw an exception or maybe attempt to coerce the value into a valid type instead.\r\n",
    "head_branch": "ISSUE-347/attribue-value-type-enforcement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add runtime validation in setAttribute (#348)\n\nValidate attribute value data types before adding to span\r\nAdd lists as an accepted data type.\r\n\r\nBy adding validation during the setAttribute phase, this\r\nallows allows exporters to avoid redundant code to validate\r\nattributes."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118244ee515ce6a4e936",
    "number": 341,
    "body": "This completes an end-to-end metrics export pipeline.\r\n\r\nUses alot of elements from the [go implementation](https://github.com/open-telemetry/opentelemetry-go/pull/265) as well as the [WIP spec](https://github.com/open-telemetry/opentelemetry-specification/pull/347).\r\n\r\nThe new files that are added relate to the export pipeline: `batcher.py`, `aggregate.py` and `controller.py`, which contain the implementations for `Batcher`, `Aggregator` and `Controller` classes (see [this diagram](https://docs.google.com/document/d/1-bWIOCmyoce11iicRBj_VO_XqachbLuyid2qYZW027A/edit) for an overview of how the pieces work together).\r\n\r\nCurrently, only the `UngroupedBatcher` and `CounterAggregator` are implemented. This also means that there are no `AggregationSelector` s since aggregations for `Measure` have not been implemented. a `PushController` is also included, which is worker thread that continuously initiates collection of metrics and calls the exporter. metrics_example.py` in the examples folder shows how to use these components.\r\n\r\nSome SDK changes: \r\n- `Metric` s have a reference now to the `Meter` that created them. This is used for constructing an aggregator for the specific metric type when creating a handle.\r\n- `LabelSet` has a field for its encoded value",
    "head_branch": "aggregate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metrics export pipeline + metrics stdout exporter (#341)\n\nInitial implementation of the end-to-end metrics pipeline."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118344ee515ce6a4e937",
    "number": 340,
    "body": "Using similar approach as OpenTelemetry JS to run docker with MongodDB container and run tests against it, currently it will require contributors of this repo to have docker installed and running when executing the tests\r\n\r\nFixes #284 ",
    "head_branch": "hectorhdzg/pymongoFunc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add pymongo functional tests (#340)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118444ee515ce6a4e938",
    "number": 339,
    "body": "Fixes #338",
    "head_branch": "issue_338",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118444ee515ce6a4e939",
    "number": 337,
    "body": "",
    "head_branch": "v0.4-target-date",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Updating date for v0.4 (#337)\n\nAs per the discussion in the SIG, the release date of v0.4 has been pushed to January 31st."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118544ee515ce6a4e93a",
    "number": 336,
    "body": "Fixes #333 ",
    "head_branch": "issue_333",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118644ee515ce6a4e93b",
    "number": 334,
    "body": "One final bit of administrivia to make @toumorokoshi a maintainer. @reyang to confirm that he should be moved to \"approvers\" when he's available.",
    "head_branch": "yusuke-maintainer",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Make @toumorokoshi maintainer in README (#334)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118744ee515ce6a4e93c",
    "number": 332,
    "body": "Update the README to reflect new milestones after the v3 release.",
    "head_branch": "update-readme-for-v3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README post-v3 release (#332)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118844ee515ce6a4e93d",
    "number": 331,
    "body": "This PR copies the changelog changes on the release branch from #328 to master, and bumps the development version to `0.4.dev0`.",
    "head_branch": "v0.3a0-master-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pick up changelogs from #328, update dev version (#331)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118944ee515ce6a4e93e",
    "number": 330,
    "body": "Work around for #329.",
    "head_branch": "fix-build-fail-multidict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Work around build failures (#330)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118944ee515ce6a4e93f",
    "number": 328,
    "body": "This PR bumps the version for all packages to `0.3a0` and updates the changelogs for the new release.\r\n\r\nThis release include the first version of the `opentelemetry-ext-flask` and `opentelemetry-ext-pymongo` packages.\r\n\r\nLike other release PRs, these changes only affect the release branch. I'll open another PR for similar changes on master.",
    "head_branch": "v0.3a0-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update versions and changelogs for 0.3a release (#328)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118a44ee515ce6a4e940",
    "number": 327,
    "body": "Fixes #300",
    "head_branch": "issue_300",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add an autoinstrumentation mechanism and an instrumentor for Flask (#327)\n\nAdding an autoinstrumentation mechanism and a Flask instrumentor (an instrumentor is a class that implements the _instrument and _uninstrument methods).\r\n\r\nIt works like this:\r\n\r\nA console command is defined. This makes it possible to run a command named opentelemetry-auto-instrumentation that will execute this function.\r\n\r\nWhen the opentelemetry-auto-instrumentation command is executed, then the instrument method of the different instrumentors is called, which are made available via an entry-point.\r\n\r\n2.In the case of the Flask instrumentor, the original flask.Flask gets replaced with _InstrumentedFlask (in this case, the Flask instrumentor uses monkey patching to perform the instrumentation, nevertheless, monkey patching is not always the method used to do this, so the name instrumentor is preferred over patcher).\r\n\r\nOnce all instrumentation is enabled, the app is executed.\r\n\r\nCo-Authored-By: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118b44ee515ce6a4e941",
    "number": 326,
    "body": "This PR is #301 with an extra commit (4de385e) to merge master and fix a conflict in `ext/opentelemetry-ext-wsgi/src/opentelemetry/ext/wsgi/__init__.py` ",
    "head_branch": "named-tracers-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118c44ee515ce6a4e942",
    "number": 325,
    "body": "This is a continuation of the work started in https://github.com/open-telemetry/opentelemetry-python/pull/278:\r\n\r\nThis is a PR to start implementing the context-propagation-spec as outlined in the following documents:\r\n- https://github.com/open-telemetry/oteps/pull/42\r\n- https://gitter.im/open-telemetry/context-prop-spec\r\n- https://docs.google.com/document/d/1HKjixuwg3aodg0089-kz8RcJuGpDjKJJq8qw-c2cKmY/edit\r\n\r\nWe could break up the pieces into more consumable pull requests with issues and tests for each. What I'd like to get out of this PR though is for folks to review the code examples below to understand if the otep is implemented as it should be. I'd like to use the feedback here to also recommend any changes that need to happen in the otep.\r\n\r\nTODO:\r\n- ~~support merging context~~\r\n- review correlationcontext implementation\r\n- ~~update branch from master, this includes the changes for named tracers~~\r\n- add tests for new functionality\r\n- review documentation for all updated code\r\n\r\n### Global initialization\r\n\r\n```python\r\ndef configure_opentelemetry(flask_app: flask.Flask):\r\n    trace.set_preferred_tracer_implementation(lambda T: Tracer())\r\n\r\n    # Global initialization\r\n    (baggage_extractor, baggage_injector) = correlation_context.http_propagator()\r\n    (b3_extractor, b3_injector) = b3_format.http_propagator()\r\n    propagation.set_http_extractors([b3_extractor, baggage_extractor])\r\n    propagation.set_http_injectors([b3_injector, baggage_injector])\r\n```\r\n\r\n### Extracting and injecting from HTTP headers\r\n\r\n```python\r\n@app.route(\"/\")\r\ndef handle_request(ctx):\r\n    extractors = propagation.http_extractors()\r\n    with propagation.extract(request.headers, context=ctx, extractors=extractors) as ctx1:\r\n        with tracer.start_as_current_span(\"service-span\", context=ctx1) as ctx2:\r\n            with tracer.start_as_current_span(\"external-req-span\", context=ctx2) as ctx3:\r\n                headers = {\"Accept\": \"application/json\"}\r\n                version = CorrelationContextManager.value(\"version\", context=ctx3)\r\n                if version == \"2.0\":\r\n                    return fetch_from_service_c(ctx3)\r\n                return fetch_from_service_b(ctx3)\r\n\r\ndef fetch_from_service_b(ctx) -> str:\r\n    # Inject the contexts to be propagated. Note that there is no direct\r\n    # reference to tracing or baggage.\r\n    headers = {\"Accept\": \"application/json\"}\r\n\t\tinjectors = propagation.http_injectors()\r\n    propagation.inject(headers, context=ctx, injectors=injectors)\r\n    resp = requests.get(\"https://opentelemetry.io\", headers=headers)\r\n    return resp.text\r\n```\r\n\r\n### Simpler API with context prop using current context\r\n\r\n```python\r\n@app.route(\"/\")\r\ndef handle_request():\r\n    with propagation.extract(request.headers):\r\n        with tracer.start_as_current_span(\"service-span\"):\r\n            with tracer.start_as_current_span(\"external-req-span\"):\r\n                version = CorrelationContextManager.value(\"version\")\r\n                if version == \"2.0\":\r\n                    return fetch_from_service_c()\r\n\r\n                return fetch_from_service_b()\r\n\r\ndef fetch_from_service_b() -> str:\r\n    # Inject the contexts to be propagated. Note that there is no direct\r\n    # reference to tracing or baggage.\r\n    headers = {\"Accept\": \"application/json\"}\r\n    propagation.inject(headers)\r\n    resp = requests.get(\"https://opentelemetry.io\", headers=headers)\r\n    return resp.text\r\n```\r\n\r\n### Implementing a propagator\r\n\r\n```python\r\nclass B3Extractor(HTTPExtractor):\r\n    @classmethod\r\n    def extract(cls, context, carrier, get_from_carrier=_getter):\r\n\t\t\tsc = trace.SpanContext(\r\n          trace_id=int(trace_id, 16),\r\n          span_id=int(span_id, 16),\r\n          trace_options=trace.TraceOptions(options),\r\n          trace_state=trace.TraceState(),\r\n      )\r\n      return Context.set_value(context, ContextKeys.span_context_key(), sc)\r\n\r\nclass B3Injector(HTTPInjector):\r\n    @classmethod\r\n    def inject(cls, context, carrier, set_in_carrier=_setter):\r\n        sc = Context.value(context, trace.propagation.ContextKeys.span_context_key())\r\n        sampled = (trace.TraceOptions.SAMPLED & sc.trace_options) != 0\r\n        set_in_carrier(carrier, TRACE_ID_KEY, format_trace_id(sc.trace_id))\r\n        set_in_carrier(carrier, SPAN_ID_KEY, format_span_id(sc.span_id))\r\n        set_in_carrier(carrier, SAMPLED_KEY, \"1\" if sampled else \"0\")\r\n```\r\n\r\n### Implementing a concern\r\n\r\n```python\r\n    def start_span(...):\r\n        if parent is Tracer.CURRENT_SPAN:\r\n            parent = self.get_current_span()\r\n\r\n        parent_context = parent\r\n        if isinstance(parent_context, trace_api.Span):\r\n            parent_context = parent.get_context()\r\n        \r\n\t\t\t\tif parent_context is None:\r\n            parent_context = Context.value(\r\n              Context.current(),\r\n              trace.propagation.ContextKeys.span_context_key()\r\n            )\r\n        ...\r\n        sc = trace_api.SpanContext(\r\n            parent_context.trace_id,\r\n            generate_span_id(),\r\n            parent_context.trace_options,\r\n            parent_context.trace_state\r\n        )\r\n        span = Span(name=name, context=sc)\r\n        Context.set_value(Context.current(), ContextKeys.span_context_key(), sc)\r\n```\r\n\r\n### The scope of current context\r\n\r\n```python\r\ndef do_something():\r\n    Context.set_value(empty_ctx, \"say-something\", \"foo\")\r\n  \r\ndef scope_things():\r\n    empty_ctx = Context.current()\r\n    Context.set_value(\"say-something\", \"foo\")\r\n    second_ctx = Context.current()\r\n    print(Context.value(\"say-something\"))  # prints \"foo\"\r\n\r\n    do_something()\r\n\r\n    third_ctx = Context.current()\r\n    print(Context.value(\"say-something\"))  # prints \"bar\"\r\n\r\n    print(empty_ctx.get(\"say-something\"))  # prints \"\"\r\n    print(second_ctx.get(\"say-something\"))  # prints \"foo\"\r\n    print(third_ctx.get(\"say-something\"))  # prints \"bar\"\r\n```\r\n\r\n### Referencing multiple contexts\r\n\r\n```python\r\nmerged_ctx = merge_context_correlation(Context.current(), other_ctx)\r\nContext.set_current(merged_ctx)\r\n```\r\n\r\n### Falling back to explicit contexts\r\n\r\n```python\r\n# Most of the time, the extract function operates on the current context.\r\nextract(headers)\r\n\r\n# When a context needs to be extracted without changing the current \r\n# context, fall back to the explicit API.\r\nextract(headers, context=other_context)\r\n```\r\n\r\n",
    "head_branch": "context-prop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118d44ee515ce6a4e943",
    "number": 324,
    "body": "Fixes #323",
    "head_branch": "issue_323",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add posargs (#324)\n\nFixes #323"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118e44ee515ce6a4e944",
    "number": 322,
    "body": "See https://www.sphinx-doc.org/en/master/man/sphinx-build.html#cmdoption-sphinx-build-e and https://www.sphinx-doc.org/en/master/man/sphinx-build.html#cmdoption-sphinx-build-a. Otherwise, if you run the build two times, most warnings from the first build will be silently ignored if you didn't change the affected files.",
    "head_branch": "docs-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do full Sphinx build every time to not hide errors (#322)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118e44ee515ce6a4e945",
    "number": 321,
    "body": "Make CODEOWNERS use https://github.com/orgs/open-telemetry/teams/python-approvers/members at @a-feld's suggestion.\r\n\r\nThe only effect of this change is to remove @a-feld -- who isn't currently active in this repo -- from CODEOWNERS.",
    "head_branch": "make-codeowners-approvers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update CODEOWNERS to include only python-approvers (#321)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620118f44ee515ce6a4e946",
    "number": 320,
    "body": "Fixes #318 \r\n\r\nPulled some of the code from the [OC implementation](https://github.com/census-instrumentation/opencensus-python/blob/master/contrib/opencensus-ext-zipkin/opencensus/ext/zipkin/trace_exporter/__init__.py) and looked at the [javascript implementation](https://github.com/open-telemetry/opentelemetry-js/pull/192)\r\n\r\nNot addressed yet:\r\n- what do to on failures beyond returning NOT_RETRYABLE\r\n\r\nZipkin Spec:\r\nhttps://github.com/openzipkin/zipkin-api/blob/master/zipkin2-api.yaml\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "issue-318",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding Zipkin exporter (#320)\n\nSigned-off-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119044ee515ce6a4e947",
    "number": 319,
    "body": "Fixes #117 \r\n\r\nAdded a section to the docs for the SDK. Also added the integrations that were not part of the docs yet.\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "issue-117",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding docs for sdk and integrations (#319)\n\nAdding documentation that was previously missing for multiple sdks and integrations.\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119144ee515ce6a4e948",
    "number": 317,
    "body": "Quick update to #293 now that https://github.com/pytest-dev/pytest/issues/6194 is fixed.\r\n\r\nNote that there wouldn't be any harm in leaving the required version as is: users should pick up the latest version (`5.3.1` as of this writing) which include the fix in either case.",
    "head_branch": "pytest-works-again",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove obsolete version requirement for pytest (#317)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119244ee515ce6a4e949",
    "number": 316,
    "body": "Inspired by https://github.com/open-telemetry/opentelemetry-python/pull/258#discussion_r352705122. It would be great to use our existing type annotations in tests at *run*time. I.e., without annotating the tests themselves. Hopefully this uncovers some false-positive tests.\r\n\r\nThis uses [typeguard](https://github.com/agronholm/typeguard) to do runtime checking via an [import hook](https://typeguard.readthedocs.io/en/latest/#using-the-import-hook), which should earmark all `opentelemetry` code for checking.\r\n\r\nThis PR is very experimental, and may not be a good approach. Caveat reviewer!",
    "head_branch": "add-typeguard",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119244ee515ce6a4e94a",
    "number": 312,
    "body": "Fixes #245 \r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "issue-245",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding link to docs (#312)\n\nFixes #245"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119344ee515ce6a4e94b",
    "number": 311,
    "body": "Fixes #66 \r\n\r\nStarted on this today. Providing a no-op for Meter is easy. Separating the Tracer interface from a no-op implementation is a bit more tricky. It requires changes to the loader as the following code tries to load an implementation of a Tracer, and if it fails it tries to load the Tracer interface itself which won't work with an ABC:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/d3bb2280daed284e7adf530a978903a1bbf503c9/opentelemetry-api/src/opentelemetry/util/loader.py#L162-L172\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "issue_166",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Separate no-op from interfaces (#311)\n\nFixes #66"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119444ee515ce6a4e94c",
    "number": 310,
    "body": "This should help us catch linting problems sooner. See #308 for more details\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "recreate-lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Always recreate lint env (#310)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119544ee515ce6a4e94d",
    "number": 309,
    "body": "Fixes #308",
    "head_branch": "issue_308",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix isort issues (#309)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119644ee515ce6a4e94e",
    "number": 307,
    "body": "Fixes #142 \r\n\r\nEnabling `--strict` mode for mypy. Added a test in the sdk and the same test in the api to test the different behaviours between the Tracer, Span and Metric classes.\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "issue-142",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure the API returns right value types (#307)\n\nFixes #142\r\n\r\nEnabling --strict mode for mypy. Added a test in the sdk and the same test in\r\nthe api to test the different behaviours between the Tracer, Span and Metric\r\nclasses."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119744ee515ce6a4e94f",
    "number": 306,
    "body": "Fixes #303 \r\n\r\nThis PR will have conflicts, I'll resolve them before moving this PR from draft.\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "codeboten/issue_303",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Using InMemorySpanExporter for wsgi/flask tests (#306)\n\nThe InMemorySpanExporter provides a friendly interface to retrieving span information, reducing the need for mocking in unit tests.\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119744ee515ce6a4e950",
    "number": 302,
    "body": "They were previously failing with\r\n\r\n    OSError: [WinError 193] %1 is not a valid Win32 application\r\n\r\nSince subprocess.Popen directly calls CreateProcess and the Windows\r\nkernel doesn't support shebangs (even if it did, /usr/bin/env is not a\r\npath that leads to a valid executable usually), we need to manually\r\nspecify sys.executable ('python' would not work since it would leave the\r\nvirtualenv).",
    "head_branch": "fix-example-win32",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix example tests on Win32 (#302)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119844ee515ce6a4e951",
    "number": 301,
    "body": "Implements the \"Tracers\" part of #203.\r\n\r\nEDIT: I chose the name TracerSource instead of TracerFactory because it seems to be the consensus that TracerFactory is not an ideal name since the spec allows the same instance to be returned by different calls to getTracer, which means that TracerFactory is not really a Factory. See also https://github.com/open-telemetry/opentelemetry-specification/pull/354#discussion_r346405793",
    "head_branch": "named-tracers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Named tracers (#301)\n\nImplements the \"Tracers\" part of #203."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119944ee515ce6a4e952",
    "number": 299,
    "body": "Updates flask & WSGI integration to follow new semantic conventions for HTTP as of https://github.com/open-telemetry/opentelemetry-specification/pull/263 (see https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/data-http.md).\r\n\r\nThe HTTP client (requests) integration will need an update too, and for that the wsgi `opentelemetry.ext.wsgi.http_status_to_canonical_code` will need to be used by the requests-instrumentation -- either by just adding a dependency (since ext-wsgi is and will stay dependency-free itself, this would technically not be a problem), or by splitting this function into a new package. This will be done in a follow-up PR.\r\n",
    "head_branch": "http-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update WSGI & Flask integrations to follow new semantic conventions  (#299)\n\nUpdates flask & WSGI integrations to follow new semantic conventions for HTTP\r\nas of #263."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119a44ee515ce6a4e953",
    "number": 298,
    "body": "Took OpenCensus implementation as starting point for this one, we store more properties in traces now and we use tracer provided during  trace_integration method\r\n\r\nhttps://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-postgresql\r\n\r\npsycopg docs\r\nhttp://initd.org/psycopg/docs/index.html \r\n\r\n#265 ",
    "head_branch": "hectorhdzg/postgres",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding psycopg2 integration (#298)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119b44ee515ce6a4e954",
    "number": 297,
    "body": "Fixes #292\r\n\r\nA few test issues pending still. Opening up this PR to receive comments and feedback, specially related to the implementation of the status classes and exceptions. ",
    "head_branch": "issue_292",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set status for ended spans (#297)\n\nFixes #292"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119c44ee515ce6a4e955",
    "number": 295,
    "body": "",
    "head_branch": "Oberon00-py38",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update travis.yml for release of Python 3.8. (#295)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119d44ee515ce6a4e956",
    "number": 294,
    "body": "As discussed in yesterday's SIG meetingm, this PR moves the v3 target release date out three weeks to 12/6 without changing the list of features. I'll update the milestone after this is merged.",
    "head_branch": "change-date-av3-dec-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change v3 alpha release date to 12/6 (#294)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119d44ee515ce6a4e957",
    "number": 293,
    "body": "An issue in pytest 5.2.3 is causing test failures: https://github.com/pytest-dev/pytest/issues/6194 \r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "pin-pytest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Skip pytest 5.2.3 (#293)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119e44ee515ce6a4e958",
    "number": 291,
    "body": "Quoting from `CONTRIBUTING.md`:\r\n\r\n> To quickly get up and running, you can use the `scripts/eachdist.py` tool that\r\nships with this project. First create a virtualenv and activate it.\r\nThen run `python scripts/eachdist.py develop` to install all required packages\r\nas well as the project's packages themselves (in `--editable` mode).\r\nYou can then run `scripts/eachdist.py test` to test everything or\r\n`scripts/eachdist.py lint` to lint everything (fixing anything that is auto-fixable).\r\n\r\nOf course the script works on both Windows and Linux (py > sh 😄). I encourage you to try it out.\r\n\r\nPS: Yes, I know that I created \"an ad-hoc, informally-specified, bug-ridden, slow implementation of half of\" ~xargs~ `find -exec`.",
    "head_branch": "eachdist-script",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add eachdist.py to simplify build (#291)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620119f44ee515ce6a4e959",
    "number": 290,
    "body": "Simplifying the API by removing `create_span`. Updated the WSGI integration and docs.\r\n\r\nResolves #152 \r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "remove-create-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove create_span from the API (#290)\n\nSimplify the API by removing create_span.\r\n\r\nResolves #152"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a044ee515ce6a4e95a",
    "number": 289,
    "body": "- trivial",
    "head_branch": "fix_typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo, wording (#289)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a144ee515ce6a4e95b",
    "number": 288,
    "body": "Implement #287\r\nTODO:\r\n  - add GCP/AWS/Azure labels if planned\r\n     - in OC, it detects GAE/K8S/AWS\r\n  - increase test coverage\r\n\r\nTested on:\r\n-  examples/client.py and examples/server.py\r\n-  https://github.com/open-telemetry/opentelemetry-go/tree/master/example/http-stackdriver\r\n",
    "head_branch": "sd_exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a244ee515ce6a4e95c",
    "number": 286,
    "body": "Fixes #236",
    "head_branch": "issue_236",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for B3 parentspanid (#286)\n\nSupporting B3's technical definition of a parentspanid, by sourcing the span id of the parent span\r\nduring injection from the propagator."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a244ee515ce6a4e95d",
    "number": 285,
    "body": "Was working on integrating OpenTelemetry into my project at work. We are currently working with OpenCensus, so I ported it to OpenTelemetry.\r\n\r\nI figured I'd open a PR with an example of what worked for me with using OpenTelemetry with Azure on a back-end application.",
    "head_branch": "azureRequestsExample",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a344ee515ce6a4e95e",
    "number": 282,
    "body": "I was working on a demo for OpenTracing compatibility and thought it'd be useful to include as an example here.\r\n\r\nI wrote this in the style of #277, and copied some boilerplate text from that PR. We should consider making examples work with any backend, but I've only included Jaeger for now.\r\n\r\n@johananl, @codeboten, @carlosalberto, let me know what you think!",
    "head_branch": "opentracing-shim-example",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add OpenTracing shim example (#282)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Christian Neumüller <christian+github@neumueller.me>\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a444ee515ce6a4e95f",
    "number": 281,
    "body": "Just a cosmetic change.",
    "head_branch": "mauricio/improve_readmes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add pypi badges and installation instructions to all ext packages (#281)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a544ee515ce6a4e960",
    "number": 280,
    "body": "The BatchExportSpanProcessor is an asynchronous span processor that uses a\r\nworker thread to call the different exporters.  Before this commit applications\r\nhad to shut down the span processor explicitely to guarantee that all the spans\r\nwere summited to the exporters, this was not very intuitive for the users.\r\n\r\nThis commit removes that limitation by implementing the tracer's __del__\r\nmethod and an atexit hook.  According to __del__'s documentation [1] it is\r\npossible that sometimes it's not called, for that reason the atexit hook is\r\nalso used to guarantee that the processor is shut down in all the cases.\r\n\r\n[1] https://docs.python.org/3/reference/datamodel.html#object.__del__",
    "head_branch": "mauricio/shutdown_exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SDK: shut down span processors automatically (#280)\n\nThe BatchExportSpanProcessor is an asynchronous span processor that uses a\r\nworker thread to call the different exporters. Before this commit applications\r\nhad to shut down the span processor explicitely to guarantee that all the spans\r\nwere summited to the exporters, this was not very intuitive for the users.\r\n\r\nThis commit removes that limitation by implementing the tracer's __del__ method\r\nand an atexit hook. According to __del__'s documentation [1] it is possible\r\nthat sometimes it's not called, for that reason the atexit hook is also used to\r\nguarantee that the processor is shut down in all the cases.\r\n\r\n[1] https://docs.python.org/3/reference/datamodel.html#object.__del__"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a644ee515ce6a4e961",
    "number": 279,
    "body": "- trivial fix",
    "head_branch": "ext_minor_version_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix version string 0.2a.0 -> 0.2a0 (#279)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a744ee515ce6a4e962",
    "number": 278,
    "body": "This is a PR to start implementing the context-propagation-spec as outlined in the following documents:\r\n\r\n* https://github.com/open-telemetry/oteps/pull/42\r\n* https://gitter.im/open-telemetry/context-prop-spec\r\n* https://docs.google.com/document/d/1HKjixuwg3aodg0089-kz8RcJuGpDjKJJq8qw-c2cKmY/edit\r\n\r\nThere are many outstanding items here in the design, which are being discussed in this document:\r\n\r\nhttps://docs.google.com/document/d/1hRlgHAKnW51EvyeuIA36f1Fp6jwSTLSY9iKjuyBh6Xc/edit#",
    "head_branch": "feature/context-prop-spec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a744ee515ce6a4e963",
    "number": 277,
    "body": "Adding examples with README files. Basing this off the [opentelemetry-js/examples](https://github.com/open-telemetry/opentelemetry-js/tree/master/examples) content for consistency.",
    "head_branch": "examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding more documentation around examples (#277)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a844ee515ce6a4e964",
    "number": 274,
    "body": "This PR ports the OpenTracing testbed https://github.com/opentracing/opentracing-python/tree/master/testb to check that the ot-shim is working as expected using different frameworks.\r\n\r\nGevent doesn't support context vars yet https://github.com/gevent/gevent/issues/1407, so those tests are not compatible with opentelemetry and were not ported.\r\n",
    "head_branch": "mauricio/add_testbed_for_otshim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011a944ee515ce6a4e965",
    "number": 272,
    "body": "Addresses [#193].\r\nRemove Azure exporters out of OpenTelemetry repos.\r\n\r\nI've published a new Pypi package called `opentelemetry-azure-monitor-exporter` which is in a separate repository. You can see it [here](https://pypi.org/project/opentelemetry-azure-monitor-exporter/).\r\n\r\n@c24t I think we should deprecate the already [existing package](https://pypi.org/project/opentelemetry-ext-azure-monitor/) and link it to the new one.\r\n\r\n@victoraugustolls FYI",
    "head_branch": "azure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove Azure Exporters out of main repo (master) (#272)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011aa44ee515ce6a4e966",
    "number": 271,
    "body": "Quick update to #267 now that https://github.com/agronholm/sphinx-autodoc-typehints/issues/117 is fixed.",
    "head_branch": "autodoc-typehints-1.10.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump sphinx-autodoc-typehints to 1.10.2 (#271)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ab44ee515ce6a4e967",
    "number": 270,
    "body": "e4d89490e870 (\"OpenTracing Bridge - Initial implementation (#211)\") introduced\r\na new timestamp argument to the add_event method. This commit moves that\r\nargument to be the last one because it is more common to have event attributes\r\nthan an explicitly timestamp.",
    "head_branch": "mauricio/change_events_argument_order",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "API: change order of arguments in add_event (#270)\n\ne4d89490e870 (\"OpenTracing Bridge - Initial implementation (#211)\") introduced\r\na new timestamp argument to the add_event method. This commit moves that\r\nargument to be the last one because it is more common to have event attributes\r\nthan an explicitly timestamp."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ac44ee515ce6a4e968",
    "number": 269,
    "body": "I found this useful when writing exporter code.",
    "head_branch": "exportexc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use logger.exception to get traceback for export exception. (#269)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ad44ee515ce6a4e969",
    "number": 268,
    "body": "Part of https://github.com/open-telemetry/community/issues/233",
    "head_branch": "codeowners",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Decentralizing the Python members (#268)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ad44ee515ce6a4e96a",
    "number": 267,
    "body": "Latest version of sphinx-autodoc-typehints is causing warnings in Travis build\r\n\r\nhttps://pypi.org/project/sphinx-autodoc-typehints/#history\r\n\r\n#263 ",
    "head_branch": "docsWarning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not use latest sphinx-autodoc-typehints (#267)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ae44ee515ce6a4e96b",
    "number": 264,
    "body": "Took OpenCensus implementation as starting point for this, there are significant changes now including different fields to store in the Span object and monkey patching process.\r\nhttps://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-mysql\r\n\r\nMySQL Connector docs\r\nhttps://dev.mysql.com/doc/connector-python/en/",
    "head_branch": "newMaster",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding DB API integration + MySQL connector integration (#264)\n\nAdding the ext.dbapi and ext.mysql package."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011af44ee515ce6a4e96c",
    "number": 262,
    "body": "The example of the jaeger exporter is failing because\r\ne4d89490e870 (\"OpenTracing Bridge - Initial implementation (#211)\") introduced\r\na new timestamp parameter to add_event, the example was passing parameter by\r\nposition so it was messed up.\r\n\r\nI tried to add this to the CI but didn't find an easy way to do it, if somebody has a suggestion it's welcome!",
    "head_branch": "mauricio/fix_jaeger_exporter_example",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b044ee515ce6a4e96d",
    "number": 261,
    "body": "README updates to reflect new milestones, including moving the prometheus exporter to the v3 alpha.",
    "head_branch": "post-0.2a0-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "README updates for alpha v2 release (#261)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b144ee515ce6a4e96e",
    "number": 260,
    "body": "This PR bumps the version (and required versions) for all packages to `0.3.dev0`, which puts it ahead of the latest release version, `0.2a0`.",
    "head_branch": "version-bump-0.3.dev0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump version to 0.3.dev0 (#260)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b144ee515ce6a4e96f",
    "number": 259,
    "body": "Definitely still a work in progress. Removing `add_link` and `add_lazy_link` from api/sdk. From the [open-telemetry/oteps#28](https://github.com/open-telemetry/oteps/pull/28), it appeared the only place where it made sense to add links was in the `start_span`, `create_span` and `start_as_current_span` if we want to be able to add them to the Span before it's constructed. Would love some feedback on this.\r\n\r\nStill need to address the other part of the OTEP regarding Attributes\r\n \r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "otep-0006-implementation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removing add_link and add_lazy_link from api/sdk (#259)\n\nPrevents adding links after spans are created for OTEP 0006."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b244ee515ce6a4e970",
    "number": 258,
    "body": "Address [#222]\r\nSpecs: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-metrics-user.md#label-set-calling-convention\r\n\r\nPart of Go implemetation: https://github.com/open-telemetry/opentelemetry-go/pull/172\r\n\r\nThe primary purpose of LabelSets are to have an optimal way of re-using handles with the same label values. We achieve this by having the keys and values of the labels encoded and stored in each LabelSet instance, so we can have an easy lookup to the corresponding handle for each metric instrument. The encoding method used follows what the Go implementation is doing, which is apparently taken from statsd.\r\n\r\nFor label keys that are missing or extra in LabelSets that differ from the label keys specified in the creation of a metric, the exporters will deal with those use cases.",
    "head_branch": "labelset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement LabelSet for metrics (#258)\n\nThe primary purpose of LabelSets are to have an optimal way of re-using handles\r\nwith the same label values. We achieve this by having the keys and values of\r\nthe labels encoded and stored in each LabelSet instance, so we can have an easy\r\nlookup to the corresponding handle for each metric instrument."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b344ee515ce6a4e971",
    "number": 257,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Travis badge to README (#257)\n\nSigned-off-by: Gábor Lipták <gliptak@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b444ee515ce6a4e972",
    "number": 256,
    "body": "This commit implements inject() and extract() support for TEXT_MAP and\r\nHTTP_HEADERS formats by using the configured OpenTelemetry propagators.\r\n\r\nThe support for binary propagators is not completed on opentelemetry-python\r\n so this commit does not include for such format.\r\n\r\nSolves: https://github.com/open-telemetry/opentelemetry-python/issues/243.",
    "head_branch": "mauricio/implement_extract_and_inject_ot_shim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ext/opentracing-shim: implement inject and extract (#256)\n\nThis commit implements inject() and extract() support for TEXT_MAP and\r\nHTTP_HEADERS formats by using the configured OpenTelemetry propagators.\r\n\r\nThe support for binary propagators is not completed on opentelemetry-python so\r\nthis commit does not include for such format."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b544ee515ce6a4e973",
    "number": 255,
    "body": "Tested that calling log/log_event worked without implementing them. The implementation is strictly to log a warning when those deprecated methods are called.\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "shim-log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add warning to OT shim log/log_event calls (#255)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b644ee515ce6a4e974",
    "number": 254,
    "body": "From @Oberon00's comment: https://github.com/open-telemetry/opentelemetry-python/pull/250#discussion_r339971776.\r\n\r\n@Oberon00 do you think it's worth including tests like this?\r\n\r\nThis PR adds a test for each package to check that the version number is normalized, similar to the [check in the Dynatrace OneAgent SDK](https://github.com/Dynatrace/OneAgent-SDK-for-Python/blob/a59b28cc9cdb7f818dee9304903d91df69eb31f0/setup.py#L71-L74). It checks that the verison is importable in each package, and matches the normalized version according to `pkg_resources`.\r\n\r\nWe're unlikely to make this particular mistake again, but it can't hurt to test it.",
    "head_branch": "version-norm-checks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b744ee515ce6a4e975",
    "number": 253,
    "body": "Follow-up to #251. See also #250, though ideally we'd have merged this PR before that one.\r\n\r\nWe have to choose whether to update the changelogs before or after release. One benefit of changing them on master before the release is that we can split off the release branch after updating them, but before updating the version number. After the split the release branch should get the next release version (here `0.2a0`) and the master branch should get the next dev version (here `0.3.dev0`).\r\n\r\nThis matches the OpenCensus release strategy with one important exception: here all `ext` packages get the same version, even if they haven't been updated since the last release. This is why the new `ext-jaeger` and `ext-opencensus-shim` packages start at version `0.2a0`.",
    "head_branch": "v0.2a.0-changelogs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update changelogs for 0.2a0 release (#253)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b744ee515ce6a4e976",
    "number": 251,
    "body": "This PR adds changelogs for packages released in #190. Once this is merged, I'll rebase `v0.2a.x` to include these and update the changelogs for the new release in #250.",
    "head_branch": "post-0.1a.0-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add changelogs for 0.1a.0 release (#251)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b844ee515ce6a4e977",
    "number": 250,
    "body": "Like #190, this PR sets the version number for all packages to `0.2a0`, and sets this as the minimum required version when one package depends on another.\r\n\r\nWe'll have to bump the version numbers on master and update the README once this is released.",
    "head_branch": "v0.2a.0-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update versions and requirements to 0.2a0 (#250)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011b944ee515ce6a4e978",
    "number": 249,
    "body": "A change between black versions [`19.3b0`](https://github.com/psf/black/releases/tag/19.3b0) and [`19.10b0`](https://github.com/psf/black/releases/tag/19.10b0) broke lint on master. This fixes it by re-running black on affected files.\r\n\r\nOccasional PRs like these may be the price we pay for not pinning our build tools, but it may be worth it to keep them up to date.",
    "head_branch": "deal-with-black-19.10b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Reblacken (#249)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ba44ee515ce6a4e979",
    "number": 248,
    "body": "Testing the publish action, please ignore.",
    "head_branch": "gh-actions-publish-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011bb44ee515ce6a4e97a",
    "number": 247,
    "body": "Fixes #8\r\n\r\nThis PR adds a GH action that builds all packages in the repo on each release and pushes them to PyPI.\r\n\r\nThe build script was inspired by OC's [`twine_upload.sh`](https://github.com/census-instrumentation/opencensus-python/blob/master/scripts/twine_upload.sh). This version only builds the wheels, and leaves it up to the GH action to publish to PyPI.\r\n\r\nI added a new PyPI API token for user [cnk](https://pypi.org/user/cnk/) to this project's secrets.\r\n\r\nSee also #167, which added the first GH action to publish docs.",
    "head_branch": "gh-actions-publish",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Publish to PyPI via github action (#247)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011bb44ee515ce6a4e97b",
    "number": 246,
    "body": "This is a follow up to #198, which renamed `start_span` to `start_as_current_span`.\r\n\r\nThere were several examples and tests with calls to `start_span` that look like they should have been updated, including the example in the main README.\r\n\r\n\r\n\r\n",
    "head_branch": "start-as-current-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make start_as_current_span default (#246)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011bc44ee515ce6a4e97c",
    "number": 244,
    "body": "This PR adds documentation to the OpenTracing shim.\r\n\r\nThe documentation is written in standard Python docstrings and is Sphinx-friendly so we can generate HTML docs from it.\r\n\r\nTo generate HTML docs for testing, do the following (I've included full instructions for completeness - please feel free to skip or modify irrelevant steps):\r\n\r\n```\r\ngit clone git@github.com:kinvolk/opentelemetry-python.git\r\ncd opentelemetry-python\r\ngit checkout johananl/ot-shim-docs\r\nvirtualenv /tmp/venv\r\nsource /tmp/venv/bin/activate\r\npip install tox\r\ntox -e docs\r\n```\r\n\r\nThe generated docs are in `docs/_build/html/`. They can be served locally using [sphinx-serve](https://pypi.org/project/sphinx-serve/) for example.",
    "head_branch": "johananl/ot-shim-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add documentation for the OpenTracing shim (#244)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011bd44ee515ce6a4e97d",
    "number": 238,
    "body": "Follow up to #225.\r\n\r\nThis PR changes `ProbabilitySampler` so that it checks the left bits of the trace ID (following https://github.com/open-telemetry/opentelemetry-specification/pull/331) instead of the right bits (like OpenCensus).\r\n\r\nWhether this is the right behavior depends on https://github.com/open-telemetry/opentelemetry-specification/pull/331, and does break from the other clients.",
    "head_branch": "sampler-api-go-high",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Clean up ProbabilitySampler for 64 bit trace IDs (#238)\n\nCo-authored-by: alrex <alrex.boten@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011be44ee515ce6a4e97e",
    "number": 237,
    "body": "",
    "head_branch": "feature/buddies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Introducing and documenting the concept of OpenTelemetry buddies. (#237)\n\nTo foster building of the community, introducing the concept of OpenTelemetry buddies to provide experienced partners for potential contributors."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011bf44ee515ce6a4e97f",
    "number": 235,
    "body": "Fixes #233. The SDK tracer will now create spans with invalid parents\r\nas brand new spans, similar to not having a parent at all.\r\n\r\nAdding this behavior to the Tracer ensures that integrations do not have\r\nto handle invalid span contexts in their own code, and ensures that behavior\r\nis consistent with w3c tracecontext (which specifies invalid results should\r\nbe handled by creating new spans).",
    "head_branch": "feature/handle-invalid-spancontext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SDK Tracer treats invalid span parent like null (#233, #235)\n\nThe SDK tracer will now create spans with invalid parents\r\nas brand new spans, similar to not having a parent at all.\r\n\r\nAdding this behavior to the Tracer ensures that integrations do not have\r\nto handle invalid span contexts in their own code, and ensures that behavior\r\nis consistent with w3c tracecontext (which specifies invalid results should\r\nbe handled by creating new spans).\r\n\r\nSetting the parent to none on spans if the parent context is invalid, reducing logic\r\nto handle that situation in downstream processing like exporters."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c044ee515ce6a4e980",
    "number": 232,
    "body": "Database fields\r\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/data-semantic-conventions.md#databases-client-calls\r\n\r\n#209 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding pymongo integration (#232)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c144ee515ce6a4e981",
    "number": 231,
    "body": "Pymongo integration",
    "head_branch": "hectorh/mongo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c144ee515ce6a4e982",
    "number": 230,
    "body": "The type of startTime and duration were float types, it caused an exception\r\nin the thrift package because they are declared as i64 integers in thrift.\r\nIt wasn't detected because there were not tests covering it, also for\r\nsome reason I have been using an old version on my computer all this time.\r\n\r\nThis commit fixes it by ensuring the datatypes are int (changing 1eX notation\r\nby 10 ** X notation), it also intruce new tests to guarantee that a similar\r\nproblem is detected the next time.\r\n",
    "head_branch": "mauricio/fix_jaeger_exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix bad variable type in jaeger-ext (#230)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c244ee515ce6a4e983",
    "number": 229,
    "body": "63f559ec seems to have broken mypy since we are returning a literal `False` in https://github.com/open-telemetry/opentelemetry-python/commit/63f559ec257da7868a58699cbac598f3c57bd889#diff-97345450e765fa40d32664356325e06cR248 while using `typing.Optional[bool]` as the type hint.\r\n\r\nThis causes the following mypy error:\r\n\r\n```\r\nopentelemetry-api/src/opentelemetry/trace/__init__.py:243: error: \"bool\" is invalid as return type for \"__exit__\" that always returns False\r\nopentelemetry-api/src/opentelemetry/trace/__init__.py:243: note: Use \"typing_extensions.Literal[False]\" as the return type or change it to \"None\"\r\nopentelemetry-api/src/opentelemetry/trace/__init__.py:243: note: If return type of \"__exit__\" implies that it may return True, the context manager may swallow exceptions\r\nopentelemetry-api/src/opentelemetry/trace/__init__.py:243: error: \"bool\" is invalid as return type for \"__exit__\" that always returns False\r\nopentelemetry-api/src/opentelemetry/trace/__init__.py:243: note: Use \"typing_extensions.Literal[False]\" as the return type or change it to \"None\"\r\nopentelemetry-api/src/opentelemetry/trace/__init__.py:243: note: If return type of \"__exit__\" implies that it may return True, the context manager may swallow exceptions\r\n```\r\n\r\n~I don't know why the CI was green on that commit, but anyway it is failing now.~ As it turns out we don't pin the mypy version so apparently this started breaking with mypy `0.740`.\r\n\r\nAFAICT this can be solved by changing the type hint to `typing_extensions.Literal[False]`, however reading the [docs](https://docs.python.org/3.7/reference/datamodel.html#object.__exit__) it seems the only return value which suppresses exceptions is `True`, therefore dropping the return statement altogether should have the same result as returning a literal `False` and would also allow us to set the type hint to `-> None` and fix mypy.",
    "head_branch": "johananl/fix-mypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix mypy errors (#229)\n\nIn particular, the following errors are fixed in this commit:\r\n\r\n* Don't return False in __exit__\r\n\r\nReturning a literal causes a mypy error when combined with the\r\n`typing.Optional[bool]` type hint. Furthermore, exception handling is\r\nthe same when returning `False` and when returning `None` (the\r\nexception is re-raised). Therefore, it's simpler to remove the return\r\nstatement and change the type hint to `None`.\r\n\r\n* Correctly initialize nested tuple\r\n\r\nTuples of length 1 should be initialized with a trailing comma to be\r\nproperly interpreted.\r\n\r\n* Pass correct type to use_context() in test\r\n\r\n* Add type annotations for test helper functions\r\n\r\nSince we have `disallow_untyped_calls = True` in our mypy config for\r\ntests, we must add type annotations to any function that is called\r\nfrom a test.\r\n\r\n\r\nAddditionally, bump minimal mypy version to 0.740 to consistently reproduce these errors."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c344ee515ce6a4e984",
    "number": 228,
    "body": "This introduces the w3c tracing validation service as an integration test for opentelemetry's tracecontext implementation, enabling us to validate our tracecontext implementation without authoring another complete suite.\r\n\r\nCurrently the integration test fails due to https://github.com/w3c/trace-context/issues/341\r\n\r\nThis includes fixes to the tracecontexthttptextformatter to adhere to the specification.",
    "head_branch": "feature/tracecontext-integration-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding w3c tracecontext integration test (#228)\n\nVerifying that our tracecontext is compliant with the w3c\r\ntracecontext reference is valuable. Adding a tox command\r\nto verify that the TraceContext propagator adheres to the\r\nw3c spec.\r\n\r\nThe tracecontexthttptextformat is now completely compliant with the w3c\r\ntracecontext test suite."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c444ee515ce6a4e985",
    "number": 227,
    "body": "Somehow mypy tests are failing on master now, this PR solves that by fixing some of them and disabling some checks.\r\n\r\n",
    "head_branch": "mauricio/fix_mypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c544ee515ce6a4e986",
    "number": 226,
    "body": "If propagator.extract() returns INVALID_SPAN it means that the http headers\r\ndo not contain valid trace information, in this case use the current span as\r\nparent.\r\n\r\nBefore this change INVALID_SPAN was being passed to create_span then all the\r\ntraces were generated with trace_id = 0x0.\r\n",
    "head_branch": "mauricio/fix_wsgi_issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c644ee515ce6a4e987",
    "number": 225,
    "body": "This PR adds the sampler API and changes the SDK tracer so that it creates either a `Span` or `DefaultSpan` depending on the sampling decision at span creation time.\r\n\r\nThe sampling spec is a moving target. The recently-merged https://github.com/open-telemetry/opentelemetry-specification/pull/296 moves samplers out of the API, adds a distinction between \"sampled\" and \"recorded\" traces, and changes the behavior of the tracer with respect to links and attributes.\r\n\r\nThis PR doesn't implement the recent spec changes yet. I thought it'd be easier to write and review this in two stages: one to add basic samplers, and another to bring samplers up to speed with the spec.\r\n\r\nSee also:\r\n- https://github.com/open-telemetry/oteps/blob/master/text/0006-sampling.md\r\n- https://github.com/open-telemetry/oteps/pull/24",
    "head_branch": "sampler-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add sampler API, use in SDK tracer (#225)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c644ee515ce6a4e988",
    "number": 224,
    "body": "Addresses [#223]\r\nSpecs: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-metrics-user.md#direct-metric-calling-convention",
    "head_branch": "metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement direct calling convention of metric instruments (#224)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c744ee515ce6a4e989",
    "number": 218,
    "body": "This updates the README to match the new milestones, and adds some new information about upcoming features.\r\n\r\nThis isn't meant to be comprehensive yet, just better than the current README.",
    "head_branch": "new-milestones-new-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README for new milestones (#218)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c844ee515ce6a4e98a",
    "number": 217,
    "body": "This setting is causing problem to contributors using Windows, making it harder to see real lint issues",
    "head_branch": "lintUpdates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011c944ee515ce6a4e98b",
    "number": 215,
    "body": "Resolves #183.\r\n\r\nNow it is much simpler to restore context:\r\n```python\r\nfrom opentelemetry.context import Context\r\n\r\nContext.a = 'a'\r\nprint(Context)\r\nContext.b = 'b'\r\nprint(Context)\r\nwith Context.use(a='foo', b='bar'):\r\n    print(Context)\r\n    with Context.use(a='baz', c='baz'):\r\n        print(Context)\r\nprint(Context)\r\n```\r\n\r\nYou will get:\r\n```\r\nAsyncRuntimeContext({'a': 'a'})\r\nAsyncRuntimeContext({'a': 'a', 'b': 'b'})\r\nAsyncRuntimeContext({'a': 'foo', 'b': 'bar'})\r\nAsyncRuntimeContext({'a': 'baz', 'b': 'bar', 'c': 'baz'})\r\nAsyncRuntimeContext({'a': 'a', 'b': 'b', 'c': None})\r\n```",
    "head_branch": "context",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add contextmanager for Context (#215)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ca44ee515ce6a4e98c",
    "number": 213,
    "body": "Adding setStatus method in Span according to [spec ](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-tracing.md#status)\r\n\r\n#212 ",
    "head_branch": "spanStatus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add set_status to Span (#213)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011cb44ee515ce6a4e98d",
    "number": 211,
    "body": "## General\r\n\r\nThis is an initial implementation for the OpenTracing bridge for the Python OpenTelemetry library. There are still some things I would like to handle before considering a merge. On the other hand this is a big PR and I would like to start getting feedback as soon as possible, so I'm opening a draft PR while I work on closing the remaining work items (see TODO section below).\r\n\r\nThis PR supersedes https://github.com/open-telemetry/opentelemetry-python/pull/120. I have found it easier to open a new PR rather than altering the old one due to a significantly different implementation. Please tell me if I should edit the original PR instead.\r\n\r\n## Implementation\r\n\r\nThe PR adds an OpenTracing \"shim\". The shim is a collection of wrapper classes which should allow an OpenTracing user to instantiate an OpenTelemetry tracer and use it as if it were an OpenTracing tracer, without altering instrumentation code.\r\n\r\n## TODO\r\n\r\nThe following should probably be done before merging:\r\n\r\n- **Squash commits**. The current commits aren't properly organized so we should rebase and/or squash them before merging. I'm not sure how granular the commits should be - one big commit for the entire feature? A couple of smaller commits which are divided logically?\r\n- **Add documentation**. I want to ensure all the new classes and functions have Sphinx-friendly docstrings. Additionally, we should generate the required Sphinx files to have proper docs for the bridge.\r\n- **Add typing**. Following my [conversation](https://gitter.im/open-telemetry/opentelemetry-python?at=5d9cace537073b36a091cb2d) with @c24t, it could be nice to have typing info at least for the bridge's public API. This may require writing a typing stub for OpenTracing since the library doesn't currently include typing information.\r\n\r\nThe following features haven't been implemented yet:\r\n\r\n- **Inject/extract methods**. I haven't got to implementing them yet but there is no blocker for doing so AFAICT.\r\n- **Baggage items**. The spec doesn't specify baggage support yet, which is probably a blocker.\r\n\r\n## Testing\r\n\r\nTo run the unit tests, execute `tox`. Following are full instructions for running the tests from scratch, in case somebody finds it useful:\r\n\r\n```\r\ngit clone git@github.com:kinvolk/opentelemetry-python.git\r\ncd opentelemetry-python\r\ngit checkout johananl/ot-shim\r\nvirtualenv /tmp/venv\r\nsource /tmp/venv/bin/activate\r\npip install tox\r\ntox\r\n```\r\n\r\nTo use the bridge for tracing a dummy app, use the following:\r\n\r\n```\r\ngit clone git@github.com:kinvolk/opentelemetry-python.git\r\ncd opentelemetry-python\r\ngit checkout johananl/ot-shim\r\nvirtualenv /tmp/venv\r\nsource /tmp/venv/bin/activate\r\npip install ext/opentelemetry-ext-opentracing-shim\r\n# An OpenTelemetry tracer is necessary. I've used the SDK here but a different tracer should also work.\r\npip install opentelemetry-sdk\r\n```\r\n\r\nThen, instrument an app:\r\n\r\n```python\r\nimport time\r\nfrom opentelemetry.sdk.trace import Tracer, export\r\nfrom opentelemetry.sdk.trace.export.in_memory_span_exporter import InMemorySpanExporter\r\nfrom opentelemetry.ext.opentracing_shim import create_tracer\r\n\r\notel_tracer = Tracer()\r\nmemory_exporter = InMemorySpanExporter()\r\nspan_processor = export.SimpleExportSpanProcessor(memory_exporter)\r\notel_tracer.add_span_processor(span_processor)\r\n\r\ntracer = create_tracer(otel_tracer)\r\n\r\nprint('------------Started------------')\r\n\r\nwith tracer.start_active_span('parent') as parent:\r\n    time.sleep(0.1)\r\n    with tracer.start_active_span('child') as child:\r\n        time.sleep(0.3)\r\n\r\nfor s in memory_exporter.get_finished_spans():\r\n    print(s)\r\n    print(s.get_context())\r\n\r\nprint('-------------Done--------------')\r\n```",
    "head_branch": "johananl/ot-shim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OpenTracing Bridge - Initial implementation (#211)\n\nInitial implementation, without baggage support."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011cb44ee515ce6a4e98e",
    "number": 208,
    "body": "This a follow up of this PR:\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/128\r\n\r\nI tried to contact Aliaksei Urbanski(Jamim) and tried to push changes to his branch with no success, so I'm creating a new PR because of this, this is addressing main concern of adding dependency on pytest, we will be using only coverage.py now",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011cc44ee515ce6a4e98f",
    "number": 207,
    "body": "",
    "head_branch": "hectorh/test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011cd44ee515ce6a4e990",
    "number": 206,
    "body": "The flask integration has (only) two advantages over the plain WSGI middleware approach:\r\n\r\n* It can use the endpoint as span name (which is lower cardinality than the route; cf open-telemetry/opentelemetry-specification#270)\r\n* It can set the http.route attribute.\r\n\r\nIn addition, it also has an easier syntax to enable (you don't have to know about Flask.wsgi_app).\r\n\r\n(above summary copied from https://github.com/open-telemetry/opentelemetry-python/pull/206#issuecomment-539643266)\r\n\r\nI did not add flask to the dependencies (except the test extra) because it seems kinda useless: To use the extension, you have to pass a Flask object which makes it obvious that you need Flask. If you think that's too odd, I will split the flask integration into new distribution that depends on the WSGI integration.",
    "head_branch": "wsgi-flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Flask integration based on WSGI ext (#206)\n\nThe flask integration has (only) two advantages over the plain WSGI middleware\r\napproach:\r\n\r\n- It can use the endpoint as span name (which is lower cardinality than the\r\n  route; cf #270)\r\n- It can set the http.route attribute.\r\n\r\nIn addition, it also has an easier syntax to enable (you don't have to know\r\nabout Flask.wsgi_app)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ce44ee515ce6a4e991",
    "number": 205,
    "body": "Since we now have timestamp parameters in the API, we should also have a function that obtains matching arguments there.",
    "head_branch": "timestamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move util.time_ns to API. (#205)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011cf44ee515ce6a4e992",
    "number": 204,
    "body": "Split from #201.\r\n\r\nExcept for the TraceOptions/TraceState thing, they should mostly not matter at runtime.\r\n\r\nA few redundant assignments in `Span.__init__` may also be of note.",
    "head_branch": "mypyfixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix some \"errors\" found by mypy. (#204)\n\nFix some errors found by mypy (split from #201)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d044ee515ce6a4e993",
    "number": 201,
    "body": "",
    "head_branch": "more-mypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d044ee515ce6a4e994",
    "number": 200,
    "body": "The requirements are contained in tox.ini now.",
    "head_branch": "remove-useless-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unused dev-requirements.txt (#200)\n\nThe requirements are contained in tox.ini now."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d144ee515ce6a4e995",
    "number": 199,
    "body": "While implementing the jaeger exporter I found that it's not possible to iterate over the links of a Span in python3.4 because the `BoundedList` uses `deque.copy()` that was introduced in python3.5. \r\nThis PR fixes that and adds few tests to avoid similar problems in the future.",
    "head_branch": "mauricio/test_bounded_list_and_dict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fx bug in BoundedList for Python 3.4 and add tests (#199)\n\n* fix bug in BoundedList for python 3.4 and add tests\r\n\r\ncollections.deque.copy() was introduced in python 3.5, this commit changes\r\nthat by the deque constructor and adds some tests to BoundedList and BoundedDict\r\nto avoid similar problems in the future.\r\n\r\nAlso, improve docstrings of BoundedList and BoundedDict classes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d244ee515ce6a4e996",
    "number": 198,
    "body": "1. Make Tracer.start_span() simply create and start the Span,\r\n   without setting it as the current instance.\r\n2. Add an extra Tracer.start_as_current_span() to create the\r\n   Span and set it as the current instance automatically.\r\n\r\nNotes:\r\n\r\n* Made `Span` implement the context manager interface so it can be used in `with` blocks, by simply ending it.\r\n* No `end_on_close` parameter for `start_as_current_span()` - I think this should stay as an advanced scenario, which can be obtained by directly using `use_span()`.\r\n* I'm not totally bought on the name, so feel free to suggest a better name ;)\r\n* Refactored the `Span` creation tests to use `Tracer.start_span()` . instead, and have extra (minimalistic) tests for `start_as_current_span()` that simply assert the current `Span` handling.",
    "head_branch": "start_span_update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor current span handling for newly created spans. (#198)\n\n1. Make Tracer.start_span() simply create and start the Span,\r\n   without setting it as the current instance.\r\n2. Add an extra Tracer.start_as_current_span() to create the\r\n   Span and set it as the current instance automatically.\r\n\r\nCo-Authored-By: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d344ee515ce6a4e997",
    "number": 194,
    "body": "The community repo has clarified how to become member/approver/maintainer, so we'll just align with it.",
    "head_branch": "contrib",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update Contributing.md doc (#194)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d444ee515ce6a4e998",
    "number": 192,
    "body": "Implemented a console exporter for metrics, which simply prints metrics data to the console.\r\nAs well, added last_updated_timestamp field to metrics, certain exporters (Azure) need this field to be tracked.",
    "head_branch": "console",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metrics Console Exporter + Add last_updated_timestamp to metrics (#192)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d544ee515ce6a4e999",
    "number": 191,
    "body": "as title",
    "head_branch": "examples",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add **simple** client/server examples (#191)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d544ee515ce6a4e99a",
    "number": 190,
    "body": "This PR updates the version number for all packages to `0.1a.0`, and updates dependencies to match. This updates the `v0.1a.x` branch only, we'll keep the `0.1.dev0` version on master.\r\n\r\nLike in OpenCensus, `v0.1a.x` is a dedicated release branch for the `0.1.*` alpha releases. In principle we can cherry-pick bugfixes onto this branch from master, but we're unlikely to want to do this since this is an alpha release and advertised as unstable.\r\n\r\nFor now, we need to manually create a GH release and manually push to PyPI. We should [automate this](https://github.com/open-telemetry/opentelemetry-python/issues/158) before the next release.\r\n\r\nSee also #189, which updates the README to include info about this release.\r\n\r\n",
    "head_branch": "0.1a.0-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prepare for 0.1a.0 release (#190)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d644ee515ce6a4e99b",
    "number": 189,
    "body": "This PR directs users to install from PyPI instead of from source, adds notes on the alpha release, and updates the release schedule table to include the beta release.",
    "head_branch": "alpha-release-readme-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README for alpha release (#189)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d744ee515ce6a4e99c",
    "number": 188,
    "body": "This PR updates the flask example to use the W3C propagator following #180.",
    "head_branch": "update-example-for-180",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use default TraceContext propagator in example (#188)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d844ee515ce6a4e99d",
    "number": 186,
    "body": "Implementation of Metrics Exporter for Azure Monitor. Currently there is no concept of metrics processor or a polling mechanism, so export is called directly with the exporter.\r\nMost of the code was copied from [OpenCensus](https://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-azure), with some style adjustments.\r\n\r\nAs well, implementation of Console Metrics Exporter, in which takes the metrics and prints them to the console.",
    "head_branch": "azure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d944ee515ce6a4e99e",
    "number": 182,
    "body": "`datetime.datetime.fromtimestamp(...)` is using local time, changed to `datetime.datetime.utcfromtimestamp(...)`.",
    "head_branch": "utc_fix",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "fix time conversion bug (#182)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011d944ee515ce6a4e99f",
    "number": 181,
    "body": "Added `Context.suppress_instrumentation` flag, which can be used for the following scenarios:\r\n1. avoid instrumentation while running inside exporter.\r\n2. suppress certain call path to avoid excessive/unwanted data.",
    "head_branch": "is_exporter",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Introduce Context.suppress_instrumentation (#181)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011da44ee515ce6a4e9a0",
    "number": 180,
    "body": "This introduces a w3c TraceContext propagator, primarily inspired by opencensus.",
    "head_branch": "feature/tracecontext-propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implementing W3C TraceContext (fixes #116) (#180)\n\n* Implementing TraceContext (fixes #116)\r\n\r\nThis introduces a w3c TraceContext propagator, primarily inspired by opencensus."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011db44ee515ce6a4e9a1",
    "number": 179,
    "body": "Adding optional parameters for start_time in span.start and end_time in span.end\r\nFixes #134 \r\n\r\nhttps://github.com/open-telemetry/oteps/blob/master/text/0002-remove-spandata.md",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Span add override parameters for start_time and end_time (#179)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011dc44ee515ce6a4e9a2",
    "number": 177,
    "body": "Fixing typo in clone command",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CONTRIBUTING.md: Fix clone URL (#177)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011dd44ee515ce6a4e9a3",
    "number": 176,
    "body": "I noticed a few recent changes didn't include license boilerplate. This PR adds it to every code file where it was missing, but doesn't touch empty `__init__.py` files, docs, or other config (e.g. `tox.ini`).",
    "head_branch": "add-some-license-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing license boilerplate to a few files (#176)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011de44ee515ce6a4e9a4",
    "number": 175,
    "body": "Currently the exporter works with `SimpleExportSpanProcessor`, it should work with `batch export span processor` once #153 gets merged.\r\n\r\nMost of the code were copied from OpenCensus https://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-azure, with some style adjustments.",
    "head_branch": "azure",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Implement Azure Monitor Exporter (#175)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011de44ee515ce6a4e9a5",
    "number": 174,
    "body": "This commit adds a Jeager exporter for OpenTelemetry.  This exporter is based\r\non https://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-jaeger.\r\n\r\nThe exporter uses thrift and can be configured to send data to the agent and\r\nalso to a remote collector.\r\n\r\nFixes: https://github.com/open-telemetry/opentelemetry-python/issues/162",
    "head_branch": "mauricio/add_jaeger_exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Jaeger exporter (#174)\n\nThis adds a Jeager exporter for OpenTelemetry.  This exporter is based\r\non https://github.com/census-instrumentation/opencensus-python/tree/master/contrib/opencensus-ext-jaeger.\r\n\r\nThe exporter uses thrift and can be configured to send data to the agent and\r\nalso to a remote collector.\r\n\r\nThere is a long discussion going on about how to include generated files\r\nin the repo, so for now just put them here."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011df44ee515ce6a4e9a6",
    "number": 173,
    "body": "Bug found by @a-feld (https://github.com/open-telemetry/opentelemetry-python/pull/148#discussion_r327685988). I somehow thought that this must be possible with only checking the scheme once, but it seems not https://www.wolframalpha.com/input/?i=%28S+%26+X%29+%7C+%28%21S+%26+Y%29",
    "head_branch": "wsgiportfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "WSGI: Fix port 80 always appended in http.host (#173)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e044ee515ce6a4e9a7",
    "number": 172,
    "body": "Background context:\r\n1. We will have multiple examples targeting different audiences (e.g. end user, extension developer, core SDK developer). It makes more sense to have an `examples` folder instead of keeping everything at the top level.\r\n2. We don't plan to publish the examples to PyPI.",
    "head_branch": "examples",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Move example app to the examples folder (#172)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e144ee515ce6a4e9a8",
    "number": 170,
    "body": "Adds a link to the docs from #167.",
    "head_branch": "link-api-docs-from-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add link to docs to README (#170)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e244ee515ce6a4e9a9",
    "number": 168,
    "body": "Sanity testing github actions.\r\n\r\nEdit: the lint check does run on this PR! I have no opinion on whether we run lint on github or travis, just using this PR to troubleshoot #167.",
    "head_branch": "gh-actions-lint",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e344ee515ce6a4e9aa",
    "number": 167,
    "body": "Docs are live! See https://open-telemetry.github.io/opentelemetry-python/index.html.\r\n\r\nFixes #9.\r\n\r\nThis PR adds a [github action](https://github.com/open-telemetry/opentelemetry-python/actions) that builds the docs and copies them to the [`gh-pages`](https://github.com/open-telemetry/opentelemetry-python/tree/gh-pages) branch on each push to `master`.\r\n\r\nWe do the same thing in OpenCensus, but via travis. OC's docs are here: https://census-instrumentation.github.io/opencensus-python/.\r\n\r\nNote that this uses the third-party action [JamesIves/github-pages-deploy-action](https://github.com/JamesIves/github-pages-deploy-action/tree/2.0.2) (see [`entrypoint.sh`](https://github.com/JamesIves/github-pages-deploy-action/blob/c3d5102651ac519d324ac463752e6894d8e54ca6/entrypoint.sh) for details). I had to create a new personal access token for this action, the built-in `GITHUB_TOKEN` token [doesn't work](https://github.com/JamesIves/github-pages-deploy-action/issues/5).\r\n\r\nSome things we could still improve:\r\n- Host multiple versions of the docs, a la https://readthedocs.org\r\n- Default to displaying docs for the last-released version of the library instead of the version on master\r\n- Don't rebuild docs unless source files have changed\r\n- Automate running `sphinx-apidoc` to update sources",
    "head_branch": "c24t-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Build and host docs via github action (#167)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e344ee515ce6a4e9ab",
    "number": 164,
    "body": "Quick update for https://github.com/open-telemetry/opentelemetry-python/issues/162#issuecomment-534737421.",
    "head_branch": "zipkin-in-jaeger-out",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add B3 exporter to alpha release table (#164)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e544ee515ce6a4e9ac",
    "number": 160,
    "body": "This PR is the first part of finishing [#155]. Implements the Metric SDK in the following ways:\r\n\r\n1. Meter implementation + loader\r\n2. Metric instruments (gauge, counter, measure)\r\n3. Handles for metric instruments\r\n4. RecordBatch\r\n\r\nAdditional changes include:\r\n1. Using Tuple instead of List for label values\r\n2. Using a generic `update` function as an interface to the `add()`, `set()` and `record()` functions for the metric handles.\r\n3. Example included in example app.\r\n\r\nTODOs:\r\n1. Implement `record()` behaviour for `MeasureMetric`\r\n2. Observer + callback mechanism for `Gauge` [RFC](https://github.com/open-telemetry/oteps/blob/master/text/0008-metric-observer.md)\r\n3. Label sets + required/optional label keys + record directly through metric instrument [RFC](https://github.com/open-telemetry/oteps/pull/49)\r\n4. Locks for handles?",
    "head_branch": "metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metrics Implementation (#160)\n\n* Create functions\r\n\r\nComments for Meter\r\n\r\nMore comments\r\n\r\nAdd more comments\r\n\r\nFix typos\r\n\r\n* fix lint\r\n\r\n* Fix lint\r\n\r\n* fix typing\r\n\r\n* Remove options, constructors, seperate labels\r\n\r\n* Consistent naming for float and int\r\n\r\n* Abstract time series\r\n\r\n* Use ABC\r\n\r\n* Fix typo\r\n\r\n* Fix docs\r\n\r\n* seperate measure classes\r\n\r\n* Add examples\r\n\r\n* fix lint\r\n\r\n* Update to RFC 0003\r\n\r\n* Add spancontext, measurebatch\r\n\r\n* Fix docs\r\n\r\n* Fix comments\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* skip examples\r\n\r\n* white space\r\n\r\n* fix spacing\r\n\r\n* fix imports\r\n\r\n* fix imports\r\n\r\n* LabelValues to str\r\n\r\n* Black formatting\r\n\r\n* fix isort\r\n\r\n* Remove aggregation\r\n\r\n* Fix names\r\n\r\n* Remove aggregation from docs\r\n\r\n* Fix lint\r\n\r\n* metric changes\r\n\r\n* Typing\r\n\r\n* Fix lint\r\n\r\n* Fix lint\r\n\r\n* Add space\r\n\r\n* Fix lint\r\n\r\n* fix comments\r\n\r\n* handle, recordbatch\r\n\r\n* docs\r\n\r\n* Update recordbatch\r\n\r\n* black\r\n\r\n* Fix typo\r\n\r\n* remove ValueType\r\n\r\n* fix lint\r\n\r\n* sdk\r\n\r\n* metrics\r\n\r\n* example\r\n\r\n* counter\r\n\r\n* Tests\r\n\r\n* Address comments\r\n\r\n* ADd tests\r\n\r\n* Fix typing and examples\r\n\r\n* black\r\n\r\n* fix lint\r\n\r\n* remove override\r\n\r\n* Fix tests\r\n\r\n* mypy\r\n\r\n* fix lint\r\n\r\n* fix type\r\n\r\n* fix typing\r\n\r\n* fix tests\r\n\r\n* isort\r\n\r\n* isort\r\n\r\n* isort\r\n\r\n* isort\r\n\r\n* noop\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* fix tuple typing\r\n\r\n* fix type\r\n\r\n* black\r\n\r\n* address comments\r\n\r\n* fix type\r\n\r\n* fix lint\r\n\r\n* remove imports\r\n\r\n* default tests\r\n\r\n* fix lint\r\n\r\n* usse sequence\r\n\r\n* remove ellipses\r\n\r\n* remove ellipses\r\n\r\n* black\r\n\r\n* Fix typo\r\n\r\n* fix example\r\n\r\n* fix type\r\n\r\n* fix type\r\n\r\n* address comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e544ee515ce6a4e9ad",
    "number": 156,
    "body": "Implemented a synchronous console exporter.",
    "head_branch": "console-exporter",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Console exporter (#156)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e644ee515ce6a4e9ae",
    "number": 154,
    "body": "Closes #147 \r\nRequired for #148 ",
    "head_branch": "usespan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make use_span more flexible (closes #147). (#154)\n\nCo-Authored-By: Reiley Yang <reyang@microsoft.com>\r\nCo-Authored-By: Chris Kleinknecht <libc@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e744ee515ce6a4e9af",
    "number": 153,
    "body": "The exporters specification states that two built-in span processors should be\r\nimplemented, the simple processor span and the batch processor span.\r\n\r\nThis commit implements the later, it is mainly based on the opentelemetry/java\r\none.\r\n\r\nThe algorithm implements the following logic:\r\n- a condition variable is used to notify the worker thread in case the queue\r\nis half full, so that exporting can start before the queue gets full and spans\r\nare dropped.\r\n- export is called each schedule_delay_millis if there is a least one new span\r\nto export.\r\n- when the processor is shutdown all remaining spans are exported.",
    "head_branch": "mauricio/add_batch_span_processor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk/trace/exporters: add batch span processor exporter (#153)\n\nThe exporters specification states that two built-in span processors should be\r\nimplemented, the simple processor span and the batch processor span.\r\n\r\nThis commit implements the latter, it is mainly based on the opentelemetry/java\r\none.\r\n\r\nThe algorithm implements the following logic:\r\n- a condition variable is used to notify the worker thread in case the queue\r\nis half full, so that exporting can start before the queue gets full and spans\r\nare dropped.\r\n- export is called each schedule_delay_millis if there is a least one new span\r\nto export.\r\n- when the processor is shutdown all remaining spans are exported."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e844ee515ce6a4e9b0",
    "number": 151,
    "body": "",
    "head_branch": "azure",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Skeleton for azure monitor exporters (#151)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e944ee515ce6a4e9b1",
    "number": 150,
    "body": "",
    "head_branch": "docstring-args-lint-ci-hacks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011e944ee515ce6a4e9b2",
    "number": 148,
    "body": "* Fix http.url (#143)\r\n* Don't delay calling wrapped app (would be nicer if #147 was fixed; see https://github.com/open-telemetry/opentelemetry-python/pull/84#issuecomment-522519187 and following)",
    "head_branch": "wsgifixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "WSGI fixes (#148)\n\nFix http.url.\r\nDon't delay calling wrapped app."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ea44ee515ce6a4e9b3",
    "number": 145,
    "body": "This PR adds a lint check for missing or mismatching names in docstrings. I added this after I noticed that [`opentelemetry.trace`](https://github.com/open-telemetry/opentelemetry-python/blob/be7577d6f2f2530433278e7393050ac6fe71b581/opentelemetry-api/src/opentelemetry/trace/__init__.py) was missing some docstring annotations. This PR doesn't quite fix the problem since we still [disable the `missing-docstring` check](https://github.com/c24t/opentelemetry-python/blob/e49a645dde23552f8e03948b3fe0893211507880/.pylintrc#L63), but it should help to keep our docstrings consistent with the code.\r\n\r\nNote that with this change we check for types (either in annotations or docstrings) in the SDK and ext packages. We may not actually want to enforce this, in which case we'll need different pylint configs for the API and SDK/etc. packages.",
    "head_branch": "docstring-args-lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011eb44ee515ce6a4e9b4",
    "number": 141,
    "body": "Add missing is_recording_events() function to span in API and SDK.\r\n\r\nThe important point of this commit is to implement the check in functions like\r\nadd_event, set_attribute and so son.  Currently is_recording_events always\r\nreturns true.\r\n\r\nSolves: https://github.com/open-telemetry/opentelemetry-python/issues/100",
    "head_branch": "mauricio/add_span_is_recording_events",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "span: add is_recording_events (#141)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ec44ee515ce6a4e9b5",
    "number": 140,
    "body": "Continued from [this PR](https://github.com/open-telemetry/opentelemetry-python/pull/136) which should be merged first.\r\n\r\nChanges in this PR:\r\n1. Record Batch API in meter, to allowing recording of multiple metrics.\r\n2. Change `TimeSeries` to `Handle`",
    "head_branch": "metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metrics API RFC 0009 (#140)\n\n* Create functions\r\n\r\nComments for Meter\r\n\r\nMore comments\r\n\r\nAdd more comments\r\n\r\nFix typos\r\n\r\n* fix lint\r\n\r\n* Fix lint\r\n\r\n* fix typing\r\n\r\n* Remove options, constructors, seperate labels\r\n\r\n* Consistent naming for float and int\r\n\r\n* Abstract time series\r\n\r\n* Use ABC\r\n\r\n* Fix typo\r\n\r\n* Fix docs\r\n\r\n* seperate measure classes\r\n\r\n* Add examples\r\n\r\n* fix lint\r\n\r\n* Update to RFC 0003\r\n\r\n* Add spancontext, measurebatch\r\n\r\n* Fix docs\r\n\r\n* Fix comments\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* skip examples\r\n\r\n* white space\r\n\r\n* fix spacing\r\n\r\n* fix imports\r\n\r\n* fix imports\r\n\r\n* LabelValues to str\r\n\r\n* Black formatting\r\n\r\n* fix isort\r\n\r\n* Remove aggregation\r\n\r\n* Fix names\r\n\r\n* Remove aggregation from docs\r\n\r\n* Fix lint\r\n\r\n* metric changes\r\n\r\n* Typing\r\n\r\n* Fix lint\r\n\r\n* Fix lint\r\n\r\n* Add space\r\n\r\n* Fix lint\r\n\r\n* fix comments\r\n\r\n* handle, recordbatch\r\n\r\n* docs\r\n\r\n* Update recordbatch\r\n\r\n* black\r\n\r\n* Fix typo\r\n\r\n* remove ValueType\r\n\r\n* fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ed44ee515ce6a4e9b6",
    "number": 139,
    "body": "Even though the Spec PR isn't merged and there's some discussion going on, I think this will be more useful than not being able to distinguish HTTP client & server at all.",
    "head_branch": "spankind",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add SpanKind option at span creation (closes #103). (#139)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ee44ee515ce6a4e9b7",
    "number": 138,
    "body": "Follow-up for #124.",
    "head_branch": "typeinfo-packaging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix duplicate doc entry (mismerge of #124). (#138)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ee44ee515ce6a4e9b8",
    "number": 137,
    "body": "Adding a full, end-to-end example of propagation at work in the\r\nexample application, including a test.\r\n\r\nAdding the use of propagators into the integrations.\r\n\r\nEDIT: What does this contain that matches with the long-term spec?\r\n\r\nIn reality not a lot, this is pretty adherent to the existing specification.. But the changes outlined in the RFCs will require a while to land due to many outstanding design questions such as:\r\n\r\n* how will setters / getter work for setting specific context?\r\n* will chained propagators be considered?\r\n\r\nI think we should review this PR for the target of achieving the alpha. For the purpose of reviewing what will arrive in the RFC, there will be another PR once the spec is finalized or getting closer.",
    "head_branch": "feature/propagators-impl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding a working propagator, adding to integrations and example (#137)\n\nAdding a full, end-to-end example of propagation at work in the\r\nexample application, including a test.\r\n\r\nAdding the use of propagators into the integrations."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ef44ee515ce6a4e9b9",
    "number": 136,
    "body": "Changes in this PR:\r\n\r\n1. Separate metrics creation from meter\r\n2. Consolidate create methods (takes in FLOAT or INT as argument)\r\n3. LabelKey/Values -> Strings\r\n4. Addtional \"direction\" parameters for each type of metric (counter, gauge, measure).\r\n\r\nFor 1, we do not want the creation of metrics to be dependent on whether or not the meter has been initialized yet (unlike in Java with global initialization).\r\n\r\nFor 2, as suggested by @toumorokoshi , it will be simpler to have less create methods for different metrics and pass in the data types as arguments. The reason I did not abstract it further down to metric TYPE (counter, gauge, measure) is due to the semantic and conceptually different behaviors of each, as well as the new addition of 4.\r\n\r\nFor 4, there was the desire to add optional parameters to the metric types for certain use cases. This is so we have an API that provides the functionality for all the uses cases but at the same time keeping the metric type definition simple. You can read more about it (here)[https://github.com/open-telemetry/oteps/blob/master/text/0003-measure-metric-type.md#cumulative-metric]\r\n\r\nTODO:\r\n- Rename `TimeSeries` to `Handle`\r\n- Introduce Record API in Meter",
    "head_branch": "metrics-rfc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metrics API RFC 0003 cont'd (#136)\n\n* Create functions\r\n\r\nComments for Meter\r\n\r\nMore comments\r\n\r\nAdd more comments\r\n\r\nFix typos\r\n\r\n* fix lint\r\n\r\n* Fix lint\r\n\r\n* fix typing\r\n\r\n* Remove options, constructors, seperate labels\r\n\r\n* Consistent naming for float and int\r\n\r\n* Abstract time series\r\n\r\n* Use ABC\r\n\r\n* Fix typo\r\n\r\n* Fix docs\r\n\r\n* seperate measure classes\r\n\r\n* Add examples\r\n\r\n* fix lint\r\n\r\n* Update to RFC 0003\r\n\r\n* Add spancontext, measurebatch\r\n\r\n* Fix docs\r\n\r\n* Fix comments\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* skip examples\r\n\r\n* white space\r\n\r\n* fix spacing\r\n\r\n* fix imports\r\n\r\n* fix imports\r\n\r\n* LabelValues to str\r\n\r\n* Black formatting\r\n\r\n* fix isort\r\n\r\n* Remove aggregation\r\n\r\n* Fix names\r\n\r\n* Remove aggregation from docs\r\n\r\n* Fix lint\r\n\r\n* metric changes\r\n\r\n* Typing\r\n\r\n* Fix lint\r\n\r\n* Fix lint\r\n\r\n* Add space\r\n\r\n* Fix lint\r\n\r\n* fix comments\r\n\r\n* address comments\r\n\r\n* fix comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f044ee515ce6a4e9ba",
    "number": 135,
    "body": "It seems that #130 has broken some lint rules (but for some reason these problems did not show up on the PR build).",
    "head_branch": "fix-lint-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix lint build after merging #130 (#135)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f144ee515ce6a4e9bb",
    "number": 133,
    "body": "Hi everyone,\r\nThis micro-PR fixes #105.\r\nCheers!",
    "head_branch": "fix/pypy3-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix skipping tests for PyPy (#133)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f244ee515ce6a4e9bc",
    "number": 131,
    "body": "According to the spec [1], all methods in span must be thread safe.  This\r\ncommit guarantees that by adding a lock in the places it was missing.\r\n\r\n[1] https://github.com/open-telemetry/opentelemetry-specification/blob/d34318277b1999edccf5ab1d63024ec172ae5e49/specification/concurrency.md",
    "head_branch": "mauricio/make_span_thread_safe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk/trace/span: comply with concurrency specification (#131)\n\n* sdk/trace/span: comply with concurrency specification\r\n\r\nAccording to the spec [1], all methods in span must be thread safe.  This\r\ncommit guarantees that by adding a lock in the places it was missing.\r\n\r\n[1] https://github.com/open-telemetry/opentelemetry-specification/blob/d34318277b1999edccf5ab1d63024ec172ae5e49/specification/concurrency.md\r\n\r\n* sdk/trace/span: ignore call to methods after span is ended\r\n\r\nCalls to methods like set_attribute, add_event, add_link and so on should not\r\nhappen after the span has been ended.  This commit introduces some checks to\r\nignore and print a warning when those calls happen.\r\n\r\n* avoid holding a lock while logging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f344ee515ce6a4e9bd",
    "number": 130,
    "body": "This PR creates classes for `Link` and `Event`,  also implements the `add_lazy_{event,link}` methods.\r\n\r\nHaving a proper class would make it easier to extend in the future. Those classes are implemented directly in the API as they are general enough and different implementations could reuse them.\r\n\r\nSolves https://github.com/open-telemetry/opentelemetry-python/issues/76\r\nSolves https://github.com/open-telemetry/opentelemetry-python/issues/77",
    "head_branch": "mauricio/add_event_and_link_classes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Link and Event classes (#130)\n\n* remove annotation for self\r\n\r\n* sdk/tests/trace/span: reorganize by member\r\n\r\nPut all actions of the same member together so it is easier to update the tests.\r\n\r\n* add Link class\r\n\r\nMake Link a class, also implement addLazyLink\r\n\r\n* add Event class\r\n\r\nMake Event a class and implement add_lazy_event"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f344ee515ce6a4e9be",
    "number": 129,
    "body": "Creating an example app that has existing opentelemetry components configured. Baseline to add more as more components are added.\r\n\r\n",
    "head_branch": "feature/example-app",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Introducing an example app instrumented with opentelemetry (#129)\n\nCreating an example app that showcases how an application integrates with opentelemetry."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f444ee515ce6a4e9bf",
    "number": 128,
    "body": "Hi everyone,\r\n\r\nI believe that we should be able to see the test coverage.\r\n\r\nThese changes:\r\n - make tests use [pytest](https://pytest.org)\r\n - add displaying of the test coverage\r\n - add sending of collected coverage data to [https://codecov.io/](https://codecov.io)\r\n - ~fix skipping tests for `pypy3.5`~ (fixed in #133)\r\n\r\nBest regards!",
    "head_branch": "feature/coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add test coverage collecting (#128)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f544ee515ce6a4e9c0",
    "number": 127,
    "body": "Quick PR to add target release dates to the README following [@tedsuo's comment on gitter](https://gitter.im/open-telemetry/community?at=5d6fe5da08973a793cad5dae).\r\n\r\n> My request: We’d like to start communicating more clearly about the state of each implementation. Please update the README to have section at the top with the following:\r\n> \r\n> Current state of the project, with a focus on the items listed in the alpha description\r\n> Installation and super basic quick start guide",
    "head_branch": "readme-for-alpha-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Flesh out README, add release schedule (#127)\n\n* Flesh out README, add release schedule\r\n\r\n* Update README.md\r\n\r\nCo-Authored-By: Christian Neumüller <christian.neumueller@dynatrace.com>\r\n\r\n* Update README.md\r\n\r\nCo-Authored-By: Christian Neumüller <christian.neumueller@dynatrace.com>\r\n\r\n* Add note about alpha/beta compatability, support\r\n\r\n* Move development notes into contributing doc\r\n\r\n* Add note about library, app dev API/SDK use"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f644ee515ce6a4e9c1",
    "number": 124,
    "body": " Ensure that type info is picked up from installed package.\r\n\r\nThis required moving all top-level modules to a sub-package, to not\r\ncreate collisions with py.typed marker files.\r\n\r\nSee https://www.python.org/dev/peps/pep-0561/#packaging-type-information",
    "head_branch": "typeinfo-packaging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure that type info is picked up from installed package. (#124)\n\n* Ensure that type info is picked up from installed package.\r\n\r\nThis required moving all top-level modules to a sub-package, to not\r\ncreate collisions with py.typed marker files.\r\n\r\nSee https://www.python.org/dev/peps/pep-0561/#packaging-type-information\r\n\r\n* Add MANIFEST.in for SDK package."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f744ee515ce6a4e9c2",
    "number": 122,
    "body": "Previously the wheels would contain the metadata but not the actual\r\ncode.",
    "head_branch": "bugfix/ext-setup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix setup for ext packages. (#122)\n\n* Fix setup for ext packages.\r\n\r\nPreviously the wheels would contain the metadata but not the actual\r\ncode.\r\n\r\n* Check that all packages install properly in test.\r\n\r\n* Document why we don't use -e."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f744ee515ce6a4e9c3",
    "number": 121,
    "body": "This propagator class helps streamline integrations with formatters. \r\n\r\nStarting this of as a PR for review. This is built on top of https://github.com/open-telemetry/opentelemetry-python/pull/89",
    "head_branch": "feature/propagators-object",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f844ee515ce6a4e9c4",
    "number": 120,
    "body": "This tracer implements the OpenTracing API using OpenTelemetry internally.\r\n\r\nThis includes unit tests too.\r\n\r\n-----\r\n\r\nTODO:\r\n- [ ] documentation\r\n- [ ] start time & end time\r\n- [ ] OTel's links / OT's references\r\n- [ ] Baggage: what to do here?\r\n- [ ] Logs: what to do here?\r\n- [ ] Context propagation to other processes: which http headers to use?",
    "head_branch": "alban/ot-bridge-impl-01",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011f944ee515ce6a4e9c5",
    "number": 119,
    "body": "This PR is a follow up of https://github.com/open-telemetry/opentelemetry-python/pull/115\r\n\r\nIt adds the `Exporter` interface, the `SimpleSpanProcessor` as described in the specs: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/sdk-exporter.md and an `InMemorySpanExporter` class that implements the interface and saves Spans in a list.\r\n\r\nThe following is an example of how the `SpanExporter` interface could be used:\r\n\r\n```\r\nfrom opentelemetry.sdk import trace\r\nfrom opentelemetry.sdk.trace import export\r\n\r\n# implement `SpanExporter` interface\r\nclass MySpanExporter(export.SpanExporter):\r\n    def export(self, spans: trace.Span) -> export.SpanExportResult:\r\n        print(\"export span...\")\r\n        return export.SpanExportResult.SUCCESS\r\n\r\n\r\ntracer = trace.Tracer()\r\n\r\n# create exporter instance\r\nexporter = MySpanExporter()\r\n\r\n# create SimpleExportSpanProcessor\r\nspan_processor = export.SimpleExportSpanProcessor(exporter)\r\n\r\n# add span processor to tracer\r\ntracer.add_span_processor(span_processor)\r\n\r\n# create some spans for testing\r\nwith tracer.start_span(\"foo\"):\r\n    with tracer.start_span(\"bar\"):\r\n        with tracer.start_span(\"baz\"):\r\n            pass\r\n```\r\n\r\nFinally, the following is an example of the `InMemorySpanExporter` usage:\r\n\r\n```\r\nfrom opentelemetry.sdk import trace\r\nfrom opentelemetry.sdk.trace import export\r\nfrom opentelemetry.sdk.trace.export.in_memory_span_exporter import InMemorySpanExporter\r\n\r\ntracer = trace.Tracer()\r\n\r\n# create in memory span exporter\r\nin_memory_exporter = InMemorySpanExporter()\r\n\r\n# create SimpleExportSpanProcessor\r\nspan_processor = export.SimpleExportSpanProcessor(in_memory_exporter)\r\n\r\n# add span processor to tracer\r\ntracer.add_span_processor(span_processor)\r\n\r\n# craete some spans for testing\r\nwith tracer.start_span(\"foo\"):\r\n    with tracer.start_span(\"bar\"):\r\n        with tracer.start_span(\"baz\"):\r\n            pass\r\n\r\nprint(\"exported spans are: \")\r\nspans = in_memory_exporter.get_finished_spans()\r\nfor span in spans:\r\n    print(span)\r\n\r\n```\r\n",
    "head_branch": "mauricio/add_exporters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk: add Exporter interface, SimpleSpanProcessor and InMemorySpanExporter (#119)\n\n* sdk/trace: add Exporter interface and SimpleExportSpanProcessor\r\n\r\nExporter is an interface that allows different services to export recorded\r\nspans in its own format. SimpleExportSpanProcessor is an implementation of\r\nSpanProcessor that passes ended spans directly to a configured Exporter.\r\n\r\nThe current interface for exporters directly receives an SDK Span, it could\r\nbe improved in the future to receive a different object containing a\r\nrepresentation of the Span.\r\n\r\n* sdk/trace/exporter: add InMemorySpanExporter\r\n\r\nInMemorySpanExporter is a simple implementation of the Exporter interface\r\nthat saves the exported spans in a list in memory.  This class is useful\r\nfor testing purposes."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011fa44ee515ce6a4e9c6",
    "number": 118,
    "body": "Sometimes it complains and it is difficult to understand what exactly it wants.\r\nThe --diff option allows to know what is the format it expects.\r\n\r\nFrom https://github.com/open-telemetry/opentelemetry-python/pull/109#issuecomment-526569926",
    "head_branch": "mauricio/add_diff_to_isort",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "tox: add --diff to isort (#118)\n\nSometimes it complains and it is difficult to understand what exactly it wants.\r\nThe --diff option allows to know what is the format it expects."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011fb44ee515ce6a4e9c7",
    "number": 115,
    "body": "`SpanProcessor` is an interface that allows to register hooks for Span `start` and `end` invocations.\r\n\r\nIt is not already part of the spec but there is ongoing work on this: https://github.com/open-telemetry/opentelemetry-specification/pull/205\r\n\r\nThis PR introduces the SpanProcessor interface in the SDK, also a MultiSpanProcessor implementation based on the java one to allow more than one processor to be registered. \r\n\r\nBuilt-in span processors are not considered here and will be added in another PR soon.\r\n\r\nAccording to the specs the span processors should only be invoked when `IsRecordingEvents` is true, however that flag is still missing: https://github.com/open-telemetry/opentelemetry-python/issues/100\r\n\r\nThe following is a small example of how span processor can be used:\r\n\r\n```\r\n...\r\nfrom opentelemetry.sdk import trace\r\n\r\n# implement `SpanProcessor` interface\r\nclass MySpanProcessor(trace.SpanProcessor):\r\n    def on_start(self, span: \"trace.Span\") -> None:\r\n        print(\"span started...\")\r\n\r\n    def on_end(self, span: \"trace.Span\") -> None:\r\n        print(\"span ended...\")\r\n\r\n# create tracer instance (real users will use trace.tracer() from the api package)\r\ntracer = trace.Tracer()\r\n\r\n# add span processor to the tracer\r\ntracer.add_span_processor(MySpanProcessor())\r\n\r\n# create some spans just to test\r\nwith tracer.start_span(\"foo\"):\r\n    with tracer.start_span(\"bar\"):\r\n        with tracer.start_span(\"baz\"):\r\n            pass\r\n...\r\n```\r\n\r\n\r\nThis is ongoing work for https://github.com/open-telemetry/opentelemetry-python/issues/60.",
    "head_branch": "mauricio/add_span_processor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sdk/trace: add SpanProcessor (#115)\n\nSpanProcessor is an interface that allows to register hooks for Span\r\nstart and end invocations.\r\n\r\nThis commit adds the SpanProcessor interface to the SDK as well as the\r\nMultiSpanProcessor that allows to register multiple processors."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011fc44ee515ce6a4e9c8",
    "number": 114,
    "body": "sdk: create_span() and start_span() with span_id\r\n\r\nOTEP-7 (\"Remove support to report out-of-band telemetry from the API\") states that the API does not support specifying the span_id in create_span() or start_span(). Also, following OTEP-2 (\"Remove SpanData\"), we cannot use the SpanData to specify the span_id.\r\n\r\nHowever, the need to specify the span_id remains for some applications. Following the suggestion from OTEP-7, I am adding this feature in the SDK only.\r\n\r\nThis patch adds the named argument span_id in create_span() and start_span() to optionally specify the id of the span to be created. When unset, the previous behavior remains and the SDK allocates a\r\nspan_id automatically.\r\n\r\nCallers should give the name of the argument and not rely on the current argument order because more arguments could be passed in the future. OTEP-2 lists possible additional optional arguments:\r\n- start timestamp\r\n- span ID\r\n- resource\r\n\r\nExample of call:\r\n```\r\n    with tracer.start_span('foo', span_id=my_span_id):\r\n        print(Context)\r\n```\r\n\r\nOTEP-7: https://github.com/open-telemetry/oteps/pull/26\r\nOTEP-2: https://github.com/open-telemetry/oteps/blob/master/text/0002-remove-spandata.md\r\n",
    "head_branch": "alban/create-span-with-span_id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011fd44ee515ce6a4e9c9",
    "number": 112,
    "body": "Fixes: https://github.com/open-telemetry/opentelemetry-python/issues/99",
    "head_branch": "mauricio/add_span_update_name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "span: implement update_name method (#112)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011fd44ee515ce6a4e9ca",
    "number": 111,
    "body": "Previously, this would result in an error:\r\n\r\n```\r\nInstalling collected packages: pip, setuptools, wheel\r\n  Found existing installation: pip 19.1.1\r\n    Uninstalling pip-19.1.1:\r\n      Successfully uninstalled pip-19.1.1\r\nERROR: Could not install packages due to an EnvironmentError: [WinError 5] Access is denied: 'C:\\\\Users\\\\USERNAME\\\\AppData\\\\Local\\\\Temp\\\\pip-uninstall-ex4vlsgo\\\\pip.exe'\r\nConsider using the `--user` option or check the permissions.\r\n\r\nERROR: InvocationError for command 'C:\\workspaces\\misc\\opentelemetry-python\\.tox\\py36-test-sdk\\Scripts\\pip.EXE' install -U pip setuptools wheel (exited with code 1)\r\n```",
    "head_branch": "bugfix/win32tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix running tox on Windows. (#111)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011fe44ee515ce6a4e9cb",
    "number": 109,
    "body": "Hello,\r\n\r\nThese changes follow up #95.\r\n\r\nThe `multi_line_output` was already set to `3` in the [Add initial black formatting](https://github.com/open-telemetry/opentelemetry-python/pull/104) PR, so after rebasing to `master` this commit contains only comment that describes a magic number from the `isort` configuration file.\r\n\r\nRelated discussions:\r\n - https://github.com/open-telemetry/opentelemetry-python/pull/95#discussion_r315942697\r\n - https://github.com/open-telemetry/opentelemetry-python/pull/95#issuecomment-523566519",
    "head_branch": "feature/update-isort-settings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Describe isort's multi_line_output setting (#109)\n\nThese changes follow up the \"Fix and improve tests for Python != 3.7\" PR.\r\n\r\nThe multi_line_output was already set to 3 in the\r\n\"Add initial black formatting\" PR, so after rebasing to master\r\nthis commit contains only comment that describes a magic number\r\nfrom the isort configuration file.\r\n\r\nCorresponding PR:\r\n\r\n - https://github.com/open-telemetry/opentelemetry-python/pull/109\r\n\r\nRelated discussions:\r\n\r\n - https://github.com/open-telemetry/opentelemetry-python/pull/95#discussion_r315942697\r\n\r\n - https://github.com/open-telemetry/opentelemetry-python/pull/95#issuecomment-523566519"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662011ff44ee515ce6a4e9cc",
    "number": 108,
    "body": "Hello,\r\n\r\nThese changes follow up #95.",
    "head_branch": "feature/update-pylint-settings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Relax the pylint rule for constants (#108)\n\nThese changes follow up the \"Fix and improve tests for Python != 3.7\" PR."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120044ee515ce6a4e9cd",
    "number": 107,
    "body": "This commit fixes the loader algorithm to only skip the first two steps\r\nwhen sys.flags.ignore_environment is set as written in the documentation.",
    "head_branch": "mauricio/fix_loader_ignore_environment_logic",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "api: fix loader ignore_environment logic (#107)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120144ee515ce6a4e9ce",
    "number": 106,
    "body": "Small fix for a bad class name in the trace module documentation.",
    "head_branch": "mauricio/fix_default_span_class_name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix DefaultSpan class name in documentation (#106)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120144ee515ce6a4e9cf",
    "number": 104,
    "body": "## Preface\r\nThis PR is not intended to be a discussion about style and this PR does not represent my personal opinions about black or formatting. It is simply meant as the initial entry into using an autoformatter which may be configured later as desired (as discussed in #88).  As such, the ~default options for black~ the only setting for black is using line length of 79 in this PR.\r\n\r\n## Overview of Changes\r\nBlack has been configured in accordance with the current [readme](https://github.com/psf/black/blob/master/README.md) on the black github page. This includes:\r\n\r\n* ~Setting the max line length to 88 where appropriate~\r\n* The recommended isort configuration is used for compatibility between black and isort\r\n\r\npylint and black seems to disagree on line continuations so the pylint `bad-continuation` rule has been disabled.\r\n\r\npylint and isort can disagree on import order so the pylint `wrong-import-order` rule has been disabled.\r\n\r\nLine length lint checks have been disabled since black may not respect line limit. From the [black readme](https://github.com/psf/black/blob/master/README.md):\r\n> Black will try to respect [line length]. However, sometimes it won't be able to without breaking other rules. In those rare cases, auto-formatted code will exceed your allotted limit.",
    "head_branch": "add-black-formatting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add initial black formatting (#104)\n\nCloses: #88"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120244ee515ce6a4e9d0",
    "number": 102,
    "body": "",
    "head_branch": "owners",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "tag more reviewers (#102)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120344ee515ce6a4e9d1",
    "number": 101,
    "body": "",
    "head_branch": "contextvars",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120444ee515ce6a4e9d2",
    "number": 96,
    "body": "I'm not exactly sure how this happened but it looks like #86 introduced a failure on master.  The failure is due to the sdk test using `contextvars` to attempt to initialize the tracer.\r\n\r\nThis PR removes the use of `contextvars` in the offending test.",
    "head_branch": "fix-build-failures",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix test failures involving contextvars. (#96)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120544ee515ce6a4e9d3",
    "number": 95,
    "body": "Hello everyone,\r\n\r\nI believe it would be nice to have tests on CI not only for Python 3.7, but for all supported Python versions.\r\n\r\nThese changes:\r\n - ~fix `test_span_members` test~ (already fixed by #96)\r\n - fix compatibility with Python 3.5 and 3.4\r\n - add tests for various Python versions on CI\r\n - allow running tests for any branches\r\n - ~relax the `pylint` rule for constants~ (moved to #108)\r\n - ~update `isort` settings~ (moved to #109)\r\n\r\nCheers!",
    "head_branch": "fix/tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve testing (#95)\n\nI believe it would be nice to have\r\ntests on CI not only for Python 3.7,\r\nbut for all supported Python versions.\r\n\r\nThese changes:\r\n\r\n - fix compatibility with Python 3.5 and 3.4\r\n\r\n - add tests for various Python versions on CI\r\n\r\n - allow running tests for any branches"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120544ee515ce6a4e9d4",
    "number": 94,
    "body": "This (draft) PR adds an integration for the requests libraray (see README.md).\r\n\r\n~For some reason, pylint insists on an `__init__.py` in the module root for requests, but not for wsgi. I'm again clueless as to why. 😅~ I seem to have fixed this by renaming the module.\r\n\r\n~More tests will follow.~ ✔️",
    "head_branch": "requests-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Requests integration (#94)\n\nAdds requests integration. Two commits that might be of special interest (see #94):\r\n\r\n* c66af2faa100b0f41afafdb6e4de9f4de4cc62bc requests test: Use actual Response object.\r\n\r\nCo-Authored-By: Allan Feldman <6374032+a-feld@users.noreply.github.com>\r\n\r\n* 1b90a0ddc286c936f7256b14e14ef36fd3c6a24f More tests, rename to http-requests to work around pylint bug (?)\r\n\r\nSee previous CI failure for pylint issue:\r\n\r\n************* Module ext/opentelemetry-ext-requests/src/__init__.py\r\next/opentelemetry-ext-requests/src/__init__.py:1:0: F0001: No module named ext/opentelemetry-ext-requests/src/__init__.py (fatal)\r\n\r\nIt seems that pylint gets confused when there is more than one \"requests\" module??"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120644ee515ce6a4e9d5",
    "number": 92,
    "body": "This PR fixes issue #91 by attempting to implement the [distributed context api](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-distributedcontext.md) specification.\r\n\r\nThe work is based somewhat on the [opentelemetry-ruby](https://github.com/open-telemetry/opentelemetry-ruby/tree/master/api/lib/opentelemetry/distributed_context) implementation.\r\n\r\nThis PR hasn't yet implemented the propagator APIs for DistributedContext. The intent is that when this PR is ready for review a stub will have been implemented for propagators in distributed context.",
    "head_branch": "distributed-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add initial DistributedContext implementation. (#92)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120744ee515ce6a4e9d6",
    "number": 90,
    "body": "1. Add verbose instructions, make it easier for newbies.\r\n2. Clarify PR process.\r\n3. Explain how to become collaborator and maintainer.",
    "head_branch": "contrib-doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update contributing doc (#90)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120844ee515ce6a4e9d7",
    "number": 89,
    "body": "Paired with this RFC (https://github.com/open-telemetry/oteps/pull/37), an implementation for a unified propagator that acts directly on context. \r\n\r\nThis also removes the need for generics and propagators that only\r\nconsume one or the other, which would otherwise require integrators to do extra work to\r\nwire propagators appropriately.\r\n\r\nModifying the API of the propagators to consume the context as a mutable\r\nargument. By passing in the context rather than returning, this enables the\r\nchained use of propagators, allowing for situations such as supporting\r\nmultiple trace propagation standards simulatenously.",
    "head_branch": "feature/propagators-proposal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120944ee515ce6a4e9d8",
    "number": 87,
    "body": "This is a continuation of [#68], with the initial Metrics API as well as Metrics RFC 0003 outlined here: https://github.com/open-telemetry/rfcs/pull/4 \r\n\r\nThe RFC included three changes:\r\n1. Get rid of Measure and Measurement class and have Measure be another Metric (like gauge and counter)\r\n2. Have the ability to pass in pre-defined label values (that match the label keys when creating the metric) when creating the time series for a metric. This is an important optimization, as programs with long-lived objects can compute pre-defined label values once, rather than once per call site.\r\n3. The former raw stats API supported all-or-none recording of interdependent measurements, RFC introduces `MeasureBatch` class to support recording of multiple observed values simultaneously.\r\n\r\nTODO:\r\n1. Decisions on supporting Resource and Components (should they simply be labels?)\r\n2. DistributedContext (might be a label)\r\n3. Decisions for MeasureBatch function signature (how to record)\r\n\r\nAn example recording of raw statistics:\r\n```\r\nMETER = Meter()\r\nLABEL_KEYS = [LabelKey(\"environment\",\r\n                       \"the environment the application is running in\")]\r\nMEASURE = METER.create_float_measure(\"idle_cpu_percentage\",\r\n                                     \"cpu idle over time\",\r\n                                     \"percentage\",\r\n                                     LastValueAggregation)\r\nLABEL_VALUE_TESTING = [LabelValue(\"Testing\")]\r\nLABEL_VALUE_STAGING = [LabelValue(\"Staging\")]\r\n\r\n# Metrics sent to some exporter\r\nMEASURE_METRIC_TESTING = MEASURE.get_or_create_time_series(LABEL_VALUE_TESTING)\r\nMEASURE_METRIC_STAGING = MEASURE.get_or_create_time_series(LABEL_VALUE_STAGING)\r\n\r\n# record individual measures\r\nidle = psutil.cpu_times_percent().idle\r\nMEASURE_METRIC_STAGING.record(idle)\r\n\r\n# record multiple observed values\r\nbatch = MeasureBatch()\r\nbatch.record([(MEASURE_METRIC_TESTING, idle), (MEASURE_METRIC_STAGING, idle)])\r\n```\r\n\r\nAn example of pre-aggregated metrics:\r\n```\r\nMETER = Meter()\r\nLABEL_KEYS = [LabelKey(\"environment\", \r\n                       \"the environment the application is running in\")]\r\nCOUNTER = METER.create_int_counter(\"sum numbers\", \r\n                                      \"sum numbers over time\",\r\n                                      \"number\",\r\n                                      LABEL_KEYS)\r\nLABEL_VALUE_TESTING = [LabelValue(\"Testing\")]\r\nLABEL_VALUE_STAGING = [LabelValue(\"Staging\")]\r\n\r\n# Metrics sent to some exporter\r\nCOUNTER_METRIC_TESTING = COUNTER.get_or_create_time_series(LABEL_VALUE_TESTING)\r\nCOUNTER_METRIC_STAGING = COUNTER.get_or_create_time_series(LABEL_VALUE_STAGING)\r\n\r\nfor i in range(100):\r\n    COUNTER_METRIC_STAGING.add(i)\r\n```",
    "head_branch": "metrics-rfc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metrics API with RFC 0003 (#87)\n\n* Create functions\r\n\r\nComments for Meter\r\n\r\nMore comments\r\n\r\nAdd more comments\r\n\r\nFix typos\r\n\r\n* fix lint\r\n\r\n* Fix lint\r\n\r\n* fix typing\r\n\r\n* Remove options, constructors, seperate labels\r\n\r\n* Consistent naming for float and int\r\n\r\n* Abstract time series\r\n\r\n* Use ABC\r\n\r\n* Fix typo\r\n\r\n* Fix docs\r\n\r\n* seperate measure classes\r\n\r\n* Add examples\r\n\r\n* fix lint\r\n\r\n* Update to RFC 0003\r\n\r\n* Add spancontext, measurebatch\r\n\r\n* Fix docs\r\n\r\n* Fix comments\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* skip examples\r\n\r\n* white space\r\n\r\n* fix spacing\r\n\r\n* fix imports\r\n\r\n* fix imports\r\n\r\n* LabelValues to str\r\n\r\n* Black formatting\r\n\r\n* fix isort\r\n\r\n* Remove aggregation\r\n\r\n* Fix names\r\n\r\n* Remove aggregation from docs\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120a44ee515ce6a4e9d9",
    "number": 86,
    "body": "1. Leverage `opentelemetry.context` from tracer.\r\n2. Update the main README file.\r\n\r\nPart of the effort for #22.",
    "head_branch": "context-integration",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Integrate tracer with context (#86)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120a44ee515ce6a4e9da",
    "number": 84,
    "body": "This PR implements a WSGI middleware (#81) which invokes the OpenTelemetry tracer APIs to time the request/response cycle.\r\n\r\nThis PR currently uses `trace_api.tracer()` and `tracer.start_span()` APIs but the intent is to use the `set_attribute` APIs as well to add dimensions to the generated span.",
    "head_branch": "wsgi-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement WSGI middleware integration. (#84)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120b44ee515ce6a4e9db",
    "number": 83,
    "body": "Basic tests that exercise the API are added as well. However it does not\r\nactually test that the attributes, events and links are written properly\r\nbecause there is no getter. Those tests can be added later when the\r\nattributes are actually used.\r\n\r\nThe spec mentions additional APIs for lazy initialization (AddLazyEvent,\r\nAddLazyLink). Those are not added in this patch because OT-Python does\r\nnot expose the Event type (currently defined in the SDK only).\r\n\r\n---\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/75 (attribute)\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/76 (event)\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/77 (link)\r\n",
    "head_branch": "alban/attribute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Span: add attribute, event, link setter to the API (#83)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120c44ee515ce6a4e9dc",
    "number": 82,
    "body": "I was running through adding the WSGI middleware integration and ran into errors when trying to use the default `tracer.start_span()` API.\r\n\r\nThe APIs were defined as stubs that didn't return anything even though the interface indicates the return type is required. In the case of the `contextmanager` decorated APIs, this resulted in an exception.",
    "head_branch": "add-default-tracer-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update and test default tracer APIs (#82)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120d44ee515ce6a4e9dd",
    "number": 80,
    "body": "contributing.md did not have the proper syntax for markdown\r\nlinks.",
    "head_branch": "feature/contributing-fix-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixing contributing.md links (#80)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120e44ee515ce6a4e9de",
    "number": 78,
    "body": "Specification: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-propagators.md.",
    "head_branch": "feature/propagators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding propagators API and b3 SDK implementation (#51, #52) (#78)\n\nSpecification: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-propagators.md."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120f44ee515ce6a4e9df",
    "number": 74,
    "body": "",
    "head_branch": "Oberon00-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix typo in SDK's Span.start (#74)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620120f44ee515ce6a4e9e0",
    "number": 73,
    "body": "This should address most of the context related issues discovered by @c24t in #70.\r\n\r\nPart of the effort for #22.",
    "head_branch": "context-docs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update docs for context lib (#73)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121044ee515ce6a4e9e1",
    "number": 72,
    "body": "I think as a project, we've decided to focus on capabilities rather than strict naming adherence. I think it'd be great if we could document that.\r\n\r\nI figure the link to the PR is partially temporary, and we can repoint at the section in the specification that outlines this once the appropriate PR is merged into opentelemetry-specification.",
    "head_branch": "feature/contributing-capabilities",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Document focusing on capabilities (#72)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121144ee515ce6a4e9e2",
    "number": 70,
    "body": "This adds the `metrics` and `context` packages to the docs, building on #68.\r\n\r\nI added these while reviewing #68 and thought it might be helpful to others doing the same.",
    "head_branch": "metrics-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121244ee515ce6a4e9e3",
    "number": 69,
    "body": "This PR adds span creation methods to the `Tracer` SDK. See `test_start_span_implicit` and `test_start_span_explicit` for examples of how this should work.\r\n\r\nThis uses a module-level context variable for now, I'll replace it with our own context API in a separate PR. It also sets a global module-level `tracer` which doesn't square with the existing loader logic, also to be replaced in a follow-up PR.",
    "head_branch": "span-creation-sdk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Span creation in tracer SDK (#69)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121344ee515ce6a4e9e4",
    "number": 68,
    "body": "This PR adds the Metrics API package.\r\n\r\nthis API takes information from:\r\n- The [opentelemetry-java API](https://github.com/open-telemetry/opentelemetry-java/tree/master/api/src/main/java/io/opentelemetry/metrics)\r\n- The [opentelemetry metric spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-metrics.md)\r\n- The PR for [opentelemetry-js Metric API](https://github.com/open-telemetry/opentelemetry-js/pulls)\r\n\r\nExample usage for raw measurement:\r\n\r\n```python\r\n_meter = meter\r\nmeasure = _meter.create_measure(\"cpu_usage\", \"cpu usage over time\", \"percentage\", MeasureType.FLOAT)\r\n\r\nmeasurements = []\r\nfor i in range(100):\r\n    measurements.append(measure.createMeasurement(psutil.cpu_percent()))\r\n    time.sleep(1)\r\n\r\n_meter.record(measurements, distributed_context=DistributedContext.get_current())\r\n```\r\n\r\nExample usage for already aggregated metrics:\r\n\r\n```python\r\n_meter = meter\r\nlabel_keys = [LabelKey(\"environment\", \"the environment the application is running in\")]\r\nmemory_metric = _meter.create_int_gauge(\"available_memory\", \"available memory over time\", \"bytes\", label_keys)\r\nlabel_values = [\"Testing\"]\r\nmemory_metric.setCallBack(lambda: memory_metric.getOrCreateTimeSeries(label_values).set(psutil.virtual_memory().available))\r\n```\r\n\r\nExample usage for simple pre-defined aggregation metrics:\r\n\r\n```python\r\n_meter = meter\r\nlabel_keys = [LabelKey(\"environment\", \"the environment the application is running in\")]\r\nsum_metric = _meter.create_int_counter(\"sum numbers\", \"sum numbers over time\", \"number\", label_keys)\r\nlabel_values = [\"Testing\"]\r\nsum_time_series = sum_metric.getOrCreateTimeSeries(label_values)\r\n\r\nfor i in range(100):\r\n    sum_time_series.add(i)\r\n```",
    "head_branch": "metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121444ee515ce6a4e9e5",
    "number": 67,
    "body": "I think to help people ramp up and contribute more quickly, it would be great to outline contribution guidelines. Starting a proposal with the fairly standard CONTRIBUTING.md",
    "head_branch": "contributing.md",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Contributing.md (#67)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121444ee515ce6a4e9e6",
    "number": 65,
    "body": "Make `tox -e lint` check the SDK package too.",
    "head_branch": "lint-sdk-too",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Lint SDK package (#65)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121544ee515ce6a4e9e7",
    "number": 63,
    "body": "This PR adds `DefaultSpan`, which simply carries a specified `SpanContext`.\r\n\r\nThis is done to: 1) Define an actual `INVALID_SPAN` and to 2) Later add support for context-propagation for our `DefaultTracer` (to be added).\r\n\r\n(`DefaultTracer` in Java is expected to be the no-op implementation that simply does context-propagation. Something to consider here, too, is whether we want to have this functionality in the actual base `Span` / `Tracer` classes ;) )",
    "head_branch": "default_span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add DefaultSpan in the API (#63)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121644ee515ce6a4e9e8",
    "number": 61,
    "body": "Hi! This is a first try at adding the resource API: https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/api-resources.md\r\n\r\nThis branch currently fails due to conflicting linting and mypy rules:\r\n\r\n- mypy dictates that the Any type is unneeded, and should be elided.\r\n- pylint dictates that all arguments in methods / functions need a type.",
    "head_branch": "resources-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding the Resource API (#61)\n\nDesign Decisions include:\r\n\r\nThe API package should be minimal, and example implementations should\r\nlive in SDK when possible.\r\n\r\nThe precedent that exists is to name both the interface and the\r\nimplementation in the sdk the same. This avoids the generally\r\nunhelpful \"Default\" prefix.\r\n\r\nopentelemetry-python is standardizing on Google style docstrings. As such\r\nresolving formatting that is inconsistent with the style guilde."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121744ee515ce6a4e9e9",
    "number": 59,
    "body": "For #57.\r\n\r\n@reyang I thought we could use generics here, but after another pass I don't think the context API should dictate the type of objects it stores. I replaced some `Any` annotations with `object`, but gave up on re-enabling `disallow_any_explicit` because of the get/setters in `ThreadLocalRuntimeContext`.\r\n\r\nI'll comment in the main PR, but I don't think typing gives us any benefit here.",
    "head_branch": "context-type-hacks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Type hint edits for #57 (#59)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620121844ee515ce6a4e9ea",
    "number": 58,
    "body": "Breaking this off of the larger tracer SDK PR for discussion. See the [OC span definition](https://github.com/census-instrumentation/opencensus-python/blob/0d004585e945292df8fe042f7415c675fff2c14c/opencensus/trace/span.py) and java `Span` implementations: [`DefaultSpan` in the API](https://github.com/open-telemetry/opentelemetry-java/blob/master/api/src/main/java/io/opentelemetry/trace/DefaultSpan.java) and [`RecordEventsReadableSpan` in the SDK](https://github.com/open-telemetry/opentelemetry-java/blob/master/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java).",
    "head_branch": "add-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Span and SpanContext implementation (#58)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121944ee515ce6a4e9eb",
    "number": 57,
    "body": "This is based on the work in [`opencensus-context`](https://github.com/census-instrumentation/opencensus-python/tree/master/context/opencensus-context).\r\n",
    "head_branch": "context",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Initial implementation of context (#57)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121944ee515ce6a4e9ec",
    "number": 55,
    "body": "This PR adds a stub tracer implementation that depends on the API.\r\n\r\nDoing this required some package surgery: moving the `opentelemetry` package in `opentelemetry-api` to `opentelemetry.api` and losing `opentelemetry/__init__` modules, making both API and SDK [PEP 420](https://www.python.org/dev/peps/pep-0420/) namespace packages. \r\n\r\nThe result is that you can now install both packages without either clobbering the other and causing import errors.\r\n\r\n@reyang let me know if this matches your grand vision for the package structure.",
    "head_branch": "tracer-sdk-init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add stub tracer SDK (#55)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121a44ee515ce6a4e9ed",
    "number": 47,
    "body": "This PR adds a global invalid `SpanContext` and fleshes out `TraceState` and `TraceOptions`. Since we need this package to provide this `SpanContext` by default, this means getting some implementation in our API.\r\n\r\nI opted for simplicity instead of trying to match the structure and behavior of the java client exactly here. Note that there's no class for trace/span IDs, no precondition checks, etc. The change is only a few lines, but those lines are ripe for argument.\r\n\r\nCompare to the java [`SpanContext`](https://github.com/open-telemetry/opentelemetry-java/blob/8e368d2f4ad8da3c78d61d1348f14d58a225f9ec/api/src/main/java/io/opentelemetry/trace/SpanContext.java) and see the related classes.\r\n",
    "head_branch": "invalid-spancontext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add default invalid SpanContext (#47)\n\nand TraceState, TraceOptions classes."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121b44ee515ce6a4e9ee",
    "number": 46,
    "body": "From https://github.com/open-telemetry/opentelemetry-python/pull/42#discussion_r302254223, builds on #42. Compare to @Oberon00's `unit-tests` branch for a sane diff: https://github.com/Oberon00/opentelemetry-python/compare/unit-tests...c24t:more-pedantic-lint\r\n\r\nThis PR makes lint a bit stricter by adding `flake8` and `isort` checks.",
    "head_branch": "more-pedantic-lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add flake8 and isort lint checks (#46)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121c44ee515ce6a4e9ef",
    "number": 43,
    "body": "Building on #42 (which in turn builds on #29, sorry): lint code in setup.py, docs/conf.py.\r\n\r\nThis does *not* add linting to the stub `opentelemetry-sdk` package.",
    "head_branch": "more-lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Lint more files, relax some type checks (#43)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121d44ee515ce6a4e9f0",
    "number": 42,
    "body": "Based on #29.\r\n\r\nAdds unit tests using the `unittest` standard library module, executes them in tox and runs pylint and a basic `mypy` configuration on the test code.",
    "head_branch": "unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add unittest based unit-tests. (#42)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121e44ee515ce6a4e9f1",
    "number": 40,
    "body": "This PR changes the sphinx default role so that comments in single-backticks render as literal text and link(!) to the appropriate section of the docs if sphinx can find one.\r\n\r\nThis recommendation comes from the [sphinx docs](https://www.sphinx-doc.org/en/master/usage/restructuredtext/roles.html#role-any):\r\n\r\n> This role is a good candidate for setting default_role. If you do, you can write cross-references without a lot of markup overhead. \r\n\r\nOne downside is that sphinx can't find a target for some text it'll emit a warning:\r\n\r\n```\r\ndocstring of opentelemetry.trace:9: WARNING: 'any' reference target not found: BlankSpan\r\n```\r\n\r\nbut we can get around this by using double-backticks to specify the `:code:` role, which is what we were doing before this change anyway.",
    "head_branch": "sphinx-better-default-role",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change sphinx default role to \"any\", update docs (#40)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121e44ee515ce6a4e9f2",
    "number": 39,
    "body": "Quick fix to get docs generation working again after the package move in #37.",
    "head_branch": "fix-docgen-for-37",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update sphinx conf for package move (#39)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620121f44ee515ce6a4e9f3",
    "number": 38,
    "body": "",
    "head_branch": "misc-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Misc build improvements (build docs & more) (#38)\n\n* Build docs.\r\n\r\n* Minor tox.ini improvements.\r\n\r\n* .gitignore mypy\r\n\r\n* Fix doc build.\r\n\r\n* Tell travis to build docs (with 3.7)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122044ee515ce6a4e9f4",
    "number": 37,
    "body": "* Add the SDK package skeleton.\r\n* Instead using \"opentelemetry.*\" to discover namespace packages, use `where=\"src\"` approach as demonstrated https://setuptools.readthedocs.io/en/latest/setuptools.html#find-namespace-packages.\r\n\r\nThe reason for introducing `src` folder:\r\n1. Using wildcard approach would match `tests/foo/bar/opentelemetry/` as well, which we want to avoid. The name filter in setuptools is implemented using `fnmatchcase`, which doesn't provide a good way to workaround this.\r\n2. If we run `setup.py` under the `opentelemetry-api` folder, it will generate temporary folder structure `build/lib/opentelemetry/`, which will be accidentally included in the package.",
    "head_branch": "layout",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improve package layout (#37)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122144ee515ce6a4e9f5",
    "number": 35,
    "body": "This limits lines to 79 characters, [as Guido intended](https://www.python.org/dev/peps/pep-0008/#maximum-line-length). Hopefully everybody sees this as an uncontroversial and good idea.\r\n\r\nMotivated by https://github.com/open-telemetry/opentelemetry-python/pull/29#discussion_r297399860.",
    "head_branch": "79-chars-ought-to-be-enough-for-anybody",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set pylint's line length to 79 chars (#35)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122244ee515ce6a4e9f6",
    "number": 34,
    "body": "WIP for now to test travis builds, don't merge this!",
    "head_branch": "check-install",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122344ee515ce6a4e9f7",
    "number": 33,
    "body": "Addresses #23 \r\n\r\nIt uses a new public constant `CURRENT_SPAN` to signal that the default parent is the current `Span`. \r\n\r\nI applied the same logic to `create_span`, to have uniformity. OC Java, for example, allows users to start a `Span` as either the current instance or not, and both implicitly used the previous current `Span` as parent. We also had this in OT Python and it worked fine.\r\n\r\nOpinions on this last change?",
    "head_branch": "span_explicit_parent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Initial support for explicit Span parent support. (#33)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122444ee515ce6a4e9f8",
    "number": 32,
    "body": "The `intersphinx_mapping` is required to avoid warnings about things like `typing.Iterator`, I think it's neat anyway to have these linked.",
    "head_branch": "sphinx-nitpicky",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make Sphinx check for undefined references & .gitignore _build. (#32)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122444ee515ce6a4e9f9",
    "number": 31,
    "body": "Piling onto #30, this PR adds type checks via `mypy` to travis for the API package.\r\n\r\nThese are pretty strict defaults; I followed @Oberon00's approach in #24 and enabled every available option that wasn't already incompatible with our code. I had to omit `--disallow-any-expr` because of `contextmanager`, but there may still be a way around this.\r\n\r\nSee https://mypy.readthedocs.io/en/latest/config_file.html for details on these options.",
    "head_branch": "add-mypy-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add type check to travis (#31)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122544ee515ce6a4e9fa",
    "number": 30,
    "body": "A bare-bones fix for #6. This should run pylint on travis on each build.\r\n\r\nThere's still a lot more to do to make travis useful, but this is a start. See @lzchen's [travis config in opencensus](https://github.com/census-instrumentation/opencensus-python/pull/658) for generating the docs, running the tests, etc.",
    "head_branch": "add-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add tox and travis, run pylint on builds (#30)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122644ee515ce6a4e9fb",
    "number": 29,
    "body": "~~I've also gone ahead and added pytest-based unit tests, but I'll gladly remove them/put them in another PR until #28 is resolved.~~\r\n\r\nThe environment variable stuff is useful for something like system-wide configuration. It could e.g. be used to (re)configure the SDK or return a different implementation.",
    "head_branch": "iss15-global-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add \"global tracer\"/backend objects (#15) (#29)\n\n* Global tracer registry: First somewhat satisfying iteration.\r\n\r\n* Add API docs for backend module\r\n\r\n* Fix documentation (and overlong lines within).\r\n\r\n* Sort imports.\r\n\r\n* Remove _UNIT_TEST_IGNORE_ENV.\r\n\r\nWe should be able to ensure clean envvars for the test run.\r\n\r\n* Misc cleanup.\r\n\r\n* Fix backend.py not being included in wheel.\r\n\r\n* Rewrite backend/loader.\r\n\r\n* Rewrite backend/loader more, fix pylint, mypy.\r\n\r\n* Ditch 'default' in `_load_default_impl`, it's just wrong now.\r\n\r\n* Fix docs.\r\n\r\n* Apply new package structure.\r\n\r\n* Remove unit tests (for now).\r\n\r\n* Document the factory type aliases.\r\n\r\n* Store factory functions in respective modules.\r\n\r\nGets rid of the dictionary in loader.py.\r\n\r\n* Fix factory return type (Optional) & improve docs.\r\n\r\n* Revert accidental changes to setup.py.\r\n\r\n* Remove unused global."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122744ee515ce6a4e9fc",
    "number": 27,
    "body": "One possible fix for #25.\r\n\r\nSince type annotations are evaluated at import time, annotations that refer to classes later in the same module will fail. This is fixed in 3.8, and available as a future import in 3.7. If we want to support python versions older than 3.7 our type annotations need to be strings that evaluate to the right type when the module is finished loading.",
    "head_branch": "type-hint-strings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Switch type hints to strings for 3.4 (#27)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122844ee515ce6a4e9fd",
    "number": 26,
    "body": "Follow up with feedbacks from @Oberon00 on #19.\r\n\r\n1. Fixed the broken link in `setup.py`.\r\n2. Use [native namespace package](https://packaging.python.org/guides/packaging-namespace-packages/#native-namespace-packages) since we only support Python 3.4+.\r\n3. Follow the [single source package version](https://packaging.python.org/guides/single-sourcing-package-version/) practice.\r\n",
    "head_branch": "layout",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improve package layout (#26)\n\nAuto discover namespace packages."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122944ee515ce6a4e9fe",
    "number": 24,
    "body": "This is based on opencensus/opencensus-python#667, with one major difference: I emptied the `disabled` checks and only re-disabled a few select ones. I also commented out a few settings that I believe were equal to the default anyway. Of course, I also fixed the issues pylint already found and added a dev-requirements.txt that can be used to install the right pylint version.\r\n\r\nOne thing I'm not sure about is the \"W0107: Unnecessary pass statement (unnecessary-pass)\" warning. When a function has a docstring, the pass-statement is not required anymore but I guess you could argue that the resulting code is odd. Still, it removes a few lines so I heeded the warning for now. What do you think?",
    "head_branch": "feature/pylint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a .pylintrc & fix warnings (#24)\n\n* Add .pylintrc based on OpenCensus (related #6).\r\n\r\n* Fix/disable pylint warnings.\r\n\r\n* pylint: Fix W0107: Unnecessary pass statement (unnecessary-pass)\r\n\r\nI'm not sure I like this warning."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122944ee515ce6a4e9ff",
    "number": 21,
    "body": "This PR moves the tracing API code from #11 into the new package structure added in #19.",
    "head_branch": "move-trace-api-init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move extant tracing API into new pkg (#21)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122a44ee515ce6a4ea00",
    "number": 20,
    "body": "",
    "head_branch": "layout",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add .gitignore and CODEOWNERS file (#20)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122b44ee515ce6a4ea01",
    "number": 19,
    "body": "",
    "head_branch": "layout",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Initial API package layout (#19)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122c44ee515ce6a4ea02",
    "number": 16,
    "body": "Add a stub readme with a link to the SIG meeting notes to fix #13.",
    "head_branch": "c24t-readme-stub",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add notes and contribution info to readme (#16)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122d44ee515ce6a4ea03",
    "number": 12,
    "body": "This PR adds sphinx boilerplate for generating API docs. Most files are generated with `sphinx-quickstart` and `sphinx-apidoc` with few changes.\r\n\r\nThis branch builds on https://github.com/open-telemetry/opentelemetry-python/pull/11, I'll rebase as it's updated.\r\n\r\nYou can build the html docs from this branch as:\r\n\r\n```sh\r\npip install sphinx sphinx_autodoc_typehints sphinx_rtd_theme\r\nsphinx-quickstart\r\nsphinx-apidoc --force -e -o docs opentelemetry\r\n(cd docs; make html)\r\n```\r\n\r\nI also pushed the generated html docs to the [`sphinx-docs-built` branch](https://github.com/open-telemetry/opentelemetry-python/tree/sphinx-docs-built/docs/_build/html), which you can check out to view the docs without building them yourself.",
    "head_branch": "sphinx-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add sphinx docs (#12)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122e44ee515ce6a4ea04",
    "number": 11,
    "body": "This PR adds the tracing API package and proposes some conventions for the package structure, documentation, and style of the project. As it is now, the API only describes the required classes for using the tracer to record spans. Propagation formats, resources, and the context API are all out of scope for this PR.\r\n\r\nThe API here borrows from:\r\n- The current [opentelemetry-java API](https://github.com/open-telemetry/opentelemetry-java/tree/master/api) (generate the javadocs and see `.../docs/io/opentelemetry/trace/Tracer.html`)\r\n- The WIP [OpenTelemetry tracing spec](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/tracing-api.md)\r\n- The [OpenTracing spec](https://opentracing.io/specification/)\r\n- The [OpenCensus tracing spec](https://github.com/census-instrumentation/opencensus-specs/tree/master/trace)\r\n- The existing [opencensus-python tracing implementation](https://github.com/census-instrumentation/opencensus-python/tree/master/opencensus/trace)\r\n\r\nThe OT java API is our current best source of truth. Ideally we can use this PR to prove the java API and push the discussion here up to the spec.",
    "head_branch": "tracer-api-init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add initial tracer API (#11)\n\nThis PR adds the tracing API package and proposes some conventions for the\r\npackage structure, documentation, and style of the project. It borrows heavily\r\nfrom opentelemetry-java and opencensus-python."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122e44ee515ce6a4ea05",
    "number": 10,
    "body": "It now links to OpenTelemetry instead.\r\n\r\nI missed that when looking at #7.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Link to OpenTelemetry from issue template (#10)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620122f44ee515ce6a4ea06",
    "number": 7,
    "body": "This PR adds the issue templates from https://github.com/census-instrumentation/opencensus-python/pull/634. Not that there's much reason for someone to use the bug report template yet...",
    "head_branch": "issue-templates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add issue templates (#7)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620123044ee515ce6a4ea07",
    "number": 3,
    "body": "",
    "head_branch": "bogdandrutu-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620123144ee515ce6a4ea08",
    "number": 2,
    "body": "",
    "head_branch": "SergeyKanzhelev-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2 from open-telemetry/SergeyKanzhelev-patch-1\n\nUpdate README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620123244ee515ce6a4ea09",
    "number": 1,
    "body": "### open-telemetry/opentelemetry-python now has a Chat Room on Gitter\n\n@bogdandrutu has just created a chat room. You can visit it here: [https://gitter.im/open-telemetry/opentelemetry-python](https://gitter.im/open-telemetry/opentelemetry-python?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).\n\nThis pull-request adds this badge to your README.md:\n\n\n[![Gitter](https://badges.gitter.im/open-telemetry/opentelemetry-python.svg)](https://gitter.im/open-telemetry/opentelemetry-python?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)\n\nIf my aim is a little off, please [let me know](https://gitlab.com/gitlab-org/gitter/readme-badger/issues).\n\nHappy chatting.\n\n\nPS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.\n",
    "head_branch": "gitter-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  }
]