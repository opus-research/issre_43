[
  {
    "_id": "6620127844ee515ce6a4ea0a",
    "number": 6132,
    "body": "Bumps [gunicorn](https://github.com/benoitc/gunicorn) from 21.2.0 to 22.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/benoitc/gunicorn/releases\">gunicorn's releases</a>.</em></p>\n<blockquote>\n<h2>Gunicorn 22.0 has been released</h2>\n<p><strong>Gunicorn 22.0.0 has been released.</strong> This version fix the numerous security vulnerabilities. You're invited to upgrade asap your own installation.</p>\n<p>Changes:</p>\n<pre><code>22.0.0 - 2024-04-17\n===================\n<ul>\n<li>use <code>utime</code> to notify workers liveness</li>\n<li>migrate setup to pyproject.toml</li>\n<li>fix numerous security vulnerabilities in HTTP parser (closing some request smuggling vectors)</li>\n<li>parsing additional requests is no longer attempted past unsupported request framing</li>\n<li>on HTTP versions &lt; 1.1 support for chunked transfer is refused (only used in exploits)</li>\n<li>requests conflicting configured or passed SCRIPT_NAME now produce a verbose error</li>\n<li>Trailer fields are no longer inspected for headers indicating secure scheme</li>\n<li>support Python 3.12</li>\n</ul>\n<p>** Breaking changes **</p>\n<ul>\n<li>minimum version is Python 3.7</li>\n<li>the limitations on valid characters in the HTTP method have been bounded to Internet Standards</li>\n<li>requests specifying unsupported transfer coding (order) are refused by default (rare)</li>\n<li>HTTP methods are no longer casefolded by default (IANA method registry contains none affected)</li>\n<li>HTTP methods containing the number sign (#) are no longer accepted by default (rare)</li>\n<li>HTTP versions &lt; 1.0 or &gt;= 2.0 are no longer accepted by default (rare, only HTTP/1.1 is supported)</li>\n<li>HTTP versions consisting of multiple digits or containing a prefix/suffix are no longer accepted</li>\n<li>HTTP header field names Gunicorn cannot safely map to variables are silently dropped, as in other software</li>\n<li>HTTP headers with empty field name are refused by default (no legitimate use cases, used in exploits)</li>\n<li>requests with both Transfer-Encoding and Content-Length are refused by default (such a message might indicate an attempt to perform request smuggling)</li>\n<li>empty transfer codings are no longer permitted (reportedly seen with really old &amp; broken proxies)</li>\n</ul>\n<p>** SECURITY **</p>\n<ul>\n<li>fix CVE-2024-1135\n</code></pre></li>\n</ul>\n<ol>\n<li>Documentation is available there: <a href=\"https://docs.gunicorn.org/en/stable/news.html\">https://docs.gunicorn.org/en/stable/news.html</a></li>\n<li>Packages: <a href=\"https://pypi.org/project/gunicorn/\">https://pypi.org/project/gunicorn/</a></li>\n</ol>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/f63d59e4d73a8ee28748d2c700fb81c8780bc419\"><code>f63d59e</code></a> bump to 22.0</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/4ac81e0a1037ba5b570323be7430e09caa233e38\"><code>4ac81e0</code></a> Merge pull request <a href=\"https://redirect.github.com/benoitc/gunicorn/issues/3175\">#3175</a> from e-kwsm/typo</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/401cecfaed85d79236c7a9a1f7d8946b01c466fc\"><code>401cecf</code></a> Merge pull request <a href=\"https://redirect.github.com/benoitc/gunicorn/issues/3179\">#3179</a> from dhdaines/exclude-eventlet-0360</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/0243ec39ef4fc1b479ff4e1659e165f0b980b571\"><code>0243ec3</code></a> fix(deps): exclude eventlet 0.36.0</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/628a0bcb61ef3a211d67dfd68ad1ba161cccb3b8\"><code>628a0bc</code></a> chore: fix typos</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/88fc4a43152039c28096c8ba3eeadb3fbaa4aff9\"><code>88fc4a4</code></a> Merge pull request <a href=\"https://redirect.github.com/benoitc/gunicorn/issues/3131\">#3131</a> from pajod/patch-py12-rebased</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/deae2fc4c5f93bfce59be5363055d4cd4ab1b0b6\"><code>deae2fc</code></a> CI: back off the agressive timeout</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/f4703824c323fe6867dce0e2f11013b8de319353\"><code>f470382</code></a> docs: promise 3.12 compat</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/5e30bfa6b1a3e1f2bde7feb514d1734d28f39231\"><code>5e30bfa</code></a> add changelog to project.urls (updated for PEP621)</li>\n<li><a href=\"https://github.com/benoitc/gunicorn/commit/481c3f9522edc58806a3efc5b49be4f202cc7700\"><code>481c3f9</code></a> remove setup.cfg - overridden by pyproject.toml</li>\n<li>Additional commits viewable in <a href=\"https://github.com/benoitc/gunicorn/compare/21.2.0...22.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gunicorn&package-manager=pip&previous-version=21.2.0&new-version=22.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/gunicorn-22.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620127944ee515ce6a4ea0b",
    "number": 6129,
    "body": "Correct a typo: `install` → `installs`. Fixes the third-person singular verb ending by appending `s`.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update index.md\n\nCorrect a typo."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620127944ee515ce6a4ea0c",
    "number": 6128,
    "body": "Bumps [idna](https://github.com/kjd/idna) from 3.4 to 3.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/releases\">idna's releases</a>.</em></p>\n<blockquote>\n<h2>v3.7</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/kjd/idna/compare/v3.6...v3.7\">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/blob/master/HISTORY.rst\">idna's changelog</a>.</em></p>\n<blockquote>\n<p>3.7 (2024-04-11)\n++++++++++++++++</p>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could\ntake exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p>3.6 (2023-11-25)\n++++++++++++++++</p>\n<ul>\n<li>Fix regression to include tests in source distribution.</li>\n</ul>\n<p>3.5 (2023-11-24)\n++++++++++++++++</p>\n<ul>\n<li>Update to Unicode 15.1.0</li>\n<li>String codec name is now &quot;idna2008&quot; as overriding the system codec\n&quot;idna&quot; was not working.</li>\n<li>Fix typing error for codec encoding</li>\n<li>&quot;setup.cfg&quot; has been added for this release due to some downstream\nlack of adherence to PEP 517. Should be removed in a future release\nso please prepare accordingly.</li>\n<li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport\nwith PEP 517 and the Python Packaging User Guide for sdist archives.</li>\n<li>Added security reporting protocol for project</li>\n</ul>\n<p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions\nto this release.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d\"><code>1d365e1</code></a> Release v3.7</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6\"><code>c1b3154</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/172\">#172</a> from kjd/optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623\"><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966\"><code>cd58a23</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/152\">#152</a> from elliotwutingfeng/dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7\"><code>5beb28b</code></a> More efficient resolution of joiner contexts</li>\n<li><a href=\"https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b\"><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>\n<li><a href=\"https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067\"><code>d516b87</code></a> Update Github actions/checkout to v4</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7\"><code>c095c75</code></a> Merge branch 'master' into dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98\"><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201\"><code>5918a0e</code></a> Merge branch 'master' into dev</li>\n<li>Additional commits viewable in <a href=\"https://github.com/kjd/idna/compare/v3.4...v3.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/idna-3.7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620127a44ee515ce6a4ea0d",
    "number": 6127,
    "body": "Bumps [idna](https://github.com/kjd/idna) from 3.4 to 3.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/releases\">idna's releases</a>.</em></p>\n<blockquote>\n<h2>v3.7</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/kjd/idna/compare/v3.6...v3.7\">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/blob/master/HISTORY.rst\">idna's changelog</a>.</em></p>\n<blockquote>\n<p>3.7 (2024-04-11)\n++++++++++++++++</p>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could\ntake exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p>3.6 (2023-11-25)\n++++++++++++++++</p>\n<ul>\n<li>Fix regression to include tests in source distribution.</li>\n</ul>\n<p>3.5 (2023-11-24)\n++++++++++++++++</p>\n<ul>\n<li>Update to Unicode 15.1.0</li>\n<li>String codec name is now &quot;idna2008&quot; as overriding the system codec\n&quot;idna&quot; was not working.</li>\n<li>Fix typing error for codec encoding</li>\n<li>&quot;setup.cfg&quot; has been added for this release due to some downstream\nlack of adherence to PEP 517. Should be removed in a future release\nso please prepare accordingly.</li>\n<li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport\nwith PEP 517 and the Python Packaging User Guide for sdist archives.</li>\n<li>Added security reporting protocol for project</li>\n</ul>\n<p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions\nto this release.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d\"><code>1d365e1</code></a> Release v3.7</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6\"><code>c1b3154</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/172\">#172</a> from kjd/optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623\"><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966\"><code>cd58a23</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/152\">#152</a> from elliotwutingfeng/dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7\"><code>5beb28b</code></a> More efficient resolution of joiner contexts</li>\n<li><a href=\"https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b\"><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>\n<li><a href=\"https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067\"><code>d516b87</code></a> Update Github actions/checkout to v4</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7\"><code>c095c75</code></a> Merge branch 'master' into dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98\"><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201\"><code>5918a0e</code></a> Merge branch 'master' into dev</li>\n<li>Additional commits viewable in <a href=\"https://github.com/kjd/idna/compare/v3.4...v3.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/examples/idna-3.7",
    "is_a_fork": false,
    "comments": [
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620127b44ee515ce6a4ea0e",
    "number": 6118,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "spring-2024-vendoring",
    "is_a_fork": false,
    "comments": [
      "Needs a news fragment, but if you review I can add that after and merge when ready."
    ],
    "commit_messages": [
      "Merge pull request #6118 from pypa/spring-2024-vendoring\n\nSpring 2024 vendoring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620127c44ee515ce6a4ea0f",
    "number": 6117,
    "body": "### The issue\r\n\r\npipenv 3000 will ship with the latest pip.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pip-24",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #6117 from pypa/pip-24\n\nVendor in Pip 24.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620127d44ee515ce6a4ea10",
    "number": 6114,
    "body": "Fix for #6106",
    "head_branch": "source-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #6114 from jralls/source-name\n\nCheck for name attribute in source parameter."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620127e44ee515ce6a4ea11",
    "number": 6112,
    "body": "Bumps [black](https://github.com/psf/black) from 23.3 to 24.3.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/releases\">black's releases</a>.</em></p>\n<blockquote>\n<h2>24.3.0</h2>\n<h3>Highlights</h3>\n<p>This release is a milestone: it fixes Black's first CVE security vulnerability. If you\nrun Black on untrusted input, or if you habitually put thousands of leading tab\ncharacters in your docstrings, you are strongly encouraged to upgrade immediately to fix\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.</p>\n<p>This release also fixes a bug in Black's AST safety check that allowed Black to make\nincorrect changes to certain f-strings that are valid in Python 3.12 and higher.</p>\n<h3>Stable style</h3>\n<ul>\n<li>Don't move comments along with delimiters, which could cause crashes (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li>Strengthen AST safety check to catch more unsafe changes to strings. Previous versions\nof Black would incorrectly format the contents of certain unusual f-strings containing\nnested strings with the same quote type. Now, Black will crash on such strings until\nsupport for the new f-string syntax is implemented. (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li>Fix a bug where line-ranges exceeding the last code line would not work as expected\n(<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n<li>Fix catastrophic performance on docstrings that contain large numbers of leading tab\ncharacters. This fixes\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.\n(<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Note what happens when <code>--check</code> is used with <code>--quiet</code> (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n</ul>\n<h2>24.2.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fixed a bug where comments where mistakenly removed along with redundant parentheses\n(<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li>Move the <code>hug_parens_with_braces_and_square_brackets</code> feature to the unstable style\ndue to an outstanding crash and proposed formatting tweaks (<a href=\"https://redirect.github.com/psf/black/issues/4198\">#4198</a>)</li>\n<li>Fixed a bug where base expressions caused inconsistent formatting of ** in tenary\nexpression (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li>Checking for newline before adding one on docstring that is almost at the line limit\n(<a href=\"https://redirect.github.com/psf/black/issues/4185\">#4185</a>)</li>\n<li>Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>).</li>\n</ul>\n<h3>Configuration</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/blob/main/CHANGES.md\">black's changelog</a>.</em></p>\n<blockquote>\n<h2>24.3.0</h2>\n<h3>Highlights</h3>\n<p>This release is a milestone: it fixes Black's first CVE security vulnerability. If you\nrun Black on untrusted input, or if you habitually put thousands of leading tab\ncharacters in your docstrings, you are strongly encouraged to upgrade immediately to fix\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.</p>\n<p>This release also fixes a bug in Black's AST safety check that allowed Black to make\nincorrect changes to certain f-strings that are valid in Python 3.12 and higher.</p>\n<h3>Stable style</h3>\n<ul>\n<li>Don't move comments along with delimiters, which could cause crashes (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li>Strengthen AST safety check to catch more unsafe changes to strings. Previous versions\nof Black would incorrectly format the contents of certain unusual f-strings containing\nnested strings with the same quote type. Now, Black will crash on such strings until\nsupport for the new f-string syntax is implemented. (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li>Fix a bug where line-ranges exceeding the last code line would not work as expected\n(<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n<li>Fix catastrophic performance on docstrings that contain large numbers of leading tab\ncharacters. This fixes\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.\n(<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Note what happens when <code>--check</code> is used with <code>--quiet</code> (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n</ul>\n<h2>24.2.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fixed a bug where comments where mistakenly removed along with redundant parentheses\n(<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li>Move the <code>hug_parens_with_braces_and_square_brackets</code> feature to the unstable style\ndue to an outstanding crash and proposed formatting tweaks (<a href=\"https://redirect.github.com/psf/black/issues/4198\">#4198</a>)</li>\n<li>Fixed a bug where base expressions caused inconsistent formatting of ** in tenary\nexpression (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li>Checking for newline before adding one on docstring that is almost at the line limit\n(<a href=\"https://redirect.github.com/psf/black/issues/4185\">#4185</a>)</li>\n<li>Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>).</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/black/commit/552baf822992936134cbd31a38f69c8cfe7c0f05\"><code>552baf8</code></a> Prepare release 24.3.0 (<a href=\"https://redirect.github.com/psf/black/issues/4279\">#4279</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/f00093672628d212b8965a8993cee8bedf5fe9b8\"><code>f000936</code></a> Fix catastrophic performance in lines_with_leading_tabs_expanded() (<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/7b5a657285f38126bf28483478bbd9ea928077ec\"><code>7b5a657</code></a> Fix --line-ranges behavior when ranges are at EOF (<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/1abcffc81816257985678f08c61584ed4287f22a\"><code>1abcffc</code></a> Use regex where we ignore case on windows (<a href=\"https://redirect.github.com/psf/black/issues/4252\">#4252</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/719e67462c80574c81a96faa144886de6da84489\"><code>719e674</code></a> Fix 4227: Improve documentation for --quiet --check (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/e5510afc06cd238cd0cba4095283943a870a7e7b\"><code>e5510af</code></a> update plugin url for Thonny (<a href=\"https://redirect.github.com/psf/black/issues/4259\">#4259</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/6af7d1109693c4ad3af08ecbc34649c232b47a6d\"><code>6af7d11</code></a> Fix AST safety check false negative (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/f03ee113c9f3dfeb477f2d4247bfb7de2e5f465c\"><code>f03ee11</code></a> Ensure <code>blib2to3.pygram</code> is initialized before use (<a href=\"https://redirect.github.com/psf/black/issues/4224\">#4224</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/e4bfedbec2e8b10cc6b7b31442478f05db0ce06d\"><code>e4bfedb</code></a> fix: Don't move comments while splitting delimiters (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/d0287e1f7558d97e6c0ebd6dc5bcb5b970e2bf8c\"><code>d0287e1</code></a> Make trailing comma logic more concise (<a href=\"https://redirect.github.com/psf/black/issues/4202\">#4202</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/black/compare/23.3.0...24.3.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=black&package-manager=pip&previous-version=23.3&new-version=24.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/black-24.3.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620127e44ee515ce6a4ea12",
    "number": 6108,
    "body": "Ran into this issue when attempting to activate pipenv environments using pwsh on mac. I'm not 100% sure this is the correct solution as the [documentation](https://docs.pipenv.org/basics/#about-shell-configuration) for fancy mode is sparse, but it seems the code enforces fancy mode if running on windows (because it's assumed it's pwsh?)\r\n\r\nDefinitely looking for some feedback. Thanks.\r\n\r\n### The issue\r\n\r\nIssue is described in https://github.com/pypa/pipenv/issues/6107\r\n\r\n### The fix\r\n\r\nDefaulting to fancy mode for pwsh on *nix\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pwsh-unix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #6108 from samcarswell/pwsh-unix\n\nUse fancy mode for pwsh on *nix (draft)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620127f44ee515ce6a4ea13",
    "number": 6098,
    "body": "### The issue\r\n\r\nIt has been long requested that:\r\n`pipenv install` have the same behavior as `pipenv sync` when no packages are requested\r\nand `pipenv install package` has the behavior of `pipenv update` \r\nwhich means only `pipenv lock` will regenerate the whole lock.\r\n\r\nFixes #5992\r\nFixes #6070\r\nFixes #6048\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "pipenv-3000-install-refactor",
    "is_a_fork": false,
    "comments": [
      "This PR looks good. What's still missing is an update to docs. ",
      "Huh, I'm a bit confused. I only see the logic for `pipenv install package` having been changed. I don't see where you changed the behavior of `pipenv install`.\r\n\r\nI know some people at my work sometimes edit the pipfile directly and then run `pipenv install`. Maybe it would be beneficial to see if the lockfile is up to date and if not use the old logic of lock & sync?",
      "> Huh, I'm a bit confused. I only see the logic for pipenv install package having been changed. \r\n\r\nThanks for checking, I probably missed something in the refactor -- will revisit soon.",
      "@Kroppeb I believe the PR is now in a good spot and does what I expect it to.\r\n\r\n@oz123 I made the corresponding documentation updates as well, please re-review.",
      "> Is there still a way to lock and install in 1 command. If not, maybe adding a pipenv install --relock could be interesting? \r\n\r\nYeah, `pipenv install package` will lock a subset of relevant thing, or if you want to lock everything do `pipenv lock` -- I am not in favor of further complicating the CLI flags with such a flag as `--relock` because it ultimately makes the code paths of the routines harder to maintain."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128044ee515ce6a4ea14",
    "number": 6084,
    "body": "Current link redirect developer to 404 page so, fixed stale contributing guide link.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Fixes #6080 "
    ],
    "commit_messages": [
      "Merge pull request #6084 from PzaThief/patch-1\n\nUpdate CONTRIBUTING.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128144ee515ce6a4ea15",
    "number": 6082,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #6079",
    "head_branch": "issue-6079",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128244ee515ce6a4ea16",
    "number": 6072,
    "body": "Fixes #4909 \r\n\r\n### The fix\r\nRemoves patch that affected code execution but was no longer required for the CI anyway.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "recheck-CI-patch",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove forcing CI code path to use nt shell code path (#6072)\n\n* Remove forcing CI code path to use nt shell code path and remove outdated comment\r\n\r\n* Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128244ee515ce6a4ea17",
    "number": 6069,
    "body": "Exploration of #6054 \r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "utilize-editable-entry-during-install",
    "is_a_fork": false,
    "comments": [
      "Thank you for fixing this.\r\n\r\nI notice no testcase was added - I feel like the current rate of regressions in pipenv releases is pretty high, and I'm not sure that will improve unless test coverage is also improved?",
      "@edmorley if you look back on the issue that is still marked open, no one has responded to me when I ask for more details like what the difference even is between a editable and non editable local file install--\r\n\r\nhttps://github.com/pypa/pipenv/issues/6054#issuecomment-1913572665\r\n\r\nI'm not opposed to adding test cases, however I think if you look you'll see I've added the most new test cases in the last two years, and the test runner used to take 45 minutes plus, now takes a fraction of the time, wasn't without a lot of hard effort.  Yes the test runner needs more cases and more TLC, no I cannot be the one to ensure all those tests exist.  I've refactored and simplified a lot of code in pipenv, and I often get caught by the lack of tests that already existed around original functionality folks expects.   It is easy to ask for more tests, harder to implement them.   I've spent hours at points trying to add tests for some things only to back them out for reasons due to the nature of trying to test some of this stuff.",
      "Like I am not even convinced it is fixed, that is why I left the original issue open.   But I thought this is a step on the path."
    ],
    "commit_messages": [
      "Only editable entry should trigger editable installs (#6069)\n\n* Only editable entry should trigger editable installs\r\n\r\n* add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128344ee515ce6a4ea18",
    "number": 6065,
    "body": "Convert from pydantic to vanilla dataclasses (includes pythonfinder 2.1.0).\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pilot-pythnonfinder-no-pydantic",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Convert from pydantic to vanilla dataclasses (includes pythonfinder 2.1.0) (#6065)\n\n* Upgrade `pythonfinder==2.1.0`\r\n\r\n* Try to  normalize on using pathlib basics and storing string paths in dataclass to compare against.\r\n\r\n* Completely remove posix path conversions.\r\n\r\n* Round 2 of pydantic conversions -- pydantic removal from pipenv.\r\n\r\n* Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128444ee515ce6a4ea19",
    "number": 6064,
    "body": "Lets include the latest 23.3.2 pip release in our last 2023 release.\r\n",
    "head_branch": "vendor-pip-23.3.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Vendoring in pip-23.3.2 (#6064)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128544ee515ce6a4ea1a",
    "number": 6059,
    "body": "Bumps [jinja2](https://github.com/pallets/jinja) from 3.1.2 to 3.1.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/releases\">jinja2's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.3</h2>\n<p>This is a fix release for the 3.1.x feature branch.</p>\n<ul>\n<li>Fix for <a href=\"https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95\">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/15?closed=1\">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/blob/main/CHANGES.rst\">jinja2's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.1.3</h2>\n<p>Released 2024-01-10</p>\n<ul>\n<li>Fix compiler error when checking if required blocks in parent templates are\nempty. :pr:<code>1858</code></li>\n<li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>\n<li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks\nmore helpful. :pr:<code>1918</code></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1\"><code>d9de4bb</code></a> release version 3.1.3</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc\"><code>50124e1</code></a> skip test pypi</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b\"><code>9ea7222</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde\"><code>da703f7</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983\"><code>bce1746</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373af1\"><code>7277d80</code></a> update pre-commit hooks</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14\"><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=\"https://redirect.github.com/pallets/jinja/issues/1918\">#1918</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895\"><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7\"><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23\"><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/jinja/compare/3.1.2...3.1.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/jinja2-3.1.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump jinja2 from 3.1.2 to 3.1.3\n\nBumps [jinja2](https://github.com/pallets/jinja) from 3.1.2 to 3.1.3.\n- [Release notes](https://github.com/pallets/jinja/releases)\n- [Changelog](https://github.com/pallets/jinja/blob/main/CHANGES.rst)\n- [Commits](https://github.com/pallets/jinja/compare/3.1.2...3.1.3)\n\n---\nupdated-dependencies:\n- dependency-name: jinja2\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128644ee515ce6a4ea1b",
    "number": 6057,
    "body": "### The issue\r\n\r\nFix a bug with locking projects that contains packages with non canonical names from private indexes\r\nMore details here:\r\nhttps://github.com/pypa/pipenv/issues/6056\r\n\r\n### The checklist\r\n\r\n* [ X] Associated issue\r\n* [X ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n* [] Send a fix to pip ?",
    "head_branch": "bug-locking-uncanonical-packages",
    "is_a_fork": true,
    "comments": [
      "From my point of view the patch can't be send to pip.\r\nBecause they don't handle mapping between packages and indexes.\r\nThey just try to install package from ALL indexes:\r\nhttps://github.com/pypa/pip/blob/e88d39ae49ab11a8b80609a018e5a36ea4ccad89/src/pip/_internal/models/search_scope.py#L112",
      "This seems like a legitimate fix, yet ... patching pip is a cause of trouble. \r\nYour patch should be here:\r\n```\r\ntasks/vendoring/patches/patched\r\n```\r\n\r\nlike other pip patches.\r\n\r\nIf @matteius is OK with this patch I can move it there.",
      "No problem i would move the fix there.\r\nI would like to finish the job\r\n",
      "Please go a head and move the patch there. You will also need to apply it to check that our vendoring system understands it.",
      "I am convinced this must be fixable in the code we use from pipenv without patching pip at all.    I will try to help look more into this tonight, assuming we don't loose power in this storm.",
      "Does this have to do with dash vs underscore in the package name?   I do think I broke something there when we factored away requirementslib.",
      "@matteius can you please take a look one more time?\r\nThis change wouldn't require patching pip.",
      "Fixed code style... i forgot to set up precommit hook. Sorry.",
      "Hey @matteius,\r\nDo we have any timeline about releasing the fix?",
      "@mangin I think we will get another 2023 release in (minior or patch) release within the next week and then start looking at our more major 2024 version release after that.   At least that's my plan, I have to travel for work next week so if I can get it in before then,.  Our goal is to adopt semver going forward.",
      "@mangin Your patch is in the release from 15 minutes ago -- I hope that it is helpful.",
      "Thank you for the release ^_^"
    ],
    "commit_messages": [
      "built index mapping using canonical package names instead of raw package names"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128744ee515ce6a4ea1c",
    "number": 6055,
    "body": "Bump version of  pipdeptree. Some changes required to move to this version on our side too.",
    "head_branch": "vendor-bump-pipdeptree",
    "is_a_fork": false,
    "comments": [
      "@matteius can we please include this in the last 2023.XX version? It does not have to wait to the next semver release."
    ],
    "commit_messages": [
      "Merge pull request #6055 from pypa/vendor-bump-pipdeptree\n\nVendor bump pipdeptree"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128744ee515ce6a4ea1d",
    "number": 6052,
    "body": "RE: https://github.com/pypa/pipenv/discussions/6014\r\n\r\n\r\n### The issue\r\n\r\nSemver for 2024 -- I anticipate we will have a release 2024.1.1 and then we can follow the semver patterns.   Also simplify the release script some -- I don't think we ever use the local build to pypi thing, lets just rely on the CI to do it.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "semver",
    "is_a_fork": false,
    "comments": [
      "This seems nice! 💪\r\n\r\nDoes this also mean that there will be a major yearly release that will include any potential breaking changes merged during the year?",
      "@deivid-rodriguez I don't think we are as organized or have enough time to make guarantee like only one major release a year kind of thing.  I think we will have to evaluate what is included in the release and understand the implications as we merge things -- so 2024 could get up to 2027.1.1 -- we just don't know yet.",
      "Oh, I see, so the major version will no longer necessarily be linked to the current year, but will just be a standard major version, just a very high one 😅. One major per year seemed neat, but I would understand if you don't want to delay major changes that long.",
      "I'd start at 3001.0.0 or something similar, otherwise it could look like a stale project after a few years if you don't do many releases each year (in 2026 it might still be on version 2024.x.y)"
    ],
    "commit_messages": [
      "Update release script to enforce semver going forward in 2024 (#6052)\n\n* Update release script to enforce semver going forward in 2024\r\n\r\n* Update pipfile/lock for semver\r\n\r\n* fix readme\r\n\r\n* Update CI vendoring step for semver\r\n\r\n* Dependeapot warning about version of pytest we are on\r\n\r\n* remove options from help"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128844ee515ce6a4ea1e",
    "number": 6050,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Is this a duplicate of the other PR I just merged?",
      "It seems so. It's a duplicate. The content already exists in README.md."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128944ee515ce6a4ea1f",
    "number": 6049,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "pipit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #6049 from Suprithvarma1/pipit\n\nupdated readme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128a44ee515ce6a4ea20",
    "number": 6038,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nSafety test for some reason is picking up an old pip version.\r\n\r\n### The fix\r\n\r\nEnsure the test itself upgrades pip.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "safety-test-failure",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #6038 from pypa/safety-test-failure\n\nFix for the safety test failure in the CI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128b44ee515ce6a4ea21",
    "number": 6037,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "require-new-virtualenv",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128b44ee515ce6a4ea22",
    "number": 6033,
    "body": "Cleaning old stuff ...",
    "head_branch": "vendor-drop-markupsafe",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #6033 from pypa/vendor-drop-markupsafe\n\nDrop markupsafe - way too late for that"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128c44ee515ce6a4ea23",
    "number": 6029,
    "body": "Ran into this at work recently, uninstall does a complete lock so not nearly as useful as upgrade path.   This makes the uninstall smarter like the upgrade path is (but the inverse).\r\n\r\n### The issue (before this change)\r\n`$ pipenv  uninstall tomli --categories=develop`\r\n\r\n```\r\n$ git diff\r\ndiff --git a/Pipfile b/Pipfile\r\nindex fa27de08..21799786 100644\r\n--- a/Pipfile\r\n+++ b/Pipfile\r\n@@ -24,7 +24,6 @@ colorama= {version = \"*\", sys_platform = \"== 'win32'\"}\r\n myst-parser = {extras = [\"linkify\"], version = \"*\"}\r\n invoke = \"==2.0.0\"\r\n exceptiongroup = \"==1.1.0\"\r\n-tomli = \"*\"\r\n pyyaml = \"==6.0.1\"\r\n build = \"*\"\r\n twine = \"*\"\r\ndiff --git a/Pipfile.lock b/Pipfile.lock\r\nindex 861d9132..39d53450 100644\r\n--- a/Pipfile.lock\r\n+++ b/Pipfile.lock\r\n@@ -1,7 +1,7 @@\r\n {\r\n     \"_meta\": {\r\n         \"hash\": {\r\n-            \"sha256\": \"4d1a9f3599cadad8b7884cd1143a964290191e9ee6a2ebf7acec9e6e27f2a69e\"\r\n+            \"sha256\": \"d7cdc853e6e34c10abbcd19a0c79905a61d12d50233e5b13259ecf3331ddde04\"\r\n         },\r\n         \"pipfile-spec\": 6,\r\n         \"requires\": {},\r\n@@ -55,11 +55,11 @@\r\n         },\r\n         \"babel\": {\r\n             \"hashes\": [\r\n-                \"sha256:04c3e2d28d2b7681644508f836be388ae49e0cfe91465095340395b60d00f210\",\r\n-                \"sha256:fbfcae1575ff78e26c7449136f1abbefc3c13ce542eeb13d43d50d8b047216ec\"\r\n+                \"sha256:33e0952d7dd6374af8dbf6768cc4ddf3ccfefc244f9986d4074704f2fbd18900\",\r\n+                \"sha256:7077a4984b02b6727ac10f1f7294484f737443d7e2e66c5e4380e41a3ae0b4ed\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==2.13.0\"\r\n+            \"version\": \"==2.13.1\"\r\n         },\r\n         \"beautifulsoup4\": {\r\n             \"hashes\": [\r\n@@ -109,11 +109,11 @@\r\n         },\r\n         \"certifi\": {\r\n             \"hashes\": [\r\n-                \"sha256:539cc1d13202e33ca466e88b2807e29f4c13049d6d87031a3c110744495cb082\",\r\n-                \"sha256:92d6037539857d8206b8f6ae472e8b77db8058fec5937a1ef3f54304089edbb9\"\r\n+                \"sha256:9b469f3a900bf28dc19b8cfbf8019bf47f7fdd1a65a1d4ffb98fc14166beb4d1\",\r\n+                \"sha256:e036ab49d5b79556f99cfc2d9320b34cfbe5be05c5871b51de9329f0603b0474\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.6'\",\r\n-            \"version\": \"==2023.7.22\"\r\n+            \"version\": \"==2023.11.17\"\r\n         },\r\n         \"cfgv\": {\r\n             \"hashes\": [\r\n@@ -125,99 +125,99 @@\r\n         },\r\n         \"charset-normalizer\": {\r\n             \"hashes\": [\r\n-                \"sha256:02673e456dc5ab13659f85196c534dc596d4ef260e4d86e856c3b2773ce09843\",\r\n-                \"sha256:02af06682e3590ab952599fbadac535ede5d60d78848e555aa58d0c0abbde786\",\r\n-                \"sha256:03680bb39035fbcffe828eae9c3f8afc0428c91d38e7d61aa992ef7a59fb120e\",\r\n-                \"sha256:0570d21da019941634a531444364f2482e8db0b3425fcd5ac0c36565a64142c8\",\r\n-                \"sha256:09c77f964f351a7369cc343911e0df63e762e42bac24cd7d18525961c81754f4\",\r\n-                \"sha256:0d3d5b7db9ed8a2b11a774db2bbea7ba1884430a205dbd54a32d61d7c2a190fa\",\r\n-                \"sha256:1063da2c85b95f2d1a430f1c33b55c9c17ffaf5e612e10aeaad641c55a9e2b9d\",\r\n-                \"sha256:12ebea541c44fdc88ccb794a13fe861cc5e35d64ed689513a5c03d05b53b7c82\",\r\n-                \"sha256:153e7b6e724761741e0974fc4dcd406d35ba70b92bfe3fedcb497226c93b9da7\",\r\n-                \"sha256:15b26ddf78d57f1d143bdf32e820fd8935d36abe8a25eb9ec0b5a71c82eb3895\",\r\n-                \"sha256:1872d01ac8c618a8da634e232f24793883d6e456a66593135aeafe3784b0848d\",\r\n-                \"sha256:187d18082694a29005ba2944c882344b6748d5be69e3a89bf3cc9d878e548d5a\",\r\n-                \"sha256:1b2919306936ac6efb3aed1fbf81039f7087ddadb3160882a57ee2ff74fd2382\",\r\n-                \"sha256:232ac332403e37e4a03d209a3f92ed9071f7d3dbda70e2a5e9cff1c4ba9f0678\",\r\n-                \"sha256:23e8565ab7ff33218530bc817922fae827420f143479b753104ab801145b1d5b\",\r\n-                \"sha256:24817cb02cbef7cd499f7c9a2735286b4782bd47a5b3516a0e84c50eab44b98e\",\r\n-                \"sha256:249c6470a2b60935bafd1d1d13cd613f8cd8388d53461c67397ee6a0f5dce741\",\r\n-                \"sha256:24a91a981f185721542a0b7c92e9054b7ab4fea0508a795846bc5b0abf8118d4\",\r\n-                \"sha256:2502dd2a736c879c0f0d3e2161e74d9907231e25d35794584b1ca5284e43f596\",\r\n-                \"sha256:250c9eb0f4600361dd80d46112213dff2286231d92d3e52af1e5a6083d10cad9\",\r\n-                \"sha256:278c296c6f96fa686d74eb449ea1697f3c03dc28b75f873b65b5201806346a69\",\r\n-                \"sha256:2935ffc78db9645cb2086c2f8f4cfd23d9b73cc0dc80334bc30aac6f03f68f8c\",\r\n-                \"sha256:2f4a0033ce9a76e391542c182f0d48d084855b5fcba5010f707c8e8c34663d77\",\r\n-                \"sha256:30a85aed0b864ac88309b7d94be09f6046c834ef60762a8833b660139cfbad13\",\r\n-                \"sha256:380c4bde80bce25c6e4f77b19386f5ec9db230df9f2f2ac1e5ad7af2caa70459\",\r\n-                \"sha256:3ae38d325b512f63f8da31f826e6cb6c367336f95e418137286ba362925c877e\",\r\n-                \"sha256:3b447982ad46348c02cb90d230b75ac34e9886273df3a93eec0539308a6296d7\",\r\n-                \"sha256:3debd1150027933210c2fc321527c2299118aa929c2f5a0a80ab6953e3bd1908\",\r\n-                \"sha256:4162918ef3098851fcd8a628bf9b6a98d10c380725df9e04caf5ca6dd48c847a\",\r\n-                \"sha256:468d2a840567b13a590e67dd276c570f8de00ed767ecc611994c301d0f8c014f\",\r\n-                \"sha256:4cc152c5dd831641e995764f9f0b6589519f6f5123258ccaca8c6d34572fefa8\",\r\n-                \"sha256:542da1178c1c6af8873e143910e2269add130a299c9106eef2594e15dae5e482\",\r\n-                \"sha256:557b21a44ceac6c6b9773bc65aa1b4cc3e248a5ad2f5b914b91579a32e22204d\",\r\n-                \"sha256:5707a746c6083a3a74b46b3a631d78d129edab06195a92a8ece755aac25a3f3d\",\r\n-                \"sha256:588245972aca710b5b68802c8cad9edaa98589b1b42ad2b53accd6910dad3545\",\r\n-                \"sha256:5adf257bd58c1b8632046bbe43ee38c04e1038e9d37de9c57a94d6bd6ce5da34\",\r\n-                \"sha256:619d1c96099be5823db34fe89e2582b336b5b074a7f47f819d6b3a57ff7bdb86\",\r\n-                \"sha256:63563193aec44bce707e0c5ca64ff69fa72ed7cf34ce6e11d5127555756fd2f6\",\r\n-                \"sha256:67b8cc9574bb518ec76dc8e705d4c39ae78bb96237cb533edac149352c1f39fe\",\r\n-                \"sha256:6a685067d05e46641d5d1623d7c7fdf15a357546cbb2f71b0ebde91b175ffc3e\",\r\n-                \"sha256:70f1d09c0d7748b73290b29219e854b3207aea922f839437870d8cc2168e31cc\",\r\n-                \"sha256:750b446b2ffce1739e8578576092179160f6d26bd5e23eb1789c4d64d5af7dc7\",\r\n-                \"sha256:7966951325782121e67c81299a031f4c115615e68046f79b85856b86ebffc4cd\",\r\n-                \"sha256:7b8b8bf1189b3ba9b8de5c8db4d541b406611a71a955bbbd7385bbc45fcb786c\",\r\n-                \"sha256:7f5d10bae5d78e4551b7be7a9b29643a95aded9d0f602aa2ba584f0388e7a557\",\r\n-                \"sha256:805dfea4ca10411a5296bcc75638017215a93ffb584c9e344731eef0dcfb026a\",\r\n-                \"sha256:81bf654678e575403736b85ba3a7867e31c2c30a69bc57fe88e3ace52fb17b89\",\r\n-                \"sha256:82eb849f085624f6a607538ee7b83a6d8126df6d2f7d3b319cb837b289123078\",\r\n-                \"sha256:85a32721ddde63c9df9ebb0d2045b9691d9750cb139c161c80e500d210f5e26e\",\r\n-                \"sha256:86d1f65ac145e2c9ed71d8ffb1905e9bba3a91ae29ba55b4c46ae6fc31d7c0d4\",\r\n-                \"sha256:86f63face3a527284f7bb8a9d4f78988e3c06823f7bea2bd6f0e0e9298ca0403\",\r\n-                \"sha256:8eaf82f0eccd1505cf39a45a6bd0a8cf1c70dcfc30dba338207a969d91b965c0\",\r\n-                \"sha256:93aa7eef6ee71c629b51ef873991d6911b906d7312c6e8e99790c0f33c576f89\",\r\n-                \"sha256:96c2b49eb6a72c0e4991d62406e365d87067ca14c1a729a870d22354e6f68115\",\r\n-                \"sha256:9cf3126b85822c4e53aa28c7ec9869b924d6fcfb76e77a45c44b83d91afd74f9\",\r\n-                \"sha256:9fe359b2e3a7729010060fbca442ca225280c16e923b37db0e955ac2a2b72a05\",\r\n-                \"sha256:a0ac5e7015a5920cfce654c06618ec40c33e12801711da6b4258af59a8eff00a\",\r\n-                \"sha256:a3f93dab657839dfa61025056606600a11d0b696d79386f974e459a3fbc568ec\",\r\n-                \"sha256:a4b71f4d1765639372a3b32d2638197f5cd5221b19531f9245fcc9ee62d38f56\",\r\n-                \"sha256:aae32c93e0f64469f74ccc730a7cb21c7610af3a775157e50bbd38f816536b38\",\r\n-                \"sha256:aaf7b34c5bc56b38c931a54f7952f1ff0ae77a2e82496583b247f7c969eb1479\",\r\n-                \"sha256:abecce40dfebbfa6abf8e324e1860092eeca6f7375c8c4e655a8afb61af58f2c\",\r\n-                \"sha256:abf0d9f45ea5fb95051c8bfe43cb40cda383772f7e5023a83cc481ca2604d74e\",\r\n-                \"sha256:ac71b2977fb90c35d41c9453116e283fac47bb9096ad917b8819ca8b943abecd\",\r\n-                \"sha256:ada214c6fa40f8d800e575de6b91a40d0548139e5dc457d2ebb61470abf50186\",\r\n-                \"sha256:b09719a17a2301178fac4470d54b1680b18a5048b481cb8890e1ef820cb80455\",\r\n-                \"sha256:b1121de0e9d6e6ca08289583d7491e7fcb18a439305b34a30b20d8215922d43c\",\r\n-                \"sha256:b3b2316b25644b23b54a6f6401074cebcecd1244c0b8e80111c9a3f1c8e83d65\",\r\n-                \"sha256:b3d9b48ee6e3967b7901c052b670c7dda6deb812c309439adaffdec55c6d7b78\",\r\n-                \"sha256:b5bcf60a228acae568e9911f410f9d9e0d43197d030ae5799e20dca8df588287\",\r\n-                \"sha256:b8f3307af845803fb0b060ab76cf6dd3a13adc15b6b451f54281d25911eb92df\",\r\n-                \"sha256:c2af80fb58f0f24b3f3adcb9148e6203fa67dd3f61c4af146ecad033024dde43\",\r\n-                \"sha256:c350354efb159b8767a6244c166f66e67506e06c8924ed74669b2c70bc8735b1\",\r\n-                \"sha256:c5a74c359b2d47d26cdbbc7845e9662d6b08a1e915eb015d044729e92e7050b7\",\r\n-                \"sha256:c71f16da1ed8949774ef79f4a0260d28b83b3a50c6576f8f4f0288d109777989\",\r\n-                \"sha256:d47ecf253780c90ee181d4d871cd655a789da937454045b17b5798da9393901a\",\r\n-                \"sha256:d7eff0f27edc5afa9e405f7165f85a6d782d308f3b6b9d96016c010597958e63\",\r\n-                \"sha256:d97d85fa63f315a8bdaba2af9a6a686e0eceab77b3089af45133252618e70884\",\r\n-                \"sha256:db756e48f9c5c607b5e33dd36b1d5872d0422e960145b08ab0ec7fd420e9d649\",\r\n-                \"sha256:dc45229747b67ffc441b3de2f3ae5e62877a282ea828a5bdb67883c4ee4a8810\",\r\n-                \"sha256:e0fc42822278451bc13a2e8626cf2218ba570f27856b536e00cfa53099724828\",\r\n-                \"sha256:e39c7eb31e3f5b1f88caff88bcff1b7f8334975b46f6ac6e9fc725d829bc35d4\",\r\n-                \"sha256:e46cd37076971c1040fc8c41273a8b3e2c624ce4f2be3f5dfcb7a430c1d3acc2\",\r\n-                \"sha256:e5c1502d4ace69a179305abb3f0bb6141cbe4714bc9b31d427329a95acfc8bdd\",\r\n-                \"sha256:edfe077ab09442d4ef3c52cb1f9dab89bff02f4524afc0acf2d46be17dc479f5\",\r\n-                \"sha256:effe5406c9bd748a871dbcaf3ac69167c38d72db8c9baf3ff954c344f31c4cbe\",\r\n-                \"sha256:f0d1e3732768fecb052d90d62b220af62ead5748ac51ef61e7b32c266cac9293\",\r\n-                \"sha256:f5969baeaea61c97efa706b9b107dcba02784b1601c74ac84f2a532ea079403e\",\r\n-                \"sha256:f8888e31e3a85943743f8fc15e71536bda1c81d5aa36d014a3c0c44481d7db6e\",\r\n-                \"sha256:fc52b79d83a3fe3a360902d3f5d79073a993597d48114c29485e9431092905d8\"\r\n+                \"sha256:06435b539f889b1f6f4ac1758871aae42dc3a8c0e24ac9e60c2384973ad73027\",\r\n+                \"sha256:06a81e93cd441c56a9b65d8e1d043daeb97a3d0856d177d5c90ba85acb3db087\",\r\n+                \"sha256:0a55554a2fa0d408816b3b5cedf0045f4b8e1a6065aec45849de2d6f3f8e9786\",\r\n+                \"sha256:0b2b64d2bb6d3fb9112bafa732def486049e63de9618b5843bcdd081d8144cd8\",\r\n+                \"sha256:10955842570876604d404661fbccbc9c7e684caf432c09c715ec38fbae45ae09\",\r\n+                \"sha256:122c7fa62b130ed55f8f285bfd56d5f4b4a5b503609d181f9ad85e55c89f4185\",\r\n+                \"sha256:1ceae2f17a9c33cb48e3263960dc5fc8005351ee19db217e9b1bb15d28c02574\",\r\n+                \"sha256:1d3193f4a680c64b4b6a9115943538edb896edc190f0b222e73761716519268e\",\r\n+                \"sha256:1f79682fbe303db92bc2b1136016a38a42e835d932bab5b3b1bfcfbf0640e519\",\r\n+                \"sha256:2127566c664442652f024c837091890cb1942c30937add288223dc895793f898\",\r\n+                \"sha256:22afcb9f253dac0696b5a4be4a1c0f8762f8239e21b99680099abd9b2b1b2269\",\r\n+                \"sha256:25baf083bf6f6b341f4121c2f3c548875ee6f5339300e08be3f2b2ba1721cdd3\",\r\n+                \"sha256:2e81c7b9c8979ce92ed306c249d46894776a909505d8f5a4ba55b14206e3222f\",\r\n+                \"sha256:3287761bc4ee9e33561a7e058c72ac0938c4f57fe49a09eae428fd88aafe7bb6\",\r\n+                \"sha256:34d1c8da1e78d2e001f363791c98a272bb734000fcef47a491c1e3b0505657a8\",\r\n+                \"sha256:37e55c8e51c236f95b033f6fb391d7d7970ba5fe7ff453dad675e88cf303377a\",\r\n+                \"sha256:3d47fa203a7bd9c5b6cee4736ee84ca03b8ef23193c0d1ca99b5089f72645c73\",\r\n+                \"sha256:3e4d1f6587322d2788836a99c69062fbb091331ec940e02d12d179c1d53e25fc\",\r\n+                \"sha256:42cb296636fcc8b0644486d15c12376cb9fa75443e00fb25de0b8602e64c1714\",\r\n+                \"sha256:45485e01ff4d3630ec0d9617310448a8702f70e9c01906b0d0118bdf9d124cf2\",\r\n+                \"sha256:4a78b2b446bd7c934f5dcedc588903fb2f5eec172f3d29e52a9096a43722adfc\",\r\n+                \"sha256:4ab2fe47fae9e0f9dee8c04187ce5d09f48eabe611be8259444906793ab7cbce\",\r\n+                \"sha256:4d0d1650369165a14e14e1e47b372cfcb31d6ab44e6e33cb2d4e57265290044d\",\r\n+                \"sha256:549a3a73da901d5bc3ce8d24e0600d1fa85524c10287f6004fbab87672bf3e1e\",\r\n+                \"sha256:55086ee1064215781fff39a1af09518bc9255b50d6333f2e4c74ca09fac6a8f6\",\r\n+                \"sha256:572c3763a264ba47b3cf708a44ce965d98555f618ca42c926a9c1616d8f34269\",\r\n+                \"sha256:573f6eac48f4769d667c4442081b1794f52919e7edada77495aaed9236d13a96\",\r\n+                \"sha256:5b4c145409bef602a690e7cfad0a15a55c13320ff7a3ad7ca59c13bb8ba4d45d\",\r\n+                \"sha256:6463effa3186ea09411d50efc7d85360b38d5f09b870c48e4600f63af490e56a\",\r\n+                \"sha256:65f6f63034100ead094b8744b3b97965785388f308a64cf8d7c34f2f2e5be0c4\",\r\n+                \"sha256:663946639d296df6a2bb2aa51b60a2454ca1cb29835324c640dafb5ff2131a77\",\r\n+                \"sha256:6897af51655e3691ff853668779c7bad41579facacf5fd7253b0133308cf000d\",\r\n+                \"sha256:68d1f8a9e9e37c1223b656399be5d6b448dea850bed7d0f87a8311f1ff3dabb0\",\r\n+                \"sha256:6ac7ffc7ad6d040517be39eb591cac5ff87416c2537df6ba3cba3bae290c0fed\",\r\n+                \"sha256:6b3251890fff30ee142c44144871185dbe13b11bab478a88887a639655be1068\",\r\n+                \"sha256:6c4caeef8fa63d06bd437cd4bdcf3ffefe6738fb1b25951440d80dc7df8c03ac\",\r\n+                \"sha256:6ef1d82a3af9d3eecdba2321dc1b3c238245d890843e040e41e470ffa64c3e25\",\r\n+                \"sha256:753f10e867343b4511128c6ed8c82f7bec3bd026875576dfd88483c5c73b2fd8\",\r\n+                \"sha256:7cd13a2e3ddeed6913a65e66e94b51d80a041145a026c27e6bb76c31a853c6ab\",\r\n+                \"sha256:7ed9e526742851e8d5cc9e6cf41427dfc6068d4f5a3bb03659444b4cabf6bc26\",\r\n+                \"sha256:7f04c839ed0b6b98b1a7501a002144b76c18fb1c1850c8b98d458ac269e26ed2\",\r\n+                \"sha256:802fe99cca7457642125a8a88a084cef28ff0cf9407060f7b93dca5aa25480db\",\r\n+                \"sha256:80402cd6ee291dcb72644d6eac93785fe2c8b9cb30893c1af5b8fdd753b9d40f\",\r\n+                \"sha256:8465322196c8b4d7ab6d1e049e4c5cb460d0394da4a27d23cc242fbf0034b6b5\",\r\n+                \"sha256:86216b5cee4b06df986d214f664305142d9c76df9b6512be2738aa72a2048f99\",\r\n+                \"sha256:87d1351268731db79e0f8e745d92493ee2841c974128ef629dc518b937d9194c\",\r\n+                \"sha256:8bdb58ff7ba23002a4c5808d608e4e6c687175724f54a5dade5fa8c67b604e4d\",\r\n+                \"sha256:8c622a5fe39a48f78944a87d4fb8a53ee07344641b0562c540d840748571b811\",\r\n+                \"sha256:8d756e44e94489e49571086ef83b2bb8ce311e730092d2c34ca8f7d925cb20aa\",\r\n+                \"sha256:8f4a014bc36d3c57402e2977dada34f9c12300af536839dc38c0beab8878f38a\",\r\n+                \"sha256:9063e24fdb1e498ab71cb7419e24622516c4a04476b17a2dab57e8baa30d6e03\",\r\n+                \"sha256:90d558489962fd4918143277a773316e56c72da56ec7aa3dc3dbbe20fdfed15b\",\r\n+                \"sha256:923c0c831b7cfcb071580d3f46c4baf50f174be571576556269530f4bbd79d04\",\r\n+                \"sha256:95f2a5796329323b8f0512e09dbb7a1860c46a39da62ecb2324f116fa8fdc85c\",\r\n+                \"sha256:96b02a3dc4381e5494fad39be677abcb5e6634bf7b4fa83a6dd3112607547001\",\r\n+                \"sha256:9f96df6923e21816da7e0ad3fd47dd8f94b2a5ce594e00677c0013018b813458\",\r\n+                \"sha256:a10af20b82360ab00827f916a6058451b723b4e65030c5a18577c8b2de5b3389\",\r\n+                \"sha256:a50aebfa173e157099939b17f18600f72f84eed3049e743b68ad15bd69b6bf99\",\r\n+                \"sha256:a981a536974bbc7a512cf44ed14938cf01030a99e9b3a06dd59578882f06f985\",\r\n+                \"sha256:a9a8e9031d613fd2009c182b69c7b2c1ef8239a0efb1df3f7c8da66d5dd3d537\",\r\n+                \"sha256:ae5f4161f18c61806f411a13b0310bea87f987c7d2ecdbdaad0e94eb2e404238\",\r\n+                \"sha256:aed38f6e4fb3f5d6bf81bfa990a07806be9d83cf7bacef998ab1a9bd660a581f\",\r\n+                \"sha256:b01b88d45a6fcb69667cd6d2f7a9aeb4bf53760d7fc536bf679ec94fe9f3ff3d\",\r\n+                \"sha256:b261ccdec7821281dade748d088bb6e9b69e6d15b30652b74cbbac25e280b796\",\r\n+                \"sha256:b2b0a0c0517616b6869869f8c581d4eb2dd83a4d79e0ebcb7d373ef9956aeb0a\",\r\n+                \"sha256:b4a23f61ce87adf89be746c8a8974fe1c823c891d8f86eb218bb957c924bb143\",\r\n+                \"sha256:bd8f7df7d12c2db9fab40bdd87a7c09b1530128315d047a086fa3ae3435cb3a8\",\r\n+                \"sha256:beb58fe5cdb101e3a055192ac291b7a21e3b7ef4f67fa1d74e331a7f2124341c\",\r\n+                \"sha256:c002b4ffc0be611f0d9da932eb0f704fe2602a9a949d1f738e4c34c75b0863d5\",\r\n+                \"sha256:c083af607d2515612056a31f0a8d9e0fcb5876b7bfc0abad3ecd275bc4ebc2d5\",\r\n+                \"sha256:c180f51afb394e165eafe4ac2936a14bee3eb10debc9d9e4db8958fe36afe711\",\r\n+                \"sha256:c235ebd9baae02f1b77bcea61bce332cb4331dc3617d254df3323aa01ab47bd4\",\r\n+                \"sha256:cd70574b12bb8a4d2aaa0094515df2463cb429d8536cfb6c7ce983246983e5a6\",\r\n+                \"sha256:d0eccceffcb53201b5bfebb52600a5fb483a20b61da9dbc885f8b103cbe7598c\",\r\n+                \"sha256:d965bba47ddeec8cd560687584e88cf699fd28f192ceb452d1d7ee807c5597b7\",\r\n+                \"sha256:db364eca23f876da6f9e16c9da0df51aa4f104a972735574842618b8c6d999d4\",\r\n+                \"sha256:ddbb2551d7e0102e7252db79ba445cdab71b26640817ab1e3e3648dad515003b\",\r\n+                \"sha256:deb6be0ac38ece9ba87dea880e438f25ca3eddfac8b002a2ec3d9183a454e8ae\",\r\n+                \"sha256:e06ed3eb3218bc64786f7db41917d4e686cc4856944f53d5bdf83a6884432e12\",\r\n+                \"sha256:e27ad930a842b4c5eb8ac0016b0a54f5aebbe679340c26101df33424142c143c\",\r\n+                \"sha256:e537484df0d8f426ce2afb2d0f8e1c3d0b114b83f8850e5f2fbea0e797bd82ae\",\r\n+                \"sha256:eb00ed941194665c332bf8e078baf037d6c35d7c4f3102ea2d4f16ca94a26dc8\",\r\n+                \"sha256:eb6904c354526e758fda7167b33005998fb68c46fbc10e013ca97f21ca5c8887\",\r\n+                \"sha256:eb8821e09e916165e160797a6c17edda0679379a4be5c716c260e836e122f54b\",\r\n+                \"sha256:efcb3f6676480691518c177e3b465bcddf57cea040302f9f4e6e191af91174d4\",\r\n+                \"sha256:f27273b60488abe721a075bcca6d7f3964f9f6f067c8c4c605743023d7d3944f\",\r\n+                \"sha256:f30c3cb33b24454a82faecaf01b19c18562b1e89558fb6c56de4d9118a032fd5\",\r\n+                \"sha256:fb69256e180cb6c8a894fee62b3afebae785babc1ee98b81cdf68bbca1987f33\",\r\n+                \"sha256:fd1abc0d89e30cc4e02e4064dc67fcc51bd941eb395c502aac3ec19fab46b519\",\r\n+                \"sha256:ff8fa367d09b717b2a17a052544193ad76cd49979c805768879cb63d9ca50561\"\r\n             ],\r\n             \"markers\": \"python_full_version >= '3.7.0'\",\r\n-            \"version\": \"==3.3.0\"\r\n+            \"version\": \"==3.3.2\"\r\n         },\r\n         \"click\": {\r\n             \"hashes\": [\r\n@@ -228,14 +228,6 @@\r\n             \"markers\": \"python_version >= '3.6'\",\r\n             \"version\": \"==8.0.3\"\r\n         },\r\n-        \"click-default-group\": {\r\n-            \"hashes\": [\r\n-                \"sha256:9b60486923720e7fc61731bdb32b617039aba820e22e1c88766b1125592eaa5f\",\r\n-                \"sha256:eb3f3c99ec0d456ca6cd2a7f08f7d4e91771bef51b01bdd9580cc6450fe1251e\"\r\n-            ],\r\n-            \"markers\": \"python_version >= '2.7'\",\r\n-            \"version\": \"==1.2.4\"\r\n-        },\r\n         \"colorama\": {\r\n             \"hashes\": [\r\n                 \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\",\r\n@@ -339,11 +331,11 @@\r\n         },\r\n         \"filelock\": {\r\n             \"hashes\": [\r\n-                \"sha256:08c21d87ded6e2b9da6728c3dff51baf1dcecf973b768ef35bcbc3447edb9ad4\",\r\n-                \"sha256:2e6f249f1f3654291606e046b09f1fd5eac39b360664c27f5aad072012f8bcbd\"\r\n+                \"sha256:521f5f56c50f8426f5e03ad3b281b490a87ef15bc6c526f168290f0c7148d44e\",\r\n+                \"sha256:57dbda9b35157b05fb3e58ee91448612eb674172fab98ee235ccb0b5bee19a1c\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.8'\",\r\n-            \"version\": \"==3.12.4\"\r\n+            \"version\": \"==3.13.1\"\r\n         },\r\n         \"flake8\": {\r\n             \"hashes\": [\r\n@@ -369,19 +361,19 @@\r\n         },\r\n         \"identify\": {\r\n             \"hashes\": [\r\n-                \"sha256:afe67f26ae29bab007ec21b03d4114f41316ab9dd15aa8736a167481e108da54\",\r\n-                \"sha256:f302a4256a15c849b91cfcdcec052a8ce914634b2f77ae87dad29cd749f2d88d\"\r\n+                \"sha256:0b7656ef6cba81664b783352c73f8c24b39cf82f926f78f4550eda928e5e0545\",\r\n+                \"sha256:5d9979348ec1a21c768ae07e0a652924538e8bce67313a73cb0f681cf08ba407\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.8'\",\r\n-            \"version\": \"==2.5.30\"\r\n+            \"version\": \"==2.5.32\"\r\n         },\r\n         \"idna\": {\r\n             \"hashes\": [\r\n-                \"sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4\",\r\n-                \"sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2\"\r\n+                \"sha256:9ecdbbd083b06798ae1e86adcbfe8ab1479cf864e4ee30fe4e46a003d12491ca\",\r\n+                \"sha256:c05567e9c24a6b9faaa835c4821bad0590fbb9d5779e7caa6e1cc4978e7eb24f\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.5'\",\r\n-            \"version\": \"==3.4\"\r\n+            \"version\": \"==3.6\"\r\n         },\r\n         \"imagesize\": {\r\n             \"hashes\": [\r\n@@ -441,11 +433,11 @@\r\n         },\r\n         \"keyring\": {\r\n             \"hashes\": [\r\n-                \"sha256:4901caaf597bfd3bbd78c9a0c7c4c29fcd8310dab2cffefe749e916b6527acd6\",\r\n-                \"sha256:ca0746a19ec421219f4d713f848fa297a661a8a8c1504867e55bfb5e09091509\"\r\n+                \"sha256:4446d35d636e6a10b8bce7caa66913dd9eca5fd222ca03a3d42c38608ac30836\",\r\n+                \"sha256:e730ecffd309658a08ee82535a3b5ec4b4c8669a9be11efb66249d8e0aeb9a25\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.8'\",\r\n-            \"version\": \"==24.2.0\"\r\n+            \"version\": \"==24.3.0\"\r\n         },\r\n         \"linkify-it-py\": {\r\n             \"hashes\": [\r\n@@ -624,11 +616,11 @@\r\n         },\r\n         \"parse\": {\r\n             \"hashes\": [\r\n-                \"sha256:371ed3800dc63983832159cc9373156613947707bc448b5215473a219dbd4362\",\r\n-                \"sha256:cc3a47236ff05da377617ddefa867b7ba983819c664e1afe46249e5b469be464\"\r\n+                \"sha256:5e171b001452fa9f004c5a58a93525175468daf69b493e9fa915347ed7ff6968\",\r\n+                \"sha256:bd28bae37714b45d5894d77160a16e2be36b64a3b618c81168b3684676aa498b\"\r\n             ],\r\n             \"index\": \"pypi\",\r\n-            \"version\": \"==1.19.1\"\r\n+            \"version\": \"==1.20.0\"\r\n         },\r\n         \"parver\": {\r\n             \"hashes\": [\r\n@@ -647,11 +639,11 @@\r\n         },\r\n         \"pip\": {\r\n             \"hashes\": [\r\n-                \"sha256:bb7d4f69f488432e4e96394612f43ab43dd478d073ef7422604a570f7157561e\",\r\n-                \"sha256:bc38bb52bc286514f8f7cb3a1ba5ed100b76aaef29b521d48574329331c5ae7b\"\r\n+                \"sha256:1fcaa041308d01f14575f6d0d2ea4b75a3e2871fe4f9c694976f908768e14174\",\r\n+                \"sha256:55eb67bb6171d37447e82213be585b75fe2b12b359e993773aca4de9247a052b\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==23.3\"\r\n+            \"version\": \"==23.3.1\"\r\n         },\r\n         \"pipenv\": {\r\n             \"editable\": true,\r\n@@ -671,11 +663,11 @@\r\n         },\r\n         \"platformdirs\": {\r\n             \"hashes\": [\r\n-                \"sha256:cf8ee52a3afdb965072dcc652433e0c7e3e40cf5ea1477cd4b3b1d2eb75495b3\",\r\n-                \"sha256:e9d171d00af68be50e9202731309c4e658fd8bc76f55c11c7dd760d023bda68e\"\r\n+                \"sha256:118c954d7e949b35437270383a3f2531e99dd93cf7ce4dc8340d3356d30f173b\",\r\n+                \"sha256:cb633b2bcf10c51af60beb0ab06d2f1d69064b43abf4c185ca6b28865f3f9731\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==3.11.0\"\r\n+            \"version\": \"==4.0.0\"\r\n         },\r\n         \"pluggy\": {\r\n             \"hashes\": [\r\n@@ -722,11 +714,11 @@\r\n         },\r\n         \"pygments\": {\r\n             \"hashes\": [\r\n-                \"sha256:13fc09fa63bc8d8671a6d247e1eb303c4b343eaee81d861f3404db2935653692\",\r\n-                \"sha256:1daff0494820c69bc8941e407aa20f577374ee88364ee10a98fdbe0aece96e29\"\r\n+                \"sha256:b27c2826c47d0f3219f29554824c30c5e8945175d888647acd804ddd04af846c\",\r\n+                \"sha256:da46cec9fd2de5be3a8a784f434e4c4ab670b4ff54d605c4c2717e9d49c4c367\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==2.16.1\"\r\n+            \"version\": \"==2.17.2\"\r\n         },\r\n         \"pypiserver\": {\r\n             \"hashes\": [\r\n@@ -747,11 +739,11 @@\r\n         },\r\n         \"pytest\": {\r\n             \"hashes\": [\r\n-                \"sha256:1d881c6124e08ff0a1bb75ba3ec0bfd8b5354a01c194ddd5a0a870a48d99b002\",\r\n-                \"sha256:a766259cfab564a2ad52cb1aae1b881a75c3eb7e34ca3779697c23ed47c47069\"\r\n+                \"sha256:0d009c083ea859a71b76adf7c1d502e4bc170b80a8ef002da5806527b9591fac\",\r\n+                \"sha256:d989d136982de4e3b29dabcc838ad581c64e8ed52c11fbe86ddebd9da0818cd5\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==7.4.2\"\r\n+            \"version\": \"==7.4.3\"\r\n         },\r\n         \"pytest-cov\": {\r\n             \"hashes\": [\r\n@@ -771,10 +763,10 @@\r\n         },\r\n         \"pytest-xdist\": {\r\n             \"hashes\": [\r\n-                \"sha256:d5ee0520eb1b7bcca50a60a518ab7a7707992812c578198f8b44fdfac78e8c93\",\r\n-                \"sha256:ff9daa7793569e6a68544850fd3927cd257cc03a7ef76c95e86915355e82b5f2\"\r\n+                \"sha256:cbb36f3d67e0c478baa57fa4edc8843887e0f6cfc42d677530a36d7472b32d8a\",\r\n+                \"sha256:d075629c7e00b611df89f490a5063944bee7a4362a5ff11c7cc7824a03dfce24\"\r\n             ],\r\n-            \"version\": \"==3.3.1\"\r\n+            \"version\": \"==3.5.0\"\r\n         },\r\n         \"pywin32-ctypes\": {\r\n             \"hashes\": [\r\n@@ -875,19 +867,19 @@\r\n         },\r\n         \"rich\": {\r\n             \"hashes\": [\r\n-                \"sha256:2b38e2fe9ca72c9a00170a1a2d20c63c790d0e10ef1fe35eba76e1e7b1d7d245\",\r\n-                \"sha256:5c14d22737e6d5084ef4771b62d5d4363165b403455a30a1c8ca39dc7b644bef\"\r\n+                \"sha256:5cb5123b5cf9ee70584244246816e9114227e0b98ad9176eede6ad54bf5403fa\",\r\n+                \"sha256:6da14c108c4866ee9520bbffa71f6fe3962e193b7da68720583850cd4548e235\"\r\n             ],\r\n             \"markers\": \"python_full_version >= '3.7.0'\",\r\n-            \"version\": \"==13.6.0\"\r\n+            \"version\": \"==13.7.0\"\r\n         },\r\n         \"setuptools\": {\r\n             \"hashes\": [\r\n-                \"sha256:4ac1475276d2f1c48684874089fefcd83bd7162ddaafb81fac866ba0db282a87\",\r\n-                \"sha256:b454a35605876da60632df1a60f736524eb73cc47bbc9f3f1ef1b644de74fd2a\"\r\n+                \"sha256:1e8fdff6797d3865f37397be788a4e3cba233608e9b509382a2777d25ebde7f2\",\r\n+                \"sha256:735896e78a4742605974de002ac60562d286fa8051a7e2299445e8e8fbb01aa6\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.8'\",\r\n-            \"version\": \"==68.2.2\"\r\n+            \"version\": \"==69.0.2\"\r\n         },\r\n         \"snowballstemmer\": {\r\n             \"hashes\": [\r\n@@ -985,21 +977,12 @@\r\n             ],\r\n             \"version\": \"==0.10.0\"\r\n         },\r\n-        \"tomli\": {\r\n-            \"hashes\": [\r\n-                \"sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc\",\r\n-                \"sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f\"\r\n-            ],\r\n-            \"index\": \"pypi\",\r\n-            \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==2.0.1\"\r\n-        },\r\n         \"towncrier\": {\r\n             \"hashes\": [\r\n-                \"sha256:da552f29192b3c2b04d630133f194c98e9f14f0558669d427708e203fea4d0a5\",\r\n-                \"sha256:fc29bd5ab4727c8dacfbe636f7fb5dc53b99805b62da1c96b214836159ff70c1\"\r\n+                \"sha256:13937c247e3f8ae20ac44d895cf5f96a60ad46cfdcc1671759530d7837d9ee5d\",\r\n+                \"sha256:2e519ca619426d189e3c98c99558fe8be50c9ced13ea1fc20a4a353a95d2ded7\"\r\n             ],\r\n-            \"version\": \"==23.6.0\"\r\n+            \"version\": \"==23.11.0\"\r\n         },\r\n         \"twine\": {\r\n             \"hashes\": [\r\n@@ -1012,12 +995,12 @@\r\n         },\r\n         \"typing-extensions\": {\r\n             \"hashes\": [\r\n-                \"sha256:8f92fc8806f9a6b641eaa5318da32b44d401efaac0f6678c9bc448ba3605faa0\",\r\n-                \"sha256:df8e4339e9cb77357558cbdbceca33c303714cf861d1eef15e1070055ae8b7ef\"\r\n+                \"sha256:56a8f7a8776ea160e59ef0af6fc3a3a03b7d42156b90e47f0241515fcec620c2\",\r\n+                \"sha256:cc22327e22d9b583d1565ce1ed9f5ecc22831afa743f8789a403cad849fb702b\"\r\n             ],\r\n             \"index\": \"pypi\",\r\n             \"markers\": \"python_version >= '3.8'\",\r\n-            \"version\": \"==4.8.0\"\r\n+            \"version\": \"==4.9.0rc1\"\r\n         },\r\n         \"uc-micro-py\": {\r\n             \"hashes\": [\r\n@@ -1029,19 +1012,19 @@\r\n         },\r\n         \"urllib3\": {\r\n             \"hashes\": [\r\n-                \"sha256:c97dfde1f7bd43a71c8d2a58e369e9b2bf692d1334ea9f9cae55add7d0dd0f84\",\r\n-                \"sha256:fdb6d215c776278489906c2f8916e6e7d4f5a9b602ccbcfdf7f016fc8da0596e\"\r\n+                \"sha256:55901e917a5896a349ff771be919f8bd99aff50b79fe58fec595eb37bbc56bb3\",\r\n+                \"sha256:df7aa8afb0148fa78488e7899b2c59b5f4ffcfa82e6c54ccb9dd37c1d7b52d54\"\r\n             ],\r\n-            \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==2.0.7\"\r\n+            \"markers\": \"python_version >= '3.8'\",\r\n+            \"version\": \"==2.1.0\"\r\n         },\r\n         \"virtualenv\": {\r\n             \"hashes\": [\r\n-                \"sha256:b80039f280f4919c77b30f1c23294ae357c4c8701042086e3fc005963e4e537b\",\r\n-                \"sha256:e8361967f6da6fbdf1426483bfe9fca8287c242ac0bc30429905721cefbff752\"\r\n+                \"sha256:69050ffb42419c91f6c1284a7b24e0475d793447e35929b488bf6a0aade39353\",\r\n+                \"sha256:a18b3fd0314ca59a2e9f4b556819ed07183b3e9a3702ecfe213f593d44f7b3fd\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==20.24.5\"\r\n+            \"version\": \"==20.24.7\"\r\n         },\r\n         \"waitress\": {\r\n             \"hashes\": [\r\n```\r\n\r\n### The fix (with this change)\r\n`$ pipenv  uninstall tomli --categories=develop`\r\n\r\n```\r\n$ git diff\r\ndiff --git a/Pipfile b/Pipfile\r\nindex fa27de08..21799786 100644\r\n--- a/Pipfile\r\n+++ b/Pipfile\r\n@@ -24,7 +24,6 @@ colorama= {version = \"*\", sys_platform = \"== 'win32'\"}\r\n myst-parser = {extras = [\"linkify\"], version = \"*\"}\r\n invoke = \"==2.0.0\"\r\n exceptiongroup = \"==1.1.0\"\r\n-tomli = \"*\"\r\n pyyaml = \"==6.0.1\"\r\n build = \"*\"\r\n twine = \"*\"\r\ndiff --git a/Pipfile.lock b/Pipfile.lock\r\nindex 861d9132..353fa2a8 100644\r\n--- a/Pipfile.lock\r\n+++ b/Pipfile.lock\r\n@@ -1,7 +1,7 @@\r\n {\r\n     \"_meta\": {\r\n         \"hash\": {\r\n-            \"sha256\": \"4d1a9f3599cadad8b7884cd1143a964290191e9ee6a2ebf7acec9e6e27f2a69e\"\r\n+            \"sha256\": \"d7cdc853e6e34c10abbcd19a0c79905a61d12d50233e5b13259ecf3331ddde04\"\r\n         },\r\n         \"pipfile-spec\": 6,\r\n         \"requires\": {},\r\n@@ -228,14 +228,6 @@\r\n             \"markers\": \"python_version >= '3.6'\",\r\n             \"version\": \"==8.0.3\"\r\n         },\r\n-        \"click-default-group\": {\r\n-            \"hashes\": [\r\n-                \"sha256:9b60486923720e7fc61731bdb32b617039aba820e22e1c88766b1125592eaa5f\",\r\n-                \"sha256:eb3f3c99ec0d456ca6cd2a7f08f7d4e91771bef51b01bdd9580cc6450fe1251e\"\r\n-            ],\r\n-            \"markers\": \"python_version >= '2.7'\",\r\n-            \"version\": \"==1.2.4\"\r\n-        },\r\n         \"colorama\": {\r\n             \"hashes\": [\r\n                 \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\",\r\n@@ -985,15 +977,6 @@\r\n             ],\r\n             \"version\": \"==0.10.0\"\r\n         },\r\n-        \"tomli\": {\r\n-            \"hashes\": [\r\n-                \"sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc\",\r\n-                \"sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f\"\r\n-            ],\r\n-            \"index\": \"pypi\",\r\n-            \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==2.0.1\"\r\n-        },\r\n         \"towncrier\": {\r\n             \"hashes\": [\r\n                 \"sha256:da552f29192b3c2b04d630133f194c98e9f14f0558669d427708e203fea4d0a5\",\r\n```\r\n\r\nMy take is if you want to lock you can run `pipenv lock` if you want to uninstall something, you probably want this behavior.\r\n\r\nFixes #6030\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "smarter-uninstall",
    "is_a_fork": false,
    "comments": [
      "News snippet is still missing."
    ],
    "commit_messages": [
      "Smarter uninstall (#6029)\n\n* Initial take at making uninstall like the inverse of upgrade.\r\n* Updates based on testing the uninstall command\r\n* Handle pre flag\r\n* Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128d44ee515ce6a4ea24",
    "number": 6025,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #6015 \r\n\r\n### The fix\r\n\r\nBy changing the release creation action from the archived, no longer receiving updates version to a new, updated and working version.  The [releases look the same as here](https://github.com/stumpylog/pipenv/releases) with the new version.  All the actions run without warnings now:\r\n- CI: https://github.com/stumpylog/pipenv/actions/runs/6960511112\r\n- Upload: https://github.com/stumpylog/pipenv/actions/runs/6960554210\r\nObviously with failures as I can't push to PyPi, but it gets far enough to see no warnings\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\nNot sure a simple update like this is worth of a news fragment?\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #6025 from stumpylog/main\n\nChore: Resolve CI deprecation warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128e44ee515ce6a4ea25",
    "number": 6024,
    "body": "### The issue\r\n\r\nWe've been getting reports in Dependabot about Dependabot failing to run pipenv with the following error:\r\n\r\n```\r\nAttributeError: 'Null' object has no attribute '_trivia'. Did you mean: 'trivia'?\r\n```\r\n\r\nThat sounds like the following issue in tomlkit: https://github.com/sdispater/tomlkit/issues/313.\r\n\r\nThe fix for that got released as tomlkit 0.12.3.\r\n\r\nThis is why we'd like an update of the vendored tomlkit version.\r\n\r\n### The fix\r\n\r\nThe fix is to bump vendored tomlkit to 0.12.3.\r\n\r\nI generated this patch with:\r\n\r\n```\r\n$ pip install -t . tomlkit==0.12.3 --upgrade\r\n$ rm -rf tomlkit-0.12.3.dist-info\r\n```\r\n\r\nfrom pipenv/vendor folder.\r\n\r\nThen seearch and replace `from tomlkit` with `from pipenv.vendor.tomlkit`, and restore the LICENSE file that got removed for some reason.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\nNOTE: I'm sorry for submitting a patch to update a vendor directory, I only read the note about patches to `vendor` directory after I had written the PR and the PR body.\r\n\r\nI'm going to still create the PR because:\r\n\r\n* I don't think this applies to the first note about raising issues to the upstream project instead, because this is already fixed and released upstream\r\n\r\n* I'm going to tentatively tag \"preventing pipenv from crashing\" as a good reason. We're getting quite a lot of internal errors that I believe are linked to this problem.\r\n\r\nIf this is still not a good idea, I apologize and I'll refrain from future similar patches.",
    "head_branch": "vendor-latest-tomlkit",
    "is_a_fork": true,
    "comments": [
      "Oops, bad autoclose.\r\n\r\nJust taking the chance to note that Dependabot is now running this patch. If we find any issues with this upgrade, we'll report them here 👍.\r\n\r\n",
      "How was the vendored?  The reason I asks is I don't see an update to the vendor.txt so next time we re-vendor something these changes would get overwritten.",
      "Hei! Thanks for your comment. I explained the process I follow to update the vendored dependency in the PR body:\r\n\r\n> I generated this patch with:\r\n\r\n> ```\r\n> $ pip install -t . tomlkit==0.12.3 --upgrade\r\n> $ rm -rf tomlkit-0.12.3.dist-info\r\n> ```\r\n\r\n> from pipenv/vendor folder.\r\n\r\n> Then seearch and replace `from tomlkit` with `from pipenv.vendor.tomlkit`, and restore the > LICENSE file that got removed for some reason.\r\n\r\nHappy to get guidance on the correct way to do it, or just close this PR altogether and let you handle it, just let me know.\r\n\r\nBy the way, we've been running the upgrade for a few days now. No related user reports so far and the error rates have dropped considerably, so the new version of tomlkit seems good 👍.",
      "I pushed an update to `vendor.txt` in case that's the only thing I was missing.",
      "@deivid-rodriguez to be sure it has the right imports and everything, can you run `invoke vendoring.update --package=\"tomlkit==0.12.3\"`?\r\n\r\nExample:\r\n\r\n```\r\npipenv) matteius@matteius-VirtualBox:~/pipenv$ invoke vendoring.update --package=\"tomlkit==0.12.3\"\r\n[vendoring.update] Using vendor dir: /home/matteius/pipenv/pipenv/vendor\r\n[vendoring.update] Reinstalling vendored libraries\r\n[vendoring.update] Using requirements file: -r /home/matteius/pipenv/pipenv/vendor/vendor.txt\r\n[vendoring.update] using requirements file: /home/matteius/pipenv/pipenv/vendor/vendor.txt\r\n[vendoring.update] Matched req: 'tomlkit==0.12.3'\r\nCollecting tomlkit==0.12.3\r\n  Downloading tomlkit-0.12.3-py3-none-any.whl.metadata (2.7 kB)\r\nDownloading tomlkit-0.12.3-py3-none-any.whl (37 kB)\r\nInstalling collected packages: tomlkit\r\nSuccessfully installed tomlkit-0.12.3\r\n[vendoring.update] Running post-install cleanup...\r\n[vendoring.update] Removing unused modules and files ...\r\n[vendoring.update] Detected vendored libraries: safety, markupsafe, ruamel, tomli, tomlkit, click, dparse, shellingham, pexpect, colorama, pydantic, ptyprocess, dotenv, plette, pythonfinder, click_didyoumean, pipdeptree, pip, requests, packaging, pkg_resources, pyparsing, ruamel.yaml, urllib3\r\n[vendoring.update] Applying pre-patches...\r\n[vendoring.update] Removing scandir library files...\r\n[vendoring.update] Renaming specified libs...\r\n[vendoring.update] Rewriting imports for /home/matteius/pipenv/pipenv/vendor/tomlkit...\r\n[vendoring.update] Downloading licenses\r\n[vendoring.update] ['tomlkit==0.12.3']\r\nCollecting flit\r\n  Downloading flit-3.9.0-py3-none-any.whl.metadata (3.7 kB)\r\nCollecting flit_core>=3.9.0 (from flit)\r\n  Downloading flit_core-3.9.0-py3-none-any.whl.metadata (822 bytes)\r\nRequirement already satisfied: requests in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from flit) (2.31.0)\r\nRequirement already satisfied: docutils in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from flit) (0.17.1)\r\nCollecting tomli-w (from flit)\r\n  Downloading tomli_w-1.0.0-py3-none-any.whl (6.0 kB)\r\nRequirement already satisfied: charset-normalizer<4,>=2 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from requests->flit) (3.3.0)\r\nRequirement already satisfied: idna<4,>=2.5 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from requests->flit) (3.4)\r\nRequirement already satisfied: urllib3<3,>=1.21.1 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from requests->flit) (2.0.7)\r\nRequirement already satisfied: certifi>=2017.4.17 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from requests->flit) (2023.7.22)\r\nDownloading flit-3.9.0-py3-none-any.whl (49 kB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 49.9/49.9 kB 866.1 kB/s eta 0:00:00\r\nDownloading flit_core-3.9.0-py3-none-any.whl (63 kB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 63.1/63.1 kB 2.6 MB/s eta 0:00:00\r\nInstalling collected packages: tomli-w, flit_core, flit\r\nSuccessfully installed flit-3.9.0 flit_core-3.9.0 tomli-w-1.0.0\r\nCollecting tomlkit==0.12.3\r\n  Downloading tomlkit-0.12.3.tar.gz (190 kB)\r\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 191.0/191.0 kB 1.8 MB/s eta 0:00:00\r\n  Preparing metadata (pyproject.toml): started\r\n  Preparing metadata (pyproject.toml): finished with status 'done'\r\nERROR: Exception:\r\nTraceback (most recent call last):\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/cli/base_command.py\", line 180, in exc_logging_wrapper\r\n    status = run_func(*args)\r\n             ^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/cli/req_command.py\", line 245, in wrapper\r\n    return func(self, options, args)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/commands/download.py\", line 132, in run\r\n    requirement_set = resolver.resolve(reqs, check_supported_wheels=True)\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/resolver.py\", line 95, in resolve\r\n    result = self._result = resolver.resolve(\r\n                            ^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_vendor/resolvelib/resolvers.py\", line 546, in resolve\r\n    state = resolution.resolve(requirements, max_rounds=max_rounds)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_vendor/resolvelib/resolvers.py\", line 397, in resolve\r\n    self._add_to_criteria(self.state.criteria, r, parent=None)\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_vendor/resolvelib/resolvers.py\", line 173, in _add_to_criteria\r\n    if not criterion.candidates:\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_vendor/resolvelib/structs.py\", line 156, in __bool__\r\n    return bool(self._sequence)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/found_candidates.py\", line 155, in __bool__\r\n    return any(self)\r\n           ^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/found_candidates.py\", line 143, in <genexpr>\r\n    return (c for c in iterator if id(c) not in self._incompatible_ids)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/found_candidates.py\", line 47, in _iter_built\r\n    candidate = func()\r\n                ^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/factory.py\", line 211, in _make_candidate_from_link\r\n    self._link_candidate_cache[link] = LinkCandidate(\r\n                                       ^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/candidates.py\", line 293, in __init__\r\n    super().__init__(\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/candidates.py\", line 156, in __init__\r\n    self.dist = self._prepare()\r\n                ^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/candidates.py\", line 225, in _prepare\r\n    dist = self._prepare_distribution()\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/candidates.py\", line 304, in _prepare_distribution\r\n    return preparer.prepare_linked_requirement(self._ireq, parallel_builds=True)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/operations/prepare.py\", line 525, in prepare_linked_requirement\r\n    return self._prepare_linked_requirement(req, parallel_builds)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/operations/prepare.py\", line 640, in _prepare_linked_requirement\r\n    dist = _get_prepared_distribution(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/operations/prepare.py\", line 71, in _get_prepared_distribution\r\n    abstract_dist.prepare_distribution_metadata(\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/distributions/sdist.py\", line 67, in prepare_distribution_metadata\r\n    self.req.prepare_metadata()\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/req/req_install.py\", line 577, in prepare_metadata\r\n    self.metadata_directory = generate_metadata(\r\n                              ^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/operations/build/metadata.py\", line 35, in generate_metadata\r\n    distinfo_dir = backend.prepare_metadata_for_build_wheel(metadata_dir)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_internal/utils/misc.py\", line 772, in prepare_metadata_for_build_wheel\r\n    return super().prepare_metadata_for_build_wheel(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_impl.py\", line 186, in prepare_metadata_for_build_wheel\r\n    return self._call_hook('prepare_metadata_for_build_wheel', {\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_impl.py\", line 321, in _call_hook\r\n    raise BackendUnavailable(data.get('traceback', ''))\r\npip._vendor.pyproject_hooks._impl.BackendUnavailable: Traceback (most recent call last):\r\n  File \"/home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 77, in _build_backend\r\n    obj = import_module(mod_path)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib/python3.11/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"<frozen importlib._bootstrap>\", line 1204, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1176, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1126, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 1204, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1176, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1126, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 1204, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1176, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1126, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 1204, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1176, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1140, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'poetry'\r\n\r\nCollecting poetry\r\n  Downloading poetry-1.7.1-py3-none-any.whl.metadata (6.8 kB)\r\nRequirement already satisfied: build<2.0.0,>=1.0.3 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from poetry) (1.0.3)\r\nCollecting cachecontrol<0.14.0,>=0.13.0 (from cachecontrol[filecache]<0.14.0,>=0.13.0->poetry)\r\n  Downloading cachecontrol-0.13.1-py3-none-any.whl.metadata (3.0 kB)\r\nCollecting cleo<3.0.0,>=2.1.0 (from poetry)\r\n  Downloading cleo-2.1.0-py3-none-any.whl.metadata (12 kB)\r\nCollecting crashtest<0.5.0,>=0.4.1 (from poetry)\r\n  Downloading crashtest-0.4.1-py3-none-any.whl (7.6 kB)\r\nCollecting dulwich<0.22.0,>=0.21.2 (from poetry)\r\n  Downloading dulwich-0.21.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.3 kB)\r\nCollecting fastjsonschema<3.0.0,>=2.18.0 (from poetry)\r\n  Using cached fastjsonschema-2.19.0-py3-none-any.whl.metadata (2.0 kB)\r\nCollecting installer<0.8.0,>=0.7.0 (from poetry)\r\n  Downloading installer-0.7.0-py3-none-any.whl (453 kB)\r\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 453.8/453.8 kB 3.2 MB/s eta 0:00:00\r\nRequirement already satisfied: keyring<25.0.0,>=24.0.0 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from poetry) (24.2.0)\r\nRequirement already satisfied: packaging>=20.5 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from poetry) (23.2)\r\nCollecting pexpect<5.0.0,>=4.7.0 (from poetry)\r\n  Downloading pexpect-4.9.0-py2.py3-none-any.whl.metadata (2.5 kB)\r\nRequirement already satisfied: pkginfo<2.0.0,>=1.9.4 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from poetry) (1.9.6)\r\nRequirement already satisfied: platformdirs<4.0.0,>=3.0.0 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from poetry) (3.11.0)\r\nCollecting poetry-core==1.8.1 (from poetry)\r\n  Using cached poetry_core-1.8.1-py3-none-any.whl.metadata (3.5 kB)\r\nCollecting poetry-plugin-export<2.0.0,>=1.6.0 (from poetry)\r\n  Downloading poetry_plugin_export-1.6.0-py3-none-any.whl.metadata (2.8 kB)\r\nRequirement already satisfied: pyproject-hooks<2.0.0,>=1.0.0 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from poetry) (1.0.0)\r\nRequirement already satisfied: requests<3.0,>=2.26 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from poetry) (2.31.0)\r\nRequirement already satisfied: requests-toolbelt<2,>=0.9.1 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from poetry) (1.0.0)\r\nCollecting shellingham<2.0,>=1.5 (from poetry)\r\n  Downloading shellingham-1.5.4-py2.py3-none-any.whl.metadata (3.5 kB)\r\nCollecting tomlkit<1.0.0,>=0.11.4 (from poetry)\r\n  Using cached tomlkit-0.12.3-py3-none-any.whl.metadata (2.7 kB)\r\nCollecting trove-classifiers>=2022.5.19 (from poetry)\r\n  Downloading trove_classifiers-2023.11.29-py3-none-any.whl.metadata (2.2 kB)\r\nRequirement already satisfied: virtualenv<21.0.0,>=20.23.0 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from poetry) (20.24.5)\r\nCollecting msgpack>=0.5.2 (from cachecontrol<0.14.0,>=0.13.0->cachecontrol[filecache]<0.14.0,>=0.13.0->poetry)\r\n  Downloading msgpack-1.0.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.1 kB)\r\nRequirement already satisfied: filelock>=3.8.0 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from cachecontrol[filecache]<0.14.0,>=0.13.0->poetry) (3.12.4)\r\nCollecting rapidfuzz<4.0.0,>=3.0.0 (from cleo<3.0.0,>=2.1.0->poetry)\r\n  Downloading rapidfuzz-3.5.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\r\nRequirement already satisfied: urllib3>=1.25 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from dulwich<0.22.0,>=0.21.2->poetry) (2.0.7)\r\nRequirement already satisfied: jaraco.classes in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from keyring<25.0.0,>=24.0.0->poetry) (3.3.0)\r\nRequirement already satisfied: importlib-metadata>=4.11.4 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from keyring<25.0.0,>=24.0.0->poetry) (6.8.0)\r\nCollecting SecretStorage>=3.2 (from keyring<25.0.0,>=24.0.0->poetry)\r\n  Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\r\nCollecting jeepney>=0.4.2 (from keyring<25.0.0,>=24.0.0->poetry)\r\n  Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\r\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 48.4/48.4 kB 4.2 MB/s eta 0:00:00\r\nCollecting ptyprocess>=0.5 (from pexpect<5.0.0,>=4.7.0->poetry)\r\n  Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\r\nRequirement already satisfied: charset-normalizer<4,>=2 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from requests<3.0,>=2.26->poetry) (3.3.0)\r\nRequirement already satisfied: idna<4,>=2.5 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from requests<3.0,>=2.26->poetry) (3.4)\r\nRequirement already satisfied: certifi>=2017.4.17 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from requests<3.0,>=2.26->poetry) (2023.7.22)\r\nRequirement already satisfied: distlib<1,>=0.3.7 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from virtualenv<21.0.0,>=20.23.0->poetry) (0.3.7)\r\nCollecting zipp>=0.5 (from importlib-metadata>=4.11.4->keyring<25.0.0,>=24.0.0->poetry)\r\n  Downloading zipp-3.17.0-py3-none-any.whl.metadata (3.7 kB)\r\nCollecting cryptography>=2.0 (from SecretStorage>=3.2->keyring<25.0.0,>=24.0.0->poetry)\r\n  Downloading cryptography-41.0.7-cp37-abi3-manylinux_2_28_x86_64.whl.metadata (5.2 kB)\r\nRequirement already satisfied: more-itertools in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from jaraco.classes->keyring<25.0.0,>=24.0.0->poetry) (10.1.0)\r\nCollecting cffi>=1.12 (from cryptography>=2.0->SecretStorage>=3.2->keyring<25.0.0,>=24.0.0->poetry)\r\n  Downloading cffi-1.16.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.5 kB)\r\nCollecting pycparser (from cffi>=1.12->cryptography>=2.0->SecretStorage>=3.2->keyring<25.0.0,>=24.0.0->poetry)\r\n  Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\r\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 118.7/118.7 kB 8.4 MB/s eta 0:00:00\r\nDownloading poetry-1.7.1-py3-none-any.whl (235 kB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 236.0/236.0 kB 10.3 MB/s eta 0:00:00\r\nUsing cached poetry_core-1.8.1-py3-none-any.whl (306 kB)\r\nDownloading cachecontrol-0.13.1-py3-none-any.whl (22 kB)\r\nDownloading cleo-2.1.0-py3-none-any.whl (78 kB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 78.7/78.7 kB 6.5 MB/s eta 0:00:00\r\nDownloading dulwich-0.21.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (513 kB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 513.8/513.8 kB 10.1 MB/s eta 0:00:00\r\nUsing cached fastjsonschema-2.19.0-py3-none-any.whl (23 kB)\r\nDownloading pexpect-4.9.0-py2.py3-none-any.whl (63 kB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 63.8/63.8 kB 7.3 MB/s eta 0:00:00\r\nDownloading poetry_plugin_export-1.6.0-py3-none-any.whl (10 kB)\r\nDownloading shellingham-1.5.4-py2.py3-none-any.whl (9.8 kB)\r\nUsing cached tomlkit-0.12.3-py3-none-any.whl (37 kB)\r\nDownloading trove_classifiers-2023.11.29-py3-none-any.whl (13 kB)\r\nDownloading msgpack-1.0.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (557 kB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 558.0/558.0 kB 17.7 MB/s eta 0:00:00\r\nDownloading rapidfuzz-3.5.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.3 MB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.3/3.3 MB 24.1 MB/s eta 0:00:00\r\nDownloading cryptography-41.0.7-cp37-abi3-manylinux_2_28_x86_64.whl (4.4 MB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.4/4.4 MB 26.0 MB/s eta 0:00:00\r\nDownloading zipp-3.17.0-py3-none-any.whl (7.4 kB)\r\nDownloading cffi-1.16.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (464 kB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 464.8/464.8 kB 25.2 MB/s eta 0:00:00\r\nInstalling collected packages: trove-classifiers, ptyprocess, fastjsonschema, zipp, tomlkit, shellingham, rapidfuzz, pycparser, poetry-core, pexpect, msgpack, jeepney, installer, dulwich, crashtest, cleo, cffi, cachecontrol, cryptography, SecretStorage, poetry-plugin-export, poetry\r\nSuccessfully installed SecretStorage-3.3.3 cachecontrol-0.13.1 cffi-1.16.0 cleo-2.1.0 crashtest-0.4.1 cryptography-41.0.7 dulwich-0.21.6 fastjsonschema-2.19.0 installer-0.7.0 jeepney-0.8.0 msgpack-1.0.7 pexpect-4.9.0 poetry-1.7.1 poetry-core-1.8.1 poetry-plugin-export-1.6.0 ptyprocess-0.7.0 pycparser-2.21 rapidfuzz-3.5.2 shellingham-1.5.4 tomlkit-0.12.3 trove-classifiers-2023.11.29 zipp-3.17.0\r\nCollecting hatch-vcs\r\n  Using cached hatch_vcs-0.4.0-py3-none-any.whl.metadata (8.6 kB)\r\nCollecting hatchling>=1.1.0 (from hatch-vcs)\r\n  Using cached hatchling-1.18.0-py3-none-any.whl.metadata (3.8 kB)\r\nCollecting setuptools-scm>=6.4.0 (from hatch-vcs)\r\n  Using cached setuptools_scm-8.0.4-py3-none-any.whl.metadata (6.4 kB)\r\nCollecting editables>=0.3 (from hatchling>=1.1.0->hatch-vcs)\r\n  Using cached editables-0.5-py3-none-any.whl.metadata (3.1 kB)\r\nRequirement already satisfied: packaging>=21.3 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from hatchling>=1.1.0->hatch-vcs) (23.2)\r\nRequirement already satisfied: pathspec>=0.10.1 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from hatchling>=1.1.0->hatch-vcs) (0.11.2)\r\nRequirement already satisfied: pluggy>=1.0.0 in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from hatchling>=1.1.0->hatch-vcs) (1.3.0)\r\nRequirement already satisfied: trove-classifiers in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from hatchling>=1.1.0->hatch-vcs) (2023.11.29)\r\nRequirement already satisfied: setuptools in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from setuptools-scm>=6.4.0->hatch-vcs) (68.2.2)\r\nRequirement already satisfied: typing-extensions in /home/matteius/.virtualenvs/pipenv_311/lib/python3.11/site-packages (from setuptools-scm>=6.4.0->hatch-vcs) (4.8.0)\r\nUsing cached hatch_vcs-0.4.0-py3-none-any.whl (8.4 kB)\r\nUsing cached hatchling-1.18.0-py3-none-any.whl (75 kB)\r\nUsing cached setuptools_scm-8.0.4-py3-none-any.whl (42 kB)\r\nUsing cached editables-0.5-py3-none-any.whl (5.1 kB)\r\nInstalling collected packages: setuptools-scm, editables, hatchling, hatch-vcs\r\nSuccessfully installed editables-0.5 hatch-vcs-0.4.0 hatchling-1.18.0 setuptools-scm-8.0.4\r\nCollecting tomlkit==0.12.3\r\n  Using cached tomlkit-0.12.3.tar.gz (190 kB)\r\n  Preparing metadata (pyproject.toml): started\r\n  Preparing metadata (pyproject.toml): finished with status 'done'\r\nSaved ./pipenv/vendor/__tmp__/tomlkit-0.12.3.tar.gz\r\nSuccessfully downloaded tomlkit\r\n[vendoring.update] Extracting tomlkit-0.12.3/LICENSE into /home/matteius/pipenv/pipenv/vendor/tomlkit/LICENSE\r\n[vendoring.update] Ignoring tomlkit-0.12.3/tests/toml-spec-tests/LICENSE\r\n[vendoring.update] Ignoring tomlkit-0.12.3/tests/toml-test/COPYING\r\n[vendoring.update] Vendored tomlkit==0.12.3\r\n```",
      "If I run that on top of my patch, the command fails and generates an empty diff:\r\n\r\n```\r\n➜  pipenv git:(vendor-latest-tomlkit) invoke vendoring.update --package=\"tomlkit==0.12.3\"\r\n[vendoring.update] Using vendor dir: /Users/deivid/code/pypa/pipenv/pipenv/vendor\r\n[vendoring.update] Reinstalling vendored libraries\r\n[vendoring.update] Using requirements file: -r /Users/deivid/code/pypa/pipenv/pipenv/vendor/vendor.txt\r\n[vendoring.update] using requirements file: /Users/deivid/code/pypa/pipenv/pipenv/vendor/vendor.txt\r\n[vendoring.update] Matched req: 'tomlkit==0.12.3'\r\nCollecting tomlkit==0.12.3\r\n  Using cached tomlkit-0.12.3-py3-none-any.whl.metadata (2.7 kB)\r\nUsing cached tomlkit-0.12.3-py3-none-any.whl (37 kB)\r\nInstalling collected packages: tomlkit\r\nSuccessfully installed tomlkit-0.12.3\r\n[vendoring.update] Running post-install cleanup...\r\n[vendoring.update] Removing unused modules and files ...\r\n[vendoring.update] Detected vendored libraries: safety, plette, click_didyoumean, dparse, markupsafe, dotenv, colorama, click, shellingham, tomli, pipdeptree, pexpect, ptyprocess, pythonfinder, pydantic, tomlkit, ruamel, pip, requests, packaging, pkg_resources, pyparsing, ruamel.yaml, urllib3\r\n[vendoring.update] Applying pre-patches...\r\n[vendoring.update] Removing scandir library files...\r\n[vendoring.update] Renaming specified libs...\r\n[vendoring.update] Rewriting imports for /Users/deivid/code/pypa/pipenv/pipenv/vendor/tomlkit...\r\nTraceback (most recent call last):\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/bin/invoke\", line 8, in <module>\r\n    sys.exit(program.run())\r\n             ^^^^^^^^^^^^^\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/lib/python3.11/site-packages/invoke/program.py\", line 398, in run\r\n    self.execute()\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/lib/python3.11/site-packages/invoke/program.py\", line 583, in execute\r\n    executor.execute(*self.tasks)\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/lib/python3.11/site-packages/invoke/executor.py\", line 140, in execute\r\n    result = call.task(*args, **call.kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/lib/python3.11/site-packages/invoke/tasks.py\", line 138, in __call__\r\n    result = self.body(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/deivid/code/pypa/pipenv/tasks/vendoring/__init__.py\", line 763, in main\r\n    download_licenses(ctx, vendor_dir, package=package)\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/lib/python3.11/site-packages/invoke/tasks.py\", line 138, in __call__\r\n    result = self.body(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/deivid/code/pypa/pipenv/tasks/vendoring/__init__.py\", line 508, in download_licenses\r\n    import parse\r\nModuleNotFoundError: No module named 'parse'\r\n\r\n➜  pipenv git:(vendor-latest-tomlkit) git diff\r\n# empty\r\n```\r\n\r\nIf I run that against the main branch, it also fails and generates a diff almost the same as my patch (except that it duplicates the entry in `vendor.txt` and does not include a changelog fragment):\r\n\r\n```\r\n➜  pipenv git:(main) invoke vendoring.update --package=\"tomlkit==0.12.3\"\r\n[vendoring.update] Using vendor dir: /Users/deivid/code/pypa/pipenv/pipenv/vendor\r\n[vendoring.update] Reinstalling vendored libraries\r\n[vendoring.update] Using requirements file: -r /Users/deivid/code/pypa/pipenv/pipenv/vendor/vendor.txt\r\n[vendoring.update] using requirements file: /Users/deivid/code/pypa/pipenv/pipenv/vendor/vendor.txt\r\n[vendoring.update] Writing requirements file: /Users/deivid/code/pypa/pipenv/pipenv/vendor/vendor.txt\r\nCollecting tomlkit==0.12.3\r\n  Using cached tomlkit-0.12.3-py3-none-any.whl.metadata (2.7 kB)\r\nUsing cached tomlkit-0.12.3-py3-none-any.whl (37 kB)\r\nInstalling collected packages: tomlkit\r\nSuccessfully installed tomlkit-0.12.3\r\n[vendoring.update] Running post-install cleanup...\r\n[vendoring.update] Removing unused modules and files ...\r\n[vendoring.update] Detected vendored libraries: safety, plette, click_didyoumean, dparse, markupsafe, dotenv, colorama, click, shellingham, tomli, pipdeptree, pexpect, ptyprocess, pythonfinder, pydantic, tomlkit, ruamel, pip, requests, packaging, pkg_resources, pyparsing, ruamel.yaml, urllib3\r\n[vendoring.update] Applying pre-patches...\r\n[vendoring.update] Removing scandir library files...\r\n[vendoring.update] Renaming specified libs...\r\n[vendoring.update] Rewriting imports for /Users/deivid/code/pypa/pipenv/pipenv/vendor/tomlkit...\r\nTraceback (most recent call last):\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/bin/invoke\", line 8, in <module>\r\n    sys.exit(program.run())\r\n             ^^^^^^^^^^^^^\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/lib/python3.11/site-packages/invoke/program.py\", line 398, in run\r\n    self.execute()\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/lib/python3.11/site-packages/invoke/program.py\", line 583, in execute\r\n    executor.execute(*self.tasks)\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/lib/python3.11/site-packages/invoke/executor.py\", line 140, in execute\r\n    result = call.task(*args, **call.kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/lib/python3.11/site-packages/invoke/tasks.py\", line 138, in __call__\r\n    result = self.body(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/deivid/code/pypa/pipenv/tasks/vendoring/__init__.py\", line 763, in main\r\n    download_licenses(ctx, vendor_dir, package=package)\r\n  File \"/Users/deivid/.asdf/installs/python/3.11.4/lib/python3.11/site-packages/invoke/tasks.py\", line 138, in __call__\r\n    result = self.body(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/deivid/code/pypa/pipenv/tasks/vendoring/__init__.py\", line 508, in download_licenses\r\n    import parse\r\nModuleNotFoundError: No module named 'parse'\r\n\r\n➜  pipenv git:(main) ✗ git diff vendor-latest-tomlkit \r\ndiff --git a/news/6024.vendor.rst b/news/6024.vendor.rst\r\ndeleted file mode 100644\r\nindex 0aec2abf..00000000\r\n--- a/news/6024.vendor.rst\r\n+++ /dev/null\r\n@@ -1 +0,0 @@\r\n-Update vendored tomlkit to ``0.12.3``\r\ndiff --git a/pipenv/vendor/vendor.txt b/pipenv/vendor/vendor.txt\r\nindex 9b0c801d..b2306187 100644\r\n--- a/pipenv/vendor/vendor.txt\r\n+++ b/pipenv/vendor/vendor.txt\r\n@@ -13,4 +13,5 @@ pythonfinder==2.0.6\r\n ruamel.yaml==0.17.39\r\n shellingham==1.5.3\r\n tomli==2.0.1\r\n-tomlkit==0.12.3\r\n+tomlkit==0.12.1\r\n+tomlkit==0.12.3\r\n\\ No newline at end of file\r\n```\r\n\r\nI think that means my patch is correct!",
      "yeah, you would have to run `pipenv sync --dev` to have the parse dependency but anyway, I kicked off the CI again but I suspect we'll have to look at the safety command because the last run broke on that.",
      "Right, I did that and the `invoke` command wrapped with `pipenv run` no longer fails 👍. Diffs are the same.",
      "> I kicked off the CI again but I suspect we'll have to look at the safety command because the last run broke on that.\r\n\r\nRight! It seems to be complaining about a vulnerable pip 23.2.1, but pipenv vendors 23.3.1 so that should be fine? Maybe it's referring to the globally installed pip, in which case upgrading pip in the CI env would do the trick?",
      "Oh good point -- when  I saw this late last night I assumed something related broke in the toml upgrade and not a new test failure.   OK, we can address that separately.",
      "CI already has `python -m pip install --upgrade pip setuptools wheel` so I am not sure why 🤔 ",
      "Thanks for merging!"
    ],
    "commit_messages": [
      "Merge pull request #6024 from deivid-rodriguez/vendor-latest-tomlkit\n\nVendor latest tomlkit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128f44ee515ce6a4ea26",
    "number": 6023,
    "body": "Fit the issue #6022 \r\nAdd additional installation method in README.\r\n",
    "head_branch": "add_installation_method",
    "is_a_fork": true,
    "comments": [
      "@y-vectorfield Can you explain more why this should be a preferred/supported installation method?  I mean the change itself seems simple, but I wonder what is the difference  between that and invoking pip directly?",
      "Hello, @matteius, thank you very much for your comment.\r\nActually, we often cannot install pip command using package manager as sudors.\r\nIn addition, we often need to install python libraries into specific environment(~/.local).\r\nThis methdod(python -m pip ~) can install python libraries if we cannot install pip commad specific environment.\r\nHence, I think we should add this installation method.\r\n"
    ],
    "commit_messages": [
      "Merge pull request #6023 from y-vectorfield/add_installation_method\n\nFix the issue(#6022): Add additional installation method in README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620128f44ee515ce6a4ea27",
    "number": 6021,
    "body": "### The issue\r\n\r\nRunning pipenv with a `Pipfile` using a source without a name, like\r\n\r\n```\r\n[[source]]\r\nurl = \"https://pypi.python.org/simple\"\r\nverify_ssl = true\r\n\r\n[dev-packages]\r\n\"flake8\" = \"*\"\r\nmypy = \"*\"\r\npydocstyle = \"*\"\r\npylint = \"*\"\r\ntwine = \"*\"\r\n\r\n[packages]\r\naiodns = \"*\"\r\naiohttp = \"*\"\r\nasync-timeout = \"*\"\r\n```\r\n\r\nresults in a missing key error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/.pyenv/versions/3.11.5/lib/python3.11/site-packages/pipenv/resolver.py\", line 675, in <module>\r\n    main()\r\n  File \"/usr/local/.pyenv/versions/3.11.5/lib/python3.11/site-packages/pipenv/resolver.py\", line 661, in main\r\n    _main(\r\n  File \"/usr/local/.pyenv/versions/3.11.5/lib/python3.11/site-packages/pipenv/resolver.py\", line 645, in _main\r\n    resolve_packages(\r\n  File \"/usr/local/.pyenv/versions/3.11.5/lib/python3.11/site-packages/pipenv/resolver.py\", line 612, in resolve_packages\r\n    results, resolver = resolve(\r\n                        ^^^^^^^^\r\n  File \"/usr/local/.pyenv/versions/3.11.5/lib/python3.11/site-packages/pipenv/resolver.py\", line 592, in resolve\r\n    return resolve_deps(\r\n           ^^^^^^^^^^^^^\r\n  File \"/usr/local/.pyenv/versions/3.11.5/lib/python3.11/site-packages/pipenv/utils/resolver.py\", line 910, in resolve_deps\r\n    results, hashes, internal_resolver = actually_resolve_deps(\r\n                                         ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/.pyenv/versions/3.11.5/lib/python3.11/site-packages/pipenv/utils/resolver.py\", line 672, in actually_resolve_deps\r\n    resolver = Resolver.create(\r\n               ^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/.pyenv/versions/3.11.5/lib/python3.11/site-packages/pipenv/utils/resolver.py\", line 222, in create\r\n    index_lookup[package_name] = project.get_default_index()[\"name\"]\r\n                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^\r\nKeyError: 'name'\r\n\r\n```\r\n\r\n### The fix\r\n\r\nMy fix is to populate the source with a default name. My initial take was raising a proper error but then I saw that providing a default name was already handled in other places so I figured this was the right solution.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "fix-key-error",
    "is_a_fork": true,
    "comments": [
      "Thanks!"
    ],
    "commit_messages": [
      "Merge pull request #6021 from deivid-rodriguez/fix-key-error\n\nMake `project.get_default_index()` populate a default name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129044ee515ce6a4ea28",
    "number": 6017,
    "body": "\r\n\r\n### The issue\r\nFixes #6016 \r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-6016",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Treat all return paths of this method as strings (#6017)\n\n* Treat all return paths of this method as strings (with test)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129144ee515ce6a4ea29",
    "number": 6013,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "perf-optimizations",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129244ee515ce6a4ea2a",
    "number": 6012,
    "body": "\r\n### The issue\r\n\r\nFixes #6011 and probably also another issue where local file installs on windows are on a different drive.\r\n\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-6011",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix issue-6011 direct file url path (#6012)\n\n* Refactor this path logic to file url bug and re-use relative pathing logic.\r\n* Handle case where the drive letter is different and so relative path may not be possible\r\n* Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129344ee515ce6a4ea2b",
    "number": 6009,
    "body": "Hi !\r\n\r\n### The issue\r\n\r\nI have a project installed on my host (macOS) which use the `PIPENV_VENV_IN_PROJECT=1` env vars to install pipenv deps into `my_project/.venv` folder. Now I am working on a docker-compose setup, which has another Python version, with the local project bind mounted into the container.\r\n\r\nIn the Dockerfile, I am only copying Pipfiles and running `pipenv install` with `PIPENV_VENV_IN_PROJECT=0` so that the venv is built specifically for this container env and embedded in the docker image.\r\n\r\nWith my local code mounted inside the container, alongside the host `.venv`, I was expecting `pipenv` commands to follow `PIPENV_VENV_IN_PROJECT=0` set inside the container context and ignore the mounted `.venv`.\r\n\r\nTurns out, it is not working even though the documentation clearly states:\r\n```\r\nself.PIPENV_VENV_IN_PROJECT = get_from_env(\"VENV_IN_PROJECT\")\r\n\"\"\" When set True, will create or use the ``.venv`` in your project directory.\r\nWhen Set False, will ignore the .venv in your project directory even if it exists.\r\nIf unset (default), will use the .venv of project directory should it exist, otherwise\r\nwill create new virtual environments in a global location.\r\n\"\"\"\r\n```\r\n\r\nThis issue was already raised in this comment https://github.com/pypa/pipenv/issues/2763#issuecomment-1083715772\r\n\r\n### The fix\r\n\r\nTweaked the `get_location_for_virtualenv` function to adjust loading priorities based on the expected behavior and added an integration test\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Please add a behavior news fragment since this is technically a behavior change.",
      "Hello @matteius, sorry for the delay. I was about to add the fragment today. Anyway, thanks for the merge"
    ],
    "commit_messages": [
      "Ignore existing venv dir when PIPENV_VENV_IN_PROJECT is false (#6009)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129444ee515ce6a4ea2c",
    "number": 6008,
    "body": "If there are markers specified in requirements.txt they are not currently transferred to Pipfile while generating it. This commit adds markers to Pipfile as defined in requirements.txt\r\n\r\n### The issue\r\n\r\nUsing Pipenv with requirements.txt fails when generating Pipfile if there are markers defined in requirements.txt and those markers are for example specifying diffrent os.  For example this requirements.txt:\r\n`windows-curses==2.3.1 ; sys_platform == 'win32' and python_version == '3.11'`\r\nWhen run under Linux OS with:\r\n`pipenv install -r requirements.txt`\r\nThrows the following error:\r\n```CRITICAL:pipenv.patched.pip._internal.resolution.resolvelib.factory:Could not find a version that satisfies the requirement windows-curses==2.3.1 (from versions: none)\r\n[ResolutionFailure]:   File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/resolver.py\", line 704, in _main\r\n[ResolutionFailure]:       resolve_packages(\r\n[ResolutionFailure]:   File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/resolver.py\", line 662, in resolve_packages\r\n[ResolutionFailure]:       results, resolver = resolve(\r\n[ResolutionFailure]:       ^^^^^^^^\r\n[ResolutionFailure]:   File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/resolver.py\", line 642, in resolve\r\n[ResolutionFailure]:       return resolve_deps(\r\n[ResolutionFailure]:       ^^^^^^^^^^^^^\r\n[ResolutionFailure]:   File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/utils/resolver.py\", line 1173, in resolve_deps\r\n[ResolutionFailure]:       results, hashes, markers_lookup, resolver, skipped = actually_resolve_deps(\r\n[ResolutionFailure]:       ^^^^^^^^^^^^^^^^^^^^^^\r\n[ResolutionFailure]:   File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/utils/resolver.py\", line 953, in actually_resolve_deps\r\n[ResolutionFailure]:       resolver.resolve()\r\n[ResolutionFailure]:   File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/utils/resolver.py\", line 694, in resolve\r\n[ResolutionFailure]:       raise ResolutionFailure(message=str(e))\r\n[pipenv.exceptions.ResolutionFailure]: Warning: Your dependencies could not be resolved. You likely have a mismatch in your sub-dependencies.\r\n  You can use $ pipenv run pip install <requirement_name> to bypass this mechanism, then run $ pipenv graph to inspect the versions actually installed in the virtualenv.\r\n  Hint: try $ pipenv lock --pre if it is a pre-release dependency.\r\nERROR: No matching distribution found for windows-curses==2.3.1\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/geonik/Project/piptest/venv/bin/pipenv\", line 8, in <module>\r\n    sys.exit(cli())\r\n             ^^^^^\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/vendor/click/core.py\", line 1130, in __call__\r\n    return self.main(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/cli/options.py\", line 58, in main\r\n    return super().main(*args, **kwargs, windows_expand_args=False)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/vendor/click/core.py\", line 1055, in main\r\n    rv = self.invoke(ctx)\r\n         ^^^^^^^^^^^^^^^^\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/vendor/click/core.py\", line 1657, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/vendor/click/core.py\", line 1404, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/vendor/click/core.py\", line 760, in invoke\r\n    return __callback(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/vendor/click/decorators.py\", line 84, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/vendor/click/core.py\", line 760, in invoke\r\n    return __callback(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/cli/command.py\", line 233, in install\r\n    do_install(\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/routines/install.py\", line 170, in do_install\r\n    do_init(\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/routines/install.py\", line 743, in do_init\r\n    do_lock(\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/routines/lock.py\", line 65, in do_lock\r\n    venv_resolve_deps(\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/utils/resolver.py\", line 1116, in venv_resolve_deps\r\n    c = resolve(cmd, st, project=project)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/geonik/Project/piptest/venv/lib/python3.11/site-packages/pipenv/utils/resolver.py\", line 991, in resolve\r\n    raise RuntimeError(\"Failed to lock Pipfile.lock!\")\r\nRuntimeError: Failed to lock Pipfile.lock!\r\n```\r\n\r\n\r\n### The fix\r\n\r\nThis PR fixes the problem mentioned by supplying back the markers to Pipfile generator\r\n\r\n### The checklist\r\n\r\n* [] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@geonik-code Can you adjust the lint failure and add a news fragment?",
      "Following up on this again -- can  the lint issue be addressed so the CI will run?",
      "I am terribly sorry for taking so long to rework it, but I am on it!"
    ],
    "commit_messages": [
      "news/6008.bugfix.rst - add short bugfix description"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129444ee515ce6a4ea2d",
    "number": 6007,
    "body": "Possible fix for #5927\r\n\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "string_update_bug",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Restore this code that should prevent the string has no attribute update bug."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129544ee515ce6a4ea2e",
    "number": 6006,
    "body": "Extra pip args were never passed to the resolver.   The way this PR does it, allows it to work for both the default resolver in sub-process and resolver in parent process options.\r\n\r\n### The issue\r\n\r\nFixes #6001 \r\n\r\n\r\n### The fix\r\nExample of using this branch:\r\n```\r\n$ pipenv install --verbose --extra-pip-args \"--platform=win_amd64 --target C:\\\\c\\\\Users\\\\matte\\\\.virtualenvs\\\\issue-6001-WKuyds7q\\\\Lib\\\\site-packages\\\\\"  tensorflow\r\nInstalling tensorflow...\r\nResolving tensorflow...\r\nInstallation Succeeded\r\nInstalling dependencies from Pipfile.lock (3b7552)...\r\n\r\n[...]\r\n\r\nSuccessfully installed absl-py-2.0.0 astunparse-1.6.3 cachetools-5.3.2 flatbuffers-23.5.26 gast-0.5.4 google-auth-2.23.4 google-auth-oauthlib-1.0.0 google-pasta-0.2.0 grpcio-1.59.2 h5py-3.10.0 keras-2.14.0\r\nlibclang-16.0.6 markdown-3.5.1 markupsafe-2.1.3 ml-dtypes-0.2.0 numpy-1.26.1 oauthlib-3.2.2 opt-einsum-3.3.0 packaging-23.2 protobuf-4.25.0 pyasn1-0.5.0 pyasn1-modules-0.3.0 requests-oauthlib-1.3.1 rsa-4.9\r\nsix-1.16.0 tensorboard-2.14.1 tensorboard-data-server-0.7.2 tensorflow-2.14.0 tensorflow-estimator-2.14.0 tensorflow-intel-2.14.0 tensorflow-io-gcs-filesystem-0.31.0 termcolor-2.3.0 typing-extensions-4.8.0\r\nwerkzeug-3.0.1 wheel-0.41.3 wrapt-1.14.1\r\n\r\nInstall Phase: Editable Requirements\r\n[...]\r\n```\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-6001-extra-pip-args",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129644ee515ce6a4ea2f",
    "number": 5994,
    "body": "### The issue\r\n\r\nSee https://github.com/pypa/pipenv/issues/5751#issuecomment-1773922272 and ramblings thereafter\r\n\r\nPrior to this fix, `pipenv lock` would work, but with warnings because some calls within pipenv correctly used keyring, but others didn't:\r\n\r\n> Locking [packages] dependencies...\r\n> Building requirements...\r\n> Resolving dependencies...\r\n> Success!\r\n> [====] Locking...Warning: WARNING:pipenv.patched.pip._internal.network.auth:Keyring is skipped due to an exception: expected str, bytes or os.PathLike object, not NoneType\r\n> Locking [dev-packages] dependencies...\r\n> Building requirements...\r\n> Resolving dependencies...\r\n> Success!\r\n> [ =] Locking...Warning: WARNING:pipenv.patched.pip._internal.network.auth:Keyring is skipped due to an exception: expected str, bytes or os.PathLike object, not NoneType\r\n\r\nWith this fix in place, I no longer get any warnings as all calls to the pip repo use keyring:\r\n\r\n\r\n> Locking [packages] dependencies...\r\n> Building requirements...\r\n> Resolving dependencies...\r\n> Success!\r\n> Locking [dev-packages] dependencies...\r\n> Building requirements...\r\n> Resolving dependencies...\r\n> Success!\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "fix-keyring-warnings",
    "is_a_fork": true,
    "comments": [
      "@matteius is this build error on just one OS/version likely to just be rate-limiting or something intermittent like that?\r\n\r\n> pipenv.patched.pip._vendor.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='files.pythonhosted.org', port=443): Read timed out.",
      "Would be good to add a news fragment.",
      "> Would be good to add a news fragment.\r\n\r\nThanks, that's done now, please let me know if anything else needs doing to release this."
    ],
    "commit_messages": [
      "Merge pull request #5994 from mungojam/fix-keyring-warnings\n\n* pass through pipfile index urls when creating https session so that keyring works\r\n* Add news entry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129744ee515ce6a4ea30",
    "number": 5993,
    "body": "…alls\r\n\r\nThank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nThis branch fixes pipenv install of SVN repos. Pipenv was adding and extra empty argument when the verbosity flag was <= 0. This empty string was causing an error with SVN checkout commands.\r\n\r\n### The fix\r\n\r\nThis pull request removes the empty flag from the command arguments when the verbosity is not set.\r\n",
    "head_branch": "svn_install_fix",
    "is_a_fork": true,
    "comments": [
      "@rjsilver If you can check the ruff lint and add a news fragment, I may be able to include this in tonight's release.",
      "Actually I am pushing a fix to the ruff lint to main -- has nothing to do with this PR, but a news fragment would be good.",
      "Hey Matt,\r\n\r\nThanks for looking at this so quickly, is there documentation for how to do the news fragment? I'm unfamiliar with this method.\r\n\r\nThanks,\r\nRyne\r\n________________________________\r\nFrom: Matt Davis ***@***.***>\r\nSent: Tuesday, October 24, 2023 3:25 PM\r\nTo: pypa/pipenv ***@***.***>\r\nCc: Ryne Joseph Silver ***@***.***>; Author ***@***.***>\r\nSubject: Re: [pypa/pipenv] New branch, removes empty flag in SVN install command. Fixes SVN inst… (PR #5993)\r\n\r\n\r\n@rjsilver<https://github.com/rjsilver> If you can check the ruff lint and add a news fragment, I may be able to include this in tonight's release.\r\n\r\n—\r\nReply to this email directly, view it on GitHub<https://github.com/pypa/pipenv/pull/5993#issuecomment-1778064905>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AHZTOVZ5QQMIXFYLGIDP2WTYBAW5DAVCNFSM6AAAAAA6OJHK4KVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZYGA3DIOJQGU>.\r\nYou are receiving this because you authored the thread.Message ID: ***@***.***>\r\n",
      "@rsilver23 Basically create a file in the news directory `5993.bugfix.rst` and explain the correction.   Helpful to first run `pre-commit install` so that the linter will check your news file when you check it in.",
      "@rjsilver oh hey -- there is a problem I just noticed, which is you are modifying the pip internals.  We don't want to do that, if there was truly a reason to do so, we would provide a patch, but I think in this case you mentioned it is something to do with click?",
      "@rjsilver I wonder if https://github.com/pypa/pip/issues/11050 is related?",
      "@matteius [https://github.com/pypa/pip/issues/11050](https://github.com/pypa/pip/issues/11050) definitely looks related",
      "@matteius looks like this code already exists in a patch. Do you have a better recommendation where to put this?",
      "@rsilver23 So we vendor in pip to pipenv and we have some patches that we apply after the fact.  This feels like a case where pip itself would accept this patch, and the original PR that fixes it was tagged with needs a rebase.   Perhaps you could open a new PR against pip -- the problem is, if I merge this as-is, the next time we vendor in a new version of pip it would get overwritten.",
      "Hi! FYI the original PR opened into pip repo and mentioned here has been merged.",
      "You mean this one? https://github.com/pypa/pip/pull/11051?\r\nAs soon as there is new pip release, this will lend in pipenv too!",
      "That is great to hear -- we already regular vendor in pip, so I will close this PR as the plan is to go with the update in pip."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129844ee515ce6a4ea31",
    "number": 5990,
    "body": "For https://github.com/pypa/pipenv/issues/5964\r\nAs suggested in https://github.com/pypa/pipenv/pull/5965\r\n\r\nWe don't need to cast to `dict` first, we can just sort.\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "sort-category-alphabetical2",
    "is_a_fork": true,
    "comments": [
      "Cool thanks!  That sporadic mac os build failure has been cropping for me me too in the CI since pip 23.3 -- a retry of that failure will probably work."
    ],
    "commit_messages": [
      "Merge pull request #5990 from daveschaefer/sort-category-alphabetical2\n\nSimplify sorting code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129944ee515ce6a4ea32",
    "number": 5988,
    "body": "### The issue\r\n\r\nI ran into this issue with a lock update that included PyJWT.\r\n\r\n### The fix\r\n\r\nI tried this code change at the time and it got me past the locking issue.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "safer-fold-markers",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129a44ee515ce6a4ea33",
    "number": 5987,
    "body": "\r\n+ enables Python 3.12 in the CI\r\n\r\n\r\n### The issue\r\n\r\nTry getting python 3.12 support enabled.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "python-3.12",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Python 3.12 support (passing) (#5987)\n\n* pipenv support for python 3.12"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129a44ee515ce6a4ea34",
    "number": 5986,
    "body": "More vendoring updates (updates all vendoring to latest except pipdeptree)\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "more-vendoring-updates",
    "is_a_fork": false,
    "comments": [
      "Well, that is superseded by the bump to 3.12 right?",
      "Well if we merge this first we should see just the 3.12 related changes in the other PR."
    ],
    "commit_messages": [
      "Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129b44ee515ce6a4ea35",
    "number": 5985,
    "body": "### The issue\r\n\r\nThe docs header \"Automatic Python Installation\" was inadvertently removed in https://github.com/pypa/pipenv/pull/5909. \r\n\r\n### The fix\r\n\r\nAdded it back in, where it was before.\r\n\r\n### The checklist\r\n\r\nN/A, this just corrects a docs typo.\r\n\r\nP.S.: I did notice the docs search still identified \"Automatic Python Installation\" as a heading when e.g. searching for \"pyenv\", even though it no longer appeared. Is there some search index that should be regenerated?",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "> P.S.: I did notice the docs search still identified \"Automatic Python Installation\" as a heading when e.g. searching for \"pyenv\", even though it no longer appeared. Is there some search index that should be regenerated?\r\n\r\nI think there is an issue with the docs build deploy, because it seems that it does not get updated on every release anymore -- noticed this recently that the new release changelogs don't show up for the published build.  Needs more investigation."
    ],
    "commit_messages": [
      "Merge pull request #5985 from iamed2/patch-1\n\nUpdate advanced.md to restore Automatic Python Installation header"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129c44ee515ce6a4ea36",
    "number": 5984,
    "body": "\r\n\r\n### The issue\r\n\r\nRuff linter had stopped working due to a deprecated argument being used in our CI.\r\nThis PR aims to fix #5983\r\n\r\n### The fix\r\n\r\nIn our GitHub actions for Ruff linter, we use the new option of `--output-format` instead of deprecated \"--format\"\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue: #5983\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "fix-ruff-linter",
    "is_a_fork": true,
    "comments": [
      "@engineerakki Looks like this fixed the ruff linter, but the regular linter wants the news file to be adjusted.",
      "> @engineerakki Looks like this fixed the ruff linter, but the regular linter wants the news file to be adjusted.\r\n\r\nThis is fixed now."
    ],
    "commit_messages": [
      "Merge pull request #5984 from engineerakki/fix-ruff-linter\n\nci: fix ruff linter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129d44ee515ce6a4ea37",
    "number": 5982,
    "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.17 to 1.26.18.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>1.26.18</h2>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses. (GHSA-g4mx-q9vg-27p4)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>1.26.18 (2023-10-17)</h1>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/9c2c2307dd1d6af504e09aac0326d86ee3597a0b\"><code>9c2c230</code></a> Release 1.26.18 (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3159\">#3159</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36\"><code>b594c5c</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/944f0eb134485f41bc531be52de12ba5a37bca73\"><code>944f0eb</code></a> [1.26] Use vendored six in urllib3.contrib.securetransport</li>\n<li>See full diff in <a href=\"https://github.com/urllib3/urllib3/compare/1.26.17...1.26.18\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/urllib3-1.26.18",
    "is_a_fork": false,
    "comments": [
      "Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",
      "Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",
      "Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`."
    ],
    "commit_messages": [
      "Merge pull request #5982 from pypa/dependabot/pip/docs/urllib3-1.26.18\n\nBump urllib3 from 1.26.17 to 1.26.18 in /docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129e44ee515ce6a4ea38",
    "number": 5981,
    "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 2.0.6 to 2.0.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>2.0.7</h2>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses. (GHSA-g4mx-q9vg-27p4)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>2.0.7 (2023-10-17)</h1>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/56f01e088dc006c03d4ee6ea9da4ab810f1ed700\"><code>56f01e0</code></a> Release 2.0.7</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3\"><code>4e50fbc</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/80808b04bfa68fbd099828848c96ee25df185f1d\"><code>80808b0</code></a> Fix docs build on Python 3.12 (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3144\">#3144</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/f28deff1cf162c673b50d88d3552e91bda6d68a8\"><code>f28deff</code></a> Add 1.26.17 to the current changelog</li>\n<li>See full diff in <a href=\"https://github.com/urllib3/urllib3/compare/2.0.6...2.0.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=2.0.6&new-version=2.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/examples/urllib3-2.0.7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5981 from pypa/dependabot/pip/examples/urllib3-2.0.7\n\nBump urllib3 from 2.0.6 to 2.0.7 in /examples"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129f44ee515ce6a4ea39",
    "number": 5980,
    "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.17 to 1.26.18.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>1.26.18</h2>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses. (GHSA-g4mx-q9vg-27p4)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>1.26.18 (2023-10-17)</h1>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/9c2c2307dd1d6af504e09aac0326d86ee3597a0b\"><code>9c2c230</code></a> Release 1.26.18 (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3159\">#3159</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36\"><code>b594c5c</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/944f0eb134485f41bc531be52de12ba5a37bca73\"><code>944f0eb</code></a> [1.26] Use vendored six in urllib3.contrib.securetransport</li>\n<li>See full diff in <a href=\"https://github.com/urllib3/urllib3/compare/1.26.17...1.26.18\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/urllib3-1.26.18",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5980 from pypa/dependabot/pip/urllib3-1.26.18\n\nBump urllib3 from 1.26.17 to 1.26.18"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620129f44ee515ce6a4ea3a",
    "number": 5979,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nUpdate to pip 23.3\r\n\r\n### The fix\r\n\r\nKeeps pipenv up to date.   Small adjustment to the ignore compatibility finder patch to be applicable to the new version of pip.\r\n\r\nOther changes:\r\n* Upgrade forced my hand on _fold_markers -- I added some safety checks.\r\n* truststore is now vendored in pip so the test about extra pip args and not finding truststore is now skipped.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pip-23.3",
    "is_a_fork": false,
    "comments": [
      "I'll need to add a news fragment before merging."
    ],
    "commit_messages": [
      "Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a044ee515ce6a4ea3b",
    "number": 5971,
    "body": "### The issue\r\n\r\n#5969 \r\n\r\n### The fix\r\n\r\nSimilar to `do_where(bare=True)`, the PR adds the argument `bare=False` to `do_py` and calls it with `bare=True`.\r\nLike `--venv`, it will use `print` instead of `console.print`. (`do_where` uses `click.echo`)\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "i5969",
    "is_a_fork": true,
    "comments": [
      "Hey @notEvil -- looks like this just needs a news fragment."
    ],
    "commit_messages": [
      "Merge pull request #5971 from notEvil/i5969\n\nChange `--py` to use `print` instead of `console.print`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a144ee515ce6a4ea3c",
    "number": 5970,
    "body": "All tests pass on Linux without it.\r\n\r\nThank you for contributing to Pipenv!\r\n\r\n",
    "head_branch": "drop-pep517",
    "is_a_fork": false,
    "comments": [
      "Good find, this is no longer required now that we dropped requirementslib 🎉 "
    ],
    "commit_messages": [
      "Add news snippet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a244ee515ce6a4ea3d",
    "number": 5966,
    "body": "--quiet now hides the message\r\n    \"Launching subshell in virtual environment...\"\r\n\r\n### The issue\r\n#5954 requests a --quiet option for pipenv shell, as notifications are accessive.\r\n\r\n### The fix\r\nAdd quiet option to do_shell() and shell()\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "enhancement-5954-reduce-notifications",
    "is_a_fork": true,
    "comments": [
      "Please add a news snippet.",
      "@fmssn Can you add a news fragment so we can merge this?",
      "Was on vacation the last two weeks, sorry for the delay!"
    ],
    "commit_messages": [
      "Merge pull request #5966 from fmssn/enhancement-5954-reduce-notifications\n\nAdd quiet option to pipenv shell."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a344ee515ce6a4ea3e",
    "number": 5965,
    "body": "Add a new `[pipenv]` directive to sort package names alphabetically inside the category, for easier reading.\r\n\r\n- [x] sort on `install`\r\n- [x] sort on `uninstall`\r\n- [x] sort on `upgrade`\r\n- [ ] Does this need to run on `update`?\r\n\r\n--\r\n\r\nUnsure if this is the best place or way to implement. Small prototype to add to discussion in https://github.com/pypa/pipenv/issues/5964 .\r\n\r\nTests:\r\n\r\nbefore patch:\r\n\r\n```\r\nAssertionError: assert ['atomicwrite...ama', 'build'] == ['atomicwrite...', 'colorama']\r\n  At index 1 diff: 'colorama' != 'build'\r\n  Full diff:\r\n  - ['atomicwrites', 'build', 'colorama']\r\n  ?                  ---------\r\n  + ['atomicwrites', 'colorama', 'build']\r\n  ?                            +++++++++\r\n```\r\n\r\nafter patch: pass.\r\n\r\n------\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "sort-category-alphabetical",
    "is_a_fork": true,
    "comments": [
      "I would recommend making this a behavior driven by a [pipenv] directive in the Pipfile -- the reason why is because then its opt-in/opt-out at the project level if the directive is in the Pipfile; it will sort the packages alphabetically for the project whenever a change is made, install/uninstall/update/upgrade -- but otherwise it will continue to behave as is for folks that don't want this behavior.  ",
      "> I would recommend making this a behavior driven by a [pipenv] directive in the Pipfile -- the reason why is because then its opt-in/opt-out at the project level if the directive is in the Pipfile; it will sort the packages alphabetically for the project whenever a change is made, install/uninstall/update/upgrade -- but otherwise it will continue to behave as is for folks that don't want this behavior.\r\n\r\nHello, thank you for the feedback. Implementing this as a config setting/directive sounds quite reasonable.\r\n\r\nThe [pipenv] section appears to be the same place that stores settings such as `allow_prereleases`, `disable_pip_input`, `install_search_all_sources`, and `keep_outdated`. Is that correct?\r\nAt first glance, implementing a new setting like this seems like it could simply be an `if` statement to check for the setting. i.e. in `add_pipfile_entry_to_pipfile()`, something like:\r\n\r\n```\r\nif self.settings.get(\"sort_alphabetical\"):\r\n    p[category] = dict(sorted(p[category].items())\r\n```\r\n\r\nDoes that sound like a good way to do it?\r\n\r\nLet me know if there is a particular setting name you want. Perhaps `sort_alphabetical`?",
      "Which commands should we make this run on? Perhaps `install`, `uninstall`, and `upgrade` - since those are the commands that normally make changes to the `Pipfile`?",
      "Thanks @daveschaefer -- some thoughts:\r\nPerhaps `sort_alphabetical` --> `sort_pipfile`\r\n\r\n> Which commands should we make this run on? Perhaps install, uninstall, and upgrade\r\n\r\nThat makes sense, just calling out: upgrade and update (update uses upgrade, but I forget if it touches Pipfile directly so worth taking a look).",
      "> Thanks @daveschaefer -- some thoughts: Perhaps `sort_alphabetical` --> `sort_pipfile`\r\n\r\nThank you. I have updated the code to use `sort_pipfile`, and added code and tests for `uninstall`.\r\n\r\nOnce this is implemented, is there a place in the docs that I can or should update to mention this new directive?\r\nI don't think I see a specific place in the documentation that discusses the `[pipfile]` section. Should I add one? I can make that a separate PR if that's best.",
      "> I don't think I see a specific place in the documentation that discusses the [pipfile] section. Should I add one? I can make that a separate PR if that's best.\r\n\r\nWe should include the documentation in this PR -- let's see ... probably this is the closest section that documents the Pipfile:  https://pipenv.pypa.io/en/latest/pipfile/\r\n\r\nAny TLC you put into the docs would be appreciated.",
      "> We should include the documentation in this PR -- let's see ... probably this is the closest section that documents the Pipfile: https://pipenv.pypa.io/en/latest/pipfile/\r\n> \r\n> Any TLC you put into the docs would be appreciated.\r\n\r\nThank you. I added a section to `pipfile.md` based on the notes I could find from the codebase, docs, and release history.\r\nI also added a note for the `sort_pipfile` setting that would be created with this patch.\r\nSince it looks like the `keep_outdated` flag has been discontinued, I left it out and did not write anything for it.\r\n\r\nFeedback on any of the docs or wording is welcome.\r\n\r\nI may not have time immediately, but I will see if I can add tests and code for sorting on `upgrade` or `update` as well.",
      "\r\nSo, the good news: the `upgrade` command already calls `add_pipfile_entry_to_pipfile()`, where this code already does the sorting. So we may be able to keep all of the sorting code in one place.\r\n\r\nThe bad news: sorting categories and passing a dict to `write_toml()` works when all Pipfile entries have the same value type, but not if the category values have both strings and dictionary values.\r\n\r\nWhat I mean is: If all of the package entries use strings like `parse = \"*\", sphinx = \"==4.*\"`, the sorting works fine.\r\nBut some package entries use other descriptions, such as a dictionary like `gunicorn = {version = \"*\"}`.\r\nIn this case the toml sorting and printing will default to sorting the data so that all of the string packages like `= \"*\"` are sorted first, as a group, followed by all of the dictionary packages like `= {version = \"*\"}` after that.\r\nThe Pipfile will look like:\r\n\r\n```\r\naa = \"*\"\r\nbb = \"*\"\r\ncc = \"*\"\r\naaa = {version = \"*\"}\r\nbbb = {version = \"*\"}\r\nccc = {version = \"*\"}\r\n```\r\n\r\nI have added test cases to `install` and `uninstall` for this to enforce dealing with it.\r\n\r\nCurrently I have solved this by implementing a private `_sort_category()` function in `project.py` that takes a category `dict` and builds a `tomlkit.table` with data in the correct sorted order.\r\nThis succeeds, and sorts the Pipfile correctly. But feels like a bit of a kludge.\r\nTechnically the `p[category]` data is already of type `tomlkit.table` right where `_sort_category()` is called anyway. It gets called right before the data is written with `write_toml()`. But it feels less clean.\r\n\r\nLet me know what you think. If there is a better way to solve this, I am all ears.\r\nI could also move `_sort_category()` into `toml.py` if that's a better place to put the toml doc formatting code and keep it all in one place.",
      "Is it helpful if I annotate functions with argument types and return types?"
    ],
    "commit_messages": [
      "Merge pull request #5965 from daveschaefer/sort-category-alphabetical\n\nfeat: Option to sort packages alphabetically inside each Pipfile category"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a444ee515ce6a4ea3f",
    "number": 5963,
    "body": "### The issue\r\n\r\nTries to very crudely address https://github.com/pypa/pipenv/issues/5531 .\r\n\r\n### The fix\r\n\r\nIntroduces an `--exact` argument to `pipenv install` that locks the exact package version to `Pipfile` instead of `*`. It is a very rudimentary implementation and I am sure calling `resolve_deps` that early in the pipeline might introduce some unintended behavior. But I wanted to open up the PR to get some conversation going, and perhaps inspire someone else to implement a proper fix. Also to just say hi to @matteius I guess 👋 \r\n\r\n### To-do\r\n\r\n* [ ] Write tests.\r\n* [ ] Add docs.\r\n* [ ] Update `news/`.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "@cansin Really great hearing from you!  I hope you have been happy and healthy.  I did a double take when I saw the PR opened and thought well this is really cool! 😃   ",
      "@matteius hey hey! I've been happy and most definitely healthier! Taking some sweet summertime back in Europe. Hope things are going great back home for you as well 👋 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a444ee515ce6a4ea40",
    "number": 5960,
    "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.14 to 1.26.17.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>1.26.17</h2>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (GHSA-v845-jxx5-vc9f)</li>\n</ul>\n<h2>1.26.16</h2>\n<ul>\n<li>Fixed thread-safety issue where accessing a <code>PoolManager</code> with many distinct origins would cause connection pools to be closed while requests are in progress (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2954\">#2954</a>)</li>\n</ul>\n<h2>1.26.15</h2>\n<ul>\n<li>Fix socket timeout value when HTTPConnection is reused (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2645\">urllib3/urllib3#2645</a>)</li>\n<li>Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2899\">urllib3/urllib3#2899</a>)</li>\n<li>Fix IDNA handling of 'x80' byte (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2901\">urllib3/urllib3#2901</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>1.26.17 (2023-10-02)</h1>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (<code>[#3139](https://github.com/urllib3/urllib3/issues/3139) &lt;https://github.com/urllib3/urllib3/pull/3139&gt;</code>_)</li>\n</ul>\n<h1>1.26.16 (2023-05-23)</h1>\n<ul>\n<li>Fixed thread-safety issue where accessing a <code>PoolManager</code> with many distinct origins\nwould cause connection pools to be closed while requests are in progress (<code>[#2954](https://github.com/urllib3/urllib3/issues/2954) &lt;https://github.com/urllib3/urllib3/pull/2954&gt;</code>_)</li>\n</ul>\n<h1>1.26.15 (2023-03-10)</h1>\n<ul>\n<li>Fix socket timeout value when <code>HTTPConnection</code> is reused (<code>[#2645](https://github.com/urllib3/urllib3/issues/2645) &lt;https://github.com/urllib3/urllib3/issues/2645&gt;</code>__)</li>\n<li>Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing\n(<code>[#2899](https://github.com/urllib3/urllib3/issues/2899) &lt;https://github.com/urllib3/urllib3/issues/2899&gt;</code>__)</li>\n<li>Fix IDNA handling of '\\x80' byte (<code>[#2901](https://github.com/urllib3/urllib3/issues/2901) &lt;https://github.com/urllib3/urllib3/issues/2901&gt;</code>__)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/c9016bf464751a02b7e46f8b86504f47d4238784\"><code>c9016bf</code></a> Release 1.26.17</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/01220354d389cd05474713f8c982d05c9b17aafb\"><code>0122035</code></a> Backport GHSA-v845-jxx5-vc9f (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3139\">#3139</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/e63989f97d206e839ab9170c8a76e3e097cc60e8\"><code>e63989f</code></a> Fix installing <code>brotli</code> extra on Python 2.7</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/2e7a24d08713a0131f0b3c7197889466d645cc49\"><code>2e7a24d</code></a> [1.26] Configure OS for RTD to fix building docs</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/57181d6ea910ac7cb2ff83345d9e5e0eb816a0d0\"><code>57181d6</code></a> [1.26] Improve error message when calling urllib3.request() (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3058\">#3058</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/3c0148048a523325819377b23fc67f8d46afc3aa\"><code>3c01480</code></a> [1.26] Run coverage even with failed jobs</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/d94029b7e2193ff47b627906a70e06377a09aae8\"><code>d94029b</code></a> Release 1.26.16</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8\"><code>18e9214</code></a> Use trusted publishing for PyPI</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36\"><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263\"><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>\n<li>Additional commits viewable in <a href=\"https://github.com/urllib3/urllib3/compare/1.26.14...1.26.17\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/urllib3-1.26.17",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5960 from pypa/dependabot/pip/docs/urllib3-1.26.17\n\nBump urllib3 from 1.26.14 to 1.26.17 in /docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a544ee515ce6a4ea41",
    "number": 5959,
    "body": "[//]: # (dependabot-start)\n⚠️  **Dependabot is rebasing this PR** ⚠️ \n\nRebasing might not happen immediately, so don't worry if this takes some time.\n\nNote: if you make any changes to this PR yourself, they will take precedence over the rebase.\n\n---\n\n[//]: # (dependabot-end)\n\nBumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.14 to 1.26.17.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>1.26.17</h2>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (GHSA-v845-jxx5-vc9f)</li>\n</ul>\n<h2>1.26.16</h2>\n<ul>\n<li>Fixed thread-safety issue where accessing a <code>PoolManager</code> with many distinct origins would cause connection pools to be closed while requests are in progress (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2954\">#2954</a>)</li>\n</ul>\n<h2>1.26.15</h2>\n<ul>\n<li>Fix socket timeout value when HTTPConnection is reused (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2645\">urllib3/urllib3#2645</a>)</li>\n<li>Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2899\">urllib3/urllib3#2899</a>)</li>\n<li>Fix IDNA handling of 'x80' byte (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2901\">urllib3/urllib3#2901</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>1.26.17 (2023-10-02)</h1>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (<code>[#3139](https://github.com/urllib3/urllib3/issues/3139) &lt;https://github.com/urllib3/urllib3/pull/3139&gt;</code>_)</li>\n</ul>\n<h1>1.26.16 (2023-05-23)</h1>\n<ul>\n<li>Fixed thread-safety issue where accessing a <code>PoolManager</code> with many distinct origins\nwould cause connection pools to be closed while requests are in progress (<code>[#2954](https://github.com/urllib3/urllib3/issues/2954) &lt;https://github.com/urllib3/urllib3/pull/2954&gt;</code>_)</li>\n</ul>\n<h1>1.26.15 (2023-03-10)</h1>\n<ul>\n<li>Fix socket timeout value when <code>HTTPConnection</code> is reused (<code>[#2645](https://github.com/urllib3/urllib3/issues/2645) &lt;https://github.com/urllib3/urllib3/issues/2645&gt;</code>__)</li>\n<li>Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing\n(<code>[#2899](https://github.com/urllib3/urllib3/issues/2899) &lt;https://github.com/urllib3/urllib3/issues/2899&gt;</code>__)</li>\n<li>Fix IDNA handling of '\\x80' byte (<code>[#2901](https://github.com/urllib3/urllib3/issues/2901) &lt;https://github.com/urllib3/urllib3/issues/2901&gt;</code>__)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/c9016bf464751a02b7e46f8b86504f47d4238784\"><code>c9016bf</code></a> Release 1.26.17</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/01220354d389cd05474713f8c982d05c9b17aafb\"><code>0122035</code></a> Backport GHSA-v845-jxx5-vc9f (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3139\">#3139</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/e63989f97d206e839ab9170c8a76e3e097cc60e8\"><code>e63989f</code></a> Fix installing <code>brotli</code> extra on Python 2.7</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/2e7a24d08713a0131f0b3c7197889466d645cc49\"><code>2e7a24d</code></a> [1.26] Configure OS for RTD to fix building docs</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/57181d6ea910ac7cb2ff83345d9e5e0eb816a0d0\"><code>57181d6</code></a> [1.26] Improve error message when calling urllib3.request() (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3058\">#3058</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/3c0148048a523325819377b23fc67f8d46afc3aa\"><code>3c01480</code></a> [1.26] Run coverage even with failed jobs</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/d94029b7e2193ff47b627906a70e06377a09aae8\"><code>d94029b</code></a> Release 1.26.16</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8\"><code>18e9214</code></a> Use trusted publishing for PyPI</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36\"><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263\"><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>\n<li>Additional commits viewable in <a href=\"https://github.com/urllib3/urllib3/compare/1.26.14...1.26.17\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/urllib3-1.26.17",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5959 from pypa/dependabot/pip/urllib3-1.26.17\n\nBump urllib3 from 1.26.14 to 1.26.17"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a644ee515ce6a4ea42",
    "number": 5958,
    "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 2.0.2 to 2.0.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>2.0.6</h2>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (GHSA-v845-jxx5-vc9f)</li>\n</ul>\n<h2>2.0.5</h2>\n<ul>\n<li>Allowed pyOpenSSL third-party module without any deprecation warning. <a href=\"https://redirect.github.com/urllib3/urllib3/issues/3126\">#3126</a></li>\n<li>Fixed default <code>blocksize</code> of <code>HTTPConnection</code> classes to match high-level classes. Previously was 8KiB, now 16KiB. <a href=\"https://redirect.github.com/urllib3/urllib3/issues/3066%3E\">#3066</a></li>\n</ul>\n<h2>2.0.4</h2>\n<ul>\n<li>Added support for union operators to <code>HTTPHeaderDict</code> (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2254\">#2254</a>)</li>\n<li>Added <code>BaseHTTPResponse</code> to <code>urllib3.__all__</code> (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3078\">#3078</a>)</li>\n<li>Fixed <code>urllib3.connection.HTTPConnection</code> to raise the <code>http.client.connect</code> audit event to have the same behavior as the standard library HTTP client (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2757\">#2757</a>)</li>\n<li>Relied on the standard library for checking hostnames in supported PyPy releases (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3087\">#3087</a>)</li>\n</ul>\n<h2>2.0.3</h2>\n<ul>\n<li>Allowed alternative SSL libraries such as LibreSSL, while still issuing a warning as we cannot help users facing issues with implementations other than OpenSSL. <a href=\"https://redirect.github.com/urllib3/urllib3/issues/3020\">#3020</a></li>\n<li>Deprecated URLs which don't have an explicit scheme <a href=\"https://redirect.github.com/urllib3/urllib3/pull/2950\">#2950</a></li>\n<li>Fixed response decoding with Zstandard when compressed data is made of several frames. <a href=\"https://redirect.github.com/urllib3/urllib3/issues/3008\">#3008</a></li>\n<li>Fixed <code>assert_hostname=False</code> to correctly skip hostname check. <a href=\"https://redirect.github.com/urllib3/urllib3/issues/3051\">#3051</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>2.0.6 (2023-10-02)</h1>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>\n</ul>\n<h1>2.0.5 (2023-09-20)</h1>\n<ul>\n<li>Allowed pyOpenSSL third-party module without any deprecation warning. (<code>[#3126](https://github.com/urllib3/urllib3/issues/3126) &lt;https://github.com/urllib3/urllib3/issues/3126&gt;</code>__)</li>\n<li>Fixed default <code>blocksize</code> of <code>HTTPConnection</code> classes to match high-level classes. Previously was 8KiB, now 16KiB. (<code>[#3066](https://github.com/urllib3/urllib3/issues/3066) &lt;https://github.com/urllib3/urllib3/issues/3066&gt;</code>__)</li>\n</ul>\n<h1>2.0.4 (2023-07-19)</h1>\n<ul>\n<li>Added support for union operators to <code>HTTPHeaderDict</code> (<code>[#2254](https://github.com/urllib3/urllib3/issues/2254) &lt;https://github.com/urllib3/urllib3/issues/2254&gt;</code>__)</li>\n<li>Added <code>BaseHTTPResponse</code> to <code>urllib3.__all__</code> (<code>[#3078](https://github.com/urllib3/urllib3/issues/3078) &lt;https://github.com/urllib3/urllib3/issues/3078&gt;</code>__)</li>\n<li>Fixed <code>urllib3.connection.HTTPConnection</code> to raise the <code>http.client.connect</code> audit event to have the same behavior as the standard library HTTP client (<code>[#2757](https://github.com/urllib3/urllib3/issues/2757) &lt;https://github.com/urllib3/urllib3/issues/2757&gt;</code>__)</li>\n<li>Relied on the standard library for checking hostnames in supported PyPy releases (<code>[#3087](https://github.com/urllib3/urllib3/issues/3087) &lt;https://github.com/urllib3/urllib3/issues/3087&gt;</code>__)</li>\n</ul>\n<h1>2.0.3 (2023-06-07)</h1>\n<ul>\n<li>Allowed alternative SSL libraries such as LibreSSL, while still issuing a warning as we cannot help users facing issues with implementations other than OpenSSL. (<code>[#3020](https://github.com/urllib3/urllib3/issues/3020) &lt;https://github.com/urllib3/urllib3/issues/3020&gt;</code>__)</li>\n<li>Deprecated URLs which don't have an explicit scheme (<code>[#2950](https://github.com/urllib3/urllib3/issues/2950) &lt;https://github.com/urllib3/urllib3/pull/2950&gt;</code>_)</li>\n<li>Fixed response decoding with Zstandard when compressed data is made of several frames. (<code>[#3008](https://github.com/urllib3/urllib3/issues/3008) &lt;https://github.com/urllib3/urllib3/issues/3008&gt;</code>__)</li>\n<li>Fixed <code>assert_hostname=False</code> to correctly skip hostname check. (<code>[#3051](https://github.com/urllib3/urllib3/issues/3051) &lt;https://github.com/urllib3/urllib3/issues/3051&gt;</code>__)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/262e3e332209ee93ff70e2b13502c8f20c105ac8\"><code>262e3e3</code></a> Release 2.0.6</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/644124ecd0b6e417c527191f866daa05a5a2056d\"><code>644124e</code></a> Merge pull request from GHSA-v845-jxx5-vc9f</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/740380c59ca2a7c2dceca19e5dba99f6b7060e62\"><code>740380c</code></a> Bump cryptography from 41.0.3 to 41.0.4 (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3131\">#3131</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/d9f85a749488188c286cd50606d159874db94d5f\"><code>d9f85a7</code></a> Release 2.0.5</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/d41f4122966f7f4f5f92001ad518e5d9dafcc886\"><code>d41f412</code></a> Undeprecate pyOpenSSL module (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3127\">#3127</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/b6c04cb3e62ef5a0e4947d037c12fb3ca79e024a\"><code>b6c04cb</code></a> Fix a link to &quot;absolute URI&quot; definition (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3128\">#3128</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/af7c78fa30f5a4e265911371d0c59b6baeddca0f\"><code>af7c78f</code></a> refactor: change double conditional to one (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3118\">#3118</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/34c13c8e68df6f89890ba08b9fc4fbf87ed21669\"><code>34c13c8</code></a> Refer to current internet standards in docs on proxies (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3124\">#3124</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/a3e94f218cd8297db73302eadae235f0c832a809\"><code>a3e94f2</code></a> Fix a name of an attribute in docs (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3125\">#3125</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/da69d4f4f95bc7ef9307fc8e0499c2121f1e4791\"><code>da69d4f</code></a> Fix docs build (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3123\">#3123</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/urllib3/urllib3/compare/2.0.2...2.0.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=2.0.2&new-version=2.0.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/examples/urllib3-2.0.6",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5958 from pypa/dependabot/pip/examples/urllib3-2.0.6\n\nBump urllib3 from 2.0.2 to 2.0.6 in /examples"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a744ee515ce6a4ea43",
    "number": 5957,
    "body": "### The issue\r\n\r\nFix noisy output in pipenv check as described in issue #5939. Prior to release v2023.8.19 in `pipenv/utils/__init__.py` logging basic config was set to ERROR, then to INFO. I am not sure whether that was on purpose, was changed in a large commit #5793, maybe it was just used for debugging and then not changed back. @matteius \r\n\r\n### The fix\r\n\r\nChange back to `logging.ERROR`.\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "enhancement-5939-fix-noisy-output-pipenv-check",
    "is_a_fork": true,
    "comments": [
      "The change to INFO was intentional -- quiet/bare should be fixed similar to how it was addressed here: \r\n https://github.com/pypa/pipenv/pull/5897\r\n\r\nOtherwise we will not be able to debug resolution internal to pip -- there were plenty of other issue reports related, which is why I made the change you referenced initially.    My stance is yes we want to better support quiet/bare, but its better to have too much information than not enough, and so I would rather leave the default as INFO and override specific to the quiet/bare flags.",
      "@matteius I adjusted the code fitting to your recent pull request, setting to warn if not verbose. \r\n\r\nI would like to have some thought based on how to pass the verbosity arg to  the `check` function in `pipenv/cli/command.py`: There is the possibility passing it via 'direct' argument, inserting `verbose=False` into the args, and the possibility of getting it via the `State `object. Both worked in my tests. I decided to go for the latter choice, however I am not 100% sure on that, as for example the quiet argument could, afaik, also be passed via the `State`, yet this is not the case. I would be grateful for further feedback.",
      "I think the click args would all get passed via the state, the way you are doing it -- this change looks reasonable to me."
    ],
    "commit_messages": [
      "Merge pull request #5957 from fmssn/enhancement-5939-fix-noisy-output-pipenv-check\n\nset regular logging level to ERROR"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a844ee515ce6a4ea44",
    "number": 5951,
    "body": "req.link is of type InstallRequirements which can be None. Return False (requirement not met) if this is the case.\r\n\r\n### The issue\r\n\r\nFix issue #5950. \r\n\r\n`req` is of type `InstallRequirements`, which has an optional attribute `link` which can be `None`. However, attributes of `req.link` are accessed directly.\r\n\r\n### The fix\r\n\r\nCatch if `req.link` is `None` and return `False` (requirement not met) before attributes of `req.link` are accessed.\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "This should be the right order to check against. Tests passed locally, had an environment fault earlier which is why they passed. Sorry for the hickup.",
      "@fmssn I believe this PR resulted in a regression for VCS-based package upgrades, specifically by commit 85c1ba5234ff7228cc64cb18c08f8b8fd9fd3e23.  I've added my findings on the bug report here:\r\n\r\n* https://github.com/pypa/pipenv/issues/5791#issuecomment-2336817238\r\n\r\nThe main query I have is if the proposed reordering of the conditional blocks will actually trigger #5950 again, which this PR resolved.  If you have any feedback to share, please reply to the comment I've linked above, on issue #5791 -- that would be greatly appreciated."
    ],
    "commit_messages": [
      "Merge pull request #5951 from fmssn/main\n\nCatch req.link = None"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a944ee515ce6a4ea45",
    "number": 5946,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md (#5946)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012a944ee515ce6a4ea46",
    "number": 5943,
    "body": "### The issue\r\n\r\nI believe during the conversion from `.rst` to `.md` a minor typo was introduced on the link for `python-dotenv` repo on [pipenv docs](https://pipenv.pypa.io/en/latest/shell/#automatic-loading-of-env)\r\n\r\n### The fix\r\n\r\nRemove the extra `>`\r\n\r\n> **_ps._**: Since this typo was observed, I took the liberty to `grep` the repo and see if there were similar cases. I found three more that seemed relevant. Note that in the TOML case, the `Spec` header was moved from the `READ.md` into their docs\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "docs/update-some-external-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update some external links on the docs (#5943)\n\n* Fix broken URLs on docs\r\n\r\n* Adjust pip URL so header is highlighted\r\n\r\n* Update URL for TOML specs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012aa44ee515ce6a4ea47",
    "number": 5941,
    "body": "### The issue\r\n\r\nThere is a security vulnerability for `certifi` versions <2023.7.22 (see details here: [CVE-2023-37920](https://nvd.nist.gov/vuln/detail/CVE-2023-37920)). Even though this version is only in /examples, it gets detected and flagged by static analysis tools when scanning docker images that have the latest version of pipenv installed.\r\n\r\nRelated issue: https://github.com/pypa/pipenv/issues/5940\r\n\r\n### The fix\r\n\r\nUpdate `certifi` in `/examples` to address the issue\r\n\r\n\r\n### The checklist\r\n\r\n* [x] [Associated issue](https://github.com/pypa/pipenv/issues/5940)\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "update-certifi-in-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5941 from yurishevtsov/update-certifi-in-examples\n\nBump certifi from 2023.5.7 to 2023.7.22 in /examples"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ab44ee515ce6a4ea48",
    "number": 5936,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes issue #5791 \r\n\r\n### The fix\r\n\r\nSince skip-lock is still in play, and the existing method is operating off only the install req, we cannot with certainty know if the remote requirement has been updated, so queue it for install by pip.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5791",
    "is_a_fork": false,
    "comments": [
      "@matteius The change is OK. But does it really fix the issue? Reading the issue (briefly) it seems there is still work going on? Can this be merged?",
      "Possibly \n```python\nreturn(\n    if req.link is not None and\n    ...\n)\n```\n\nWould also be ok. The change is pretty important, e.g. it atm crashes the current prefect installation at python 3.11.",
      "@fmssn Sorry but I don't understand what you mean by its crashing on a perfectly good install of 3.11 or how this change could affect that.\r\n\r\n@oz123 Yeah I am not sure yet why this change wouldn't have solved their issue but probably needs more discovery and possibly this change isn't quite it yet.",
      "@matteius \r\n\r\nFor reproduction, you can open a dev container with e.g. \"prefecthq/prefect:2.13-python3.11\". \r\n\r\nWith Pipfile\r\n\r\n```\r\n[[source]]\r\nurl = \"https://pypi.python.org/simple\"\r\nverify_ssl = true\r\nname = \"pypi\"\r\n\r\n[packages]\r\nprefect = \"*\"\r\n\r\n[dev-packages]\r\npytest = \"*\"\r\n```\r\nExecuting\r\n```sh\r\npipenv lock \r\npipenv install --system\r\n```\r\n\r\nyields \r\n`AttributeError: 'NoneType' object has no attribute 'scheme'`\r\n\r\nThis is because req.link is optional and of Type `InstallRequirement`, with the default being None. Therefore accessing the attribute scheme if it is `None` raises an Attribute Error.\r\n"
    ],
    "commit_messages": [
      "Assume that vcs and direct URL installs need to be reinstalled (#5936)\n\n* Assume the vcs and direct URL installs need to be reinstalled"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ac44ee515ce6a4ea49",
    "number": 5935,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes issue #5934\r\n\r\n### The fix\r\n\r\nurllib urlparse has to be better at separating netlocs from the remaining path than I can do.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "git-branches-with-slash",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Solving slashes or other less usual symbols in vcs refs were not being interpreted correctly. (#5935)\n\n* Solving issue 5934 where slashes or other less usual symbols in vcs refs were not being interpreted correctly.\r\n* add some new unit-style integration tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ad44ee515ce6a4ea4a",
    "number": 5931,
    "body": "I am exploring how the resolver determines what python version its using and what markers to evaluate against.\r\n\r\n### The issue\r\n\r\nFixes #5908\r\n\r\n### The fix\r\n\r\nAdds another reserved named category for pipenv and a patch to packaging, that allows overriding any of the default environment keys.   Additionally, support ranges for `python_version` and `python_full_version` and a `python` key to specify the base package finder python version to use for the resolver.\r\n\r\nIn my example, I've added these constraints to our Pipfile to show that I can resolve the requirements that require python 3.7 using a python 3.11 version.\r\n\r\nAlso explore allowing multiple operating system markers to resolve.\r\n\r\nNote:  This branch started as me removing some unused code based on a coverage report and some extra analysis.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "revisit-resolver-constraints",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ad44ee515ce6a4ea4b",
    "number": 5930,
    "body": "Specifying the package name with `name @ requirement` works for some things, but that information is lost the way the data is passed to the resolver currently.   This updates the constraints file to have req_name, pip_line format.\r\n\r\n### The issue\r\n\r\nImprovements for the case of #5904\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "better-editable-installs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Include the package name in the information to the resolver (#5930)\n\n* Include the package name in the information to the resolver\r\n\r\n* Fix unit tests\r\n\r\n* fix unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ae44ee515ce6a4ea4c",
    "number": 5928,
    "body": "### The issue\r\n\r\nFixes issue #5923\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "issue-editable-vcs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Pass editable for vcs when specified (#5928)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012af44ee515ce6a4ea4d",
    "number": 5926,
    "body": "ignore_compatibility was supposed to default to False, collect hashes already passes True.\r\n\r\n\r\n### The issue\r\n\r\nFixes #5924 \r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5924",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "ignore_compatibility was supposed to default to False (#5926)\n\n* fix resolver as ignore_compatibility was supposed to default to False, collect hashes already passes True."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b044ee515ce6a4ea4e",
    "number": 5922,
    "body": "### The issue\r\n\r\nThe 3.7 tests are failing because the recent lock adjustments and packages we depend on dropped 3.7, but it only affects the test runner for now -- we will pursue https://github.com/pypa/pipenv/pull/5879 soon since the latest rounds of bug fixes after the last major refactor are almost complete/stabilized.\r\n\r\n\r\n### The fix\r\n\r\nDrop 3.7 from test CI\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "test-runners",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Drop 3.7 test runner (#5922)\n\n* Drop 3.7 test runner and invoke 3.12\r\n\r\n* Ok 3.12 on windows still hangs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b144ee515ce6a4ea4f",
    "number": 5921,
    "body": "* Fallback to default vcs ref when no ref is supplied\r\n* More proactively determine package name from the pip line where possible, fallback to the existing file scanning logics when unable to determine name.\r\n\r\n### The issue\r\n\r\nThere are so many edge cases of trying to get the package name from setup.py and surprisingly many packages still rely on it.   A great example is requests:  https://github.com/psf/requests/blob/main/setup.py\r\n\r\nIn the requests setup.py example, the name comes from reading another file on the filesystem, and the ast parser will never be able to accomplish that.   Prior to this change, it was not possible to install the requests vcs into the Pipfile without manually creating the Pipfile entry with the correct package name and locking. \r\n\r\nFixes issue #5857 \r\n\r\n### The fix\r\n\r\nAllow not supplying a default ref (falls  back to repository default thanks to pip internals)\r\nAllows user to specify using the new style pip line `name @` syntax the package name:\r\n\r\n\r\nCompare these two examples:\r\n1.) Not supplying a name in the install (works as before):\r\n```\r\n$ pipenv  install \"git+https://github.com/requests/requests.git\"\r\nInstalling git+https://github.com/requests/requests.git...\r\nResolving git+https://github.com/requests/requests.git...\r\n[    ] Installing...INFO:pipenv.patched.pip._internal.vcs.git:Cloning https://github.com/requests/requests.git to c:\\users\\matte\\appdata\\local\\temp\\tmpkedl0h8p\r\nINFO:pip.subprocessor:Running command git clone --filter=blob:none https://github.com/requests/requests.git 'C:\\Users\\matte\\AppData\\Local\\Temp\\tmpkedl0h8p'\r\n[    ] Installing None...INFO:pip.subprocessor:Cloning into 'C:\\Users\\matte\\AppData\\Local\\Temp\\tmpkedl0h8p'...\r\n[    ] Installing None...INFO:pip.subprocessor:Updating files:  47% (48/101)\r\nINFO:pip.subprocessor:Updating files:  48% (49/101)\r\nINFO:pip.subprocessor:Updating files:  49% (50/101)\r\nINFO:pip.subprocessor:Updating files:  50% (51/101)\r\nINFO:pip.subprocessor:Updating files:  51% (52/101)\r\nINFO:pip.subprocessor:Updating files:  52% (53/101)\r\nINFO:pip.subprocessor:Updating files:  53% (54/101)\r\nINFO:pip.subprocessor:Updating files:  54% (55/101)\r\nINFO:pip.subprocessor:Updating files:  55% (56/101)\r\nINFO:pip.subprocessor:Updating files:  56% (57/101)\r\nINFO:pip.subprocessor:Updating files:  57% (58/101)\r\nINFO:pip.subprocessor:Updating files:  58% (59/101)\r\nINFO:pip.subprocessor:Updating files:  59% (60/101)\r\nINFO:pip.subprocessor:Updating files:  60% (61/101)\r\nINFO:pip.subprocessor:Updating files:  61% (62/101)\r\nINFO:pip.subprocessor:Updating files:  62% (63/101)\r\nINFO:pip.subprocessor:Updating files:  63% (64/101)\r\nINFO:pip.subprocessor:Updating files:  64% (65/101)\r\nINFO:pip.subprocessor:Updating files:  65% (66/101)\r\nINFO:pip.subprocessor:Updating files:  66% (67/101)\r\nINFO:pip.subprocessor:Updating files:  67% (68/101)\r\nINFO:pip.subprocessor:Updating files:  68% (69/101)\r\nINFO:pip.subprocessor:Updating files:  69% (70/101)\r\nINFO:pip.subprocessor:Updating files:  70% (71/101)\r\nINFO:pip.subprocessor:Updating files:  71% (72/101)\r\nINFO:pip.subprocessor:Updating files:  72% (73/101)\r\nINFO:pip.subprocessor:Updating files:  73% (74/101)\r\nINFO:pip.subprocessor:Updating files:  74% (75/101)\r\nINFO:pip.subprocessor:Updating files:  75% (76/101)\r\nINFO:pip.subprocessor:Updating files:  76% (77/101)\r\nINFO:pip.subprocessor:Updating files:  77% (78/101)\r\nINFO:pip.subprocessor:Updating files:  78% (79/101)\r\nINFO:pip.subprocessor:Updating files:  79% (80/101)\r\nINFO:pip.subprocessor:Updating files:  80% (81/101)\r\nINFO:pip.subprocessor:Updating files:  81% (82/101)\r\nINFO:pip.subprocessor:Updating files:  82% (83/101)\r\nINFO:pip.subprocessor:Updating files:  83% (84/101)\r\nINFO:pip.subprocessor:Updating files:  84% (85/101)\r\nINFO:pip.subprocessor:Updating files:  85% (86/101)\r\nINFO:pip.subprocessor:Updating files:  86% (87/101)\r\nINFO:pip.subprocessor:Updating files:  87% (88/101)\r\nINFO:pip.subprocessor:Updating files:  88% (89/101)\r\nINFO:pip.subprocessor:Updating files:  89% (90/101)\r\nINFO:pip.subprocessor:Updating files:  90% (91/101)\r\nINFO:pip.subprocessor:Updating files:  91% (92/101)\r\nINFO:pip.subprocessor:Updating files:  92% (93/101)\r\nINFO:pip.subprocessor:Updating files:  93% (94/101)\r\nINFO:pip.subprocessor:Updating files:  94% (95/101)\r\nINFO:pip.subprocessor:Updating files:  95% (96/101)\r\nINFO:pip.subprocessor:Updating files:  96% (97/101)\r\nINFO:pip.subprocessor:Updating files:  97% (98/101)\r\nINFO:pip.subprocessor:Updating files:  98% (99/101)\r\nINFO:pip.subprocessor:Updating files:  99% (100/101)\r\nINFO:pip.subprocessor:Updating files: 100% (101/101)\r\nINFO:pip.subprocessor:Updating files: 100% (101/101), done.\r\n[   =] Installing None...INFO:pipenv.patched.pip._internal.vcs.git:Resolved https://github.com/requests/requests.git to commit 881281250f74549f560408e5546d95a8cd73ce28\r\nAdded --title-- to Pipfile's [packages] ...\r\nInstallation Succeeded\r\nPipfile.lock (120f0d) out of date, updating to (3873be)...\r\nLocking [packages] dependencies...\r\nBuilding requirements...\r\nResolving dependencies...\r\nLocking Failed!\r\n[    ] Locking...False\r\nUsage: resolver.py [options]\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\matte\\.pyenv\\pyenv-win\\versions\\3.9.13\\lib\\optparse.py\", line 1387, in parse_args\r\n    stop = self._process_args(largs, rargs, values)\r\n  File \"c:\\users\\matte\\.pyenv\\pyenv-win\\versions\\3.9.13\\lib\\optparse.py\", line 1427, in _process_args\r\n    self._process_long_opt(rargs, values)\r\n  File \"c:\\users\\matte\\.pyenv\\pyenv-win\\versions\\3.9.13\\lib\\optparse.py\", line 1480, in _process_long_opt\r\n    opt = self._match_long_opt(opt)\r\n  File \"c:\\users\\matte\\.pyenv\\pyenv-win\\versions\\3.9.13\\lib\\optparse.py\", line 1465, in _match_long_opt\r\n    return _match_abbrev(opt, self._long_opt)\r\n  File \"c:\\users\\matte\\.pyenv\\pyenv-win\\versions\\3.9.13\\lib\\optparse.py\", line 1670, in _match_abbrev\r\n    raise BadOptionError(s)\r\noptparse.BadOptionError: no such option: --title--@\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\_internal\\req\\req_file.py\", line 377, in _parse_file\r\n    args_str, opts = self._line_parser(line)\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\_internal\\req\\req_file.py\", line 409, in parse_line\r\n    opts, _ = parser.parse_args(options, defaults)\r\n  File \"c:\\users\\matte\\.pyenv\\pyenv-win\\versions\\3.9.13\\lib\\optparse.py\", line 1389, in parse_args\r\n    self.error(str(err))\r\n  File \"c:\\users\\matte\\.pyenv\\pyenv-win\\versions\\3.9.13\\lib\\optparse.py\", line 1569, in error\r\n    self.exit(2, \"%s: error: %s\\n\" % (self.get_prog_name(), msg))\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\_internal\\req\\req_file.py\", line 452, in parser_exit\r\n    raise OptionParsingError(msg)\r\npipenv.patched.pip._internal.req.req_file.OptionParsingError: resolver.py: error: no such option: --title--@\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\resolver.py\", line 675, in <module>\r\n    main()\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\resolver.py\", line 661, in main\r\n    _main(\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\resolver.py\", line 645, in _main\r\n    resolve_packages(\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\resolver.py\", line 612, in resolve_packages\r\n    results, resolver = resolve(\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\resolver.py\", line 592, in resolve\r\n    return resolve_deps(\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\utils\\resolver.py\", line 897, in resolve_deps\r\n    results, hashes, internal_resolver = actually_resolve_deps(\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\utils\\resolver.py\", line 670, in actually_resolve_deps\r\n    resolver.resolve()\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\utils\\resolver.py\", line 442, in resolve\r\n    constraints = self.constraints\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\utils\\resolver.py\", line 400, in constraints\r\n    possible_constraints_list = self.possible_constraints\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\utils\\resolver.py\", line 387, in possible_constraints\r\n    possible_constraints_list = [\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\utils\\resolver.py\", line 387, in <listcomp>\r\n    possible_constraints_list = [\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\_internal\\req\\req_file.py\", line 148, in parse_requirements\r\n    for parsed_line in parser.parse(filename, constraint):\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\_internal\\req\\req_file.py\", line 335, in parse\r\n    yield from self._parse_and_recurse(filename, constraint)\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\_internal\\req\\req_file.py\", line 340, in _parse_and_recurse\r\n    for line in self._parse_file(filename, constraint):\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\_internal\\req\\req_file.py\", line 381, in _parse_file\r\n    raise RequirementsFileParseError(msg)\r\npipenv.patched.pip._internal.exceptions.RequirementsFileParseError: Invalid requirement: --title--@ git+https://github.com/requests/requests.git\r\nresolver.py: error: no such option: --title--@\r\n\r\nTraceback (most recent call last):\r\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\r\n  File \"<frozen runpy>\", line 88, in _run_code\r\n  File \"C:\\Users\\matte\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\pipenv.exe\\__main__.py\", line 7, in <module>\r\n    # when invoked as python -m pip <command>\r\n                 ^^^^^\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\vendor\\click\\core.py\", line 1130, in __call__\r\n    return self.main(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\cli\\options.py\", line 58, in main\r\n    return super().main(*args, **kwargs, windows_expand_args=False)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\vendor\\click\\core.py\", line 1055, in main\r\n    rv = self.invoke(ctx)\r\n         ^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\vendor\\click\\core.py\", line 1657, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\vendor\\click\\core.py\", line 1404, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\vendor\\click\\core.py\", line 760, in invoke\r\n    return __callback(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\vendor\\click\\decorators.py\", line 84, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\vendor\\click\\core.py\", line 760, in invoke\r\n    return __callback(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\cli\\command.py\", line 209, in install\r\n    do_install(\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\routines\\install.py\", line 297, in do_install\r\n    raise e\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\routines\\install.py\", line 281, in do_install\r\n    do_init(\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\routines\\install.py\", line 648, in do_init\r\n    do_lock(\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\routines\\lock.py\", line 65, in do_lock\r\n    venv_resolve_deps(\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\utils\\resolver.py\", line 838, in venv_resolve_deps\r\n    c = resolve(cmd, st, project=project)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\utils\\resolver.py\", line 707, in resolve\r\n    raise RuntimeError(\"Failed to lock Pipfile.lock!\")\r\nRuntimeError: Failed to lock Pipfile.lock!\r\n```\r\n\r\n2.) Providing the name of the install:\r\n```\r\nmatte@LAPTOP-N5VSGIBD MINGW64 ~/Projects/pipenv-triage/vcs_reqs3\r\n$ pipenv  install \"requests@ git+https://github.com/requests/requests.git\"\r\nInstalling requests@ git+https://github.com/requests/requests.git...\r\nResolving requests@ git+https://github.com/requests/requests.git...\r\nAdded requests to Pipfile's [packages] ...\r\nInstallation Succeeded\r\nInstalling dependencies from Pipfile.lock (120f0d)...\r\nTo activate this project's virtualenv, run pipenv shell.\r\nAlternatively, run a command inside the virtualenv with pipenv run.\r\n```\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5857",
    "is_a_fork": false,
    "comments": [
      "I want to cry--- \r\n```\r\nname=about[\"__title__\"],\r\n```\r\nSuch a thing, a very essential python package, which has not been removed in 6 (!!!) years...\r\nSomeone should just make PR to convert reuests to use pyproject....",
      "Ill add tests in https://github.com/pypa/pipenv/issues/5853 and a doc string now."
    ],
    "commit_messages": [
      "Fallback to default vcs ref and determine package name from the pip line where possible (#5921)\n\n* More proactively determine package name from the pip line where possible, fallback to the file scanning logics."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b244ee515ce6a4ea50",
    "number": 5920,
    "body": "\r\n\r\n### The issue\r\n\r\nFixes #5912 \r\n\r\n### The fix\r\n\r\nInclude the Pipfile markers in the install phase when using `--skip-lock`\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5912",
    "is_a_fork": false,
    "comments": [
      "Ignore the python 3.7 failures at this point -- we will drop it soon, and its too much work to pin everything down that has already dropped it."
    ],
    "commit_messages": [
      "include markers when skipping lock (#5920)\n\n* include markers from Pipfile when skipping lock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b244ee515ce6a4ea51",
    "number": 5919,
    "body": "We definitely don't want relative one directory to be treated as package name and pip documentation does not provide much guidance on this.\r\n\r\n### The issue\r\n\r\nFixes #5917 \r\n\r\n### The fix\r\n\r\nIf the path is not absolute, ensure it is prepended with ./ so it is treated as an installable path by pip (and not a named requirement) -- also handle the specification of extras with local file installs.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5917",
    "is_a_fork": false,
    "comments": [
      "Well it seems this one requires more work to untangle the edge cases.",
      "Reading the original issue, I see a Pipfile from the user. But the dependencies sections are empty.\r\nCan we add a test case for this PR which uses a Pipfile that walks the code path added here?\r\nFor the sake of future maintainers and us, I believe it's worth the effort.",
      "@oz123 its a github actions reproduction repo, I want to extrapolate the test package into our test runner to help check editable installs better:  https://github.com/stewartmiles/pipenv_editable_install_repro/blob/main/try_pipenv_versions.sh",
      "I discussed with @oz123 and he is not going to block me from merging this, given both of our time constraints, I am going to make a concerted effort to improve pipenv test suite during hacktoberfest (October time-frame)"
    ],
    "commit_messages": [
      "Better handling of local file install edge cases; handle local file extras (#5919)\n\n* Better handling of local file install edge cases; handle local file extras\r\n* more logical fix that handles more edge cases, including editable or not.\r\n* Handle extras for file installs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b344ee515ce6a4ea52",
    "number": 5918,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "@RANJITHROSAN17 This PR doesn't even make sense."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b444ee515ce6a4ea53",
    "number": 5916,
    "body": "### The issue\r\n\r\nEnsure that this repos `pyproject.toml` file is formatted like others.\r\n\r\nAlso:\r\n* `pre-commit autoupdate`\r\n* Upgrade to `actions/checkout@v4`\r\n* Lint on the current version of Python\r\n* Tests on Python 3.12 are failing on Linux, macOS, and Windows.\r\n    * https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#allow-pre-releases\r\n\r\n### The fix\r\n\r\nAdd `pyproject-fmt` to our pre-commit processing.\r\n* https://pyproject-fmt.readthedocs.io\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "pyproject-fmt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5916 from cclauss/pyproject-fmt\n\npre-commit: Add pyproject-fmt"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b544ee515ce6a4ea54",
    "number": 5909,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n### The issue\r\n\r\nThis PR closes #5881 \r\n\r\n### The fix\r\n\r\nThis PR implements the changes suggested in the issue mentioned, therefore all the docs associated with the docs are fully in MARKDOWN (.md). **About the [cli file](https://github.com/pypa/pipenv/blob/main/docs/cli.rst) I did not found a way to make the inclusion like the .rst file, so I saw how it was in the docs in html and wrote it in *.md***.\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "5881-mix_of_doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "5881-Full conversion from rst to md (#5909)\n\n* add the files from rst -> md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b644ee515ce6a4ea55",
    "number": 5907,
    "body": "Please refer to [#5877](https://github.com/pypa/pipenv/pull/5877)\r\n\r\n\r\n### The issue\r\n\r\nWhen I was using pipelinev in an environment with network issues, I needed to increase the timeout setting for the connection to complete properly, but I found that the default behavior was set to 10 seconds and could not be changed, so I increased it.\r\n\r\n### The fix\r\n\r\n\r\nAdd a new ENV config for timeout, so that user can change it.\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "dev/add_env",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5907 from birdhackor/dev/add_env\n\nAdd PIPENV_REQUESTS_TIMEOUT and use it for requests session."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b644ee515ce6a4ea56",
    "number": 5905,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5904 \r\n\r\n### The fix\r\n\r\nConsider more edge cases in the setup.py ast parser and encourage more people to move away from complicated setup.py\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "more-setuppy-edge-cases",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Handle case where setup name is referencing a variable that is a string (#5905)\n\n* Handle case where setup name is referencing a variable that is a string"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b744ee515ce6a4ea57",
    "number": 5902,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@Thatsdead95 It would be good to get GitHub to modify https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository to match this file naming so that your suggestion is well documented.\r\n\r\nAlso see https://peps.python.org/pep-0639/#project-source-metadata\r\n\r\n* https://github.com/pypa/pipenv/blob/main/pyproject.toml#L14 also refers to this file\r\n\r\n",
      "?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b844ee515ce6a4ea58",
    "number": 5901,
    "body": "Landing these two Python dependencies should make pull request #5836 easier to complete.\r\n* https://pypi.org/project/build\r\n* https://pypi.org/project/twine\r\n\r\n@kalebmckale Your review, please.",
    "head_branch": "add-build",
    "is_a_fork": true,
    "comments": [
      "Just some notes on how I did this on my M1 Mac with two terminal tabs open...\r\n\r\n% ` brew install python@3.7`\r\n```\r\nError: python@3.7 has been disabled because it is deprecated upstream!\r\n```\r\n---\r\n% ` docker run --rm -it python:3.7 bash`\r\n---> Inside the docker container...\r\n```bash\r\napt-get -qq update && apt-get install -y vim  # Or your favorite editor\r\ngit clone https://github.com/pypa/pipenv\r\ncd pipenv\r\npython3 -m venv .venv\r\nsource .venv/bin/activate\r\npip install --upgrade pip\r\npip install pipenv\r\nvi Pipfile  # Add build and twine\r\npipenv update --clear\r\npipenv shell\r\n    # Inside shell...\r\n    pipenv update --clear && exit\r\ngit diff  # Verify the changes\r\npwd\r\n# Do not `exit` until AFTER the modified files have been docker copied out of the container!!\r\n```\r\nIn another terminal tab...\r\n% `docker ps`\r\n```\r\nCONTAINER ID   IMAGE                                                  COMMAND ...\r\n413378ea9275   python:3.7                                             \"bash\" ...\r\n```\r\n% `docker cp 413378ea9275:/pipenv/Pipfil* .`\r\nThe modified files are now in the current working directory of the macOS file system.",
      "I mean on an actual computer, it’s not a problem. On iPad, it’s not so easy. I did end up getting Python 3.7 installed, but the file took hours to go through the locking process and still eventually failed for some undetermined reason. `iSH`, the app I use, still has quite a few limitations to it.",
      "On iOS, I have been involved with these two apps but they are sort of prepackaged vs. iSH.\r\n* https://omz-software.com/pythonista\r\n* https://pyto.app",
      "Again, it’s not an issue of development. I personally use Pyto and Carnets. But compiling new versions of Python or running applications like locking Pipfile, as far as I know, cannot be done inside these apps. They don’t provide much of an isolated testing environment. However, I do like the convenience of developing on my iPad. It just makes some things a bit more tedious, but I generally like helping and doing what I can."
    ],
    "commit_messages": [
      "Pipfile: Add build and twine (#5901)\n\n* Pipfile: Add build and twine"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012b944ee515ce6a4ea59",
    "number": 5900,
    "body": "Perhaps a step towards #5836\r\n\r\nThis pull request was created using https://pypi.org/project/setuptools-py2cfg plus manual modifications.\r\n\r\nhttps://setuptools.pypa.io/en/latest/userguide/quickstart.html#basic-use\r\n> We recommend users expose as much as possible configuration in a more declarative way via the [pyproject.toml](https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html) or [setup.cfg](https://setuptools.pypa.io/en/latest/userguide/declarative_config.html), and keep the setup.py minimal with only the dynamic parts (or even omit it completely if applicable).\r\n\r\n---\r\n___After___ a pull request like this is tested and merged, I usually do a follow-up PR like...\r\n\r\n### PEP 621: Migrate settings from setup.cfg into pyproject.toml\r\nMigrate settings from `setup.cfg` into `pyproject.toml` using [ini2toml](https://pypi.org/project/ini2toml) to do the file conversion and running [pyproject-fmt](https://pypi.org/project/pyproject-fmt) and then [validate-pyproject](https://github.com/abravalheri/validate-pyproject) in pre-commit to validate the results.\r\n* Currently, flake8 is not yet compatible with `pyproject.toml` so move its settings into [`.flake8`](https://flake8.pycqa.org/en/latest/user/configuration.html#configuration-locations).\r\n\r\nhttps://setuptools.pypa.io/en/latest/userguide/quickstart.html#basic-use\r\n> We recommend users expose as much as possible configuration in a more declarative way via the [pyproject.toml](https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html) or [setup.cfg](https://setuptools.pypa.io/en/latest/userguide/declarative_config.html), and keep the setup.py minimal with only the dynamic parts (or even omit it completely if applicable).\r\n\r\nRan [`validate-pyproject`](https://github.com/abravalheri/validate-pyproject) to validate the results.\r\n\r\nFrom `validate-pyproject` README:\r\n> With the approval of [PEP 517](https://www.python.org/dev/peps/pep-0517/) and [PEP 518](https://www.python.org/dev/peps/pep-0518/), the Python community shifted towards a strong focus on standardization for packaging software, which allows more freedom when choosing tools during development and make sure packages created using different technologies can interoperate without the need for custom installation procedures.\r\n\r\n> This shift became even more clear when [PEP 621](https://www.python.org/dev/peps/pep-0621/) was also approved, as a standardized way of specifying project metadata and dependencies.\r\n\r\n> `validate-pyproject` was born in this context, with the mission of validating `pyproject.toml` files, and making sure they are compliant with the standards and PEPs.",
    "head_branch": "setuptools-py2cfg",
    "is_a_fork": true,
    "comments": [
      "@cclauss I think this effort will conflict with:  https://github.com/pypa/pipenv/pull/5836",
      "Did you read the first line of the [commit message](https://github.com/pypa/pipenv/pull/5900#issue-1875266917) above?\r\n\r\nI am highly supportive of 5836 but it is failing its tests.  I thought we could advance step-by-step until we can rebase 5836 in a way that passes all tests.  Please feel free to close ___this___ PR with unmerged commits.",
      "We can keep it open -- I am not sure what path would be better and I am not opinionated in this case.  CC @kalebmckale ",
      "Oh...  Now that I see:\r\n```diff\r\n+ pip install build\r\n# ...\r\n-        python -m pipenv run python setup.py sdist bdist_wheel\r\n+        python -m pipenv run python -m build\r\n```\r\nin #5836, that makes MUCH more sense.",
      "Closing in favor of #5836"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ba44ee515ce6a4ea5a",
    "number": 5898,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5894\r\n\r\n### The fix\r\n\r\nI installed a local nexus server, uploaded packages and explored how the index is laid out, and then refactored the hash collector to work with both this and the pytorch style index.\r\n\r\nHandles other edge cases around package names with dots.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "hash-collection-refinements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Handle more variations in private index html to improve hash collection (#5898)\n\n* Handle more cases of hash collection\r\n\r\n* add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012bb44ee515ce6a4ea5b",
    "number": 5897,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5854\r\n\r\n### The fix\r\n\r\nSet the resolver pipenv log level to WARN when verbose is not passed.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5854",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Set log level in resolver to WARN when verbose is not passed (#5897)\n\n* Set log level in resolver to WARN when verbose is not passed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012bb44ee515ce6a4ea5c",
    "number": 5896,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nRelative paths are preferable for editable installs.\r\n\r\n### The fix\r\n\r\nFixes #5858\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "editable-relative-refinment",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Relative paths improvements for editable installs (#5896)\n\n* Relative paths improvements for editable installs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012bc44ee515ce6a4ea5d",
    "number": 5895,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nA while back I broke install_search_all_sources = True and I've realized this patch.\r\n\r\n### The fix\r\n\r\nSearch scopes gets used for resolver and installer, but install we invoke pip interface.   This gives a way to ensure index restricted packages for the resolver, but bypass that during install.\r\n\r\nFixes #5743 \r\nFixes #5781 \r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "fix-install-search-all-sources",
    "is_a_fork": false,
    "comments": [
      "I pulled this branch and built it locally using `python -m build --wheel`. I then installed the current latest released pipenv build and added\r\n```\r\n[pipenv]\r\ninstall_search_all_sources = true\r\n```\r\nto the bottom of my Pipfile, and then ran `pipenv sync --dev`, and it failed.\r\nI then uninstalled the latest release and installed pipenv from the wheel I just built and it sync'd successfully, so I'd say this looks good, at least for this particular case."
    ],
    "commit_messages": [
      "Apply patch for install_search_all_sources = True (#5895)\n\n* Apply patch for install_search_all_sources = True\r\n* patch the patch\r\n* Add news fragment\r\n* add back test of install_search_all_sources"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012bd44ee515ce6a4ea5e",
    "number": 5892,
    "body": "### The issue\r\n\r\nI want transitive platform locking to work better.\r\n\r\n### The fix\r\n\r\nBy following the resolution chain (where the package came from) we can get back to the Pipfile entry and apply the same sys_platform markers the user intended.\r\n\r\nAdditionally add a top level platform_machine specifier that works the same way.\r\n\r\nNote:  Adding directly to the markers will behave different with the pip resolver than adding them as distinct specifier keys in the Pipfile.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "transitive-sys-markers",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Top level Pipfile sys_platform markers should be transitive (#5892)\n\n* Top level Pipfile sys_platform markers should be transitive\r\n* Add platform_machine top level specifier\r\n* Handle case where markers is None\r\n* more safety checks\r\n* relock on python 3.7\r\n\r\n---------\r\n\r\nCo-authored-by: Christian Clauss <cclauss@me.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012be44ee515ce6a4ea5f",
    "number": 5889,
    "body": "Removed vulnerable e-tugra certificates\r\n[Related]\r\nhttps://github.com/pypa/pipenv/issues/5888\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "This should be done upstream in pip and then pipenv should vendor in the new version of pip, ideally.",
      "Please refer advisory database [vulns/certifi/PYSEC-2023-135.yaml](https://github.com/pypa/advisory-database/blob/9ac27e2dc49151238099cf755f08e142375119c1/vulns/certifi/PYSEC-2023-135.yaml#L8)\r\n\r\nAlternatively, guide me which the other repo you are referring ?\r\n",
      "@nagaripratap its just that your modifying the internal cert of pip which we vendor in, it looks like pip already merged this upstream but hasn't cut a new release yet:  https://github.com/pypa/pip/pull/12206",
      "Ok got it 👍. "
    ],
    "commit_messages": [
      "Merge pull request #5889 from nagaripratap/main\n\n[fix] Update cacert.pem to remove vulnerable e-tugra certificates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012bf44ee515ce6a4ea60",
    "number": 5887,
    "body": "I've received two verifications this solves the hash collection issues with google artifact registry.\r\n\r\n### The issue\r\n\r\nI had removed the pip finder compatibility patch thinking it was no longer doing anything useful (it predates Oz and myself) but I was wrong -- it was part of what was allowing the hash collection from google artifact registry. \r\n\r\nFixes Issue #5827 \r\n\r\n### The fix\r\n\r\nIncludes a couple more changes from testing against my google artifact registry test setup.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5827-compat",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5887 from pypa/issue-5827-compat\n\nIssue 5827 restore ignore compatibility finder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c044ee515ce6a4ea61",
    "number": 5886,
    "body": "### The issue\r\n\r\nIn the refactor away from requirementslib, I incorrectly made an assumption that if the install line is found as a relative file path that its intended as an local file install, but this broke for cases where the file or directory name matched the named package to be pulled from a package index.\r\n\r\n### The fix\r\n\r\nEditable installs will need to be specified by passing the editable: true or -e arg, and not inferred.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5885",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Assorted local editable file file fixes (#5886)\n\n* Do not consider something a local editable file unless the -e flag is passed.\r\n* Add editable to Pipfile when specifie\r\n* Ensure lockfile matches Pipfile for editable specification\r\n* Handle more edge cases of parsing setup.py using ast in different python versions.\r\n* Can assume if the name ends with an installable file extension its not a named requirement.\r\n* Simplify logic\r\n* Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c044ee515ce6a4ea62",
    "number": 5882,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5878 \r\nFixes #5880 \r\n\r\n### The fix\r\n\r\nReverts the change that is believed to have caused this per https://github.com/pypa/pipenv/issues/5878#issuecomment-1695759815\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5878",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert change that caused the credentials in source url issue (#5882)\n\n* fully revert this change to fix the credentials in source url issue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c144ee515ce6a4ea63",
    "number": 5879,
    "body": "### The issue\r\n\r\nDrop support for Python 3.7\r\n\r\n### The fix\r\n\r\nIt's obvious \r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue :  #5819\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #. : incoming\r\n",
    "head_branch": "mdupuy/drop-python-3.7",
    "is_a_fork": true,
    "comments": [
      "I will be holding off on this one until we are satisfied that the recent releases are working for the majority of use cases.",
      "Also, this change will conflict with:  https://github.com/pypa/pipenv/pull/5836",
      "No worries, I will wait. And no worries for the conflicting change, I will update my PR, the conflict won't be a big thing.",
      "I will resume work now that https://github.com/pypa/pipenv/pull/5836 is merged.",
      "It is time to take this up again.",
      "I think we're good.",
      "pyptoject.toml needs to remove the python 3.7 support line or else the pip resolver will still try to install this for 3.7 versions.",
      "Also please add a news fragment stating we are dropping support for 3.7",
      "Sorry, some changes had not been pushed. I attempted to go a step more in the cleaning, the *even more cleaning* commit, but I got errors I did not understand so I reverted it. If you can tell me what was wrong, it could be done in a different PR. ",
      "Arg. It should have been squash-merged. But thank you.",
      "@deronnax I've gotten feedback both ways -- usually people want the regular merge because if I squash merge it gives me credit for your commit or something -- anyway, thanks for your contribution!  Worst case is  the revert button from the PR will undo the whole changeset"
    ],
    "commit_messages": [
      "Merge pull request #5879 from deronnax/mdupuy/drop-python-3.7\n\nDrop support for python3.7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c244ee515ce6a4ea64",
    "number": 5877,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhen I was using pipelinev in an environment with network issues, I needed to increase the timeout setting for the connection to complete properly, but I found that the default behavior was set to 10 seconds and could not be changed, so I increased it.\r\n\r\n### The fix\r\n\r\n\r\nAdd a new ENV config for timeout, so that user can change it.\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Fix Unexpected token `)` and remove extra space.",
      "@birdhackor Please also update corresponding documentation for this new env var.",
      "> @birdhackor Please also update corresponding documentation for this new env var.\r\n\r\nSeems `docs/configuration.md` use autoclass to generate documentation. I think it will automaticly use docstrings as documentation.\r\n\r\nAm I missing anything that needs to be modified?",
      "@birdhackor Just a new fragment then, and there is a conflict to resolve -- also there is a second spot now in that method where there is a conflict where you'll want to pass the configured var instead of 10.",
      "@matteius I create a new PR #5907 (Re-send due to force push)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c344ee515ce6a4ea65",
    "number": 5876,
    "body": null,
    "head_branch": "doc-tidy-up-commands-md",
    "is_a_fork": true,
    "comments": [
      "@matteius I see it's still not live 1 week after the merge. The doc is not built and deployed automaticaly anymore?",
      "@deronnax it will be live once a new release is cut, trying to get a few more issues wrapped up and release towards the weekend.  Our workflow is to generally close the issues when things get merged to main, but its not visible to most users until the release.",
      "the life cycle of the doc is the same than the \"regular\" release, okay okay."
    ],
    "commit_messages": [
      "clean of .rst leftovers in commands.md (#5876)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c344ee515ce6a4ea66",
    "number": 5875,
    "body": "### The issue\r\n\r\nFixes #5874\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5874",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Do not lock or sync when running in outdated mode (#5875)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c444ee515ce6a4ea67",
    "number": 5873,
    "body": "Thank you for contributing to Pipenv!\r\n\r\nSome code simplifications made by `ruff --select=SIM --fix .`\r\n* https://beta.ruff.rs/docs/rules/#flake8-simplify-sim\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "ruff-rules-SIM",
    "is_a_fork": true,
    "comments": [
      "@cclauss I think things are in a much more stable state now from my recent refactor, but I did introduce a conflict fixing things with this PR.  If that can be resolved I think this can be merged."
    ],
    "commit_messages": [
      "Merge pull request #5873 from cclauss/ruff-rules-SIM\n\nruff rules SIM"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c544ee515ce6a4ea68",
    "number": 5872,
    "body": "Fix how format_help is used.\r\nBecause it uses `click.echo` color strings, one should not use `console.print`.\r\n\r\nFix #5869 \r\nFix #5850",
    "head_branch": "fix-5869-5850",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix usage of format_help (#5872)\n\n* Fix usage of format_help"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c644ee515ce6a4ea69",
    "number": 5871,
    "body": "Fix sys_platform specifiers (which are in our docs) being ignored from the Pipfile.\r\n\r\n\r\n### The issue\r\n\r\nFixes #5785\r\nFixes #5844 \r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "sys_platform-fix",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix for sys platform markers from Pipfile + fix for vcs subdirectory fragments (#5871)\n\n* Fix not considering sys platform markers from Pipfile\r\n* Fix for handling vcs subdirectory fragments\r\n* Add news fragments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c744ee515ce6a4ea6a",
    "number": 5870,
    "body": "Attempt to fix the local/editable file installs which broke when we refactored away from requirementslib.\r\n\r\n### The issue\r\n\r\nFixes #5858\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "file-installs-take3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Attempt to fix the local/editable file installs (#5870)\n\n* Attempt to fix the local/editable file installs\r\n\r\n* More refinements to handling directories vs files and when it is relative vs not\r\n\r\n* Add back missing egg fragment (I removed it during the initial removal of requirementslib).  Also fix the latest ruff error."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c844ee515ce6a4ea6b",
    "number": 5867,
    "body": "% `pre-commit autoupdate`\r\n```\r\n[https://github.com/pre-commit/pre-commit-hooks] already up to date!\r\n[https://github.com/astral-sh/ruff-pre-commit] updating v0.0.275 -> v0.0.285\r\n[https://github.com/psf/black] updating 23.3.0 -> 23.7.0\r\n[https://github.com/pre-commit/pygrep-hooks] already up to date!\r\n[https://github.com/mgedmin/check-manifest] already up to date!\r\n[https://github.com/abravalheri/validate-pyproject] updating v0.13 -> v0.14\r\n```\r\n% `pre-commit run --all-files`",
    "head_branch": "pre-commit-autoupdate_2023-08-25",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pre-commit autoupdate 2023-08-25"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012c944ee515ce6a4ea6c",
    "number": 5866,
    "body": "The else Fallback here is not working right, for example if my source url is: url = \"https://download.pytorch.org/whl/cu117\" and the page contains url's like: /whl/cu117/torch-2.0.1%2Bcu117-cp310-cp310-linux_x86_64.whl So the url that gets generated is: https://download.pytorch.org/whl/cu117/whl/cu117/torch-2.0.1%2Bcu117-cp310-cp310-linux_x86_64.whl which is wrong because it repeats /whl/cu117/\r\n\r\n\r\n### The issue\r\n\r\nFixes #5864\r\nFixes #5860\r\nMaybe Fixes #5848\r\n\r\n### The fix\r\n\r\nUse urllib.parse urljoin which will intelligently handle this case:\r\n\r\n```\r\nDownloading file torch-2.0.1+cu117-cp310-cp310-linux_x86_64.whl to obtain\r\nhash...\r\nDownloading file torch-2.0.1+cu117-cp310-cp310-win_amd64.whl to obtain hash...\r\nDownloading file torch-2.0.1+cu117-cp311-cp311-linux_x86_64.whl to obtain\r\nhash...\r\nDownloading file torch-2.0.1+cu117-cp311-cp311-win_amd64.whl to obtain hash...\r\nDownloading file torch-2.0.1+cu117-cp38-cp38-linux_x86_64.whl to obtain hash...\r\nDownloading file torch-2.0.1+cu117-cp38-cp38-win_amd64.whl to obtain hash...\r\nDownloading file torch-2.0.1+cu117-cp39-cp39-linux_x86_64.whl to obtain hash...\r\nDownloading file torch-2.0.1+cu117-cp39-cp39-win_amd64.whl to obtain hash...\r\n```\r\n\r\nInstall:\r\n```\r\nWriting supplied requirement line to temporary file: 'torch==2.0.1+cu117 --hash=sha256:0a56cf5d99f1c7fa29c328a6737c5e5108fa71d8f021c074f4ff0de9e8969302\r\n--hash=sha256:245d04e1541350dba11c7b76e343ca0071bbcb10f956a09b6bede3d68db9e759 --hash=sha256:60b21e8db98f7365758a5c218f5dc533d84f046ed0876b4540ba5ba7ef6797d4\r\n--hash=sha256:a77ba4f4b13c8b6c2c863b84a98dde2ddf1feaad5f25700d41cf3236e11d2ee8 --hash=sha256:bb54b705185bea820e6ec6485a25761bc03f689e1a09a37d814d6ea8e276b5bd\r\n--hash=sha256:bec39e6fe7232f399c6a5cda5785517fec759fc0852e0c31d71a39f7bf6b23b3 --hash=sha256:deed82674691238ff9471fb7dd13a6eafc0c394cb6cdb249b483b4855c00276f\r\n--hash=sha256:e06deb28938e7468bdd79ad5a4cfda36e95113507a9144a367039b35ac73986c'\r\nInstall Phase: Standard Requirements\r\nPreparing Installation of 'torch==2.0.1+cu117 --hash=sha256:0a56cf5d99f1c7fa29c328a6737c5e5108fa71d8f021c074f4ff0de9e8969302 --hash=sha256:245d04e1541350dba11c7b76e343ca0071bbcb10f956a09b6bede3d68db9e759\r\n--hash=sha256:60b21e8db98f7365758a5c218f5dc533d84f046ed0876b4540ba5ba7ef6797d4 --hash=sha256:a77ba4f4b13c8b6c2c863b84a98dde2ddf1feaad5f25700d41cf3236e11d2ee8\r\n--hash=sha256:bb54b705185bea820e6ec6485a25761bc03f689e1a09a37d814d6ea8e276b5bd --hash=sha256:bec39e6fe7232f399c6a5cda5785517fec759fc0852e0c31d71a39f7bf6b23b3\r\n--hash=sha256:deed82674691238ff9471fb7dd13a6eafc0c394cb6cdb249b483b4855c00276f --hash=sha256:e06deb28938e7468bdd79ad5a4cfda36e95113507a9144a367039b35ac73986c'\r\n$ C:/c/Users/matte/.virtualenvs/pytorch_new-7A-x71qg/Scripts/python.exe 'C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\__pip-runner__.py' install -i https://download.pytorch.org/whl/cu117 --no-input\r\n--upgrade --no-deps -r 'c:\\users\\matte\\appdata\\local\\temp\\pipenv-6a7209oi-requirements\\pipenv-8x7x43h8-hashed-reqs.txt'\r\nUsing source directory: 'C:\\\\c\\\\Users\\\\matte\\\\.virtualenvs\\\\pytorch_new-7A-x71qg\\\\src'\r\nLooking in indexes: https://download.pytorch.org/whl/cu117\r\n\r\nCollecting torch==2.0.1+cu117 (from -r c:\\users\\matte\\appdata\\local\\temp\\pipenv-6a7209oi-requirements\\pipenv-8x7x43h8-hashed-reqs.txt (line 1))\r\n\r\n  Using cached https://download.pytorch.org/whl/cu117/torch-2.0.1%2Bcu117-cp311-cp311-win_amd64.whl (2343.6 MB)\r\n\r\nInstalling collected packages: torch\r\n\r\nSuccessfully installed torch-2.0.1+cu117\r\n```\r\n\r\nI've also added better error handling for this case to avoid capturing a hash if the response is not 200.   When I undo the fix, that looks like:\r\n```\r\n[  ==] Locking...Downloading file torch-2.0.1+cu117-cp310-cp310-linux_x86_64.whl to obtain hash...\r\n[   =] Locking...HTTP error 403 while getting https://download.pytorch.org/whl/cu117/whl/cu117/torch-2.0.1%2Bcu117-cp310-cp310-linux_x86_64.whl\r\nDownloading file torch-2.0.1+cu117-cp310-cp310-win_amd64.whl to obtain hash...\r\n[  ==] Locking...HTTP error 403 while getting https://download.pytorch.org/whl/cu117/whl/cu117/torch-2.0.1%2Bcu117-cp310-cp310-win_amd64.whl\r\nDownloading file torch-2.0.1+cu117-cp311-cp311-linux_x86_64.whl to obtain hash...\r\n[==  ] Locking...HTTP error 403 while getting https://download.pytorch.org/whl/cu117/whl/cu117/torch-2.0.1%2Bcu117-cp311-cp311-linux_x86_64.whl\r\nDownloading file torch-2.0.1+cu117-cp311-cp311-win_amd64.whl to obtain hash...\r\n[=   ] Locking...HTTP error 403 while getting https://download.pytorch.org/whl/cu117/whl/cu117/torch-2.0.1%2Bcu117-cp311-cp311-win_amd64.whl\r\nDownloading file torch-2.0.1+cu117-cp38-cp38-linux_x86_64.whl to obtain hash...\r\n[ ===] Locking...HTTP error 403 while getting https://download.pytorch.org/whl/cu117/whl/cu117/torch-2.0.1%2Bcu117-cp38-cp38-linux_x86_64.whl\r\nDownloading file torch-2.0.1+cu117-cp38-cp38-win_amd64.whl to obtain hash...\r\n[   =] Locking...HTTP error 403 while getting https://download.pytorch.org/whl/cu117/whl/cu117/torch-2.0.1%2Bcu117-cp38-cp38-win_amd64.whl\r\nDownloading file torch-2.0.1+cu117-cp39-cp39-linux_x86_64.whl to obtain hash...\r\n[  ==] Locking...HTTP error 403 while getting https://download.pytorch.org/whl/cu117/whl/cu117/torch-2.0.1%2Bcu117-cp39-cp39-linux_x86_64.whl\r\nDownloading file torch-2.0.1+cu117-cp39-cp39-win_amd64.whl to obtain hash...\r\n[====] Locking...HTTP error 403 while getting https://download.pytorch.org/whl/cu117/whl/cu117/torch-2.0.1%2Bcu117-cp39-cp39-win_amd64.whl\r\n[==  ] Locking...Downloading file torch-2.0.1+cu117-cp311-cp311-win_amd64.whl to obtain hash...\r\n```\r\n\r\nLatest Update is I got caching to work -- so if you download the expensive pytorch wheels in one lock phase, the subsequent lock phase is much faster!  🎉 \r\n![image](https://github.com/pypa/pipenv/assets/479892/521feac0-3a22-4679-8599-695abdae73a5)\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "fix-obtaining-hashes",
    "is_a_fork": false,
    "comments": [
      "Nice job with the caching improvement as well!",
      "so...what's the final solution? I'm using the latest version of pipenv. when I run\r\n```sh\r\npipenv install torch==2.0.1+cu117 --index https://download.pytorch.org/whl/cu117\r\n```\r\nIt still keeps locking and downloading something I don't know...\r\n```\r\nInstalling torch==2.0.1+cu117...\r\nResolving torch==2.0.1+cu117...\r\nAdded torch to Pipfile's [packages] ...\r\nInstallation Succeeded\r\nPipfile.lock not found, creating...\r\nLocking [packages] dependencies... \r\nBuilding requirements...\r\nResolving dependencies...\r\n[====] Locking...\r\n```\r\n\r\npipfile\r\n```\r\n[[source]]\r\nurl = \"https://pypi.org/simple\"\r\nverify_ssl = true\r\nname = \"pypi\"\r\n\r\n[[source]]\r\nurl = \"https://download.pytorch.org/whl/cu117\"\r\nverify_ssl = true\r\nname = \"downloadpytorch\"\r\n\r\n[packages]\r\ntorch = {version = \"==2.0.1\", index = \"downloadpytorch\"}\r\n\r\n[dev-packages]\r\n\r\n[requires]\r\npython_version = \"3.10\"\r\npython_full_version = \"3.10.11\"\r\n```\r\n\r\n",
      "@BetterWorld-Liuser The first time you lock its going to download 16 GB of wheel files from the torch index.",
      "@matteius so there is no way to install just like `pip install` ? like just download the target whl...",
      "@BetterWorld-Liuser Once you have a valid lock file, which needs the hashes of all matching wheel files for that version, which is why it has to download approximately 16 GB, then the subsequent install just downloads the one matching wheel for your system, which should be cached by the prior lock.  ",
      "@matteius OK, I understand, thanks!"
    ],
    "commit_messages": [
      "Get the cache working for obtaining file hashes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ca44ee515ce6a4ea6d",
    "number": 5863,
    "body": "Without caching, the Resolver duplicates the sources listed in the `Pipfile` multiple times (since the property re-adds them every time they're called) in the arguments sent to the `pip` parser.\r\n\r\nRemoving unused command-line option `--debug`\r\n\r\nThank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhile diagnosing another issue, I found through `print` debugging that the multiple calls to these properties, `pip_args` and `pip_options`, ended up duplicating the sources listed in the `Pipfile` multiple times for the `pip` parser.\r\n\r\nRelated to the resolver, the `--debug` command-line option for `pipenv-resolver` is unused.\r\n\r\n### The fix\r\n\r\nTo fix this, I replaced `property` decorator with `cached_property`, which was already imported in the module. As best as I can tell, these properties (and a number of other ones) only need to be evaluated once instead of every single time they are called. Caching not only fixes this duplication but will also lead to faster, more efficient code.\r\n\r\nIf a debug option is later implemented, the command-line option can be added at that time.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "cache-dedupe-sources",
    "is_a_fork": true,
    "comments": [
      "@matteius What type of change would this be considered for my news file?",
      "@kalebmckale I'd be fine with `bugfix`.",
      "I am going to include a news fragment on your behalf so we can include this fix in the release.",
      "Thanks!"
    ],
    "commit_messages": [
      "Merge pull request #5863 from kalebmckale/cache-dedupe-sources\n\nCaching properties to deduplicate sources"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ca44ee515ce6a4ea6e",
    "number": 5861,
    "body": "Work in progress\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "issuee-5858",
    "is_a_fork": false,
    "comments": [
      "Discarding in favor of:  https://github.com/pypa/pipenv/pull/5870"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012cb44ee515ce6a4ea6f",
    "number": 5856,
    "body": "Try fixing the other part of #5849 \r\n\r\n### The issue\r\n\r\nSometimes VCS urls have an @ symbol for netloc auth component, try to differentiate if its a valid ref.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5849b",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Try to match if the part after @ is a valid ref (reject treating URL parts as refs). (#5856)\n\n* Try to match ref only if the part after @ is a valid ref (reject treating URL parts as refs)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012cc44ee515ce6a4ea70",
    "number": 5855,
    "body": "Thank you for contributing to Pipenv!\r\n\r\nUse ruff rules [C4](https://beta.ruff.rs/docs/rules/#flake8-comprehensions-c4) and [PERF](https://beta.ruff.rs/docs/rules/#perflint-perf) to improve runtime performance\r\n\r\n% `ruff --select=C4,PERF .`\r\n```\r\npipenv/cli/options.py:175:17: PERF402 Use `list` or `list.copy` to create a copy of a list\r\npipenv/cli/options.py:239:17: PERF402 Use `list` or `list.copy` to create a copy of a list\r\npipenv/environment.py:351:17: PERF401 Use a list comprehension to create a transformed list\r\npipenv/environment.py:356:17: PERF401 Use a list comprehension to create a transformed list\r\npipenv/environment.py:813:28: C408 [*] Unnecessary `dict` call (rewrite as a literal)\r\npipenv/project.py:1093:20: C403 [*] Unnecessary `list` comprehension (rewrite as a `set` comprehension)\r\npipenv/project.py:1096:32: C403 [*] Unnecessary `list` comprehension (rewrite as a `set` comprehension)\r\npipenv/routines/graph.py:101:25: PERF401 Use a list comprehension to create a transformed list\r\npipenv/routines/install.py:155:20: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\npipenv/routines/install.py:553:13: PERF203 `try`-`except` within a loop incurs performance overhead\r\npipenv/routines/lock.py:104:16: C414 [*] Unnecessary `list` call within `set()`\r\npipenv/routines/lock.py:105:17: C414 [*] Unnecessary `list` call within `set()`\r\npipenv/routines/outdated.py:45:13: PERF203 `try`-`except` within a loop incurs performance overhead\r\npipenv/routines/uninstall.py:89:35: C414 [*] Unnecessary `list` call within `set()`\r\npipenv/routines/update.py:126:20: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\npipenv/routines/update.py:187:32: PERF102 [*] When using only the keys of a dict use the `keys()` method\r\npipenv/utils/dependencies.py:1056:24: C419 [*] Unnecessary list comprehension.\r\npipenv/utils/dependencies.py:1099:42: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\npipenv/utils/fileutils.py:204:12: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\npipenv/utils/fileutils.py:208:20: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\npipenv/utils/funktools.py:301:13: PERF203 `try`-`except` within a loop incurs performance overhead\r\npipenv/utils/internet.py:145:21: PERF401 Use a list comprehension to create a transformed list\r\npipenv/utils/locking.py:262:16: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\npipenv/utils/markers.py:65:23: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\npipenv/utils/markers.py:167:17: PERF401 Use a list comprehension to create a transformed list\r\npipenv/utils/markers.py:624:9: PERF401 Use a list comprehension to create a transformed list\r\npipenv/utils/markers.py:659:9: PERF401 Use a list comprehension to create a transformed list\r\npipenv/utils/pip.py:143:9: PERF402 Use `list` or `list.copy` to create a copy of a list\r\npipenv/utils/pipfile.py:304:16: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\npipenv/utils/requirementslib.py:374:13: PERF203 `try`-`except` within a loop incurs performance overhead\r\npipenv/utils/resolver.py:382:13: PERF402 Use `list` or `list.copy` to create a copy of a list\r\npipenv/utils/shell.py:313:12: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\npipenv/utils/shell.py:317:20: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\npipenv/utils/toml.py:25:13: PERF401 Use a list comprehension to create a transformed list\r\npipenv/utils/virtualenv.py:428:24: C408 [*] Unnecessary `dict` call (rewrite as a literal)\r\ntasks/vendoring/__init__.py:268:22: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\ntasks/vendoring/__init__.py:723:18: C413 [*] Unnecessary `list` call around `sorted()`\r\ntests/integration/conftest.py:41:9: PERF203 `try`-`except` within a loop incurs performance overhead\r\ntests/integration/test_install_twists.py:190:15: C416 [*] Unnecessary `list` comprehension (rewrite using `list()`)\r\ntests/integration/test_lock.py:631:41: C408 [*] Unnecessary `dict` call (rewrite as a literal)\r\ntests/unit/test_utils.py:128:24: C408 [*] Unnecessary `dict` call (rewrite as a literal)\r\nFound 41 errors.\r\n[*] 24 potentially fixable with the --fix option.\r\n```\r\n% `ruff --select=C4,PERF --fix .`\r\n```\r\nFound 41 errors (24 fixed, 17 remaining).\r\n```\r\n... Manual fixes.\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "ruff-rules-C4-and-PERF",
    "is_a_fork": true,
    "comments": [
      "@cclauss thanks. Looks really interesting. I'm going to wait for the current shake down of the latest refactoring that @matteius did to relax. Then we can definitely merge this request and attend the recommendations."
    ],
    "commit_messages": [
      "dict.keys"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012cd44ee515ce6a4ea71",
    "number": 5852,
    "body": "### The issue\r\nSuspect there is a typo in install.py where a typo has made `style` into `sytle`\r\n\r\n>  File \"/Users/mathias/Library/Python/3.9/lib/python/site-packages/pipenv/routines/install.py\", line 148, in do_install\r\n    console.print(error, sytle=\"red\")\r\nTypeError: print() got an unexpected keyword argument 'sytle'\r\n\r\n### The fix\r\n\r\nrefactor\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n\r\n",
    "head_branch": "fix-typo",
    "is_a_fork": true,
    "comments": [
      "Thanks for catching this -- I was about to cut a release anyway, so I will skip the news fragment on this and get it included.",
      "> Thanks for catching this -- I was about to cut a release anyway, so I will skip the news fragment on this and get it included.\r\n\r\nThanks!"
    ],
    "commit_messages": [
      "Update install.py (#5852)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ce44ee515ce6a4ea72",
    "number": 5851,
    "body": "Handle edge case where it is expected ssh:// urls to have at least one @ symbol\r\n\r\n### The issue\r\n\r\nFixes Issue #5849 \r\n\r\n### The fix\r\n\r\nI think ssh:// urls require at least one @ and so checking for 2 or more in this case should be sufficient.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5849",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Handle edge case where it is expected ssh:// urls to have at least one @ symbol (#5851)\n\n* Handle edge case where it is expected ssh:// urls to have at least one @ symbol\r\n\r\n* add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012cf44ee515ce6a4ea73",
    "number": 5847,
    "body": "Not sure yet if this will work right, will require some testing.\r\n\r\n\r\n### The issue\r\n\r\nAs pointed out in issue #5842 the `--skip-lock` flag was being used by some folks that had no choice because of cross platform dependencies.  At least until we address that, add back the `--skip-lock` flag but using the new utilities.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "skip-lock",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add back --skip-lock flag using the new utilities. (#5847)\n\n* Add back --skip-lock flag using the new utilities."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012cf44ee515ce6a4ea74",
    "number": 5845,
    "body": "Solves some edge cases:\r\n* vcs sub-requirement has no ref\r\n* old Pipfile or Pipfile.lock that contains a ref in the vcs url.\r\n\r\n### The issue\r\n\r\nFixes #5843 \r\nFixes #5846\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5843",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Do not include @ when no ref is specified (#5845)\n\n* Do not include @ when no ref is specified\r\n* Handle the @ref from the vcs_url if its in the Pipfile vcs url.\r\n* Also handle an extra ref in the url of the lock file\r\n* Handle case where vcs in Pipfile is just a string"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d044ee515ce6a4ea75",
    "number": 5841,
    "body": "The last release slowed down locking performance due to a major refactor -- this speeds it back up some.  Unfortunately adding cached_property where I want in some places causes failures with multiple index installs, so I deferred those changes for now.\r\n",
    "head_branch": "performance-optimize",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Some performance optimizations after analyzing benchmarks. (#5841)\n\n* Some performance optimizations after analyzing benchmarks. \r\n* add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d144ee515ce6a4ea76",
    "number": 5840,
    "body": "Remove unused files in our vendor directory.\r\nMakes pipenv distribution a bit smaller.",
    "head_branch": "minor-vendoring-cleanup",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news snippet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d244ee515ce6a4ea77",
    "number": 5839,
    "body": "Get the CI green again -- also remove click.secho from one of the files I had to touch.",
    "head_branch": "more-fix-ruff",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "More ruff fixing and convert install routines to rich console"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d344ee515ce6a4ea78",
    "number": 5838,
    "body": "Before:\r\n```\r\nmatteius@matteius-VirtualBox:~/pipenv$ pipenv --version\r\npipenv\r\n, version 2023.8.19\r\n```\r\n\r\nAfter:\r\n```\r\nmatteius@matteius-VirtualBox:~/pipenv$ pipenv --version\r\npipenv, version 2023.8.19\r\n```\r\n\r\n\r\n### The issue\r\n\r\nWe broke the benchmark run because unexpectedly the version output changed formats:. \r\n https://github.com/lincolnloop/python-package-manager-shootout/actions/runs/5914571940/job/16040022277\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "fix-version-output",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d444ee515ce6a4ea79",
    "number": 5836,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n### The goal: modernize build\r\n\r\n- consolidates all of `setuptools` metadata and configuration as well as `coverage` configuration within `pyproject.toml`.\r\n- removes deprecated `setup.cfg` and `setup.py`.\r\n- updates `run-tests.sh` to use \t`pyproject.toml` instead of `setup.cfg` for `coverage` configuration.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue: #5837 \r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\nResolves #5837 ",
    "head_branch": "draft-update-build",
    "is_a_fork": true,
    "comments": [
      "Never mind.",
      "Seems like everything is working except the versioning. I expect this is because `setuptools_scm` cannot see the `git tag`. I figured this might come up since there’s already an in-place script that handles updating version, but thought it might still work. Nevertheless, using `setuptools_scm` isn’t a requirement to make this work and really unnecessary since there seems to be an existing solution that doesn’t require human intervention. So, if it ain’t broke…. I’ll make the changes to pull the version from the `__version__.py` file instead.",
      "@kalebmckale please pull the changes from the master branch. This will fix the ruff errors.",
      "> Please rebase.\n\nSorry I couldn't get to it until tonight.",
      "Hey @kalebmckale if you want to join the unofficial Python Developers slack group https://pyslackers.com/web  we can chat more in there -- I am thinking we could bounce ideas off each-other about the currently broken editable/local file installs.",
      "Ok @matteius... um never used slack so how do I find you on there? 🙂\n\nUpdate: I might have found you.",
      "Rebased on v2023.8.26.",
      "Added a new commit to test if adding `__version__.py` to `.gitignore` will break the release process. I suspect this will not be tested until after the merge has taken place and `release.py` is called since I could find no reference in the repo files themselves to call this script (and assume it’s a setting in the administrative CI/CD process).",
      "@kalebmckale I am sorry. I thought we need to exclude `__version__` as that is what one should do with https://github.com/pypa/setuptools_scm. However, you are using https://setuptools.pypa.io/en/latest/build_meta.html.\r\nbuild_meta does not care about storing the version in git. Once again, than you for taking the time for contributing and apologies for the confusion (and extra work required from you).",
      "Just noticed this in `release.py`\n```python\n@invoke.task\ndef build_dists(ctx):\n    drop_dist_dirs(ctx)\n    py_version = \".\".join(str(v) for v in sys.version_info[:2])\n    env = {\"PIPENV_PYTHON\": py_version}\n    with ctx.cd(ROOT.as_posix()), temp_environ():\n        executable = ctx.run(\n            \"python -c 'import sys; print(sys.executable)'\", hide=True\n        ).stdout.strip()\n        log(\"Building sdist using %s ....\" % executable)\n        os.environ[\"PIPENV_PYTHON\"] = py_version\n        ctx.run(\"pipenv install --dev\", env=env)\n        ctx.run(\"pipenv run pip install -e . --upgrade --upgrade-strategy=eager\", env=env)\n        log(\"Building wheel using python %s ....\" % py_version)\n        ctx.run(\"pipenv run python setup.py sdist bdist_wheel\", env=env)\n```\n\nI know during testing the package is being built and installed, or it at least appears to do so, but here it looks to still use `setup.py` for build.",
      "Found in `Makefile`, too.\n```Makefile\n.PHONY: build\nbuild: install-virtualenvs.stamp install.stamp\n\tPIPENV_PYTHON=3.7 pipenv run python setup.py sdist bdist_wheel\n```",
      "And `pypi_upload.yml`\n```yaml\n    - name: Build wheels\n      run: |\n        python -m pipenv run python setup.py sdist bdist_wheel\n```",
      "That is what I was afraid of -- if we merge this, we will break the pypi upload of the built wheel capabilities, I suspect.",
      "Made changes, but I don't have ability to lock `Pipfile` on my iPad. So, if approved, will need a maintainer to make this update.\r\n\r\nUPDATE: Apparently will need this for testing, too.",
      "> Successfully created virtual environment!\r\nVirtualenv location: /Users/runner/.local/share/virtualenvs/pipenv-XC1sj3ZQ\r\nYour Pipfile.lock (4d9c54) is out of date.  Expected: (60755f).\r\nUsage: pipenv install [OPTIONS] [PACKAGES]...\r\n\r\nWhat would happen if you did ~`git rm Pipfile.lock`~?  Would the GitHub Action test process recreate that file?",
      "I don't want to remove the Pipfile.lock from the checked in code though-- there will be a path forwards on this, even if it means merging into a different pipenv branch so I can run the lock phase.",
      "I was able to lock on my iPad using Python 11, then I realized that would probably not be good since the minimum Python version is 3.7. I’ve been working for days to get other options. I can get Python 3.9 and looking to see if I can get Python 3.7. If there’s another solution sooner, we should go with that. However, I may be able to eventually get it done.",
      "@matteius Another option is to include an updated locked Pipfile in another merge/release. Adding the two dev packages wouldn’t interfere with other changes.",
      "If the `minimum Python version is 3.7` then ~Python 3.11 is acceptable.~",
      "* #5901 (merged) has added those two dependencies to `Pipfile` and `Pipfile.lock` so you should be able to rebase this PR to get those changes."
    ],
    "commit_messages": [
      "Merge pull request #5836 from kalebmckale/draft-update-build\n\nUpdate build to use exclusively pyproject.toml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d444ee515ce6a4ea7a",
    "number": 5826,
    "body": "### The issue\r\n\r\nFixes #5722 \r\n\r\n### The fix\r\n\r\nchanged the `import_requirements()` and related functions to have categories. `--categories` now works with requirements file. whether `-r <req_path>` is provided or not (when only requirements.txt is available)\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "req_txt_categories",
    "is_a_fork": true,
    "comments": [
      "@DasaniT Could you look into possible conflicts with: https://github.com/pypa/pipenv/pull/5793\r\nWe are getting very close to merging that.",
      "@matteius I looked into the `draft-no-reqlib` branch and there will be conflicts (`/utils/requirements.py` and `/tests/integration/test_install_categories.py`). So, since I'm new to open source, what's the procedure here? Should I wait for that branch to merge and then rebase my branch onto `master` and then make the necessary changes or ...?",
      ">Should I wait for that branch to merge\r\n\r\n@DasaniT Yeah that makes sense -- but in the mean time can you fix the CI lint (ignore the ruff job) so that the CI runner can run the tests portion?",
      "> > Should I wait for that branch to merge\r\n> \r\n> @DasaniT Yeah that makes sense -- but in the mean time can you fix the CI lint (ignore the ruff job) so that the CI runner can run the tests portion?\r\n\r\n@matteius I ran `pre-commit run --all-files --verbose` before commiting as mentioned in https://pipenv.pypa.io/en/latest/dev/contributing/#development-setup \r\nWhat am I missing here?",
      "@DasaniT\r\n\r\n![image](https://github.com/pypa/pipenv/assets/131783606/383f9a88-7c71-4f0f-8845-6b85b51b69f1)\r\n\r\n\r\nChange the backticks to `` instead of ` for your news comment :)",
      "> @DasaniT\r\n> \r\n> ![image](https://user-images.githubusercontent.com/131783606/260432799-383f9a88-7c71-4f0f-8845-6b85b51b69f1.png)\r\n> \r\n> Change the backticks to `` instead of ` for your news comment :)\r\n\r\nThanks for your help, and sorry somehow I couldn't find the failed test:) I fixed it.",
      "Darn, there were more conflicts with my branch than were reported.  Edit:  Sorry, couldn't think, it was exactly what was reported but confused the heck out of me, but I think I got it now."
    ],
    "commit_messages": [
      "Add --categories option to work with requirements txt files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d544ee515ce6a4ea7b",
    "number": 5825,
    "body": "1. `pypi.python.org` now redirects to `pypi.org`, so let's point folks towards that to save them the redirect.\r\n2. Travis CI has struggled mightily ever since they were acquired by a PE firm. Most open source projects have moved away from them.\r\n3. Update the python version in the example so it doesn't look quite so dated.\r\n4. Use the `name` key for `sources` as that's now [required](https://github.com/pypa/pipenv/discussions/5370#discussioncomment-3701061).\r\n\r\nI didn't include a news fragment as I thought the changes were too trivial to list.\r\n\r\nI also didn't take the time to regenerate the lockfiles after changing the `Pipfile`... that means the hashes are going to be wrong, but for the purposes of docs I think that's fine... no human will notice, and if they do run `pipenv` against the example and are surprised by the outcome they're welcome to submit a PR fixing that too. But for now I think tis fine. Certainly this PR leaves things better then they were.",
    "head_branch": "some-docs-cleanups",
    "is_a_fork": true,
    "comments": [
      "Thanks Jeff!"
    ],
    "commit_messages": [
      "Merge pull request #5825 from jeffwidman/some-docs-cleanups\n\nSome docs cleanups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d644ee515ce6a4ea7c",
    "number": 5824,
    "body": "### The issue:  Document how to rename or move a project directory\r\nI was helped by the answer in issue #5123 and the further guidance in issue #5129 \r\n\r\n### The fix: Added to existing documentation in 2 places\r\n- Added documentation in installation.md under 'Virtualenv' mapping caveat\r\n- Added documentation to the virtualenv.md\r\n\r\nThis is my first pull request so feedback very welcome.\r\n\r\n### The checklist\r\n\r\n* [X ] Associated issue\r\n* [ X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Sorry, I don't mean to leave this hanging.  I'm working on resolving why the code linting and ruff tests are failing and I haven't figured it out yet.",
      "@IamAdiSri the ruff tests are a new issue because it keeps introducing new rules or inspecting new files -- it also happened on my draft-no-reqslib PR ... don't worry about it, just fix the main lint of the CI job and you'll be good.",
      "You can try running: `pre-commit run --all-files --verbose --show-diff-on-failure --fix` for the CI issue preventing your build.",
      "thanks for the help! on my machine tests ran and  seems sucessful\r\n<img width=\"650\" alt=\"image\" src=\"https://github.com/pypa/pipenv/assets/14239246/202e5d3d-14ec-4d76-86f5-b706ef8df0d9\">\r\n",
      "All the failures that ruff reports have nothing to do with the PR. "
    ],
    "commit_messages": [
      "Attempt to fix build issues"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d744ee515ce6a4ea7d",
    "number": 5822,
    "body": "Update pip 23.2 -> 23.2.1\r\n\r\n### The checklist\r\n\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pip-23.2.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5822 from pypa/pip-23.2.1\n\nUpdate pip to 23.2.1 pt release."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d844ee515ce6a4ea7e",
    "number": 5820,
    "body": "I'm sure it could be further documented in the readme, but here's at least a basic start.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5820 from jeffwidman/patch-1\n\nDocument `upgrade` command in the `Readme`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d944ee515ce6a4ea7f",
    "number": 5816,
    "body": "Bumps [certifi](https://github.com/certifi/python-certifi) from 2023.5.7 to 2023.7.22.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/8fb96ed81f71e7097ed11bc4d9b19afd7ea5c909\"><code>8fb96ed</code></a> 2023.07.22</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/afe77220e0eaa722593fc5d294213ff5275d1b40\"><code>afe7722</code></a> Bump actions/setup-python from 4.6.1 to 4.7.0 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/230\">#230</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/2038739ad56abec7aaddfa90ad2ce6b3ed7f5c7b\"><code>2038739</code></a> Bump dessant/lock-threads from 3.0.0 to 4.0.1 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/229\">#229</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/44df761f4c09d19f32b3cc09208a739043a5e25b\"><code>44df761</code></a> Hash pin Actions and enable dependabot (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/228\">#228</a>)</li>\n<li>See full diff in <a href=\"https://github.com/certifi/python-certifi/compare/2023.05.07...2023.07.22\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.5.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/examples/certifi-2023.7.22",
    "is_a_fork": false,
    "comments": [
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012d944ee515ce6a4ea80",
    "number": 5815,
    "body": "Bumps [certifi](https://github.com/certifi/python-certifi) from 2022.12.7 to 2023.7.22.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/8fb96ed81f71e7097ed11bc4d9b19afd7ea5c909\"><code>8fb96ed</code></a> 2023.07.22</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/afe77220e0eaa722593fc5d294213ff5275d1b40\"><code>afe7722</code></a> Bump actions/setup-python from 4.6.1 to 4.7.0 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/230\">#230</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/2038739ad56abec7aaddfa90ad2ce6b3ed7f5c7b\"><code>2038739</code></a> Bump dessant/lock-threads from 3.0.0 to 4.0.1 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/229\">#229</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/44df761f4c09d19f32b3cc09208a739043a5e25b\"><code>44df761</code></a> Hash pin Actions and enable dependabot (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/228\">#228</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/8b3d7bae85bbc87c9181cc1d39548db3d31627f0\"><code>8b3d7ba</code></a> 2023.05.07</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/53da2405b1af430f6bafa21ba45d8dd8dfc726b8\"><code>53da240</code></a> ci: Add Python 3.12-dev to the testing (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/224\">#224</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/c2fc3b1f64d6946f1057971ee897ea828ae848d8\"><code>c2fc3b1</code></a> Create a Security Policy (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/222\">#222</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/c211ef482a01aff5f1bc92c4128bfa0c955f4a01\"><code>c211ef4</code></a> Set up permissions to github workflows (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/218\">#218</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/2087de5d0aa1d472145fc1dbdfece3fe652bbac5\"><code>2087de5</code></a> Don't let deprecation warning fail CI (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/219\">#219</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/e0b9fc5c8f52ac8c300da502e5760ce3d41429ec\"><code>e0b9fc5</code></a> remove paragraphs about 1024-bit roots from README</li>\n<li>Additional commits viewable in <a href=\"https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/certifi-2023.7.22",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump certifi from 2022.12.7 to 2023.7.22\n\nBumps [certifi](https://github.com/certifi/python-certifi) from 2022.12.7 to 2023.7.22.\n- [Commits](https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22)\n\n---\nupdated-dependencies:\n- dependency-name: certifi\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012da44ee515ce6a4ea81",
    "number": 5814,
    "body": "[//]: # (dependabot-start)\n⚠️  **Dependabot is rebasing this PR** ⚠️ \n\nRebasing might not happen immediately, so don't worry if this takes some time.\n\nNote: if you make any changes to this PR yourself, they will take precedence over the rebase.\n\n---\n\n[//]: # (dependabot-end)\n\nBumps [certifi](https://github.com/certifi/python-certifi) from 2022.12.7 to 2023.7.22.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/8fb96ed81f71e7097ed11bc4d9b19afd7ea5c909\"><code>8fb96ed</code></a> 2023.07.22</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/afe77220e0eaa722593fc5d294213ff5275d1b40\"><code>afe7722</code></a> Bump actions/setup-python from 4.6.1 to 4.7.0 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/230\">#230</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/2038739ad56abec7aaddfa90ad2ce6b3ed7f5c7b\"><code>2038739</code></a> Bump dessant/lock-threads from 3.0.0 to 4.0.1 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/229\">#229</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/44df761f4c09d19f32b3cc09208a739043a5e25b\"><code>44df761</code></a> Hash pin Actions and enable dependabot (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/228\">#228</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/8b3d7bae85bbc87c9181cc1d39548db3d31627f0\"><code>8b3d7ba</code></a> 2023.05.07</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/53da2405b1af430f6bafa21ba45d8dd8dfc726b8\"><code>53da240</code></a> ci: Add Python 3.12-dev to the testing (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/224\">#224</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/c2fc3b1f64d6946f1057971ee897ea828ae848d8\"><code>c2fc3b1</code></a> Create a Security Policy (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/222\">#222</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/c211ef482a01aff5f1bc92c4128bfa0c955f4a01\"><code>c211ef4</code></a> Set up permissions to github workflows (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/218\">#218</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/2087de5d0aa1d472145fc1dbdfece3fe652bbac5\"><code>2087de5</code></a> Don't let deprecation warning fail CI (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/219\">#219</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/e0b9fc5c8f52ac8c300da502e5760ce3d41429ec\"><code>e0b9fc5</code></a> remove paragraphs about 1024-bit roots from README</li>\n<li>Additional commits viewable in <a href=\"https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/certifi-2023.7.22",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump certifi from 2022.12.7 to 2023.7.22\n\nBumps [certifi](https://github.com/certifi/python-certifi) from 2022.12.7 to 2023.7.22.\n- [Commits](https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22)\n\n---\nupdated-dependencies:\n- dependency-name: certifi\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012db44ee515ce6a4ea82",
    "number": 5813,
    "body": "Continuing with secho removal in favour of rich APIs. \r\n\r\n",
    "head_branch": "more-secho-cleanup",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5813 from pypa/more-secho-cleanup\n\nRemove click.{s,}echo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012dc44ee515ce6a4ea83",
    "number": 5812,
    "body": "Vendor in pythonfinder==2.0.5\r\n\r\nFixes #\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pythonfinder-2.0.5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012dd44ee515ce6a4ea84",
    "number": 5811,
    "body": "### The issue\r\n\r\nFix typos found via `codespell -S ./peeps,./pipenv/patched,./pipenv/vendor,./pipenv/pipenv.1,./get-pipenv.py,./tests/test_artifacts`\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "fix-typos",
    "is_a_fork": true,
    "comments": [
      ":partying_face: :partying_face: :partying_face: :partying_face: :partying_face: "
    ],
    "commit_messages": [
      "Merge pull request #5811 from kianmeng/fix-typos\n\nFix typos"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012dd44ee515ce6a4ea85",
    "number": 5809,
    "body": "### The issue\r\n\r\nFixes #5803 by restoring the default behavior to run the resolver in the project python sub-process.\r\n\r\nMaintain the option to invoke resolver directly (useful for debugging).\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "resolver-subprocess-maybe",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012de44ee515ce6a4ea86",
    "number": 5808,
    "body": "Vendor in latest pip 23.2 -- had to adjust the patches where lines changed.\r\n\r\n### The checklist\r\n\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pip-23.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012df44ee515ce6a4ea87",
    "number": 5807,
    "body": "Fix all ruff warnings.\r\n\r\n@matteius should be OK now.",
    "head_branch": "fix-ruff-complaints",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5807 from pypa/fix-ruff-complaints\n\nFix ruff-complaints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e044ee515ce6a4ea88",
    "number": 5806,
    "body": "Fixes #5805 \r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "skip-lock-removal",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove --skip-lock flag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e144ee515ce6a4ea89",
    "number": 5804,
    "body": "Working on reusing rich from pipenv, so we can reuse vendored libs from it.\r\n",
    "head_branch": "cleanup-secho",
    "is_a_fork": false,
    "comments": [
      "Does rich already handle the NO_COLOR env var?",
      "Yes. It does:\r\n\r\nhttps://rich.readthedocs.io/en/stable/console.html?highlight=NO_COLOR#environment-variables"
    ],
    "commit_messages": [
      "Add news snippet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e144ee515ce6a4ea8a",
    "number": 5802,
    "body": "Bumps [pygments](https://github.com/pygments/pygments) from 2.14.0 to 2.15.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pygments/pygments/releases\">pygments's releases</a>.</em></p>\n<blockquote>\n<h2>2.15.0</h2>\n<ul>\n<li>\n<p>Added lexers:</p>\n<ul>\n<li>Carbon (<a href=\"https://redirect.github.com/pygments/pygments/issues/2362\">#2362</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2365\">#2365</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2366\">#2366</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2367\">#2367</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2368\">#2368</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2369\">#2369</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2370\">#2370</a>)</li>\n<li>Dax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2335\">#2335</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2345\">#2345</a>)</li>\n<li>MediaWiki Wikitext (<a href=\"https://redirect.github.com/pygments/pygments/issues/2373\">#2373</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/827\">#827</a>)</li>\n<li>PostgreSQL Explain (<a href=\"https://redirect.github.com/pygments/pygments/issues/2398\">#2398</a>)</li>\n<li>WGSL (WebGPU Shading Language) (<a href=\"https://redirect.github.com/pygments/pygments/issues/2386\">#2386</a>)</li>\n<li>X++ (<a href=\"https://redirect.github.com/pygments/pygments/issues/2339\">#2339</a>)</li>\n</ul>\n</li>\n<li>\n<p>Updated lexers:</p>\n<ul>\n<li>\n<p>AMDGPU: Add support for <code>scratch_</code> instructions, the <code>attr*.*</code> argument,\nas well as the <code>off</code> modifier (<a href=\"https://redirect.github.com/pygments/pygments/issues/2327\">#2327</a>).</p>\n</li>\n<li>\n<p>APDL: Miscellaneous improvements (<a href=\"https://redirect.github.com/pygments/pygments/issues/2314\">#2314</a>)</p>\n</li>\n<li>\n<p>bash/tcsh:</p>\n<ul>\n<li>Move <code>break</code> to keywords (<a href=\"https://redirect.github.com/pygments/pygments/issues/2377\">#2377</a>)</li>\n<li>Improve bash math expansion lexing (<a href=\"https://redirect.github.com/pygments/pygments/issues/2255\">#2255</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2353\">#2353</a>)</li>\n</ul>\n</li>\n<li>\n<p>Chapel: Support attributes (<a href=\"https://redirect.github.com/pygments/pygments/issues/2376\">#2376</a>)</p>\n</li>\n<li>\n<p>CMake: Implement bracket style comments (<a href=\"https://redirect.github.com/pygments/pygments/issues/2338\">#2338</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2354\">#2354</a>)</p>\n</li>\n<li>\n<p>CSS: Improve lexing of numbers inside function calls (<a href=\"https://redirect.github.com/pygments/pygments/issues/2382\">#2382</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2383\">#2383</a>)</p>\n</li>\n<li>\n<p>diff: Support normal diff syntax, as opposed to unified diff syntax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2321\">#2321</a>)</p>\n</li>\n<li>\n<p>GLSL, HLSL:</p>\n<ul>\n<li>Support line continuations in preprocessor code (<a href=\"https://redirect.github.com/pygments/pygments/issues/2350\">#2350</a>)</li>\n<li>Improve preprocessor directive handling (<a href=\"https://redirect.github.com/pygments/pygments/issues/2357\">#2357</a>)</li>\n</ul>\n</li>\n<li>\n<p>LilyPond: minor update of builtins</p>\n</li>\n<li>\n<p>PHP: support attributes (<a href=\"https://redirect.github.com/pygments/pygments/issues/2055\">#2055</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2347\">#2347</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2360\">#2360</a>), fix anonymous classes without\nparameters (<a href=\"https://redirect.github.com/pygments/pygments/issues/2359\">#2359</a>), improve lexing of variable variable syntax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2358\">#2358</a>)</p>\n</li>\n<li>\n<p>Python:</p>\n<ul>\n<li>Add missing builtins (<a href=\"https://redirect.github.com/pygments/pygments/issues/2334\">#2334</a>)</li>\n<li>Fix inconsistent lexing of <code>None</code> (<a href=\"https://redirect.github.com/pygments/pygments/issues/2406\">#2406</a>)</li>\n</ul>\n</li>\n<li>\n<p>Rebol/Red: Don't require script headers (<a href=\"https://redirect.github.com/pygments/pygments/issues/2348\">#2348</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2349\">#2349</a>)</p>\n</li>\n<li>\n<p>Spice: Update keywords (<a href=\"https://redirect.github.com/pygments/pygments/issues/2336\">#2336</a>)</p>\n</li>\n<li>\n<p>SQL+Jinja (<code>analyse_text</code> method): Fix catastrophic backtracking (<a href=\"https://redirect.github.com/pygments/pygments/issues/2355\">#2355</a>)</p>\n</li>\n<li>\n<p>Terraform: Add <code>hcl</code> alias (<a href=\"https://redirect.github.com/pygments/pygments/issues/2375\">#2375</a>)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=\"https://redirect.github.com/pygments/pygments/issues/2324\">#2324</a>).</p>\n</li>\n<li>\n<p>Update <code>native</code> style to improve contrast (<a href=\"https://redirect.github.com/pygments/pygments/issues/2325\">#2325</a>).</p>\n</li>\n<li>\n<p>Update `github-dark`` style to match latest Primer style (<a href=\"https://redirect.github.com/pygments/pygments/issues/2401\">#2401</a>)</p>\n</li>\n<li>\n<p>Revert a change that made guessing lexers based on file names slower\non Python 3.10 and older (<a href=\"https://redirect.github.com/pygments/pygments/issues/2328\">#2328</a>).</p>\n</li>\n<li>\n<p>Fix some places where a locale-dependent encoding could unintentionally\nbe used instead of UTF-8 (<a href=\"https://redirect.github.com/pygments/pygments/issues/2326\">#2326</a>).</p>\n</li>\n<li>\n<p>Fix Python traceback handling (<a href=\"https://redirect.github.com/pygments/pygments/issues/2226\">#2226</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2329\">#2329</a>).</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pygments/pygments/blob/master/CHANGES\">pygments's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 2.15.0</h2>\n<p>(released April 10th, 2023)</p>\n<ul>\n<li>\n<p>Added lexers:</p>\n<ul>\n<li>Carbon (<a href=\"https://redirect.github.com/pygments/pygments/issues/2362\">#2362</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2365\">#2365</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2366\">#2366</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2367\">#2367</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2368\">#2368</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2369\">#2369</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2370\">#2370</a>)</li>\n<li>Dax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2335\">#2335</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2345\">#2345</a>)</li>\n<li>MediaWiki Wikitext (<a href=\"https://redirect.github.com/pygments/pygments/issues/2373\">#2373</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/827\">#827</a>)</li>\n<li>PostgreSQL Explain (<a href=\"https://redirect.github.com/pygments/pygments/issues/2398\">#2398</a>)</li>\n<li>WGSL (WebGPU Shading Language) (<a href=\"https://redirect.github.com/pygments/pygments/issues/2386\">#2386</a>)</li>\n<li>X++ (<a href=\"https://redirect.github.com/pygments/pygments/issues/2339\">#2339</a>)</li>\n</ul>\n</li>\n<li>\n<p>Updated lexers:</p>\n<ul>\n<li>\n<p>AMDGPU: Add support for <code>scratch_</code> instructions, the <code>attr*.*</code> argument,\nas well as the <code>off</code> modifier (<a href=\"https://redirect.github.com/pygments/pygments/issues/2327\">#2327</a>).</p>\n</li>\n<li>\n<p>APDL: Miscellaneous improvements (<a href=\"https://redirect.github.com/pygments/pygments/issues/2314\">#2314</a>)</p>\n</li>\n<li>\n<p>bash/tcsh:</p>\n<ul>\n<li>Move <code>break</code> to keywords (<a href=\"https://redirect.github.com/pygments/pygments/issues/2377\">#2377</a>)</li>\n<li>Improve bash math expansion lexing (<a href=\"https://redirect.github.com/pygments/pygments/issues/2255\">#2255</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2353\">#2353</a>)</li>\n</ul>\n</li>\n<li>\n<p>Chapel: Support attributes (<a href=\"https://redirect.github.com/pygments/pygments/issues/2376\">#2376</a>)</p>\n</li>\n<li>\n<p>CMake: Implement bracket style comments (<a href=\"https://redirect.github.com/pygments/pygments/issues/2338\">#2338</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2354\">#2354</a>)</p>\n</li>\n<li>\n<p>CSS: Improve lexing of numbers inside function calls (<a href=\"https://redirect.github.com/pygments/pygments/issues/2382\">#2382</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2383\">#2383</a>)</p>\n</li>\n<li>\n<p>diff: Support normal diff syntax, as opposed to unified diff syntax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2321\">#2321</a>)</p>\n</li>\n<li>\n<p>GLSL, HLSL:</p>\n<ul>\n<li>Support line continuations in preprocessor code (<a href=\"https://redirect.github.com/pygments/pygments/issues/2350\">#2350</a>)</li>\n<li>Improve preprocessor directive handling (<a href=\"https://redirect.github.com/pygments/pygments/issues/2357\">#2357</a>)</li>\n</ul>\n</li>\n<li>\n<p>LilyPond: minor update of builtins</p>\n</li>\n<li>\n<p>PHP: support attributes (<a href=\"https://redirect.github.com/pygments/pygments/issues/2055\">#2055</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2347\">#2347</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2360\">#2360</a>), fix anonymous classes without\nparameters (<a href=\"https://redirect.github.com/pygments/pygments/issues/2359\">#2359</a>), improve lexing of variable variable syntax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2358\">#2358</a>)</p>\n</li>\n<li>\n<p>Python:</p>\n<ul>\n<li>Add missing builtins (<a href=\"https://redirect.github.com/pygments/pygments/issues/2334\">#2334</a>)</li>\n<li>Fix inconsistent lexing of <code>None</code> (<a href=\"https://redirect.github.com/pygments/pygments/issues/2406\">#2406</a>)</li>\n</ul>\n</li>\n<li>\n<p>Rebol/Red: Don't require script headers (<a href=\"https://redirect.github.com/pygments/pygments/issues/2348\">#2348</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2349\">#2349</a>)</p>\n</li>\n<li>\n<p>Spice: Update keywords (<a href=\"https://redirect.github.com/pygments/pygments/issues/2336\">#2336</a>)</p>\n</li>\n<li>\n<p>SQL+Jinja (<code>analyse_text</code> method): Fix catastrophic backtracking (<a href=\"https://redirect.github.com/pygments/pygments/issues/2355\">#2355</a>)</p>\n</li>\n<li>\n<p>Terraform: Add <code>hcl</code> alias (<a href=\"https://redirect.github.com/pygments/pygments/issues/2375\">#2375</a>)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=\"https://redirect.github.com/pygments/pygments/issues/2324\">#2324</a>).</p>\n</li>\n<li>\n<p>Update <code>native</code> style to improve contrast (<a href=\"https://redirect.github.com/pygments/pygments/issues/2325\">#2325</a>).</p>\n</li>\n<li>\n<p>Update `github-dark`` style to match latest Primer style (<a href=\"https://redirect.github.com/pygments/pygments/issues/2401\">#2401</a>)</p>\n</li>\n<li>\n<p>Revert a change that made guessing lexers based on file names slower\non Python 3.10 and older (<a href=\"https://redirect.github.com/pygments/pygments/issues/2328\">#2328</a>).</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pygments/pygments/commit/6c187ad83267be9ce142af3fd5c9e670339dc7aa\"><code>6c187ad</code></a> Prepare 2.15 release.</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/00b9cb022cc9c05784c43c11bd7f73e64008b347\"><code>00b9cb0</code></a> Prepare for release.</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/a0824a45f0bd6c45528fa16132f09dd3570a8234\"><code>a0824a4</code></a> Update CHANGES</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/26f9f6c852846fe579c37fe936a872b68fa686ba\"><code>26f9f6c</code></a> Merge pull request <a href=\"https://redirect.github.com/pygments/pygments/issues/2406\">#2406</a> from rdbende/fix-fromimport-none</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/62b1bbbe6e329268eaa4c68f0e3eb8867c450acc\"><code>62b1bbb</code></a> Change token of None after from keyword</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/acee60e4e8dde9ea99fc494740e20b06188791ac\"><code>acee60e</code></a> Update CHANGES</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/eaca69091119e0ac5c97e626ba9e3b21b688c5ed\"><code>eaca690</code></a> Add lexer for MediaWiki Wikitext (<a href=\"https://redirect.github.com/pygments/pygments/issues/2373\">#2373</a>)</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/0e9c87bcf096908956e031f15a4e589e83be1691\"><code>0e9c87b</code></a> Update CHANGES</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7\"><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=\"https://redirect.github.com/pygments/pygments/issues/2398\">#2398</a>)</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746\"><code>3c6e2af</code></a> Update CHANGES</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pygments/pygments/compare/2.14.0...2.15.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/pygments-2.15.0",
    "is_a_fork": false,
    "comments": [
      "Looks like pygments is up-to-date now, so this is no longer needed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e244ee515ce6a4ea8b",
    "number": 5801,
    "body": "Bumps [pygments](https://github.com/pygments/pygments) from 2.14.0 to 2.15.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pygments/pygments/releases\">pygments's releases</a>.</em></p>\n<blockquote>\n<h2>2.15.0</h2>\n<ul>\n<li>\n<p>Added lexers:</p>\n<ul>\n<li>Carbon (<a href=\"https://redirect.github.com/pygments/pygments/issues/2362\">#2362</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2365\">#2365</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2366\">#2366</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2367\">#2367</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2368\">#2368</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2369\">#2369</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2370\">#2370</a>)</li>\n<li>Dax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2335\">#2335</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2345\">#2345</a>)</li>\n<li>MediaWiki Wikitext (<a href=\"https://redirect.github.com/pygments/pygments/issues/2373\">#2373</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/827\">#827</a>)</li>\n<li>PostgreSQL Explain (<a href=\"https://redirect.github.com/pygments/pygments/issues/2398\">#2398</a>)</li>\n<li>WGSL (WebGPU Shading Language) (<a href=\"https://redirect.github.com/pygments/pygments/issues/2386\">#2386</a>)</li>\n<li>X++ (<a href=\"https://redirect.github.com/pygments/pygments/issues/2339\">#2339</a>)</li>\n</ul>\n</li>\n<li>\n<p>Updated lexers:</p>\n<ul>\n<li>\n<p>AMDGPU: Add support for <code>scratch_</code> instructions, the <code>attr*.*</code> argument,\nas well as the <code>off</code> modifier (<a href=\"https://redirect.github.com/pygments/pygments/issues/2327\">#2327</a>).</p>\n</li>\n<li>\n<p>APDL: Miscellaneous improvements (<a href=\"https://redirect.github.com/pygments/pygments/issues/2314\">#2314</a>)</p>\n</li>\n<li>\n<p>bash/tcsh:</p>\n<ul>\n<li>Move <code>break</code> to keywords (<a href=\"https://redirect.github.com/pygments/pygments/issues/2377\">#2377</a>)</li>\n<li>Improve bash math expansion lexing (<a href=\"https://redirect.github.com/pygments/pygments/issues/2255\">#2255</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2353\">#2353</a>)</li>\n</ul>\n</li>\n<li>\n<p>Chapel: Support attributes (<a href=\"https://redirect.github.com/pygments/pygments/issues/2376\">#2376</a>)</p>\n</li>\n<li>\n<p>CMake: Implement bracket style comments (<a href=\"https://redirect.github.com/pygments/pygments/issues/2338\">#2338</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2354\">#2354</a>)</p>\n</li>\n<li>\n<p>CSS: Improve lexing of numbers inside function calls (<a href=\"https://redirect.github.com/pygments/pygments/issues/2382\">#2382</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2383\">#2383</a>)</p>\n</li>\n<li>\n<p>diff: Support normal diff syntax, as opposed to unified diff syntax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2321\">#2321</a>)</p>\n</li>\n<li>\n<p>GLSL, HLSL:</p>\n<ul>\n<li>Support line continuations in preprocessor code (<a href=\"https://redirect.github.com/pygments/pygments/issues/2350\">#2350</a>)</li>\n<li>Improve preprocessor directive handling (<a href=\"https://redirect.github.com/pygments/pygments/issues/2357\">#2357</a>)</li>\n</ul>\n</li>\n<li>\n<p>LilyPond: minor update of builtins</p>\n</li>\n<li>\n<p>PHP: support attributes (<a href=\"https://redirect.github.com/pygments/pygments/issues/2055\">#2055</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2347\">#2347</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2360\">#2360</a>), fix anonymous classes without\nparameters (<a href=\"https://redirect.github.com/pygments/pygments/issues/2359\">#2359</a>), improve lexing of variable variable syntax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2358\">#2358</a>)</p>\n</li>\n<li>\n<p>Python:</p>\n<ul>\n<li>Add missing builtins (<a href=\"https://redirect.github.com/pygments/pygments/issues/2334\">#2334</a>)</li>\n<li>Fix inconsistent lexing of <code>None</code> (<a href=\"https://redirect.github.com/pygments/pygments/issues/2406\">#2406</a>)</li>\n</ul>\n</li>\n<li>\n<p>Rebol/Red: Don't require script headers (<a href=\"https://redirect.github.com/pygments/pygments/issues/2348\">#2348</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2349\">#2349</a>)</p>\n</li>\n<li>\n<p>Spice: Update keywords (<a href=\"https://redirect.github.com/pygments/pygments/issues/2336\">#2336</a>)</p>\n</li>\n<li>\n<p>SQL+Jinja (<code>analyse_text</code> method): Fix catastrophic backtracking (<a href=\"https://redirect.github.com/pygments/pygments/issues/2355\">#2355</a>)</p>\n</li>\n<li>\n<p>Terraform: Add <code>hcl</code> alias (<a href=\"https://redirect.github.com/pygments/pygments/issues/2375\">#2375</a>)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=\"https://redirect.github.com/pygments/pygments/issues/2324\">#2324</a>).</p>\n</li>\n<li>\n<p>Update <code>native</code> style to improve contrast (<a href=\"https://redirect.github.com/pygments/pygments/issues/2325\">#2325</a>).</p>\n</li>\n<li>\n<p>Update `github-dark`` style to match latest Primer style (<a href=\"https://redirect.github.com/pygments/pygments/issues/2401\">#2401</a>)</p>\n</li>\n<li>\n<p>Revert a change that made guessing lexers based on file names slower\non Python 3.10 and older (<a href=\"https://redirect.github.com/pygments/pygments/issues/2328\">#2328</a>).</p>\n</li>\n<li>\n<p>Fix some places where a locale-dependent encoding could unintentionally\nbe used instead of UTF-8 (<a href=\"https://redirect.github.com/pygments/pygments/issues/2326\">#2326</a>).</p>\n</li>\n<li>\n<p>Fix Python traceback handling (<a href=\"https://redirect.github.com/pygments/pygments/issues/2226\">#2226</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2329\">#2329</a>).</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pygments/pygments/blob/master/CHANGES\">pygments's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 2.15.0</h2>\n<p>(released April 10th, 2023)</p>\n<ul>\n<li>\n<p>Added lexers:</p>\n<ul>\n<li>Carbon (<a href=\"https://redirect.github.com/pygments/pygments/issues/2362\">#2362</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2365\">#2365</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2366\">#2366</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2367\">#2367</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2368\">#2368</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2369\">#2369</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2370\">#2370</a>)</li>\n<li>Dax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2335\">#2335</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2345\">#2345</a>)</li>\n<li>MediaWiki Wikitext (<a href=\"https://redirect.github.com/pygments/pygments/issues/2373\">#2373</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/827\">#827</a>)</li>\n<li>PostgreSQL Explain (<a href=\"https://redirect.github.com/pygments/pygments/issues/2398\">#2398</a>)</li>\n<li>WGSL (WebGPU Shading Language) (<a href=\"https://redirect.github.com/pygments/pygments/issues/2386\">#2386</a>)</li>\n<li>X++ (<a href=\"https://redirect.github.com/pygments/pygments/issues/2339\">#2339</a>)</li>\n</ul>\n</li>\n<li>\n<p>Updated lexers:</p>\n<ul>\n<li>\n<p>AMDGPU: Add support for <code>scratch_</code> instructions, the <code>attr*.*</code> argument,\nas well as the <code>off</code> modifier (<a href=\"https://redirect.github.com/pygments/pygments/issues/2327\">#2327</a>).</p>\n</li>\n<li>\n<p>APDL: Miscellaneous improvements (<a href=\"https://redirect.github.com/pygments/pygments/issues/2314\">#2314</a>)</p>\n</li>\n<li>\n<p>bash/tcsh:</p>\n<ul>\n<li>Move <code>break</code> to keywords (<a href=\"https://redirect.github.com/pygments/pygments/issues/2377\">#2377</a>)</li>\n<li>Improve bash math expansion lexing (<a href=\"https://redirect.github.com/pygments/pygments/issues/2255\">#2255</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2353\">#2353</a>)</li>\n</ul>\n</li>\n<li>\n<p>Chapel: Support attributes (<a href=\"https://redirect.github.com/pygments/pygments/issues/2376\">#2376</a>)</p>\n</li>\n<li>\n<p>CMake: Implement bracket style comments (<a href=\"https://redirect.github.com/pygments/pygments/issues/2338\">#2338</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2354\">#2354</a>)</p>\n</li>\n<li>\n<p>CSS: Improve lexing of numbers inside function calls (<a href=\"https://redirect.github.com/pygments/pygments/issues/2382\">#2382</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2383\">#2383</a>)</p>\n</li>\n<li>\n<p>diff: Support normal diff syntax, as opposed to unified diff syntax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2321\">#2321</a>)</p>\n</li>\n<li>\n<p>GLSL, HLSL:</p>\n<ul>\n<li>Support line continuations in preprocessor code (<a href=\"https://redirect.github.com/pygments/pygments/issues/2350\">#2350</a>)</li>\n<li>Improve preprocessor directive handling (<a href=\"https://redirect.github.com/pygments/pygments/issues/2357\">#2357</a>)</li>\n</ul>\n</li>\n<li>\n<p>LilyPond: minor update of builtins</p>\n</li>\n<li>\n<p>PHP: support attributes (<a href=\"https://redirect.github.com/pygments/pygments/issues/2055\">#2055</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2347\">#2347</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2360\">#2360</a>), fix anonymous classes without\nparameters (<a href=\"https://redirect.github.com/pygments/pygments/issues/2359\">#2359</a>), improve lexing of variable variable syntax (<a href=\"https://redirect.github.com/pygments/pygments/issues/2358\">#2358</a>)</p>\n</li>\n<li>\n<p>Python:</p>\n<ul>\n<li>Add missing builtins (<a href=\"https://redirect.github.com/pygments/pygments/issues/2334\">#2334</a>)</li>\n<li>Fix inconsistent lexing of <code>None</code> (<a href=\"https://redirect.github.com/pygments/pygments/issues/2406\">#2406</a>)</li>\n</ul>\n</li>\n<li>\n<p>Rebol/Red: Don't require script headers (<a href=\"https://redirect.github.com/pygments/pygments/issues/2348\">#2348</a>, <a href=\"https://redirect.github.com/pygments/pygments/issues/2349\">#2349</a>)</p>\n</li>\n<li>\n<p>Spice: Update keywords (<a href=\"https://redirect.github.com/pygments/pygments/issues/2336\">#2336</a>)</p>\n</li>\n<li>\n<p>SQL+Jinja (<code>analyse_text</code> method): Fix catastrophic backtracking (<a href=\"https://redirect.github.com/pygments/pygments/issues/2355\">#2355</a>)</p>\n</li>\n<li>\n<p>Terraform: Add <code>hcl</code> alias (<a href=\"https://redirect.github.com/pygments/pygments/issues/2375\">#2375</a>)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=\"https://redirect.github.com/pygments/pygments/issues/2324\">#2324</a>).</p>\n</li>\n<li>\n<p>Update <code>native</code> style to improve contrast (<a href=\"https://redirect.github.com/pygments/pygments/issues/2325\">#2325</a>).</p>\n</li>\n<li>\n<p>Update `github-dark`` style to match latest Primer style (<a href=\"https://redirect.github.com/pygments/pygments/issues/2401\">#2401</a>)</p>\n</li>\n<li>\n<p>Revert a change that made guessing lexers based on file names slower\non Python 3.10 and older (<a href=\"https://redirect.github.com/pygments/pygments/issues/2328\">#2328</a>).</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pygments/pygments/commit/6c187ad83267be9ce142af3fd5c9e670339dc7aa\"><code>6c187ad</code></a> Prepare 2.15 release.</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/00b9cb022cc9c05784c43c11bd7f73e64008b347\"><code>00b9cb0</code></a> Prepare for release.</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/a0824a45f0bd6c45528fa16132f09dd3570a8234\"><code>a0824a4</code></a> Update CHANGES</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/26f9f6c852846fe579c37fe936a872b68fa686ba\"><code>26f9f6c</code></a> Merge pull request <a href=\"https://redirect.github.com/pygments/pygments/issues/2406\">#2406</a> from rdbende/fix-fromimport-none</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/62b1bbbe6e329268eaa4c68f0e3eb8867c450acc\"><code>62b1bbb</code></a> Change token of None after from keyword</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/acee60e4e8dde9ea99fc494740e20b06188791ac\"><code>acee60e</code></a> Update CHANGES</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/eaca69091119e0ac5c97e626ba9e3b21b688c5ed\"><code>eaca690</code></a> Add lexer for MediaWiki Wikitext (<a href=\"https://redirect.github.com/pygments/pygments/issues/2373\">#2373</a>)</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/0e9c87bcf096908956e031f15a4e589e83be1691\"><code>0e9c87b</code></a> Update CHANGES</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7\"><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=\"https://redirect.github.com/pygments/pygments/issues/2398\">#2398</a>)</li>\n<li><a href=\"https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746\"><code>3c6e2af</code></a> Update CHANGES</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pygments/pygments/compare/2.14.0...2.15.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/pygments-2.15.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump pygments from 2.14.0 to 2.15.0\n\nBumps [pygments](https://github.com/pygments/pygments) from 2.14.0 to 2.15.0.\n- [Release notes](https://github.com/pygments/pygments/releases)\n- [Changelog](https://github.com/pygments/pygments/blob/master/CHANGES)\n- [Commits](https://github.com/pygments/pygments/compare/2.14.0...2.15.0)\n\n---\nupdated-dependencies:\n- dependency-name: pygments\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e344ee515ce6a4ea8c",
    "number": 5797,
    "body": "We get this when we have subtables that do not\r\ndirectly follow their parent table.\r\n\r\nFixes: #5794\r\n\r\n### The fix\r\n\r\nI think this issue and the fix show that we're way too deep into the tomlkit internals. I think\r\nin the long run it would be much better to try to use a higher level interface... But I really don't\r\nhave time to go that deep into the code to find out whether that is even feasible. So for now\r\nthe minimal fix.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "tomlkit-oootp",
    "is_a_fork": true,
    "comments": [
      "Thanks for your contribution @flichtenheld !"
    ],
    "commit_messages": [
      "utils.toml: Handle tomlkit OutOfOrderTableProxy (#5797)\n\nWe get this when we have subtables that do not\r\ndirectly follow their parent table.\r\n\r\nFixes: #5794\r\n\r\nSigned-off-by: Frank Lichtenheld <frank@lichtenheld.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e444ee515ce6a4ea8d",
    "number": 5793,
    "body": "The requirementslib models are a nested mess.  I fixed the issue of wheel extras not being installed and broke a bunch of other stuff in the process the other night, but it dawned on me that there is a lot of translating between pip lines and data models and  back and forth and it really is messy and doesn't make much sense.\r\n\r\nThis is the start of re-establishing what interfaces are actually needed to get between Pipfile, Pipfile.lock and pip lines.   The preferred data model to use is pip's InstallRequirement since requirementslib was using it under the hood anwyay as `ireq`.\r\n\r\nThere are still a number of edge cases to work out, but I am opening  this draft PR now because I want to see if I actually broke the test runner or just my local environment.\r\n\r\nAt a high level this is what I am thinking but it requires dropping `--skip-lock` the rest of the way first:\r\n![image](https://github.com/pypa/pipenv/assets/479892/9d2b1e92-fbf7-491c-85f3-b9f26636e646)\r\n\r\nFixes #5817\r\nFixes #5789\r\nFixes #5696\r\nFixes #5626\r\nFixes #5595 \r\nFixes #5490\r\nFixes #5716 (probably)\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "draft-no-reqlib",
    "is_a_fork": false,
    "comments": [
      "@matteius To address [your request to me](https://github.com/pypa/pipenv/issues/5798#issuecomment-1659572658) to test this code (and also your request [to @joaomcarlos](https://github.com/pypa/pipenv/issues/5791)), I cloned the full pipenv repo and then installed your ```draft-no-reqlib``` branch on my local machine with the following (after uninstalling the previously installed ```pipenv```):\r\n```pip3 install git+https://github.com/DanielSwain/pipenv.git@draft-no-reqlib```\r\nI ran ```pipenv update``` in the project that has a private repo as part of its dependencies.  It failed in attempting the lock.  Below are the full results from the point of running ```python3 -m pipenv update```.  I hope this is helpful.\r\n\r\n```\r\nRunning $ pipenv lock then $ pipenv sync.\r\nLocking [packages] dependencies...\r\nBuilding requirements...\r\nResolving dependencies...\r\nResolving dependencies...\r\n✘ Locking Failed!\r\n⠴ Locking...\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/patched/pip/_vendor/packaging/requirements.py\", line 102, in __init__\r\n    req = REQUIREMENT.parseString(requirement_string)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/patched/pip/_vendor/pyparsing/util.py\", line 256, in _inner\r\n    return fn(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/patched/pip/_vendor/pyparsing/core.py\", line 1190, in parse_string\r\n    raise exc.with_traceback(None)\r\npipenv.patched.pip._vendor.pyparsing.exceptions.ParseException: Expected string_end, found ':'  (at char 3), (line:1, col:4)\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/patched/pip/_internal/req/constructors.py\", line 341, in _parse_req_string\r\n    req = get_requirement(req_as_string)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/patched/pip/_internal/utils/packaging.py\", line 45, in get_requirement\r\n    return Requirement(req_string)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/patched/pip/_vendor/packaging/requirements.py\", line 104, in __init__\r\n    raise InvalidRequirement(\r\npipenv.patched.pip._vendor.packaging.requirements.InvalidRequirement: Parse error at \"'://git@b'\": Expected string_end\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 699, in <module>\r\n    main()\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 685, in main\r\n    _main(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 665, in _main\r\n    resolve_packages(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 642, in resolve_packages\r\n    results = clean_results(results, resolver, project, category)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 577, in clean_results\r\n    entry_dict = translate_markers(entry.get_cleaned_dict())\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 246, in get_cleaned_dict\r\n    if self.entry.extras != self.lockfile_entry.extras:\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 549, in __getattribute__\r\n    return super().__getattribute__(key)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 268, in lockfile_entry\r\n    self._lockfile_entry = self.make_requirement(self.name, self.lockfile_dict)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 146, in make_requirement\r\n    return from_pipfile(name, entry)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/utils/dependencies.py\", line 901, in from_pipfile\r\n    install_req, markers = install_req_from_pipfile(name, pipfile)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/utils/dependencies.py\", line 887, in install_req_from_pipfile\r\n    install_req = expansive_install_req_from_line(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/utils/dependencies.py\", line 842, in expansive_install_req_from_line\r\n    parts = parse_req_from_line(name, line_source)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/patched/pip/_internal/req/constructors.py\", line 369, in parse_req_from_line\r\n    req: Optional[Requirement] = _parse_req_string(req_as_string)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/patched/pip/_internal/req/constructors.py\", line 355, in _parse_req_string\r\n    raise InstallationError(msg)\r\npipenv.patched.pip._internal.exceptions.InstallationError: Invalid requirement: 'ssh://git@bitbucket.org/OUR_ORGANIZATION/OUR_PRIVATE_REPO.git'\r\nHint: It looks like a path. File 'ssh://git@bitbucket.org/OUR_ORGANIZATION/OUR_PRIVATE_REPO.git' does not exist.\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/runpy.py\", line 194, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"/usr/lib/python3.8/runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/__main__.py\", line 4, in <module>\r\n    cli()\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 1130, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/cli/options.py\", line 57, in main\r\n    return super().main(*args, **kwargs, windows_expand_args=False)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 1055, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 1657, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 1404, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 760, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/decorators.py\", line 84, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 760, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/decorators.py\", line 26, in new_func\r\n    return f(get_current_context(), *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/cli/command.py\", line 570, in update\r\n    do_update(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/routines/update.py\", line 57, in do_update\r\n    do_lock(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/routines/lock.py\", line 65, in do_lock\r\n    venv_resolve_deps(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/utils/resolver.py\", line 781, in venv_resolve_deps\r\n    c = resolve(cmd, st, project=project)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/utils/resolver.py\", line 654, in resolve\r\n    raise RuntimeError(\"Failed to lock Pipfile.lock!\")\r\nRuntimeError: Failed to lock Pipfile.lock!\r\n\r\nroot@MY-DEV-MACHINE:/project_directory# pip3 uninstall pipenv\r\nFound existing installation: pipenv 2023.7.24.dev0\r\nUninstalling pipenv-2023.7.24.dev0:\r\n  Would remove:\r\n    /usr/local/bin/pipenv\r\n    /usr/local/bin/pipenv-resolver\r\n    /usr/local/lib/python3.8/dist-packages/pipenv-2023.7.24.dev0.dist-info/*\r\n    /usr/local/lib/python3.8/dist-packages/pipenv/*\r\nProceed (Y/n)? Y\r\n  Successfully uninstalled pipenv-2023.7.24.dev0\r\n\r\nroot@MY-DEV-MACHINE:/var/sites/paulownia# pip3 install pipenv\r\nCollecting pipenv\r\n  Obtaining dependency information for pipenv from https://files.pythonhosted.org/packages/91/a7/97ecc0da97fff327eef7b47cfefc8a5e1f5b20cf45cd1b119c2392199647/pipenv-2023.7.23-py3-none-any.whl.metadata\r\n  Downloading pipenv-2023.7.23-py3-none-any.whl.metadata (14 kB)\r\nRequirement already satisfied: certifi in /usr/lib/python3/dist-packages (from pipenv) (2019.11.28)\r\nRequirement already satisfied: setuptools>=67.0.0 in /usr/local/lib/python3.8/dist-packages (from pipenv) (67.7.2)\r\nRequirement already satisfied: virtualenv-clone>=0.2.5 in /usr/local/lib/python3.8/dist-packages (from pipenv) (0.5.4)\r\nRequirement already satisfied: virtualenv>=20.17.1 in /usr/local/lib/python3.8/dist-packages (from pipenv) (20.20.0)\r\nRequirement already satisfied: distlib<1,>=0.3.6 in /usr/local/lib/python3.8/dist-packages (from virtualenv>=20.17.1->pipenv) (0.3.6)\r\nRequirement already satisfied: filelock<4,>=3.4.1 in /usr/local/lib/python3.8/dist-packages (from virtualenv>=20.17.1->pipenv) (3.9.0)\r\nRequirement already satisfied: platformdirs<4,>=2.4 in /usr/local/lib/python3.8/dist-packages (from virtualenv>=20.17.1->pipenv) (3.0.0)\r\nDownloading pipenv-2023.7.23-py3-none-any.whl (2.8 MB)\r\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.8/2.8 MB 9.5 MB/s eta 0:00:00\r\nDEPRECATION: distro-info 0.23ubuntu1 has a non-standard version number. pip 23.3 will enforce this behaviour change. A possible replacement is to upgrade to a newer version of distro-info or contact the author to suggest that they release a version with a conforming version number. Discussion can be found at https://github.com/pypa/pip/issues/12063\r\nInstalling collected packages: pipenv\r\nSuccessfully installed pipenv-2023.7.23\r\n\r\nroot@MY-DEV-MACHINE:/project_directory# python3 -m pipenv update\r\nLoading .env environment variables...\r\nRunning $ pipenv lock then $ pipenv sync.\r\nLocking [packages] dependencies...\r\nBuilding requirements...\r\nResolving dependencies...\r\nResolving dependencies...\r\n✔ Success!\r\nLocking [dev-packages] dependencies...\r\nUpdated Pipfile.lock (33ef1338______________________________________________)!\r\nInstalling dependencies from Pipfile.lock (8fa064)...\r\nTo activate this project's virtualenv, run pipenv shell.\r\nAlternatively, run a command inside the virtualenv with pipenv run.\r\nAll dependencies are now up-to-date!\r\n```",
      "@DanielSwain that is helpful to know there is an edge case but I likely need more information to accurately assess.   My guess is you have a Pipfile entry for a git requirement and the key starts with ssh://?   If so could you try appending `git+` such that it becomes `git+ssh://` to that Pipfile entry and try to relock?  This would be helpful information to know, perhaps some VCS Pipfile entries work on the old version but would be generated slightly differently on the new version. ",
      "@DanielSwain thanks again for checking this -- I just pushed a change that should cover this older style vcs Pipfile entry that is missing the {vcs}+ specifier.  Let me know if you get a chance to re-check it.",
      "@matteius I installed the latest from your `draft-no-reqlib branch`.  I did `python3 -m pipenv update` both before and after adding `git+` in front of `ssh` in the Pipfile, and I got the same error both times:\r\n\r\n```\r\nroot@MY_DEV_MACHINE:/my/project# python3 -m pipenv update\r\nLoading .env environment variables...\r\nRunning $ pipenv lock then $ pipenv sync.\r\nLocking [packages] dependencies...\r\nBuilding requirements...\r\nResolving dependencies...\r\n✘ Locking Failed!\r\n⠦ Locking...\r\nERROR:pip.subprocessor:[present-rich] git fetch -q --tags exited with 128\r\n[ResolutionFailure]:   File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 665, in _main\r\n[ResolutionFailure]:       resolve_packages(\r\n[ResolutionFailure]:   File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 632, in resolve_packages\r\n[ResolutionFailure]:       results, resolver = resolve(\r\n[ResolutionFailure]:   File \"/usr/local/lib/python3.8/dist-packages/pipenv/resolver.py\", line 612, in resolve\r\n[ResolutionFailure]:       return resolve_deps(\r\n[ResolutionFailure]:   File \"/usr/local/lib/python3.8/dist-packages/pipenv/utils/resolver.py\", line 842, in resolve_deps\r\n[ResolutionFailure]:       results, hashes, internal_resolver = actually_resolve_deps(\r\n[ResolutionFailure]:   File \"/usr/local/lib/python3.8/dist-packages/pipenv/utils/resolver.py\", line 617, in actually_resolve_deps\r\n[ResolutionFailure]:       resolver.resolve()\r\n[ResolutionFailure]:   File \"/usr/local/lib/python3.8/dist-packages/pipenv/utils/resolver.py\", line 441, in resolve\r\n[ResolutionFailure]:       raise ResolutionFailure(message=str(e))\r\n[pipenv.exceptions.ResolutionFailure]: Warning: Your dependencies could not be resolved. You likely have a mismatch in your sub-dependencies.\r\n  You can use $ pipenv run pip install <requirement_name> to bypass this mechanism, then run $ pipenv graph to inspect the versions actually installed in the virtualenv.\r\n  Hint: try $ pipenv lock --pre if it is a pre-release dependency.\r\nERROR: git fetch -q --tags exited with 128\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/runpy.py\", line 194, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"/usr/lib/python3.8/runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/__main__.py\", line 4, in <module>\r\n    cli()\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 1130, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/cli/options.py\", line 57, in main\r\n    return super().main(*args, **kwargs, windows_expand_args=False)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 1055, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 1657, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 1404, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 760, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/decorators.py\", line 84, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/core.py\", line 760, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/vendor/click/decorators.py\", line 26, in new_func\r\n    return f(get_current_context(), *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/cli/command.py\", line 570, in update\r\n    do_update(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/routines/update.py\", line 57, in do_update\r\n    do_lock(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/routines/lock.py\", line 65, in do_lock\r\n    venv_resolve_deps(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/utils/resolver.py\", line 783, in venv_resolve_deps\r\n    c = resolve(cmd, st, project=project)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pipenv/utils/resolver.py\", line 654, in resolve\r\n    raise RuntimeError(\"Failed to lock Pipfile.lock!\")\r\nRuntimeError: Failed to lock Pipfile.lock!\r\n```\r\n",
      "@DanielSwain Can you tell me if your vcs Pipfile entry has any keys besides the git key?   Specifically a ref or branch name?   If it does, I can probably come up with a fix, but if that bit of information is missing, I think it will end up being a backwards incompatibility or somehow it needs to determine the default branch when none is given.   So for example, I found that I had to add `@branch_name_or_ref` at the end of the vcs entry or install line to get it to work.\r\n\r\n```\r\nmatte@LAPTOP-N5VSGIBD MINGW64 ~/Projects/pipenv-triage/vcs_reqs\r\n$ pipenv install git+ssh://git@github.com/pypa/pipenv.git@main\r\nInstalling git+ssh://git@github.com/pypa/pipenv.git@main...\r\nResolving git+ssh://git@github.com/pypa/pipenv.git@main...\r\nAdded pipenv to Pipfile's [packages] ...\r\nInstallation Succeeded\r\nPipfile.lock (5c9a38) out of date, updating to (379467)...\r\nLocking [packages] dependencies...\r\nBuilding requirements...\r\nResolving dependencies...\r\nSuccess!\r\nLocking [dev-packages] dependencies...\r\nUpdated Pipfile.lock (aefcf91d1e13a8dc19a9835275b11bf6712875db3ad4ed48bca85b2fb3379467)!\r\nInstalling dependencies from Pipfile.lock (379467)...\r\nTo activate this project's virtualenv, run pipenv shell.\r\nAlternatively, run a command inside the virtualenv with pipenv run.\r\n\r\nmatte@LAPTOP-N5VSGIBD MINGW64 ~/Projects/pipenv-triage/vcs_reqs\r\n$ cat Pipfile\r\n[[source]]\r\nurl = \"https://pypi.org/simple\"\r\nverify_ssl = true\r\nname = \"pypi\"\r\n\r\n[packages]\r\npipenv = {git = \"git+ssh://git@github.com/pypa/pipenv.git@main\"}\r\n\r\n[dev-packages]\r\n\r\n[requires]\r\npython_version = \"3.9\"\r\n\r\nmatte@LAPTOP-N5VSGIBD MINGW64 ~/Projects/pipenv-triage/vcs_reqs\r\n$ pipenv update\r\nRunning $ pipenv lock then $ pipenv sync.\r\nLocking [packages] dependencies...\r\nBuilding requirements...\r\nResolving dependencies...\r\nSuccess!\r\nLocking [dev-packages] dependencies...\r\nUpdated Pipfile.lock (aefcf91d1e13a8dc19a9835275b11bf6712875db3ad4ed48bca85b2fb3379467)!\r\nInstalling dependencies from Pipfile.lock (379467)...\r\nTo activate this project's virtualenv, run pipenv shell.\r\nAlternatively, run a command inside the virtualenv with pipenv run.\r\nAll dependencies are now up-to-date!\r\n```",
      "@matteius, here is the format of the private library entry in the Pipfile:\r\n`our-private-library = {ref = \"master\", git = \"git+ssh://git@bitbucket.org/our_organization/our-private-library.git\"}`",
      "@matteius, I installed your latest:\r\n```\r\nroot@MY_DEV_MACHINE:/# pip3 install git+https://github.com/pypa/pipenv.git@draft-no-reqlib\r\nCollecting git+https://github.com/pypa/pipenv.git@draft-no-reqlib\r\n  Cloning https://github.com/pypa/pipenv.git (to revision draft-no-reqlib) to /tmp/pip-req-build-eicwjk9j\r\n  Running command git clone --filter=blob:none --quiet https://github.com/pypa/pipenv.git /tmp/pip-req-build-eicwjk9j\r\n  Running command git checkout -b draft-no-reqlib --track origin/draft-no-reqlib\r\n  Switched to a new branch 'draft-no-reqlib'\r\n  Branch 'draft-no-reqlib' set up to track remote branch 'draft-no-reqlib' from 'origin'.\r\n  Resolved https://github.com/pypa/pipenv.git to commit 0dec26ee3db100d90b6df39a7c9455a38cfdc917\r\n\r\n```\r\n\r\nI tried `pipenv update` without `git+` in front of the repo reference in Pipfile, and it worked (I didn't try it with `git+`).  I then installed your latest on production, did a `pipenv sync`, and that also worked.  Thank you!\r\n\r\nI do have a question:  I checked the `Pipfile.lock` file.  Previously I would see a hash in there for even the private repo.  It would be of the form:\r\n'''\r\n\"our-private-repo\": {\r\n    \"git\": \"ssh://git@bitbucket.org/our_organization/our-private-repo.git\",\r\n    \"ref\": \"xxxxx_some_hash_value_xxxxx\"\r\n}\r\n'''\r\nNow it simply has:\r\n'''\r\n\"our-private-repo\": {\r\n    \"git\": \"ssh://git@bitbucket.org/our_organization/our-private-repo.git\",\r\n    \"ref\": \"master\"\r\n}\r\n'''\r\n\r\nI realize that `\"ref\": \"master\"` refers to the branch that we installed, but should it be hashed as before in order to be pinned to a particular commit on the branch?",
      "Thanks @DanielSwain I think that will be important to sort out as well, to be honest, it was a short cut I took to get things working which makes the two big things I know about that need more work here are:\r\n* Revisit how to lock the hash for all VCS reqs\r\n* local VCS+file:// install requirements  (however this doesn't seem to work on the main branch either, but if possible, it would be cool to get it working).\r\nEDIT:  Actually, are local VCS+file:// lines even really possible?   From reading the existing code I thought maybe they were, but on pip I don't see it working either:\r\n```\r\n$ pip install git+file://../../pipenv@main\r\nDEPRECATION: Loading egg at c:\\users\\matte\\appdata\\local\\programs\\python\\python311\\lib\\site-packages\\annotated_types-0.4.0-py3.11.egg is deprecated. pip 23.3 will enforce this behaviour change. A possible replacement is to use pip for package installation..\r\nDEPRECATION: Loading egg at c:\\users\\matte\\appdata\\local\\programs\\python\\python311\\lib\\site-packages\\cerberus-1.3.4-py3.11.egg is deprecated. pip 23.3 will enforce this behaviour change. A possible replacement is to use pip for package installation..\r\nDEPRECATION: Loading egg at c:\\users\\matte\\appdata\\local\\programs\\python\\python311\\lib\\site-packages\\pep517-0.13.0-py3.11.egg is deprecated. pip 23.3 will enforce this behaviour change. A possible replacement is to use pip for package installation..\r\nDEPRECATION: Loading egg at c:\\users\\matte\\appdata\\local\\programs\\python\\python311\\lib\\site-packages\\pip-23.1.2-py3.11.egg is deprecated. pip 23.3 will enforce this behaviour change. A possible replacement is to use pip for package installation..\r\nDEPRECATION: Loading egg at c:\\users\\matte\\appdata\\local\\programs\\python\\python311\\lib\\site-packages\\plette-0.4.4-py3.11.egg is deprecated. pip 23.3 will enforce this behaviour change. A possible replacement is to use pip for package installation..\r\nDEPRECATION: Loading egg at c:\\users\\matte\\appdata\\local\\programs\\python\\python311\\lib\\site-packages\\requirementslib-2.3.1.dev0-py3.11.egg is deprecated. pip 23.3 will enforce this behaviour change. A possible replacement is to use pip for package installation..\r\nDEPRECATION: Loading egg at c:\\users\\matte\\appdata\\local\\programs\\python\\python311\\lib\\site-packages\\tomlkit-0.11.8-py3.11.egg is deprecated. pip 23.3 will enforce this behaviour change. A possible replacement is to use pip for package installation..\r\nCollecting git+file://../../pipenv@main\r\n  Cloning file://../../pipenv (to revision main) to c:\\users\\matte\\appdata\\local\\temp\\pip-req-build-dwwna63w\r\n  Running command git clone --filter=blob:none --quiet file://../../pipenv 'C:\\Users\\matte\\AppData\\Local\\Temp\\pip-req-build-dwwna63w'\r\n  fatal: '//../../pipenv' does not appear to be a git repository\r\n  fatal: Could not read from remote repository.\r\n\r\n  Please make sure you have the correct access rights\r\n  and the repository exists.\r\n  error: subprocess-exited-with-error\r\n\r\n  × git clone --filter=blob:none --quiet file://../../pipenv 'C:\\Users\\matte\\AppData\\Local\\Temp\\pip-req-build-dwwna63w' did not run successfully.\r\n  │ exit code: 128\r\n  ╰─> See above for output.\r\n\r\n  note: This error originates from a subprocess, and is likely not a problem with pip.\r\nerror: subprocess-exited-with-error\r\n\r\n× git clone --filter=blob:none --quiet file://../../pipenv 'C:\\Users\\matte\\AppData\\Local\\Temp\\pip-req-build-dwwna63w' did not run successfully.\r\n│ exit code: 128\r\n╰─> See above for output.\r\n\r\nnote: This error originates from a subprocess, and is likely not a problem with pip.\r\n```\r\n",
      "@matteius When you get hashing on VCS repos re-implemented, just let me know.  I'd be glad to test that for you.",
      "@DanielSwain I got the VCS lockfile hashing sorted out now.  👍 ",
      "Hey @matteius I'm wondering if there is a way to get more details/output when a dependency resolution check fails. I'm having an issue getting Pipfile with particular private PyPI registry packages to lock, and even with `--verbose` I cannot figure out why this is the case. If I `pip install` the packages, there are no dependency conflicts. If I create a requirements file using `pip freeze` after manually installing everything I can then create a lock file from the requirements file. However, the standard unpinned Pipfile will not lock. Any hidden options or ideas would be greatly helpful.",
      "@kalebmckale I just pushed a commit to this branch which gets the `-v` or `--verbose` flag working with the right level of pip output from the resolver now.  Please give it a try.",
      "@matteius I tested with the version. The verbose output was very helpful. I think I know what the problem is, but I'm not sure why it's happening. Is this the thread to discuss it or should I create a new issue since it seems to be behavior independent of the current changes?",
      "@kalebmckale please open a new issue for that then.",
      "> @kalebmckale please open a new issue for that then.\n\nDone!"
    ],
    "commit_messages": [
      "stop using requirementslib models (#5793)\n\n* Move away from requirementslib models\r\n\r\n* Revise test since PEP-440 does not support wildcard versions but does support equivalent compatible release specifiers.\r\n\r\n* simplify and remove dead code\r\n\r\n* Ensure the os_name marker is AND with the other markers.\r\n\r\n* Move what we still need from requirementslib into the pipenv utils and stop vendoring it.\r\n\r\n* Remove requirementslib.\r\n\r\n* force upgrade of virtualenv for python 3.12\r\n\r\n* remove virtualenv-clone\r\n\r\n* Update vcs specifiers documentation; infer name from specific pip line formats where possible.\r\n\r\n* Provide helpful text and error for recently removed commands\r\n\r\n* Set the right log levels and verbosity to show users the errors generated by pip resolver when supplying -v flag\r\n\r\n* Fix the collection of all matching package hashes for non-pypi indexes.  Plus lesson from testing torch which contains local identifiers."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e544ee515ce6a4ea8e",
    "number": 5788,
    "body": "### The issue\r\n\r\nFixes #5786 \r\n\r\n### The fix\r\n\r\nuse the empty string when the marker is None or null.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5786",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix markers being included as None/null (#5788)\n\n* Fix markers being included as None/null\r\n\r\n* Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e644ee515ce6a4ea8f",
    "number": 5787,
    "body": "* Invoke the resolver in the same process as pipenv rather than utilizing subprocess.\r\n* Restore accidentally commented out part of pip validations.\r\n* Make a test case faster (fastapi is actually got a lot of dependencies).\r\n* Spend several hours trying  to track down why the tests have random failures in parallelism:\r\n** Completely trim down the conftest.py and remove uneeded arguments\r\n** try to ensure the directory is totally unique for the test\r\n** Realize that click's CliRunner is actually to blame and even says in the docs that its not thread safe.\r\n** Convert away from using CliRunner (mostly) for some reason the `graph --reverse` test is a special beast with unicode characters and a sub-process in a sub-process, so just use CliRunner there only.\r\n* Made a few edits to requirementslib but trying to keep that minimal as I intend to do more work there in other PRs.\r\n\r\n### The issue\r\n\r\nIn thinking more about the issue that arose with the resolver using a different python version, and modules maybe being out of scope, I began to wonder why we were kicking it off as a subprocess.   This reduces the number of files we have to write and read back in as well as eliminate the sub-process that we simply were waiting for anyway.\r\n\r\n### The checklist\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "resolver-no-subprocess",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix failing test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e644ee515ce6a4ea90",
    "number": 5784,
    "body": "### The issue\r\n\r\nFixes #5783\r\nFixes #5780\r\n\r\n### The fix\r\n\r\n* Consider extras for pypi or private index packages.\r\n* Consider file and path requirements.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5783",
    "is_a_fork": false,
    "comments": [
      "FYI -- I plan to look more into the flakey test `test_convert_deps_to_pip_star_specifier` outside of this PR."
    ],
    "commit_messages": [
      "Fix extras not being included for pypi packages in requirements command (#5784)\n\n* Fix extras not being included for pypi packages in requirements command\r\n* fix for issue with requirements command not handling file based requirements.\r\n* add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e744ee515ce6a4ea91",
    "number": 5778,
    "body": "### The issue\r\n\r\nFixes #5777 \r\n\r\n### The fix\r\n\r\nRestores `pipenv requirements --hash` output to `2023.6.26` behaviour. `2023.7.1` causes `pip` to fail to install with certain types of packages (at a guess, ones with a single hash).\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "issue-5777",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5778 from timhourigan/issue-5777\n\nKeep hashes at the end of generated requirements.txt files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e844ee515ce6a4ea92",
    "number": 5776,
    "body": "See https://github.com/scientific-python/cookie/pull/200.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5776 from henryiii/patch-2\n\nchore: ruff moved to astral-sh"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012e944ee515ce6a4ea93",
    "number": 5774,
    "body": "Makefile step to build and push all images\r\n\r\n\r\n\r\n\r\n",
    "head_branch": "all-pipenv-docker-versions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Witchcraft and sourcery (#5774)\n\nMakefile step to build and push all images"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ea44ee515ce6a4ea94",
    "number": 5773,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5772 \r\n\r\n### The fix\r\n\r\nConsider the system flag in the python which command.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5772",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5773 from pypa/issue-5772\n\nPass system flag to python which"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ea44ee515ce6a4ea95",
    "number": 5770,
    "body": "### The issue\r\n\r\nEver since upgrading to pydantic in pipenv, I've had issues running it on windows when its an editable install.   I am not convinced its not an environment issue but I searched far and wide and continued to get:\r\n\r\n```\r\n[pipenv.exceptions.InstallError]: Traceback (most recent call last):\r\n[pipenv.exceptions.InstallError]:   File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\__pip-runner__.py\", line 50, in <module>\r\n[pipenv.exceptions.InstallError]:     runpy.run_module(\"pip\", run_name=\"__main__\", alter_sys=True)\r\n[pipenv.exceptions.InstallError]:   File \"<frozen runpy>\", line 226, in run_module\r\n[pipenv.exceptions.InstallError]:   File \"<frozen runpy>\", line 98, in _run_module_code\r\n[pipenv.exceptions.InstallError]:   File \"<frozen runpy>\", line 88, in _run_code\r\n[pipenv.exceptions.InstallError]:   File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\__main__.py\", line 35, in <module>\r\n[pipenv.exceptions.InstallError]:     spec.loader.exec_module(pipenv)\r\n[pipenv.exceptions.InstallError]:   File \"<frozen importlib._bootstrap_external>\", line 940, in exec_module\r\n[pipenv.exceptions.InstallError]:   File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n[pipenv.exceptions.InstallError]:   File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\__init__.py\", line 5, in <module>\r\n[pipenv.exceptions.InstallError]:     from pipenv.cli import cli\r\n[pipenv.exceptions.InstallError]:   File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\cli\\__init__.py\", line 1, in <module>\r\n[pipenv.exceptions.InstallError]:     from .command import cli  # noqa\r\n[pipenv.exceptions.InstallError]:     ^^^^^^^^^^^^^^^^^^^^^^^^\r\n[pipenv.exceptions.InstallError]:   File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\cli\\command.py\", line 4, in <module>\r\n[pipenv.exceptions.InstallError]:     from pipenv import environments\r\n[pipenv.exceptions.InstallError]:   File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\environments.py\", line 8, in <module>\r\n[pipenv.exceptions.InstallError]:     from pipenv.utils.shell import env_to_bool, is_env_truthy, isatty\r\n[pipenv.exceptions.InstallError]:   File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\utils\\shell.py\", line 15, in <module>\r\n[pipenv.exceptions.InstallError]:     from pipenv.vendor.pythonfinder.utils import ensure_path\r\n[pipenv.exceptions.InstallError]:   File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\vendor\\pythonfinder\\__init__.py\", line 4, in <module>\r\n[pipenv.exceptions.InstallError]:     from .models import SystemPath\r\n[pipenv.exceptions.InstallError]:   File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\vendor\\pythonfinder\\models\\__init__.py\", line 3, in <module>\r\n[pipenv.exceptions.InstallError]:     from .path import SystemPath\r\n[pipenv.exceptions.InstallError]:   File \"C:\\Users\\matte\\Projects\\pipenv\\pipenv\\vendor\\pythonfinder\\models\\path.py\", line 23, in <module>\r\n[pipenv.exceptions.InstallError]:     from pipenv.vendor.pydantic import Field, root_validator\r\n[pipenv.exceptions.InstallError]:   File \"pydantic\\__init__.py\", line 2, in init pydantic.__init__\r\n[pipenv.exceptions.InstallError]:\r\n[pipenv.exceptions.InstallError]:   File \"pydantic\\dataclasses.py\", line 41, in init pydantic.dataclasses\r\n[pipenv.exceptions.InstallError]:     # +=========+=========================================+\r\n```\r\n\r\n### The fix\r\n\r\nMake sure typing_extensions from the pip vendor is available in both the resolver and the main pipenv process.\r\n\r\n",
    "head_branch": "editable-windows-no-typing-extensions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixes issue I've been having running pipenv as an editable install on windows. (#5770)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012eb44ee515ce6a4ea96",
    "number": 5769,
    "body": null,
    "head_branch": "pydantnic-1.10.10",
    "is_a_fork": false,
    "comments": [
      "No rush on this but it is good to see that v2 is shipping now...\r\n* https://github.com/pydantic/pydantic/releases",
      "@cclauss pydantic v2 will require pipenv to look deep within itself at how its bundling dependencies because of the rust binaries aspect."
    ],
    "commit_messages": [
      "Upgrade pydantic to 1.10.10 (#5769)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ec44ee515ce6a4ea97",
    "number": 5768,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes Issue #5766 \r\n\r\n### The fix\r\n\r\nEnsure we consider the dependencies listed in the pyproject.toml\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5766",
    "is_a_fork": false,
    "comments": [
      "@oz123 I am going to merge this fix now because I think it might help with one of the two failing tests I have in the other regression fix branch (maybe, if I am lucky), but I'd still like you to look it over before we cut the next release."
    ],
    "commit_messages": [
      "Merge pull request #5768 from pypa/issue-5766\n\nIssue 5766"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ed44ee515ce6a4ea98",
    "number": 5765,
    "body": "Try to fix #5764 \r\n\r\nMaybe not the best as it simply revert one line to avoid the crash. I've added a test to validate the fix\r\n\r\nI believe there might be a better fix by concatenating a \"default operator\" to `_pipfile[\"version\"]` before calling the specifier constructor. I am just not sure of the intent of the whole function and which function should add this default operator. \r\n`Requirement.parse`  function ? \r\n\r\nYou have probably more knowledge on this to see if a default operator make sense. At least, we have a base to fix\r\n\r\n@matteius Let me know\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "All right, I kinda changed my though as I realized that get_version is called multiple time and that it was already handling `==X.Y.X` \"correctly when passed as parameter.  \r\n\r\nReusing regex defined in another module to ensure we have something like an operator and defaulting to \"==\" if not. \r\n\r\n@matteius What do you think ? ",
      "https://github.com/pypa/pipenv/actions/runs/5445922252/jobs/9906282101 => macOS 3.8 is red. Trying to see how I can fix it",
      "@sebastien-coavoux Don't worry about that sporadic test failure, its unrelated to your change.",
      "@sebastien-coavoux Please add a news fragment but I think it looks good -- will add @oz123 for review.",
      "@matteius you mean update Changelog.rst right?",
      "> @matteius you mean update Changelog.rst right?\r\n\r\nNo, that is generated from news fragments which get deleted from the news file.   Go ahead and create a file in news `5765.bugfix.rst` and with a brief description of the fix.",
      "I ran `towncrier create 5765.bugfix -c 'TEXT'` to generate the file above, I think that's what you expected "
    ],
    "commit_messages": [
      "Merge pull request #5765 from sebastien-coavoux/main\n\nEnsure version contains an operator when defined"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ee44ee515ce6a4ea99",
    "number": 5762,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\nUpgrade pre-commit to run the current version of `ruff` and add pyupgrade and flynt linting rules.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterward.\r\n-->\r\n",
    "head_branch": "pyupgrade",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5762 from cclauss/pyupgrade\n\nci: ruff --select=FLY,UP --target-version=py37 --fix ."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ef44ee515ce6a4ea9a",
    "number": 5761,
    "body": "Fixes #5746 \r\n\r\n\r\n### The issue\r\n\r\nWhen we introduced the pep508 package index url checks for determining package hashes, it broke users that rely on client side certificates when locking.\r\n\r\n### The fix\r\n\r\nConsider how the users were supplying client side certs with `PIP_CLIENT_CERT` and pass it to the requests session as well.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5746-patch",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5761 from pypa/issue-5746-patch\n\nConsider the PIP_CLIENT_CERT value when creating the requests session."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ef44ee515ce6a4ea9b",
    "number": 5760,
    "body": "It was discovered that requirementslib uses the sys.executable python rather than the pipenv environment python.  Which as @oz123 reminded me should be the same, but due to some weird code paths, it wasn't always the same in my testing when the resolver got invoked as subprocess.\r\n\r\n### The issue\r\n\r\nFixes #5753 \r\n\r\n### The fix\r\n\r\nI don't love the use of the environment variable, but I figured out this was the original intention of how the pipenv <--> requirements lib interface and at some point it got hard-coded to sys.executable in the resolver code which was getting invoked with a different python version at points.\r\n\r\nThis fixes the problem by ensuring that the correct python of the pipenv environment is being used.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-5753-patch",
    "is_a_fork": false,
    "comments": [
      "Thanks massively.  This fixed the problem for me."
    ],
    "commit_messages": [
      "Patch for setup.py egg_info issue (#5760)\n\n* Set the PIP_PYTHON_PATH to be the environment python to patch issue where requirementslib is using system python (until better patch can be made).\r\n\r\n* Use the correct python for the environment\r\n\r\n* PR feedback\r\n\r\n* add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f044ee515ce6a4ea9c",
    "number": 5759,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\nRelated to issue #5753\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "issue-5753",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f144ee515ce6a4ea9d",
    "number": 5757,
    "body": "Fixes #5755 \r\n\r\n### The issue\r\n\r\nThe requirements command should have it all it needs from the lock file, but its re-using a requirementslib method that installs the requirements, which was a regression for the requirements command when we released requirementslib==3.0.0\r\n\r\n### The fix\r\n\r\nProvide our own method and relocate the requirements command logic to the routines module.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5755",
    "is_a_fork": false,
    "comments": [
      "In the test `Pipfile.lock` in #5755, this generates the following:\r\n\r\n```\r\n-i https://pypi.org/simple\r\ncffi==1.15.1\r\ncryptography==41.0.1; python_version >= '3.7'\r\npycparser==2.21\r\n\"pyjwt[crypto] @ --editable git+https://git@github.com/jpadilla/pyjwt.git@7665aa625506a11bae50b56d3e04413a3dc6fdf8\"\r\n```\r\n\r\nDefinitely no network calls, but this fails to install with:\r\n\r\n```\r\n➜  pipenv_test pip --version\r\npip 23.0.1 from /xxx/mgmarino/.pyenv/versions/3.9.16/lib/python3.9/site-packages/pip (python 3.9)\r\n➜  pipenv_test pip install -r requirements.txt\r\nERROR: Invalid requirement: \"pyjwt[crypto] @ --editable git+https://git@github.com/jpadilla/pyjwt.git@7665aa625506a11bae50b56d3e04413a3dc6fdf8\"\r\nCould not split options: --editable git+https://git@github.com/jpadilla/pyjwt.git@7665aa625506a11bae50b56d3e04413a3dc6fdf8\"\r\n```",
      "@mgmarino Just pushed a fix for that -- thanks for catching it.",
      "Ok, two more comments:\r\n\r\n- the enclosing `\"\"` are causing problems. i.e. instead of:\r\n\r\n```\r\n\"pyjwt[crypto] @ git+https://git@github.com/jpadilla/pyjwt.git@7665aa625506a11bae50b56d3e04413a3dc6fdf8\"\r\n```\r\nneeds to be:\r\n\r\n```\r\npyjwt[crypto] @ git+https://git@github.com/jpadilla/pyjwt.git@7665aa625506a11bae50b56d3e04413a3dc6fdf8\r\n```\r\n.\r\n\r\n- Also, this doesn't seem to respect the scheme, i.e. if `ssh://` is listed it still gets exported as `https://`.  This is important for us because we have ssh authentication to github.  Example:\r\n\r\nIn `Pipfile.lock`:\r\n\r\n```\r\n        \"our-module\": {\r\n            \"editable\": true,\r\n            \"extras\": [\r\n                \"extra_one\",\r\n                \"extra_two\"\r\n            ],\r\n            \"git\": \"ssh://git@github.com/company/our-module.git\",\r\n            \"ref\": \"818b13269eac0753d0029ffe496f3a6c08614bf0\"\r\n        },\r\n```\r\n\r\nis exported as \r\n\r\n```\r\nour-module[extra_one,extra_two] @ git+https://git@github.com/company/our-module.git@818b13269eac0753d0029ffe496f3a6c08614bf0\r\n```\r\n\r\ninstead of:\r\n\r\n```\r\nour-module[extra_one,extra_two] @ git+ssh://git@github.com/company/our-module.git@818b13269eac0753d0029ffe496f3a6c08614bf0\r\n```",
      "Actually I should probably fix those tests and not have the space after the semi-colon, since that's technically more correct.  We added the space a while back because of some weird side effect with the test framework hypothesis and upgrading pyparsing in requirementslib that was somehow solved by adding the space, but since this command is isolated, we should be more correct and fix the test assumptions.",
      "Thanks, @matteius!"
    ],
    "commit_messages": [
      "requirements command improvements, fixes issue 5755. (#5757)\n\n* requirements command improvements, fixes issue 5755.\r\n\r\n* editable is not a pip arg\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Michael Marino <mmarino@gmail.com>\r\n\r\n* Update pipenv/routines/requirements.py\r\n\r\nCo-authored-by: Michael Marino <mmarino@gmail.com>\r\n\r\n* fix test\r\n\r\n* add news fragment.\r\n\r\n---------\r\n\r\nCo-authored-by: Michael Marino <mmarino@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f244ee515ce6a4ea9e",
    "number": 5754,
    "body": "Publish docker images for CICD.\r\n\r\nAdded a subtle note in the docs. The changelog should definitely explain more how to use these images.\r\nSee news snippet that will follow.\r\n",
    "head_branch": "docker-images",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5754 from pypa/docker-images\n\nAdd docker build, update docs for using docker images"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f344ee515ce6a4ea9f",
    "number": 5750,
    "body": null,
    "head_branch": "vendor-bump-dparse",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5750 from pypa/vendor-bump-dparse\n\nVendor: bump dparse to 0.6.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f344ee515ce6a4eaa0",
    "number": 5749,
    "body": "### The issue\r\n\r\nhttps://github.com/pypa/pipenv/issues/5748\r\n\r\n### The fix\r\n\r\nAdds missing tab due to a typo when docs were refactored\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "nullSoup-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix for issue #5748 (#5749)\n\n* Add missing tab from Spinx autoclass directive\r\n\r\n* Add news description of change"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f444ee515ce6a4eaa1",
    "number": 5742,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nShows the differences between prototype branch and what got released in requirementslib 3.0.0 -- if they are all trivial should be safe to merge.\r\n\r\n",
    "head_branch": "reqlib-3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "corrrect re-written imports that were wrong."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f544ee515ce6a4eaa2",
    "number": 5741,
    "body": "Following the huge refactor. Opening this PR to see that all test work and that vendoring is successful.",
    "head_branch": "bump-reqlib-3.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f644ee515ce6a4eaa3",
    "number": 5737,
    "body": "### The issue\r\n\r\nAt some point pip changed behaviors of how it searches among the indexes to not always prefer pypi -- this difference caused inconsistency with the index restricted packages expectations.\r\n\r\nFixes #5736 \r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "bugfix-restricted-package-indexes",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news fragments."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f744ee515ce6a4eaa4",
    "number": 5733,
    "body": "Improve the keyring docs based on what I learned today.",
    "head_branch": "keyring-docs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improve keyring docs. (#5733)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f844ee515ce6a4eaa5",
    "number": 5732,
    "body": "### The issue\r\n\r\nFixes #5719 \r\nFixes #4706 \r\n\r\n### The fix\r\n\r\nWhen we added back the hack to the sys.path it broke the google keyring support, I verified this -- because the appropriate requests package module cannot be found (strangely).   My goal has bene to eliminate these path patchces for a while and there were a couple reasons I had to add them back recent which I think have since been resolved:\r\n1.) pydantic was getting an import error on typing_extensions, but the latest vendor'd pydantic seems to have cleaner imports which got re-written to use the right vendor path.\r\n2.) pipdeptree prior version was getting an error on `pipenv graph` but it seems like the new version of `pipdeptrees` may be immune.\r\n\r\nI verified that removing this path allows the google keyring stuff to work again.\r\n\r\nIt still requires that keyring and keyrings.google-artifactregistry-auth be either installed in virtualenv or the virtualenv has access to the system-site-packages.\r\n\r\nAdditionally, this change allows the sync command to use the `--site-packages` flag as well, for which I know there is an issue request in our backlog for this.   You shouldn't have to relock to create a virtualenv that uses that flag.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-5719",
    "is_a_fork": false,
    "comments": [
      "      @matteius this just needs a news snippet."
    ],
    "commit_messages": [
      "Remove the sys path hacks (again) to fix edge cases with keyring (#5732)\n\n* Remove the sys path hacks (again) to see where things break.\r\n* Add site packages to sync"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f844ee515ce6a4eaa6",
    "number": 5731,
    "body": "### The issue\r\n\r\nFixes #5177",
    "head_branch": "issue-5177",
    "is_a_fork": false,
    "comments": [
      "This doesn't really fix the issue, it simply hides it from the README... Also, contrary to what was mentioned in <https://github.com/pypa/pipenv/issues/5177#issuecomment-1384095562>, [Debian currently ships the latest pipenv release](https://packages.debian.org/testing/pipenv). Should this patch be reverted now, since things have changed?"
    ],
    "commit_messages": [
      "Remove ubuntu apt install from list and some other small doc review. (#5731)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012f944ee515ce6a4eaa7",
    "number": 5730,
    "body": "Drop the --keep-outdated flag and --selective-upgrade flags that have been deprecated in favor of update/upgrade commands.\r\n\r\nNote:\r\nLet's plan on doing this at the same time we bring in the new requirementslib 3.x series.   \r\nI want the next release before that to focus on bug fixes first.\r\n\r\n### The issue & Fix\r\n\r\nThese flags were deprecated and more correct resolution phases were added to the update and upgrade command.\r\n\r\nUse instead: \r\n\r\n* update -- calls upgrade under the hood, upgrades the relevant packages in the lock file and installs them.\r\n* upgrade -- Only upgrade the relevant packages in the lock file (no install phase).\r\n\r\n\r\n",
    "head_branch": "drop-deprecated-flags",
    "is_a_fork": false,
    "comments": [
      "For those googling on what to do now that `--keep-outdated` is deprecated:\r\n\r\n> The flag --keep-outdated has been deprecated for removal...Consider using the new `pipenv upgrade` command to selectively upgrade packages.\r\n\r\n[source](https://github.com/pypa/pipenv/blob/8c8d3d1f8e0acee6b22a09f9ae9d80b093d4e7a1/pipenv/cli/options.py#L160)"
    ],
    "commit_messages": [
      "Merge pull request #5730 from pypa/drop-deprecated-flags\n\nDrop the --keep-outdated flag and --selective-upgrade flags"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012fa44ee515ce6a4eaa8",
    "number": 5729,
    "body": null,
    "head_branch": "latest-pydantic",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Upgrade pydantic to v1.10.9 (#5729)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012fb44ee515ce6a4eaa9",
    "number": 5728,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5724 \r\n\r\n### The fix\r\n\r\nThe improvement to the pep 508 URLs for determining appropriate hash did not consider the verify_ssl requirements.   Also, it seemed odd to me that even though pipenv is multi-processing we had a global variable for the requests session state.   This made it hard to have different requests (some that verify ssl and some that do not).  Since the primary point of re-use of the requests session is in the Resolver, I made a patch there to have a separate requests session per source.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "5724-fix",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Safer usage requests sessions and account for the verify_ssl requirements of each source. (#5728)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012fc44ee515ce6a4eaaa",
    "number": 5721,
    "body": "Fix formatting in docs, mainly links and codeblocks that were not adjusted in the rst->md transition, plus remove some duplication in the install section.\r\n\r\nFeel free to change anything you don't like.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix formatting in /docs (#5721)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012fd44ee515ce6a4eaab",
    "number": 5720,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5652 \r\n\r\n### The fix\r\n\r\nUpgrades to the new release of `pipdeptree`\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pipdeptree-2.8.0",
    "is_a_fork": false,
    "comments": [
      "@matteius tests are failing, and also we are using deprecated functionality:\r\n```\r\nests/integration/test_cli.py:137: AssertionError\r\n----------------------------- Captured stdout call -----------------------------\r\n$ pipenv graph --reverse --json\r\n\r\nCommand failed...\r\n----------------------------- Captured stderr call -----------------------------\r\nWarning: Using both --reverse and --json together is not supported. Please select one of the two options.\r\n```\r\n"
    ],
    "commit_messages": [
      "Update pipdeptree which solves issue 5652 (#5720)\n\n* Update pipdeptree which solves issue 5652\r\n\r\n* add news fragment.\r\n\r\n* Fix broken test as expected output has changed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012fd44ee515ce6a4eaac",
    "number": 5713,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5709\r\n\r\n### The fix\r\n\r\nAdds equality method to the base PathEntry\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pythonfinder-2.0.4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Pythonfinder 2.0.4 (#5713)\n\n* Update pythonfinder to 2.0.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012fe44ee515ce6a4eaad",
    "number": 5712,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #4588 \r\nFixes #5714 \r\n\r\n### The fix\r\n\r\nImprove the code paths for:\r\n* Matching an existing path\r\n* using the line as a version specifier (improved regex)\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-4588",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix for Issue 4588 (path to python improvements) (#5712)\n\n* Improve regex for python versions to handle hidden paths, and handle relative paths to python better as well.\r\n\r\n* Check CI\r\n\r\n* Attempt to remove make_posix call for windows\r\n\r\n* Support pre-releases better.\r\n\r\n* Vendor in latest pydantic as well and tempoarily patch the typing extensions with latest manually (next pip vendoring will bring it in)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662012ff44ee515ce6a4eaae",
    "number": 5706,
    "body": "Bumps [requests](https://github.com/psf/requests) from 2.28.2 to 2.31.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/releases\">requests's releases</a>.</em></p>\n<blockquote>\n<h2>v2.31.0</h2>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>v2.30.0</h2>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>v2.29.0</h2>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/blob/main/HISTORY.md\">requests's changelog</a>.</em></p>\n<blockquote>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4\"><code>147c851</code></a> v2.31.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5\"><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>\n<li><a href=\"https://github.com/psf/requests/commit/302225334678490ec66b3614a9dddb8a02c5f4fe\"><code>3022253</code></a> test on pypy 3.8 and pypy 3.9 on windows and macos (<a href=\"https://redirect.github.com/psf/requests/issues/6424\">#6424</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/b639e66c816514e40604d46f0088fbceec1a5149\"><code>b639e66</code></a> test on py3.12 (<a href=\"https://redirect.github.com/psf/requests/issues/6448\">#6448</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/d3d504436ef0c2ac7ec8af13738b04dcc8c694be\"><code>d3d5044</code></a> Fixed a small typo (<a href=\"https://redirect.github.com/psf/requests/issues/6452\">#6452</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/2ad18e0e10e7d7ecd5384c378f25ec8821a10a29\"><code>2ad18e0</code></a> v2.30.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773\"><code>f2629e9</code></a> Remove strict parameter (<a href=\"https://redirect.github.com/psf/requests/issues/6434\">#6434</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8\"><code>87d63de</code></a> v2.29.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc\"><code>51716c4</code></a> enable the warnings plugin (<a href=\"https://redirect.github.com/psf/requests/issues/6416\">#6416</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71\"><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=\"https://redirect.github.com/psf/requests/issues/6418\">#6418</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/requests/compare/v2.28.2...v2.31.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/requests-2.31.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump requests from 2.28.2 to 2.31.0 in /docs\n\nBumps [requests](https://github.com/psf/requests) from 2.28.2 to 2.31.0.\n- [Release notes](https://github.com/psf/requests/releases)\n- [Changelog](https://github.com/psf/requests/blob/main/HISTORY.md)\n- [Commits](https://github.com/psf/requests/compare/v2.28.2...v2.31.0)\n\n---\nupdated-dependencies:\n- dependency-name: requests\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130044ee515ce6a4eaaf",
    "number": 5705,
    "body": "[//]: # (dependabot-start)\n⚠️  **Dependabot is rebasing this PR** ⚠️ \n\nRebasing might not happen immediately, so don't worry if this takes some time.\n\nNote: if you make any changes to this PR yourself, they will take precedence over the rebase.\n\n---\n\n[//]: # (dependabot-end)\n\nBumps [requests](https://github.com/psf/requests) from 2.28.2 to 2.31.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/releases\">requests's releases</a>.</em></p>\n<blockquote>\n<h2>v2.31.0</h2>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>v2.30.0</h2>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>v2.29.0</h2>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/blob/main/HISTORY.md\">requests's changelog</a>.</em></p>\n<blockquote>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4\"><code>147c851</code></a> v2.31.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5\"><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>\n<li><a href=\"https://github.com/psf/requests/commit/302225334678490ec66b3614a9dddb8a02c5f4fe\"><code>3022253</code></a> test on pypy 3.8 and pypy 3.9 on windows and macos (<a href=\"https://redirect.github.com/psf/requests/issues/6424\">#6424</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/b639e66c816514e40604d46f0088fbceec1a5149\"><code>b639e66</code></a> test on py3.12 (<a href=\"https://redirect.github.com/psf/requests/issues/6448\">#6448</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/d3d504436ef0c2ac7ec8af13738b04dcc8c694be\"><code>d3d5044</code></a> Fixed a small typo (<a href=\"https://redirect.github.com/psf/requests/issues/6452\">#6452</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/2ad18e0e10e7d7ecd5384c378f25ec8821a10a29\"><code>2ad18e0</code></a> v2.30.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773\"><code>f2629e9</code></a> Remove strict parameter (<a href=\"https://redirect.github.com/psf/requests/issues/6434\">#6434</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8\"><code>87d63de</code></a> v2.29.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc\"><code>51716c4</code></a> enable the warnings plugin (<a href=\"https://redirect.github.com/psf/requests/issues/6416\">#6416</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71\"><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=\"https://redirect.github.com/psf/requests/issues/6418\">#6418</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/requests/compare/v2.28.2...v2.31.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/requests-2.31.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump requests from 2.28.2 to 2.31.0 in /docs\n\nBumps [requests](https://github.com/psf/requests) from 2.28.2 to 2.31.0.\n- [Release notes](https://github.com/psf/requests/releases)\n- [Changelog](https://github.com/psf/requests/blob/main/HISTORY.md)\n- [Commits](https://github.com/psf/requests/compare/v2.28.2...v2.31.0)\n\n---\nupdated-dependencies:\n- dependency-name: requests\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130144ee515ce6a4eab0",
    "number": 5704,
    "body": "Bumps [requests](https://github.com/psf/requests) from 2.18.4 to 2.31.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/releases\">requests's releases</a>.</em></p>\n<blockquote>\n<h2>v2.31.0</h2>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>v2.30.0</h2>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>v2.29.0</h2>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/blob/main/HISTORY.md\">requests's changelog</a>.</em></p>\n<blockquote>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n<h2>2.28.2 (2023-01-12)</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4\"><code>147c851</code></a> v2.31.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5\"><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>\n<li><a href=\"https://github.com/psf/requests/commit/302225334678490ec66b3614a9dddb8a02c5f4fe\"><code>3022253</code></a> test on pypy 3.8 and pypy 3.9 on windows and macos (<a href=\"https://redirect.github.com/psf/requests/issues/6424\">#6424</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/b639e66c816514e40604d46f0088fbceec1a5149\"><code>b639e66</code></a> test on py3.12 (<a href=\"https://redirect.github.com/psf/requests/issues/6448\">#6448</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/d3d504436ef0c2ac7ec8af13738b04dcc8c694be\"><code>d3d5044</code></a> Fixed a small typo (<a href=\"https://redirect.github.com/psf/requests/issues/6452\">#6452</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/2ad18e0e10e7d7ecd5384c378f25ec8821a10a29\"><code>2ad18e0</code></a> v2.30.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773\"><code>f2629e9</code></a> Remove strict parameter (<a href=\"https://redirect.github.com/psf/requests/issues/6434\">#6434</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8\"><code>87d63de</code></a> v2.29.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc\"><code>51716c4</code></a> enable the warnings plugin (<a href=\"https://redirect.github.com/psf/requests/issues/6416\">#6416</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71\"><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=\"https://redirect.github.com/psf/requests/issues/6418\">#6418</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/requests/compare/v2.18.4...v2.31.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.18.4&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/examples/requests-2.31.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump requests from 2.18.4 to 2.31.0 in /examples (#5704)\n\nBumps [requests](https://github.com/psf/requests) from 2.18.4 to 2.31.0.\r\n- [Release notes](https://github.com/psf/requests/releases)\r\n- [Changelog](https://github.com/psf/requests/blob/main/HISTORY.md)\r\n- [Commits](https://github.com/psf/requests/compare/v2.18.4...v2.31.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: requests\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130144ee515ce6a4eab1",
    "number": 5703,
    "body": "Bumps [requests](https://github.com/psf/requests) from 2.18.4 to 2.31.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/releases\">requests's releases</a>.</em></p>\n<blockquote>\n<h2>v2.31.0</h2>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>v2.30.0</h2>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>v2.29.0</h2>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/blob/main/HISTORY.md\">requests's changelog</a>.</em></p>\n<blockquote>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n<h2>2.28.2 (2023-01-12)</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4\"><code>147c851</code></a> v2.31.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5\"><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>\n<li><a href=\"https://github.com/psf/requests/commit/302225334678490ec66b3614a9dddb8a02c5f4fe\"><code>3022253</code></a> test on pypy 3.8 and pypy 3.9 on windows and macos (<a href=\"https://redirect.github.com/psf/requests/issues/6424\">#6424</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/b639e66c816514e40604d46f0088fbceec1a5149\"><code>b639e66</code></a> test on py3.12 (<a href=\"https://redirect.github.com/psf/requests/issues/6448\">#6448</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/d3d504436ef0c2ac7ec8af13738b04dcc8c694be\"><code>d3d5044</code></a> Fixed a small typo (<a href=\"https://redirect.github.com/psf/requests/issues/6452\">#6452</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/2ad18e0e10e7d7ecd5384c378f25ec8821a10a29\"><code>2ad18e0</code></a> v2.30.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773\"><code>f2629e9</code></a> Remove strict parameter (<a href=\"https://redirect.github.com/psf/requests/issues/6434\">#6434</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8\"><code>87d63de</code></a> v2.29.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc\"><code>51716c4</code></a> enable the warnings plugin (<a href=\"https://redirect.github.com/psf/requests/issues/6416\">#6416</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71\"><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=\"https://redirect.github.com/psf/requests/issues/6418\">#6418</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/requests/compare/v2.18.4...v2.31.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.18.4&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/tests/test_artifacts/requests-2.31.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump requests from 2.18.4 to 2.31.0 in /tests/test_artifacts\n\nBumps [requests](https://github.com/psf/requests) from 2.18.4 to 2.31.0.\n- [Release notes](https://github.com/psf/requests/releases)\n- [Changelog](https://github.com/psf/requests/blob/main/HISTORY.md)\n- [Commits](https://github.com/psf/requests/compare/v2.18.4...v2.31.0)\n\n---\nupdated-dependencies:\n- dependency-name: requests\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130244ee515ce6a4eab2",
    "number": 5702,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "may-combined-optimizations",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130344ee515ce6a4eab3",
    "number": 5701,
    "body": "### The issue\r\n\r\nPEP 503 https://peps.python.org/pep-0503/\r\n\r\n> The URL SHOULD include a hash in the form of a URL fragment with the following syntax: #<hashname>=<hashvalue>, where <hashname> is the lowercase name of the hash function (such as sha256) and <hashvalue> is the hex encoded digest.\r\n\r\n### The fix\r\n\r\nThis should enable non pypi.org sources that are following PEP 503 to be able to leverage those package hashes without downloading the package.   This may also lead to a wider inclusion of package hashes in the lock file.\r\n\r\nReplacement PR for: https://github.com/pypa/pipenv/pull/5688\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "pep-503-hashed-urls",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130444ee515ce6a4eab4",
    "number": 5700,
    "body": "### The issue\r\n\r\nIntended as a performance optimization and to reduce code complexity -- there should not be a reason to pre `pip install` the new packages before resolving and batch installing them.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "optimize-install",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "This pre pip install path should no longer be neccessary when adding packages. (#5700)\n\n* This pre pip install path should no longer be neccessary when adding packages.\r\n\r\n* Fix test -- not sure how this was ever correct.\r\n\r\n* Address test edge case"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130544ee515ce6a4eab5",
    "number": 5699,
    "body": null,
    "head_branch": "vendor-drop-cerberus",
    "is_a_fork": false,
    "comments": [
      "I added 2 more commits, hence the requerst to review again."
    ],
    "commit_messages": [
      "Drop cerberus, it seems it's not used anywhere (#5699)\n\n* Drop cerberus, it seems it's not used anywhere."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130644ee515ce6a4eab6",
    "number": 5698,
    "body": "Now that pythonfinder is on pydantic and requirementslib is out for review -- lets check on how pydantic 2 is looking ...\r\n\r\n",
    "head_branch": "try-pydantic2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130644ee515ce6a4eab7",
    "number": 5697,
    "body": "### The issue\r\n\r\nVendor in pythonfinder 2.0.3 to fix regression finding a specific python version should it not be installed.\r\n\r\nFrom: https://github.com/sarugaku/pythonfinder/pull/139/files",
    "head_branch": "fix-pyenv-version-not-installed-edge-case",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix pyenv version not installed edge case (#5697)\n\n* Bump pythonfinder to 2.0.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130744ee515ce6a4eab8",
    "number": 5695,
    "body": "### The issue\r\n\r\nWindows was having issues creating new virtualenvs after this patch:  https://github.com/pypa/pipenv/pull/5686\r\n\r\nThere were two types of issues:\r\n* sometimes the windows PATH may come from an env var in gitbash shell as \\ instead of /\r\n* It was sometimes double appending the drive and creating a new directory structure for the virtualenv home.\r\n\r\n### The fix\r\n\r\nFix PATH edge case in `pythonfinder==2.0.2`\r\n\r\nDeclining on a news fragment since the issue was never published in a pipenv release.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pythonfinder-edgecase",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Handle windows paths better and utilize this utility for creating the virtualenv path. (#5695)\n\n* Fix edge case with windows git bash and environment variables having backslash\r\n* Vendor in pythonfinder==2.0.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130844ee515ce6a4eab9",
    "number": 5693,
    "body": "### The issue\r\n\r\nFixes Issue #5692 \r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5692-upgrade-indexes",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Issue 5692 Consider --index argument in update and upgrade commands (#5693)\n\n* Consider index argument in update and upgrade commands."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130944ee515ce6a4eaba",
    "number": 5689,
    "body": "This PR will ultimately get closed, but I wanted to see how the test runner does with the combined optimizations of the new requirementslib along with the pep503 index hash optimization.",
    "head_branch": "reqlib-plus-pep503",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130a44ee515ce6a4eabb",
    "number": 5688,
    "body": "### The issue\r\n\r\nPEP 503 https://peps.python.org/pep-0503/\r\n\r\n> The URL SHOULD include a hash in the form of a URL fragment with the following syntax: #<hashname>=<hashvalue>, where <hashname> is the lowercase name of the hash function (such as sha256) and <hashvalue> is the hex encoded digest.\r\n\r\n### The fix\r\n\r\nThis should enable non pypi.org sources that are following PEP 503 to be able to leverage those package hashes without downloading the package.   This may also lead to a wider inclusion of package hashes in the lock file.\r\n\r\nNote:  This branch is based on my fix-pyenv-asdf branch because I wanted to test it locally, and therefore should not be merged until that work is wrapped up first.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "explore-hashed_urls",
    "is_a_fork": false,
    "comments": [
      "replaced by:  https://github.com/pypa/pipenv/pull/5701"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130a44ee515ce6a4eabc",
    "number": 5687,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130b44ee515ce6a4eabd",
    "number": 5686,
    "body": "Vendor in `pythonfinder==2.0.1`\r\n\r\nBackstory:\r\n\r\nI discovered that pyenv was broken with the new pythonfinder.   It was trying to install the system python and alerting that it was different than what was called out in the Pipfile.  Despite pyenv being installed, it did nothing to try and use those versions.\r\n\r\nThis also cleans up some other edge cases around pyenv:\r\n* Ensures the shims directories will not be included (there was logic for this in there, but the paths weren't matching)\r\n* Ensures the version directories are included on the PATH\r\n",
    "head_branch": "pythonfinder-fix-pyenv",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix pyenv as it is broken on new pythonfinder version. (#5686)\n\n* Fix pyenv as it is broken on new pythonfinder version.\r\n\r\n* Verify pyenv works on linux.\r\n\r\n* restore this part\r\n\r\n* Tackle asdf as well.\r\n\r\n* Vendor in pythonfinder 2.0.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130c44ee515ce6a4eabe",
    "number": 5684,
    "body": "This addresses two things:\r\n\r\n1.) Removes the duplicate of typing_extensions\r\n2.) Ensures our version of it is on the PATH for pydantic.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "fix-typing_extensions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix typing extensions (#5684)\n\n* Fix typing_extensions which is already provided by pip was not being imported correctly.\r\n\r\n* Add the directory with typing_extensions back to the PATH"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130d44ee515ce6a4eabf",
    "number": 5681,
    "body": "### The issue\r\n\r\n#5680\r\n\r\n`No action taken to avoid nested environments` can be read either way.\r\n\r\n### The fix\r\n\r\nDescribes what action was not taken.\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "nested-shell-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Reword active shell warning to reduce ambiguity (#5681)\n\n* Reword active shell warning to reduce ambiguity\r\n\r\n* Add change description to news/5681.trivial.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130e44ee515ce6a4eac0",
    "number": 5679,
    "body": null,
    "head_branch": "reqlib-pydantic-take3",
    "is_a_fork": false,
    "comments": [
      "@matteius look like all the tests passed and the PR is ready."
    ],
    "commit_messages": [
      "Bump requirements lib to v3.0.0 (#5679)\n\n* Port over latest requirementslib sample changes to pydantic.\r\n\r\n* fix import\r\n\r\n* port over more changes from other attempt.\r\n\r\n* port over more changes from other attempt.\r\n\r\n* Iterate\r\n\r\n* fix some tests\r\n\r\n* fix markers tests\r\n\r\n* Spot check changes back towards what was passing in pipenv prior.\r\n\r\n* Parity with latest requirementslib changes\r\n\r\n* latest changes that work for both pipenv and requirementslib.\r\n\r\n* Hack for cross-test contamination looking for version of six that isn't in the private pypi.\r\n\r\n* Differences between reqlib3 and prototype branch\r\n\r\n* corrrect re-written imports that were wrong."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620130f44ee515ce6a4eac1",
    "number": 5678,
    "body": "While upgrading the package for gentoo I realized we can drop our copy\r\nof toml.\r\nIt is quite a change, but hopefully it works.\r\n\r\nAlso, I stepped around the normal process and patched a vendored package directly (dparse).\r\nThis will break if someone reruns the vendor script. But since it's just us who take care of it, we\r\ncan live with it for now. [I have submitted a request upstream for fixing this](https://github.com/pyupio/dparse/issues/65). Let's hope they act soon.\r\n",
    "head_branch": "drop-vendor-toml",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news snippet."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131044ee515ce6a4eac2",
    "number": 5677,
    "body": "Upgrade pythonfinder to 2.0.0 which also brings in pydantic.",
    "head_branch": "pythonfinder-2.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Upgrade pythonfinder to 2.0.0 which brings in pydantic (#5677)\n\n* Upgrade pyhonfinder to 2.0.0 which brings in pydantic\r\n\r\n* Add news fragment.\r\n\r\n* Add typing extensions."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131044ee515ce6a4eac3",
    "number": 5672,
    "body": "Thanks to @oz123 requirementslib==2.3.0 drops usage of vistir.\r\n\r\nThis PR brings pipenv up todate with requirementslib==2.3.0.  It does also address the remaining usage of vistir which I was going to defer to @oz123, but I needed to get these changes in place to update my refactor of requirementslib PR (targeting 3.0.0) and so he can help review this instead :-D\r\n\r\nFor some reason when I vendor'd this in, I got some random import errors and failures in building so I also ripped the bandaid off that was modifying the sysconfig for the import paths -- we finally have correctly imported everything so those patches/hacks are no longer needed.\r\n\r\n### The checklist\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "requirementslib-2.3.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Requirementslib==2.3.0 (#5672)\n\n* Bump requirementslib that drops vistir.\r\n\r\n* Add news fragment\r\n\r\n* Add missing file\r\n\r\n* Remove vistir entirely\r\n\r\n* fix circular import\r\n\r\n* revert issue that may be causing circular import issue\r\n\r\n* Hackaround current pythonfinder version importlib usage.\r\n\r\n* PR Feedback\r\n\r\n* fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131144ee515ce6a4eac4",
    "number": 5671,
    "body": "### The issue\r\n\r\nLatest pip updates and fixes.\r\n\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pip.23.1.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Vendor in Pip.23.1.2 (#5671)\n\n* Vendor in latest pip 23.1.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131244ee515ce6a4eac5",
    "number": 5670,
    "body": "### The issue\r\n\r\n* Requirementslib is a nightmare library whose maintenance and code paths are very hard to detangle.\r\n* It is based on an old attrs library which was a precursor to dataclasses, but there are better alternatives.\r\n* The type annotations across pipenv are a mess, and that is true of its vendor'd libraries as well.   Yet there is zero type enforcement, so who knows if the annotations are meaningful, and they follow the style of type hints in comments before it became accepted into the method signatures.\r\n* Did I mention Requirementslib is a nightmare library whose maintenance and code paths are very hard to detangle?  There are circular references with how the dataclasses were designed or manifested, and due to a long history of patching the library, there are many inefficiencies (ie: setup being run multiple times)  \r\n\r\n### The fix\r\n\r\nI am a big fan of pydantic's flavor of Python dataclasses https://docs.pydantic.dev/ and have been using them in other projects with great success.  Pydantic is also the dataclass library that powers FastAPI, and it is fast efficient and has a lot of bells and whistles for as light as the code base it.  So I took a shot at using it here as well and I have 40 hours into detangling larges parts of requirementslib in addition to converting it to pydantic and speeding up its execution.   I believe I have fixed some edge cases as well such as relative \".\" paths.\r\n\r\nAfter chatting with @oz123 we have the goal of converting pythonfinder and plette to also use the pydantic dataclasses -- doing so should further help detangle requirementslib in followup future refactors as well since, it interacts with plette and the dictionary-like view its based on has some limiting factors.\r\n\r\nThis PR also adds the pythonfinder refactor to pydantic and totally drops the attrs libraries from pipenv.\r\n\r\n### Next Steps\r\n* [ ] Get peer review of this PR and factor in any feedback (where possible) -- requirementslib is still a bit delicate to modify even after this work, but its the start of ripping the bandaids off.\r\n* [ ] Once sufficient buy in, port the changes over from this PR to requirementslib and Pythonfinder; release new versions.\r\n* [ ] Vendor in the new versions to a PR and ship a faster more modern version of pipenv.\r\n\r\n### The checklist\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pythonfinder-pydantic",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131344ee515ce6a4eac6",
    "number": 5669,
    "body": "### The issue\r\n\r\nMy understanding is Foresight is shutting down in May, and we will no longer be able to report telemetry, so we may as well remove it from our builds.\r\n\r\n",
    "head_branch": "remove-foresight",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove foresight (#5669)\n\n* Revert \"Add Foresight status badge to README\"\r\n\r\nThis reverts commit 57bb1e5ccb32fed16ad12f5fa3ac86165f043bef.\r\n\r\n* resolve conflict"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131444ee515ce6a4eac7",
    "number": 5668,
    "body": "### The issue\r\nThere is a typo in the command part of the document. Since this is a very tiny change, I didn't file an issue or add news.\r\n\r\n### The fix\r\n\r\nFixed the typo.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "fix/typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5668 from TomeHirata/fix/typo\n\nFix a typo in the document"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131544ee515ce6a4eac8",
    "number": 5667,
    "body": "xonsh supports virtualenv with a plugin. So if pipenv creates a virtualenv in xonsh, it would have a bin/activate.xsh. This change uses that script in 'pipenv shell'.",
    "head_branch": "support-xonsh",
    "is_a_fork": true,
    "comments": [
      "faf7d52ce6c8ef7b81ff539d068a1fcabcba0a37"
    ],
    "commit_messages": [
      "pipenv shell: support xonsh (#5667)\n\nxonsh supports virtualenv with a plugin. So if pipenv creates a virtualenv in xonsh, it would have a bin/activate.xsh. This change uses that script in 'pipenv shell'."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131644ee515ce6a4eac9",
    "number": 5664,
    "body": "### The issue\r\n\r\n* Requirementslib is a nightmare library whose maintenance and code paths are very hard to detangle.\r\n* It is based on an old attrs library which was a precursor to dataclasses, but there are better alternatives.\r\n* The type annotations across pipenv are a mess, and that is true of its vendor'd libraries as well.   Yet there is zero type enforcement, so who knows if the annotations are meaningful, and they follow the style of type hints in comments before it became accepted into the method signatures.\r\n* Did I mention Requirementslib is a nightmare library whose maintenance and code paths are very hard to detangle?  There are circular references with how the dataclasses were designed or manifested, and due to a long history of patching the library, there are many inefficiencies (ie: setup being run multiple times)  \r\n\r\n### The fix\r\n\r\nI am a big fan of pydantic's flavor of Python dataclasses https://docs.pydantic.dev/ and have been using them in other projects with great success.  Pydantic is also the dataclass library that powers FastAPI, and it is fast efficient and has a lot of bells and whistles for as light as the code base it.  So I took a shot at using it here as well and I have 40 hours into detangling larges parts of requirementslib in addition to converting it to pydantic and speeding up its execution.   I believe I have fixed some edge cases as well such as relative \".\" paths.\r\n\r\nAfter chatting with @oz123 we have the goal of converting pythonfinder and plette to also use the pydantic dataclasses -- doing so should further help detangle requirementslib in followup future refactors as well since, it interacts with plette and the dictionary-like view its based on has some limiting factors.\r\n\r\nThis PR also adds the pythonfinder refactor to pydantic and totally drops the attrs libraries from pipenv.\r\n\r\n### Next Steps\r\n* [ ] Get peer review of this PR and factor in any feedback (where possible) -- requirementslib is still a bit delicate to modify even after this work, but its the start of ripping the bandaids off.\r\n* [ ] Once sufficient buy in, port the changes over from this PR to requirementslib and Pythonfinder; release new versions.\r\n* [ ] Vendor in the new versions to a PR and ship a faster more modern version of pipenv.\r\n\r\n### The checklist\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "reqlib-pydantic",
    "is_a_fork": false,
    "comments": [
      "Replaced by:  https://github.com/pypa/pipenv/pull/5670"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131744ee515ce6a4eaca",
    "number": 5663,
    "body": "### The issue\r\n\r\nRemove things from requirementslib that are not actually used.\r\n\r\nI plan to do more reworking of requirementslib, but the first step is see what actually needs re-working.   In our current process, we would port these changes to requirementslib, but that will slow me down for the time being so I am opening this PR first.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "revisit-reqlib",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131744ee515ce6a4eacb",
    "number": 5659,
    "body": "### The issue\r\n\r\nVendor in latest requirementslib which includes the update for pip 23.1 so revendoring pipenv will be consistent.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "requirementslib-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Vendor in latest requirementslib. (#5659)\n\n* Vendor in lateest requirementslib.\r\n\r\n* add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131844ee515ce6a4eacc",
    "number": 5658,
    "body": "The README.md file is what drives the presentation of the pypi page.   This brings the Readme inline with what is published in our docs:  https://pipenv.pypa.io/en/latest/\r\n",
    "head_branch": "pypi-readme",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Clean up intro section of our pypi page."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131944ee515ce6a4eacd",
    "number": 5657,
    "body": "Vendor in latest packages available:\r\n* ``attrs==23.1.0`` \r\n* ``click-didyoumean==0.3.0`` `\r\n* ``click==8.1.3`` \r\n* ``markupsafe==2.1.2`` \r\n* ``pipdeptree==2.7.0`` \r\n* ``shellingham==1.5.0.post1`` \r\n* ``tomlkit==0.11.7``",
    "head_branch": "vendor-update-latest-april-2023",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Vendor in latest packages available (#5657)\n\n* Update to the latest vendoring package versions available.\r\n\r\n* add news fragment\r\n\r\n* fix vendoring CI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131a44ee515ce6a4eace",
    "number": 5656,
    "body": "Vendor in latest python-dotenv.\r\n\r\n",
    "head_branch": "python-dotenv",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131b44ee515ce6a4eacf",
    "number": 5655,
    "body": "### Feature Pip 23.1\r\n\r\nThis was released yesterday, I haven't run the tests yet -- going to let the CI take a shot at this and then will update this PR.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "pip-23.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131b44ee515ce6a4ead0",
    "number": 5653,
    "body": "### The issue\r\n\r\nFixes issue #5367  with --skip-lock reading from the lock file.\r\nFixes also issue #5654 \r\n\r\n### The fix\r\n\r\nGoing to want help testing this more thoroughly.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "issue-5367-fix",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix issue with skip-lock (#5653)\n\n* Fix issue with skip-lock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131c44ee515ce6a4ead1",
    "number": 5651,
    "body": "`pipenv lock -r` has been deprecated.\r\n\r\nsee https://github.com/pypa/pipenv/issues/3493\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5651 from The-Alchemist/patch-1\n\nupdated LOCK_HEADER to mention new syntax"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131d44ee515ce6a4ead2",
    "number": 5650,
    "body": "### The issue\r\n\r\nFixes #5594 \r\n\r\n### The fix\r\n\r\nAdded clarity to the example about tilde-equals operator for package versions\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "tilde_semver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5650 from ryan-rozario/tilde_semver\n\nUpdate docs for tilde-equals in package versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131e44ee515ce6a4ead3",
    "number": 5648,
    "body": "### The issue\r\n\r\nPipenv is the _de facto_ standard for virtual environment and dependency management in Python. Yet, Python's main package and CLI distribution mechanism is `setup.py` scripts. As of now, these two things are not integrated, but they _can_ be!\r\n\r\nI saw an issue regarding this problem somewhere here but, for the life of me, I can't find it now 😞. The issue I'm referring to pointed at [`pipenv-setup`](https://github.com/Madoshakalaka/pipenv-setup) as a way to handle `setup.py + pipenv` integration. One of the pipenv maintainers suggested that, perhaps, `pipenv-setup` itself could be integrated into pipenv.\r\n\r\nHowever, upon attempting to use `pipenv-setup` I encountered a problem described in [this existing issue](https://github.com/Madoshakalaka/pipenv-setup/issues/138) and couldn't fix it using advice provided there. So I did what any programmer would in this situation: I wrote my own simple utility function to replace that tool.\r\n\r\n### The fix\r\n\r\nThe `find_requirements` utility function is supposed to simplify integration between `pipenv` and `setup.py` scripts. Instead of synchronising them manually, users could just\r\n\r\n```python\r\n# file: setup.py\r\n\r\nfrom setuptools import setup, find_packages\r\nfrom pipenv.setuptools import find_requirements\r\n\r\nsetup(\r\n    name=\"very-nice-package\",\r\n    version=\"0.1.0\",\r\n    author=\"John Doe\",\r\n    description=\"The Nicest Package\",\r\n    url=\"https://example.com/very-nice-package\",\r\n    python_requires=\">=3.9, <4\",\r\n    packages=find_packages(),\r\n    install_requires=find_requirements(),\r\n)\r\n```\r\n\r\nThis would fetch requirements from `Pipfile.lock` every time they run\r\n\r\n```bash\r\npip install .  # or `python setup.py install`\r\n```\r\n\r\nThis solution also does not rely on a separate tool one would have to install and regularly run, integrate into CI/CD, etc. Using `find_requirements` is simple, straightforward, and **embedded** with each call to `setup.py`.\r\n\r\n### Dear Reviewer,\r\n\r\nThis is a quick and simple implementation and it could probably benefit from a few utility functions you guys have already written that I am not aware of just yet. If you can suggest such functions or, at least, point me in their general direction, I would be happy to investigate and use them to improve this PR.\r\n\r\nThis PR does not have an associated issue because I decided that this code is simple enough and if it is rejected during review I won't be too upset about the time it took me to write it.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "It seems like the python community has decided to move away from 'setup.py' so I think it's late to the party. Maybe we can merge it. \r\nI need to think about it.\r\n@matteius ? ",
      "I disagree with adding a utility that isn't actually in use within `pipenv`.  Also we should never add a file `setuptools.py` that shadows the package name `setuptools`.",
      "@oz123 \n\n> ... Python community departed from setup.py ...\n\nI've been mostly working with Go since 2019, perhaps I missed this shift. What are people using nowadays?",
      "@matteius \n\n> I disagree with adding a utility that isn't actually in use within pipenv\n\nI understand your reasoning and I still think that it could be useful. Of course, it is up to you guys whether you wish to include it or not, thought one small utility function put into its own package won't hurt things much.\n\n> Also we should never add a file setuptools.py that shadows the package name setuptools\n\nThat's true tho. I can rename the file, of course.\n\nThe main concern here is, I believe, the thing that @oz123 said about Python community departing from `setup.py` files.",
      "The community isn't departing setup.py, I am sorry for being terse and wrong.\r\nsetup.py was used to do many things when imported, and among them build the project.\r\nIt is now used, if you use the setuptools build system. But if one choose another build system,\r\nthe project directory might not have it at all.\r\n\r\nSee here:\r\nhttps://godatadriven.com/blog/a-practical-guide-to-setuptools-and-pyproject-toml/\r\n\r\nSee also more on build systems for python projects:\r\nhttps://packaging.python.org/en/latest/tutorials/packaging-projects/\r\n\r\nI guess adding this to our project, would be one of the first steps of making pipenv a build system.\r\nI imagine `pipenv build` subcommand building on top of this, to build wheels and source distribution.\r\n \r\n@matteius would you support adding this if renamed? ",
      "Wow, @oz123, when I opened this issue I didn't recognise how far it could lead us. I _love_ your idea of the `pipenv build` command.\n\nRealistically, I think it would be the next logical step. For now, Pipenv is mostly a development tool for managing dependencies. For everything else you run `pipenv requirements` and go from there. But it doesn't have to be like that.\n\nPipenv reminds me of Rust's Cargo in many ways, yet cargo can build applications. If we were to introduce the build command - that's definitely a game changer. And I'd be happy to lend my helping hand if needed! 😃",
      "TBH it's been my secret desire for a long time. Although I invested much time in cleaning pipenv dependencies. That last goal is about to be reached.\r\nThen I'll be serious about the build system.\r\nI still want to hear about Matt's opinion.",
      "I'd like to also note that this function would be a bit more involved if we wanted to make it work with all possible types of import allowed by the setup scripts. Currently, I altered it to accept Git-based imports like so:\r\n\r\n```python\r\ndef find_requirements():\r\n    def requirement(name: str, info: dict[str, str]) -> str:\r\n        return (\r\n            f\"{name} @ git+{info['git']}@{info['ref']}#egg={name}\"\r\n            if \"git\" in info\r\n            else name + info[\"version\"]\r\n        )\r\n\r\n    with open(\"Pipfile.lock\") as lock:\r\n        requirements: dict[str, dict] = json.load(lock)[\"default\"]\r\n        return [requirement(name, info) for name, info in requirements.items()]\r\n```",
      "My opinion is not to merge this function that is not in use by pipenv, and to invest more time into defining what would give pipenv package publication abilities.   I think that we would not want to parse the Pipfile or Pipfile.lock for package publishing, and these are intended for managing installable requirements that are project wide.  Instead I think we should adopt the similar pyproject.toml, setup.cfg (and we probably have to support setup.py install_requires as well, but it should not just pull everything from the lock file IMO)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620131f44ee515ce6a4ead4",
    "number": 5644,
    "body": "### The issue\r\n\r\nFound a minor typo while reading docs.\r\n\r\n### The fix\r\n\r\nThis corrects the typo.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "docs-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5644 from samdoran/docs-fix\n\nCorrect typo in docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132044ee515ce6a4ead5",
    "number": 5643,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nContinuation of #5361\r\n\r\n[Ruff](https://beta.ruff.rs/) supports [over 500 lint rules](https://beta.ruff.rs/docs/rules) and can be used to replace [Flake8](https://pypi.org/project/flake8/) (plus dozens of plugins), [isort](https://pypi.org/project/isort/), [pydocstyle](https://pypi.org/project/pydocstyle/), [yesqa](https://github.com/asottile/yesqa), [eradicate](https://pypi.org/project/eradicate/), [pyupgrade](https://pypi.org/project/pyupgrade/), and [autoflake](https://pypi.org/project/autoflake/), all while executing (in Rust) tens or hundreds of times faster than any individual tool.\r\n\r\n### The fix\r\n\r\nAdded ruff in all the right places and removed flake8 and isort.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterward.\r\n-->\r\n",
    "head_branch": "ruff",
    "is_a_fork": true,
    "comments": [
      "Yes.  Ruff is installed by pipx or pip and is multiplatform."
    ],
    "commit_messages": [
      "feat: Replace flake8 and isort with ruff"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132044ee515ce6a4ead6",
    "number": 5641,
    "body": "Ship less code to our users, and make pipenv smaller.\r\n\r\n",
    "head_branch": "pip-vendor-pyparsing",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove our own copy of pyparsing, use pip's\n\nShip less code to our users, and make pipenv smaller."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132144ee515ce6a4ead7",
    "number": 5636,
    "body": "Ah crud -- totally missed this until I went to use the new pipenv today.\r\n\r\n\r\n### The issue\r\n\r\n```\r\n    from .installers import Asdf, InstallerError, InstallerNotFound, Pyenv\r\nModuleNotFoundError: No module named 'pipenv.utils.installers'\r\n```",
    "head_branch": "emergency-bugfix",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5636 from pypa/emergency-bugfix\n\nFix import issue with pipenv 2023.3.18."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132244ee515ce6a4ead8",
    "number": 5635,
    "body": "Bump vistir and requirements. Newer version of vistir dropped a lot of code, so it's smaller.",
    "head_branch": "bump-vistir-0.8.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5635 from pypa/bump-vistir-0.8.0\n\nBump vistir and requirementslib"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132344ee515ce6a4ead9",
    "number": 5629,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\n`BadZipfile` (with a small `f`) has been deprecated since Python 3.2.\r\n\r\n* https://docs.python.org/3/library/zipfile.html#zipfile.BadZipfile\r\n* https://github.com/python/cpython/issues/86437\r\n\r\n### The fix\r\n\r\nUse `BadZipFile` (big `F`) instead, added in 3.2.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "replace-deprecated-BadZipfile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5629 from hugovk/replace-deprecated-BadZipfile\n\nReplace deprecated BadZipfile with BadZipFile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132444ee515ce6a4eada",
    "number": 5628,
    "body": "### The issue\r\n\r\npipenv check still prints \"Checking installed packages for vulnerabilities...\", regardless of it's using the installed environment with --use-installed or if it's using the dependencies from Pipfile.lock. If using default behavior, this should read something like \"Checking Pipfile.lock packages for vulnerabilities...\"\r\n\r\nFix #5600 \r\n\r\n### The fix\r\n\r\nShow a different message if  `--use-installed` is specified in `pipenv check`\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5628 from ryan-rozario/main\n\nMessage for Pipfile.lock packages vulnerabilities check"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132544ee515ce6a4eadb",
    "number": 5625,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5624 \r\n\r\nNo news fragment requirement since the upgrade command hasn't been released yet.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "issue-5624",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5625 from pypa/issue-5624\n\nFix dev flag support in update/upgrade."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132544ee515ce6a4eadc",
    "number": 5621,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nThe docs are long in need of work -- this is revision1 which tackles cleaning up the contents from the `Basics` and `Advanced` sections and splitting them apart.  There were some bits left in advanced that I wasn't sure where to put them, so I left that section but renamed it to be other since most of the advanced information moved to other sections.  I also added some context on the `pipenv update` and `pipenv upgrade` commands rework.\r\n\r\n### The fix\r\n\r\nThis is not the end-all be-all fix to the docs, no this is just progress.   I plan to iterate on this more over time -- splitting apart advanced as well.\r\n\r\nI was getting frustrated with rst files and found I was having better luck making the new sections markdown.\r\n\r\n* Removes the super old animation (we can make a new one, but I didn't want that old one holding us back longer)\r\n* Removes references to python3.6 and python 2 -- also just old weird misinformation in general removed.\r\n* Language updated to have a cohesive voice.\r\n\r\nI am sure I missed some things and its definitely not perfect, but I think its an improvement.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "doc-revisions1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Doc revisions1 (#5621)\n\n* Begin reviewing the basics docs.\r\n\r\n* Check in delta\r\n\r\n* More doc revisions.\r\n\r\n* Split apart basics docs.\r\n\r\n* Refactor based on building docs\r\n\r\n* add the files back as markdown.\r\n\r\n* more conversions to markdown.\r\n\r\n* more conversions to markdown.\r\n\r\n* fix markdown formatting.\r\n\r\n* convert index to markdown.\r\n\r\n* More docs review\r\n\r\n* More markdown and doc revisions.\r\n\r\n* Fix docs.\r\n\r\n* Update doc build requirements.\r\n\r\n* fix lint\r\n\r\n* Fix build with update/upgrade command.\r\n\r\n* remove useless quickstart and update the commands section.\r\n\r\n* Fix lint\r\n\r\n* change ordering of table of contents.\r\n\r\n* fix changelog duplicate headings.\r\n\r\n* Start splitting advanced topics.\r\n\r\n* minor nits\r\n\r\n* Move some sections from advanced to shell.\r\n\r\n* remove this section as its stale and kind of off topic.\r\n\r\n* move scripts out into its own section.\r\n\r\n* Wrap up revisions1\r\n\r\n* fix lint\r\n\r\n* address PR feedback and other nits.\r\n\r\n* fix lint\r\n\r\n* Try improving ordering of table of contents, fix issue with indexes.md file location.\r\n\r\n* fix lint\r\n\r\n* PR feedback."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132644ee515ce6a4eadd",
    "number": 5620,
    "body": "This shouldn't affect anything other than the shipped Pipfile.lock having one less package in it, and future-proofing in case the BeautifulSoup maintainer ever stops maintaining the redirect.\r\n\r\n### The issue\r\n\r\nThe `bs4` on PyPI is just a redirect to the latest release of `beautifulsoup4`.  Might as well point to the actual package.\r\nNotably, in some cases, a scanner of a package  downstream of pipenv will note that their dependency chain is including a package (`bs4`) that is marked \"inactive\" on PyPI.\r\n\r\n### The fix\r\n\r\nSwap `bs4` for `beautifulsoup4` in the two places where it's mentioned.\r\n\r\nSurgically remove bs4 from the Pipfile.lock.\r\n\r\n### The checklist\r\n\r\n* [:x:] Associated issue\r\n* [:heavy_check_mark:] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "soup-to-nuts",
    "is_a_fork": true,
    "comments": [
      "@wenottingham thank you for your contribution! Please fix the lint issue before we can merge this.",
      "> @wenottingham thank you for your contribution! Please fix the lint issue before we can merge this.\r\n\r\nOops, sorry - should be fixed now."
    ],
    "commit_messages": [
      "Require the actual 'beautifulsoup4' package, not the 'bs4' redirect. (#5620)\n\n* Require the actual 'beautifulsoup4' package, not the 'bs4' redirect.\r\n\r\n* Add changelog."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132744ee515ce6a4eade",
    "number": 5619,
    "body": "Fixes #5618.\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "add-missing-spaces-issue-5618",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5619 from kurtmckee/add-missing-spaces-issue-5618\n\nAdd missing spaces to `--keep-outdated` deprecation text"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132844ee515ce6a4eadf",
    "number": 5617,
    "body": "Up until now, there was not a reasonable way to generate a lockfile for a subset of dependencies, which is important for users in monolith systems.\r\n\r\n\r\n### The issue\r\n\r\nFixes #5613 \r\n\r\nNeed to be able to eliminate `--keep-outdated` and provide an option that is rational for upgrading only packages and their dependencies.  This should also allow elimination of `--selective-upgrade`, both of which are largely broken for different reasons.\r\n\r\nThis also fixes a bug when adding packages to categories in the `project.py` as a side-effect of these changes.\r\n\r\nAdding an `upgrade` command will be useful for dependabot, which will want to adjust lockfiles and/or Pipfiles without invoking an install phase.\r\n\r\n### The fix\r\n\r\nThis command is minimalist, it will adjust the `Pipfile` and `Pipfile.lock` but it will not install the dependencies.   This will be useful for helping depandabot support newer versions of pipenv as well.\r\n\r\nAdditionally, review the `pipenv update` command and use the same logic for `pipenv update packageA` that `pipenv upgrade` uses, with the benefit being that it will install the dependency updates at the end.  This will be useful for users that want to run fewer commands, and I believe addresses some issue reports with the `pipenv update` command.\r\n\r\nUsers can still invoke a complete re-lock based on the `Pipfile` specifiers by running `pipenv lock`.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "selective-upgrades",
    "is_a_fork": false,
    "comments": [
      "Example -- my project `opensensor-api` has an out of date lock file.  If I run `pipenv lock` I get a big delta:\r\n\r\n```\r\n(pipenv) matteius@matteius-VirtualBox:~/opensensor-api$ pipenv lock\r\nLoading .env environment variables...\r\nCourtesy Notice: Pipenv found itself running within a virtual environment, so it will automatically use that environment, instead of creating its own for any project. You can set PIPENV_IGNORE_VIRTUALENVS=1 to force pipenv to ignore that environment and create its own instead. You can set PIPENV_VERBOSITY=-1 to suppress this warning.\r\nLocking [packages] dependencies...\r\nBuilding requirements...\r\nResolving dependencies...\r\n✔ Success!\r\nLocking [dev-packages] dependencies...\r\nUpdated Pipfile.lock (a6de7749df8d9e2034609e1f24be28b8895e101b6f3595a2d1d605cb293c8769)!\r\n(pipenv) matteius@matteius-VirtualBox:~/opensensor-api$ git diff\r\ndiff --git a/Pipfile.lock b/Pipfile.lock\r\nindex a0c7bb5..b1204a2 100644\r\n--- a/Pipfile.lock\r\n+++ b/Pipfile.lock\r\n@@ -18,18 +18,18 @@\r\n     \"default\": {\r\n         \"anyio\": {\r\n             \"hashes\": [\r\n-                \"sha256:413adf95f93886e442aea925f3ee43baa5a765a64a0f52c6081894f9992fdd0b\",\r\n-                \"sha256:cb29b9c70620506a9a8f87a309591713446953302d7d995344d0d7c6c0c9a7be\"\r\n+                \"sha256:25ea0d673ae30af41a0c442f81cf3b38c7e79fdc7b60335a4c14e05eb0947421\",\r\n+                \"sha256:fbbe32bd270d2a2ef3ed1c5d45041250284e31fc0a4df4a5a6071842051a51e3\"\r\n             ],\r\n             \"markers\": \"python_full_version >= '3.6.2'\",\r\n-            \"version\": \"==3.6.1\"\r\n+            \"version\": \"==3.6.2\"\r\n         },\r\n         \"asttokens\": {\r\n             \"hashes\": [\r\n-                \"sha256:c61e16246ecfb2cde2958406b4c8ebc043c9e6d73aaa83c941673b35e5d3a76b\",\r\n-                \"sha256:e3305297c744ae53ffa032c45dc347286165e4ffce6875dc662b205db0623d86\"\r\n+                \"sha256:4622110b2a6f30b77e1473affaa97e711bc2f07d3f10848420ff1898edbe94f3\",\r\n+                \"sha256:6b0ac9e93fb0335014d382b8fa9b3afa7df546984258005da0b9e7095b3deb1c\"\r\n             ],\r\n-            \"version\": \"==2.0.8\"\r\n+            \"version\": \"==2.2.1\"\r\n         },\r\n         \"backcall\": {\r\n             \"hashes\": [\r\n@@ -56,36 +56,37 @@\r\n         },\r\n         \"dnspython\": {\r\n             \"hashes\": [\r\n-                \"sha256:0f7569a4a6ff151958b64304071d370daa3243d15941a7beedf0c9fe5105603e\",\r\n-                \"sha256:a851e51367fb93e9e1361732c1d60dab63eff98712e503ea7d92e6eccb109b4f\"\r\n+                \"sha256:224e32b03eb46be70e12ef6d64e0be123a64e621ab4c0822ff6d450d52a540b9\",\r\n+                \"sha256:89141536394f909066cabd112e3e1a37e4e654db00a25308b0f130bc3152eb46\"\r\n             ],\r\n-            \"version\": \"==2.2.1\"\r\n+            \"markers\": \"python_version >= '3.7' and python_version < '4.0'\",\r\n+            \"version\": \"==2.3.0\"\r\n         },\r\n         \"executing\": {\r\n             \"hashes\": [\r\n-                \"sha256:236ea5f059a38781714a8bfba46a70fad3479c2f552abee3bbafadc57ed111b8\",\r\n-                \"sha256:b0d7f8dcc2bac47ce6e39374397e7acecea6fdc380a6d5323e26185d70f38ea8\"\r\n+                \"sha256:0314a69e37426e3608aada02473b4161d4caf5a4b244d1d0c48072b8fee7bacc\",\r\n+                \"sha256:19da64c18d2d851112f09c287f8d3dbbdf725ab0e569077efb6cdcbd3497c107\"\r\n             ],\r\n-            \"version\": \"==1.1.1\"\r\n+            \"version\": \"==1.2.0\"\r\n         },\r\n         \"fastapi\": {\r\n             \"hashes\": [\r\n-                \"sha256:1facd097189682a4ff11cbd01334a992e51b56be663b2bd50c2c09523624f144\",\r\n-                \"sha256:de3166b6b1163dc22da4dc4ebdc3192fcbac7700dd1870a1afa44de636a636b5\"\r\n+                \"sha256:023a0f5bd2c8b2609014d3bba1e14a1d7df96c6abea0a73070621c9862b9a4de\",\r\n+                \"sha256:ae7b97c778e2f2ec3fb3cb4fb14162129411d99907fb71920f6d69a524340ebf\"\r\n             ],\r\n             \"index\": \"pypi\",\r\n-            \"version\": \"==0.85.1\"\r\n+            \"version\": \"==0.92.0\"\r\n         },\r\n         \"fastapi-pagination\": {\r\n             \"extras\": [\r\n                 \"pymongo\"\r\n             ],\r\n             \"hashes\": [\r\n-                \"sha256:513401bee242d5965ca2edef77a44c62b5e9e23eb32fb020c1c4ae9ffbf972cd\",\r\n-                \"sha256:cc9db23dabc9ce49e2c24a046ffcb58eedab4c1a3ace7fffa03eed44ed2936e5\"\r\n+                \"sha256:6d3e0d52e510cd58e68fa4699999e06abaf7062762af08dc3ce49939924cebbd\",\r\n+                \"sha256:9457b78cd5d0be590cbda506d5913f9d196a7b50768b7943cd0ad6a5f5aa090c\"\r\n             ],\r\n             \"index\": \"pypi\",\r\n-            \"version\": \"==0.10.0\"\r\n+            \"version\": \"==0.11.4\"\r\n         },\r\n         \"h11\": {\r\n             \"hashes\": [\r\n@@ -113,19 +114,19 @@\r\n         },\r\n         \"ipython\": {\r\n             \"hashes\": [\r\n-                \"sha256:097bdf5cd87576fd066179c9f7f208004f7a6864ee1b20f37d346c0bcb099f84\",\r\n-                \"sha256:6f090e29ab8ef8643e521763a4f1f39dc3914db643122b1e9d3328ff2e43ada2\"\r\n+                \"sha256:b13a1d6c1f5818bd388db53b7107d17454129a70de2b87481d555daede5eb49e\",\r\n+                \"sha256:b38c31e8fc7eff642fc7c597061fff462537cf2314e3225a19c906b7b0d8a345\"\r\n             ],\r\n             \"index\": \"pypi\",\r\n-            \"version\": \"==8.5.0\"\r\n+            \"version\": \"==8.10.0\"\r\n         },\r\n         \"jedi\": {\r\n             \"hashes\": [\r\n-                \"sha256:637c9635fcf47945ceb91cd7f320234a7be540ded6f3e99a50cb6febdfd1ba8d\",\r\n-                \"sha256:74137626a64a99c8eb6ae5832d99b3bdd7d29a3850fe2aa80a4126b2a7d949ab\"\r\n+                \"sha256:203c1fd9d969ab8f2119ec0a3342e0b49910045abe6af0a3ae83a5764d54639e\",\r\n+                \"sha256:bae794c30d07f6d910d32a7048af09b5a39ed740918da923c6b780790ebac612\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.6'\",\r\n-            \"version\": \"==0.18.1\"\r\n+            \"version\": \"==0.18.2\"\r\n         },\r\n         \"matplotlib-inline\": {\r\n             \"hashes\": [\r\n@@ -160,11 +161,11 @@\r\n         },\r\n         \"prompt-toolkit\": {\r\n             \"hashes\": [\r\n-                \"sha256:9696f386133df0fc8ca5af4895afe5d78f5fcfe5258111c2a79a1c3e41ffa96d\",\r\n-                \"sha256:9ada952c9d1787f52ff6d5f3484d0b4df8952787c087edf6a1f7c2cb1ea88148\"\r\n+                \"sha256:3e163f254bef5a03b146397d7c1963bd3e2812f0964bb9a24e6ec761fd28db63\",\r\n+                \"sha256:aa64ad242a462c5ff0363a7b9cfe696c20d55d9fc60c11fd8e632d064804d305\"\r\n             ],\r\n             \"markers\": \"python_full_version >= '3.6.2'\",\r\n-            \"version\": \"==3.0.31\"\r\n+            \"version\": \"==3.0.36\"\r\n         },\r\n         \"ptyprocess\": {\r\n             \"hashes\": [\r\n@@ -182,204 +183,215 @@\r\n         },\r\n         \"pydantic\": {\r\n             \"hashes\": [\r\n-                \"sha256:05e00dbebbe810b33c7a7362f231893183bcc4251f3f2ff991c31d5c08240c42\",\r\n-                \"sha256:06094d18dd5e6f2bbf93efa54991c3240964bb663b87729ac340eb5014310624\",\r\n-                \"sha256:0b959f4d8211fc964772b595ebb25f7652da3f22322c007b6fed26846a40685e\",\r\n-                \"sha256:19b3b9ccf97af2b7519c42032441a891a5e05c68368f40865a90eb88833c2559\",\r\n-                \"sha256:1b6ee725bd6e83ec78b1aa32c5b1fa67a3a65badddde3976bca5fe4568f27709\",\r\n-                \"sha256:1ee433e274268a4b0c8fde7ad9d58ecba12b069a033ecc4645bb6303c062d2e9\",\r\n-                \"sha256:216f3bcbf19c726b1cc22b099dd409aa371f55c08800bcea4c44c8f74b73478d\",\r\n-                \"sha256:2d0567e60eb01bccda3a4df01df677adf6b437958d35c12a3ac3e0f078b0ee52\",\r\n-                \"sha256:2e05aed07fa02231dbf03d0adb1be1d79cabb09025dd45aa094aa8b4e7b9dcda\",\r\n-                \"sha256:352aedb1d71b8b0736c6d56ad2bd34c6982720644b0624462059ab29bd6e5912\",\r\n-                \"sha256:355639d9afc76bcb9b0c3000ddcd08472ae75318a6eb67a15866b87e2efa168c\",\r\n-                \"sha256:37c90345ec7dd2f1bcef82ce49b6235b40f282b94d3eec47e801baf864d15525\",\r\n-                \"sha256:4b8795290deaae348c4eba0cebb196e1c6b98bdbe7f50b2d0d9a4a99716342fe\",\r\n-                \"sha256:5760e164b807a48a8f25f8aa1a6d857e6ce62e7ec83ea5d5c5a802eac81bad41\",\r\n-                \"sha256:6eb843dcc411b6a2237a694f5e1d649fc66c6064d02b204a7e9d194dff81eb4b\",\r\n-                \"sha256:7b5ba54d026c2bd2cb769d3468885f23f43710f651688e91f5fb1edcf0ee9283\",\r\n-                \"sha256:7c2abc4393dea97a4ccbb4ec7d8658d4e22c4765b7b9b9445588f16c71ad9965\",\r\n-                \"sha256:81a7b66c3f499108b448f3f004801fcd7d7165fb4200acb03f1c2402da73ce4c\",\r\n-                \"sha256:91b8e218852ef6007c2b98cd861601c6a09f1aa32bbbb74fab5b1c33d4a1e410\",\r\n-                \"sha256:9300fcbebf85f6339a02c6994b2eb3ff1b9c8c14f502058b5bf349d42447dcf5\",\r\n-                \"sha256:9cabf4a7f05a776e7793e72793cd92cc865ea0e83a819f9ae4ecccb1b8aa6116\",\r\n-                \"sha256:a1f5a63a6dfe19d719b1b6e6106561869d2efaca6167f84f5ab9347887d78b98\",\r\n-                \"sha256:a4c805731c33a8db4b6ace45ce440c4ef5336e712508b4d9e1aafa617dc9907f\",\r\n-                \"sha256:ae544c47bec47a86bc7d350f965d8b15540e27e5aa4f55170ac6a75e5f73b644\",\r\n-                \"sha256:b97890e56a694486f772d36efd2ba31612739bc6f3caeee50e9e7e3ebd2fdd13\",\r\n-                \"sha256:bb6ad4489af1bac6955d38ebcb95079a836af31e4c4f74aba1ca05bb9f6027bd\",\r\n-                \"sha256:bedf309630209e78582ffacda64a21f96f3ed2e51fbf3962d4d488e503420254\",\r\n-                \"sha256:c1ba1afb396148bbc70e9eaa8c06c1716fdddabaf86e7027c5988bae2a829ab6\",\r\n-                \"sha256:c33602f93bfb67779f9c507e4d69451664524389546bacfe1bee13cae6dc7488\",\r\n-                \"sha256:c4aac8e7103bf598373208f6299fa9a5cfd1fc571f2d40bf1dd1955a63d6eeb5\",\r\n-                \"sha256:c6f981882aea41e021f72779ce2a4e87267458cc4d39ea990729e21ef18f0f8c\",\r\n-                \"sha256:cc78cc83110d2f275ec1970e7a831f4e371ee92405332ebfe9860a715f8336e1\",\r\n-                \"sha256:d49f3db871575e0426b12e2f32fdb25e579dea16486a26e5a0474af87cb1ab0a\",\r\n-                \"sha256:dd3f9a40c16daf323cf913593083698caee97df2804aa36c4b3175d5ac1b92a2\",\r\n-                \"sha256:e0bedafe4bc165ad0a56ac0bd7695df25c50f76961da29c050712596cf092d6d\",\r\n-                \"sha256:e9069e1b01525a96e6ff49e25876d90d5a563bc31c658289a8772ae186552236\"\r\n+                \"sha256:1fd326aff5d6c36f05735c7c9b3d5b0e933b4ca52ad0b6e4b38038d82703d35b\",\r\n+                \"sha256:2185a3b3d98ab4506a3f6707569802d2d92c3a7ba3a9a35683a7709ea6c2aaa2\",\r\n+                \"sha256:261f357f0aecda005934e413dfd7aa4077004a174dafe414a8325e6098a8e419\",\r\n+                \"sha256:305d0376c516b0dfa1dbefeae8c21042b57b496892d721905a6ec6b79494a66d\",\r\n+                \"sha256:3257bd714de9db2102b742570a56bf7978e90441193acac109b1f500290f5718\",\r\n+                \"sha256:3353072625ea2a9a6c81ad01b91e5c07fa70deb06368c71307529abf70d23325\",\r\n+                \"sha256:36e44a4de37b8aecffa81c081dbfe42c4d2bf9f6dff34d03dce157ec65eb0f15\",\r\n+                \"sha256:3bb99cf9655b377db1a9e47fa4479e3330ea96f4123c6c8200e482704bf1eda2\",\r\n+                \"sha256:3f9d9b2be177c3cb6027cd67fbf323586417868c06c3c85d0d101703136e6b31\",\r\n+                \"sha256:45edea10b75d3da43cfda12f3792833a3fa70b6eee4db1ed6aed528cef17c74e\",\r\n+                \"sha256:51782fd81f09edcf265823c3bf43ff36d00db246eca39ee765ef58dc8421a642\",\r\n+                \"sha256:532e97c35719f137ee5405bd3eeddc5c06eb91a032bc755a44e34a712420daf3\",\r\n+                \"sha256:58e41dd1e977531ac6073b11baac8c013f3cd8706a01d3dc74e86955be8b2c0c\",\r\n+                \"sha256:5920824fe1e21cbb3e38cf0f3dd24857c8959801d1031ce1fac1d50857a03bfb\",\r\n+                \"sha256:5f3bc8f103b56a8c88021d481410874b1f13edf6e838da607dcb57ecff9b4594\",\r\n+                \"sha256:63200cd8af1af2c07964546b7bc8f217e8bda9d0a2ef0ee0c797b36353914984\",\r\n+                \"sha256:663d2dd78596c5fa3eb996bc3f34b8c2a592648ad10008f98d1348be7ae212fb\",\r\n+                \"sha256:6a4b0aab29061262065bbdede617ef99cc5914d1bf0ddc8bcd8e3d7928d85bd6\",\r\n+                \"sha256:6bb0452d7b8516178c969d305d9630a3c9b8cf16fcf4713261c9ebd465af0d73\",\r\n+                \"sha256:72ef3783be8cbdef6bca034606a5de3862be6b72415dc5cb1fb8ddbac110049a\",\r\n+                \"sha256:76c930ad0746c70f0368c4596020b736ab65b473c1f9b3872310a835d852eb19\",\r\n+                \"sha256:7c5b94d598c90f2f46b3a983ffb46ab806a67099d118ae0da7ef21a2a4033b28\",\r\n+                \"sha256:7ce1612e98c6326f10888df951a26ec1a577d8df49ddcaea87773bfbe23ba5cc\",\r\n+                \"sha256:8481dca324e1c7b715ce091a698b181054d22072e848b6fc7895cd86f79b4449\",\r\n+                \"sha256:87f831e81ea0589cd18257f84386bf30154c5f4bed373b7b75e5cb0b5d53ea87\",\r\n+                \"sha256:9a9d9155e2a9f38b2eb9374c88f02fd4d6851ae17b65ee786a87d032f87008f8\",\r\n+                \"sha256:9e337ac83686645a46db0e825acceea8e02fca4062483f40e9ae178e8bd1103a\",\r\n+                \"sha256:b429f7c457aebb7fbe7cd69c418d1cd7c6fdc4d3c8697f45af78b8d5a7955760\",\r\n+                \"sha256:b473d00ccd5c2061fd896ac127b7755baad233f8d996ea288af14ae09f8e0d1e\",\r\n+                \"sha256:bd46a0e6296346c477e59a954da57beaf9c538da37b9df482e50f836e4a7d4bb\",\r\n+                \"sha256:c428c0f64a86661fb4873495c4fac430ec7a7cef2b8c1c28f3d1a7277f9ea5ab\",\r\n+                \"sha256:c9e5b778b6842f135902e2d82624008c6a79710207e28e86966cd136c621bfee\",\r\n+                \"sha256:ca9075ab3de9e48b75fa8ccb897c34ccc1519177ad8841d99f7fd74cf43be5bf\",\r\n+                \"sha256:f582cac9d11c227c652d3ce8ee223d94eb06f4228b52a8adaafa9fa62e73d5c9\",\r\n+                \"sha256:f5bee6c523d13944a1fdc6f0525bc86dbbd94372f17b83fa6331aabacc8fd08e\",\r\n+                \"sha256:f836444b4c5ece128b23ec36a446c9ab7f9b0f7981d0d27e13a7c366ee163f8a\"\r\n             ],\r\n             \"index\": \"pypi\",\r\n-            \"version\": \"==1.10.2\"\r\n+            \"version\": \"==1.10.5\"\r\n         },\r\n         \"pygments\": {\r\n             \"hashes\": [\r\n-                \"sha256:56a8508ae95f98e2b9bdf93a6be5ae3f7d8af858b43e02c5a2ff083726be40c1\",\r\n-                \"sha256:f643f331ab57ba3c9d89212ee4a2dabc6e94f117cf4eefde99a0574720d14c42\"\r\n+                \"sha256:b3ed06a9e8ac9a9aae5a6f5dbe78a8a58655d17b43b93c078f094ddc476ae297\",\r\n+                \"sha256:fa7bd7bd2771287c0de303af8bfdfc731f51bd2c6a47ab69d117138893b82717\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.6'\",\r\n-            \"version\": \"==2.13.0\"\r\n+            \"version\": \"==2.14.0\"\r\n         },\r\n         \"pymongo\": {\r\n             \"extras\": [\r\n                 \"srv\"\r\n             ],\r\n             \"hashes\": [\r\n-                \"sha256:01721da74558f2f64a9f162ee063df403ed656b7d84229268d8e4ae99cfba59c\",\r\n-                \"sha256:07564178ecc203a84f63e72972691af6c0c82d2dc0c9da66ba711695276089ba\",\r\n-                \"sha256:0f53253f4777cbccc426e669a2af875f26c95bd090d88593287b9a0a8ac7fa25\",\r\n-                \"sha256:10f09c4f09757c2e2a707ad7304f5d69cb8fdf7cbfb644dbacfe5bbe8afe311b\",\r\n-                \"sha256:124d0e880b66f9b0778613198e89984984fdd37a3030a9007e5f459a42dfa2d3\",\r\n-                \"sha256:147a23cd96feb67606ac957744d8d25b013426cdc3c7164a4f99bd8253f649e3\",\r\n-                \"sha256:153b8f8705970756226dfeeb7bb9637e0ad54a4d79b480b4c8244e34e16e1662\",\r\n-                \"sha256:193cc97d44b1e6d2253ea94e30c6f94f994efb7166e2452af4df55825266e88b\",\r\n-                \"sha256:1a957cdc2b26eeed4d8f1889a40c6023dd1bd94672dd0f5ce327314f2caaefd4\",\r\n-                \"sha256:1c81414b706627f15e921e29ae2403aab52e33e36ed92ed989c602888d7c3b90\",\r\n-                \"sha256:21238b19243a42f9a34a6d39e7580ceebc6da6d2f3cf729c1cff9023cb61a5f1\",\r\n-                \"sha256:2bfe6b59f431f40fa545547616f4acf0c0c4b64518b1f951083e3bad06eb368b\",\r\n-                \"sha256:314b556afd72eb21a6a10bd1f45ef252509f014f80207db59c97372103c88237\",\r\n-                \"sha256:31c50da4a080166bc29403aa91f4c76e0889b4f24928d1b60508a37c1bf87f9a\",\r\n-                \"sha256:3be53e9888e759c49ae35d747ff77a04ff82b894dd64601e0f3a5a159b406245\",\r\n-                \"sha256:44b36ccb90aac5ea50be23c1a6e8f24fbfc78afabdef114af16c6e0a80981364\",\r\n-                \"sha256:4cadaaa5c19ad23fc84559e90284f2eb003c36958ebb2c06f286b678f441285f\",\r\n-                \"sha256:60c470a58c5b62b1b12a5f5458f8e2f2f67b94e198d03dc5352f854d9230c394\",\r\n-                \"sha256:6673ab3fbf3135cc1a8c0f70d480db5b2378c3a70af8d602f73f76b8338bdf97\",\r\n-                \"sha256:68e1e49a5675748233f7b05330f092582cd52f2850b4244939fd75ba640593ed\",\r\n-                \"sha256:69d0180bca594e81cdb4a2af328bdb4046f59e10aaeef7619496fe64f2ec918c\",\r\n-                \"sha256:6bd5888997ea3eae9830c6cc7964b61dcfbc50eb3a5a6ce56ad5f86d5579b11c\",\r\n-                \"sha256:701d331060dae72bf3ebdb82924405d14136a69282ccb00c89fc69dee21340b4\",\r\n-                \"sha256:70216ec4c248213ae95ea499b6314c385ce01a5946c448fb22f6c8395806e740\",\r\n-                \"sha256:72f338f6aabd37d343bd9d1fdd3de921104d395766bcc5cdc4039e4c2dd97766\",\r\n-                \"sha256:764fc15418d94bce5c2f8ebdbf66544f96f42efb1364b61e715e5b33281b388d\",\r\n-                \"sha256:766acb5b1a19eae0f7467bcd3398748f110ea5309cdfc59faa5185dcc7fd4dca\",\r\n-                \"sha256:76892bbce743eb9f90360b3626ea92f13d338010a1004b4488e79e555b339921\",\r\n-                \"sha256:773467d25c293f8e981b092361dab5fd800e1ba318403b7959d35004c67faedc\",\r\n-                \"sha256:80cbf0b043061451660099fff9001a7faacb2c9c983842b4819526e2f944dc6c\",\r\n-                \"sha256:83168126ae2457d1a19b2af665cafa7ef78c2dcff192d7d7b5dad6b36c73ae24\",\r\n-                \"sha256:83cc3c35aeeceb67143914db67f685206e1aa37ea837d872f4bc28d7f80917c9\",\r\n-                \"sha256:8a86e8c2ac2ec87141e1c6cb00bdb18a4560f06e5f96769abcd1dda24dc0e764\",\r\n-                \"sha256:8a9bc4dcfc2bda69ee88cdb7a89b03f2b8eca668519b704384a264dea2db4209\",\r\n-                \"sha256:8c223aea52c359cc8fdee5bd3475532590755c269ec4d4fe581acd47a44e9952\",\r\n-                \"sha256:8cbb868e88c4eee1c53364bb343d226a3c0e959e791e6828030cb78f46cfcbe3\",\r\n-                \"sha256:902e2c9030cb042c49750bc70d72d830d42c64ea0df5ff8630c171e065c93dd7\",\r\n-                \"sha256:a25c0eb2d610b20e276e684be61c337396813b636b69373c17314283cb1a3b14\",\r\n-                \"sha256:a3efdf154844244e0dabe902cf1827fdced55fa5b144adec2a86e5ce50a99b97\",\r\n-                \"sha256:a6bf01b9237f794fa3bdad5089474067d28be7e199b356a18d3f247a45775f26\",\r\n-                \"sha256:a7eb5b06744b911b6668b427c8abc71b6d624e72d3dfffed00988fa1b4340f97\",\r\n-                \"sha256:b0be613d926c5dbb0d3fc6b58e4f2be4979f80ae76fda6e47309f011b388fe0c\",\r\n-                \"sha256:b211e161b6cc2790e0d640ad38e0429d06c944e5da23410f4dc61809dba25095\",\r\n-                \"sha256:b537dd282de1b53d9ae7cf9f3df36420c8618390f2da92100391f3ba8f3c141a\",\r\n-                \"sha256:b9e4981a65f8500a3a46bb3a1e81b9feb45cf0b2115ad9c4f8d517326d026940\",\r\n-                \"sha256:c549bb519456ee230e92f415c5b4d962094caac0fdbcc4ed22b576f66169764e\",\r\n-                \"sha256:c69ef5906dcd6ec565d4d887ba97ceb2a84f3b614307ee3b4780cb1ea40b1867\",\r\n-                \"sha256:c8b4a782aac43948308087b962c9ecb030ba98886ce6dee3ad7aafe8c5e1ce80\",\r\n-                \"sha256:cc7ebc37b03956a070260665079665eae69e5e96007694214f3a2107af96816a\",\r\n-                \"sha256:ccfdc7722df445c49dc6b5d514c3544cad99b53189165f7546793933050ac7fb\",\r\n-                \"sha256:d8bb745321716e7a11220a67c88212ecedde4021e1de4802e563baef9df921d2\",\r\n-                \"sha256:d94f535df9f539615bc3dbbef185ded3b609373bb44ca1afffcabac70202678a\",\r\n-                \"sha256:d98d2a8283c9928a9e5adf2f3c0181e095579e9732e1613aaa55d386e2bcb6c5\",\r\n-                \"sha256:dc24737d24ce0de762bee9c2a884639819485f679bbac8ab5be9c161ef6f9b2c\",\r\n-                \"sha256:e08fe1731f5429435b8dea1db9663f9ed1812915ff803fc9991c7c4841ed62ad\",\r\n-                \"sha256:e09cdf5aad507c8faa30d97884cc42932ed3a9c2b7f22cc3ccc607bae03981b3\",\r\n-                \"sha256:e152c26ffc30331e9d57591fc4c05453c209aa20ba299d1deb7173f7d1958c22\",\r\n-                \"sha256:e1b8f5e2f9637492b0da4d51f78ecb17786e61d6c461ead8542c944750faf4f9\",\r\n-                \"sha256:e39cacee70a98758f9b2da53ee175378f07c60113b1fa4fae40cbaee5583181e\",\r\n-                \"sha256:e64442aba81ed4df1ca494b87bf818569a1280acaa73071c68014f7a884e83f1\",\r\n-                \"sha256:e7dcb73f683c155885a3488646fcead3a895765fed16e93c9b80000bc69e96cb\",\r\n-                \"sha256:ecdcb0d4e9b08b739035f57a09330efc6f464bd7f942b63897395d996ca6ebd5\",\r\n-                \"sha256:ed90a9de4431cbfb2f3b2ef0c5fd356e61c85117b2be4db3eae28cb409f6e2d5\",\r\n-                \"sha256:f1c23527f8e13f526fededbb96f2e7888f179fe27c51d41c2724f7059b75b2fa\",\r\n-                \"sha256:f47d5f10922cf7f7dfcd1406bd0926cef6d866a75953c3745502dffd7ac197dd\",\r\n-                \"sha256:fe0820d169635e41c14a5d21514282e0b93347878666ec9d5d3bf0eed0649948\",\r\n-                \"sha256:ff66014687598823b6b23751884b4aa67eb934445406d95894dfc60cb7bfcc18\"\r\n+                \"sha256:016c412118e1c23fef3a1eada4f83ae6e8844fd91986b2e066fc1b0013cdd9ae\",\r\n+                \"sha256:01f7cbe88d22440b6594c955e37312d932fd632ffed1a86d0c361503ca82cc9d\",\r\n+                \"sha256:08fc250b5552ee97ceeae0f52d8b04f360291285fc7437f13daa516ce38fdbc6\",\r\n+                \"sha256:0c466710871d0026c190fc4141e810cf9d9affbf4935e1d273fbdc7d7cda6143\",\r\n+                \"sha256:1074f1a6f23e28b983c96142f2d45be03ec55d93035b471c26889a7ad2365db3\",\r\n+                \"sha256:12f3621a46cdc7a9ba8080422262398a91762a581d27e0647746588d3f995c88\",\r\n+                \"sha256:2c2fdc855149efe7cdcc2a01ca02bfa24761c640203ea94df467f3baf19078be\",\r\n+                \"sha256:316498b642c00401370b2156b5233b256f9b33799e0a8d9d0b8a7da217a20fca\",\r\n+                \"sha256:341221e2f2866a5960e6f8610f4cbac0bb13097f3b1a289aa55aba984fc0d969\",\r\n+                \"sha256:34b040e095e1671df0c095ec0b04fc4ebb19c4c160f87c2b55c079b16b1a6b00\",\r\n+                \"sha256:34e95ffb0a68bffbc3b437f2d1f25fc916fef3df5cdeed0992da5f42fae9b807\",\r\n+                \"sha256:39b03045c71f761aee96a12ebfbc2f4be89e724ff6f5e31c2574c1a0e2add8bd\",\r\n+                \"sha256:3b93043b14ba7eb08c57afca19751658ece1cfa2f0b7b1fb5c7a41452fbb8482\",\r\n+                \"sha256:47f7aa217b25833cd6f0e72b0d224be55393c2692b4f5e0561cb3beeb10296e9\",\r\n+                \"sha256:49210feb0be8051a64d71691f0acbfbedc33e149f0a5d6e271fddf6a12493fed\",\r\n+                \"sha256:4d00b91c77ceb064c9b0459f0d6ea5bfdbc53ea9e17cf75731e151ef25a830c7\",\r\n+                \"sha256:4ed00f96e147f40b565fe7530d1da0b0f3ab803d5dd5b683834500fa5d195ec4\",\r\n+                \"sha256:5134d33286c045393c7beb51be29754647cec5ebc051cf82799c5ce9820a2ca2\",\r\n+                \"sha256:524d78673518dcd352a91541ecd2839c65af92dc883321c2109ef6e5cd22ef23\",\r\n+                \"sha256:52896e22115c97f1c829db32aa2760b0d61839cfe08b168c2b1d82f31dbc5f55\",\r\n+                \"sha256:54c377893f2cbbffe39abcff5ff2e917b082c364521fa079305f6f064e1a24a9\",\r\n+                \"sha256:55b6163dac53ef1e5d834297810c178050bd0548a4136cd4e0f56402185916ca\",\r\n+                \"sha256:599d3f6fbef31933b96e2d906b0f169b3371ff79ea6aaf6ecd76c947a3508a3d\",\r\n+                \"sha256:5effd87c7d363890259eac16c56a4e8da307286012c076223997f8cc4a8c435b\",\r\n+                \"sha256:66413c50d510e5bcb0afc79880d1693a2185bcea003600ed898ada31338c004e\",\r\n+                \"sha256:695939036a320f4329ccf1627edefbbb67cc7892b8222d297b0dd2313742bfee\",\r\n+                \"sha256:6c2216d8b6a6d019c6f4b1ad55f890e5e77eb089309ffc05b6911c09349e7474\",\r\n+                \"sha256:6dd1cf2995fdbd64fc0802313e8323f5fa18994d51af059b5b8862b73b5e53f0\",\r\n+                \"sha256:6fcfbf435eebf8a1765c6d1f46821740ebe9f54f815a05c8fc30d789ef43cb12\",\r\n+                \"sha256:704d939656e21b073bfcddd7228b29e0e8a93dd27b54240eaafc0b9a631629a6\",\r\n+                \"sha256:711bc52cb98e7892c03e9b669bebd89c0a890a90dbc6d5bb2c47f30239bac6e9\",\r\n+                \"sha256:74731c9e423c93cbe791f60c27030b6af6a948cef67deca079da6cd1bb583a8e\",\r\n+                \"sha256:7761cacb8745093062695b11574effea69db636c2fd0a9269a1f0183712927b4\",\r\n+                \"sha256:7b16250238de8dafca225647608dddc7bbb5dce3dd53b4d8e63c1cc287394c2f\",\r\n+                \"sha256:7c051fe37c96b9878f37fa58906cb53ecd13dcb7341d3a85f1e2e2f6b10782d9\",\r\n+                \"sha256:7d43ac9c7eeda5100fb0a7152fab7099c9cf9e5abd3bb36928eb98c7d7a339c6\",\r\n+                \"sha256:81d1a7303bd02ca1c5be4aacd4db73593f573ba8e0c543c04c6da6275fd7a47e\",\r\n+                \"sha256:8a06a0c02f5606330e8f2e2f3b7949877ca7e4024fa2bff5a4506bec66c49ec7\",\r\n+                \"sha256:8fd6e191b92a10310f5a6cfe10d6f839d79d192fb02480bda325286bd1c7b385\",\r\n+                \"sha256:943f208840777f34312c103a2d1caab02d780c4e9be26b3714acf6c4715ba7e1\",\r\n+                \"sha256:9b87b23570565a6ddaa9244d87811c2ee9cffb02a753c8a2da9c077283d85845\",\r\n+                \"sha256:a6cd6f1db75eb07332bd3710f58f5fce4967eadbf751bad653842750a61bda62\",\r\n+                \"sha256:a966d5304b7d90c45c404914e06bbf02c5bf7e99685c6c12f0047ef2aa837142\",\r\n+                \"sha256:a9c2885b4a8e6e39db5662d8b02ca6dcec796a45e48c2de12552841f061692ba\",\r\n+                \"sha256:b0cfe925610f2fd59555bb7fc37bd739e4b197d33f2a8b2fae7b9c0c6640318c\",\r\n+                \"sha256:b38a96b3eed8edc515b38257f03216f382c4389d022a8834667e2bc63c0c0c31\",\r\n+                \"sha256:b8a03af1ce79b902a43f5f694c4ca8d92c2a4195db0966f08f266549e2fc49bc\",\r\n+                \"sha256:bb869707d8e30645ed6766e44098600ca6cdf7989c22a3ea2b7966bb1d98d4b2\",\r\n+                \"sha256:be1d2ce7e269215c3ee9a215e296b7a744aff4f39233486d2c4d77f5f0c561a6\",\r\n+                \"sha256:c0640b4e9d008e13956b004d1971a23377b3d45491f87082161c92efb1e6c0d6\",\r\n+                \"sha256:c09956606c08c4a7c6178a04ba2dd9388fcc5db32002ade9c9bc865ab156ab6d\",\r\n+                \"sha256:c184ec5be465c0319440734491e1aa4709b5f3ba75fdfc9dbbc2ae715a7f6829\",\r\n+                \"sha256:c1a70c51da9fa95bd75c167edb2eb3f3c4d27bc4ddd29e588f21649d014ec0b7\",\r\n+                \"sha256:c29e758f0e734e1e90357ae01ec9c6daf19ff60a051192fe110d8fb25c62600e\",\r\n+                \"sha256:c6258a3663780ae47ba73d43eb63c79c40ffddfb764e09b56df33be2f9479837\",\r\n+                \"sha256:cafa52873ae12baa512a8721afc20de67a36886baae6a5f394ddef0ce9391f91\",\r\n+                \"sha256:cd6a4afb20fb3c26a7bfd4611a0bbb24d93cbd746f5eb881f114b5e38fd55501\",\r\n+                \"sha256:cdb87309de97c63cb9a69132e1cb16be470e58cffdfbad68fdd1dc292b22a840\",\r\n+                \"sha256:d07d06dba5b5f7d80f9cc45501456e440f759fe79f9895922ed486237ac378a8\",\r\n+                \"sha256:d3a51901066696c4af38c6c63a1f0aeffd5e282367ff475de8c191ec9609b56d\",\r\n+                \"sha256:d5571b6978750601f783cea07fb6b666837010ca57e5cefa389c1d456f6222e2\",\r\n+                \"sha256:d86c35d94b5499689354ccbc48438a79f449481ee6300f3e905748edceed78e7\",\r\n+                \"sha256:dc0cff74cd36d7e1edba91baa09622c35a8a57025f2f2b7a41e3f83b1db73186\",\r\n+                \"sha256:dc24d245026a72d9b4953729d31813edd4bd4e5c13622d96e27c284942d33f24\",\r\n+                \"sha256:dca34367a4e77fcab0693e603a959878eaf2351585e7d752cac544bc6b2dee46\",\r\n+                \"sha256:e2961b05f9c04a53da8bfc72f1910b6aec7205fcf3ac9c036d24619979bbee4b\",\r\n+                \"sha256:e7fac06a539daef4fcf5d8288d0d21b412f9b750454cd5a3cf90484665db442a\",\r\n+                \"sha256:eac0a143ef4f28f49670bf89cb15847eb80b375d55eba401ca2f777cd425f338\",\r\n+                \"sha256:ef888f48eb9203ee1e04b9fb27429017b290fb916f1e7826c2f7808c88798394\",\r\n+                \"sha256:f3055510fdfdb1775bc8baa359783022f70bb553f2d46e153c094dfcb08578ff\",\r\n+                \"sha256:fa7e202feb683dad74f00dea066690448d0cfa310f8a277db06ec8eb466601b5\",\r\n+                \"sha256:fc28e8d85d392a06434e9a934908d97e2cf453d69488d2bcd0bfb881497fd975\",\r\n+                \"sha256:fd7bb378d82b88387dc10227cfd964f6273eb083e05299e9b97cbe075da12d11\",\r\n+                \"sha256:ffcc8394123ea8d43fff8e5d000095fe7741ce3f8988366c5c919c4f5eb179d3\"\r\n             ],\r\n             \"index\": \"pypi\",\r\n-            \"version\": \"==4.2.0\"\r\n-        },\r\n-        \"setuptools\": {\r\n-            \"hashes\": [\r\n-                \"sha256:0d33c374d41c7863419fc8f6c10bfe25b7b498aa34164d135c622e52580c6b16\",\r\n-                \"sha256:c04b44a57a6265fe34a4a444e965884716d34bae963119a76353434d6f18e450\"\r\n-            ],\r\n-            \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==63.2.0\"\r\n+            \"version\": \"==4.3.3\"\r\n         },\r\n         \"simplejson\": {\r\n             \"hashes\": [\r\n-                \"sha256:04e31fa6ac8e326480703fb6ded1488bfa6f1d3f760d32e29dbf66d0838982ce\",\r\n-                \"sha256:068670af975247acbb9fc3d5393293368cda17026db467bf7a51548ee8f17ee1\",\r\n-                \"sha256:07ecaafc1b1501f275bf5acdee34a4ad33c7c24ede287183ea77a02dc071e0c0\",\r\n-                \"sha256:0b4126cac7d69ac06ff22efd3e0b3328a4a70624fcd6bca4fc1b4e6d9e2e12bf\",\r\n-                \"sha256:0de783e9c2b87bdd75b57efa2b6260c24b94605b5c9843517577d40ee0c3cc8a\",\r\n-                \"sha256:12133863178a8080a3dccbf5cb2edfab0001bc41e5d6d2446af2a1131105adfe\",\r\n-                \"sha256:1c9b1ed7ed282b36571638297525f8ef80f34b3e2d600a56f962c6044f24200d\",\r\n-                \"sha256:23fe704da910ff45e72543cbba152821685a889cf00fc58d5c8ee96a9bad5f94\",\r\n-                \"sha256:28221620f4dcabdeac310846629b976e599a13f59abb21616356a85231ebd6ad\",\r\n-                \"sha256:35a49ebef25f1ebdef54262e54ae80904d8692367a9f208cdfbc38dbf649e00a\",\r\n-                \"sha256:37bc0cf0e5599f36072077e56e248f3336917ded1d33d2688624d8ed3cefd7d2\",\r\n-                \"sha256:3fe87570168b2ae018391e2b43fbf66e8593a86feccb4b0500d134c998983ccc\",\r\n-                \"sha256:3ff5b3464e1ce86a8de8c88e61d4836927d5595c2162cab22e96ff551b916e81\",\r\n-                \"sha256:401d40969cee3df7bda211e57b903a534561b77a7ade0dd622a8d1a31eaa8ba7\",\r\n-                \"sha256:4b6bd8144f15a491c662f06814bd8eaa54b17f26095bb775411f39bacaf66837\",\r\n-                \"sha256:4c09868ddb86bf79b1feb4e3e7e4a35cd6e61ddb3452b54e20cf296313622566\",\r\n-                \"sha256:4d1c135af0c72cb28dd259cf7ba218338f4dc027061262e46fe058b4e6a4c6a3\",\r\n-                \"sha256:4ff4ac6ff3aa8f814ac0f50bf218a2e1a434a17aafad4f0400a57a8cc62ef17f\",\r\n-                \"sha256:521877c7bd060470806eb6335926e27453d740ac1958eaf0d8c00911bc5e1802\",\r\n-                \"sha256:522fad7be85de57430d6d287c4b635813932946ebf41b913fe7e880d154ade2e\",\r\n-                \"sha256:5540fba2d437edaf4aa4fbb80f43f42a8334206ad1ad3b27aef577fd989f20d9\",\r\n-                \"sha256:5d6b4af7ad7e4ac515bc6e602e7b79e2204e25dbd10ab3aa2beef3c5a9cad2c7\",\r\n-                \"sha256:5decdc78849617917c206b01e9fc1d694fd58caa961be816cb37d3150d613d9a\",\r\n-                \"sha256:632ecbbd2228575e6860c9e49ea3cc5423764d5aa70b92acc4e74096fb434044\",\r\n-                \"sha256:65b998193bd7b0c7ecdfffbc825d808eac66279313cb67d8892bb259c9d91494\",\r\n-                \"sha256:67093a526e42981fdd954868062e56c9b67fdd7e712616cc3265ad0c210ecb51\",\r\n-                \"sha256:681eb4d37c9a9a6eb9b3245a5e89d7f7b2b9895590bb08a20aa598c1eb0a1d9d\",\r\n-                \"sha256:69bd56b1d257a91e763256d63606937ae4eb890b18a789b66951c00062afec33\",\r\n-                \"sha256:724c1fe135aa437d5126138d977004d165a3b5e2ee98fc4eb3e7c0ef645e7e27\",\r\n-                \"sha256:7255a37ff50593c9b2f1afa8fafd6ef5763213c1ed5a9e2c6f5b9cc925ab979f\",\r\n-                \"sha256:743cd768affaa508a21499f4858c5b824ffa2e1394ed94eb85caf47ac0732198\",\r\n-                \"sha256:80d3bc9944be1d73e5b1726c3bbfd2628d3d7fe2880711b1eb90b617b9b8ac70\",\r\n-                \"sha256:82ff356ff91be0ab2293fc6d8d262451eb6ac4fd999244c4b5f863e049ba219c\",\r\n-                \"sha256:8e8607d8f6b4f9d46fee11447e334d6ab50e993dd4dbfb22f674616ce20907ab\",\r\n-                \"sha256:97202f939c3ff341fc3fa84d15db86156b1edc669424ba20b0a1fcd4a796a045\",\r\n-                \"sha256:9b01e7b00654115965a206e3015f0166674ec1e575198a62a977355597c0bef5\",\r\n-                \"sha256:9fa621b3c0c05d965882c920347b6593751b7ab20d8fa81e426f1735ca1a9fc7\",\r\n-                \"sha256:a1aa6e4cae8e3b8d5321be4f51c5ce77188faf7baa9fe1e78611f93a8eed2882\",\r\n-                \"sha256:a2d30d6c1652140181dc6861f564449ad71a45e4f165a6868c27d36745b65d40\",\r\n-                \"sha256:a649d0f66029c7eb67042b15374bd93a26aae202591d9afd71e111dd0006b198\",\r\n-                \"sha256:a7854326920d41c3b5d468154318fe6ba4390cb2410480976787c640707e0180\",\r\n-                \"sha256:a89acae02b2975b1f8e4974cb8cdf9bf9f6c91162fb8dec50c259ce700f2770a\",\r\n-                \"sha256:a8bbdb166e2fb816e43ab034c865147edafe28e1b19c72433147789ac83e2dda\",\r\n-                \"sha256:ac786f6cb7aa10d44e9641c7a7d16d7f6e095b138795cd43503769d4154e0dc2\",\r\n-                \"sha256:b09bc62e5193e31d7f9876220fb429ec13a6a181a24d897b9edfbbdbcd678851\",\r\n-                \"sha256:b10556817f09d46d420edd982dd0653940b90151d0576f09143a8e773459f6fe\",\r\n-                \"sha256:b81076552d34c27e5149a40187a8f7e2abb2d3185576a317aaf14aeeedad862a\",\r\n-                \"sha256:bdfc54b4468ed4cd7415928cbe782f4d782722a81aeb0f81e2ddca9932632211\",\r\n-                \"sha256:cf6e7d5fe2aeb54898df18db1baf479863eae581cce05410f61f6b4188c8ada1\",\r\n-                \"sha256:cf98038d2abf63a1ada5730e91e84c642ba6c225b0198c3684151b1f80c5f8a6\",\r\n-                \"sha256:d24a9e61df7a7787b338a58abfba975414937b609eb6b18973e25f573bc0eeeb\",\r\n-                \"sha256:d74ee72b5071818a1a5dab47338e87f08a738cb938a3b0653b9e4d959ddd1fd9\",\r\n-                \"sha256:dd16302d39c4d6f4afde80edd0c97d4db643327d355a312762ccd9bd2ca515ed\",\r\n-                \"sha256:dd2fb11922f58df8528adfca123f6a84748ad17d066007e7ac977720063556bd\",\r\n-                \"sha256:deac4bdafa19bbb89edfb73b19f7f69a52d0b5bd3bb0c4ad404c1bbfd7b4b7fd\",\r\n-                \"sha256:e03c3b8cc7883a54c3f34a6a135c4a17bc9088a33f36796acdb47162791b02f6\",\r\n-                \"sha256:e1ec8a9ee0987d4524ffd6299e778c16cc35fef6d1a2764e609f90962f0b293a\",\r\n-                \"sha256:e8603e691580487f11306ecb066c76f1f4a8b54fb3bdb23fa40643a059509366\",\r\n-                \"sha256:f444762fed1bc1fd75187ef14a20ed900c1fbb245d45be9e834b822a0223bc81\",\r\n-                \"sha256:f63600ec06982cdf480899026f4fda622776f5fabed9a869fdb32d72bc17e99a\",\r\n-                \"sha256:fb62d517a516128bacf08cb6a86ecd39fb06d08e7c4980251f5d5601d29989ba\"\r\n+                \"sha256:04a4b9a297cccbc9e1d66fe652fbffd55b36d6579c43132e821d315957302194\",\r\n+                \"sha256:063db62a9251e61ea0c17e49c3e7bed465bfcc5359655abcb8c0bc6130a4e0d4\",\r\n+                \"sha256:070ab073ce72f1624107dfd6d095c87ac32aafe7ba54a5c5055a3dd83cb06e51\",\r\n+                \"sha256:099bbd3b5b4ea83159a980348cd481a34984dee5fe1b9fac31a9137158f46960\",\r\n+                \"sha256:0baf8c60efef74944ed4adb034d14bcf737731576f0e4c3c56fb875ea256af69\",\r\n+                \"sha256:0e7c3fae6c9540064e06a653780b4f263675cd69ca6841345029fee3e27e9bb5\",\r\n+                \"sha256:141782a0a25c1792627575b37b4951583358ccc7137623aa45947f8425ee8d96\",\r\n+                \"sha256:14b35fb90083218e59df5dba733c7086655f2938f3fcabe36ad849623941d660\",\r\n+                \"sha256:169c2c7446ef33439c304a6aa5b7b5a2dbc938c9c2dd882dd3f2553f9518ebf6\",\r\n+                \"sha256:16cc750d19852fa5ebafd55da86fa357f87991e07b4e2afb37a5975dfdde0153\",\r\n+                \"sha256:1907d49d70c75530976119c13785db91168d2599288debaca7d25da9cd2f3747\",\r\n+                \"sha256:1b79e2607ac5ba98381c2e068727acc1e4dd385a6d216914c0613f8f568a06a5\",\r\n+                \"sha256:1e49c84df6e71e3c23169d3df481565dd607cbee4aa1e0af15c493cccad7c745\",\r\n+                \"sha256:23fce984045804194f513a2739dcd82be350198470d5ade5058da019a48cf3f8\",\r\n+                \"sha256:24823364fee93bab141621b3a2e10612e31be7ca58788bf9b2cd2b1ce37ab07d\",\r\n+                \"sha256:290bbcdcbb37af3f7e43378f592ab7a9168fca640da6af63d42cdb535f96bbf2\",\r\n+                \"sha256:2a1b3222bc8f6ac91b5ebe3263111c7dc4dc4b01c52f0153f5bb1f3ef3bf0023\",\r\n+                \"sha256:2b0f6de11f5ce4b80f51bc49d08b898602e190547f8efe4e44af8ae3cda7779d\",\r\n+                \"sha256:2be75f4cb9951efeb2616e16f944ee4f9a09768475a3f5c40a6ac4dc5ee68dfd\",\r\n+                \"sha256:2c7ee643ee93684bf76196e2d84a2090c6df8f01737a016e869b579593827b6e\",\r\n+                \"sha256:37bdef13412c0bc338db2993a38f3911d5bd2a0ba8d00b3bc66d1063edd7c33e\",\r\n+                \"sha256:3bab9ea49ff477c926c5787f79ec47cf51c7ffb15c9d8dd0f09e728807d44f4b\",\r\n+                \"sha256:44d6c52d4f5c0c087a6e88a92bf9f94234321d21be32c6471ba39856e304bbe3\",\r\n+                \"sha256:4b8d4d958c5ab3489d1174917a7fad82da642560c39ce559a624e63deaaa36b1\",\r\n+                \"sha256:4de9fed1166aeedee44150fa83bc059aca6b612940281f8b5a39374781f16196\",\r\n+                \"sha256:502d86fbfe914263642479b87ed61af3b27b9e039df77acd2416cfccfc892e68\",\r\n+                \"sha256:508342d7227ed66beecfbba7a38b46e1a713faeb034216f43f03ec5c175e0622\",\r\n+                \"sha256:50f4b6d52f3a2d1cffd11834a1fe7f9516f0e3f20cbe78027aa88ff990fad7d6\",\r\n+                \"sha256:52465a5578cfc2c5e374a574df14dfb75e04c6cb6a100b7abc8bf6c89bea8f5e\",\r\n+                \"sha256:55aa983575b0aef143845f5bfbb35075475eccaebf7d4b30f4037a2fe8414666\",\r\n+                \"sha256:55df3dfd8777bf134e1078d2f195352432a77f23ccb90b92b08218123d56adc9\",\r\n+                \"sha256:56f186d44a9f625b5e5d9ba4b9551e263604000a7df60cb373b3e789ca603b2a\",\r\n+                \"sha256:5780e3929435a8d39671537174f8ce0ccafb4f6e0c748ffe139916ffbdca39d3\",\r\n+                \"sha256:59a629240cfbc5b4f390a8578dca74ae77ab617de971862acb946822d2eb1b11\",\r\n+                \"sha256:5b009342e712026ffabe8a471d5b4a4ff2a038687387e74eae601574c04dae33\",\r\n+                \"sha256:62628ea5df8c830d00a7417d5ecd949a1b24a8d0a5063a2a77f7ec7522110a0f\",\r\n+                \"sha256:694332fd6fd10fe8868c2508583220d1a1a7be9ff049dab5bd6b9aedfb9edc50\",\r\n+                \"sha256:6a49665169c18f27a0fc10935466332ee7406ee14ced8dc0a1b4d465547299aa\",\r\n+                \"sha256:6b997739fdbc9b7030ff490fc8e5f8c144b8ec80f3605eff643983672bb8cfde\",\r\n+                \"sha256:6bd81d10cb3384f64242316da8a2b2f88618776bc1ef38bcc79f1afe8ad36616\",\r\n+                \"sha256:6c4c56c5abb82e22877b913186e5c0fd7d9eef0c930719e28fa451d3f11defb4\",\r\n+                \"sha256:6fe1173b4146641c872bafa6f9a21f3a2012f502d54fbb523a76e6320024fae9\",\r\n+                \"sha256:75eb555dc349d0cbe2c95ea2be665b306c6ac6d5b64e3a3920af9b805ecdb5f7\",\r\n+                \"sha256:7c26fe63755ecc59c502ddde8e58ce8b765bf4fdd3f5858d2b7c8ab28bc2a9c8\",\r\n+                \"sha256:7e73d9d6af3c29b60a92e28b3144d951110f59a3d05fc402c3f6c5248b883400\",\r\n+                \"sha256:7ff65b475091084e5bdb7f26e9c555956be7355b573ce494fa96f9f8e34541ac\",\r\n+                \"sha256:8209c40279ed9b2cd5fbe2d617a29a074e90ea97fce7c07a0128a01cb3e8afc5\",\r\n+                \"sha256:88f59a07873dc1f06fd9e6712dd71286f1b297a066ad2fd9110ad080d3cb011c\",\r\n+                \"sha256:96ade36640734b54176c4765d00a60767bd7fae5b7a5b3574accc055ac18e34c\",\r\n+                \"sha256:9cf299fbb7d476676dfea372a3262654af98694bd1df35b060ce0fe1b68087f1\",\r\n+                \"sha256:a2960b95f3ba822d077d1afa7e1fea9799cfb2990028cf010e666f64195ecb5a\",\r\n+                \"sha256:a80bd9a3db88a76a401155c64e3499376c702307c2206cb381cc2a8dd9cc4f1f\",\r\n+                \"sha256:aad323e92cb1bd3b1db6f57c007dca964d13c52247ad844203ce381e94066601\",\r\n+                \"sha256:ab5bdf0b8d07f7fd603b2d0c1982412cd9f8ade997088ddced251f7e656c7fd4\",\r\n+                \"sha256:b0352428b35da859a98770949e7353866ae65463026f1c8e4c89a6395d4b5fd7\",\r\n+                \"sha256:b2c4e8b65987f3c6529149495d28e23efe213e94dc3659176c4ab22d18a9ee4a\",\r\n+                \"sha256:bcd9eac304a133ee4af58e68c5ded4c5ba663d3ee4602e8613359b776a1f8c8f\",\r\n+                \"sha256:c3b696770b504f881f271f97b94a687487ec1ef20bfbd5f20d92bbab7a85952d\",\r\n+                \"sha256:c4514675f6571da8190fea52a110bca686fa844972e8b2b3bc07ace9e632ee4f\",\r\n+                \"sha256:c98fddc374468158778a8afb3fd7296412a2b2fc34cebba64212ac3e018e7382\",\r\n+                \"sha256:cde5a3ff5e0bd5d6da676314dfae86c9e99bff77bca03d30223c9718a58f9e83\",\r\n+                \"sha256:cf7168b2046db0eceb83d8ed2ee31c0847ce18b2d8baf3e93de9560f3921a8c3\",\r\n+                \"sha256:d774782159347d66563cd7ac18b9dd37010438a825160cde4818caa18110a746\",\r\n+                \"sha256:d990ea42ba908cb57a3df97d283aa26c1822f10a0a60e250b54ee21cd08c48d0\",\r\n+                \"sha256:e762e9d8556fa9f3a99f8a278eeba50a35b5f554b82deeb282ddbdd85816e638\",\r\n+                \"sha256:e8a4750e8db92109e6f1f7783a7faae4254d6d5dc28a41ff7eff7d2265f0586b\",\r\n+                \"sha256:eb81cfef0c0039010f0212f4e5eb6909641b8a54c761584054ac97fd7bd0c21a\",\r\n+                \"sha256:ebb53837c5ffcb6100646018565d3f1afed6f4b185b14b2c9cbccf874fe40157\",\r\n+                \"sha256:efa70fd9b6c7b57b048ecadb909683acd535cddebc5b22f3c05ba3b369739caf\",\r\n+                \"sha256:f73bae5e315adf7bc8cb7f0a13a1e9e33bead42e8ce174be83ac9ecc2513c86a\",\r\n+                \"sha256:f89f078114cacedb9a3392615cc099cf02a51efa7507f90e2006bf7ec38c880d\",\r\n+                \"sha256:f9f72d2b539512f382a48cc9ad6cea2d3a572e71e92c40e03d2140041eeaa233\",\r\n+                \"sha256:fc8df5831b645e96a318ea51a66ce6e2bb869eebc3fa9a860bbf67aecd270055\"\r\n             ],\r\n             \"index\": \"pypi\",\r\n-            \"version\": \"==3.17.6\"\r\n+            \"version\": \"==3.18.3\"\r\n         },\r\n         \"six\": {\r\n             \"hashes\": [\r\n@@ -399,57 +411,49 @@\r\n         },\r\n         \"stack-data\": {\r\n             \"hashes\": [\r\n-                \"sha256:5120731a18ba4c82cefcf84a945f6f3e62319ef413bfc210e32aca3a69310ba2\",\r\n-                \"sha256:95eb784942e861a3d80efd549ff9af6cf847d88343a12eb681d7157cfcb6e32b\"\r\n+                \"sha256:32d2dd0376772d01b6cb9fc996f3c8b57a357089dec328ed4b6553d037eaf815\",\r\n+                \"sha256:cbb2a53eb64e5785878201a97ed7c7b94883f48b87bfb0bbe8b623c74679e4a8\"\r\n             ],\r\n-            \"version\": \"==0.5.1\"\r\n+            \"version\": \"==0.6.2\"\r\n         },\r\n         \"starlette\": {\r\n             \"hashes\": [\r\n-                \"sha256:42fcf3122f998fefce3e2c5ad7e5edbf0f02cf685d646a83a08d404726af5084\",\r\n-                \"sha256:c0414d5a56297d37f3db96a84034d61ce29889b9eaccf65eb98a0b39441fcaa3\"\r\n+                \"sha256:774f1df1983fd594b9b6fb3ded39c2aa1979d10ac45caac0f4255cbe2acb8628\",\r\n+                \"sha256:854c71e73736c429c2bdb07801f2c76c9cba497e7c3cf4988fde5e95fe4cdb3c\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==0.20.4\"\r\n+            \"version\": \"==0.25.0\"\r\n         },\r\n         \"traitlets\": {\r\n             \"hashes\": [\r\n-                \"sha256:3f2c4e435e271592fe4390f1746ea56836e3a080f84e7833f0f801d9613fec39\",\r\n-                \"sha256:93663cc8236093d48150e2af5e2ed30fc7904a11a6195e21bab0408af4e6d6c8\"\r\n+                \"sha256:9e6ec080259b9a5940c797d58b613b5e31441c2257b87c2e795c5228ae80d2d8\",\r\n+                \"sha256:f6cde21a9c68cf756af02035f72d5a723bf607e862e7be33ece505abf4a3bad9\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==5.4.0\"\r\n+            \"version\": \"==5.9.0\"\r\n         },\r\n         \"typing-extensions\": {\r\n             \"hashes\": [\r\n-                \"sha256:1511434bb92bf8dd198c12b1cc812e800d4181cfcb867674e0f8279cc93087aa\",\r\n-                \"sha256:16fa4864408f655d35ec496218b85f79b3437c829e93320c7c9215ccfd92489e\"\r\n+                \"sha256:5cb5f4a79139d699607b3ef622a1dedafa84e115ab0024e0d9c044a9479ca7cb\",\r\n+                \"sha256:fb33085c39dd998ac16d1431ebc293a8b3eedd00fd4a32de0ff79002c19511b4\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==4.4.0\"\r\n-        },\r\n-        \"urllib3\": {\r\n-            \"hashes\": [\r\n-                \"sha256:8d7eaa5a82a1cac232164990f04874c594c9453ec55eef02eab885aa02fc17a2\",\r\n-                \"sha256:f5321fbe4bf3fefa0efd0bfe7fb14e90909eb62a48ccda331726b4319897dd5e\"\r\n-            ],\r\n-            \"index\": \"pypi\",\r\n-            \"version\": \"==1.25.11\"\r\n+            \"version\": \"==4.5.0\"\r\n         },\r\n         \"uvicorn\": {\r\n             \"hashes\": [\r\n-                \"sha256:0abd429ebb41e604ed8d2be6c60530de3408f250e8d2d84967d85ba9e86fe3af\",\r\n-                \"sha256:9a66e7c42a2a95222f76ec24a4b754c158261c4696e683b9dadc72b590e0311b\"\r\n+                \"sha256:a4e12017b940247f836bc90b72e725d7dfd0c8ed1c51eb365f5ba30d9f5127d8\",\r\n+                \"sha256:c3ed1598a5668208723f2bb49336f4509424ad198d6ab2615b7783db58d919fd\"\r\n             ],\r\n             \"index\": \"pypi\",\r\n-            \"version\": \"==0.18.3\"\r\n+            \"version\": \"==0.20.0\"\r\n         },\r\n         \"wcwidth\": {\r\n             \"hashes\": [\r\n-                \"sha256:beb4802a9cebb9144e99086eff703a642a13d6a0052920003a230f3294bbe784\",\r\n-                \"sha256:c4d647b99872929fdb7bdcaa4fbe7f01413ed3d98077df798530e5b04f116c83\"\r\n+                \"sha256:795b138f6875577cd91bba52baf9e445cd5118fd32723b460e30a0af30ea230e\",\r\n+                \"sha256:a5220780a404dbe3353789870978e472cfe477761f06ee55077256e509b156d0\"\r\n             ],\r\n-            \"version\": \"==0.2.5\"\r\n+            \"version\": \"==0.2.6\"\r\n         }\r\n     },\r\n     \"develop\": {}\r\n```\r\n\r\nNow if I reset that, and say I just want to upgrade `pydantic` I can run `pipenv upgrade pydantic` (this takes the same kind of specifiers as `install` as well).  Let's see what that delta looks like:\r\n\r\n```\r\n(pipenv) matteius@matteius-VirtualBox:~/opensensor-api$ git checkout .\r\nUpdated 1 path from the index\r\n(pipenv) matteius@matteius-VirtualBox:~/opensensor-api$ git diff\r\n(pipenv) matteius@matteius-VirtualBox:~/opensensor-api$ pipenv upgrade pydantic\r\nLoading .env environment variables...\r\nCourtesy Notice: Pipenv found itself running within a virtual environment, so it will automatically use that environment, instead of creating its own for any project. You can set PIPENV_IGNORE_VIRTUALENVS=1 to force pipenv to ignore that environment and create its own instead. You can set PIPENV_VERBOSITY=-1 to suppress this warning.\r\nBuilding requirements...\r\nResolving dependencies...\r\n✔ Success!\r\nBuilding requirements...\r\nResolving dependencies...\r\n✔ Success!\r\n(pipenv) matteius@matteius-VirtualBox:~/opensensor-api$ git diff\r\ndiff --git a/Pipfile.lock b/Pipfile.lock\r\nindex a0c7bb5..1b9069a 100644\r\n--- a/Pipfile.lock\r\n+++ b/Pipfile.lock\r\n@@ -182,45 +182,45 @@\r\n         },\r\n         \"pydantic\": {\r\n             \"hashes\": [\r\n-                \"sha256:05e00dbebbe810b33c7a7362f231893183bcc4251f3f2ff991c31d5c08240c42\",\r\n-                \"sha256:06094d18dd5e6f2bbf93efa54991c3240964bb663b87729ac340eb5014310624\",\r\n-                \"sha256:0b959f4d8211fc964772b595ebb25f7652da3f22322c007b6fed26846a40685e\",\r\n-                \"sha256:19b3b9ccf97af2b7519c42032441a891a5e05c68368f40865a90eb88833c2559\",\r\n-                \"sha256:1b6ee725bd6e83ec78b1aa32c5b1fa67a3a65badddde3976bca5fe4568f27709\",\r\n-                \"sha256:1ee433e274268a4b0c8fde7ad9d58ecba12b069a033ecc4645bb6303c062d2e9\",\r\n-                \"sha256:216f3bcbf19c726b1cc22b099dd409aa371f55c08800bcea4c44c8f74b73478d\",\r\n-                \"sha256:2d0567e60eb01bccda3a4df01df677adf6b437958d35c12a3ac3e0f078b0ee52\",\r\n-                \"sha256:2e05aed07fa02231dbf03d0adb1be1d79cabb09025dd45aa094aa8b4e7b9dcda\",\r\n-                \"sha256:352aedb1d71b8b0736c6d56ad2bd34c6982720644b0624462059ab29bd6e5912\",\r\n-                \"sha256:355639d9afc76bcb9b0c3000ddcd08472ae75318a6eb67a15866b87e2efa168c\",\r\n-                \"sha256:37c90345ec7dd2f1bcef82ce49b6235b40f282b94d3eec47e801baf864d15525\",\r\n-                \"sha256:4b8795290deaae348c4eba0cebb196e1c6b98bdbe7f50b2d0d9a4a99716342fe\",\r\n-                \"sha256:5760e164b807a48a8f25f8aa1a6d857e6ce62e7ec83ea5d5c5a802eac81bad41\",\r\n-                \"sha256:6eb843dcc411b6a2237a694f5e1d649fc66c6064d02b204a7e9d194dff81eb4b\",\r\n-                \"sha256:7b5ba54d026c2bd2cb769d3468885f23f43710f651688e91f5fb1edcf0ee9283\",\r\n-                \"sha256:7c2abc4393dea97a4ccbb4ec7d8658d4e22c4765b7b9b9445588f16c71ad9965\",\r\n-                \"sha256:81a7b66c3f499108b448f3f004801fcd7d7165fb4200acb03f1c2402da73ce4c\",\r\n-                \"sha256:91b8e218852ef6007c2b98cd861601c6a09f1aa32bbbb74fab5b1c33d4a1e410\",\r\n-                \"sha256:9300fcbebf85f6339a02c6994b2eb3ff1b9c8c14f502058b5bf349d42447dcf5\",\r\n-                \"sha256:9cabf4a7f05a776e7793e72793cd92cc865ea0e83a819f9ae4ecccb1b8aa6116\",\r\n-                \"sha256:a1f5a63a6dfe19d719b1b6e6106561869d2efaca6167f84f5ab9347887d78b98\",\r\n-                \"sha256:a4c805731c33a8db4b6ace45ce440c4ef5336e712508b4d9e1aafa617dc9907f\",\r\n-                \"sha256:ae544c47bec47a86bc7d350f965d8b15540e27e5aa4f55170ac6a75e5f73b644\",\r\n-                \"sha256:b97890e56a694486f772d36efd2ba31612739bc6f3caeee50e9e7e3ebd2fdd13\",\r\n-                \"sha256:bb6ad4489af1bac6955d38ebcb95079a836af31e4c4f74aba1ca05bb9f6027bd\",\r\n-                \"sha256:bedf309630209e78582ffacda64a21f96f3ed2e51fbf3962d4d488e503420254\",\r\n-                \"sha256:c1ba1afb396148bbc70e9eaa8c06c1716fdddabaf86e7027c5988bae2a829ab6\",\r\n-                \"sha256:c33602f93bfb67779f9c507e4d69451664524389546bacfe1bee13cae6dc7488\",\r\n-                \"sha256:c4aac8e7103bf598373208f6299fa9a5cfd1fc571f2d40bf1dd1955a63d6eeb5\",\r\n-                \"sha256:c6f981882aea41e021f72779ce2a4e87267458cc4d39ea990729e21ef18f0f8c\",\r\n-                \"sha256:cc78cc83110d2f275ec1970e7a831f4e371ee92405332ebfe9860a715f8336e1\",\r\n-                \"sha256:d49f3db871575e0426b12e2f32fdb25e579dea16486a26e5a0474af87cb1ab0a\",\r\n-                \"sha256:dd3f9a40c16daf323cf913593083698caee97df2804aa36c4b3175d5ac1b92a2\",\r\n-                \"sha256:e0bedafe4bc165ad0a56ac0bd7695df25c50f76961da29c050712596cf092d6d\",\r\n-                \"sha256:e9069e1b01525a96e6ff49e25876d90d5a563bc31c658289a8772ae186552236\"\r\n+                \"sha256:1fd326aff5d6c36f05735c7c9b3d5b0e933b4ca52ad0b6e4b38038d82703d35b\",\r\n+                \"sha256:2185a3b3d98ab4506a3f6707569802d2d92c3a7ba3a9a35683a7709ea6c2aaa2\",\r\n+                \"sha256:261f357f0aecda005934e413dfd7aa4077004a174dafe414a8325e6098a8e419\",\r\n+                \"sha256:305d0376c516b0dfa1dbefeae8c21042b57b496892d721905a6ec6b79494a66d\",\r\n+                \"sha256:3257bd714de9db2102b742570a56bf7978e90441193acac109b1f500290f5718\",\r\n+                \"sha256:3353072625ea2a9a6c81ad01b91e5c07fa70deb06368c71307529abf70d23325\",\r\n+                \"sha256:36e44a4de37b8aecffa81c081dbfe42c4d2bf9f6dff34d03dce157ec65eb0f15\",\r\n+                \"sha256:3bb99cf9655b377db1a9e47fa4479e3330ea96f4123c6c8200e482704bf1eda2\",\r\n+                \"sha256:3f9d9b2be177c3cb6027cd67fbf323586417868c06c3c85d0d101703136e6b31\",\r\n+                \"sha256:45edea10b75d3da43cfda12f3792833a3fa70b6eee4db1ed6aed528cef17c74e\",\r\n+                \"sha256:51782fd81f09edcf265823c3bf43ff36d00db246eca39ee765ef58dc8421a642\",\r\n+                \"sha256:532e97c35719f137ee5405bd3eeddc5c06eb91a032bc755a44e34a712420daf3\",\r\n+                \"sha256:58e41dd1e977531ac6073b11baac8c013f3cd8706a01d3dc74e86955be8b2c0c\",\r\n+                \"sha256:5920824fe1e21cbb3e38cf0f3dd24857c8959801d1031ce1fac1d50857a03bfb\",\r\n+                \"sha256:5f3bc8f103b56a8c88021d481410874b1f13edf6e838da607dcb57ecff9b4594\",\r\n+                \"sha256:63200cd8af1af2c07964546b7bc8f217e8bda9d0a2ef0ee0c797b36353914984\",\r\n+                \"sha256:663d2dd78596c5fa3eb996bc3f34b8c2a592648ad10008f98d1348be7ae212fb\",\r\n+                \"sha256:6a4b0aab29061262065bbdede617ef99cc5914d1bf0ddc8bcd8e3d7928d85bd6\",\r\n+                \"sha256:6bb0452d7b8516178c969d305d9630a3c9b8cf16fcf4713261c9ebd465af0d73\",\r\n+                \"sha256:72ef3783be8cbdef6bca034606a5de3862be6b72415dc5cb1fb8ddbac110049a\",\r\n+                \"sha256:76c930ad0746c70f0368c4596020b736ab65b473c1f9b3872310a835d852eb19\",\r\n+                \"sha256:7c5b94d598c90f2f46b3a983ffb46ab806a67099d118ae0da7ef21a2a4033b28\",\r\n+                \"sha256:7ce1612e98c6326f10888df951a26ec1a577d8df49ddcaea87773bfbe23ba5cc\",\r\n+                \"sha256:8481dca324e1c7b715ce091a698b181054d22072e848b6fc7895cd86f79b4449\",\r\n+                \"sha256:87f831e81ea0589cd18257f84386bf30154c5f4bed373b7b75e5cb0b5d53ea87\",\r\n+                \"sha256:9a9d9155e2a9f38b2eb9374c88f02fd4d6851ae17b65ee786a87d032f87008f8\",\r\n+                \"sha256:9e337ac83686645a46db0e825acceea8e02fca4062483f40e9ae178e8bd1103a\",\r\n+                \"sha256:b429f7c457aebb7fbe7cd69c418d1cd7c6fdc4d3c8697f45af78b8d5a7955760\",\r\n+                \"sha256:b473d00ccd5c2061fd896ac127b7755baad233f8d996ea288af14ae09f8e0d1e\",\r\n+                \"sha256:bd46a0e6296346c477e59a954da57beaf9c538da37b9df482e50f836e4a7d4bb\",\r\n+                \"sha256:c428c0f64a86661fb4873495c4fac430ec7a7cef2b8c1c28f3d1a7277f9ea5ab\",\r\n+                \"sha256:c9e5b778b6842f135902e2d82624008c6a79710207e28e86966cd136c621bfee\",\r\n+                \"sha256:ca9075ab3de9e48b75fa8ccb897c34ccc1519177ad8841d99f7fd74cf43be5bf\",\r\n+                \"sha256:f582cac9d11c227c652d3ce8ee223d94eb06f4228b52a8adaafa9fa62e73d5c9\",\r\n+                \"sha256:f5bee6c523d13944a1fdc6f0525bc86dbbd94372f17b83fa6331aabacc8fd08e\",\r\n+                \"sha256:f836444b4c5ece128b23ec36a446c9ab7f9b0f7981d0d27e13a7c366ee163f8a\"\r\n             ],\r\n             \"index\": \"pypi\",\r\n-            \"version\": \"==1.10.2\"\r\n+            \"version\": \"==1.10.5\"\r\n         },\r\n         \"pygments\": {\r\n             \"hashes\": [\r\n@@ -422,11 +422,11 @@\r\n         },\r\n         \"typing-extensions\": {\r\n             \"hashes\": [\r\n-                \"sha256:1511434bb92bf8dd198c12b1cc812e800d4181cfcb867674e0f8279cc93087aa\",\r\n-                \"sha256:16fa4864408f655d35ec496218b85f79b3437c829e93320c7c9215ccfd92489e\"\r\n+                \"sha256:5cb5f4a79139d699607b3ef622a1dedafa84e115ab0024e0d9c044a9479ca7cb\",\r\n+                \"sha256:fb33085c39dd998ac16d1431ebc293a8b3eedd00fd4a32de0ff79002c19511b4\"\r\n             ],\r\n             \"markers\": \"python_version >= '3.7'\",\r\n-            \"version\": \"==4.4.0\"\r\n+            \"version\": \"==4.5.0\"\r\n         },\r\n         \"urllib3\": {\r\n             \"hashes\": [\r\n```",
      "This looks great.\r\n\r\nThe way we currently use `pipenv` is to have unpinned dependencies in the `Pipfile` and use the `Pipfile.lock` to manage versions and then deploy with `pipenv install --system --deploy --ignore-pipfile`.\r\n\r\nWe then regularly use `pipenv upgrade` to upgrade everything to the latest version, and for anything that has breaking changes we then pin in the `Pipfile` (for example we are not yet ready to move to SQLAlchemy 2.0 so that is pinned to <2 in the `Pipfile`).\r\n\r\nWe have some internal packages which we often want to update without updating anything else, to do that we use the following commands:\r\n```\r\npipenv install --keep-outdated --selective-upgrade --index ourindex ourpackage==1.8.0\r\npipenv lock --keep-outdated\r\n```\r\n\r\nIf I understand correctly, with this change we can replace these commands with `pipenv update outpackage==1.8.0`.\r\nThe downside of our current approach is that the old hashes for `ourpackage` remain in the `Pipfile.lock` so we have to manually remove them, seems `pipenv update` also resolves this :tada: \r\n",
      "@matteius can you please fix the conflicts?\r\n\r\n",
      "My plan for the documentation is we have a news fragment in this PR, and I've begun working on some larger effort to revamp the documentation, the first iteration which breaks apart the basics section and includes some more details on this work is here:   https://github.com/pypa/pipenv/pull/5621"
    ],
    "commit_messages": [
      "Improve pipenv update and add pipenv upgrade command (#5617)\n\n* Split apart core using pycharm refactor move methods.\r\n\r\n* move init to remove cicular import.\r\n\r\n* Fix imports.\r\n\r\n* Check in concept for pipenv upgrade command\r\n\r\n* Fix upgrade command expectation on how it updates the lockfile.\r\n\r\n* Actually write the result to the Pipfile, and fix secondary bug with items not being written to the Pipfile.\r\n\r\n* Fix issue where package being upgraded already exists.\r\n\r\n* Add news fragment.\r\n\r\n* Integrate upgrade with a refactor of update.\r\n\r\n* Handle cases where there is nothing to upgrade.\r\n\r\n* Add lock-only option."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132944ee515ce6a4eae0",
    "number": 5616,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nThere are many issues related to code in core.py -- and the problem for me is the file is too unweidly to make sense of it, like utils.py once was.\r\n\r\n### The fix\r\n\r\nUse pycharm refactor to safely break apart the core.py\r\n\r\nRemoves 3 unused utilities and some constants in the process.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "split-apart-core",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Split apart core.py (#5616)\n\n* Split apart core using pycharm refactor move methods."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132944ee515ce6a4eae1",
    "number": 5615,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nOpened issue #5572 \r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\nDuplicated logic from `import_requirements()` to `do_install()` in `core.py` to allow users to validate an index specified via `--index` command-line option against `PIP_TRUSTED_HOSTS` when determining `verify_ssl` value written to the Pipfile.\r\n\r\nThis is the quickest fix to the problem, but ideally, `trusted_hosts` logic throughout the package should be consolidated and made consistent.\r\n\r\nAlong with the `pip.conf` changes, a user can ensure Pipfile is created with correct indices from command-line the first time.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "issue-5572",
    "is_a_fork": true,
    "comments": [
      "Thnaks for opening this @kalebmckale  -- we can port the change over to the new file structure -- I've opened a PR tonight that eliminates core.py because its been holding me back from fixing other bugs.  https://github.com/pypa/pipenv/pull/5616",
      "I'm happy to look over your branch and make the adjustment there so you at least have one less thing to do, if you like.\n\n~~Welp... I guess I don't really know how to do that with GitHub apparently. Don't usually do the fork thing and didn't realize how different it was from just being on a project. 🙂~~\n\nActually, I figured it out. 🙃",
      "@matteius, I thought I'd look through `routines/install.py` and make some notes about some refactoring to remove some Python anti-patterns, etc. And... well... wow... that `do_install()` function... it's uh... quite a doozy! \n\nAnyhoo, I made some refactoring notes before stopping. You can view them here: [routines/install.py](https://github.com/kalebmckale/pipenv/blob/200bc80a8cc43156884305fc7c69004da4d92a8e/pipenv/routines/install.py).",
      "Thank you @kalebmckale -- I'll review them when I have more time.  The goal of the routines PR is to split apart the existing code without refactor, and that will make subsequent refactor PRs much more viable.   I really appreciate you taking the time to read through the code and look for areas of improvement.",
      "No problem. I figured the current split was limited in scope because that's how I'd work on an issue, too. Keep it focused on specific tasks and iteratively make changes over multiple issues to ensure no breakage. 🙂",
      "@kalebmckale Now that the other PR that splits apart core.py has been merged, could you resolve the conflicts?",
      "@kalebmckale I am hopeful to do a release come this weekend, if possible I would like to include this.",
      "Hey @matteius ! Sorry I’ve been spending a lot of extra time at work lately and haven’t had much time to do coding at home. I’ll see what I can do before this weekend.",
      "I think that should do it, but I am not able to test it locally right now.",
      "> @matteius, I thought I'd look through `routines/install.py` and make some notes about some refactoring to remove some Python anti-patterns, etc. And... well... wow... that `do_install()` function... it's uh... quite a doozy!\r\n> \r\n> Anyhoo, I made some refactoring notes before stopping. You can view them here: [routines/install.py](https://github.com/kalebmckale/pipenv/blob/200bc80a8cc43156884305fc7c69004da4d92a8e/pipenv/routines/install.py).\r\n\r\nYes, unfortunately, pipenv has a very ill code base. But we are working to make it better :-)",
      "@oz123 No shame or shade intended. I am happy to help. This is my wheelhouse.",
      "Thanks for the updated documentation. Can you please fix the linting error?",
      "Sure! I think I understand what the error is, but just checking: is it saying I need an extra newline at the end of the news file?",
      "Sorry for all the confusing messages. This is literally my first time working on a big GitHub project. I’m used to a competitor’s product and am confused about some of the differences. So, I’m probably clicking on a lot of things I shouldn’t be because I don’t know what they do.",
      "At home, I have only my iPad to develop and run code. I've been trying to run `pre-commit run --all-files --verbose --show-diff-on-failure`, but it keeps crashing iSH before it completes. If you can let me know how to interpret the CI output without having to run it locally, that would be great! Sorry!"
    ],
    "commit_messages": [
      "Fix linting error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132a44ee515ce6a4eae2",
    "number": 5614,
    "body": "Vendor in pip==23.0.1 minor pt release and fix vendoring script for Python 3.11\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pip-23.0.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Pip 23.0.1 (#5614)\n\n* Bump version of pip 23.0.1\r\n\r\n* Invoke 2.0.0 for python 3.11 environments.\r\n\r\n* Vendor in pip==23.0.1\r\n\r\n* add news fragment.\r\n\r\n* vendoring updates.\r\n\r\n* Vendor in latest pythonfinder.\r\n\r\n* Add exceptiongroup backport for pytest update.\r\n\r\n* Fix lock file with python 3.11"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132b44ee515ce6a4eae3",
    "number": 5611,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nI made some minor improvements to the contributing guide. I also tried to merge the two paragraphs about testing into one. Maybe this could still be improved. \r\n\r\n### The fix\r\n\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "improve-contributing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improved contributing guide (#5611)\n\n* Improved contributing guide\r\n\r\n* Added news entry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132c44ee515ce6a4eae4",
    "number": 5608,
    "body": "pkg update \r\npkg upgeret \r\npython install \r\npython istall 2 \r\npip install rqwest \r\npip install \r\nhttps://github.com/pypa/pipeenv/issues/5234>irfan\r\ncdirfan5230\r\nirfan 2006\r\n\r\nThank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@asifirfan1 I don't understand what you are trying to do."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132d44ee515ce6a4eae5",
    "number": 5607,
    "body": "### The issue\r\n\r\nFixes issue #5600 \r\n\r\n### The fix\r\n\r\nSupply the options to pull the requirements from the lock file categories.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5600-check",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Issue 5600 check command should be able to pull requirements from lock file (#5607)\n\n* Allow pipenv check inputs to be built from the lockfile categories instead of whats installed.\r\n\r\n* fix lint\r\n\r\n* add news fragment.\r\n\r\n* update pipenv check documentation.\r\n\r\n* Revise logic for pipenv check and change default behavior to check lockfile.\r\n\r\n* fix issue revealed by tests\r\n\r\n* fix docs for pipenv check changes.\r\n\r\n* change conditional ordering in prep for supporting for future default categories env var."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132d44ee515ce6a4eae6",
    "number": 5606,
    "body": "### The issue\r\n\r\nFixes #5570 \r\n\r\n### The fix\r\n\r\nIntroduce regular expression for categories parsing that is more flexible and blends what `requirements` and `sync` or `install` allowed.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5570-categories",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Flexibile argument specification when specifying multiple cateogires. (#5606)\n\n* Flexibile argument specification when specifying multiple categories.\r\n\r\n* fix lint\r\n\r\n* add test and news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132e44ee515ce6a4eae7",
    "number": 5603,
    "body": "This adds support for Nushell overlays. See #5583 for info.\r\n\r\n### The issue\r\n\r\nNushell support is broken due to a change in the `virtualenv` package which expects users to load the file using overlays instead of the `source` command. See #5583 for info.\r\n\r\n### The fix\r\n\r\nChanging the command from `source` to `overlay use` resolves the issue.\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Switch to Nushell overlays (#5603)\n\n* Switch to Nushell overlays\r\n\r\nThis adds support for Nushell overlays. See #5583 for info.\r\n\r\n* Add news file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620132f44ee515ce6a4eae8",
    "number": 5593,
    "body": "Following the discussion in #5582, it seems it's about time to update these versions.\r\n\r\n",
    "head_branch": "bump-dependencies",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump required setuptools and virtualenv (#5593)\n\nFollowing the discussion in #5582, it seems it's about time\r\nto update these versions."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133044ee515ce6a4eae9",
    "number": 5592,
    "body": "Remove more old code that depends on vistir misc.\r\n\r\nThis PR has two distinct part:\r\n\r\nFirst, remove `vistir.misc.to_bytes` and `vistir.misc.get_text_stderr()`. \r\nSecond, add funktools, which was included in `vistir.misc`. These functions are dropped from vistir 0.8.0 (to be released).\r\n",
    "head_branch": "removal/vistir-misc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5592 from pypa/removal/vistir-misc\n\nRemoval/vistir misc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133144ee515ce6a4eaea",
    "number": 5591,
    "body": "### The issue\r\n\r\nFixes #5554 \r\n\r\n### The fix\r\n\r\nUse `pipenv` utility for reading and checking the env variable but doesn't require its truthyness.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "issue-5554b",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix regression with CI variable (#5591)\n\n* add missing news fragment.\r\n\r\n* Fix regression with detection of CI env variable being set to something other than a truthy value.\r\n\r\n* Add news fragment.\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133144ee515ce6a4eaeb",
    "number": 5590,
    "body": null,
    "head_branch": "remove-pipenv/_compat.py",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5590 from pypa/remove-pipenv/_compat.py\n\nRemove pipenv/_compat.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133244ee515ce6a4eaec",
    "number": 5586,
    "body": "Let's keep this out of the next release so that its mostly bug fixes against the prior pip version, but I'd be fine with a fast-follow release of this.\r\n\r\n\r\n### The issue\r\n\r\nVendor in the latest pip 23.0 that was release yesterday Jan 30th 2023.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "pip-23",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Pip 23.0 (#5586)\n\n* update pip to 23.0 in patched.txt\r\n\r\n* Vendor in pip517 since pip dropped it from its _vendor.\r\n\r\n* adjust vendoring script.\r\n\r\n* vendor in pip==23.0\r\n\r\n* correct vendoring script.\r\n\r\n* fix import with vendoring script."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133344ee515ce6a4eaed",
    "number": 5581,
    "body": "Fix #5530 .",
    "head_branch": "fix-verbose-logging",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5581 from pypa/fix-verbose-logging\n\nFix verbose logging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133444ee515ce6a4eaee",
    "number": 5576,
    "body": "The flag was deprecated 4 months ago and it's time to let it go.\r\nDoing so removes a lot of state and checks. ",
    "head_branch": "remove-three-flag",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5576 from pypa/remove-three-flag\n\nRemove deprecated flag --three"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133544ee515ce6a4eaef",
    "number": 5567,
    "body": "Add an installer for Homebrew.\r\nHomebrew is one of the main package managers on OSX.\r\nIt would be great to be able to use it,\r\nas it can install multiple python versions and is\r\noften installed on Mac or Linux.",
    "head_branch": "add-homebrew",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133644ee515ce6a4eaf0",
    "number": 5565,
    "body": "# Patching CVE-2007-4559\n\nHi, we are security researchers from the Advanced Research Center at [Trellix](https://www.trellix.com). We have began a campaign to patch a widespread bug named CVE-2007-4559. CVE-2007-4559 is a 15 year old bug in the Python tarfile package. By using extract() or extractall() on a tarfile object without sanitizing input, a maliciously crafted .tar file could perform a directory path traversal attack. We found at least one unsantized extractall() in your codebase and are providing a patch for you via pull request. The patch essentially checks to see if all tarfile members will be extracted safely and throws an exception otherwise. We encourage you to use this patch or your own solution to secure against CVE-2007-4559. Further technical information about the vulnerability can be found in this [blog](https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html).\n\nIf you have further questions you may contact us through this projects lead researcher [Kasimir Schulz](mailto:kasimir.schulz@trellix.com).\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Thanks for your contribution!"
    ],
    "commit_messages": [
      "Merge pull request #5565 from TrellixVulnTeam/main\n\nCVE-2007-4559 Patch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133644ee515ce6a4eaf1",
    "number": 5556,
    "body": "pytest-pypi is no longer maintained by us, and it is no longer used as we now use pypi-server package.",
    "head_branch": "remove-pytest-pypi-take-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5556 from pypa/remove-pytest-pypi-take-2\n\nRemove pytest pypi take 2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133744ee515ce6a4eaf2",
    "number": 5555,
    "body": "Fix #5536.",
    "head_branch": "fix-5536",
    "is_a_fork": false,
    "comments": [
      "Hi @oz123 , is there a planned release for this?",
      "Probably in the end of the month. We're both busy with work stuff. Sorry.",
      "Oh please, no worries. Thank you for maintaining this great tool! "
    ],
    "commit_messages": [
      "Merge pull request #5555 from pypa/fix-5536\n\nFix duplicate egg name when adding extras for package install from url"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133844ee515ce6a4eaf3",
    "number": 5553,
    "body": "Thank you for contributing to Pipenv!\r\n\r\nFixes #5462 \r\n\r\n\r\n### The issue\r\n\r\nSometimes users have index names defined in their Pipfile that do not correspond to actually defined sources.\r\n\r\n### The fix\r\n\r\nAlert the user when this happens with a human friendly message and exit with failure code.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "issue-5462",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5553 from pypa/issue-5462\n\nCatch StopIteration error and alert user and exit failure."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133944ee515ce6a4eaf4",
    "number": 5548,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5546 \r\nFixes #5545\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5546",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5548 from pypa/issue-5546\n\nFix for Issue 5546"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133a44ee515ce6a4eaf5",
    "number": 5547,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5494",
    "head_branch": "issue-fix-readme",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5547 from pypa/issue-fix-readme\n\nFix Readme.md links."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133a44ee515ce6a4eaf6",
    "number": 5544,
    "body": "### The issue\r\n\r\nThis flag, which was never fully explained in the documentation, leads to a source of a lot of confusion and issue because the underlying concept is flawed.   It cannot be used until a consistent lock file is generated with `pipenv lock` or `pipenv install` and then when applied it will bring in any new package from a new consistent lock phase which is not already defined in the `Pipfile.lock` thus often creating inconsistent and unexpected locks. \r\n\r\n### The fix\r\n\r\nThis was always a workaround to avoid managing the Pipfile specifiers and packages listed/pinned in the Pipfile, which is the inputs into the resolver for the new lock phase whenever modifying package requirements.  Instead, users that do not want packages updated while upgrading other packages should be pinning those in the Pipfile so they can be used as proper inputs to the pip resolver.\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\nI have considered for a year now how to make `--keep-outdated` better, but the reality is it was a flawed idea that existed before the switch to using the pip resolver, and it no longer makes sense to keep around because it leads to confusion and support tickets that shouldn't exist.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "deprecate-keep-outdated",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5544 from pypa/deprecate-keep-outdated\n\nDeprecate --keep-outdated flag."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133b44ee515ce6a4eaf7",
    "number": 5541,
    "body": "closes https://github.com/pypa/pipenv/issues/5540\r\n\r\n### The issue\r\n\r\nhttps://github.com/pypa/pipenv/issues/5540\r\n\r\n### The fix\r\n\r\nLookup the target package from the correct category instead of always using `[package]` category.\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "fix-update-outdate-dev-package",
    "is_a_fork": true,
    "comments": [
      "@shimpeko to fix the news fragment add double backticks around `update --outdated` ",
      "Thank you for your contribution! Please check the review.",
      "@oz123 thank you fore review 🙏 "
    ],
    "commit_messages": [
      "Merge pull request #5541 from shimpeko/fix-update-outdate-dev-package\n\n[fix] `update --outdated` raises NonExistentKey with dev package"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133c44ee515ce6a4eaf8",
    "number": 5539,
    "body": "vendoring pipenv 0.4.4 to add more robust Pipfile validation and address #5440.",
    "head_branch": "bump-vendored-plette",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5539 from pypa/bump-vendored-plette\n\nvendor: bump plette to 0.4.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133d44ee515ce6a4eaf9",
    "number": 5535,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5535 from palewire/patch-1\n\nFix typo in docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133e44ee515ce6a4eafa",
    "number": 5534,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nClean up the windows deprecation warnings for pipenv main branch.\r\n",
    "head_branch": "cleaner-deprecation-warnings",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5534 from pypa/cleaner-deprecation-warnings\n\nRemove CI from deprecation warning and only alert if env vars are set."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133f44ee515ce6a4eafb",
    "number": 5533,
    "body": "\r\n### The issue\r\n\r\nFixes #2538\r\n\r\n### The fix\r\n\r\nThe fix to import venv was ineffective, but this should retry without it if the first call resulted in error.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\nThere is an existing news fragment about fixing this.",
    "head_branch": "issue-2538-venv-creator",
    "is_a_fork": false,
    "comments": [
      "@oz123 I don't see where we maintain the docs for the environment variables -- I assume its an auto-generated page.  I think next up in line for me after fixing bugs is documentation overhaul. ",
      "All environment variables that are used to configure pipenv are documented here:\r\nhttps://pipenv.pypa.io/en/latest/advanced/#configuration-with-environment-variables\r\n\r\n\r\nIt's auto generated from  the Settings class in the environments module. "
    ],
    "commit_messages": [
      "Merge pull request #5533 from pypa/issue-2538-venv-creator\n\nRefactor virtualenv create logic and add retry if creator venv results in error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620133f44ee515ce6a4eafc",
    "number": 5529,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5486 \r\n\r\n### The fix\r\n\r\nThis checks if the marker has a value before adding it to the lock file.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "issue-5486-null-markers",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5529 from pypa/issue-5486-null-markers\n\nIssue 5486 null markers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134044ee515ce6a4eafd",
    "number": 5527,
    "body": "Bumps [certifi](https://github.com/certifi/python-certifi) from 2018.10.15 to 2022.12.7.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/9e9e840925d7b8e76c76fdac1fab7e6e88c1c3b8\"><code>9e9e840</code></a> 2022.12.07</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/b81bdb269f1edb791bcd4ec8a9d0c053758f961a\"><code>b81bdb2</code></a> 2022.09.24</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/939a28ffc57b1613770f572b584745c7b6d43e7d\"><code>939a28f</code></a> 2022.09.14</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/aca828a78e73235a513dff9ebc181a47ef7dbf7b\"><code>aca828a</code></a> 2022.06.15.2</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/de0eae12a6d5794a4c1e33052af6717707ce1fcc\"><code>de0eae1</code></a> Only use importlib.resources's new files() / Traversable API on Python ≥3.11 ...</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/b8eb5e9af9143b22b7f651942b393e369ed4c52a\"><code>b8eb5e9</code></a> 2022.06.15.1</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/47fb7ab715965684e035292d2ad3386aabdc4d25\"><code>47fb7ab</code></a> Fix deprecation warning on Python 3.11 (<a href=\"https://github-redirect.dependabot.com/certifi/python-certifi/issues/199\">#199</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/b0b48e059995f455ac1e79b3ad373ad4ef355516\"><code>b0b48e0</code></a> fixes <a href=\"https://github-redirect.dependabot.com/certifi/python-certifi/issues/198\">#198</a> -- update link in license</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997\"><code>9d514b4</code></a> 2022.06.15</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52\"><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=\"https://github-redirect.dependabot.com/certifi/python-certifi/issues/196\">#196</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/certifi/python-certifi/compare/2018.10.15...2022.12.07\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2018.10.15&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/certifi-2022.12.7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5527 from pypa/dependabot/pip/certifi-2022.12.7\n\nBump certifi from 2018.10.15 to 2022.12.7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134144ee515ce6a4eafe",
    "number": 5526,
    "body": "Bumps [certifi](https://github.com/certifi/python-certifi) from 2018.10.15 to 2022.12.7.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/9e9e840925d7b8e76c76fdac1fab7e6e88c1c3b8\"><code>9e9e840</code></a> 2022.12.07</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/b81bdb269f1edb791bcd4ec8a9d0c053758f961a\"><code>b81bdb2</code></a> 2022.09.24</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/939a28ffc57b1613770f572b584745c7b6d43e7d\"><code>939a28f</code></a> 2022.09.14</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/aca828a78e73235a513dff9ebc181a47ef7dbf7b\"><code>aca828a</code></a> 2022.06.15.2</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/de0eae12a6d5794a4c1e33052af6717707ce1fcc\"><code>de0eae1</code></a> Only use importlib.resources's new files() / Traversable API on Python ≥3.11 ...</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/b8eb5e9af9143b22b7f651942b393e369ed4c52a\"><code>b8eb5e9</code></a> 2022.06.15.1</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/47fb7ab715965684e035292d2ad3386aabdc4d25\"><code>47fb7ab</code></a> Fix deprecation warning on Python 3.11 (<a href=\"https://github-redirect.dependabot.com/certifi/python-certifi/issues/199\">#199</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/b0b48e059995f455ac1e79b3ad373ad4ef355516\"><code>b0b48e0</code></a> fixes <a href=\"https://github-redirect.dependabot.com/certifi/python-certifi/issues/198\">#198</a> -- update link in license</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997\"><code>9d514b4</code></a> 2022.06.15</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52\"><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=\"https://github-redirect.dependabot.com/certifi/python-certifi/issues/196\">#196</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/certifi/python-certifi/compare/2018.10.15...2022.12.07\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2018.10.15&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/docs/certifi-2022.12.7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5526 from pypa/dependabot/pip/docs/certifi-2022.12.7\n\nBump certifi from 2018.10.15 to 2022.12.7 in /docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134244ee515ce6a4eaff",
    "number": 5525,
    "body": "Bumps [certifi](https://github.com/certifi/python-certifi) from 2017.7.27.1 to 2022.12.7.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/9e9e840925d7b8e76c76fdac1fab7e6e88c1c3b8\"><code>9e9e840</code></a> 2022.12.07</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/b81bdb269f1edb791bcd4ec8a9d0c053758f961a\"><code>b81bdb2</code></a> 2022.09.24</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/939a28ffc57b1613770f572b584745c7b6d43e7d\"><code>939a28f</code></a> 2022.09.14</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/aca828a78e73235a513dff9ebc181a47ef7dbf7b\"><code>aca828a</code></a> 2022.06.15.2</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/de0eae12a6d5794a4c1e33052af6717707ce1fcc\"><code>de0eae1</code></a> Only use importlib.resources's new files() / Traversable API on Python ≥3.11 ...</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/b8eb5e9af9143b22b7f651942b393e369ed4c52a\"><code>b8eb5e9</code></a> 2022.06.15.1</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/47fb7ab715965684e035292d2ad3386aabdc4d25\"><code>47fb7ab</code></a> Fix deprecation warning on Python 3.11 (<a href=\"https://github-redirect.dependabot.com/certifi/python-certifi/issues/199\">#199</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/b0b48e059995f455ac1e79b3ad373ad4ef355516\"><code>b0b48e0</code></a> fixes <a href=\"https://github-redirect.dependabot.com/certifi/python-certifi/issues/198\">#198</a> -- update link in license</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997\"><code>9d514b4</code></a> 2022.06.15</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52\"><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=\"https://github-redirect.dependabot.com/certifi/python-certifi/issues/196\">#196</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/certifi/python-certifi/compare/2017.07.27.1...2022.12.07\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2017.7.27.1&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pypa/pipenv/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/examples/certifi-2022.12.7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5525 from pypa/dependabot/pip/examples/certifi-2022.12.7\n\nBump certifi from 2017.7.27.1 to 2022.12.7 in /examples"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134344ee515ce6a4eb00",
    "number": 5524,
    "body": "Fixed #5454 ",
    "head_branch": "piraartur-issue-5454",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5524 from piraartur/piraartur-issue-5454\n\nfixed broken link to non-existing philosophy subpage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134444ee515ce6a4eb01",
    "number": 5523,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n### The issue\r\n\r\nFixes #5479 ",
    "head_branch": "issue-5479",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5523 from pypa/issue-5479\n\nFix regression where wheel path is not included in the lockfile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134444ee515ce6a4eb02",
    "number": 5522,
    "body": "A churn of vendor bumps and related vistir cleanup.\r\nBecause we bumped the version of requirementslib, we could also now bump vistir.\r\nThis in turn allowed removing `spin.py` so our distribution size is smaller.\r\nAs a result, I found another usage of `vistir.misc.run` in the test suite.\r\nFinally, we bump colorama to a newer version which offers a clean API for fixing various issues with\r\nwindows consoles.\r\nIf no major issues are found by Windows users as a result of this change, we can move on to remove\r\neven more unmaintained code from vistir.",
    "head_branch": "bump-requirementslib",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5522 from pypa/bump-requirementslib\n\nMore vendor bumps"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134544ee515ce6a4eb03",
    "number": 5520,
    "body": "Thank you for contributing to Pipenv!\r\n\r\nPlease review this first:  https://github.com/pypa/pipenv/pull/5519\r\n\r\n\r\n### The issue\r\n\r\nBump pip version to latest 22.3.1",
    "head_branch": "vendor-pip-22.3.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5520 from pypa/vendor-pip-22.3.1\n\nvendor in Pip 22.3.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134644ee515ce6a4eb04",
    "number": 5519,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5493 ",
    "head_branch": "fix-ruamel-vendoring",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5519 from pypa/fix-ruamel-vendoring\n\nFix ruamel vendoring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134744ee515ce6a4eb05",
    "number": 5518,
    "body": "### The issue\r\n\r\nFixes #5477 \r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5101",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5518 from pypa/issue-5101\n\nFix issue with venv module not being available on some systems."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134744ee515ce6a4eb06",
    "number": 5516,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nNoticed a spelling error in the Quickstart docs when reading https://pipenv.pypa.io/en/latest/\r\n\r\n### The fix\r\n\r\nFixed spelling of word \"regenerate\" in `docs/quickstart.rst`\r\n\r\nThis seemed like such a simple fix, I did not bother with adding a news item, et al. Apologies if this means more work for the maintainers.",
    "head_branch": "spelling-fix-quickstart-regenarate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5516 from efinkler-dm/spelling-fix-quickstart-regenarate\n\nFix spelling error in docs/quickstart.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134844ee515ce6a4eb07",
    "number": 5513,
    "body": "The status object isn't callable. Instead, one should use the update method, or the print method of the console object.\r\n\r\nFix #5507 \r\n\r\n",
    "head_branch": "fix-5507",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5513 from pypa/fix-5507\n\ncore: fix bug introduced with rich.console"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134944ee515ce6a4eb08",
    "number": 5512,
    "body": "Need to let the test runner go and see if there is still a valid reason I added this conditional during named package categories feature work.   Fixes #5508 \r\n",
    "head_branch": "missing-index",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5512 from pypa/missing-index\n\nRemove newer code branch that prevents new sources from being added to lockfile."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134a44ee515ce6a4eb09",
    "number": 5504,
    "body": "Migrating to rich console, caused a regression, where virtualenv creation reporting was to stdout. This reporting got included in requirements.txt.\r\nThis fixes #5503.",
    "head_branch": "fix-5503",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5504 from pypa/fix-5503\n\nrequirements: fix generation of file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134b44ee515ce6a4eb0a",
    "number": 5501,
    "body": "### The issue\r\n\r\n#4819\r\n#5488\r\n\r\n### The fix\r\n\r\nNow, this command gets the packages to be analyzed from the target venv.\r\n\r\n",
    "head_branch": "fix/check-only-pipenv-managed-venv",
    "is_a_fork": true,
    "comments": [
      "Something not quite right with this change and the Windows CI.",
      "@yeisonvargasf A variation of these changes work for windows -- the primary issue is that the file gets-re-opened so it needs to be closed first.\r\n```\r\nPS C:\\Users\\matte\\Projects\\pipenv> git diff\r\ndiff --git a/pipenv/core.py b/pipenv/core.py\r\nindex acebcc20..494191cb 100644\r\n--- a/pipenv/core.py\r\n+++ b/pipenv/core.py\r\n@@ -2959,6 +2959,16 @@ def do_check(\r\n     if safety_project:\r\n         options.append(f\"--project={safety_project}\")\r\n\r\n+    target_venv_packages = run_command(\r\n+        _cmd + [\"-m\", \"pip\", \"list\", \"--format=freeze\"], is_verbose=project.s.is_verbose()\r\n+    )\r\n+\r\n+    temp_requirements = tempfile.NamedTemporaryFile(mode=\"w+\", prefix=f\"{project.virtualenv_name}\", suffix=\"_requirements.txt\", delete=False)\r\n+    temp_requirements.write(target_venv_packages.stdout.strip())\r\n+    temp_requirements.close()\r\n+\r\n+    options.extend([\"--file\", temp_requirements.name])\r\n+\r\n     cmd = _cmd + [safety_path, \"check\"] + options\r\n\r\n     if db:\r\n@@ -3044,6 +3054,8 @@ def do_check(\r\n\r\n     cli(prog_name=\"pipenv\")\r\n\r\n+    temp_requirements.remove()\r\n+\r\n\r\n def do_graph(project, bare=False, json=False, json_tree=False, reverse=False):\r\n     import json as jsonlib\r\ndiff --git a/tests/integration/test_cli.py b/tests/integration/test_cli.py\r\nindex f086cdfe..b6009d85 100644\r\n--- a/tests/integration/test_cli.py\r\n+++ b/tests/integration/test_cli.py\r\n@@ -140,7 +140,6 @@ def test_pipenv_graph_reverse(pipenv_instance_private_pypi):\r\n\r\n @pytest.mark.cli\r\n @pytest.mark.needs_internet(reason='required by check')\r\n-@pytest.mark.skip(\"Safety 2 ends up scanning the project virtualenv and not the instance created by this test.\")\r\n def test_pipenv_check(pipenv_instance_private_pypi):\r\n     with pipenv_instance_private_pypi() as p:\r\n         c = p.pipenv('install pyyaml')\r\n```",
      "@matteius, thank you! I pushed the fix for that case; let me know if there is something more to fix."
    ],
    "commit_messages": [
      "Merge pull request #5501 from yeisonvargasf/fix/check-only-pipenv-managed-venv\n\nGet packages for `pipenv check` from the target venv."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134c44ee515ce6a4eb0b",
    "number": 5498,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5494 and also some other documentation review/updates.",
    "head_branch": "issue-5494-docs",
    "is_a_fork": false,
    "comments": [
      "The issue as mentioned in #5494 has NOT been solved,  I just tried the 2 mentioned links and they don't point to the right place, in fact they have not changed at all.",
      "Our workflow closes tickets when the work gets merged.  It won't be published until the next release.",
      "Well looks like that either the workflow is not correct or that not on all places the code has been corrected in the 2022-11-30 release as I see on GitHub in the README.md on https://github.com/pypa/pipenv\r\n\r\n![image](https://user-images.githubusercontent.com/5223533/205030330-92c047b7-acb4-4a08-9f2a-4b7a1492f034.png)\r\n\r\nIn general I see the problem for:\r\n```\r\nREADME.md, line 47 '☤-user-testimonials'\r\nREADME.md, line 49 '☤-features'\r\nREADME.md, line 57 '☤-usage'\r\nREADME.md, line 85 '☤-documentation'\r\n```\r\n"
    ],
    "commit_messages": [
      "Merge pull request #5498 from pypa/issue-5494-docs\n\nDocumentation updates."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134c44ee515ce6a4eb0c",
    "number": 5497,
    "body": "Resolve #5496 \r\n\r\nhttps://packaging.python.org/en/latest/guides/dropping-older-python-versions/#dealing-with-the-universal-wheels\r\n\r\n> Traditionally, projects providing Python code that is semantically compatible with both Python 2 and Python 3, produce [wheels](https://packaging.python.org/en/latest/glossary/#term-Wheel) that have a `py2.py3` tag in their names. When dropping support for Python 2, it is important not to forget to change this tag to just `py3`. It is often configured within setup.cfg under the `[bdist_wheel]` section by setting `universal = 1` if they use setuptools.\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "universal-wheel",
    "is_a_fork": true,
    "comments": [
      "FWIW, \"Squash and Merge\" discards commit signatures:\r\n![image](https://user-images.githubusercontent.com/48501491/203617921-5ae4ac08-c152-4f82-b31d-d300aff3c005.png)\r\nbecomes\r\n![image](https://user-images.githubusercontent.com/48501491/203617967-77513813-91dc-47f4-8fec-b46c55d279f7.png)\r\n",
      "Sorry about that, it's my default but definitely did not need to be squashed on your PR.",
      "No worries, it's NBD... Just thought I'd mention it since most people aren't aware of it 😊 "
    ],
    "commit_messages": [
      "Stop building universal wheels (#5497)\n\nPython 2 is no longer supported."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134d44ee515ce6a4eb0d",
    "number": 5495,
    "body": "Fixes #5492 ",
    "head_branch": "fix-ruamel",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix ruammel inclusion in wheel. (#5495)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134e44ee515ce6a4eb0e",
    "number": 5492,
    "body": "### The issue\r\n\r\n#5491 \r\n\r\n### The fix\r\n\r\nInclude the missing package data for Safety.\r\n\r\n### The checklist\r\n\r\n* [ ] Build wheels and test if it is working fine.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "fix/include-safety-package-data",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Include missing package data for Safety. (#5492)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620134f44ee515ce6a4eb0f",
    "number": 5487,
    "body": "\r\n### The issue\r\n\r\nOne of the important tell-tell tests was failing for windows/python 3.7 and I finally tracked down the exact change that caused it.\r\n\r\n### The fix\r\n\r\nI realized that pip encountered a similar issue with the default TemporaryDirectory class from tempfile and already had there only TempDirectory class that works nicely for this use case.\r\n\r\n\r\n",
    "head_branch": "fix-win-3.7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5487 from pypa/fix-win-3.7\n\nRemove QuasiPipTempDirectory and use pip's TempDirectory."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135044ee515ce6a4eb10",
    "number": 5483,
    "body": "Compiling [vendor/requirementslib/models/metadata.py](https://github.com/pypa/pipenv/blob/30be4768010493cbcbef56752ae85f5c27b13b93/pipenv/vendor/requirementslib/models/metadata.py) raised a `SyntaxError`:\r\n\r\n    ***   File \"/gnu/store/62ms8p25ilrw7vrz5fn8fjf4pds10b02-pipenv-2022.11.11/lib/python3.9/site-packages/pipenv/vendor/requirementslib/models/metadata.py\", line 17\r\n        from pipenv.patched.pip._vendor.distlib.metadata import import Metadata\r\n                                                                ^\r\n    SyntaxError: invalid syntax\r\n\r\nFound through `python -m compileall /pipenv/source/` when trying to add pipenv to [Guix](https://guix.gnu.org/).",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Would it be possible and sensible to run `compileall` in CI?",
      "@haplo Should be possible but I am not familiar with `compileall`.  Can you also correct the source of where this problem came from:  https://github.com/pypa/pipenv/blob/main/tasks/vendoring/__init__.py#L90",
      "@matteius I included a fix for the vendoring task.",
      "@haplo can you please fix the linting issue?",
      "Sorry about that, fixed now @oz123 "
    ],
    "commit_messages": [
      "Fix syntax error in requirementslib vendor (#5483)\n\nCompiling this file raised a SyntaxError:\r\n\r\n    ***   File \"/gnu/store/62ms8p25ilrw7vrz5fn8fjf4pds10b02-pipenv-2022.11.11/lib/python3.9/site-packages/pipenv/vendor/requirementslib/models/metadata.py\", line 17\r\n        from pipenv.patched.pip._vendor.distlib.metadata import import Metadata\r\n                                                                ^\r\n    SyntaxError: invalid syntax\r\n\r\nFound through `python -m compileall /pipenv/source/` when trying to add pipenv to\r\n[Guix](https://guix.gnu.org/).\r\n\r\nAlso include fix for root cause: wrong replacement in vendoring task."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135144ee515ce6a4eb11",
    "number": 5481,
    "body": "As we now bumped requirementslib, we could now also bump vistir to 0.7.4.\r\nThis in turn forces us to make some tiny changes, and allows us to finally drop yaspin.",
    "head_branch": "bump-version-requirementslib",
    "is_a_fork": false,
    "comments": [
      "@matteius all tests pass, besides Python3.7, but this is unrelated to the changes I did. "
    ],
    "commit_messages": [
      "Merge pull request #5481 from pypa/bump-version-requirementslib\n\nBump version requirementslib and more vendor clean up"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135144ee515ce6a4eb12",
    "number": 5480,
    "body": "### The issue\r\n\r\n- The pipenv new Safety implementation is using a subprocess.\r\n\r\n- There isn't a non-verbose output.\r\n\r\nThis pull request is related to https://github.com/pypa/pipenv/pull/5218\r\n\r\n### The fix\r\n\r\n- `pipenv check` uses Safety directly, replacing the Safety implementation with a subprocess.\r\n\r\n- Added a new `minimal` output, a non-verbose output.\r\n",
    "head_branch": "new-pipenv-check",
    "is_a_fork": true,
    "comments": [
      "@matteius and @oz123, please review it and let me know if you need any further changes so this PR can be merged into the @matteius branch (`vendor-latest-safety2`).\r\n\r\nNote: CI will probably fail as the `main` branch CI status is also falling."
    ],
    "commit_messages": [
      "Merge pull request #5480 from yeisonvargasf/new-pipenv-check\n\nNew pipenv check with minimal output"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135344ee515ce6a4eb13",
    "number": 5476,
    "body": "### The issue\r\n\r\n- The pipenv new Safety implementation is using a subprocess.\r\n\r\n- There isn't a non-verbose output.\r\n\r\nThis pull request is related to https://github.com/pypa/pipenv/pull/5218\r\n\r\n### The fix\r\n\r\n- `pipenv check` uses Safety directly, replacing the Safety implementation with a subprocess.\r\n\r\n- Added a new `minimal` output, a non-verbose output.\r\n",
    "head_branch": "safety2-without-subprocess",
    "is_a_fork": true,
    "comments": [
      "@yeisonvargasf your vendoring stage is failing because you started off with an outdated branch.\r\n\r\nPlease cherry-pick this commit onto your branch;\r\n\r\nhttps://github.com/pypa/pipenv/commit/6f8831316c21aeeb6929bfbb1b4460bd3731d4e5\r\n\r\n",
      "@yeisonvargasf can you please rebase your changes on top of the current main branch?",
      "Thanks, @oz123! I rebased my changes on top of the current main branch.\r\n\r\nThe PR base branch is the @matteius branch; do we need to change the `base` branch to `main`?\r\n\r\nOn the other hand, running the tests in my local environment fails because Safety detects a vulnerability in the tested environment. Could you help to review that?\r\n\r\nAfter the test issue is solved, we'll need vendoring the latest Safety version that PyUp will release next week; it fixes an issue related to `ruamel` and its use in `pipenv check`.",
      "@yeisonvargasf we don't have `base` branch, it's just `main`. Currently, your PR isn't mergeable. Please rebase again. ",
      "@yeisonvargasf I don't know if you could go back to the way this branch was before the attempted rebase?  It probably would have worked smoother to have merged main branch changes into this fork/branch instead of how this rebase was done.",
      "I can update my branch with the latest main changes now if that helps, you can continue to target that branch, but right now the commit history here seems corrupted from the rebasing, perhaps you can cherry-pick your original commits to a new branch off my updated branch?",
      "I have pushed the updated changes from main to my branch `vendor-latest-safety2`",
      "I think the same, so sure, @matteius; I'll create a new branch and make a new PR with the `vendor-latest-safety2` as a target."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135344ee515ce6a4eb14",
    "number": 5470,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\n```\r\npipenv shell\r\n```\r\n\r\ndoesn't recognise nushell, follow up of https://github.com/pypa/pipenv/pull/5336\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue: None\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "feat/shells/support-for-nushell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5470 from efugier/feat/shells/support-for-nushell\n\nfeat(shells): support nushell"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135444ee515ce6a4eb15",
    "number": 5468,
    "body": "pip uses rich to create spinner and print terminal colors. This PR migrates from yaspin which we ship\r\nto rich spinners. \r\n\r\nThis is done now. A follow-up PR will bump vistir to 0.7.4 which actually allows removing yaspin from vendor.\r\nHowever, this is currently blocked by requirementslib, which still needs vistir==0.7.0.",
    "head_branch": "remove-yaspin-spinner",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5468 from pypa/remove-yaspin-spinner\n\nRemove yaspin spinner"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135544ee515ce6a4eb16",
    "number": 5467,
    "body": "Keep things smaller and clear :-)\r\n",
    "head_branch": "drop-wheel-from-vendor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5467 from pypa/drop-wheel-from-vendor\n\nvendor: drop more unused code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135644ee515ce6a4eb17",
    "number": 5464,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5456\r\n\r\nAfter named package categories was released, the lock file generation had the default behavior of `--keep-outdated` being passed true.\r\n",
    "head_branch": "issue-5456",
    "is_a_fork": false,
    "comments": [
      "Code linting is broken, but other than that it looks fine .",
      "FYI, I believe this PR has introduced a bug for local packages.\r\nThe lines:\r\n```python\r\nif not keep_outdated:\r\n    try:\r\n        del lockfile[category]\r\n    except KeyError:\r\n        pass\r\n```\r\nforces the category to be resolved latter. This strips the `path` key for local packages which does not get reintroduced into the lockfile later. This causes a `cannot resolve package error` during installation despite Pipfile.lock being created.\r\n\r\ni.e. the Pipfile.lock for the `<LOCAL_PACKAGE>` loses the path.\r\n```json\r\n\"<LOCAL_PACKAGE>\": {\r\n    \"hashes\": [\r\n        \"sha256:<VALUE>\"\r\n    ],\r\n    \"path\": \"<PATH>\"\r\n}\r\n```\r\nbecomes\r\n```json\r\n\"<LOCAL_PACKAGE>\": {\r\n    \"hashes\": [\r\n        \"sha256:<VALUE>\"\r\n    ]\r\n}\r\n```",
      "Can you please open a separate issue, so it's easier to track?",
      "> Can you please open a separate issue, so it's easier to track?\r\n\r\nhttps://github.com/pypa/pipenv/issues/5542"
    ],
    "commit_messages": [
      "Merge pull request #5464 from pypa/issue-5456\n\nIssue 5456"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135744ee515ce6a4eb18",
    "number": 5461,
    "body": "### The issue\r\n\r\nI upgraded  from 2022.10.25 to 2022.11.5 and I figured out that my PIPENV_MAX_DEPTH env variable was not taken into account anymore. I had to use PIPENV_PIPENV_MAX_DEPTH. So here is a PR to fix the issue.\r\n\r\nBug introduces here: https://github.com/pypa/pipenv/pull/5451/files#diff-f74d4ef3c891c83b08a2b15b21602d0c31859892478cc4f56bf5be1a2c5092ecL185",
    "head_branch": "fix_max_depth",
    "is_a_fork": true,
    "comments": [
      "That seems like an odd fix -- I wonder why the variables would be automatically prefixed with `PIPENV_` now?",
      "@matteius that is because the earlier code was inconsistent, and the PR @micahjsmith fixed things. He introduced a method\r\nto get all the variables consistently. This added a PREFIX, and there was a one off that slipped through:\r\n[\r\n](https://github.com/micahjsmith/pipenv/blob/93e97b75104f7b72017f7bf8e1cfd61b518f1a01/pipenv/environments.py#L20)",
      "Awesome, thanks!",
      "My bad, thanks for catching this @bjorand !"
    ],
    "commit_messages": [
      "Merge pull request #5461 from bjorand/fix_max_depth\n\nfix PIPENV_MAX_DEPTH environment variable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135744ee515ce6a4eb19",
    "number": 5460,
    "body": "Quick fix to roll back change of vendoring of colorama to solve issue report.\r\n\r\n### The issue\r\n\r\nFixes #5458 \r\nFixes #5459\r\n\r\n",
    "head_branch": "issue-5458",
    "is_a_fork": false,
    "comments": [
      "Try https://pypi.org/project/rich instead?",
      "@cclauss worth exploring, but pip also includes colorama and the breakage came about from trying to use that version rather than what we already had.  Only had time to fix the release, but if you want to open a ticket to explore that, seems good.",
      "i had same problem you can upgrade your python 11 error will gone",
      "Regarding rich: I have a plan to remove the spinner class we use in favor of rich.\r\nRich itself uses colorama in Windows, and it isn't a replacement. However, once the Yaspin spinner from vistir is removed we definitely remove our version of colorama. ",
      "The final report used to say `3 of 25 dependencies were updated` (or similar).  Would it be possible to bring that back?",
      "Running which command?"
    ],
    "commit_messages": [
      "Roll back change vendoring of colorama. (#5460)\n\n* Roll back change vendoring of colorama.\r\n\r\n* Add back colorama version that worked.\r\n\r\n* Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135844ee515ce6a4eb1a",
    "number": 5451,
    "body": "### The issue\r\n\r\nSee #5407\r\n\r\n* some pipenv settings are insufficiently documented, especially in terms of how to disable them\r\n* implementation of pipenv settings detection is inconsistent, even though `pipenv.environments.get_from_env` exists as a pretty hardened utility\r\n\r\n### The fix\r\n\r\n* refactor all relevant settings to use get_from_env, which more explicitly allows settings to be disabled\r\n    * add default kwarg to get_from_env\r\n* update docs to indicate how to explicitly disable a setting\r\n\r\nOther changes\r\n- Fix rst in contributing guide\r\n- Refactor out is_env_truthy\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "micahjsmith/gh-5407",
    "is_a_fork": true,
    "comments": [
      "@oz123 I'm getting this failed test case below. is it possible the test case is broken because a new vulnerability for `wheel` has been reported (`51499`)? a bit of a funky test case because it seems to assume that there will never be a new vulnerability in any of the installed packages. unless I am misinterpreting what is happening here\r\n\r\n```\r\n_________________________________________________________________________________________________________________________________________________________________________ test_pipenv_check __________________________________________________________________________________________________________________________________________________________________________\r\n\r\npipenv_instance_private_pypi = functools.partial(<class 'tests.integration.conftest._PipenvInstance'>, capfd=<_pytest.capture.CaptureFixture object at 0x1162d8190>)\r\n\r\n    @pytest.mark.cli\r\n    @pytest.mark.needs_internet(reason='required by check')\r\n    @flaky\r\n    def test_pipenv_check(pipenv_instance_private_pypi):\r\n        with pipenv_instance_private_pypi() as p:\r\n            c = p.pipenv('install pyyaml')\r\n            assert c.returncode == 0\r\n            c = p.pipenv('check')\r\n            assert c.returncode != 0\r\n            assert 'pyyaml' in c.stdout\r\n            c = p.pipenv('uninstall pyyaml')\r\n            assert c.returncode == 0\r\n            c = p.pipenv('install six')\r\n            assert c.returncode == 0\r\n            c = p.pipenv('check --ignore 35015')\r\n>           assert c.returncode == 0\r\nE           assert 1 == 0\r\nE            +  where 1 = <Result SystemExit(1)>.returncode\r\n\r\ntests/integration/test_cli.py:156: AssertionError\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------ Captured stdout call ------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n$ pipenv check --ignore 35015\r\nChecking PEP 508 requirements...\r\nPassed!\r\nChecking installed package safety...\r\n51499: wheel <0.38.0 resolved (0.37.1 installed)!\r\nWheel 0.38.0 fixes a potential DoS attack via the 'WHEEL_INFO_RE' regular expression.\r\n\r\n\r\nCommand failed...\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------ Captured stderr call ------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nNotice: Ignoring CVE(s) 35015\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/micahsmith/workspace/pipenv/.venv/lib/python3.10/site-packages/click/testing.py\", line 408, in invoke\r\n    return_value = cli.main(args=args or (), prog_name=prog_name, **extra)\r\n  File \"/Users/micahsmith/workspace/pipenv/pipenv/cli/options.py\", line 57, in main\r\n    return super().main(*args, **kwargs, windows_expand_args=False)\r\n  File \"/Users/micahsmith/workspace/pipenv/pipenv/vendor/click/core.py\", line 1053, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Users/micahsmith/workspace/pipenv/pipenv/vendor/click/core.py\", line 1659, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/Users/micahsmith/workspace/pipenv/pipenv/vendor/click/core.py\", line 1395, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Users/micahsmith/workspace/pipenv/pipenv/vendor/click/core.py\", line 754, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"/Users/micahsmith/workspace/pipenv/pipenv/vendor/click/decorators.py\", line 84, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/Users/micahsmith/workspace/pipenv/pipenv/vendor/click/core.py\", line 754, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"/Users/micahsmith/workspace/pipenv/pipenv/cli/command.py\", line 480, in check\r\n    do_check(\r\n  File \"/Users/micahsmith/workspace/pipenv/pipenv/core.py\", line 2921, in do_check\r\n    sys.exit(1)\r\nSystemExit: 1\r\n```",
      "went ahead and updated the test case to ignore the new vulnerability, tests pass locally now",
      "@micahjsmith see my PR #5450 there is a fix for that wheel issue . Thank you for putting up the time for this PR! "
    ],
    "commit_messages": [
      "Merge pull request #5451 from micahjsmith/micahjsmith/gh-5407\n\nConsolidate pipenv settings to use get_from_env"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135944ee515ce6a4eb1b",
    "number": 5450,
    "body": "Another bunch of vendor clean-up. \r\n\r\nThese make pipenv distribution a bit smaller. ",
    "head_branch": "more-vendor-clean-up",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5450 from pypa/more-vendor-clean-up\n\nMore vendor clean up"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135a44ee515ce6a4eb1c",
    "number": 5448,
    "body": "### The issue\r\n\r\nAfter upgrading pip to 22.3 there were cases where users had multiple index defined and the resolution of which index to use changed during install causing hash validation to fail.\r\n\r\nFixes #5444 \r\n\r\n### The fix\r\n\r\nTechnically it as never that correct to be passing all sources using extra index URLs when user has default behavior of `install_search_all_sources = false` -- \r\n**note:** this won't fix what I believe to be a change in behavior to pip that may still cause issues for users that have `install_search_all_sources = true` however this brings the pipenv behaviors more in line with whats expected by ensuring complete isolation of the index assigned to each package.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-5444",
    "is_a_fork": false,
    "comments": [
      "Please cherry pick the following commit to fix the CI:\r\nbe92e26606fe750210c391f17318c8eaf06c51ef \r\nand \r\n6f8831316c21aeeb6929bfbb1b4460bd3731d4e5\r\nfrom https://github.com/pypa/pipenv/pull/5450 \r\n"
    ],
    "commit_messages": [
      "Merge pull request #5448 from pypa/issue-5444\n\nFixes issue with unexpected package index resolution after upgrading pip to 22.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135b44ee515ce6a4eb1d",
    "number": 5438,
    "body": "### Change Description\r\n\r\nHello, Pipenv community!\r\n\r\nSince the **pipenv** project is now integrated with [Foresight](https://runforesight.com/) (#5433) and the project's workflow runs are listed publicly at [pypa.app.runforesight.com](https://pypa.app.runforesight.com/), displaying the test run results on the README would improve the accessibility throughtout the community. \r\n\r\nThe badge looks as such;\r\n[![image](https://api-public.service.runforesight.com/api/v1/badge/test?repoId=a9acfd31-fca9-4ebb-a449-c7bf0f85a481)](https://pypa.app.runforesight.com)\r\n\r\nThis change adds the said status badge for the pipenv workflow runs and links the project's public page on Foresight.\r\n\r\n\r\n\r\n",
    "head_branch": "foresight-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5438 from rwxdash/foresight-badge\n\nAdd Foresight status badge to README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135c44ee515ce6a4eb1e",
    "number": 5437,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "@oz123 Please Review!!\r\n",
      "@kailashchoudhary11 Sir we will review your PR -- it has been open for 4 hours and we both have full time jobs besides pipenv.  Thanks for understanding!",
      "> @kailashchoudhary11 Sir we will review your PR -- it has been open for 4 hours and we both have full time jobs besides pipenv. Thanks for understanding!\r\n\r\nOkay I'm Sorry 😅 "
    ],
    "commit_messages": [
      "Merge pull request #5437 from kailashchoudhary11/main\n\nDocs(Readme) : Added Table of Contents"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135c44ee515ce6a4eb1f",
    "number": 5436,
    "body": "This is partial fix for #5234. Further work is still required in `tasks/release.py`",
    "head_branch": "docs-improvements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5436 from pypa/docs-improvements\n\nDocs improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135d44ee515ce6a4eb20",
    "number": 5434,
    "body": "Updated the outdated copyright year to the present.",
    "head_branch": "pacth-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5434 from bluzir/pacth-1\n\nchore: Update outdated LICENSE year"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135e44ee515ce6a4eb21",
    "number": 5433,
    "body": "Hi `pipenv` community,\r\n\r\n### The issue\r\n\r\nCurrently, Foresight (https://www.runforesight.com/) is integrated into this repository to monitor CI pipelines and insights are publicly available here: pypa.app.runforesight.com\r\n\r\nBut for more detailed monitoring and richer insights, Foresight needs its Github actions to be added into the workflows.\r\n\r\n### The fix\r\n\r\nThis pull request adds Foresight `workflow-kit` and `test-kit` Github actions into **`CI `** (`ci.yml`) and **`Upload Python Package`** (`pypi_upload.yml`) workflows to collect workflow resource usage metrics, process traces and test results.\r\n\r\nNote that in the PR, even though `FORESIGHT_API_KEY` is passed to the Foresight Github actions from secrets, it is OK to leave it undefined/empty. Because there is no need for an API key as we support \"tokenless authentication\" for open-source projects :)\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "feature/added-foresight",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5433 from runforesight/feature/added-foresight\n\nadded foresight workflow and test kit actions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620135f44ee515ce6a4eb22",
    "number": 5431,
    "body": "Closes: https://github.com/pypa/pipenv/issues/5397\r\n\r\nThis adds a `category` option to the `requirements` command. If specified a category, it will only generate the requirements of that category.",
    "head_branch": "add-cmd-option-category",
    "is_a_fork": true,
    "comments": [
      "Awesome work! Can you add a news snippet?\r\nThen we are ready to merge.",
      "Thank you @oz123 😄,\r\n\r\n> Can you add a news snippet?\r\n\r\nI am not sure what is news snippet. Can you help me here.",
      "We use a tool called town crier to update the changelog for the releases . \r\nIf you check the directory `news` you'll see what are these snippets.\r\nEvery time the release is created the are removed, so you can also look at the history of this directory.\r\nHope this helps. Thanks again for your contribution!",
      "Thanks @oz123,\r\nI have added news. Let me know if that requires some changes.",
      "Thanks For Merging @oz123.\r\nCan you also add `hacktoberfest-accepted` label in the PR."
    ],
    "commit_messages": [
      "Merge pull request #5431 from dojutsu-user/add-cmd-option-category\n\nAdd support for multiple categories in exported requirements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136044ee515ce6a4eb23",
    "number": 5430,
    "body": "Instead, we use `pipenv.utils.shell.load_path`.\r\n\r\n",
    "head_branch": "remove-usage-of-vistir-run",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5430 from pypa/remove-usage-of-vistir-run\n\nRewrite Environment.sys_path without vistir.misc.run"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136044ee515ce6a4eb24",
    "number": 5420,
    "body": "platformdirs is the actively maintained fork of appdirs. In addition, platformdirs is included in pip, so we can use that directly.",
    "head_branch": "migrate-appdirs-platform-dirs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5420 from pypa/migrate-appdirs-platform-dirs\n\nRemove appdirs.py in favor of platformdirs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136144ee515ce6a4eb25",
    "number": 5419,
    "body": "Following #5390 I realized this code is duplicated into pipenv, and we can use that instead of the one in vistir.",
    "head_branch": "remove-vistir-cmdparse",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5419 from pypa/remove-vistir-cmdparse\n\nRemove usage of vistir.cmdparse"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136244ee515ce6a4eb26",
    "number": 5414,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nNew version of `pip==22.3` was released on October 15th.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "pip-22.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5414 from pypa/pip-22.3\n\nVendor in Pip 22.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136344ee515ce6a4eb27",
    "number": 5412,
    "body": "Thank you for contributing to Pipenv!\r\n\r\nThe VCS Support Link was outdated, so I have tried to update it with the current latest link.",
    "head_branch": "refactor/update_link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Link For VCS Support (#5412)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136444ee515ce6a4eb28",
    "number": 5410,
    "body": "I've noticed a missing backtick in the documentation that made some part of the documentation to look like code, when it shouldn't.\r\nThis PR fixes it.",
    "head_branch": "missing-backtick-in-documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing backtick in the contributing documentation. (#5410)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136544ee515ce6a4eb29",
    "number": 5405,
    "body": "Hi\r\n\r\n- Fixes for deprecated workflow syntax: #5404\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue #5404 \r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "ci-warnings-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5405 from AlexNDRmac/ci-warnings-fix\n\nReplace deprecated workflow command"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136644ee515ce6a4eb2a",
    "number": 5402,
    "body": "As the last commit says, this function is obsolete.",
    "head_branch": "remove-mkdir-p",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5402 from pypa/remove-mkdir-p\n\nRemove usage of mkdir_p in favour of os.makedirs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136644ee515ce6a4eb2b",
    "number": 5401,
    "body": "Fix #5395\r\n\r\n",
    "head_branch": "bump-plette",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump plette to v0.4.2 (#5401)\n\nFix #5395"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136744ee515ce6a4eb2c",
    "number": 5400,
    "body": "### The issue\r\n\r\nThe documentation sidebar contains a \"Recommended Packages \" that points to a page in Request's documentation, not in Pipenv's\r\n\r\n### The fix\r\n\r\nRemove the bad link\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5400 from feuloren/patch-1\n\nRemove recommended packages link in doc sidebar"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136844ee515ce6a4eb2d",
    "number": 5399,
    "body": "### The issue\r\n\r\nLack of build isolation means that build requirements no longer are implicitly installed and have to be installed ahead of time.  I am revisiting that decision to change the default isolation level because I feel it has already caused enough problems with existing workflows, and I realized an alternate solution is to recommend users that have issues requiring pre-requisites to pass ` --extra-pip-args=\"--no-build-isolation\"` in their install or sync commands.\r\n\r\nFixes #5391 \r\nFixes #5398 \r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5398",
    "is_a_fork": false,
    "comments": [
      "Thank you guys for engaging so quickly with this problem."
    ],
    "commit_messages": [
      "Merge pull request #5399 from pypa/issue-5398\n\nRevert back to build isolation by default; support extra-pip-args on sync command."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136944ee515ce6a4eb2e",
    "number": 5396,
    "body": "### The issue\r\n\r\nMissed the docs on this one: https://github.com/pypa/pipenv/pull/5390\r\nSo updated it. Also noticed could improve the error message if command parsed wrongly so updated that too.\r\n\r\n### The fix\r\n\r\nUpdated docs\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "Update-docs-for-script-calls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5396 from jerempy/Update-docs-for-script-calls\n\nUpdate documentation for callable scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136944ee515ce6a4eb2f",
    "number": 5394,
    "body": "Run vendoring and add news fragment.\r\nFollowup for:  https://github.com/pypa/pipenv/pull/5393",
    "head_branch": "issue-5392",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Followup plette update: run vendoring script + news fragment (#5394)\n\n* run vendoring script.\r\n\r\n* Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136a44ee515ce6a4eb30",
    "number": 5393,
    "body": "### The issue\r\n\r\nFixes #5392 \r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\nnews fragement and vendoring run in:  https://github.com/pypa/pipenv/pull/5394\r\n\r\n",
    "head_branch": "issue-5392",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5393 from pypa/issue-5392\n\nFix for the meta data not getting updated in the lock phase."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136b44ee515ce6a4eb31",
    "number": 5390,
    "body": "### The issue\r\n\r\nRequested new feature to add the ability to include something like:\r\n```[scripts]\r\nmain = {call = \"foo_package.bar_module:main('dev')\"}\r\n```\r\n\r\n   https://github.com/pypa/pipenv/issues/5294\r\n\r\n### The fix\r\n\r\nThis adds the ability to parse a callable with module.func in scripts\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "Scripts-run-package-functions",
    "is_a_fork": true,
    "comments": [
      "Also, should probably get an update to: https://pipenv.pypa.io/en/latest/advanced/#custom-script-shortcuts",
      "@matteius can you please resolve the merge conflicts?",
      "@jerempy Hey -- looks like there is merge conflict with the named package categories work that got merged -- could you rebase?"
    ],
    "commit_messages": [
      "Merge pull request #5390 from jerempy/Scripts-run-package-functions\n\nScripts run package functions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136c44ee515ce6a4eb32",
    "number": 5389,
    "body": "Remove small leftovers and unused import.\r\n",
    "head_branch": "clean-conftest",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5389 from pypa/clean-conftest\n\nClean conftest"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136d44ee515ce6a4eb33",
    "number": 5388,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nThis is to help silence most of the warnings when running pytest. Some test files when run individually would yield 70+ warnings about unreigstered custom pytest.marks. \r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nI registered them in the pyproject.toml per this: https://docs.pytest.org/en/stable/how-to/mark.html\r\n\r\nI gave them a description as best as I could tell from what the tests were doing.\r\n\r\nI didn't include all, but most of them. I left out ones that there were only a couple of. \r\nrunning `pipenv run pytest --markers`\r\nwill yield (in addition to the baked in markers):\r\n\r\n```\r\n@pytest.mark.install: tests having to do with `pipenv install`\r\n@pytest.mark.needs_internet: integration tests that require internet to pass\r\n@pytest.mark.basic: basic pipenv tests grouping\r\n@pytest.mark.dev: tests having to do with dev and dev packages\r\n@pytest.mark.system: related or interacting with the os\r\n@pytest.mark.utils: grouping of pipenv utility functions\r\n@pytest.mark.cli: test grouping that relate to command line like `pipenv --flag args`\r\n@pytest.mark.requirements: tests that save and alter pip requirements\r\n@pytest.mark.run: tests that run or execute python through pipenv\r\n@pytest.mark.script: grouping of tests that execute scripts\r\n@pytest.mark.keep_outdated: when an activity is supposed to keep something out of date\r\n@pytest.mark.lock: tests that interact with pipenv lock\r\n@pytest.mark.markers: pipenv environment markers\r\n@pytest.mark.vcs: tests integration with pipenv and vertsion control systems\r\n@pytest.mark.project: tests with the project object\r\n@pytest.mark.sync: related to `pipenv sync`\r\n@pytest.mark.rrule: relating to rrules (as in recurring time)\r\n@pytest.mark.tzoffset: timezone offset\r\n@pytest.mark.gettz: tests with gettz (get timezone) from dateutil lib\r\n@pytest.mark.tzstr: timezone string\r\n@pytest.mark.extras:\r\n@pytest.mark.extended:\r\n@pytest.mark.ext: extra non-categorized tests\r\n```\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "Register-pytest-markers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5388 from jerempy/Register-pytest-markers\n\nAdd pytest.markers to pyproject.toml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136e44ee515ce6a4eb34",
    "number": 5387,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\nhttps://github.com/pypa/pipenv/issues/5345\r\n\r\nA user requested that when the full version is specified that it gets added to a new pipfile when it is created so that he/she wouldn't need to manually add it themselves.\r\n\r\n\r\n### The fix\r\n\r\nFound the spot where the pipefile [requires] section gets created and modified it slightly to save based on if full version was specified or not.\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "python_full_version-in-pipfile",
    "is_a_fork": true,
    "comments": [
      "thanks @oz123 ! we should be good to go now 😎 ",
      "Please rename the news snippet to:   5345.behavior.rst",
      "As I suspected this change leads to breakage of CI.\r\n```\r\nSuccessfully set up CPython (3.7.14)\r\n\r\n```\r\n\r\nI think that pinning to a minor version is not a good thing. Unless it's additional. What I mean is, we should have both, e.g.:\r\n\r\n```\r\npython_version=3.7\r\npython_full_verison=3.7.14\r\n```",
      "@oz123 I updated it so now the pipfile will record both the python version and the full version in addition if specified. Also updated tests so should work for whatever python version the test is running. Sorry for the back and forth and hopefully we good to go now 🤞 ",
      "OK. Already very promising. Just add some more explanation to the news file, and we are good to go.",
      "What happens if a new minor version is released?   Will users have to manually update the `python_full_version`? \r\nEDIT: Ah -- nevermind -- I see it only populates this **if** a full version is specified."
    ],
    "commit_messages": [
      "Merge pull request #5387 from jerempy/python_full_version-in-pipfile\n\nPython full version in pipfile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136e44ee515ce6a4eb35",
    "number": 5386,
    "body": "We had a local version with a patch to remove yaml. This was also merged upstream.",
    "head_branch": "bump-dparse",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5386 from pypa/bump-dparse\n\nBump dparse version to 0.6.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620136f44ee515ce6a4eb36",
    "number": 5384,
    "body": "We were two versions behind the latest wheel package.\r\n\r\n\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "vendor-latest-wheel",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5384 from pypa/vendor-latest-wheel\n\nVendor latest wheel"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137044ee515ce6a4eb37",
    "number": 5383,
    "body": "Fixes #5266 \r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "issue-5266-docs",
    "is_a_fork": false,
    "comments": [
      "@oz123 -- The problem I ran into is which part of the lockfile to not show?   Since all of it gets consumed by the subsequent requirements command examples, I thought it might be useful for people to see that the markers are brought over and that the output represents all of the packages from those sections.  ",
      "I would just include this: \r\n```\r\n{\r\n            \"_meta\": {\r\n                    \"hash\": {\r\n                            \"sha256\": \"4b81df812babd4e54ba5a4086714d7d303c1c3f00d725c76e38dd58cbd360f4e\"\r\n                    },\r\n                    \"pipfile-spec\": 6,\r\n                    \"requires\": {},\r\n                    \"sources\": [\r\n                            {\r\n                                    \"name\": \"pypi\",\r\n                                    \"url\": \"https://pypi.python.org/simple\",\r\n                                    \"verify_ssl\": true\r\n                            }\r\n                    ]\r\n            },\r\n            \"default\": {\r\n\t\t\t... snipped ...\r\n                    \"requests\": {\r\n                            \"hashes\": [\r\n                                    \"sha256:6a1b267aa90cac58ac3a765d067950e7dbbf75b1da07e895d1f594193a40a38b\",\r\n                                    \"sha256:9c443e7324ba5b85070c4a818ade28bfabedf16ea10206da1132edaa6dda237e\"\r\n                            ],\r\n                            \"index\": \"pypi\",\r\n                            \"version\": \"==2.18.4\"\r\n                    },\r\n\t\t\t... snipped ...\r\n            },\r\n            \"develop\": {\r\n                    ... snipped ...\r\n                    \"pytest\": {\r\n                            \"hashes\": [\r\n                                    \"sha256:27fa6617efc2869d3e969a3e75ec060375bfb28831ade8b5cdd68da3a741dc3c\",\r\n                                    \"sha256:81a25f36a97da3313e1125fce9e7bbbba565bc7fec3c5beb14c262ddab238ac1\"\r\n                            ],\r\n                            \"index\": \"pypi\",\r\n                            \"version\": \"==3.2.3\"\r\n                    }\r\n                    ... snipped ...\r\n    }\r\n```\r\n\r\nFor the sake of the example, it's fine."
    ],
    "commit_messages": [
      "Merge pull request #5383 from pypa/issue-5266-docs\n\nUpdate documentation around requirements command and provide current examples."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137144ee515ce6a4eb38",
    "number": 5382,
    "body": "As the commit says: we no longer use this.",
    "head_branch": "drop-pypi-test",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137244ee515ce6a4eb39",
    "number": 5381,
    "body": "I accidentally pushed the actual change directly to the master branch.\r\nHence, this PR only includes the news fragment.\r\n",
    "head_branch": "drop-six-vendoring",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5381 from pypa/drop-six-vendoring\n\nAdd news fragment for dropping six"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137244ee515ce6a4eb3a",
    "number": 5380,
    "body": "Prefer to use the lockfile sources if available since this is used in install phase\r\n\r\n\r\n### The issue\r\n\r\nFixes #5353 whereby the user was only supplying the lockfile to the docker build for sync/deploy/install phase--we should prefer in install to use the sources from the lockfile.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5353-sources",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prefer to use the lockfile sources if available since this is used in install phase (#5380)\n\n* Prefer to use the lockfile sources if available since this is used in install phase.\r\n\r\n* Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137344ee515ce6a4eb3b",
    "number": 5376,
    "body": "I did not realize how broken pipenv is out of the box on the latest ubuntu until I upgraded.   It has to do with it defaulting to `posix_local` when creating a virtualenv, which has different paths for the python binaries.  I initially tried preferring `posix_local` for the paths but it had the side effect of trying to install everything to local site packages.\r\n\r\nRisks:  The venv creator should be available on all systems, but the documentation points out:\r\n> venv - this delegates the creation process towards the venv module, as described in [PEP 405](https://www.python.org/dev/peps/pep-0405). This is only available on Python interpreters having version 3.5 or later, and also has the downside that virtualenv must create a process to invoke that module (unless virtualenv is installed in the system python), which can be an expensive operation (especially true on Windows).",
    "head_branch": "sysconfig-path-bug",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5376 from pypa/sysconfig-path-bug\n\nUse creator venv when creating virtual environments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137444ee515ce6a4eb3c",
    "number": 5373,
    "body": "Fixes #4660 \r\n",
    "head_branch": "marker-determinism",
    "is_a_fork": false,
    "comments": [
      "Depends on:  https://github.com/pypa/pipenv/pull/5373/files"
    ],
    "commit_messages": [
      "Merge pull request #5373 from pypa/marker-determinism\n\nAlways evaluate markers fresh, without lru_cache."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137544ee515ce6a4eb3d",
    "number": 5368,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nFixes #5367 \r\n\r\nDepends on:  https://github.com/sarugaku/plette/pull/26/files\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-5367b",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5368 from pypa/issue-5367b\n\nFix for --skip-lock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137644ee515ce6a4eb3e",
    "number": 5366,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\nFixes #4745 \r\n\r\n### Description\r\nNamed package categories have many potential use cases -- including installing pre-requisite installation packages, system specific platform lock sections, using a single Pipfile for many sub-projects, and so much more!\r\n\r\nThis is a full feature PR to support `--categories` argument for most of the pipenv commands and code paths.\r\n\r\nExample usages:\r\n\r\n#### Single Category\r\n`pipenv install six --catetgories prereq`\r\n\r\n#### Multiple categories\r\n`pipenv install --categories=\"prereq packages\"`\r\n\r\n#### Lock and Uninstall \r\n`pipenv lock --categories=\"prereq dev-packages\"`\r\n`pipenv uninstall six --categories prereq`\r\n\r\n\r\n\r\n",
    "head_branch": "named-categories",
    "is_a_fork": false,
    "comments": [
      "I believe what is remaining is to:\r\n* write documentation\r\n* Create requirementslib and plette branches/PRs for those changes\r\n* Vendor in new requirementslib and plette once they are released.",
      "@matteius tremendous job! As you stated, the docs are still missing."
    ],
    "commit_messages": [
      "Merge pull request #5366 from pypa/named-categories\n\nSupport Named Package Categories"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137644ee515ce6a4eb3f",
    "number": 5365,
    "body": "This PR adds explicit [permissions section](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions) to workflows. This is a security best practice because by default workflows run with [extended set of permissions](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token) (except from `on: pull_request` [from external forks](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/)). By specifying any permission explicitly all others are set to none. By using the principle of least privilege the damage a compromised workflow can do (because of an [injection](https://securitylab.github.com/research/github-actions-untrusted-input/) or compromised third party tool or action) is restricted.\r\nIt is recommended to have [most strict permissions on the top level](https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions) and grant write permissions on [job level](https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs) case by case.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "GitHub Workflows security hardening (#5365)\n\n* build: harden pypi_upload.yml permissions\r\nSigned-off-by: Alex <aleksandrosansan@gmail.com>\r\n\r\n* build: harden ci.yaml permissions\r\nSigned-off-by: Alex <aleksandrosansan@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137744ee515ce6a4eb40",
    "number": 5361,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\n[PEP621](https://peps.python.org/pep-0621/) encourages the Python community to migrate away from complex `setup.cfg` + `setup.py` files by putting config data in `pyproject.toml`.  Let's keep moving in that direction.  https://github.com/abravalheri/ini2toml\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "move-more-config-to-pyproject.toml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5361 from cclauss/move-more-config-to-pyproject.toml\n\nMigrate isort, mypy, and pytest config into pyproject.toml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137844ee515ce6a4eb41",
    "number": 5357,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhile running pipenv lock, I got this,\r\n\r\n```\r\nFile \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/requirementslib/models/setup_info.py\", line 198, in caller\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/requirementslib/models/setup_info.py\", line 366, in _find_install_requires\r\n    return [el.s for el in variable.elts]\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/requirementslib/models/setup_info.py\", line 366, in <listcomp>\r\n    return [el.s for el in variable.elts]\r\nAttributeError: 'BinOp' object has no attribute 's'\r\n```\r\nIt seems that some situations in which the AST cannot be parsed are passing undetected.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "fix_ast_issue",
    "is_a_fork": true,
    "comments": [
      "Thank you! This PR should be opened against https://github.com/sarugaku/requirementslib.",
      "@oz123  is correct and there is a ticket over there too for this already.  I started a PR once around it, but never finished it.  We should alert the user when we were unable to parse the AST (likely because it used string interpolation).",
      "Also this:  https://github.com/pypa/pipenv/issues/5167",
      "Hello, thank you so much for the comments. Any advice on how to avoid running into this problem?",
      "@albertoandreottiATgmail Yes -- the problem is the requirementslib setup.py parser is designed to not execute any code, so likely in the install_requires, or other string being parsed, its an f-string or using format string, which is interpolation and would require executing arbitrary code to evaluate.   If the affected library could change to use a basic string without interpolation then you would not get this error.   In requirementslib we should detect it and alert the user as to this cause.  Once we do that, we will vendor in the new requirementslib and pipenv would output the more reasonable error.",
      "@albertoandreottiATgmail This branch outdates this PR and should also make the desired improvement, if you have spare cycles and could check:  https://github.com/pypa/pipenv/pull/5793"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137944ee515ce6a4eb42",
    "number": 5355,
    "body": "### The issue\r\n\r\nSafety >= changed its JSON output leading to a strange output by the pipenv check command.\r\n\r\n### The fix\r\n\r\nSafety >= 2.0 includes new options and improvements; this PR includes the new options and renders the improved Safety screen output, which offers more information to the users about the scan done. \r\n\r\nThis pull request is related to #5218 \r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Vendor the latest Safety version in the base branch (Safety > 2.1.1)\r\n* [ ] Fix issue `module 'ruamel.yaml' has no attribute 'resolver'`\r\n* [ ] Set up S3 URLs to the default Pipenv database and the announcements endpoint.\r\n* [ ] Support reading Safety policy files.\r\n\r\n\r\n",
    "head_branch": "safety-2-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improving pipenv check command with the new Safety options (#5355)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620137a44ee515ce6a4eb43",
    "number": 5352,
    "body": "### The issue\r\n\r\npipenv can generate its own shell completions using the click framework. Prior to this PR, there are no file/path completions for the `-r` and `-e` options. See #3478 for a discussion.\r\n\r\n### The fix\r\n\r\nThis PR changes the option type to `click_types.Path` for `-r` and `-e`. This is enough for click to know that file/path completions are desired here.\r\nAnd this isn't only beneficial for fish shell, it automatically applies to bash and zsh also.\r\n\r\nThis fixes partially issue #3478 but not the part concerning `pipenv run` completions.\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\nI'm not sure whether the news fragment is mandatory and which type would be appropriate. If you tell me, I could add one.",
    "head_branch": "options-file-type",
    "is_a_fork": true,
    "comments": [
      "Can you please add a news file?",
      "> Can you please add a news file?\r\n\r\ndone"
    ],
    "commit_messages": [
      "cli: set `click_types.Path` for `-r` and `-e` options (#5352)\n\n* cli: set click_types.Path for -r and -e options\r\n\r\nthis enables click to generate shell auto completions for files/paths\r\nsee #3478\r\n\r\n* added news fragment for PR 5352"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137b44ee515ce6a4eb44",
    "number": 5351,
    "body": "Starts fixing #5349\r\n\r\n\r\n### The issue\r\n\r\n* Cleanup some patching to be consistent with how we patch pipenv to be available internal to pip `__main__.py` which is a more modern way using importlib that does not rely on pkg_resoruces.\r\n\r\nThere is more work to do to fully drop `pkg_resources` which seems to be what we are supposed to do:  https://setuptools.pypa.io/en/latest/pkg_resources.html\r\n\r\n![image](https://user-images.githubusercontent.com/479892/189470109-c7755d36-610e-46a1-94c0-26b8fc2a724a.png)\r\n\r\n\r\nThe problem enters with `pipdeptree` is expecting the `pkg_resources` Distribution.  I opened https://github.com/tox-dev/pipdeptree/issues/175 to have that discussion.",
    "head_branch": "issue-5349b",
    "is_a_fork": false,
    "comments": [
      "Ok, figured out my blockers with the prior PR, and so closing this in favor of:  https://github.com/pypa/pipenv/pull/5350\r\nwhich will depend on:  https://github.com/sarugaku/requirementslib/pull/343"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137b44ee515ce6a4eb45",
    "number": 5350,
    "body": "Fixes #5349\r\nFixes #5208\r\n\r\n### The issue\r\n\r\n* Cleanup some patching to be consistent with how we patch pipenv to be available internal to pip `__main__.py` which is a more modern way using importlib that does not rely on pkg_resoruces.\r\n* Utilizing the internal pkg_resources, and make that part of the `vendoring.update` task by adding it to the `LIBRARY_RENAMES` and reinvoke the  `vendoring.update` task which rewrote the imports.",
    "head_branch": "issue-5349",
    "is_a_fork": false,
    "comments": [
      "Replacement PR:  https://github.com/pypa/pipenv/pull/5351/files",
      "Will depend on actually vendoring in this https://github.com/sarugaku/requirementslib/pull/343 with a new release of requirementslib, but I have the changes in place now for testing.",
      "I have vendor'd in the new requirementslib release so this is ready for review."
    ],
    "commit_messages": [
      "Merge pull request #5350 from pypa/issue-5349\n\nSafer usages of pkg_resources"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137c44ee515ce6a4eb46",
    "number": 5348,
    "body": null,
    "head_branch": "remove-sequential",
    "is_a_fork": false,
    "comments": [
      "I think we may need to deprecate the flag before we remove it in case people use it in their CI.",
      "I believe that people who use the flag in CI won't notice the difference, since it's a warning... A one off breakage is a risk we can take. If someone relied on the functionality, it's already gone. ... \r\nSo, let's merge this with a warning. I have a strong gut feeling there won't be any rush of issues because of this. ",
      "Hey, just a heads up that this _does_ break CI. If you're using the `--sequential` flag, this new version of Pipenv parses that flag as a dependency name, and fails with \r\n\r\n```\r\npipenv.vendor.requirementslib.exceptions.RequirementError: Failed parsing requirement from '--sequential'\r\n```"
    ],
    "commit_messages": [
      "Merge pull request #5348 from pypa/remove-sequential\n\nRemove --sequential"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137d44ee515ce6a4eb47",
    "number": 5347,
    "body": "This is now meaningless since we use pip batch install.\r\n",
    "head_branch": "small-cleanup",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137e44ee515ce6a4eb48",
    "number": 5346,
    "body": "Fix #4698.",
    "head_branch": "remove-iso8601",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5346 from pypa/remove-iso8601\n\nRemove iso8601 from vendored packages"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137f44ee515ce6a4eb49",
    "number": 5343,
    "body": "This is required for enabling Python3.11 ",
    "head_branch": "bump-pipdeptree",
    "is_a_fork": false,
    "comments": [
      "Perhaps add the changes from #5245 so that we are assured that the tests pass.",
      "> Perhaps add the changes from #5245 so that we are assured that the tests pass.\r\n\r\nI prefer doing this in a separate PR. Let's merge this one, and then one can merge the main branch to #5245 .",
      "After this was merged, I rebased the Python 3.11 tests in #5245 and they fail. :-(",
      "Same failures?",
      "It appears that the vendored-in `pytest` is trying to import `tomli` instead of using the `tomllib` that is built into Py3.11.  https://docs.python.org/3.11/library/tomllib.html\r\n\r\nIs the vendored-in pytest current?  https://github.com/pytest-dev/pytest/releases\r\n```\r\nlib/python3.11/site-packages/_pytest/config/findpaths.py\",\r\n  line 67, in load_config_dict_from_file\r\n    import tomli\r\nModuleNotFoundError: No module named 'tomli'\r\n```",
      "This will need to wait until pytest v7.2.0\r\npytest-dev/pytest#9982"
    ],
    "commit_messages": [
      "Merge pull request #5343 from pypa/bump-pipdeptree\n\nBump pipdeptree"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620137f44ee515ce6a4eb4a",
    "number": 5342,
    "body": "Fixes #4784 ",
    "head_branch": "better-editable-detection",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5342 from pypa/better-editable-detection\n\nBetter editable detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138044ee515ce6a4eb4b",
    "number": 5341,
    "body": "Fixes #5195\r\n\r\n### The issue\r\n\r\nRight now it is not possible to specify python specifiers -- only the callout of specific versions.\r\n\r\nThis allows for specifying python such as:\r\n```\r\n[requires]\r\npython_version = \">3.8\"\r\n```\r\n\r\n```\r\n[requires]\r\npython_version = \">3.8,<3.11\"\r\n```\r\n\r\nI'll be honest and say I am not sure what the side effects of people using different python versions to lock would be, but I am willing to find out.\r\n\r\nAnother thing, if you say \r\n```\r\n[requires]\r\npython_version = \">3.8,<=3.10\"\r\n```\r\n\r\nthen the specifier is not going to install 3.10.4 for example, because that is newer than 3.10.   I think that is technically correct as far as specifiers go so <3.11 is better if you intend to allow 3.10 than to say <=3.10, but maybe not what people would expect.",
    "head_branch": "python-specifiers",
    "is_a_fork": false,
    "comments": [
      "Really hope it makes into production. I had to resolve to comment the `python_version` conf a lot of times. 😄 ",
      "@matteius this PR is so stale, and will need a re-doing. Unless it's already implemented somehow.\r\nCan I close it?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138144ee515ce6a4eb4c",
    "number": 5339,
    "body": "This is because pipfile is quite dormant.\r\n\r\nThis will help with removing six. Also, worth noting:\r\nplette's own Pipfile class uses a much stricter checking. I don't think it's going to be a problem\r\nsince 99% of the user don't craft their own `Pipfile`s. However, I needed to fix some tests to\r\npass again.\r\nIf people did craft their own `Pipfile` the errors from Plette are pretty straight forward to understand\r\nso they can fix their files.  \r\nAlso, a nice bonus: it seems that the test suite now runs ~20 min, compared to ~23 min. Still too long, \r\nJust reminding ourselves ... it used to be 50 minutes ...\r\nFixes #5310",
    "head_branch": "replace-pipfile-with-plette",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5339 from pypa/replace-pipfile-with-plette\n\nReplace usage of  pipfile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138244ee515ce6a4eb4d",
    "number": 5338,
    "body": "So this other PR actually didn't fix the issue:  https://github.com/pypa/pipenv/pull/5334",
    "head_branch": "5334-take2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5338 from pypa/5334-take2\n\nActually load the dot env file before virtualenv creation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138344ee515ce6a4eb4e",
    "number": 5337,
    "body": "Add news fragment. ",
    "head_branch": "bump-plette",
    "is_a_fork": false,
    "comments": [
      "I actually pushed the version bump on the master already. In order to adhere to our process, I am also adding a news fragment to document this change."
    ],
    "commit_messages": [
      "Merge pull request #5337 from pypa/bump-plette\n\nBump plette version to v0.3.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138344ee515ce6a4eb4f",
    "number": 5336,
    "body": "Fix #5333.\r\n",
    "head_branch": "bump-shellingham",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5336 from pypa/bump-shellingham\n\nBump vendored version of shellingham"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138444ee515ce6a4eb50",
    "number": 5334,
    "body": "Load the dot env earlier  so that `PIPENV_CUSTOM_VENV_NAME` is more useful across projects.\r\n\r\nThe problem is if you put the variable in your dot env it won't be applied in time for virtualenv creation/activation.",
    "head_branch": "earlier-dot-env-load",
    "is_a_fork": false,
    "comments": [
      "I am going to wait with merging this branch until we merge #5331 "
    ],
    "commit_messages": [
      "Merge pull request #5334 from pypa/earlier-dot-env-load\n\nLoad the dot env earlier"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138544ee515ce6a4eb51",
    "number": 5331,
    "body": "On my fast laptop these were the 20 slowest tests:\r\n\r\n```\r\n259.54s call     tests/integration/test_lock.py::test_complex_lock_with_vcs_deps\r\n254.14s call     tests/integration/test_install_uri.py::test_get_vcs_refs\r\n253.65s call     tests/integration/test_install_twists.py::test_multiple_editable_packages_should_not_race\r\n152.11s call     tests/integration/test_install_twists.py::test_local_zipfiles\r\n137.95s call     tests/integration/test_lock.py::test_lock_editable_vcs_with_extras_without_install\r\n133.73s call     tests/integration/test_lock.py::test_lock_nested_direct_url\r\n133.52s call     tests/integration/test_lock.py::test_lock_editable_vcs_without_install\r\n132.87s call     tests/integration/test_install_uri.py::test_install_editable_git_tag\r\n130.86s call     tests/integration/test_lock.py::test_vcs_lock_respects_top_level_pins\r\n130.70s call     tests/integration/test_uninstall.py::test_uninstall_all_local_files\r\n127.40s call     tests/integration/test_install_twists.py::TestDirectDependencies::test_https_dependency_links_install\r\n127.36s call     tests/integration/test_install_uri.py::test_basic_vcs_install_with_env_var\r\n125.63s call     tests/integration/test_install_uri.py::test_basic_vcs_install\r\n125.47s call     tests/integration/test_project.py::test_include_editable_packages\r\n116.35s call     tests/integration/test_install_uri.py::test_editable_vcs_install\r\n113.39s call     tests/integration/test_lock.py::test_lock_editable_vcs_with_markers_without_install\r\n112.68s call     tests/integration/test_uninstall.py::test_uninstall_all_dev\r\n111.80s call     tests/integration/test_lock.py::test_lock_editable_vcs_with_ref_in_git\r\n109.92s call     tests/integration/test_cli.py::test_pipenv_clean_pip_no_warnings\r\n109.60s call     tests/integration/test_install_twists.py::test_relative_paths\r\n```\r\n\r\nHere I examine them, make adjustments to what they should be doing to test (or if they should even exist in a couple cases, due to repeated test cases).   After running the tests again:\r\n\r\n ",
    "head_branch": "slowest-tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5331 from pypa/slowest-tests\n\nExamine the 20 slowest tests and make improvements."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138644ee515ce6a4eb52",
    "number": 5330,
    "body": null,
    "head_branch": "fix/basic_usage_typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typos"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138744ee515ce6a4eb53",
    "number": 5329,
    "body": "Thank you for contributing to Pipenv!  Replacement of: https://github.com/pypa/pipenv/pull/4982\r\n\r\n\r\n### The issue\r\n\r\nUpstream setup.py can not define the setup.py markers properly, and pipenv will reveal a cryptic error.   This solves for that and allows the installation to move forward without the marker, while alerting the user of the potential problem.",
    "head_branch": "issue-4681-gracefully-proceed-with-error",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138844ee515ce6a4eb54",
    "number": 5328,
    "body": "pipenv now uses python3 by default.\r\n\r\nFollowing our discussion in #5304 ",
    "head_branch": "deprecate-three",
    "is_a_fork": false,
    "comments": [
      "@matteius the breaks on Windows are unrelated to the change. It's that requests test again.",
      "> @matteius the breaks on Windows are unrelated to the change. It's that requests test again.\r\n\r\nThe pypiserver PR will make those a non-issue, because they change to tests uvicorn and uvicorn[standard] instead of requests until we can sort out why requirementslib infers the specifier from setup metadata when none is specified.  It was clearly an edge case of that expected behavior and cross test contamination.  "
    ],
    "commit_messages": [
      "Deprecate the --three flag\n\npipenv now uses python3 by default."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138844ee515ce6a4eb55",
    "number": 5327,
    "body": "there are actually a couple of fixes here, one is that sometimes the file URL contains hashes so we should include that with the group with hashes like we did in `2022.8.31` by accident.  Also the filters after need to detect this additional part of the conditional and that change was missing in #5326.\r\n\r\n\r\n### The issue\r\n\r\n#5306 ",
    "head_branch": "issue-5326",
    "is_a_fork": false,
    "comments": [
      "Gitlab is having mainteance so the repository for flake8 is unavailable for the next ~180 minutes while they upgrade their database."
    ],
    "commit_messages": [
      "Use a different library since I could not figure out the six conflicts this caused with other tests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138944ee515ce6a4eb56",
    "number": 5325,
    "body": "Was checking on if the markers bounced around, which they did not.   But I saw there were a few package updates we could commit.",
    "head_branch": "update-locks",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "relock pipenv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138a44ee515ce6a4eb57",
    "number": 5323,
    "body": "### The issue\r\n\r\nhttps://github.com/pypa/pipenv/pull/5301 broke keyring support again until https://github.com/pypa/pip/pull/11029 gets merged into Pip and then vendored into Pipenv.\r\n\r\n### The fix\r\n\r\nThis makes `get_pip_args()` respect `disable_pip_input` that was introduced in https://github.com/pypa/pipenv/pull/5036.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "disable_pip_input",
    "is_a_fork": true,
    "comments": [
      "@Darsstar Thanks for the PR, I remember that issue now."
    ],
    "commit_messages": [
      "Respect `disable_pip_input` setting from Pipfile (#5323)\n\nCo-authored-by: Dos Moonen <d.moonen@nki.nl>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138b44ee515ce6a4eb58",
    "number": 5321,
    "body": "Apply fix to constraints generation based on fact that pip resolver does not allowe unnamed constraints.\r\n\r\nFixes #5273",
    "head_branch": "issue-5273-unamed-constraints",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Apply fix to constraints generation based on fact that pip resolver does not allowe unnamed constraints."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138c44ee515ce6a4eb59",
    "number": 5320,
    "body": "Thank you for contributing to Pipenv!\r\n\r\nFixes #5307\r\n\r\n### The issue\r\n\r\nfile installs can sometimes be caught into the standard requirements, which require hashes unless `--skip-lock` is passed.",
    "head_branch": "issue-5307-batch_install",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix issue where a file install is included with the hashed requirements."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138c44ee515ce6a4eb5a",
    "number": 5318,
    "body": "### The issue\r\n\r\nThe Docker example in the Basic Usage document needed a bit of TLC. Because the name of the virtualenv changed between the builder and the runtime container, Python was unable to find itself or its site-packages directory:\r\n\r\n```\r\ncoolio@674956d0c53e:/usr/src$ ./venv/bin/pip\r\nbash: ./venv/bin/pip: /usr/src/.venv/bin/python: bad interpreter: No such file or directory\r\n```\r\n\r\n### The fix\r\n\r\nTo fix this, I changed the directory of the virtualenv in the runtime container to .venv which matches the builder.\r\n\r\nI also added an example of how to get run.py into the container in the first place, since we run it later.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Docker example in Basic Usage\n\nThe Docker example in the Basic Usage document needed a bit of TLC. Because the name of the virtualenv changed between the builder and the runtime container, Python was unable to find itself or its site-packages directory:\r\n\r\ncoolio@674956d0c53e:/usr/src$ ./venv/bin/pip\r\nbash: ./venv/bin/pip: /usr/src/.venv/bin/python: bad interpreter: No such file or directory\r\n\r\nTo fix this, I changed the directory of the virtualenv in the runtime container to .venv which matches the builder.\r\n\r\nI also added an example of how to get run.py into the container in the first place, since we run it later."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138d44ee515ce6a4eb5b",
    "number": 5317,
    "body": "This reverts commit d33f4ec541bfb814be38539984ebcd6ca6035ad5.\r\n\r\nSometimes ireq.name is None.  Also noting that I added sorting in a different spot in this PR yesterday:  https://github.com/pypa/pipenv/pull/5313/files#diff-3542045ed7f41738cd4519e02753c9e83af5654c56c124598f0fbbd82405ec49R134\r\n",
    "head_branch": "revert-unsafe-sorting",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138e44ee515ce6a4eb5c",
    "number": 5316,
    "body": "Change #5313 to use a context manager as best practices suggest.",
    "head_branch": "use-context-manager",
    "is_a_fork": true,
    "comments": [
      "@swaldhoer please add a news fragment like `5316.trivial.rst` for this change.",
      "> @swaldhoer please add a news fragment like `5316.trivial.rst` for this change.\r\n\r\nDone."
    ],
    "commit_messages": [
      "Use a context manager to handle the temporary constraints file (#5316)\n\n* Use a context manager to handle the temporary constraints file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138f44ee515ce6a4eb5d",
    "number": 5315,
    "body": "Once performance PR is merged, there will be no use of the progress bar:  https://github.com/pypa/pipenv/pull/5301",
    "head_branch": "remove-progress-bar",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Drop progress bar. (#5315)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620138f44ee515ce6a4eb5e",
    "number": 5314,
    "body": null,
    "head_branch": "which_pip-removal",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add news fragmnent."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139044ee515ce6a4eb5f",
    "number": 5313,
    "body": "Fixes  #4925",
    "head_branch": "issue-4925-resolver-envvar-limit",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "remove debug statement."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139144ee515ce6a4eb60",
    "number": 5312,
    "body": "Forgot to remove this one in the PR yesterday.",
    "head_branch": "remove-dateutil",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove dateutil."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139244ee515ce6a4eb61",
    "number": 5309,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\nFix https://github.com/pypa/pipenv/issues/5273. \r\nThis is a bug from commit https://github.com/pypa/pipenv/commit/640612d0d76a57e597517a1811c400e231f4cf1b. Because `check_invalid_constraint_type` from `pip` throws `PipDeprecationWarning`.\r\n\r\n### The fix\r\nCreate our own method for checking if package is constraint or not.\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "check-constraints-throw-warning-messages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139344ee515ce6a4eb62",
    "number": 5308,
    "body": "Fixes #5307\r\n",
    "head_branch": "vendor-vistir-requirementslib",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Also remove orderedmultidict"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139444ee515ce6a4eb63",
    "number": 5306,
    "body": "This reverts commit 4b9fc02a2561db47585e0fd822ada6dae6a49943.\r\n\r\n@oz123 @bakhtiary -- this reverts: https://github.com/pypa/pipenv/pull/5286\r\n\r\nbecause the change made here is actually fixing the issue and @dqkqd did some testing without this changeset and it was not required for fixing the issue:  https://github.com/pypa/pipenv/pull/5299#issuecomment-1228731246\r\n\r\nI appreciate your effort to make pipenv better, please keep it up!   In this case, given some additional comments that came in on that PR and the added complexity that was not required, I think we should revert it.",
    "head_branch": "revert-first-nondeterminism-PR",
    "is_a_fork": false,
    "comments": [
      "In a away I think it's ok to revert. However, I liked the idea of using the dictionary keys for an ordered-set. \r\n\r\nWe will have to watch it for a while. I suspect that working with ordered set of depends is better."
    ],
    "commit_messages": [
      "Revert \"Fix nondeterminism with environment markers #5239 (#5286)\" (#5306)\n\nThis reverts commit 4b9fc02a2561db47585e0fd822ada6dae6a49943."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139544ee515ce6a4eb64",
    "number": 5305,
    "body": "Its a good sign that they passed on this first run.",
    "head_branch": "address-failing-test",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Try to address these sproadic test failures without skipping the test."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139644ee515ce6a4eb65",
    "number": 5304,
    "body": "Since we only support python3 now, this flag is obsolete. It's been long enough since the removal of Python2, hence\r\nI am guessing, no one is going to have its CI break because of this flag removal.\r\n",
    "head_branch": "remove-three-flag",
    "is_a_fork": false,
    "comments": [
      "Let's add a deprecation warning for this flag first in a different PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139644ee515ce6a4eb66",
    "number": 5301,
    "body": "This is a performance oriented PR -- the more packages you have to install, the better this change is.  The one possible downside to this change is it becomes necessary to drop the progress bar indicator as the installs are performed by `pip` in up to two large batches (packages with hashes, and packages without hashes).  I did some work to ensure that the verbose flag prints the pip output progress in real time such that progress can still be observed, though it is not the traditional `pipenv` progress bar, that gets dropped.\r\n\r\nWhen doing a regular `pipenv sync --dev` of the pipenv project when the current dependencies are already installed, the running time is about equal between `main` and `explore-batch-install` to re-install the four editable dependencies.\r\n\r\n0m34.686s for `explore-batch-install` and real    0m33.596s on `main` for example\r\n\r\nHowever it seems to really shine when installing a lot of dependencies for the first time.\r\n\r\n## main `pipenv --rm && time pipenv sync --dev`\r\n```\r\nAll dependencies are now up-to-date!\r\n\r\nreal    1m17.746s\r\nuser    0m0.000s\r\nsys     0m0.015s\r\n```\r\n\r\n## explore-batch-install `pipenv --rm && time pipenv sync --dev`\r\n```\r\n$ pipenv --rm && time pipenv sync --dev\r\nRemoving virtualenv (\\c\\Users\\matte\\.virtualenvs\\pipenv-ZKcqGg2F)...\r\nCreating a virtualenv for this project...\r\nPipfile: C:\\Users\\matte\\Projects\\pipenv\\Pipfile\r\nUsing default python from C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.1520.0_x64__qbz5n2kfra8p0\\python.exe (3.10.5) to create virtualenv...\r\n[ ===] Creating virtual environment...created virtual environment CPython3.10.5.final.0-64 in 398ms\r\n  creator CPython3Windows(dest=C:\\c\\users\\matte\\.virtualenvs\\pipenv-ZKcqGg2F, clear=False, no_vcs_ignore=False, global=False)\r\n  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=C:\\Users\\matte\\AppData\\Local\\pypa\\virtualenv)\r\n    added seed packages: pip==22.2.2, setuptools==63.2.0, wheel==0.37.1\r\n  activators BashActivator,BatchActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\r\n\r\nSuccessfully created virtual environment!\r\nVirtualenv location: \\c\\Users\\matte\\.virtualenvs\\pipenv-ZKcqGg2F\r\nInstalling dependencies from Pipfile.lock (a4c141)...\r\nTo activate this project's virtualenv, run pipenv shell.\r\nAlternatively, run a command inside the virtualenv with pipenv run.\r\nAll dependencies are now up-to-date!\r\n\r\nreal    1m13.979s\r\nuser    0m0.030s\r\nsys     0m0.046s\r\n\r\n```\r\n\r\n## For the sentry benchmark test:  main branch:\r\n```\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ pipenv --rm\r\nRemoving virtualenv (/home/matteius/.virtualenvs/sentry-LGSyi0g8)...\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ rm Pipfile\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ rm Pipfile.lock \r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ time pipenv install -r requirements-base.txt \r\nCreating a virtualenv for this project...\r\nPipfile: /home/matteius/pipenv-triage/sentry/Pipfile\r\nUsing /home/matteius/.pyenv/versions/3.10.2/bin/python3 (3.10.2) to create virtualenv...\r\n⠧ Creating virtual environment...created virtual environment CPython3.10.2.final.0-64 in 191ms\r\n  creator CPython3Posix(dest=/home/matteius/.virtualenvs/sentry-LGSyi0g8, clear=False, no_vcs_ignore=False, global=False)\r\n  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/matteius/.local/share/virtualenv)\r\n    added seed packages: pip==22.2.2, setuptools==63.2.0, wheel==0.37.1\r\n  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\r\n\r\n✔ Successfully created virtual environment! \r\nVirtualenv location: /home/matteius/.virtualenvs/sentry-LGSyi0g8\r\nCreating a Pipfile for this project...\r\nRequirements file provided! Importing into Pipfile...\r\nPipfile.lock not found, creating...\r\nLocking [packages] dependencies...\r\nBuilding requirements...\r\nResolving dependencies...\r\n✔ Success! \r\nLocking [dev-packages] dependencies...\r\nUpdated Pipfile.lock (03a7b9)!\r\nInstalling dependencies from Pipfile.lock (03a7b9)...\r\n  🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 123/123 — 00:03:36\r\nTo activate this project's virtualenv, run pipenv shell.\r\nAlternatively, run a command inside the virtualenv with pipenv run.\r\n\r\nreal\t4m39.155s\r\nuser\t7m19.092s\r\nsys\t0m21.095s\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ pipenv --version\r\npipenv, version 2022.8.24\r\n```\r\n\r\n## explore-batch-install (this development branch)\r\n```\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ pipenv --rm\r\nRemoving virtualenv (/home/matteius/.virtualenvs/sentry-LGSyi0g8)...\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ rm Pipfile.lock \r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ rm Pipfile \r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ pi^C\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ time pipenv install -r requirements-base.txt \r\nCreating a virtualenv for this project...\r\nPipfile: /home/matteius/pipenv-triage/sentry/Pipfile\r\nUsing /home/matteius/.pyenv/versions/3.10.2/bin/python3 (3.10.2) to create virtualenv...\r\n⠦ Creating virtual environment...created virtual environment CPython3.10.2.final.0-64 in 170ms\r\n  creator CPython3Posix(dest=/home/matteius/.virtualenvs/sentry-LGSyi0g8, clear=False, no_vcs_ignore=False, global=False)\r\n  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/matteius/.local/share/virtualenv)\r\n    added seed packages: pip==22.2.2, setuptools==63.2.0, wheel==0.37.1\r\n  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\r\n\r\n✔ Successfully created virtual environment! \r\nVirtualenv location: /home/matteius/.virtualenvs/sentry-LGSyi0g8\r\nCreating a Pipfile for this project...\r\nRequirements file provided! Importing into Pipfile...\r\nPipfile.lock not found, creating...\r\nLocking [packages] dependencies...\r\nBuilding requirements...\r\nResolving dependencies...\r\n✔ Success! \r\nLocking [dev-packages] dependencies...\r\nUpdated Pipfile.lock (03a7b9)!\r\nInstalling dependencies from Pipfile.lock (03a7b9)...\r\n  🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 123/123 — 00:00:00\r\nTo activate this project's virtualenv, run pipenv shell.\r\nAlternatively, run a command inside the virtualenv with pipenv run.\r\n\r\nreal\t1m53.793s\r\nuser\t1m33.928s\r\nsys\t0m7.316s\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ pipenv --version\r\npipenv, version 2022.8.25.dev0\r\n```\r\n\r\n# Sentry Benchmark -- just the sync\r\n```\r\nmatteius@matteius-VirtualBox:~/pipenv$ git checkout main\r\nmatteius@matteius-VirtualBox:~/pipenv$ cd ~/pipenv-triage/sentry\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ pipenv --rm\r\nRemoving virtualenv (/home/matteius/.virtualenvs/sentry-LGSyi0g8)...\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ time pipenv sync\r\nCreating a virtualenv for this project...\r\nPipfile: /home/matteius/pipenv-triage/sentry/Pipfile\r\nUsing /home/matteius/.pyenv/versions/3.10.2/bin/python3 (3.10.2) to create virtualenv...\r\ncreated virtual environment CPython3.10.2.final.0-64 in 185ms\r\n  creator CPython3Posix(dest=/home/matteius/.virtualenvs/sentry-LGSyi0g8, clear=False, no_vcs_ignore=False, global=False)\r\n  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/matteius/.local/share/virtualenv)\r\n    added seed packages: pip==22.2.2, setuptools==63.2.0, wheel==0.37.1\r\n  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\r\n\r\nSuccessfully created virtual environment!\r\nVirtualenv location: /home/matteius/.virtualenvs/sentry-LGSyi0g8\r\nInstalling dependencies from Pipfile.lock (03a7b9)...\r\nTo activate this project's virtualenv, run pipenv shell.\r\nAlternatively, run a command inside the virtualenv with pipenv run.\r\nAll dependencies are now up-to-date!\r\n\r\nreal\t3m56.202s\r\nuser\t6m54.377s\r\nsys\t0m30.768s\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ cd ~/pipenv\r\nmatteius@matteius-VirtualBox:~/pipenv$ git checkout explore-batch_install\r\nSwitched to branch 'explore-batch_install'\r\nYour branch is up to date with 'origin/explore-batch_install'.\r\nmatteius@matteius-VirtualBox:~/pipenv$ cd ~/pipenv-triage/sentry\r\nmatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ pipenv --rm\r\nRemoving virtualenv (/home/matteius/.virtualenvs/sentry-LGSyi0g8)...\r\n^[[Amatteius@matteius-VirtualBox:~/pipenv-triage/sentry$ time pipenv sync\r\nCreating a virtualenv for this project...\r\nPipfile: /home/matteius/pipenv-triage/sentry/Pipfile\r\nUsing /home/matteius/.pyenv/versions/3.10.2/bin/python3 (3.10.2) to create virtualenv...\r\ncreated virtual environment CPython3.10.2.final.0-64 in 180ms\r\n  creator CPython3Posix(dest=/home/matteius/.virtualenvs/sentry-LGSyi0g8, clear=False, no_vcs_ignore=False, global=False)\r\n  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/matteius/.local/share/virtualenv)\r\n    added seed packages: pip==22.2.2, setuptools==63.2.0, wheel==0.37.1\r\n  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\r\n\r\nSuccessfully created virtual environment!\r\nVirtualenv location: /home/matteius/.virtualenvs/sentry-LGSyi0g8\r\nInstalling dependencies from Pipfile.lock (03a7b9)...\r\nTo activate this project's virtualenv, run pipenv shell.\r\nAlternatively, run a command inside the virtualenv with pipenv run.\r\nAll dependencies are now up-to-date!\r\n\r\nreal\t1m7.600s\r\nuser\t1m9.126s\r\nsys\t0m6.198s\r\n```\r\n\r\nBased on an estimate of this running at ~30% of the time of the main branch, I estimate our mean times for the pipenv install benchmark would wind up 45-55 seconds; it would be really cool to see!",
    "head_branch": "explore-batch_install",
    "is_a_fork": false,
    "comments": [
      "@dqkqd I would greatly appreciate your review of this as well if you have the time to do so.",
      "Yes, I would love to.",
      "There are some [global options](https://pip.pypa.io/en/stable/reference/requirements-file-format/#global-options) used by `pip install`. So I think dividing packages into `hash` and `no-hash` group is not enough.",
      "> There are some [global options](https://pip.pypa.io/en/stable/reference/requirements-file-format/#global-options) used by `pip install`. So I think dividing packages into `hash` and `no-hash` group is not enough.\r\n\r\n@dqkqd many of the global options though are per line such as the --hash or the --index -- for example \"--require-hashes\r\nRequire a hash to check each requirement against, for repeatable installs. This option is implied when any package in a requirements file has a --hash option.\" -- but the hash arguments are different per line.   Index are also different per line, and the constraints file would apply the same.   Which option are you worried about that would conflict within the same file?",
      "@dqkqd Hmm, you might be right about the indexes though -- I think we may not even need them in the requirements.txt the way it is now, because the install command also gets the index and extra-index arguments:\r\n```\r\nInstalling package: torch\r\nWriting supplied requirement line to temporary file: 'torch'\r\nInstalling 'torch'\r\n$ /c/Users/matte/.virtualenvs/pytorch-1gDgs60Q/Scripts/python.exe 'C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\__pip-runner__.py' install --no-input --verbose --upgrade --exists-action=i -r 'c\r\n:\\users\\matte\\appdata\\local\\temp\\pipenv-njscw9uc-requirements\\pipenv-lglrxyzh-requirement.txt' -i https://download.pytorch.org/whl/cu111 --extra-index-url https://pypi.org/simple --extra-index-url h\r\nttps://pypi.org/simple\r\n```",
      "So every packages with the same index should go into a same batch. I think other global options also work that way as well.\r\nFor example if we divide packages using index, editable, hashes. We would need at most 8 batches to cover all edge cases.",
      "> @dqkqd Hmm, you might be right about the indexes though -- I think we may not even need them in the requirements.txt the way it is now, because the install command also gets the index and extra-index arguments:\r\n\r\nIf we don't use index-url, `pip` will use the default one, and break some cases where user wants to use their private pypi. So I think we must not discard it.",
      "> If we don't use index-url, `pip` will use the default one, and break some cases where user wants to use their private pypi. So I think we must not discard it.\r\n\r\nThere was a prior bug I discovered from my conversation with you and from testing with my pytorch + pypi example, I changed it to be how the regular `pip_install` works so we don't have to manage so many requirements files with indexes.   Basically it passes in the extra-index-urls and the hash restrictions ensure you get the exact package you are looking for.\r\n```\r\n$ /c/Users/matte/.virtualenvs/pytorch-1gDgs60Q/Scripts/python.exe 'C:\\Users\\matte\\Projects\\pipenv\\pipenv\\patched\\pip\\__pip-runner__.py' install -i https://pypi.org/simple --extra-index-url\r\nhttps://download.pytorch.org/whl/cu111 --extra-index-url https://download.pytorch.org/whl/cu113 --no-input --upgrade --no-deps --exists-action=i -r 'c:\\users\\matte\\appdata\\local\\temp\\pipenv\r\n-ijg8hyy6-requirements\\pipenv-1e5k9dw4-hashed-reqs.txt'\r\n```\r\n\r\nThis latest commit solved the issue I was having installing with this 2-index example, plus it is inline with what `pip_install` is already doing.  So I think we can still have just two:  the hashed and not-hashed.   \r\n\r\n`--pre` releases is another example but currently that is an all or nothing flag (so not an issue), though there have been requests to be able to specify --pre on a per package basis ... I am not sure if that is a good idea or not, when it is possible to install a specific pre-release with == specifier.  We'll cross that bridge when we revisit if it makes sense to support per package pre releases though.",
      "So packages with hashes and ``extra-index-url`` should be correctly installed. Then we just need to care about packages without hashes.\r\n\r\n> This latest commit solved the issue I was having installing with this 2-index example, plus it is inline with what pip_install is already doing. So I think we can still have just two: the hashed and not-hashed.\r\n\r\nIf `pip_install` have package and ``index-url`` in the same line, I think it might be a bug. `pip` doesn't grab ``index-url`` if they are same line. I tested it using 2 requirements file.\r\n\r\n**Dockerfile**\r\n```Dockerfile\r\nFROM archlinux\r\nENV LANG C.UTF-8\r\nRUN pacman -Syu python3 python-pip --noconfirm\r\nCOPY requirements.txt .\r\nRUN python -m pip install -r requirements.txt -v -v &> result.txt\r\nRUN cat result.txt | grep \"Found index url\"\r\n```\r\n\r\n**Requirements file with index in the same line:**\r\n\r\n```bash\r\n# requirements.txt\r\npytest -i https://pypi.tuna.tsinghua.edu.cn/simple \r\n```\r\nresult\r\n```\r\nFound index url https://pypi.org/simple\r\nFound index url https://pypi.org/simple\r\nFound index url https://pypi.org/simple\r\nFound index url https://pypi.org/simple\r\nFound index url https://pypi.org/simple\r\nFound index url https://pypi.org/simple\r\n```\r\n\r\n**Requirements file with index in different line:**\r\n\r\n```bash\r\n# requirements.txt\r\n-i https://pypi.tuna.tsinghua.edu.cn/simple \r\npytest\r\n```\r\nresult:\r\n```\r\nFound index url https://pypi.tuna.tsinghua.edu.cn/simple\r\nFound index url https://pypi.tuna.tsinghua.edu.cn/simple\r\nFound index url https://pypi.tuna.tsinghua.edu.cn/simple\r\nFound index url https://pypi.tuna.tsinghua.edu.cn/simple\r\nFound index url https://pypi.tuna.tsinghua.edu.cn/simple\r\nFound index url https://pypi.org/simple\r\n```\r\n\r\n",
      "> If pip_install have package and index-url in the same line, I think it might be a bug. pip doesn't grab index-url if they are same line. I tested it using 2 requirements file.\r\n\r\n@dqkqd Thanks for the insights -- `pip_install` does not do what I tried doing with adding the `-i <index_url>` to the requirements.txt -- which as you describe won't work the way I intended.  Both `pip_install` and `pip_install_deps` provide the same mechanism to provide the sources during install, so we should have parity with what it was doing before for that with the current changes.",
      "Thanks for explaining, I read doc and code again. You were right.\r\n- I were wrong from the start when mentioning about global options of pip requirements file, we are installing from Pipfile, not from pip requirements file.\r\n- All sources from Pipfile will be used and passed into `pip_command`, at first I thought we only use source which is defined for each package.\r\n\r\nThere are somethings I noticed during experiments, not sure they are helpful though:\r\n- `$ pipenv install --dev --verbose --skip-lock` fails to install packages with `explore-batch-install` branch,  `$ pipenv graph` does not show anything. \r\n```toml\r\n# Pipfile\r\n[package]\r\npytest = \"*\"\r\n```\r\n- Editable is global option, so editable packages should not go into the same batch with non-editable packages, otherwise installed non-packages will be re-installed again.\r\n- Editable packages are always non-hashed.\r\n- Non-editable packages are hashed if we have lockfile or `--skip-lock` isn't used.",
      "@dqkqd Thank you for your observations and comments--I have pushed some additional changes to make the distinction between the two file types more clear and fix the bug with the `--skip-lock` behavior and cleanup the method signatures from unused parameters, and default to empty list instead of None for the case of `c.deps` not existing. ",
      "I'm happy to see this made it into Pipenv. I pointed out the performance overhead of using a separate `pip` process for the sake of the progress bar four years ago in https://github.com/pypa/pipenv/issues/2207, but back then, there was too much resistance to removing the progress bar that nothing happened to it.",
      "Oh thank you @Tenzer -- I am happy to hear others may be as excited about this change as I am.  I am sorry that I didn't quite understand that issue back when I commented on it in July and locked discussions -- It was mainly because there are so many old issues with the original contributors that can be impossible to parse and make sense of sometimes, that I just prefer in some cases people open new issue reports but now that I re-read that one all the same conclusions I came to you had come to there as well.  \r\n\r\nI had not even gotten to performance profiling pip, so its interesting you had found that most of the time was with importlib, I find that kind of surprising.   Anyway, it became clear when I was trying out such an optimization that it used significantly less CPU time and less or similar wall clock time to do the same installs.    In the case of the Python Package Manager benchmark, we cut our install time of the sentry requirements in half!   https://lincolnloop.github.io/python-package-manager-shootout/\r\n\r\nFortunately I had the support of @oz123 to merge such a change--we both saw the performance improvement as way more important than the progress bar, especially when the `--verbose` flag can give us real time progress of the pip process.  "
    ],
    "commit_messages": [
      "Reduce the amount of calls to pip and the number of tempfiles in batch_install. (#5301)\n\n* Reduce the amount of calls to pip and the number of temp files in batch_install.\r\n\r\n* Add logic to read the progress of the install in realtime from pip and stop using progress bar.\r\n\r\n* refactor based on PR feedback."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139744ee515ce6a4eb67",
    "number": 5300,
    "body": "Fix a regression from commit dbea3f5 where `pip install --system` tries\r\nto install using the `python` executable first which, on some systems\r\nmay point to Python 2.  Instead try `python3` first.\r\n\r\nThank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nAs explained in #5296 the is a regression whereby `pipenv install --system` will try `$(which python)` if it exists instead of `$(which python3)` and on some systems `python` points to Python 2, which will fail with `SyntaxError`.\r\n\r\n\r\n### The fix\r\n\r\nThe proposed fix is to try `python3` first, then `python` if `python3` fails.\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "project_python-try-python3-before-python",
    "is_a_fork": true,
    "comments": [
      "I think the failed checks were the flaky tests that @matteius spoke of."
    ],
    "commit_messages": [
      "Fix: try python3 before python in `install --system` (#5296)\n\nFix a regression from commit dbea3f5 where `pip install --system` tries\nto install using the `python` executable first which, on some systems\nmay point to Python 2.  Instead try `python3` first."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139844ee515ce6a4eb68",
    "number": 5299,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\nFixes #5239\r\n\r\n### The fix\r\n\r\nPackages are added into resolver in this order:\r\n1. Load from Pipfile\r\n2. Pass into environment variables ``PIPENV_PACKAGES``\r\n3. Pass into `Resolver` with the name `constraints`.\r\n4. Parsed by pip's `parsed_requirements`\r\n5. Convert into `InstallRequirement` by `install_req_from_parsed_requirement`\r\n6. Pass into pip's resolver\r\n\r\nAfter that, we would have all package's markers from resolver. \r\n\r\nThanks @bakhtiary for providing a nice way to overcome this issue by sorting packages.\r\nI think if we want to sort packages, we better sort them after step 5, which is the last step we could intervene.\r\n\r\nBut even if those packages are sorted, this might not be the best solution. Because markers are generated by pip's resolver, which is something we couldn't control (for example those packages might be reordered inside resolver).\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--",
    "head_branch": "issue-5239-nondeterminism-with-markers",
    "is_a_fork": true,
    "comments": [
      "I don't know how to write a test for this one. Testing by running a loop seems heuristic.\r\nI ran on my laptop without https://github.com/pypa/pipenv/commit/4b9fc02a2561db47585e0fd822ada6dae6a49943, and look like it *works fine*, so just sort `self._constraints` might be enough for this issue.\r\n```bash\r\n./stress-lock.sh\r\nattempt 1: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\nattempt 2: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\nattempt 3: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\nattempt 4: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\nattempt 5: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\nattempt 6: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\nattempt 7: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\nattempt 8: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\n^C\r\n```"
    ],
    "commit_messages": [
      "Fixes pipenv lock nondeterminism with environment markers (#5299)\n\n* Fixes pipenv lock nondeterminism with environment markers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139944ee515ce6a4eb69",
    "number": 5298,
    "body": "Fixes #2635\r\n\r\n",
    "head_branch": "issue-2635",
    "is_a_fork": false,
    "comments": [
      "I'll add a news fragment before merging once this gets reviewed.",
      "@oz123 That is the problem -- people are using environment variables for the auth and they get redacted.",
      "I still don't understand what issue is being fixed here.\r\n\r\nWe should not leak authentication information to Pipefile or Pipefile.lock.\r\nIf we merge this, we can expect people to open a CVE for this.\r\n\r\n",
      "> @oz123 That is the problem -- people are using environment variables for the auth and they get redacted.\r\n\r\nRedacted from where? From the Pipefile? That's great, pipenv does its job. \r\nIf they get redacted from the files pipenv is writing while trying to install a package, then the fix should be some where else.",
      "@oz123 For the case where the user is using environment variables, they don't get expanded, but they do get redacted, which means this doesn't work:\r\n\r\n```\r\n# requirements.txt\r\ngit+https://${AUTH_USER}:${AUTH_PASSWORD}@github.com/user/myproject.git@1.2.3#egg=myproject\r\n\r\nThen run\r\n\r\n> pip install -r requirements.txt\r\n```\r\n\r\nBecasue str(package.link) will redact it to be `git+https://${AUTH_USER}:****@github.com/user/myproject.git@1.2.3#egg=myproject`\r\n\r\nIf you have just a user variable, like this:  `git+https://${AUTH_USER}@github.com/user/myproject.git@1.2.3#egg=myproject`\r\nThen that variable will get redacted as well:\r\n`git+https://****@github.com/user/myproject.git@1.2.3#egg=myproject`\r\n\r\nWhich creates a not lockable or installable Pipfile.   The ask of https://github.com/pypa/pipenv/issues/2635 is to fix this -- but you are probably correct as well, we need a way to detect if they are environment variables, to not redact them.",
      "OK, I see where is the problem.\r\n\r\nThese are not environment variables, rather references to them. So if someone was smart and didn't specify the password, pip's own code still think it's a password.\r\n\r\nUsing `_url` can be dangerous, we could use [split_auth_from_netloc](\r\nhttps://github.com/pypa/pip/blob/0d4e9eb72253c008f2790482e664ce92198c5240/src/pip/_internal/utils/misc.py#L427) from pip to check for a password or a variable and do something about it.\r\n\r\nSomething could be:\r\n\r\n1. Warn the user.\r\n2. Redact if it is a password\r\n3. Pass it on to Pipfile if the password is the known form for a variable reference, e.g. `${PASSWORD}` or `${password}` or in regex: `${\\w+}`.\r\n",
      "Changes made to address the concerns and tests added for the various cases.",
      "@oz123 this PR is insightful, because mac os failed on every test pips_to_dep tests regarding requests, possibly because of my new Pipfile tests?  I noticed a weird behavior on my mac this past week that took me a while to track down -- even if there is no virtualenv, if there is a Pipfile in a higher level directory, then pipenv prefers to use that over the Pipfile in your current working directory, at least on a mac."
    ],
    "commit_messages": [
      "fix test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139a44ee515ce6a4eb6a",
    "number": 5297,
    "body": null,
    "head_branch": "pip_conf_index-url",
    "is_a_fork": false,
    "comments": [
      "**NOTE:** Original reply quoted below and removed.\n\nI've played around with it a bit. What do you think of this?\n\n```python\n# Load Pip configuration and get items\nself.configuration = Configuration(isolated=False, load_only=None)\nself.configuration.load()\nconfiguration_items = self.configuration.items()\n# Get unique set of index-url values from Pip configuration\nindex_urls = set(\n    value\n    for section_key, value in configuration_items\n    if \"index-url\" in section_key.split(\".\", 1)\n)\nif len(index_urls) == 1:\n    pip_configured_index = index_urls.pop()\nelse:\n    # NOTE: Either no index-url or ambiguous result \n    pip_configured_index = None\n# Get unique set of trusted-host values from Pip configuration\ntrusted_hosts = set(\n    chain.from_iterable(\n        value.split(\" \")\n        for section_key, value in configuration_items\n        if \"trusted-host\" in section_key.split(\".\", 1)\n    )\n)\nif pip_configured_index:\n    self.default_source = {\n        \"url\": pip_configured_index,\n        \"verify_ssl\": any(\n            trusted_host in pip_configured_index\n            for trusted_host in trusted_hosts\n        ) or \"http://\" in pip_configured_index,\n        \"name\": \"pip_conf_index\",\n    }\nelif self.s.PIPENV_TEST_INDEX:\n    self.default_source = {\n        \"url\": self.s.PIPENV_TEST_INDEX,\n        \"verify_ssl\": True,\n        \"name\": \"custom\",\n    }\nelse:\n    self.default_source = {\n        \"url\": \"https://pypi.org/simple\",\n        \"verify_ssl\": True,\n        \"name\": \"pypi\",\n    }\n```\n\nIt requires this additional import line:\n```\nfrom itertools import chain\n```\n\n\n> @matteius I got a chance to download your branch and test it in my work environment. It definitely worked as expected, which is exciting, and I have a couple notes.\n> \n> When getting `index-url`, I suggest checking not only `global.index-url` but also `install.index-url`. Previously, I only had index-url defined under [install], and I expect a number of other users might also.\n> \n> Instead of assigning `verify-ssl=True`, I suggest also pulling the configuration value `trusted-host` (probably should check both [global] and [install] here, too). Since this value can have multiple hosts, I was thinking something like this:\n> \n> ```python\n> try:\n>     pip_configured_trusted_host = configuration.get_value(\n>         \"install.trusted-host\"\n>     )\n> except ConfigurationError:\n>     pip_configured_trusted_host = None\n> else:\n>     for trusted_host in pip_configured_trusted_host.split(\" \"):\n>         # XXX: might also be worth checking if URL is http://\n>         if trusted_host in pip_configured_index:\n>             verify_ssl = False\n>             break\n>     else:\n>         verify_ssl = True\n> ```\n\n",
      "@matteius Just checking in. Any updates?",
      "@kalebmckale I think your changes make sense; I spent some time trying to consider if we could handle the case where there is more than one index configured, and also if you want to be a committer you could branch off this and make a PR pointing at this one.   I still have some documentation to do for it as well.  We wanted this past release to be just bug fixes, the plan is to include this in the upcoming release that also includes pip 23.0.",
      "@kalebmckale I ended up refactoring your code and took a stab at supporting multiple sources defined, also I think there was a logical error in how `verify_ssl` was being set with respect to `trusted-hosts` and `https` -- either that or it doesn't do what I think it does.  Either way, could you take this branch for a test spin again?",
      "Will do, @matteius! Thanks for making the changes. I have been trying to set up a test environment at home so I can confidently contribute. I will test this at work and let you know.",
      "<s>Ahhh… are you talking about the for…else loop?\r\n\r\nIt’s a Python thing. If the loop completes without hitting break, it runs the else statement.\r\n\r\nIf trusted-host is defined, it can be one or more domains space-separated. So, looping over these domains, check if each is contained (substring) in the pip_configured_index. If so, set verify_ssl=False since it’s trusted. If none of the trusted-host domains are a substring of the pip_configured_index, then verify_ssl=True (this is the else branch of the for loop).</s>\r\n\r\n**UPDATE:** Looks like I was commenting on the previous version and not talking about the same thing.\r\n\r\nYou were talking about this:\r\n\r\n```python\r\nif pip_configured_index:\r\n    self.default_source = {\r\n        \"url\": pip_configured_index,\r\n        \"verify_ssl\": any(\r\n            trusted_host in pip_configured_index\r\n            for trusted_host in trusted_hosts\r\n        ) or \"http://\" in pip_configured_index,\r\n        \"name\": \"pip_conf_index\",\r\n    }\r\n```\r\n\r\nSpecifically,\r\n```\r\nany(trusted_host in pip_configured_index for trusted_host in trusted_hosts ) or \"http://\" in pip_configured_index\r\n```\r\n\r\nFirst, it probably would have been better for me to use\r\n```python\r\nurllib.parse.urlsplit(pip_configured_index).scheme == \"http\"`\r\n```\r\nthan just do the string comparison. Putting that aside, I did provide the negation of my intended logic. At home, I run the code in my head while typing on my iPad, so I tend to make mistakes, it seems. 😋\r\n\r\nThanks for catching that and applying DeMorgan’s Law!",
      "@kalebmckale Any other feedback on this -- I want to get the documentation fixed up and ideally a release this weekend ...",
      "Hey @matteius! Thanks for patience! Yes, the feature worked as expected with the `pip.conf`-specified `index-url` and evaluating the `trusted-host` correctly from there, whether listed under global section or under the install section.\n\nThe thing still pending, which is covered under another issue about the specifying `--index` option, which currently duplicates in the Pipfile for each package that follows and also doesn't use the trusted-host information from either the `pip.conf` file or the environment variable `PIP_TRUSTED_HOST`. "
    ],
    "commit_messages": [
      "Allow the pip.conf to override the default index source. (#5297)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139a44ee515ce6a4eb6b",
    "number": 5292,
    "body": null,
    "head_branch": "python-finder",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139b44ee515ce6a4eb6c",
    "number": 5291,
    "body": "I began to wonder if upgrading `pyparsing` isn't what set off the sporadic test failure on those two deps_to_pip tests.  The reason I wonder about this is the `requirementslib` build never did pass when I unpinned `pyparsing`:  https://github.com/sarugaku/requirementslib/pull/327\r\n\r\nAlso, when I re-ran vendoring the first time it reverted the `zipp` import and so I fixed that in the vendoring script + the old version of pyparsing we used doesn't have cached_property so I adjusted that part of vendoring too.\r\n\r\n\r\n",
    "head_branch": "downgrade-pyparsing",
    "is_a_fork": false,
    "comments": [
      "~Well that ended up not being the issue -- I'll patch the zipp thing next time I do vendoring which will probably be soon with requirementslib.  https://github.com/pypa/pipenv/runs/7983658035?check_suite_focus=true~\r\n\r\nEDIT actually I was looking at the wrong test runner, D'oh!",
      "Ok for sure now we know that `pyparsing` isn't the culprit for that failing test:  https://github.com/pypa/pipenv/runs/7984979349?check_suite_focus=true"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139c44ee515ce6a4eb6d",
    "number": 5289,
    "body": "Thank you for contributing to Pipenv!\r\n\r\nWill require a requirementslib change to actually roll this out, but this is a branch that prototypes fixing #5285 and #5290  \r\nThe underlying reason why we patched Pip to use sysconfig by default for all python versions (https://github.com/pypa/pipenv/pull/5275/files#diff-e154923a3c93acd48d40dd714127c4b90cac776ebd71930770919d539d137f77R44) ~though that appears to be compatible with this fix and so far that patch isn't causing a specific problem so I lean towards leaving it in for now.~  Actually #5290 came in right after I wrote that, so now I am in favor of dropping that patch with this change.\r\n\r\n\r\n### The issue\r\n\r\nSome systems have patched sysconfig differently, and from this discussion (https://github.com/pypa/setuptools/discussions/3544) it would appear that importing setuptools packages is problematic ",
    "head_branch": "avoid-setuptools-imports",
    "is_a_fork": false,
    "comments": [
      "Replaced by:  https://github.com/pypa/pipenv/pull/5228"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139d44ee515ce6a4eb6e",
    "number": 5286,
    "body": "this is a continuation of the following PR:\r\nhttps://github.com/pypa/pipenv/pull/5279\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "@matteius @oz123 the PR https://github.com/pypa/pipenv/pull/5279 has moved here, ",
      "I think if we want to keep all the packages sorted before putting them into pip's resolver. We can simply sort `self._constraints` instead.\r\nhttps://github.com/pypa/pipenv/blob/b6d9ad6a63e04998b742bbd167abdec3e4b7a117/pipenv/utils/resolver.py#L632-L647\r\nLike this.\r\n```python\r\nself._constraints.sort(key=lambda ireq: ireq.name)\r\n```\r\nThose sorted `self._constraints` will be put directly into `resolver`.\r\nhttps://github.com/pypa/pipenv/blob/b6d9ad6a63e04998b742bbd167abdec3e4b7a117/pipenv/utils/resolver.py#L680-L685",
      "I think the only thing to decide on left is if we sort the constraints -- I personally think we should sort them where @dqkqd points to the code, because sorting them seems to be the most consistent way we could present them to the resolver.  I suspect there is no rhyme or reason to the order the constraints get added, so sorting also seems to make sense in that regards.",
      "> I think the only thing to decide on left is if we sort the constraints -- I personally think we should sort them where @dqkqd points to the code, because sorting them seems to be the most consistent way we could present them to the resolver. I suspect there is no rhyme or reason to the order the constraints get added, so sorting also seems to make sense in that regards.\r\n\r\nI do agree that sorting the constraints can help with stability. However it would be outside the scope of this PR which is to make sure that we get the same answer given the same input.\r\n\r\nI'd be very happy to work on the constraint sorting problem in another PR. Maybe we should open an Issue to talk about the exact behavior, should we have a flag? should we do it in the pipenv.py or in resolve.py? ",
      "@matteius There are some tests failing should I look into them or can we merge this as it is?  ",
      "@bakhtiary These test failures are expected as possible for the time being until they can be figured out why they sometimes fail and usually on mac os:  \r\n```\r\nFAILED tests/unit/test_utils.py::test_convert_deps_to_pip[deps0-requests] - A...\r\nFAILED tests/unit/test_utils.py::test_convert_deps_to_pip[deps1-requests[socks]]\r\n```\r\n\r\nThe windows failure was an issue to install before the test runner ran, so I kicked off the failed jobs again.\r\n\r\nLet's take up the issue of sorting them constraints in a separate issue/PR then.  I suspect we can merge this later today.",
      "@bakhtiary,  `self._constraints` is actually those packages which we are trying to reorder. So sorting those packages is the same as sorting `self._constraints`. The variable name seems confuse though.",
      "The issue is not fixed on main branch. Maybe packages's order is changing somewhere.\r\n```bash\r\n   ~/Doc/workspace/pipenv    main !2 ?2 ❯ ./stress-lock.sh\r\nattempt 1: greenlet markers=\"python_version >= '3' and (platform_machine == 'aarch64' or (platform_machine == 'ppc64le' or (platform_machine == 'x86_64' or (platform_machine == 'amd64' or (platform_machine == 'AMD64' or (platform_machine == 'win32' or platform_machine == 'WIN32'))))))\"\r\nattempt 2: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\nattempt 3: greenlet markers=\"python_version >= '3' and platform_machine == 'aarch64' or (platform_machine == 'ppc64le' or (platform_machine == 'x86_64' or (platform_machine == 'amd64' or (platform_machine == 'AMD64' or (platform_machine == 'win32' or platform_machine == 'WIN32')))))\"\r\nattempt 4: greenlet markers=\"python_version >= '3' and platform_machine == 'aarch64' or (platform_machine == 'ppc64le' or (platform_machine == 'x86_64' or (platform_machine == 'amd64' or (platform_machine == 'AMD64' or (platform_machine == 'win32' or platform_machine == 'WIN32')))))\"\r\nattempt 5: greenlet markers=\"python_version >= '3' and platform_machine == 'aarch64' or (platform_machine == 'ppc64le' or (platform_machine == 'x86_64' or (platform_machine == 'amd64' or (platform_machine == 'AMD64' or (platform_machine == 'win32' or platform_machine == 'WIN32')))))\"\r\nattempt 6: greenlet markers=\"python_version >= '3' and platform_machine == 'aarch64' or (platform_machine == 'ppc64le' or (platform_machine == 'x86_64' or (platform_machine == 'amd64' or (platform_machine == 'AMD64' or (platform_machine == 'win32' or platform_machine == 'WIN32')))))\"\r\nattempt 7: greenlet markers=\"python_version >= '3' and platform_machine == 'aarch64' or (platform_machine == 'ppc64le' or (platform_machine == 'x86_64' or (platform_machine == 'amd64' or (platform_machine == 'AMD64' or (platform_machine == 'win32' or platform_machine == 'WIN32')))))\"\r\nattempt 8: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\nattempt 9: greenlet markers=\"platform_python_implementation == 'CPython'\"\r\n```",
      "As I mention in https://github.com/pypa/pipenv/pull/5299#issuecomment-1228731246. I think this should be revert because it does not solve linked issue."
    ],
    "commit_messages": [
      "Fix nondeterminism with environment markers #5239 (#5286)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139e44ee515ce6a4eb6f",
    "number": 5284,
    "body": "* Converts the pipenv test runner to use `pypiserver`.\r\n* Invokes `pypiserver` correctly for all supported OS types \r\n* Uses `waitress` for Windows only because it reduced the run time of windows test runner by 10 minutes from the default wsgi bottle.\r\n* Does not use `waitress` for Ubuntu because it slowed it down significantly, nor for mac OS which showed no difference using it.\r\n* Refactor test naming and cleanup conftest file to be more certain about temp directory cleanup\r\n* Tableflip on the `dep_to_pip` style tests and realize that there is still some cross tests contamination going on that sometimes confused requirementslib into adding a specifier for requests without a specifier --  I ultimately concluded that I don't have time currently to figure out how to prevent this other than to convert those requests and requests with extras pip_to_deps tests  to use uvicorn as its test subject instead, since it too has extras and we don't use it in other tests that pull in the vcs setup.py metadata artifacts.  We can see on the latest main build this failed again too, so we basically have been getting lucky and this change to `uvicorn` at least gurantees the build won't be flaky anymore for this particular reason:  https://github.com/pypa/pipenv/runs/8179118655?check_suite_focus=true\r\n* Updated dev documentation and the scripts for invoking pytest to startup the pypiserver ahead of time.   \r\n* I did some speed analysis and I feel this is on par with our current test runner, but is way better because we eliminate the fixtures that invoke several threads of an old unsupported pypiserver and instead the tests are CPU lighter now when they run even if they take a similar amount of time.\r\n* This really opens the door to better debugging because it becomes easy to access the same private pypi server that the tests are referencing and check its behavior and the available packages.   The options we can pass to this pypiserver are way more expansive, and likely to improve overtime as that project has a new maintainer that appears interested in accepting contributions.  For example, right now there is no way to specify thread count to the bottle wsgi server, and so for waitress it defaults to 4, but the test runner has 2 cores so this is overkill -- we can probably get in the future an ability to specify this value to experiment with runtimes.\r\n* We are closer than ever with this PR to being able to support private pypi tests that involve credentials :tada:\r\n* Probably other benefits to doing this.\r\n\r\n **Deferred for Future**\r\n* ~Extends the hash lookup method to consider if the index being used supports the same pypi API for retrieving package hashes.~ -- Deferred to future PR since I shouldn't add a functional change to pipenv in this re-work of the testing framework.\r\n* Associated PR for `pypiserver` and when I subbed out feature it shaved almost a 30-60 seconds off my test runner locally:  https://github.com/pypiserver/pypiserver/pull/440 \r\n\r\n\r\n### Artifacts and Stats\r\n![image](https://user-images.githubusercontent.com/479892/188339051-fac2eeb1-4367-445d-abbb-1fe46c448366.png)\r\n\r\n![image](https://user-images.githubusercontent.com/479892/188339138-d26a89bf-c564-4968-9337-3e151caa6e68.png)\r\n\r\n### First run where this PR refactor was really successful:\r\n![image](https://user-images.githubusercontent.com/479892/188338813-78a6e317-60bc-48f9-9eab-e7eeee545f9e.png)\r\n\r\n### Second run where I pushed doc/news changes and let it re-run:\r\n![image](https://user-images.githubusercontent.com/479892/188340430-4d20e84c-e1c9-4c1a-8102-cc2a9028ed50.png)\r\n\r\n###Latest main branch run (for possible comparison)\r\n![image](https://user-images.githubusercontent.com/479892/188339307-ab19fb65-ca3a-4eaf-84dd-ff4032e69960.png)\r\n\r\n\r\n\r\n### The checklist\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "test-pypiserver",
    "is_a_fork": false,
    "comments": [
      "I believe, though I haven't tested it, that adding gunicorn on Ubuntu and Mac might improve the speed of the tests.\r\nWSGIRef is darn slow, especially when running in parallel",
      "> I believe, though I haven't tested it, that adding gunicorn on Ubuntu and Mac might improve the speed of the tests. WSGIRef is darn slow, especially when running in parallel\r\n\r\nIt might have helped ubuntu but I think it hurt Mac OS run time so I am going to change gunicorn to just be installed for linux.\r\n![image](https://user-images.githubusercontent.com/479892/188468651-5a00f2eb-413a-409c-b535-d5cdc20e5e2f.png)\r\n"
    ],
    "commit_messages": [
      "Convert test runner to use pypiserver package as standalone process (#5284)\n\n* Check point progress on moving tests to pypiserver.\r\n\r\n* Allow other indexes to mimic the pypi json API for package hashes.\r\n\r\n* Fix these tests that run on lower python versions only.\r\n\r\n* Try adding the pypiserver to the github actions to only run once.\r\n\r\n* Expand the scope of fixtures for pypiserver.\r\n\r\n* try to accomedate microsoft runner.\r\n\r\n* Windows networking troubles.\r\n\r\n* Remove running as a background job.\r\n\r\n* Try to condtionally invoke different start pypi-server commands\r\n\r\n* Try to condtionally invoke different start pypi-server commands\r\n\r\n* Try to condtionally invoke different start pypi-server commands\r\n\r\n* Try to condtionally invoke different start pypi-server commands\r\n\r\n* Try to condtionally invoke different start pypi-server commands\r\n\r\n* Try to condtionally invoke different start pypi-server commands\r\n\r\n* Try to condtionally invoke different start pypi-server commands\r\n\r\n* Try to introduce pypi as the root index because setuptools-scm is not in our pypi artifacts.\r\n\r\n* see if the windows tests run faster (and the other tests) by supplying waitress.\r\n\r\n* Only use waitress on windows because the others are fast on the default.  Fix requests pollution.\r\n\r\n* Supply a suitable Pipfile instead for these two failing tests.\r\n\r\n* More requests resolver cross test contamination cleanup.\r\n\r\n* remove problematic tests because even on my version of python 3.8.12 this does not work due to AttributeError: 'HTMLParser' object has no attribute 'unescape'\r\n\r\n* fix mirror install test.\r\n\r\n* Fix Pipfile.\r\n\r\n* Fix Pipfile for real\r\n\r\n* Fix tests\r\n\r\n* Cleanup test naming and more test enhancements.\r\n\r\n* Save this optimization for a subsequent PR.\r\n\r\n* Cleanup the TemporaryDirectory between tests.\r\n\r\n* resolve merge conflict.\r\n\r\n* Cleanup path initalization -- it hsould always be a TemporaryDirectory for tests that gets cleanedup.\r\n\r\n* Cleanup path initalization -- it hsould always be a TemporaryDirectory for tests that gets cleanedup.\r\n\r\n* tableflip on those requests tests that read the setup metadata in reqlib from other tests.\r\n\r\n* Update developer documentation for running tests.\r\n\r\n* add news fragment.\r\n\r\n* Try gunicorn perfoormance for linux/mac\r\n\r\n* Only use gunicorn on linux based on the results of last run."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139f44ee515ce6a4eb70",
    "number": 5283,
    "body": "This allows users to pass additional arguments to pip during the install phase, for example to enable experimental features like the truststore.\r\n\r\nExample usage:\r\n\r\n` pipenv install --extra-pip-args=\"--use-feature=truststore --proxy=test\" requests`\r\n\r\n### The issue\r\n\r\nFixes #5282 #4360\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "feature-extra-pip-args",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Allow users to pass a string of extra arguments to pip (#5283)\n\n* Allow users to pass a string of extra arguments to pip install"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620139f44ee515ce6a4eb71",
    "number": 5281,
    "body": "- Fixed missing newlines.\r\n- Updated indentation. within help-text.\r\n\r\n### The issue\r\n\r\nI was reading the repository's README when I noticed some issues markdown-rendering issues.\r\nThese are caused due to missing newlines in the .md file and I thought of quickly fixing it up as it's a low-hanging fruit.\r\n\r\nPlus, now it's much more readable . )\r\nI also opened a issue for it at \r\nhttps://github.com/pypa/pipenv/issues/5280\r\n\r\n\r\n### The fix\r\n\r\nAdding a newline where ever required + fixing indentations.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README formattng at README: Usage.\n\n- fixed missing newlines.\n- upadted indentation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a044ee515ce6a4eb72",
    "number": 5279,
    "body": "Thank you for contributing to Pipenv!\r\nNo problem\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\nFixing #5239\r\n\r\n\r\n### The fix\r\n\r\nWe were using set to keep track of constraints, this changed their order leading to nondeterministic behaviour.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "I'm not able to say much about the change, because the tests break. Should the test also be modified?\r\n",
      "hmmm, let me check the tests. I thought they might flaky, but this seems more than flake.\r\n",
      "> I'm not able to say much about the change, because the tests break. Should the test also be modified?\r\n\r\n@oz123 I think it is Fixed now. most of the tests are passing, but I am not sure if what I have done is in line with what the algorithm expects.",
      "> Looks like there are some other places in the code that are still calling `.add()` to add a constraint. The test failures have more details.\r\n\r\nfixed :D. I did actually run the tests, but then pushed when they started taking too long to finish :D. ",
      "The changes proposed look alright for me. However, I am wondering if ordered-set is a more appropriate solution.\r\nIt keeps the set, but adds order like a list.\r\nAn ordered set recipe can be floating around, and we can simply add it to our utils.\r\n",
      "What about a sorted set vs an ordered set so that we get a consistent ordering regardless of the order things are added in?",
      "> The changes proposed look alright for me. However, I am wondering if ordered-set is a more appropriate solution.\r\n> It keeps the set, but adds order like a list.\r\n> An ordered set recipe can be floating around, and we can simply add it to our utils.\r\n\r\nIt is a good idea, specially that then it would maintain the functionality of the code the same. The main draw back of the list is that it can have duplicates and I don't have a clue what that would entail.\r\n\r\nThe con is that we'd have to add an extra library for the ordered set.\r\n\r\n@matteius I don't think sorted set would work. If we add a number to keep the order, we will be able to insert two versions of the same thing which would defeat the purpose.",
      "One more option is to use a set and a list together in these 2 places and just check the set before inserting in the list.\r\n\r\n",
      "@bakhtiary Well technically there is a SortedSet implementation that would work, but it would probably be simpler to use \"use [collections.OrderedDict](https://docs.python.org/3/library/collections.html) from the Python standard library with just keys (and values as None) for the same purpose.\"  https://stackoverflow.com/questions/1653970/does-python-have-an-ordered-set ",
      "But as @oz123 said we can also make our own ordered-set. We can make it using a list and a set or using the dict which is ordered since python 3.6. \r\n\r\nOr we can vendor either the OrderedSet or the ordered-set package.\r\n\r\nThese are all easy, just tell me which one and I'll get it done in a second :smiley_cat: I personally like the orderedset based on the dict Idea.",
      "@bakhtiary I was thinking we could use` collections.OrderedDict` and then just `sorted(d.keys())` without having to add any new code.",
      "> @bakhtiary I was thinking we could use` collections.OrderedDict` and then just `sorted(d.keys())` without having to add any new code.\r\n\r\nOh I see. you are right. I believe the orderedDict will give us the keys in the order they were inserted. \r\n\r\nI think it would work. should I do it?",
      "@bakhtiary Yeah `OrderedDict` feels like the cleanest solution to me in terms of least amount of memory and least additional code added.   We can probably sort the keys to be safe before we pass them as constraints, seeing as how the ordering upstream might change and I would be surprised if the ordering mattered for the actual correct application of the constraints.  We can debate this point about the sorting -- but what I really don't understand and I think to be true, is if we add a new package the markers for an existing package could completely convert to a different type of marker because technically the set and ordering could and would change when adding new dependencies.  Determinism is good though; consistency will probably be the next thing we will want to figure out in a separate effort.",
      "I'm glad I triggered such a good discussion.\r\nThe package ordered-set has very unpleasant code to read imo. Compared to the original recipe \r\nTherehttps://github.com/ActiveState/code/blob/3b27230f418b714bc9a0f897cb8ea189c3515e99/recipes/Python/576696_OrderedSet_with_Weakrefs/README.md.\r\n\r\nHowever, the idea of using a dictionary with keys only as a set replacement is my favorite.\r\nIt might not be straight forward for people who read the code in the future so it's worth adding a comment.\r\n\r\nAlso, we don't need ordereddict. All dictionaries in python 3.6+ are ordered. \r\n\r\n@bakhtiary sorry for sending you for another round of work on this. Thank you for your patience and work on this issue. 🤗",
      "I somehow accidentally closed this. I have opened another PR here: https://github.com/pypa/pipenv/pull/5286. feel free to revive this PR and delete the other one if there is a way. \r\n ",
      "@matteius This PR some how was accidentally closed. It was not merged. I opened a new one here: https://github.com/pypa/pipenv/pull/5286\r\n"
    ],
    "commit_messages": [
      "Merge branch 'main' of github.com:pypa/pipenv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a144ee515ce6a4eb73",
    "number": 5276,
    "body": "### The issue\r\n\r\nThere is a typo in [Basic Usage of Pipenv](https://pipenv.pypa.io/en/latest/basics/) doc.\r\n\r\n### The fix\r\n\r\n...\r\n\r\n\r\n### The checklist\r\n\r\n...",
    "head_branch": "fix/typo-in-basic-usage-of-pipenv-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo in Basic Usage of Pipenv doc (#5276)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a244ee515ce6a4eb74",
    "number": 5275,
    "body": "Back when I was getting the rest of `pipenv` to use the vendor'd `pip`, I ran up against this issue that caused me to add `BAD_PACKAGES` to prevent setuptools from being installed.   The curious thing was the CI passed on python 3.10 -- through a recent interaction on issue #2364 and searching pip code for `3, 10` I found that the issue with installing setuptools after it had been uninstalled is diverted by patching to allow for usages of `sysconfig` on all supported python versions.   Based on this comment on the issue I opened in `pip` plus some additional CLI testing I did where I was able to install a specific version of `setuptools` using the `--system` flag, I think this change should be safe.  https://github.com/pypa/pip/issues/11389#issuecomment-1220185698\r\n\r\n### The issue\r\n\r\nFixes #2364",
    "head_branch": "revisit-bad-packages",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Use sysconfig on all supported python versions."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a344ee515ce6a4eb75",
    "number": 5274,
    "body": "### The issue\r\nThis fixes https://github.com/pypa/pipenv/issues/5273\r\n\r\n### The fix\r\n\r\nConvert ``Requirement`` into ``InstallRequirement`` before checking constraint.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix.rst`, `.feature.rst`, `.behavior.rst`, `.doc.rst`. `.vendor.rst`. or `.trivial.rst` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "Issue-5273-constraints-are-not-recognized",
    "is_a_fork": true,
    "comments": [
      "@dqkqd Would you add a news fragment?",
      "> @dqkqd Would you add a news fragment?\r\n\r\nIs a new fragment is required? I thought it’s just a bug from my previous PR. If it’s necessary, I will add that after getting back home.",
      "@dqkqd because it made it into a pypi release, we should include a news fragment.  Since you are away right now I am going to merge this one and add a news fragment on your behalf, since I just bumped up against this issue.",
      "@matteius , thank you."
    ],
    "commit_messages": [
      "Issue 5273 constraints are not recognized (#5274)\n\n* Add more test for get_constraints_from_deps\r\n* Use pip's check_invalid_constraint_type."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a344ee515ce6a4eb76",
    "number": 5271,
    "body": "Fixes #4323 \r\n\r\n### The issue\r\n\r\nConstraints for editable packages were being added to the resolver when it encountered `install_requires` lines but not filtering them out when those requirements are included as editable packages.",
    "head_branch": "issue-4323",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Exclude from resolver constraints the editable dependencies that will be installed. (#5271)\n\n* Exclude from resolver constraints the editable dependencies that will be installed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a444ee515ce6a4eb77",
    "number": 5268,
    "body": "Not sure why the CI passes on this, for me on windows and linux I am unable to run the tests because I get `ModuleNotFoundError` whereas vistir catches `ImportError` only.   I think this needs more followup, but this is a placeholder of it.\r\n\r\nI really think we need to patch vistir to make this change work better.  I've tried multiple things to get the tests to run locally -- if I switch back to main branch there is no issue.",
    "head_branch": "yaspin-test",
    "is_a_fork": false,
    "comments": [
      "Depends on the new `vistir` release that @oz123 is working on.",
      "I found out how pipenv is dependent on Yaspin.. Which is a bit bummer. We have 3 libraries in the code for doing spinner:\r\nYaspin\r\nSpinner (in pipenv utils)\r\nRich \r\n\r\nWe should first decide which spinner we stick too , and gradually move to it, then we can drop Yaspin and termcolor.\r\nMy obvious choice is to use the spinner from rich, which is bundled with pip._vendor.",
      "@matteius closing this PR in favor replacement of all spinners. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a544ee515ce6a4eb78",
    "number": 5267,
    "body": "Fixes #5265 \r\nFixes #5264\r\n\r\nThis is a much cleaner approach than to avoid having all the local site-packages in the path and require `--ignore-installed` as a workaround.   For reference this particular code works on Python 3.5+\r\n\r\nRef:  https://docs.python.org/3/library/importlib.html#importing-a-source-file-directly",
    "head_branch": "issue-5265",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a644ee515ce6a4eb79",
    "number": 5262,
    "body": "This fixes https://github.com/pypa/pipenv/issues/5261.\r\n\r\nBefore this change, I would get a \"The Python interpreter can't be\r\nfound\" error when running `pipenv install --system` with a python3 but\r\nno python.\r\n\r\nDemo:\r\n\r\n```\r\n$ docker run $(docker build -q -f Dockerfile.pipenv-2022.8.15 https://github.com/jfly/2022-08-16-pipenv-system-which-issue.git#main)\r\nInstalling dependencies from Pipfile.lock (63bec0)...\r\nThe Python interpreter can't be found.▉ 0/4 — 00:00:00\r\n  🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 0/4 — 00:00:00\r\n```\r\n\r\nI'm confident this bug was introduced in\r\nhttps://github.com/pypa/pipenv/commit/f276360dfcef3200908e2c6569567d617919c63d,\r\nwhich removed a usage of `first()`, but broke the \"filter None values\"\r\nbehavior that `first()` gave us.\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "jfly/fix-which-system-issue",
    "is_a_fork": true,
    "comments": [
      "Hmm... the test suite failed in `test_convert_deps_to_pip[deps0-requests] ` and `test_convert_deps_to_pip[deps1-requests[socks]]` (see [build]), but those failures don't *feel* related to my changes, so I'm hoping they're just flaky tests.\r\n\r\n[build]: https://github.com/pypa/pipenv/runs/7854192388?check_suite_focus=true",
      "@jfly I've been fighting those test failures, mostly on mac OS, for about a month now.  It seems to have started around the time I converted off pip-shims in pipenv, but I cannot be certain nor can I explain why its happening.  Its high on my list of things to figure out."
    ],
    "commit_messages": [
      "Actually filter out missing interpreters (#5262)\n\n* Actually filter out missing interpreters\r\n\r\nThis fixes https://github.com/pypa/pipenv/issues/5261.\r\n\r\nBefore this change, I would get a \"The Python interpreter can't be\r\nfound\" error when running `pipenv install --system` with a python3 but\r\nno python."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a744ee515ce6a4eb7a",
    "number": 5260,
    "body": "Termcolor is a dependency of yaspin. Yaspin isn't used\r\nanywhere in pipenv. There is a patch for it, and there is also\r\nvistir dependency for it, but we have our own spinner.\r\n\r\nSide note, we can consider using rich, which pip uses.",
    "head_branch": "drop-yaspin",
    "is_a_fork": false,
    "comments": [
      "@oz123 yaspin is used by `vistir` and the `run` command we do use, but we always pass `no_spinner=False` so I think this is safe.  I think longer term, lets convert away from `vistir` `run` as well if possible."
    ],
    "commit_messages": [
      "Remove yaspin and termcolor\n\nTermcolor is a dependency of yaspin. Yaspin isn't used\nanywhere in pipenv. There is a patch for it, and there is also\nvistir dependency for it, but we have our own spinner.\n\nSide note, we can consider using rich, which pip uses."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a744ee515ce6a4eb7b",
    "number": 5258,
    "body": "### The issue\r\n\r\nFixes #5253 \r\n",
    "head_branch": "issue-5253",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remvoe reference to -r from documentation. (#5258)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a844ee515ce6a4eb7c",
    "number": 5257,
    "body": null,
    "head_branch": "jgarte-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add install instructions for void linux (#5257)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013a944ee515ce6a4eb7d",
    "number": 5255,
    "body": "Fixes #5254\r\n\r\n\r\n### The issue\r\n\r\nElsewhere we use `project_python(project)` but in my testing I was able to reproduce #5254 and discovered it was skipping `platformdirs` because it was already installed to my site-packages.",
    "head_branch": "issue-5254",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Issue 5254 (#5255)\n\n* Fix for python not defaulting to the virtualenv during a pip install.  Add --ignore-installed flag."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013aa44ee515ce6a4eb7e",
    "number": 5251,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "in-memory-tempfiles",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ab44ee515ce6a4eb7f",
    "number": 5250,
    "body": "Remove `get_pipenv_dist` function that is no longer used.  We dropped using it in a prior PR.",
    "head_branch": "remove-unused-func",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove function that is no longer used. (#5250)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ac44ee515ce6a4eb80",
    "number": 5249,
    "body": "The class cached_property is available in the Python STL from version 3.8 onwards. In addition, it is redifend in included libraries, so we can just use it from there.",
    "head_branch": "remove-cached-property",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove vendored cached_property (#5249)\n\nThe class cached_property is available in the Python STL from\r\nversion 3.8 onwards. In addition, it is redifend in included libraries\r\nso we can just use it from there."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ac44ee515ce6a4eb81",
    "number": 5248,
    "body": "Thank you for contributing to Pipenv!\r\n\r\nFixes: #5247\r\n\r\n### The issue\r\n\r\nWhen including the list of `BAD_PACKAGES` to be excluded from `batch_install` it caused problems for folks that depend on `packaging` to be installed by `pipenv`.  I don't see a reason to include `packaging` in the `BAD_PACKAGES` list.",
    "head_branch": "revisit-BAD_PACKAGES",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ad44ee515ce6a4eb82",
    "number": 5245,
    "body": "On **macOS**:\r\n```\r\n============================= test session starts ==============================\r\nplatform darwin -- Python 3.11.0rc1, pytest-7.1.2, pluggy-1.0.0\r\n    [ ... ]\r\nFAILED tests/integration/test_cli.py::test_pipenv_graph - assert 1 == 0\r\nFAILED tests/integration/test_cli.py::test_pipenv_graph_reverse - assert 1 == 0\r\nFAILED tests/unit/test_utils.py::test_convert_deps_to_pip[deps0-requests] - A...\r\nFAILED tests/unit/test_utils.py::test_convert_deps_to_pip[deps1-requests[socks]]\r\n===== 4 failed, 278 passed, 18 skipped, 21 warnings in 1704.26s (0:28:24) ======\r\n```\r\nThank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "https://github.com/pypa/pipenv/pull/5343#issuecomment-1240825697\r\n",
      "Hi\r\n\r\nIn https://github.com/pypa/pipenv/pull/5343#issuecomment-1241083067 you mentioned:\r\n\r\n> This will need to wait until pytest v7.2.0\r\n> [pytest-dev/pytest#9982](https://github.com/pytest-dev/pytest/issues/9982)\r\n\r\npytest 7.2.0 has now been released:\r\nhttps://github.com/pytest-dev/pytest/releases/tag/7.2.0\r\n\r\nAlso, Python 3.11.0 was released last night, and testing locally with pipenv 2022.10.12, I get the following `RuntimeWarning`:\r\n\r\n```\r\n       .../lib/python3.11/site-packages/pipenv/vendor/attr/_make.py:876: RuntimeWarning: Running interpreter doesn't sufficiently support code object introspection.  Some features like bare super() or accessing __class__ will not work with slotted classes.\r\n         set_closure_cell(cell, cls)\r\n```\r\n\r\nThis is coming from the `attr` package, which was fixed in v22.1.0 (https://github.com/python-attrs/attrs/commit/a18b3957d55c669de56799a9a72ea31febe93ce4) however pipenv is still using v21.2.0:\r\nhttps://github.com/pypa/pipenv/blob/v2022.10.12/pipenv/vendor/vendor.txt#L2\r\n\r\nAs such, `attr` will need bumping too, as well as pytest.",
      "Thanks, Ed\r\n* [x] `vendor.txt: Upgrade to attrs==22.1.0`\r\n* [ ] Where is the version of pytest specified?",
      "For `attr`, I believe the vendored copy also needs updating by running the command mentioned here:\r\nhttps://github.com/pypa/pipenv/blob/main/pipenv/vendor/README.md\r\n\r\n> Where is the version of pytest specified?\r\n\r\nI'm guessing it's maybe pulled in implicitly via one of the `pytest-*` deps here?\r\nhttps://github.com/pypa/pipenv/blob/cb9d87ad05830449743cbc3ffa09ebbc7cca602d/Pipfile#L6-L21\r\n\r\nMaybe refreshing this repo's `Pipfile.lock` will be sufficient to pick up the 7.2.0 update?",
      "@cclauss Several vendored dependencies (including `attr`) have now been updated on `main`. Could you rebase on `main` to pick up those changes? After that, I would recommend running `pipenv lock` to refresh this repo's `Pipfile.lock`, since hopefully the pytest update will resolve the other issues :-)",
      "@oz123 HI! I don't suppose you have a spare moment to review/merge this? :-) "
    ],
    "commit_messages": [
      "Merge pull request #5245 from cclauss/patch-3\n\nAdd Python 3.11 to the testing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ae44ee515ce6a4eb83",
    "number": 5244,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "@cclauss Would you mind adding a news fragment (you can tag this PR number 5244)?"
    ],
    "commit_messages": [
      "Upgrade GitHub Actions (#5244)\n\n* Upgrade GitHub Actions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013af44ee515ce6a4eb84",
    "number": 5241,
    "body": "new version of setuptools caused test failures with Mac OS https://pypi.org/project/setuptools/#history\r\n\r\nSee failures: https://github.com/pypa/pipenv/runs/7808617379?check_suite_focus=true\r\n\r\n### The issue\r\n\r\nI removed the offending code and all tests passed on windows, so I think this 2018/2019 logic may not be required.",
    "head_branch": "fix-macos-test-failure",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove code that is not required but may be causing the mac OS test failures. (#5241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b044ee515ce6a4eb85",
    "number": 5238,
    "body": "I don't know if this file is autogenerated. If it is, then I think\r\nthere's a bug somewhere. If it's not, then this was just human error.\r\n",
    "head_branch": "jfly/fix-typo",
    "is_a_fork": true,
    "comments": [
      "It was human error, the file gets generated by vendoring scripts which are invoked by humans."
    ],
    "commit_messages": [
      "Fix typo: the latest version of pipenv is 2022.8.5 (#5238)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b044ee515ce6a4eb86",
    "number": 5236,
    "body": "Zipp was introduces as a dependency of pep517. However,\r\nwe are now using pep517 from `pip._vendor`. The version included\r\nthere isn't using any code path that requires zipp. Hence, it is\r\nexcluded from `pip._vendor`, and can be safely removed.\r\n",
    "head_branch": "drop-zipp",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Drop zipp from vendored libs.\n\nZipp was introduces as a dependency of pep517. However,\nwe are now using pep517 from `pip._vendor`. The version included\nthere isn't using any code path that requires zipp. Hence, it is\nexcluded form `pip._vendor`, and can be safely removed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b144ee515ce6a4eb87",
    "number": 5235,
    "body": " Removed the initialize method. This was masking sphinx autodoc.\r\n Also, it was directly used inside the __init__ method.\r\n\r\n Fix #5201\r\n\r\n",
    "head_branch": "document-environment-variables",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Replace call to project.s.initialize"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b244ee515ce6a4eb88",
    "number": 5234,
    "body": "### The issue\r\n\r\nI'm trying to fix https://github.com/pypa/pipenv/issues/4371. I think it's better to consider 2 cases below:\r\n- Installing from Pipfile.\r\n- Installing from provided packages (the issue itself).\r\n\r\n### The fix\r\n\r\n#### Installing from Pipfile\r\n\r\nI read through the code, and here is what it does when installing packages from Pipfile:\r\n1. Resolve `dev-packages` dependencies. Write to lockfile as default.\r\n2. Resolve `packages` dependencies. Write to lockfile as develop.\r\n3. Overwrite duplicated develop packages by default packages.\r\n4. Install default and develop packages in the lockfile.\r\n\r\nBecause, `dev-packages` is resolved separately, there might be a chance where `dev-packages` is overwritten but its dependencies are not (they aren't duplicated with `packages`). So I think the result dependency graph would be more accurate if `packages` is considered as constraint while resolving `dev-packages` dependencies. Luckily pip provided [constraints files](https://pip.pypa.io/en/stable/user_guide/#constraints-files).\r\n\r\nI modified the code to do the followings:\r\n1. Resolve `packages` dependencies. Write to lockfile.\r\n2. Create constraints file from `packages`. Skip editable and extras packages as describe in [pip constraints files](https://pip.pypa.io/en/stable/user_guide/#constraints-files).\r\n3. Resolve `dev-packages` dependencies using constraints file above. Write to lockfile as default.\r\n4. Overwrite duplicated packages. Although `dev-packages` was resolved with constraints, this step is also important because there some cases constraints might be skipped (editable and extras packages).\r\n5. Install resolved packages.\r\n\r\n\r\n#### Installing from provided packages\r\n\r\nWhen packages are passed as arguments, pipenv does the followings:\r\n1. Install passed packages without resolving dependencies. Write to Pipfile and lockfile.\r\n2. Resolving `dev-packages` and `packages` independently. Modify the lockfile.\r\n3. Overwrite duplicated packages.\r\n4. Install all the packages in the lockfile again. There might be a case it will uninstall the packages from step 1 before installing.\r\n\r\nSimilar to the first problem, I tried to use default packages as constraints to resolve packages dependencies. I think it is enough to just resolve `dev-packages` at step 1. Because default packages should be installed directly, and resolved packages at step 2 don't need to be resolved again.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "issue-4371-incorrect-dependencies-when-install-dev-packages",
    "is_a_fork": true,
    "comments": [
      "@dqkqd I left a few more notes about areas I think we could further refine the code and reduce duplication.   I think if we can factor out the three spots we write constraint files into a common utility and some of the places we can use `@cached_property` to allow for simpler and more readable properties.  I think the change makes sense and could be merged, but chipping away at the some more of this type of technical debt would be good.",
      "@dqkqd Nice work!",
      "@matteius Thank you."
    ],
    "commit_messages": [
      "Issue 4371 incorrect dependencies when install dev packages (#5234)\n\n* Add test, ensure dev lock use default packages as constraints.\r\n\r\n* Use default packages as constraints when locking develop packages.\r\n\r\n* Add test, ensure installing dev-packages use default packages as constraints. (#4371) (#2987)\r\n\r\n* Use default packages as constraints when installing provided dev packages.\r\n\r\n* change vistir.path.normalize_path to pipenv.utils.shell.normalize_path\r\n\r\n* Add function that get contraints from packages.\r\n\r\n* Add test for get_constraints_from_deps function\r\n\r\n* Use get_constraints_from_deps to get constraints\r\n\r\n* Use @cached_property instead of @property\r\n\r\n* Use standalone utility to write constraints file\r\n\r\n* prepare_constraint_file use precomputed constraints.\r\n\r\n* Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b344ee515ce6a4eb89",
    "number": 5233,
    "body": "I have added a command which list all the latest availabe system varible in the docs\r\n\r\nThank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "Please see #5235. \r\nI appreciate you motivation to contribute. However, the commit you suggest isn't sufficient."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b444ee515ce6a4eb8a",
    "number": 5232,
    "body": "Just below the \"Custom Virtual Environment Location\" I have added all the system environment variable\r\n\r\nThank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This approach requires manual labor to document the variables if they are removed or added.\r\nPlease see my branch here:\r\nhttps://github.com/pypa/pipenv/tree/document-environment-variables\r\n\r\nYou can steal this code, and add the news fragment to finish my PR. ",
      "> This approach requires manual labor to document the variables if they are removed or added. Please see my branch here: https://github.com/pypa/pipenv/tree/document-environment-variables\r\n> \r\n> You can steal this code, and add the news fragment to finish my PR.\r\n\r\nI've cleared the issue \r\ncan you merge the request now?",
      "Not yet. You still need to change `environments.py` and create a news entry.",
      "> Not yet. You still need to change `environments.py` and create a news entry.\r\n\r\nSee what I suggest is that \r\nYou can merge the request now \r\n\r\nAnd I will later raise the issue for any descrepancies",
      "@Abdullium thank you for your contribution, I created a PR which fixes the issue #5235 ."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b544ee515ce6a4eb8b",
    "number": 5231,
    "body": "After switching to use exclusively vendor'd pip for remaining commands, which includes install, two of the tests when run on python < 3.10 were failing in a weird loop where setuptools would get uninstalled and then be requested to install the newer version of setuptools and fail.   I am not sure why this passed on python 3.10 or why its so problematic for versions less than 3.10. \r\n\r\nThe other thing this should fix is pipenv should no longer include BAD_PACKAGES in the Pipfile.lock -- these are packages that were already required be installed when installing `pipenv` so it should not be necessary to include them in the lock.  I had to manually delete setuptools from the pipenv Pipfile.lock to get the build to even run the tests for python versions < 3.10 in this PR:  https://github.com/pypa/pipenv/pull/5229 ",
    "head_branch": "ignore-bad-packages-from-install",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix linting"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b544ee515ce6a4eb8c",
    "number": 5230,
    "body": "Was hopeful this could solve the setuptools issue with two additional failing tests when not on python 3.10 but it does not appears to do so.  What it does do is vendor in pip 22.2.2",
    "head_branch": "vendor-pip-22.2.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b644ee515ce6a4eb8d",
    "number": 5229,
    "body": "### The issue\r\n\r\nSome of the other commands in core rely on the system installed pip, which has proven problematic for some issue reports in the past.   In PR we made great strides to using the internal vendored pip version and we dropped pip from being an installed requirement:  https://github.com/pypa/pipenv/pull/5199\r\n\r\nThis PR addresses other found spots in core.py that were using the user or system installed version of pip.   Fortunately in the latest pip we vendored in they revised the utility `_get_runnable_pip` such that it no longer generates a zip file, and it is the logical point for getting the module `pipenv.patched.pip` as a runnable python command.\r\n\r\nIt took me a few tries to arrive at this solution.",
    "head_branch": "use-vendored-pip-strikes-again",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Try with version that has new setuptools available in pypi."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b744ee515ce6a4eb8e",
    "number": 5228,
    "body": "Vendor in requirementslib==2.0.0 and drop pip-shims entirely.\r\n\r\nSome systems have patched sysconfig differently, and from this discussion (https://github.com/pypa/setuptools/discussions/3544) it would appear that importing setuptools packages is problematic \r\n\r\n",
    "head_branch": "requirementslib-test",
    "is_a_fork": false,
    "comments": [
      "We still need to fix the merge conflicts @matteius ",
      "@oz123 I had merged main into this branch and resolved them, squash and merge did not show any conflicts so I went ahead and merged, thanks for your review!"
    ],
    "commit_messages": [
      "Vendor in `requirementslib==2.0.0` & drop `pip-shims` & revert sysconfig patch w/ safer setuptools usage (#5228)\n\n* Vendor in requirementslib 2.0.0\r\n\r\n* Drop sysconfig default patch.\r\n\r\n* Remove setuptools import usages in pipenv.\r\n\r\n* Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b844ee515ce6a4eb8f",
    "number": 5227,
    "body": "Continuing to remove duplications, we now use pep517 bundled with pip.\r\nAlso, cleanup some unused code in the vendor task.",
    "head_branch": "more-vendoring-fixes",
    "is_a_fork": false,
    "comments": [
      "These freaky Mac Tests, these breakages continue. However, they have nothing to do with the proposed changes."
    ],
    "commit_messages": [
      "Remove vendored pep517, use it from pip._vendor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b944ee515ce6a4eb90",
    "number": 5226,
    "body": "### The issue\r\n\r\nThis test sporadically fails on some of the CI runs -- looking more closely, we can convert off a vistir usage and update this test to not use pip-shims.  Hopefully this helps the CI not fail this test randomly.\r\n",
    "head_branch": "cleanup-flakey-test",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013b944ee515ce6a4eb91",
    "number": 5225,
    "body": "\r\n\r\n### The issue\r\n\r\nhttps://github.com/pypa/pipenv/issues/5214\r\n\r\nThis commit fixes the auto completing crash mentioned in the above command.\r\n\r\n### The fix\r\n\r\nThe bug is related to click and I have opened a corresponding issue in their github:\r\nhttps://github.com/pallets/click/issues/2336\r\n\r\nThe main problem is that expose_value=False when used for arguments breaks the autocomplete.\r\nThe best solution is to fix click and then vendor the new version. However \"expose_value=False\" doesn't do anything for us as far as I can see. So removing it or setting it to true is a viable option.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "@bakhtiary The linter step failed on the `pre-commit` check for the news fragment -- could you run this and commit the changes?\r\n`pre-commit run --all-files --verbose --show-diff-on-failure`",
      "done!\n\nAmir H. Bakhtiary\nhttp://amirhb.com/\n\n\n\nOn Sat, Aug 6, 2022 at 4:45 PM Matt Davis ***@***.***> wrote:\n\n> @bakhtiary <https://github.com/bakhtiary> The linter step failed on the\n> pre-commit check for the news fragment -- could you run this and commit\n> the changes?\n> pre-commit run --all-files --verbose --show-diff-on-failure\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pypa/pipenv/pull/5225#issuecomment-1207226882>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABHTECG4FE5E3U6DVA3FLYTVXZ3AJANCNFSM55YTDVHQ>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n"
    ],
    "commit_messages": [
      "run pre-commit and apply the corresponding linter fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ba44ee515ce6a4eb92",
    "number": 5223,
    "body": " * Bump python version required\r\n * Add install instructions for gentoo\r\n * Update usage output from `pipenv --help`\r\n\r\nFix #5213 ",
    "head_branch": "update-readme",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "update README\n\n * Bump python version required\n * Add install instructions for gentoo\n * Update usage output from `pipenv --help`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013bb44ee515ce6a4eb93",
    "number": 5222,
    "body": "Fixes: #5128",
    "head_branch": "improve-CI-variable-handling",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "refactor based on PR feedback."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013bc44ee515ce6a4eb94",
    "number": 5220,
    "body": "### The issue\r\n\r\nWhen installing a requirement that explicitly references an index all indexes are searched even though `install_search_all_sources = False`.\r\n\r\n### The fix\r\n\r\nThere were two different locations where the code appears to not have the expected behavior.\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "fix_extra_indexes",
    "is_a_fork": true,
    "comments": [
      "This seems like a good improvement, but I still would like to get a second opinion from @matteius .\r\nCould you please also add a news file?",
      "@aronbierbaum I am not sure why earlier I could not get that second test failure, because I was able to reproduce it now.   I think this would be a good way the fix the other test, since we showed both methods here, one where we rely on index restrictions, and this test where we allow all indexes to be searched:\r\n```\r\ndiff --git a/tests/integration/test_install_uri.py b/tests/integration/test_install_uri.py\r\nindex f21da0f4..470274ef 100644\r\n--- a/tests/integration/test_install_uri.py\r\n+++ b/tests/integration/test_install_uri.py\r\n@@ -209,6 +209,9 @@ name = \"pypi\"\r\n six = \"*\"\r\n\r\n [dev-packages]\r\n+\r\n+[pipenv]\r\n+install_search_all_sources = true\r\n             \"\"\".strip()\r\n             f.write(contents)\r\n         c = p.pipenv(\"install pipenv-test-private-package --index https://test.pypi.org/simple\")\r\n```",
      "@aronbierbaum Thanks for this fix! :+1:  I've been pulling hairs for hours trying to understand why pipenv is installing the public \"utils\" package instead of my private one. You're awesome man! :1st_place_medal:"
    ],
    "commit_messages": [
      "Fix test suite"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013bd44ee515ce6a4eb95",
    "number": 5218,
    "body": "* Vendor safety==2.1.1 cleanly with ruamel.\r\n\r\n* Apply more minimal patch to safety.\r\n\r\nThank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nThe new version of safety has strange output:\r\n\r\n```\r\nmatteius@matteius-VirtualBox:~/pipenv$ pipenv check\r\nChecking PEP 508 requirements...\r\nPassed!\r\nChecking installed package safety...\r\nr: r e resolved (p installed)!\r\no\r\n\r\nn: s c resolved (a installed)!\r\nn\r\n\r\nc: a f resolved (f installed)!\r\ne\r\n\r\nu: a n resolved (n installed)!\r\no\r\n\r\ne: v u resolved (l installed)!\r\nn\r\n\r\nr: i g resolved (n installed)!\r\no\r\n\r\nd: r e resolved (m installed)!\r\ne\r\n```\r\n",
    "head_branch": "vendor-latest-safety2",
    "is_a_fork": false,
    "comments": [
      "Hi @matteius!\r\n\r\nI'm Yeison from the [https://pyup.io](https://pyup.io) team.\r\n\r\nThank you for the effort in integrating this new Safety major version with more features for the users.\r\n\r\nThe issue is related to the new JSON structure used in Safety 2.x.x that includes further information like remediations for users using an API Key.\r\n\r\nYou can know more about the JSON output in the following [docs](https://docs.pyup.io/docs/safety-20-configuration-outputs#json-output)\r\n\r\nThe parsing needs to be fixed in the following line:\r\nhttps://github.com/pypa/pipenv/blob/ca38db63dba0a3e5299bc32f7de2d33212f27e4b/pipenv/core.py#L2782\r\n\r\nIt would be nice if we can output the Safety screen output to the Pipenv user as we won't need to make a double effort rendering the results.\r\n\r\nOn the other side, I think we will need to define more options [here](https://github.com/pypa/pipenv/blob/ca38db63dba0a3e5299bc32f7de2d33212f27e4b/pipenv/cli/command.py#L473), as Safety 2.x.x includes now better handling for exit codes and a [policy file](https://docs.pyup.io/docs/safety-20-policy-file) that will be useful for the users.\r\n\r\nI'll be happy to contribute to this PR if you want to.\r\n",
      "@yeisonvargasf Thanks!  Sure -- if you have some spare cycles to help with this, probably the way to do this is you can fork pipenv and create a branch based on this branch `vendor-latest-safety2` and open a PR back to this branch.  I'll be vendoring in the updated safety package when it gets released next to this same PR.",
      "Hi @matteius!\r\n\r\nI created a draft PR with the work in progress. I'll release a new Safety version in the coming days that makes some adjustments for the integration; therefore, we will need vendor Safety again using that version.\r\n\r\nPlease note the output change; as this Safety version includes more information, I removed the pipenv output in favor of the new Safety output.\r\n\r\nOn the other side, there is an issue when Safety tries to read a policy file because Safety uses `ruamel` to parse it, and the vendor version throws the error `module 'ruamel.yaml' has no attribute 'resolver'`:\r\n\r\nhttps://github.com/pypa/pipenv/blob/026be80b59bd535005d89713019a800cc0ef32f2/pipenv/vendor/ruamel/yaml/main.py#L77\r\n\r\nCould you look at that issue when you return to this pull request?\r\n\r\n\r\n\r\n_Thanks!_",
      "@yeisonvargasf If you change that issue line `ruamel.yaml.resolver.VersionedResolver` to `pipenv.vendor.ruamel.yaml.resolver.VersionedResolver` does it resolve the module?  Actually it is probably that top level import of `import ruamel.yaml` -- this is problematic for the way the pipenv vendoring process re-writes imports.    It would be better if that library just did `from ruamel.yaml.resolver impoty VersionedResolver` because then the imports would be re-written correctly by the pipenv vendoring scripts.   It is unfortunate that we are vendoring in `ruamel` just for this purpose of the safety command -- for what its worth, it would be more ideal if safety did not have this dependency and used instead `tomlkit` or `tomli`.\r\n\r\n",
      "@yeisonvargasf Actually I see now you are using ruamel not for parsing toml files, but for the response of the safety json data I think -- why not use the built in python module `yaml`?",
      "@matteius \r\n\r\n> If you change that issue line ruamel.yaml.resolver.VersionedResolver to pipenv.vendor.ruamel.yaml.resolver.VersionedResolver does it resolve the module? \r\n\r\nYes, it's related to the top-level import. Any suggestion about how to address it? I'm not sure how works the pipenv vendoring process; any clue to go in the right direction would be great.\r\n\r\n> why not use the built in python module yaml?\r\n\r\nWe are using YAML 1.2 for our policy file; sadly, as far as I'm aware [pyyaml](https://github.com/yaml/pyyaml/) doesn't support [yet](https://github.com/yaml/pyyaml/pull/555) YAML 1.2 and yaml doesn't belong to the python standard library so we would need to vendor it like ruamel.\r\n\r\nBy the way, I agree it would be ideal if safety did not have this dependency, but I don't see a way to achieve that at the moment.\r\n\r\nThanks for the quick response on this, let me know your thoughts about the ruamel dependency.\r\n",
      "@yeisonvargasf Thanks for the explanations -- I think the only way around that path import issue is to either add a patch file, which assuredly will work, or we possibly add the right regex to the `GLOBAL_REPLACEMENT` -- both things are within the tasks directory -- the current set of patches are in pipenv/tasks/vendoring/patches -- I can help with this part, but first I am going to merge your PR into this branch and then resolve conflicts/update with main.",
      "@yeisonvargasf I think I got the vendoring of ruamel sorted out the best that I can without doing an explicit patch file, which should be avoided if possible.   Please have a look at this branch again as its the latest main + your changes + my vendoring fixes.\r\n\r\n```\r\nmatteius@matteius-VirtualBox:~/pipenv$ pipenv check\r\nLoading .env environment variables...\r\nChecking PEP 508 requirements...\r\nPassed!\r\nChecking installed package safety...\r\nRunning the command\r\n+==============================================================================+\r\n\r\n                               /$$$$$$            /$$\r\n                              /$$__  $$          | $$\r\n           /$$$$$$$  /$$$$$$ | $$  \\__//$$$$$$  /$$$$$$   /$$   /$$\r\n          /$$_____/ |____  $$| $$$$   /$$__  $$|_  $$_/  | $$  | $$\r\n         |  $$$$$$   /$$$$$$$| $$_/  | $$$$$$$$  | $$    | $$  | $$\r\n          \\____  $$ /$$__  $$| $$    | $$_____/  | $$ /$$| $$  | $$\r\n          /$$$$$$$/|  $$$$$$$| $$    |  $$$$$$$  |  $$$$/|  $$$$$$$\r\n         |_______/  \\_______/|__/     \\_______/   \\___/   \\____  $$\r\n                                                          /$$  | $$\r\n                                                         |  $$$$$$/\r\n  by pyup.io                                              \\______/\r\n\r\n+==============================================================================+\r\n\r\n REPORT \r\n\r\n  Safety v2.1.1 is scanning for Vulnerabilities...\r\n  Scanning dependencies in your environment:\r\n\r\n  -> /home/matteius/.virtualenvs/pipenv/lib/python3.10/site-packages\r\n\r\n  Using local file https://raw.githubusercontent.com/pyupio/safety-\r\n    db/master/data/ database\r\n  Found and scanned 118 packages\r\n  Timestamp 2022-09-15 09:54:41\r\n  0 vulnerabilities found\r\n  0 vulnerabilities ignored\r\n+==============================================================================+\r\n\r\n No known security vulnerabilities found. \r\n\r\n+==============================================================================+\r\n```",
      "Since this runs in a subprocess, we will need an importlib patch similar to:  https://github.com/pypa/pipenv/blob/main/tasks/vendoring/patches/patched/_post_pip_import.patch#L9-L15\r\nBut also I am wondering, maybe we can invoke it directly without using sub-process -- I was testing out doing something similar with the graph command recently, and it may be possible using a similar approach to this change:\r\n```\r\n+++ b/pipenv/core.py\r\n@@ -2885,27 +2885,9 @@ def do_check(\r\n def do_graph(project, bare=False, json=False, json_tree=False, reverse=False):\r\n     import json as jsonlib\r\n \r\n-    from pipenv.vendor import pipdeptree\r\n-\r\n-    pipdeptree_path = os.path.dirname(pipdeptree.__file__.rstrip(\"cdo\"))\r\n-    try:\r\n-        python_path = project._which(\"python\")\r\n-    except AttributeError:\r\n-        click.echo(\r\n-            \"{}: {}\".format(\r\n-                click.style(\"Warning\", fg=\"red\", bold=True),\r\n-                \"Unable to display currently-installed dependency graph information here. \"\r\n-                \"Please run within a Pipenv project.\",\r\n-            ),\r\n-            err=True,\r\n-        )\r\n-        sys.exit(1)\r\n-    except RuntimeError:\r\n-        pass\r\n-    else:\r\n-        if not os.name == \"nt\":  # bugfix #4388\r\n-            python_path = Path(python_path).as_posix()\r\n-            pipdeptree_path = Path(pipdeptree_path).as_posix()\r\n+    from pipenv.vendor.pipdeptree import main\r\n \r\n     if reverse and json:\r\n         click.echo(\r\n@@ -2956,70 +2938,25 @@ def do_graph(project, bare=False, json=False, json_tree=False, reverse=False):\r\n             err=True,\r\n         )\r\n         sys.exit(1)\r\n-    cmd_args = [python_path, pipdeptree_path, \"-l\"]\r\n+\r\n+    cmd_args = [\"-l\"]\r\n     if flag:\r\n         cmd_args.append(flag)\r\n-    c = run_command(cmd_args, is_verbose=project.s.is_verbose())\r\n-    # Run dep-tree.\r\n-    if not bare:\r\n-        if json:\r\n-            data = []\r\n-            try:\r\n-                parsed = simplejson.loads(c.stdout.strip())\r\n-            except jsonlib.JSONDecodeError:\r\n-                raise exceptions.JSONParseError(c.stdout, c.stderr)\r\n-            else:\r\n-                for d in parsed:\r\n-                    if d[\"package\"][\"key\"] not in BAD_PACKAGES:\r\n-                        data.append(d)\r\n-            click.echo(simplejson.dumps(data, indent=4))\r\n-            sys.exit(0)\r\n-        elif json_tree:\r\n-\r\n-            def traverse(obj):\r\n-                if isinstance(obj, list):\r\n-                    return [\r\n-                        traverse(package)\r\n-                        for package in obj\r\n-                        if package[\"key\"] not in BAD_PACKAGES\r\n-                    ]\r\n-                else:\r\n-                    obj[\"dependencies\"] = traverse(obj[\"dependencies\"])\r\n-                    return obj\r\n-\r\n-            try:\r\n-                parsed = simplejson.loads(c.stdout.strip())\r\n-            except jsonlib.JSONDecodeError:\r\n-                raise exceptions.JSONParseError(c.stdout, c.stderr)\r\n-            else:\r\n-                data = traverse(parsed)\r\n-                click.echo(simplejson.dumps(data, indent=4))\r\n-                sys.exit(0)\r\n-        else:\r\n-            for line in c.stdout.strip().split(\"\\n\"):\r\n-                # Ignore bad packages as top level.\r\n-                # TODO: This should probably be a \"==\" in + line.partition\r\n-                if line.split(\"==\")[0] in BAD_PACKAGES and not reverse:\r\n-                    continue\r\n-\r\n-                # Bold top-level packages.\r\n-                if not line.startswith(\" \"):\r\n-                    click.echo(click.style(line, bold=True))\r\n-                # Echo the rest.\r\n-                else:\r\n-                    click.echo(click.style(line, bold=False))\r\n-    else:\r\n-        click.echo(c.stdout)\r\n-    if c.returncode != 0:\r\n+    sys.argv[1:] = cmd_args\r\n+    try:\r\n+        main()\r\n+    except Exception as e:\r\n         click.echo(\r\n             \"{} {}\".format(\r\n                 click.style(\"ERROR: \", fg=\"red\", bold=True),\r\n-                click.style(f\"{c.stderr}\", fg=\"white\"),\r\n+                click.style(f\"{e}\", fg=\"white\"),\r\n             ),\r\n             err=True,\r\n         )\r\n+        sys.exit(1)\r\n+\r\n     # Return its return code.\r\n-    sys.exit(c.returncode)\r\n+    sys.exit(0)\r\n \r\n \r\n def do_sync(\r\ndiff --git a/tasks/vendoring/__init__.py b/tasks/vendoring/__init__.py\r\nindex bbd1a8cc..49bb98e7 100644\r\n--- a/tasks/vendoring/__init__.py\r\n+++ b/tasks/vendoring/__init__.py\r\n@@ -64,6 +64,7 @@ LIBRARY_RENAMES = {\r\n     \"packaging\": \"pipenv.patched.pip._vendor.packaging\",\r\n     \"urllib3\": \"pipenv.patched.pip._vendor.urllib3\",\r\n     \"zipp\": \"pipenv.vendor.zipp\",\r\n+    \"pipdeptree\": \"pipenv.vendor.pipdeptree\",\r\n }\r\n```",
      "Quick opinion: I've always found default `safety` output overly verbose, especially the 15 lines of logo. Part of why I liked the `pipenv check` command is because it made the output more compact. This will get lost by just showing `safety`'s output directly.\r\n\r\nThat said, in my CI builds I have since replaced `pipenv check` with a small Python script that gets a JSON from `safety` and formats it manually, so this change wouldn't affect me personally. Just saying, it may seem like a \"removed feature\" to some users.",
      "Hi @matteius! Glad to be in touch with you again; I'm sorry for the delay; we were working on improving our databases and data.\r\n\r\n>  I am wondering, maybe we can invoke it directly without using sub-process\r\n\r\nYes, it's possible; I'll make a PR with these changes. So you can review them.\r\n\r\n@matteius, once I make the PR, I'll release a new Safety version, and it'll be great if you can help me with the vendoring of that latest Safety version, so we can get everything ready to get this update done. \r\n\r\n@derula, thank you for your observation; I'll include a new non-verbose option in the output formats. However, I'll keep the Safety screen report as the default because it now offers more information about the scanned packages and more resources to read about the vulnerabilities.\r\n\r\n\r\n\r\n\r\n",
      "Hi @matteius, I made a PR with the changes to follow your idea not to use a subprocess, and also I added a `minimal` output following the @derula opinion.\r\n\r\n@matteius, please check if all looks good from your side with these new changes; I'll release a new Safety version in the coming days, addressing an issue related to `ruamel` inside of the `pipenv check` command; after that, we'll need to vendoring the latest Safety version.\r\n\r\nThanks for your patience. If you have any comments, let me know. 👍 ",
      "@yeisonvargasf nice, thanks for the consideration! Defaulting to Safety's standard output definitely seems like a good idea, and having the option I think is useful for getting a quick overview of problems, You can always run the command in default mode again to get detailed information.",
      "@matteius, @oz123 approved #5480 PR. Could you review it and merge it if you consider it okay?\r\n\r\nIf you find anything to be fixed, let me know. Thanks!\r\n\r\n",
      "@matteius, thanks for the quick merging! Could you vendoring Safety `2.3.2`? This integration needs Safety `2.3.2` and is the most secure version.\r\n\r\nLet me know if you want me to help in the vendoring (Happy to help if you share documentation about how to do it).",
      "@yeisonvargasf I have updated the vendoring.  If you have to do this again in the future, the process is somewhat straightforward:\r\n1.) Update the patched/patched.txt (or vendor/vendor.txt) file\r\n2.) run `pipenv sync -d` and then `pipenv run invoke vendoring.update` and that revendors everything based on those specifiers\r\n3.) Sometimes a patch for the patched version of vendoring breaks and needs to be updated as a result -- safety does have a patch file -- these live in `tasks/vendoring/patches/`",
      "@yeisonvargasf The one safety test in the project is failing because safety scans the root project virtualenv and not the one created by the test.  I marked the test as skip for now, but if you have a chance can you take a look at it?  I won't let it hold up this PR since the functionality appears to be working now but it would be good to figure out how to reinstate this test.",
      "Thank you @matteius, for your work and quick responses!\r\n\r\nI left a PR for your review: https://github.com/pypa/pipenv/pull/5492.\r\n\r\nAfter fixing #5492 locally, I continued testing and found https://github.com/pypa/pipenv/issues/5493. Could you help me to take a look at it?\r\n\r\nFrom my side, I'm looking at a solution for #5488 and #4819.\r\n\r\n\r\n"
    ],
    "commit_messages": [
      "Vendor new safety (#5217) (#5218)\n\n* Vendor new safety (#5217)\r\n\r\n* Closest to correct vendoring of ruamel.\r\n\r\n* Fix lint\r\n\r\n* New pipenv check with minimal output.\r\n\r\n* Remove decode_for_output use in pipenv check functions.\r\n\r\n* Use click.secho where is possible.\r\n\r\n* Rerun vendoring to get the latest safety version.\r\n\r\n* skip this test for now.\r\n\r\nCo-authored-by: Yeison Vargas <yeisonvargasjf@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013be44ee515ce6a4eb96",
    "number": 5217,
    "body": "Going to squash my commits into this other branch,\r\n\r\n### The issue\r\n\r\nVendoring latest safety.",
    "head_branch": "vendor-new-safety",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Vendor new safety (#5217)\n\n* Vendor safety==2.1.1 cleanly with ruamel.\r\n\r\n* Apply more minimal patch to safety."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662013bf44ee515ce6a4eb97",
    "number": 5216,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nI must have missed adding these new files that get generated when you run vendoring command on a fresh checkout.\r\n",
    "head_branch": "vendoring-adds-these-files",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "PR feedback."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013bf44ee515ce6a4eb98",
    "number": 5215,
    "body": "See #5174\r\n",
    "head_branch": "remove-urllib3-take-3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Tiny fixes to the Makefile\n\nProperly write test_venv.\nFix missing option to test target."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c044ee515ce6a4eb99",
    "number": 5211,
    "body": "As discussed in #5174 we move towards using pip's own vendored versions.\r\n\r\nI am going to remove all the packages, each one in a separate commit, and in beween I am running the tests locally.\r\nHence, this will take a few days to finish.",
    "head_branch": "remove-duplicate-vendored-libs",
    "is_a_fork": false,
    "comments": [
      "Can you add these to the `LIBRARY_RENAMES` in the vendoring script: https://github.com/pypa/pipenv/blob/main/tasks/vendoring/__init__.py#L59",
      "> Can you add these to the `LIBRARY_RENAMES` in the vendoring script: https://github.com/pypa/pipenv/blob/main/tasks/vendoring/__init__.py#L59\r\n\r\nIt's already done. Otherwise, it's impossible to run the vendoring task.\r\nhttps://github.com/pypa/pipenv/blob/9409f3786acace09b5843c3918e2cd346d5f21c2/tasks/vendoring/__init__.py#L64",
      ">It's already done.\r\n\r\nNot sure why I didn't see that in there, but sure enough.",
      "Closing this in favour of #5215. This got too much. We'll have to remove duplicates in a slow manner along a few releases.\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c144ee515ce6a4eb9a",
    "number": 5210,
    "body": "Thanks for creating such beautiful project!\r\n\r\n\r\n### The issue\r\nI'm trying to fix https://github.com/pypa/pipenv/issues/5180\r\n\r\n`get_paths`, `get_lib_paths`, `get_include_path` functions create new .json files to store output called from `subprocess_run` without closing it.\r\n\r\n### The fix\r\n\r\n\r\nBecause the .json file is used only inside the function call. I have two solutions for this.\r\n- Delete the .json file at the end of each function.\r\n- Don't create a file, write output directly into `stdout`.\r\n\r\nAs these functions contain many returns, there will be a lot of duplicated codes to delete the file. So I tend to the second solution.\r\n\r\nAs far as I know, `subprocess_run` execute `py_command`, and if it failed to execute, `c.stdout` will be printed out to console. But the `py_command` does not print anything out. Therefore `c.stdout` is always empty. \r\nInstead of creating new temporary file, I think it is better to use `c.stdout` to write directly to `paths` variable.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5180-tempfiles-are-leak-in-tmp",
    "is_a_fork": true,
    "comments": [
      "I noticed that `self.get_paths()` does not raise any exception. So I think exception handling is unnecessary, and we could safely remove `self.get_include_path()`, `self.get_lib_paths()`, `self._replace_parent_version()` functions.\r\nhttps://github.com/pypa/pipenv/blob/75b77ebebf5559c75f3ece9eba068afecba3769b/pipenv/environment.py#L217-L240\r\n",
      "@dqkqd Looks good, nice work! -- do you mind adding a news fragment explaining your change?",
      "@dqkqd Thanks for adding a news fragment -- the linter wants there to be a newline at the end of that news fragment.",
      "> @dqkqd Thanks for adding a news fragment -- the linter wants there to be a newline at the end of that news fragment.\r\n\r\nSorry, I forgot to run `pre-commit`",
      "Sorry for the mess with the fragment file. I fixed it again.\r\nI also remove exception handling when trying to run `self.get_paths()`.\r\nI'm not sure `returncode == 0`  inside `self.get_paths()`should be removed or not. Since `py_command` run inside `suprocess_run`, might be it would be better to check in case `py_command` has error.",
      "> @dqkqd It would seem this latest commit is problematic for windows: [3ca7c96](https://github.com/pypa/pipenv/commit/3ca7c96107bf589634f9e2e2e400effcae1b437b)\r\n> \r\n> Can it be reverted?\r\n\r\nYes, I reverted it. Not sure why it didn't work since I don't have windows.\r\n",
      "@dqkqd I just want to say again what awesome work you did with this change -- to be able to eliminate some file usage altogether is amazing for performance, and I think we see that in the new measurements that @oz123 pointed me at this evening, which are provided by the head of Lincoln Loop:  https://lincolnloop.github.io/python-package-manager-shootout/\r\nIts hard to look back on the historical data presently, but its in the github actions and from the tweet I saw before, the variance of the mean time to lock was reduced as was the overall time.   Nice work!",
      "@matteius Thank you so much. This is my first time contributing to open sources. Sorry for messing up with git."
    ],
    "commit_messages": [
      "Revert \"Revert \"Remove newline, add dot.\"\"\n\nThis reverts commit 029d187a2e241b8586373a11daaf3694a43af497."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c244ee515ce6a4eb9b",
    "number": 5209,
    "body": "Fixes: #5206 \r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5206",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c344ee515ce6a4eb9c",
    "number": 5207,
    "body": "Patch Hash Didn't Match",
    "head_branch": "patch-correction",
    "is_a_fork": true,
    "comments": [
      "Git was showing the patch file as corrupt on Jakes computer, so had him regenerate it and it seems to apply find on vendoring here and on my computer.  Noting that the hash length has increased by one character. "
    ],
    "commit_messages": [
      "Regen patch hash"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c444ee515ce6a4eb9d",
    "number": 5204,
    "body": "`pip_shims` is slow and make the interface confusing for the internal `pip` usages.  Best part?  We no longer need to rely on pip_shims for pipenv usages, because we vendor in a specific version of pip and rely exclusively on it.\r\n\r\nWe will have to consider requirementslib separately, and then perhaps one day we can abandon pip_shims entirely.\r\n\r\n### The checklist\r\n\r\n* [?] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "unravel-pip_shims",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "correction"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c444ee515ce6a4eb9e",
    "number": 5203,
    "body": "Resolves #1226\r\n\r\nAllows user to set a custom venv name\r\n\r\n### The fix\r\nCheck for PIPENV_CUSTOM_VENV_NAME environment variable, accept it as venv name at creation if it is set\r\n",
    "head_branch": "4974-custom-venv-name",
    "is_a_fork": true,
    "comments": [
      "Setting `PIPENV_CUSTOM_VENV_NAME` is going to trick a lot of people if we don't preserve it in Pipefile. \r\n\r\nSuppose I did:\r\n`export PIPENV_CUSTOM_VENV_NAME=foobar`\r\n\r\nNow there is:\r\n```\r\nhome/myuser/.virtualenvs/foobar`\r\n```\r\n\r\nIf I run pipenv in a new shell it's not going to have PIPENV_CUSTOM_VENV_NAME, hence it will look for an environment\r\nin the hash location, and not in  `foobar`. Hence, I suggest we preserve this in the Pipfile, and read it from there.\r\n\r\n@matteius do you have an opinion here?\r\n",
      ">  Setting PIPENV_CUSTOM_VENV_NAME is going to trick a lot of people if we don't preserve it in Pipefile.\r\n\r\n@oz123 I am not sure I agree with that approach when its much easier to have a `.env` file to store the environment variable you want to use for that project -- I fear that if its in the `Pipfile` it forces everyone on the project to have the same virtualenv name, and some may want the default generated one whereas others want to customize it -- a local `.env` solves this.  Otherwise I might already have a virtualenv setup and my teammate pushes that change to the `Pipfile` which forces my machine to generate a new virtualenv under this other name.",
      "I am considering putting self.s.PIPENV_CUSTOM_VENV_NAME into activate in environment.py, that seems like the creating a venv context level that this is appropriate to.  Waiting for more consensus around the pipfile bit.",
      "> I am considering putting self.s.PIPENV_CUSTOM_VENV_NAME into activate in environment.py\r\n\r\n@otherjake The reading of the environment variable should happen in `environments.py` where the other environment variables are read from.",
      "@matteius true. Putting it in `.env` is the correct way. Totally forgot we support this. ",
      "This obsoletes, https://github.com/pypa/pipenv/pull/4974. This is a reminder for us to  make sure we close that one too. ",
      "@otherjake Thank you for your contribution! I added a small change to your test. Didn't want to bother you again with changes.\r\nPlease take a look at it.\r\n\r\nBesides that, as usual :100: points  and a big thanks!"
    ],
    "commit_messages": [
      "Use temp_environ in test for CUSTOM_VENV_NAME\n\nThis is so that PIPENV_CUSTOM_VENV_NAME does not leak to\nother tests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c544ee515ce6a4eb9f",
    "number": 5200,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nRemove the deprecated `install -r` command and simplify the CLI interface + logic.\r\n\r\nFixes: #5198\r\n\r\n### The fix\r\n\r\nWe have the `pipenv requirements` command now.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5198-remove-old-r",
    "is_a_fork": false,
    "comments": [
      "`pipenv lock -r` does variable substitution (as of 2022.8.5) while `pipenv requirements` does not. This is needed when including private pypi repos with credentials that are substituted by env variables.",
      "Can you please open a separate issue for that?",
      "#5033 and #5272 seem to be related",
      "@EugeniuZ Its actually #5272  -- 5033 should probably be closed (people were getting hung up on index restricted packages) and 5200 is this PR."
    ],
    "commit_messages": [
      "Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c744ee515ce6a4eba0",
    "number": 5199,
    "body": "Was branched from and supersedes this PR: https://github.com/pypa/pipenv/pull/5193\r\nAlso supersedes this PR: https://github.com/pypa/pipenv/pull/5196\r\n which had one failing test that I decided to see if upgrading to the latest pip 22.2 would fix, and it has fixed it locally -- woo-hoo! \r\n\r\nFixes #5188\r\n\r\n### The issue\r\n\r\nThis accomplishes the following:\r\n* rename patched `notpip` to `pip` to be clear that its a patched version of `pip`.\r\n* Remove the part of the `_post_pip_import.patch` that overrode the standalone pip to be the user installed pip -- and instead go with the patched import to use our vendor'd pip.\r\n* Vendor in the next newest version of `pip==22.2.1`\r\n* Vendor in latest requirementslib\r\n* Vendor in latest vistir\r\n\r\nThis will allow for conversion off of some pip-shims, not needing pip installed to use pipenv (or having conflicting versions), and several bug fixes from the vendored dependencies  ",
    "head_branch": "vendor-pip-22.2.1-take3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Rename notpip to pip. Vendor in pip-22.2.1 and latest requirementslib and vistir."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c744ee515ce6a4eba1",
    "number": 5197,
    "body": "### The issue\r\n\r\nVistir has broken distutil code and probably other bugs.  Fix the known bug here, and note in the vendoring that its deprecated and our copy has diverged from the parent pypi `vistir` -- our goal is complete removal of this library.   An effort will be made to begin converting usages in `requirementslib` since that will be the biggest blocker to completely removing it from `pipenv`.\r\n\r\n",
    "head_branch": "deprecate-vistir",
    "is_a_fork": false,
    "comments": [
      "This is resolved by this PR:  https://github.com/pypa/pipenv/pull/5199"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c844ee515ce6a4eba2",
    "number": 5196,
    "body": "Was branched from and supersedes this PR: https://github.com/pypa/pipenv/pull/5193\r\n which had one failing test that I decided to see if upgrading to the latest pip 22.2 would fix, and it has fixed it locally -- woo-hoo!\r\n\r\nFixes #5188\r\n\r\n### The issue\r\n\r\nThis accomplishes the following:\r\n* rename patched `notpip` to `pip` to be clear that its a patched version of `pip`.\r\n* Remove the part of the `_post_pip_import.patch` that overrode the standalone pip to be the user installed pip -- and instead go with the patched import to use our vendor'd pip.\r\n* Vendor in the next newest version of `pip==22.2`",
    "head_branch": "vendor-pip-22.2.1-take2",
    "is_a_fork": false,
    "comments": [
      "You are right @oz123  -- I had too many changes in this PR and the vendoring process was problematic.  Not sure why the rename did not work in this PR, but I used `git mv` in this new PR and I re-wrote the PR  from scratch following what I know now, and improved the `GLOBAL_REPLACEMENT` in the vendoring script.  Closing this, please review this one instead:  https://github.com/pypa/pipenv/pull/5199"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013c944ee515ce6a4eba3",
    "number": 5194,
    "body": "### The issue\r\nhttps://github.com/pypa/pipenv/issues/5192\r\n### The fix\r\nI added a space.  I also changed the order of words a bit to make it feel smoother.\r\n",
    "head_branch": "5192-fix-error-message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "5192 correct spacing for PIPENV_COLORBLIND warning"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ca44ee515ce6a4eba4",
    "number": 5193,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nI noticed this through a number of issue reports that sometimes a user's local pip conflicts with pipenv's expected behavior.   To me, it does not make sense that we do not always use our patched vendored pip to install certain types of packages.   With this change it should be possible for a user to only install `pipenv` and not have pip installed at all.   There is nothing wrong with having both installed, but why have `pipenv` require it and rely on it when we go to the work to patch an vendor in the latest and greatest `pip`?\r\n\r\nI will rename `notpip` to `pip` in a follow-up PR.",
    "head_branch": "exclusive-vendored-pip-take2",
    "is_a_fork": false,
    "comments": [
      "Declining in favor of branch based on this one that also had to vendor in pip 22.2 to get this last failing test passing:  https://github.com/pypa/pipenv/pull/5196"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013cb44ee515ce6a4eba5",
    "number": 5190,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nI noticed this through a number of issue reports that sometimes a user's local pip conflicts with pipenv's expected behavior.   To me, it does not make sense that we do not always use our patched vendored pip to install certain types of packages.   With this change it should be possible for a user to only install `pipenv` and not have pip installed at all.   There is nothing wrong with having both installed, but why have `pipenv` require it and rely on it when we go to the work to patch an vendor in the latest and greatest `pip`?",
    "head_branch": "exclusive-vendored-pip",
    "is_a_fork": false,
    "comments": [
      "Possibly the last test failure hinges on: https://github.com/pypa/pip/issues/11120",
      "This is where the requirements are coming from that fail to install in the standalone pip in `test_lock_nested_direct_url`:  https://github.com/sarugaku/vistir/blob/master/pyproject.toml#L2",
      "Closing in favor of:  https://github.com/pypa/pipenv/pull/5193"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013cc44ee515ce6a4eba6",
    "number": 5189,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nThere have been times I wanted to know what the setuptools version or the version of pip outside of pipenv that the user has installed.  Also telling the OS would be helpful.",
    "head_branch": "more_refactoring",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add extra details to the pipenv support command (#5189)\n\n* Add extra diagnostics to support command.  Clean up old pip 9 reference.\r\n\r\n* Axe utility method that is no longer needed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013cd44ee515ce6a4eba7",
    "number": 5185,
    "body": "Follow-up to make NO_COLOR work and deprecated PIPENV_COLORBLIND.\r\n\r\n\r\n### The issue\r\n\r\nThere was some issues with the prior monkey patch suggested approach:  https://github.com/pypa/pipenv/pull/5184\r\n\r\nSo I opened this PR instead.",
    "head_branch": "support_NO_COLOR",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Support the NO_COLOR and deprecate PIPENV_COLORBLIND environment variables (#5185)\n\n* Refactor to support the NO_COLOR argument and deprecate PIPENV_COLORBIND variable.\r\n\r\n* Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ce44ee515ce6a4eba8",
    "number": 5184,
    "body": "### The issue\r\nMake Click heed requests for no color per https://no-color.org\r\n### The fix\r\nMonkey patch click.secho in core.py\r\nAdd new test for monkey patch doing the job correctly\r\n\r\n",
    "head_branch": "remove-crayons",
    "is_a_fork": true,
    "comments": [
      "Declining in favor of: https://github.com/pypa/pipenv/pull/5185\r\n\r\nThanks for working with me on this @otherjake !"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ce44ee515ce6a4eba9",
    "number": 5183,
    "body": "vendor in minor update from requirementslib\r\n\r\n### The issue\r\n\r\nFixes:  https://github.com/pypa/pipenv/issues/5179",
    "head_branch": "issue-5179-requirementslib",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Issue 5179 requirementslib==1.6.8 (#5183)\n\n* Vendor in requirementslib==1.6.8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013cf44ee515ce6a4ebaa",
    "number": 5182,
    "body": "This PR continues the cleaning of vendored package.\r\n\r\n * Removed YAML\r\n * Removed funcsigs\r\n * Removed copy of crayons\r\n * Patch dparse to only locally import yaml\r\n * Bump version of tomlkit we vendor\r\n\r\nAdditionally, it minor changes to the vendoring script itself (mostly minor cleanup related to Python2 and legacy backports).\r\n",
    "head_branch": "vendoring-improvements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert undesired change to pip_shims\n\nAs discussed in the review, pip-shims of specifying what the pip module is."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d044ee515ce6a4ebab",
    "number": 5181,
    "body": "### The issue\r\nsupport for NO_COLOR\r\n\r\n### The fix\r\nWrap click.secho locally to core.py with a method respectful to the NO_COLOR protocol described at https://no-color.org/\r\nIt also respects the deprecated PIPENV_COLORBLIND variable but will throw a deprecation warning in this case\r\nNew test on the business logic of respecting NO_COLOR, not on PIPENV_COLORBLIND because it is deprecated\r\n\r\nI appreciated the clues from:\r\n![image](https://user-images.githubusercontent.com/17239850/180322521-ee641bdb-9c1a-4364-b76a-526866fefbfc.png)\r\nultimately I didn't ape the contents of click.secho because we are calling it from the wrapper rather than patching so the protection from byte/bytearray happens outside of where I need to look to do this.\r\n\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d144ee515ce6a4ebac",
    "number": 5178,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nRemove crayons per issue 3741\r\nFixes https://github.com/pypa/pipenv/issues/3741\r\n\r\n### The fix\r\n\r\nUse click.echo, click.secho, click.style instead\r\n\r\n### The checklist\r\n\r\n* [ ] support colorblind envV with click.style if possible\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nRemoving an item from the vendor directory!\r\n-->\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "I think in the long run we need to deprecate the colorblind environment variable and replace it with a more appropriately named variable.  However we do need to consider that we likely had already broken that variable with the current usages of click styling.  @oz123 can you think of a way to support disabling the click styling at a global level in pipenv based on enabling a specific flag?",
      "> I think in the long run we need to deprecate the colorblind environment variable and replace it with a more appropriately named variable. However we do need to consider that we likely had already broken that variable with the current usages of click styling. @oz123 can you think of a way to support disabling the click styling at a global level in pipenv based on enabling a specific flag?\r\n\r\nThe appropriate name would be NO_COLOR, see here: https://no-color.org/\r\n\r\nrich, which is already used by pip supports it. In the long run, I would like us to use the same infrastructure as pip, hence I would vote in favor using coloring, and progress bars from rich. It's more work, but it is more sustainable for us.\r\n\r\nAs for globally disabling click colors as long we  use it, we can steal some code from the [click-extras ](https://github.com/kdeldycke/click-extra/blob/9a5a7e3570eb91a0edb419e1efb15fb9549a1ece/click_extra/colorize.py#L163) project and monkey patch click to disable the color function. This already supports the familiar no color.\r\n\r\nSide note; colorblinded users can simply disable colors globally in their tty or use tee:\r\n```\r\n$ pipenv | tee\r\n```"
    ],
    "commit_messages": [
      "Add missing keyword fg\n\nThis was originally printed with \"yellow\" foreground."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d244ee515ce6a4ebad",
    "number": 5172,
    "body": "### The issue\r\n\r\nNow that we dropped support for python 3.6 we should migrate away from `pkg_resoruces` as\r\n\r\n>Use of pkg_resources is discouraged in favor of [importlib.resources](https://docs.python.org/3/library/importlib.html#module-importlib.resources), [importlib.metadata](https://docs.python.org/3/library/importlib.metadata.html)\r\n\r\n### The fix\r\n\r\nStart chipping away at our direct `pkg_resoruces` usages.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "pkg_resources-deprecation",
    "is_a_fork": false,
    "comments": [
      "The time does not seem right for this -- it needs to be revisited, but we depend on `pip` which is using `pkg_resources` from `setuptools` so this change may not make sense."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d344ee515ce6a4ebae",
    "number": 5171,
    "body": "### The issue\r\n\r\n* Was missing adding a file from `pyparsing` when vendoring the last go round (plus a news fragment).\r\n* `PopenProcess` Appears to not have been in use.\r\n\r\n\r\n### The checklist\r\n\r\n* [] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "more-dead-code",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5171 from pypa/more-dead-code\n\nMore dead code removal (and other small fixes)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d344ee515ce6a4ebaf",
    "number": 5170,
    "body": "Checking on latest version of pyparsing against CI.",
    "head_branch": "vendor-pyparsing-3.0.9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5170 from pypa/vendor-pyparsing-3.0.9\n\nbump pyparsing version to 3.0.9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d444ee515ce6a4ebb0",
    "number": 5168,
    "body": "``funcsigs`` is a backport of the `PEP 362`_ function signature features from\r\nPython 3.3's `inspect`_ module. The backport is compatible with Python 2.6, 2.7\r\nas well as 3.3 and up. 3.2\r\n\r\nThere is only one place which is used in pip-shims, but the exception\r\nwill never happen on current supported versions of pipenv and Python.\r\n\r\nhttps://github.com/sarugaku/pip-shims/blob/d165d55a53065d51aaaebde4124a98c6a8c9fcba/src/pip_shims/utils.py#L387\r\n\r\n```\r\n    try:\r\n        signature = inspect.signature(fn_or_class)\r\n    except AttributeError: # never reached on python 3.3 or later.\r\n        import funcsigs\r\n\r\n```\r\n\r\n\r\n\r\n\r\n",
    "head_branch": "remove-funcsigs",
    "is_a_fork": false,
    "comments": [
      "Thanks for pointing this out @oz123  I created:  https://github.com/sarugaku/pip-shims/pull/84/files\r\nand: https://github.com/sarugaku/pip-shims/issues/83",
      "Can you add a news fragment?  If you merge main in you'll get the fix I applied for the windows tests failing."
    ],
    "commit_messages": [
      "Merge pull request #5168 from pypa/remove-funcsigs\n\nRemove funcsigs as it is only for Python 3.3 and earlier"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d544ee515ce6a4ebb1",
    "number": 5166,
    "body": "Vendor in pip 22.1.2 -- the latest pip.  Also does:\r\nVendor in latest `requirementslib` which has a fix for Annotated variables and rewriting imports of packaging library, as well as vendor in latest `pip-shims` which rewrites imports of packaging library.  \r\nThe net benefit is I was able to drop the vendor'd packaging and use the one from pip _internals across the board.  Prior behavior is some things were using pip _internals packaging and some were using packaging that was installed in the virtualenv as a side-effect of creating the virtualenv.\r\n\r\n### The issue\r\n\r\nFixes #5147\r\n\r\n### The fix\r\n\r\nBy keeping pip updated in this project we maintain the latest fixes and have an easier time with future vendoring tasks.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "vendor-pip-22.1.2-take2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5166 from pypa/vendor-pip-22.1.2-take2\n\nVendor in pip 22.1.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d644ee515ce6a4ebb2",
    "number": 5165,
    "body": "### The issue\r\n\r\nRemove tests that are old and permanently skipped, remove OS skips that seem to not make sense.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "review-dead-tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove another dead test."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d744ee515ce6a4ebb3",
    "number": 5164,
    "body": "### The issue\r\n\r\nReplacement PR for really old PR:  https://github.com/pypa/pipenv/pull/3985\r\n\r\n### The fix\r\n\r\nCleans up some impossible code paths and a logical bug where a flag gets overwritten once in a loop and then retries are caused.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "refactor_no_deps",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5164 from pypa/refactor_no_deps\n\nRefactor and cleannup some cruft code around no_deps flag."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d844ee515ce6a4ebb4",
    "number": 5163,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\nFixes #5064\r\n\r\nCompare the successful test run of https://github.com/pypa/pipenv/pull/5162\r\nwith this branch which does nothing except try to enable those failing tests again.\r\n\r\nOutcome:  Would appear that we fixed something in the last several months that allow those skipped Windows tests to pass in the CI again.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "regular-trial",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Reenable these tests again on the Windows CI. (#5163)\n\n* reenable these skipped tests on the Windows CI as they appear to be passing again."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d944ee515ce6a4ebb5",
    "number": 5162,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nTrying to get some improved windows support and figure out why those 3 tests are failing in the CI.\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\nNot sure if it does.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "wexpect-trial",
    "is_a_fork": false,
    "comments": [
      "We have to think on conditionally vendoring this module on Windows only packages. Otherwise, everyone has this vendored regardless of the OS.",
      "Nothing really indicates to me that this is necessary."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013d944ee515ce6a4ebb6",
    "number": 5161,
    "body": " This was only used by requests which was removed in #5000\r\n",
    "head_branch": "remove-charset-normalizer",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5161 from pypa/remove-charset-normalizer\n\nRemove charset_normalizer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013da44ee515ce6a4ebb7",
    "number": 5156,
    "body": "Vendor in latest pip-shims and requirementslib.\r\n\r\n### The issue\r\n\r\nFixes #5118\r\nFixes #5154\r\n",
    "head_branch": "vendor-latest-requirementslib",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Vendor latest requirementslib and pip-shims (#5156)\n\n* Vendor in latest pip-shims==0.7.1\r\n\r\n* Vendor in latest pip-shims 0.7.2\r\n\r\n* Vendor in latest requirementslib 1.6.6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013db44ee515ce6a4ebb8",
    "number": 5151,
    "body": "Vendor in the brand new `requirementslib` release I just published.\r\n\r\n\r\n### The issue\r\n\r\nFixes #5132 and perhaps some others (maybe the `setuptools` deprecation warning too 🤞 )\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "5132-latest-requirementslib",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "5132 Vendor in latest requirementslib. (#5151)\n\n* 5132 Vendor in latest requirementslib."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013dc44ee515ce6a4ebb9",
    "number": 5150,
    "body": "Remove these libraries as they seem unused.\r\n\r\nFix  #5106",
    "head_branch": "drop-importlib_metadata_resources",
    "is_a_fork": false,
    "comments": [
      "I don't think we can remove `importlib_metadata` being that `click` and `pep517` and also the vendor version of pip `notpip` use it.  we also reference it in the `Pipfile.lock` to support Python versions < 3.10 for the same reason(s).\r\n\r\n```\r\n        \"importlib-metadata\": {\r\n            \"hashes\": [\r\n                \"sha256:65a9576a5b2d58ca44d133c42a241905cc45e34d2c06fd5ba2bafa221e5d7b5e\",\r\n                \"sha256:766abffff765960fcc18003801f7044eb6755ffae4521c8e8ce8e83b9c9b0668\"\r\n            ],\r\n            \"markers\": \"python_version < '3.10'\",\r\n            \"version\": \"==4.8.3\"\r\n        },\r\n```",
      "OK. Regarding [importlib_metadata](https://github.com/pypa/pipenv/search?q=importlib_metadata) you are correct.\r\nI missed the fact that pip internal is using it.\r\nThe fact that we are[ installing importlib_metadata via `Pipfile.lock`](https://github.com/pypa/pipenv/runs/7082468987?check_suite_focus=true#step:6:60) gives the impression that it isn't used. Because after all the test passed!\r\nAnd that is because of this block;\r\n\r\nhttps://github.com/pypa/pipenv/blob/2482e2d3a49fec6830a80606c90c6be9d6bf7946/pipenv/vendor/pep517/meta.py#L9-L13\r\n\r\nL10 worked so, it didn't require the vendored version. Hence, if we vendor it, I suggest we remove it from the `Pipfile.lock`.\r\n\r\nRegarding `importlib_resources` I don't see where it is used in the code. Can you specify?\r\n"
    ],
    "commit_messages": [
      "Merge pull request #5150 from pypa/drop-importlib_metadata_resources\n\nRemove importlib_metadata and importlib_resources"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013dd44ee515ce6a4ebba",
    "number": 5148,
    "body": "Fix #4778\r\n\r\nAlso, a tiny fix for the contributing.rst file.",
    "head_branch": "fix-cli-docs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix Broken CLI docs (#5148)\n\n* Fix building CLI docs\r\n\r\n* Fix contributing docs\r\n\r\n   Double colon before block directive is wrong."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013de44ee515ce6a4ebbb",
    "number": 5146,
    "body": "### The issue\r\n\r\nRemove the vendor `requests` and `certifi` because nothing hardly uses it, and the usages that exist have been updated to use the version provided by vendor'd `pip`.\r\n\r\nFixes #5000 \r\n",
    "head_branch": "issue-5000-remove-requests-certifi",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Issue 5000 remove requests certifi (#5146)\n\n* Depend on requests and certifi from vendored pip and remove it as explicit vendor dependency.\r\n\r\n* Documentation tweak.\r\n\r\n* Add a news fragment.\r\n\r\n* Update remaining vendor dependencies to point at the pip requests.\r\n\r\n* vendoring task needs requests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013de44ee515ce6a4ebbc",
    "number": 5144,
    "body": "### The issue\r\n\r\nWe get a lot of issue reports about how pipenv cannot be used at the system level, which is actually quite common in Docker containers for people to want to bypass the virtualenv construct entirely.  \r\n\r\nFix #5052 \r\nFix #5115\r\n\r\n### The fix\r\n\r\nI am still prototyping this and I suspect tests will need adjustment, but this allowed me to do `pipenv install requests --system`\r\nwhich generated this Pipfile:\r\n```\r\n[[source]]\r\nurl = \"https://pypi.org/simple\"\r\nverify_ssl = true\r\nname = \"pypi\"\r\n\r\n[packages]\r\nrequests = \"*\"\r\n\r\n[dev-packages]\r\n\r\n[requires]\r\npython_version = \"3.9\"\r\n```\r\nAnd Pipfile.lock:\r\n```\r\n{\r\n    \"_meta\": {\r\n        \"hash\": {\r\n            \"sha256\": \"b8c2e1580c53e383cfe4254c1f16560b855d984fde8b2beb3bf6ee8fc2fe5a22\"\r\n        },\r\n        \"pipfile-spec\": 6,\r\n        \"requires\": {\r\n            \"python_version\": \"3.9\"\r\n        },\r\n        \"sources\": [\r\n            {\r\n                \"name\": \"pypi\",\r\n                \"url\": \"https://pypi.org/simple\",\r\n                \"verify_ssl\": true\r\n            }\r\n        ]\r\n    },\r\n    \"default\": {\r\n        \"certifi\": {\r\n            \"hashes\": [\r\n                \"sha256:84c85a9078b11105f04f3036a9482ae10e4621616db313fe045dd24743a0820d\",\r\n                \"sha256:fe86415d55e84719d75f8b69414f6438ac3547d2078ab91b67e779ef69378412\"\r\n            ],\r\n            \"markers\": \"python_version >= '3.6'\",\r\n            \"version\": \"==2022.6.15\"\r\n        },\r\n        \"charset-normalizer\": {\r\n            \"hashes\": [\r\n                \"sha256:2857e29ff0d34db842cd7ca3230549d1a697f96ee6d3fb071cfa6c7393832597\",\r\n                \"sha256:6881edbebdb17b39b4eaaa821b438bf6eddffb4468cf344f09f89def34a8b1df\"\r\n            ],\r\n            \"markers\": \"python_version >= '3.5'\",\r\n            \"version\": \"==2.0.12\"\r\n        },\r\n        \"idna\": {\r\n            \"hashes\": [\r\n                \"sha256:84d9dd047ffa80596e0f246e2eab0b391788b0503584e8945f2368256d2735ff\",\r\n                \"sha256:9d643ff0a55b762d5cdb124b8eaa99c66322e2157b69160bc32796e824360e6d\"\r\n            ],\r\n            \"markers\": \"python_version >= '3.5'\",\r\n            \"version\": \"==3.3\"\r\n        },\r\n        \"requests\": {\r\n            \"hashes\": [\r\n                \"sha256:bc7861137fbce630f17b03d3ad02ad0bf978c844f3536d0edda6499dafce2b6f\",\r\n                \"sha256:d568723a7ebd25875d8d1eaf5dfa068cd2fc8194b2e483d7b1f7c81918dbec6b\"\r\n            ],\r\n            \"index\": \"pypi\",\r\n            \"version\": \"==2.28.0\"\r\n        },\r\n        \"urllib3\": {\r\n            \"hashes\": [\r\n                \"sha256:44ece4d53fb1706f667c9bd1c648f5469a2ec925fcf3a776667042d645472c14\",\r\n                \"sha256:aabaf16477806a5e1dd19aa41f8c2b7950dd3c746362d7e3223dbe6de6ac448e\"\r\n            ],\r\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4' and python_version < '4'\",\r\n            \"version\": \"==1.26.9\"\r\n        }\r\n    },\r\n    \"develop\": {}\r\n}\r\n```\r\n\r\n### The checklist\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5052",
    "is_a_fork": false,
    "comments": [
      "Amazingly zero tests broke by removing that validation crud. \r\nTODO -- Check on the exception classes that were being raised if they are still being used anywhere.\r\nTODO -- Solve for this doesn't work if `--deploy` flag is also passed, possibly, need to check this.",
      "I think removing this break lever is OK for docker containers. I would not like to see people complaining here that pipenv broke their system. Hence, I suggest:\r\nIf people do use this flag, I want to see a color prompt telling them to type `YES` after a warning that this could break their system.\r\nIf people use docker, they should set an environment variable `PIPENV_USE_SYSTEM_PYTHON` which allows overriding this prompt.\r\n\r\nThis should be documented properly:\r\nIn the environment variables section.\r\nIn the section of using pipenv with docker.",
      "Somehow, this didn't work for me and get the same error message:\r\n```dockerfile\r\n# Install dependencies from Pipfile\r\nCOPY ${SOURCE_DIRECTORY}/Pipfile.lock .\r\n\r\nRUN pip install pipenv==2023.4.20 && \\\r\n    pipenv sync --system && \\\r\n    pip uninstall --yes pipenv\r\n```\r\n\r\nbut this works for me:\r\n```dockerfile\r\n# Install dependencies from Pipfile\r\nCOPY ${SOURCE_DIRECTORY}/Pipfile .\r\nCOPY ${SOURCE_DIRECTORY}/Pipfile.lock .\r\n\r\nRUN pip install pipenv==2023.4.20 && \\\r\n    pipenv sync --system && \\\r\n    pip uninstall --yes pipenv\r\n```\r\n\r\nWhat is strange is \"pipenv sync\" should only need Pipefile.lock to work, but when building a docker image that wasn't the case.",
      "This PR is stale and has to be redone."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013df44ee515ce6a4ebbd",
    "number": 5141,
    "body": "Since [this commit][1] removed the usage of piptools\r\nresolver in favor of pip's internal resolver.\r\n\r\n[1]: 5ef5a59d41385945f2fc7f0e492900921ffc924b\r\n\r\n\r\n",
    "head_branch": "remove-unused-environment-option",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "PIPENV_MAX_ROUNDS is no longer used\n\nSince [this commit][1] removed the usage of piptools\nresolver in favor of pip's internal resolver.\n\n[1] 5ef5a59d41385945f2fc7f0e492900921ffc924b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e044ee515ce6a4ebbe",
    "number": 5140,
    "body": "Added  @matteius and myself since we are the current active maintainers.",
    "head_branch": "funding",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add FUNDING.yml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e144ee515ce6a4ebbf",
    "number": 5139,
    "body": "Note: This is my first time ever contributing to an open source project. I'm super grateful for the work all of you are putting into the project. Keep it up!\r\n\r\n### The issue\r\n\r\nAccording to issue #5134, environment variables are expanded when generating a `requirements.txt` file with `pipenv requirements`. This leads to credentials being leaked. \r\n\r\n### The fix\r\n\r\nThe culprit can be found [here](https://github.com/pypa/pipenv/blob/b923d577a1e7dc5ee0b94a5b75e54bcac9dea106/pipenv/cli/command.py#L771).\r\nHow I understand the code, when calling `pipenv requirements` the lockfile is loaded using the `lockfile_content` property of the `project` object. This contains the lockfile as it used during runtime.\r\nHowever, when generating a `requirements.txt` file this is not what we want, since environment variables are expanded.\r\nLuckily, the lockfile can be loaded without expanding environment variables.\r\n`def load_lockfile(self, expand_env_vars=True):`\r\nhttps://github.com/pypa/pipenv/blob/main/pipenv/project.py#L974\r\n\r\nThis is what I have done.\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix formatter screwup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e244ee515ce6a4ebc0",
    "number": 5137,
    "body": "Fix #5136.\r\n\r\nThis is an easy one. Found while installing pipenv newest ebuild on gentoo.",
    "head_branch": "replace-deprecate-keyword-setup-cfg",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5137 from pypa/replace-deprecate-keyword-setup-cfg\n\nFix usage of deprecated `license_file`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e244ee515ce6a4ebc1",
    "number": 5120,
    "body": "### The issue\r\n\r\npyflakes, mypy, and other code checking tools would like to eventually stop supporting type comments. Since pipenv no longer supports \r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue: https://github.com/pypa/pipenv/issues/5119\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "type_annotations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5120 from ethanhs/type_annotations\n\nConvert type comments to type annotations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e344ee515ce6a4ebc2",
    "number": 5114,
    "body": "@matteius @oz123 I think this is literally what needs to happen for this, after the changes that were done a month ago. Or am I overlooking something? \r\n",
    "head_branch": "fix-missing-markers",
    "is_a_fork": true,
    "comments": [
      "@ImreC thanks for contributing again.\r\nI would appreciate if it, if you could include a test case and the usual news fragment.\r\n\r\n\r\n",
      "Yeah sure. Was just checking if this was literally it. Will do that later today",
      "Yeah that seems like the logical change.  @ImreC Not sure you timeline, but I'd like to do another pipenv release due to another issue in the next week or so and would love if we could include this one as well.",
      "Hi @matteius, this completely fell off the map on my end. I'm having a very busy couple of weeks. I will find some time on Friday to do this",
      "@oz123 @matteius I have now implemented it as an optional flag. Do you agree with this approach? Happy to make it default if that's better ",
      "@ImreC I am thinking it should be the default behavior to include markers, but perhaps a flag like you have to exclude them (non-default) makes sense?  Especially with reports like this, having the ability to exclude markers may be relevant for some:\r\n\r\nAlso, Not sure if you saw my comment the other day I CC'd you on another issue report, the TLDR is (having trouble finding the ticket link)\r\n> I do wonder if in the code I linked to for the requirements command, if we should have the logic first add the dev dependencies so that the production dependencies can overwrite any of those? -- that seems more correct to me than allowing the dev dependencies to break the production specifiers.",
      "I tend to agree here, the flag should actually be `--exclude-markers` and the default behaviour should include them.",
      "@oz123 @matteius I flipped the markers flag. I really have been short for time the last couple of weeks. Hope this covers all.",
      "@ImreC @matteius please also fix the merge conflict. ",
      "@oz123 I am not seeing what you mean by a potential merge conflict ... If there is not one, I am ready to merge this and will push a commit to main to fix the documentation typo.",
      "Ay! Sorry depending on the type of merge, there will be a conflict or there won't be.\r\n![image](https://user-images.githubusercontent.com/1083045/175771292-f056b14d-c5ce-4401-9cee-206dcb978dc8.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1083045/175771306-5e3e29d9-3ee0-49c6-85eb-e646028568d2.png)\r\n\r\n"
    ],
    "commit_messages": [
      "Include markers issue #5092 (#5114)\n\n* Include markers\r\n\r\n* Change to marker flag and include test\r\n\r\n* Flip markers flag to exclude by default\r\n\r\n* Docs and newsfile\r\n\r\n* Let default dependencies update dev dependencies"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e444ee515ce6a4ebc3",
    "number": 5102,
    "body": "Found more stuff we can drop, so we are getting near the end of vistir dependency.\r\nAlso, gave a bit of dusting off the the makefile.",
    "head_branch": "more-vistir-drops-makefile-improvements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Make RAMDISK choosable for the developer.\n\nDevelopers can now run:\n\nmake tests RAMDISK=1\n\nTo automagically setup a RAM disk and run the tests there."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e544ee515ce6a4ebc4",
    "number": 5096,
    "body": "### The issue\r\n\r\nPython 3.10 introduced sysconfig._get_preferred_schemes[1], a mechanism to allow downstream distributors to overwrite the default install scheme.\r\nThis is done to support downstream modifications where distributors change the installation layout (eg. different site-packages directory). So, distributors will change the default scheme to one that correctly represents their layout.\r\n\r\nThis presents an issue for projects/people that need to bootstrap virtual environments, like virtualenv (see [2]) and pipenv too. As distributors might now be customizing the default install scheme, there is no guarantee that the information returned by sysconfig.get_default_scheme/get_paths is correct for the virtual environment, the only guarantee we have is that it is correct for the *current* environment. When bootstrapping a virtual environment, we need to know its layout, so that we can place the files in the correct locations.\r\n\r\n[1] https://docs.python.org/3/library/sysconfig.html#sysconfig._get_preferred_schemes\r\n[2] https://github.com/pypa/virtualenv/issues/2208\r\n\r\n### The fix\r\n\r\nTo solve this issue, CPython upstream added in issue45413 [3] a new \"venv\" install scheme, for virtual environments. And this new install scheme has already been implemented in virtualenv [4] and the Python `build` frontend [5]. This PR is similar, it first checks if “venv” is among the available install schemes and uses it if it is. Otherwise it fallbacks to the standard `nt` or `posix_prefix` install schemes as before. This should produce no change for environments where default schemes were not changed.\r\n\r\n[3] https://bugs.python.org/issue45413\r\n[4] https://github.com/pypa/virtualenv/pull/2209\r\n[5] https://github.com/pypa/build/pull/434\r\n\r\nI’d like to deploy this fix in Fedora [6] and test it there, because Fedora changes the default install schemes and therefore pipenv fails there. But first I wanted to ask for feedback, if you see any obvious issues with the change. If not we’ll test it downstream, and then I’d like to ask you to merge it here as well.\r\n\r\n[6] https://src.fedoraproject.org/rpms/pipenv/pull-request/53\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue - #5109\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "venv-fix",
    "is_a_fork": true,
    "comments": [
      "@torsava this looks good -- can you add a news fragment please?",
      "> @torsava this looks good -- can you add a news fragment please?\r\n\r\nDone, please take a look.",
      "> > @torsava this looks good -- can you add a news fragment please?\r\n> \r\n> Done, please take a look.\r\n\r\n@torsava Looks pretty good but fails the lint check due to file name of news fragment.  If you rename it `5096.bugfix.rst` then I can merge more easily.\r\n```\r\nNEWS fragment files must be named *.(feature|behavior|bugfix|vendor|doc|trivial|removal|process).rst\r\n``",
      "> > > @torsava this looks good -- can you add a news fragment please?\r\n> > \r\n> > \r\n> > Done, please take a look.\r\n> \r\n> @torsava Looks pretty good but fails the lint check due to file name of news fragment. If you rename it `5096.bugfix.rst` then I can merge more easily.\r\n> \r\n> ```\r\n> NEWS fragment files must be named *.(feature|behavior|bugfix|vendor|doc|trivial|removal|process).rst\r\n> ``\r\n> ```\r\n\r\nAlready fixed. :)\r\n\r\nEDIT: I accidentally fixed it wrong. Now it should work.",
      "(Btw, the `.rst` bit is missing from the PR template, that's why I didn't add it at first.)",
      "I am not sure what's going on here because it doesn't show an option to kick off the next job run and when I re-run the prior job it doesn't pick up the new change and re-fails the lint check.",
      "@torsava Can you also delete this line so that the CI will run again?  https://github.com/pypa/pipenv/blob/main/.github/workflows/ci.yaml#L11",
      "> @torsava Can you also delete this line so that the CI will run again? https://github.com/pypa/pipenv/blob/main/.github/workflows/ci.yaml#L11\r\n\r\nDone, let's see.",
      "@torsava Thank you for your responsiveness, this is how it goes sometimes with pipenv.  Your news fragment any backquotes need to be double because that is rst standard, I learned this a few months back when I added linting.  Example: not \\`venv` but \\``venv``",
      "> @torsava Thank you for your responsiveness, this is how it goes sometimes with pipenv. Your news fragment any backquotes need to be double because that is rst standard, I learned this a few months back when I added linting. Example: not `venv` but ``venv``\r\n\r\nAh, of course, no problem. Fixed.",
      "Thanks, @matteius !"
    ],
    "commit_messages": [
      "Merge pull request #5096 from torsava/venv-fix\n\nMake pipenv work with the `venv` install scheme if it is detected"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e644ee515ce6a4ebc5",
    "number": 5091,
    "body": "### The issue\r\n\r\nIn https://github.com/pypa/pipenv/pull/5069, a deprecation message was added when `pipenv lock -r` is run.\r\nThe warning message is written to stdout instead of stderr, breaking scripts that run commands like `pipenv lock -r > requirements.txt`.\r\n\r\n### The fix\r\n\r\nThis PR directs the warning message to stderr instead of stdout.\r\nI also de-dented the message to make it look nicer:\r\n\r\nOld (notice the newline at the top):\r\n```\r\n\r\n            Warning: The lock flag -r/--requirements will be deprecated in a future version\r\n            of pipenv in favor of the new requirements command. For more info see\r\n            https://pipenv.pypa.io/en/latest/advanced/#generating-a-requirements-txt\r\n            NOTE: the requirements command parses Pipfile.lock directly without performing any\r\n            locking operations. Updating packages should be done by running pipenv lock\r\n```\r\n\r\nNew:\r\n```\r\nWarning: The lock flag -r/--requirements will be deprecated in a future version\r\nof pipenv in favor of the new requirements command. For more info see\r\nhttps://pipenv.pypa.io/en/latest/advanced/#generating-a-requirements-txt\r\nNOTE: the requirements command parses Pipfile.lock directly without performing any\r\nlocking operations. Updating packages should be done by running pipenv lock.\r\n```\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Thanks @tomarad  -- would you add a `bugfix` news fragment for this and reference the PR number (unless there is an issue report)?",
      "Done @matteius.",
      "Slightly annoying, this bit me today here - https://github.com/actions/setup-python/issues/398. If anyone sees this, be sure your pipenv in your actions is completely up to date as `pip install pipenv` as of 30 minutes ago will still produce this message to stdout, breaking your CI pipeline if you then install the locked requirements with `pip`.\r\n\r\nOr even better use something like `pipenv requirements\r\n-i https://pypi.org/simple > requirements.txt` from https://pipenv.pypa.io/en/latest/advanced/#generating-a-requirements-txt",
      "Wow, should have realized this. Apologies and thanks for the fix",
      "@ImreC If it makes you feel better I've done the same thing in a recent release in a refactor of a print statement.",
      "@matteius thanks! It is an easy thing to miss I guess. @tomarad if you add a newline in the newsfile, the checks will pass. ",
      "hey all, I'm still getting this issue while using AWS CDK. It uses `pipenv lock -r` to generate a requirements file.\r\nhttps://github.com/aws/aws-cdk/blob/c3c4a97e65071fcab35212be82dea7b29454786f/packages/%40aws-cdk/aws-lambda-python/lib/packaging.ts#L40\r\n\r\nIn my logs I can see that `pipenv-2022.4.30` is being installed. Does this fix need to be part of a new pipenv release? It seems 4.30 is the latest version which I assume doesn't include this fix",
      "The [release notes](https://github.com/pypa/pipenv/releases/tag/v2022.4.30) show that this PR (#5091) did not make it into the most recent release (v2022.4.30). \r\n\r\nThis issue is currently breaking our CI/CD deployments which use the [serverless-python-requirements](https://www.serverless.com/plugins/serverless-python-requirements) plugin.\r\n",
      "@guyc I just tagged a new release for this issue.  `2022.5.2`",
      "1. Frist uninstall pipenv:  'pip uninstall pipenv` OR 'brew uninstall pipenv' OR 'sudo uninstall pipenv'\r\n2. Second install pipenv==2022.5.2:     `sudo pip install pipenv==2022.5.2`\r\n\r\npipenv: 2022.5.2 works great!! ⚡️🚀🤘😃"
    ],
    "commit_messages": [
      "Merge pull request #5091 from tomarad/main\n\nFix lock -r warning being logged to stdout instead of stderr"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e644ee515ce6a4ebc6",
    "number": 5090,
    "body": "A quick follow up on #5069.\r\nCosmetic change, saves 2 lines of code and one import.",
    "head_branch": "replace-echo-style-secho",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Replace echo(style(...)) with secho(...) (#5090)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e744ee515ce6a4ebc7",
    "number": 5087,
    "body": "Setuptools upgrade in setup.py causing issues for some users.\r\n\r\n### The fix\r\n\r\nFixes: https://github.com/pypa/pipenv/issues/5075\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5075-setuptools",
    "is_a_fork": false,
    "comments": [
      "Which version is actually required?\r\n\r\nIf pipenv doesn't need a newer version (and can be tested with the older version) it shouldn't be specifying it as a dependency.\r\n\r\nThis won't fix the problem with using a newer setuptools because nothing can stop that from being installed, but it will avoid causing it unnecessarily.",
      "> Which version is actually required?\r\n@nomis It is a good question but from my experience many parts of pip and requirementslib pull in the latest setuptools and use it isolation anyway, and there is nothing that can be done about _that_.\r\n\r\n> If pipenv doesn't need a newer version (and can be tested with the older version) it shouldn't be specifying it as a dependency.\r\n\r\nIt always specified this version as a dependency so this is rolling back my prior change, I don't believe we can drop it altogether as it is required.\r\n\r\n",
      "Won't this still pull setup tools >=60?\r\nCan we Block larger than 60 versions?",
      "> Won't this still pull setup tools >=60? Can we Block larger than 60 versions?\r\n\r\nThis is just reverting it to what it was before, and it seems to work for the folks having the issue, which might just be ubuntu 22.0.4 specific.  I am not convinced that restrict it to less than the latest isn't going to cause different issues for folks that already have a newer version installed at the system level.  Doesn't seem worth it, and internally pipenv is going to pull in the latest setuptools anyway for use in isolation in some spots of requirementslib and pip.",
      "Ok. But pulling this requires a new release (which I'm fine with) but I'm still not sure it's necessary. The issue has a documented solution in the comments. Won't this still be an issue when we upgrade setup tools later?",
      "@oz123 I think it is what @nomis pointed out in the issue comments:\r\n\r\n> When the setuptools/virtualenv/distutils bug is resolved then pipenv can depend on the newer version of those.\r\n\r\nI did take a gamble on updating setuptools in the setup.py when dropping 3.6 support because it seemed like that version is really old, but now it seems this causes issues with whatever the system packaged setuptools or currently installed version is supposed to be so I think we should not restrict it newer yet.  I picked the `60.0.0` version based on which one they dropped 3.6 support in, but alas.   \r\n\r\nSince pip and requirementslib seem to pull in the latest for some tasks anyway I find it is a complex relationship with setuptools. \r\n\r\nIs there a specific issue report in one of those other project @nomis that we could track on if its safe to try forcing the setuptools upgrade at that time?",
      "Ok. Then let's merge this. But we need to keep track of the upstream bug somehow."
    ],
    "commit_messages": [
      "revert setuptools required upgrade. (#5087)\n\n* revert setuptools required upgrade."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e844ee515ce6a4ebc8",
    "number": 5083,
    "body": "Solved by using existing convert_deps_to_pip function.\r\n\r\nFix #5076.\r\n\r\nOriginal implementation by @fraser-langton. This also\r\nsolves the export of packages with editable mode, as suggested\r\nby @hoyaaaa (#5071).\r\n\r\n\r\n",
    "head_branch": "editable-and-git-requirements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixes of ``requirements`` with git requirements (#5083)\n\nSolved by using existing convert_deps_to_pip function.\r\n\r\nFix #5076.\r\n\r\nOriginal implementation by @fraser-langton. This also\r\nsolves the export of packages with editable mode, as suggested\r\nby @hoyaaaa (#5071)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e944ee515ce6a4ebc9",
    "number": 5082,
    "body": "Fixes deprecation warnings with new `setuptools` versions by vendoring in new `requirementslib` fix.\r\n\r\n\r\n### The issue\r\n\r\nFixes #5081 \r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-5081",
    "is_a_fork": false,
    "comments": [
      "🎉 Wow, so fast to iron things out. thanks! 🙏🏼 "
    ],
    "commit_messages": [
      "vendor in requirementslib==1.6.4 (#5082)\n\n* vendor in requirementslib==1.6.4\r\n\r\n* add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013e944ee515ce6a4ebca",
    "number": 5080,
    "body": "As discussed, we should remove crayons in favor of `click.echo` and `click.secho`.\r\n`click` has a large user base and thus a better support across all major platform.\r\nThis PR is a test balloon. If it is merged, it allows us to carefully test that no drastic UI changes have\r\nbeen introduced, without completely removing crayons.\r\n\r\nOnce we completely removed crayons, it's easy to fix #5057.",
    "head_branch": "drop-crayons-in-exceptions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Drop crayons in exceptions.py (#5080)\n\n* Remove crayons usage from exceptions.py\r\n\r\nReplace all crayon color with appropriate `click.style`\r\ncalls."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ea44ee515ce6a4ebcb",
    "number": 5079,
    "body": "Fix #5073\r\n\r\n",
    "head_branch": "limit-ci-resources",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Limit resource usage in CI (#5079)\n\nFix #5073"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013eb44ee515ce6a4ebcc",
    "number": 5078,
    "body": "Moving to Python version 3.7+ allows us to remove more usage of vistir.\r\nEventually we can completely drop it, but I prefer doing this gradually instead of a giant PR.\r\n\r\nAlso, I am not done yet. Will add 2-3 more commits, and we'll continue chopping this vistir with b[i,y]te size steps.\r\n\r\nPun intended :-)",
    "head_branch": "more-vistir-dropping",
    "is_a_fork": false,
    "comments": [
      "@matteius when (and if) merging, please do not squash the commits. Doing so will lead to losing of a lot of information found in the commit messages.\r\n"
    ],
    "commit_messages": [
      "Merge pull request #5078 from pypa/more-vistir-dropping\n\nMore vistir dropping"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ec44ee515ce6a4ebcd",
    "number": 5077,
    "body": "running pipenv requirements with the below example dependency will fail\r\n\r\n\"exmple-repo\": {\r\n    \"editable\": true,\r\n    \"git\": \"ssh://git@bitbucket.org/code/exmaple-repo.git\",\r\n    \"ref\": \"cc858e89f19bc0dbd70983f86b811ab625dc9292\"\r\n}\r\n\r\n### Fix\r\nUse the exisiting `pipenv.utils.dependencies.convert_deps_to_pip` function with some added parameters to output the requirements, remove parsing of file in `pipenv.cli.command.requirements` itself\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\nFixes #5076",
    "head_branch": "fix/cli_improve_requirements",
    "is_a_fork": true,
    "comments": [
      "> Can you add a small test case together with the code?\r\n\r\n@oz123 I'm struggling to find an instance were the pipfile.lock is mocked for a test? Any suggestions?\r\n",
      "> > Can you add a small test case together with the code?\r\n> \r\n> @oz123 I'm struggling to find an instance were the pipfile.lock is mocked for a test? Any suggestions?\r\n\r\n@fraser-langton You don't really need to mock the Pipfile.lock right, you can just write out a file that is a valid Pipfile.lock and the current tests do that by doing a `pipenv lock` ahead of the `requirements` generation.   All of the current tests for this command exist here:  https://github.com/pypa/pipenv/blob/main/tests/integration/test_requirements.py\r\n\r\nAlternatively you could generate a lock file locally and write that to a file at the start of your test and generate the requirements from that to test.",
      "@matteius I'm blind 🤦‍♂️ I was looking in the wrong directory. Thanks!",
      "@fraser-langton can you merge latest main branch into your branch and resolve the merge conflict?",
      "@oz123 Think I did correctly :)",
      "You are almost there @fraser-langton  -- There is still a merge conflict that must be resolve with pipenv/cli/command.py -- Probably rebase was not the way to go but merging in the latest main, because now its showing a all the latest changes from main in this PR, which is confusing.  Either way, the conflicting file remains.",
      "@fraser-langton you'll have to restart all over again. I am sorry... \r\nSince we merged a PR which works on the same feature, not sure how to rebase this. You will have to look into the code again and see how to incorporate your commits.\r\n\r\nIt could be that the logic of :\r\n```\r\n if value.get(\"editable\", False):\r\n```\r\nShould be implemented in https://github.com/pypa/pipenv/blob/f73e76cca07c98602e845e5627c9929025513484/pipenv/utils/dependencies.py#L246\r\nThat way, the PR we merged earlier can be integrated in a nicer way with yours.",
      "@fraser-langton You may just want to make a new branch off the latest main and cherry-pick in all of your commits up until the rebase, but consider that there is the conflict to resolve and as @oz123 mentions this other change to fix editable installs for that command --\r\nhttps://github.com/pypa/pipenv/pull/5071 ",
      "@fraser-langton I created a new PR to fix the conflict issue. I think this gets the original intent of your code.\r\nThank you for the contribution and the suggestion to use `convert_deps_to_pip`. \r\n@hoyaaaa thank you too, for the original implementation. ",
      "closed with #5083"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ed44ee515ce6a4ebce",
    "number": 5071,
    "body": "### The issue\r\n\r\nFix #5070\r\n\r\n### The fix\r\n\r\nIf the package is editable, print `-e` option and path when using `pipenv requirements`\r\n\r\n```\r\n-e <editable package path>\r\n```\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.",
    "head_branch": "fix/export-requirments-editable-package",
    "is_a_fork": true,
    "comments": [
      "@hoyaaaa It still needs a bugfix news fragment and then we can approve/run and I think it will be good to go. "
    ],
    "commit_messages": [
      "Print `-e` option and path for editable package when using `pipenv requirements` (#5071)\n\n* Print `-e` option and path for editable package\r\n\r\n* Reduce depth for logical complexity\r\n\r\n* Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ee44ee515ce6a4ebcf",
    "number": 5069,
    "body": "@matteius I gave `pipenv lock -r` some more thought and I think we should over time deprecate it in favor of `pipenv requirements`. This PR contains a deprecation warning and an update to the docs. Please let me know your thoughts",
    "head_branch": "docs-and-deprecation-warning",
    "is_a_fork": true,
    "comments": [
      "@ImreC  thank you for this contribution!"
    ],
    "commit_messages": [
      "Update docs and add deprecation warning for lock -r (#5069)\n\n* Update docs and add deprecation warning for lock -r"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ef44ee515ce6a4ebd0",
    "number": 5067,
    "body": "* Removed usage of vistir.compat.JSONDecodeError\r\n  `json.JSONDecodeError` is Python 3.6+\r\n* Removed vistir.path.rmtree in favour of shutil.rmtree\r\n  Should work, but we might have to revert this.\r\n",
    "head_branch": "remove-vistir.compat.JSONDecodeError",
    "is_a_fork": false,
    "comments": [
      "@matteius I've seen this error for MacOS Python3.10 happen already a few times (in the main branch too). No idea how to fix it, but it seems unrelated to the changes I proposed in the PR.",
      "@oz123 I don't see where it has happened on the main branch ... link to a failed action?",
      "> @matteius I've seen this error for MacOS Python3.10 happen already a few times (in the main branch too). No idea how to fix it, but it seems unrelated to the changes I proposed in the PR.\r\n\r\nI re-ran just the one failed job and it succeeded.  Looks like a 1-off GitHub data transfer failure  "
    ],
    "commit_messages": [
      "Remove some more vistir usage (#5067)\n\n* Removed usage of vistir.compat.JSONDecodeError\r\n\r\nThis is no longer needed since Python version 3.6. Earlier versions\r\ndidn't have json.JSONDecodeError and raised ValueError instead.\r\n\r\n* Removed vistir.path.rmtree in favour of shutil.rmtree"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ef44ee515ce6a4ebd1",
    "number": 5066,
    "body": "We missed python 3.6 support in the metadata.\r\n\r\n### The issue\r\n\r\n   Fixes: #5065\r\n\r\n\r\n### The fix\r\n\r\nDrops the support fully.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-5056-setupy-36",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Issue 5056 setupy 36 (#5066)\n\n* Fix that the setup.py still claimed to support 3.6\r\n* Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f044ee515ce6a4ebd2",
    "number": 5062,
    "body": "This function was all about compatability of py2-py3.3 versions.\r\nLater versions don't need it.\r\n\r\nThis PR replaces #5059 as I did too much havoc there with all the CI suggestions.\r\n",
    "head_branch": "drop-usage-of-vistir.fs_str",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Removed usage of fs_str from vistir (#5062)\n\n* Removed usage of fs_str from vistir\r\n\r\n  This function was all about compatability of py2-py3.3 versions.\r\n  Later versions don't need it.\r\n\r\n* Explicitly convert dict values to strings\r\n\r\n* Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f144ee515ce6a4ebd3",
    "number": 5061,
    "body": "This PR suggests a couple of improvements for the build pipeline:\r\n1) We only lint the code once (as compared to previous situation where linting was run on all architectures).\r\n2) Linting is a prerequisite for all other jobs which run in parallel if it succeeds.\r\n\r\nAlso, this PR adds a Makefile target for running the vendoring stage locally.\r\nThis PR is cherry-picking of the CI parts from #5059.",
    "head_branch": "ci-improvements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "CI improvements (#5061)\n\n* Add step to vendor dependencies in the Makefile\r\n\r\n* Reorganize the order of jobs and dependencies\r\n\r\n* Make all jobs run only after the lint stage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f244ee515ce6a4ebd4",
    "number": 5059,
    "body": "As discussed, I am suggesting to remove `fs_str`. ",
    "head_branch": "remove-vistir-fs_str",
    "is_a_fork": false,
    "comments": [
      "OK, The latest commits don't have much to do with the title, but here is what they do:\r\nWe migrate from a CI pipeline the looks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/1083045/164094661-3a875a0b-7866-4c74-b0ba-fa4ed6a86829.png)\r\n\r\nTo this:\r\n\r\n![image](https://user-images.githubusercontent.com/1083045/164094553-b7d34bff-bf2b-401b-b6a5-f7cd963ee71b.png)\r\n\r\nThere is an explicit step for linting, only if it passes the tests will run. If these pass, the vendoring will trigger, and once this is done we build a package with update vendoring code.\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f344ee515ce6a4ebd5",
    "number": 5058,
    "body": "Fix for #4697.\r\n\r\n",
    "head_branch": "parallel-tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Really run the tests in parallel (#5058)\n\nFor those who will use the makefile, added a sensinble default."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f344ee515ce6a4ebd6",
    "number": 5051,
    "body": "When building a source distribution for pipenv, many warning are omitted\r\nsince the MANIFEST.in was long time neglected and includes much stuff\r\nwhich is no longer in the repository or wasn't even there.",
    "head_branch": "misc-fixes-manifest",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix MANIFEST.in (#5051)\n\nWhen building a source distribution for pipenv, many warning are omitted\r\nsince the MANIFEST.in was long time neglected and includes much stuff\r\nwhich is no longer in the repository or wasn't even there."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f444ee515ce6a4ebd7",
    "number": 5050,
    "body": "Adds back: https://github.com/pypa/pipenv/pull/5038\r\n\r\nBut only after this one gets addressed in a release:  https://github.com/pypa/pipenv/pull/5039\r\n\r\n",
    "head_branch": "add-back-pytest-cov-change",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f544ee515ce6a4ebd8",
    "number": 5049,
    "body": "This reverts pytest-covcommit 5d845dc6b90bf96fcba3cc1f18257f8f97157ed0.\r\n\r\nTemporarily, until we can finalize this one:  https://github.com/pypa/pipenv/pull/5039\r\n\r\nThen I can revert the revert and get this change back in. https://github.com/pypa/pipenv/pull/5050\r\n\r\n### The issue\r\n\r\nThe problem is index restrictions broke a particular install use case and the reporter was waiting for the last release that included a py3.6 fix they needed before discovering this other issue.  Yes not ideal, but the plan is we will drop 3.6 support right after making one more release to allow installation from multiple sources (locking still being index restricted).",
    "head_branch": "briefly-defer-dropping-36-support",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f644ee515ce6a4ebd9",
    "number": 5048,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nOut of date copyright and link -- I appreciate @kennethreitz for starting this project.  That being said most of the builds to the links to the other projects in the sidebar are broken and not particularly relevant to pipenv.  I feel like this change is an improvement to the docs to reflect that the project has become the contributions of many individuals and to keep the docs concise.\r\n\r\nHonestly would be nice to remove the \"ethical advertising\" too, but I think pypa controls embedding that in after the fact.\r\n\r\n### The fix\r\n\r\nOpen to other improvements/suggestions here as well.\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "more-docs-cleanup",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "cleanup stale links (#5048)\n\n* cleanup stale links\r\n\r\n* only support one sidebar html file. Address PR feedback.  HTML5 attributes.\r\n\r\n* Update sphinx dependenencies\r\n\r\n* Corrected CLI patch for new version of sphinx-click.\r\n\r\n* fix placement of search bar back to original spot.\r\n\r\n* cleanup a sphinx build warning."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f744ee515ce6a4ebda",
    "number": 5047,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\nhttps://github.com/pypa/pipenv/issues/5044\r\n\r\n### The fix\r\n\r\nRemoves more-itertools/more_itertools\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5044-remove-more_itertools",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Removed more-itertools vendor dep. (#5047)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f744ee515ce6a4ebdb",
    "number": 5046,
    "body": "### The issue\r\n\r\nPipenv can fail to install dependencies but the return code doesn't represent this fact.\r\n\r\nhttps://github.com/pypa/pipenv/issues/5031  \r\n\r\n### The fix\r\n\r\nThis checks at the end of the install routine after it has retried and cleaned up if there are still failed dependencies in the queue.  If so it logs an error and exits with error.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5031-fix-silent-install-failures",
    "is_a_fork": false,
    "comments": [
      "Tested the latest changes with the demo example:\r\n```\r\nmatteius@matteius-VirtualBox:~/pipenv-triage$ sudo docker run --rm -it python:3.9 bash\r\n[sudo] password for matteius: \r\nroot@3523e9fc4f6c:/# apt remove -y gcc\r\nReading package lists... Done\r\nBuilding dependency tree... Done\r\nReading state information... Done\r\nThe following packages were automatically installed and are no longer required:\r\n  g++-10 libstdc++-10-dev\r\nUse 'apt autoremove' to remove them.\r\nThe following packages will be REMOVED:\r\n  g++ gcc\r\n0 upgraded, 0 newly installed, 2 to remove and 0 not upgraded.\r\nAfter this operation, 61.4 kB disk space will be freed.\r\n(Reading database ... 23373 files and directories currently installed.)\r\nRemoving g++ (4:10.2.1-1) ...\r\nRemoving gcc (4:10.2.1-1) ...\r\nroot@3523e9fc4f6c:/# pip install git+https://github.com/pypa/pipenv.git@issue-5031-fix-silent-install-failures\r\nCollecting git+https://github.com/pypa/pipenv.git@issue-5031-fix-silent-install-failures\r\n  Cloning https://github.com/pypa/pipenv.git (to revision issue-5031-fix-silent-install-failures) to /tmp/pip-req-build-scjd1uz1\r\n  Running command git clone --filter=blob:none --quiet https://github.com/pypa/pipenv.git /tmp/pip-req-build-scjd1uz1\r\n  Running command git checkout -b issue-5031-fix-silent-install-failures --track origin/issue-5031-fix-silent-install-failures\r\n  Switched to a new branch 'issue-5031-fix-silent-install-failures'\r\n  Branch 'issue-5031-fix-silent-install-failures' set up to track remote branch 'issue-5031-fix-silent-install-failures' from 'origin'.\r\n  Resolved https://github.com/pypa/pipenv.git to commit 6d5f1b0a25ca2244e8017567a52a960dfb1c934a\r\n  Running command git submodule update --init --recursive -q\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n  Preparing metadata (pyproject.toml) ... done\r\nCollecting certifi\r\n  Downloading certifi-2021.10.8-py2.py3-none-any.whl (149 kB)\r\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 149.2/149.2 KB 1.1 MB/s eta 0:00:00\r\nRequirement already satisfied: pip>=18.0 in /usr/local/lib/python3.9/site-packages (from pipenv==2022.4.9.dev0) (22.0.4)\r\nCollecting virtualenv-clone>=0.2.5\r\n  Downloading virtualenv_clone-0.5.7-py3-none-any.whl (6.6 kB)\r\nRequirement already satisfied: setuptools>=36.2.1 in /usr/local/lib/python3.9/site-packages (from pipenv==2022.4.9.dev0) (58.1.0)\r\nCollecting virtualenv\r\n  Downloading virtualenv-20.14.1-py2.py3-none-any.whl (8.8 MB)\r\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8.8/8.8 MB 7.8 MB/s eta 0:00:00\r\nCollecting platformdirs<3,>=2\r\n  Downloading platformdirs-2.5.1-py3-none-any.whl (14 kB)\r\nCollecting filelock<4,>=3.2\r\n  Downloading filelock-3.6.0-py3-none-any.whl (10.0 kB)\r\nCollecting six<2,>=1.9.0\r\n  Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\r\nCollecting distlib<1,>=0.3.1\r\n  Downloading distlib-0.3.4-py2.py3-none-any.whl (461 kB)\r\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 461.2/461.2 KB 14.7 MB/s eta 0:00:00\r\nBuilding wheels for collected packages: pipenv\r\n  Building wheel for pipenv (pyproject.toml) ... done\r\n  Created wheel for pipenv: filename=pipenv-2022.4.9.dev0-py2.py3-none-any.whl size=3563993 sha256=222bed184f4fbb5942d1d12bb6071578e5f39fd57a0711c1a0e5c8aee4720f3f\r\n  Stored in directory: /tmp/pip-ephem-wheel-cache-o8qga8o6/wheels/e0/b4/bd/c4c1e011d05e7b7490683aa6b09901882353be06a94fe8a47a\r\nSuccessfully built pipenv\r\nInstalling collected packages: distlib, certifi, virtualenv-clone, six, platformdirs, filelock, virtualenv, pipenv\r\nSuccessfully installed certifi-2021.10.8 distlib-0.3.4 filelock-3.6.0 pipenv-2022.4.9.dev0 platformdirs-2.5.1 six-1.16.0 virtualenv-20.14.1 virtualenv-clone-0.5.7\r\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\r\nroot@3523e9fc4f6c:/# cat <<EOF > Pipfile\r\n[[source]]\r\nurl = \"https://pypi.python.org/simple\"\r\nverify_ssl = true\r\nname = \"pypi\"\r\n\r\n[packages]\r\npycocotools = \"*\"\r\n\r\n[dev-packages]\r\n\r\n[requires]\r\npython_version = \"3.9\"\r\nEOF\r\nroot@3523e9fc4f6c:/# pipenv lock\r\nCreating a virtualenv for this project...\r\nPipfile: /Pipfile\r\nUsing /usr/local/bin/python3.9 (3.9.12) to create virtualenv...\r\n⠋ Creating virtual environment...created virtual environment CPython3.9.12.final.0-64 in 622ms\r\n  creator CPython3Posix(dest=/root/.local/share/virtualenvs/-x-v5uFv0, clear=False, no_vcs_ignore=False, global=False)\r\n  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/root/.local/share/virtualenv)\r\n    added seed packages: pip==22.0.4, setuptools==62.1.0, wheel==0.37.1\r\n  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\r\n\r\n✔ Successfully created virtual environment! \r\nVirtualenv location: /root/.local/share/virtualenvs/-x-v5uFv0\r\nLocking [dev-packages] dependencies...\r\nLocking [packages] dependencies...\r\nBuilding requirements...\r\nResolving dependencies...\r\n✔ Success! \r\nUpdated Pipfile.lock (ebc52c)!\r\nroot@3523e9fc4f6c:/# pipenv install\r\nInstalling dependencies from Pipfile.lock (ebc52c)...\r\nAn error occurred while installing pycocotools==2.0.4 --hash=sha256:2ab586aa389b9657b6d73c2b9a827a3681f8d00f36490c2e8ab05902e3fd9e93! Will try again.\r\n  🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 11/11 — 00:00:24\r\nInstalling initially failed dependencies...\r\n  ☤  ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 1/1 — 00:00:01\r\nFailed to install some dependency or packages.  The following have failed installation and attempted retry: [Requirement(_name='pycocotools', vcs=None, req=NamedRequirement(name='pycocotools', version='==2.0.4', req=Requirement.parse('pycocotools==2.0.4'), extras=[], editable=False, _parsed_line=<Line (editable=False, name=pycocotools, path=None, uri=None, extras=(), markers=None, vcs=None, specifier===2.0.4, pyproject=None, pyproject_requires=None, pyproject_backend=None, ireq=pycocotools==2.0.4)>), markers=None, _specifiers='==2.0.4', index='pypi', editable=False, hashes=frozenset({'sha256:2ab586aa389b9657b6d73c2b9a827a3681f8d00f36490c2e8ab05902e3fd9e93'}), extras=(), abstract_dep=None, _line_instance=<Line (editable=False, name=pycocotools, path=None, uri=None, extras=(), markers=None, vcs=None, specifier===2.0.4, pyproject=None, pyproject_requires=None, pyproject_backend=None, ireq=pycocotools==2.0.4)>, _ireq=None)]\r\nroot@3523e9fc4f6c:/# echo $?\r\n1\r\n```",
      "It seems to me that pipenv can't install from VCS on Windows. Can you test this assumption?\r\nThe errors on all Windows versions are repeating:\r\n````\r\nThe following have failed installation and attempted retry: [Requirement(_name='six', vcs='git', ...\r\n````",
      "> It seems to me that pipenv can't install from VCS on Windows. Can you test this assumption? The errors on all Windows versions are repeating:\r\n\r\n@oz123  It works fine though without any changes the install commands from the test run fine on windows CLI.  The tests themselves initially failed in pytest failed on my Windows because of the spinner, so I committed change that gets them to pass locally in pytest but they still fail in the CI for some unknown reason.    The actual error the CI is getting back is meeting the condition `if \"does not match installed location\" in err:` both the initial and attempted retry, but this is not reproducible outside of the CI.\r\n\r\n",
      "@oz123  There is a chance that the new pip vendoring would actually fix these windows tests:  https://github.com/pypa/pip/issues/9452",
      "Well unfortunately those 3 windows tests still fail in the CI and they pass locally in a terminal with these changes.  I think the path forward is to mark skipping those 3 tests on windows and open a ticket to revisit getting them to work in the CI.  To be clear, the install in the windows CI was always failing but the exit code was 0 because of this bug and fixing it revealed that behavior.",
      "Weird, the python 3.7 windows build actually passed in the CI last run, but the other 3 did not ... very odd:\r\n![image](https://user-images.githubusercontent.com/479892/164333665-6a58fe6a-a02a-49b9-b4ea-f3f3e0646996.png)\r\n"
    ],
    "commit_messages": [
      "Fix install failures that silently pass (#5046)\n\n* Check at the end of install if the failed dependency queue is empty or not and exit with error when there are still failed dependencies.\r\n\r\n* Address PR feedback about crayons.\r\n\r\n* Fix windows tests that fail because of showing the progress bar, but only local -- CI still breaks. \r\n\r\n* Skip these tests on the windows CI for now.   Created https://github.com/pypa/pipenv/issues/5064 to track"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f844ee515ce6a4ebdc",
    "number": 5039,
    "body": "### The issue\r\n\r\nMaybe we can allow an option `install_search_all_sources` where its possible to still consider all sources eligible for install, since the hashes of the lock file were generated from index restricted packages and are pinned to specific versions and hashes in the lockfile.\r\n\r\n### The fix\r\n\r\nFix https://github.com/pypa/pipenv/issues/5041\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "less-strict-index-install-option",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Allow pipenv option to consider all listed package sources when syncing the Pipfile.lock (#5039)\n\n* Allow option to search all sources during installation.\r\n\r\n* Add documentation for new Pipenv option ``install_search_all_sources``."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013f944ee515ce6a4ebdd",
    "number": 5038,
    "body": "### The issue\r\n\r\n#4996 \r\n\r\n### The fix\r\n\r\nWe don't actually vendor in pip-tools and we have a laundry list of TODOs in this method `_build_package_list` and I think this correctly addresses them.  We end up dropping `is_installable_file` but based on my grepping, that method exists in requirementslib as well so I think the code still accounts for `is_installable_file` and we have tests that install from files, so I think its a non-issue.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "4996-code-coverage",
    "is_a_fork": false,
    "comments": [
      "Since this one addresses problems with the lockfile, but has to drop py3.6 to do it, going to defer it until right before the pip 22.0.4 vendoring so that I can get these Pipfile/lock file improvements ahead of that PR.\r\n\r\nNote:  it works now to just run `pipenv lock` from Windows, since there are windows specific requirements in the lock file.   "
    ],
    "commit_messages": [
      "Added pytest-cov and addressed outdated references to pip-tools (#5038)\n\n* Add pytest-cov; Remove code references to pip-tools and refactor method _build_package_list\r\n\r\n* Regenerate lock file.\r\n\r\n* Add back required typing-extensions, not sure how it got dropped from locking previously.\r\n\r\n* Adopt the setup.cfg for coverage config.\r\n\r\n* Actually pin to the version of click we have vendored in.\r\n\r\n* Do not adopt coverage for CI since it slows everything down.  Fix py36 dependency pinning.\r\n\r\n* Drop support for 3.6 in this PR.\r\n\r\n* No need to exclude the vendor and patched directory from the coverage reprot."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013fa44ee515ce6a4ebde",
    "number": 5036,
    "body": "this is required if you want to e.g. use a keyring to authenticate\r\nagainst Google Artifact Registry. fixes https://github.com/pypa/pipenv/issues/4706\r\n\r\nThank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue: https://github.com/pypa/pipenv/issues/4706\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "feature/no_input_flag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[fix] allow the user to overwrite the `no_input` flag to pip (#5036)\n\nSupport `no_input` flag for when you want to e.g. use keyring to authenticate against Google Artifact Registry."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013fb44ee515ce6a4ebdf",
    "number": 5032,
    "body": "### The issue\r\n\r\nActually build sphinx docs locally and see if what I did for formatting here made the most sense: https://github.com/pypa/pipenv/pull/5029/files\r\n\r\nI found a few warnings to clean up and wanted to improve the consistency and formatting of the note.\r\n\r\nAlso Fix for the CLI docs not generating.\r\nFixes #4778 \r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/479892/161949081-627f52a5-a124-4a3a-a020-8fcf866713a6.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/479892/161953048-fd322bfe-d5f6-45de-bc8a-06c2ff0032f2.png)\r\n\r\n\r\n### The checklist\r\nI figure this change is covered by the other news fragments added and issues we resolved.\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5022-doc-fast-follow",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "sphinx formatting change and fix CLI docs (#5032)\n\n* sphinx formatting change.\r\n\r\n* minor doc formatting improvements.\r\n\r\n* check point progress\r\n\r\n* Get the CLI docs generating again.\r\n\r\n* Add news item for fixed CLI documentation.\r\n\r\n* Dont skip build of docs changes.\r\n\r\n* fix linting"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013fb44ee515ce6a4ebe0",
    "number": 5029,
    "body": "The primary goal of this PR is to improve the documentation around use of additional indexes and what it means to be the default index.\r\n\r\nAdditionally, since we would be declining#5028 due to the logical complexity of supporting that approach and the security concerns--I capture a trivial refactor change from that PR to re-use a util we already have for determining if an index is pypi.\r\n\r\n### The issue\r\n\r\nFixes #5028\r\nFixes #5022 \r\nFixes #5021 \r\n\r\n### Additional TODOs:\r\n\r\n- How do we deprecate something in the project?\r\n- Are there additional options we want to support to make life nicer?\r\n- Additional documentation that would be useful?",
    "head_branch": "issue-5022-documentation",
    "is_a_fork": false,
    "comments": [
      "Have I understood correctly from this that there is no way we could have packages restorable from multiple package sources? We are migrating our builds from one server to another and the package sources available on them are mutually exclusive. It would be good if we could still specify multiple allowed sources in the pipfile.lock which is what we used to restore packages.",
      "@mungojam What you are describing is no longer possible due to security concerns.  While I understand that what you are describing is to be able to install the already locked package versions/hashes from either source you have available, it is non-trivial because its the similar logic used for locking and installing, index restrictions were kind of an all or nothing choice.  Due to the mechanism that allows for searching multiple indexes at once was deemed insecure in pip due to the potential for package confusion attacked--there have been discussions around removing `--extra-index-url` from pip itself, or at a minimum making it much more restrictive, see:  https://github.com/pypa/pip/issues/9715 we have taken the stance to enforce index restricted packages.\r\n\r\nWhat we needed most from a security perspective was to prevent the notion that the package could come from any index and not to care which one during locking, as this can introduce a compromised package into the lock file due the nature of package confusion attacks.  Additionally there were bugs in pipenv where it was possible to specify multiple --extra-index-urls and really pipenv would take the first one from the list and search that in addition to the default index, so it was not really possible to search more than 2 indexes in the prior logic.\r\n\r\nThe way it works now is that unspecified packages get the default index (first source in the Pipfile), and any other package can be specified to use any named index that is required for that package.  I appreciate that you are migrating packages from one server to the other, but I think there are plenty of ways to handle that migration outside of relying on pipenv to scan both places.  For example, leave all the old package on the old server and keep it the default until all new packages are on the new server, then flip defaults -- this would require the least amount of updating of named indexes.  If you needed more targeted granularity while migrating you can adjust the named indexes in the Pipfile or the Pipfile.lock.  The takeaway is you would always be aware of which server you expect to be pulling the package from.  If the servers are essentially one in the same and you don't mind pulling from either server then I would recommend putting them behind a load balancer.",
      "@matteius thank you for giving the time to explain it so well and your thoughts on our dilemma\r\n\r\nOur dilemma is not quite that. We are migrating our many projects to different build servers, not migrating our python packages. However one build server has access to pypi, the other does not, and one has access to a particular internal package repo while the other build server will need to use a different one as it cannot access the internal one.",
      "Sorry, didn't mean to click send, but I think I've conveyed it anyway 🙂. I suppose we could update the package sources as we came to migrate projects between build servers but the other issue is that some Devs have access to pypi while others don't and can only access our internal one.\r\n\r\nNuget recently introduced a system to solve package name confusion attacks where you can specify which package repos (plural) can be used for particular prefixes. So then we can easily say that all packages starting with our company name must come from our internal sources while anything else can come from anywhere.\r\n\r\nIdeally it would be good if pipenv sync command could be less strict and just check hashes.",
      "@mungojam I gave your feedback some consideration, and I think it may be possible to support as a non-default option.  Could you take a look at this branch and test out if it meets your use case:  https://github.com/pypa/pipenv/pull/5039/files\r\n\r\nI should be able to add to the documentation once we settle on what the option should be named and that this is the direction to head in.  Just to be clear, in that branch you still have to lock from a reliable source, but for an already locked file it will install by searching from all sources like before if that option is enabled in your Pipfile.\r\n\r\nThat being said, with all due respect, could you describe more how this is a possible and preferred setup for a development team:\r\n\r\n> The other issue is that some Devs have access to pypi while others don't and can only access our internal one.\r\n\r\n",
      "@mungojam Also if you could open an issue report about this issue for documentation, then I can link to that for the PR and news item.",
      "> @mungojam Also if you could open an issue report about this issue for documentation, then I can link to that for the PR and news item.\r\n\r\nthanks for this, I'll raise an issue and try to have an experiment later today",
      "> That being said, with all due respect, could you describe more how this is a possible and preferred setup for a development team:\r\n> \r\n> > The other issue is that some Devs have access to pypi while others don't and can only access our internal one.\r\n\r\nIt's a very valid question. In our org. there are a wide range of developers, from those who have not really programmed before but are keen to learn python and make use of our packages as well as external ones to those who are experienced developers who understand the security risks around pypi packages. We've got approval for more experienced developers to bring pypi packages into our internal package repository for others to be able to consume.\r\n\r\nIt's not a perfect system, but it's been working reasonably for a few years now. We have automation that helps us bring in new or updated packages. In reality, most of us use the internal package repo for syncing. I think the build server requirement is the much bigger one.\r\n\r\nI'll raise a ticket now and try and test the PR\r\n\r\n"
    ],
    "commit_messages": [
      "Improve documentation around index restrictions (#5029)\n\n* Improve documentation around index restrictions\r\n\r\n* Update docs/advanced.rst\r\n\r\n* Refine index documentation updates.   Factor out and re-use method before closing down other PR.\r\n\r\n* Fully remove the --extra-index-url argument\r\n\r\nCo-authored-by: Yusuke Nishioka <yusuke.nishioka.0713@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013fc44ee515ce6a4ebe1",
    "number": 5028,
    "body": "This PR tries to strike a balance between enforcing security in the new package restrictions, while still allowing extra indexes be specified loosely.   I am not convinced that we should be doing this longer term -- in other words I think we should be aiming to pin our packages to specifically which index the package should need to be pulled from, a specific index if not the primary index, which is usually pypi.\r\n\r\nAs the pip documentation points out:\r\n\r\n>Using this option to search for packages which are not in the main repository (such as private packages) is unsafe, per a security vulnerability called [dependency confusion](https://azure.microsoft.com/en-us/resources/3-ways-to-mitigate-risk-using-private-package-feeds/): an attacker can claim the package on the public repository in a way that will ensure it gets chosen over the private package.\r\n\r\n\r\n**There is another caveat to not pinning your index explicitly**, in the case of Torch.   The caveat is that in this current incantation of the pipenv code, the pinned index correctly picks up all 8 hashes from the pinned index; however, if you rely on the extra index searching to find your dependency in the extra index (without explicitly pinning the requirement to the alternate index) it for some reason only pulls in the 1 hash that matches your system architecture out of the 8.   I am not sure that is going to be sorted out readily as the hash aggregation logic is, well complicated and dependent on other factors in the resolution process as well.\r\n\r\nI wanted to put this out there as a fix for the reported issues in the near term and gather feedback on what the real use case is for not pinning the index requirement in the first place?  Note that the logic implicitly pins all packages with a non-specified index to be the default, which is usually pypi.   So you can see how just having a second extra index here with this change makes all unpinned packages less predictable as to where they will be pulled from--it at least becomes not explicit.\r\n\r\n### The issue\r\n\r\nFixes #5022 \r\nFixes #5021 \r\n\r\n### The fix\r\n\r\n@DanielPerezJensen @Bananaman and @masato-yasuda  Could you review my concerns and potential change and provide feedback on the issues at hand.   This technically fixes the issue being reported of the package not resolving when the index is not explicitly pinned, but I don't love the caveat that the hash collection is now incomplete when relying on this feature (I'm not entirely sure why yet).  Plus I don't want to invest a lot of time into supporting it when there exists the security advisory from last year, it feels ultimately safer to be explicit in pinning indexes.    Should we accept this patch?  Will it really be improving quality of life and a legitimate use case, or will it be weakening the security of the tool?  I am willing to consider it, since that was the prior behavior--but also willing to consider longer term deprecating it in favor of always pinning the non primary index packages to a specific index by name and potentially improving what CLI arguments are available to help manage this.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5022-extra-index-url",
    "is_a_fork": false,
    "comments": [
      "@matteius I don't feel like I have the expertise or knowledge to properly evaluate if this is the correct course. To my mind it does make more sense, but any security concerns should have priority I feel.",
      "I think there are too many edge cases of trying to support the --extra-index-url as it was before -- for example, when pypi isn't actually your primary index or pypi mirror this logic breaks down or has potential edge cases I haven't considered.  If you look at my other linked PR that improves the documentation and potentially features around named and pinned indexes, that is where I think the real effort should be expended.  ",
      "@matteius \r\nThanks very much for your information and PR! I also talked with my team member and I got the following comment :)\r\n\r\n----\r\nThank you for your information \r\n\r\nLet me explain our usecase in detail. We think many users have similar usecase.\r\n\r\nWe have private index, and this private index cannnot be access without access token.\r\nWe have to pass our access token to pipenv via environment variable, because we build container image in CI pipline.\r\nOf course, our token must not be included in Pipfile and Pipfile.lock.\r\n\r\nWe want to install private packages from our private index and also public packages from pypi.\r\nOur private packages may depends on the other private packages or public packages or both.\r\n\r\nAfter reading your comment and PR https://github.com/pypa/pipenv/pull/5029/files#diff-67eeccaffd4730cc19ea43afd8caafcf84db895d57ac27bf10e0ad1e002ce17c, we have understood how we should use.\r\nAnd we think the best practice is the following.\r\n\r\n**Create Pipfile**\r\nRun the following command.\r\n```sh\r\npipenv install\r\n```\r\n\r\n**Add private index entry to Pipfile manually**\r\nEdit Pipvile using text editor as follows.\r\n\r\nPipfile\r\n```txt\r\n[[source]]\r\nurl = \"https://pypi.org/simple\"\r\nverify_ssl = true\r\nname = \"pypi\"\r\n\r\n[[source]]\r\nurl = \"https://${MY_CREDENTIAL}@mydomain/simple\"\r\nverify_ssl = true\r\nname = \"myindexname\"\r\n\r\n[packages]\r\n\r\n[dev-packages]\r\n\r\n[requires]\r\npython_version = \"3.8\"\r\n```\r\n\r\n**Install packages**\r\n\r\n```sh\r\n# To install public package, run the following command.\r\npipenv install requests\r\n# To install private package, run the following command.\r\npipenv install --index=myindexname private-package\r\n```\r\n\r\nWe have tested this sequence using pipenv==2022.3.28 and that works fine!\r\nSo, we will change how we use. Thank you very much.\r\n\r\n\r\n---\r\nI would like to add the reason why we didn't use this flow and encounterd the issue https://github.com/pypa/pipenv/issues/5021.\r\nThis is simply because we didn't understood how we should do, and after try-and-error we got the following wrong solution about an years ago.\r\n\r\nWe created Pipfile by running\r\n```sh\r\npipenv install\r\n```\r\n\r\nAnd edit Pipfile as follows.\r\nPipfile\r\n```\r\n[[source]]\r\nurl = \"https://pypi.org/simple\"\r\nverify_ssl = true\r\nname = \"pypi\"\r\n\r\n[[source]]\r\nurl = \"https://${MY_CREDENTIAL}@mydomain/simple\"\r\nverify_ssl = true\r\n# We did not specify name to this index.\r\n\r\n[packages]\r\n\r\n[dev-packages]\r\n\r\n[requires]\r\npython_version = \"3.8\"\r\n```\r\n\r\nThen, we could install our private packages using pipenv==v2020.11.15.\r\n```sh\r\npipenv install private-package\r\n```\r\n\r\nThis command succeeded, but recently we noticed that we got broken Pipfile.lock.\r\nThe Pipfile.lock says that private-package was installed from pypi, but this package does not exists in pypi.\r\n\r\nPipfile.lock\r\n```txt\r\n...\r\n    \"default\": {\r\n        \"private-package\": {\r\n            \"hashes\": [\r\n                \"{hash}\",\r\n                \"{hash}\"\r\n            ],\r\n            \"index\": \"pypi\",\r\n            \"version\": \"==0.x.y\"\r\n        },\r\n\r\n...\r\n```\r\n\r\nAfter updating pipenv, we have encounterd the following issues and reported.\r\nhttps://github.com/pypa/pipenv/issues/5002\r\nhttps://github.com/pypa/pipenv/issues/5021\r\n\r\n\r\nI'm wondoring if some users ,like us, misunderstand how to use pipenv with their private index.\r\nHow about adding some information to these section in docs?\r\nhttps://pipenv.pypa.io/en/latest/advanced/#injecting-credentials-into-pipfiles-via-environment-variables\r\nhttps://pipenv.pypa.io/en/latest/advanced/#specifying-package-indexes\r\n\r\nFor example, add this statement to https://pipenv.pypa.io/en/latest/advanced/#specifying-package-indexes\r\nThis statement help users know how to install via command line.\r\n```sh\r\n...\r\n\r\nYou can install requests from the \"home\" index by running the following command.\r\npipenv install --index=home requests\r\n\r\n...\r\n```\r\n\r\nAnd we noticed that the help message of `pipenv install --help` a little confusing.\r\nIt says `  -i, --index TEXT                Target PyPI-compatible package index url.\r\n`, but we can also specify the package index name which is defined in the Pipfile.\r\n\r\nI also think improving documentation leads many users the best solution, as you mentioned.",
      "@masato-yasuda Thank you for your useful feedback.  I have added the essence of what you have captured in the specifying indexes section in this open PR:  https://github.com/pypa/pipenv/pull/5029\r\n\r\nCould you indicate more what additional detail you are looking for in the section on credentials with environment variables?\r\n\r\nI will look into what you mean about the install help text.",
      "@matteius Thank you for your comment & updates. Let me share my team member's answer about your question.\r\n\r\n----\r\nFor the section on credentials, I thought that the similar statement will help users if exists. However, It might not be necessary.\r\nThe section on Specifying Package Indexes, which is near the credential section, would guide them."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013fd44ee515ce6a4ebe2",
    "number": 5026,
    "body": "Allow PIPENV_VENV_IN_PROJECT to be read in as None, and ensure if it is set to False that it does not use .venv directory.\r\n\r\n\r\n### The issue\r\n\r\nFixes  #2763 \r\n\r\n\r\n### The fix\r\n\r\nThe variable was being cast to a boolean so it would be False even if it was not set, this allows a user to explicitly set the variable to a non-truthy value and ensure that the .venv directory gets ignored.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-2763-is_venv_in_project",
    "is_a_fork": false,
    "comments": [
      "@matteius I'm not able to test atm, but from a casual glance, it looks like that should fix the issue.\r\n\r\nMoreover, I think switching from booleans to constants may be a better approach to avoid confusion (but this may introduce breakages):\r\n\r\nI propose the following values:\r\n- enable\r\n- disable\r\n- auto\r\n\r\nThe `PIPENV_VENV_IN_PROJECT` environment variable can take any of these values, and when it is set to `auto` (which should be the default), then pipenv will behave the way it currently does.\r\n\r\nActually, this may not break anything, because `enable` and `disable` may just be more aliases for truthy and falsey.\r\n\r\nAnyways, yea that looks like a good fix for the issue",
      "I made some updates and made it safer with respect to the allowed true and false values.  If we want to expand that list at some point to include enable(d)/disable(d) we can but I mostly just wanted to put out a patch for the issue at hand.",
      "This change is not 100% backwards compatible and broke one of our docker builds:\r\n```dockerfile\r\n# Dockerfile\r\nRUN PIPENV_VENV_IN_PROJECT=\"enabled\" pipenv sync\r\n```\r\n\r\nPreviously, \"enabled\" was parsed as `True`, but with this change, you need to supply one of `_true_values` for it to work.",
      "From [a quick search on github](https://github.com/search?p=1&q=PIPENV_VENV_IN_PROJECT&type=Code) it seems that most people are using `1` or `true` as a way to set the variable. So they should be fine :)",
      "> This change is not 100% backwards compatible and broke one of our docker builds:\r\n> \r\n> ```dockerfile\r\n> # Dockerfile\r\n> RUN PIPENV_VENV_IN_PROJECT=\"enabled\" pipenv sync\r\n> ```\r\n> \r\n> Previously, \"enabled\" was parsed as `True`, but with this change, you need to supply one of `_true_values` for it to work.\r\n\r\nWe were also using \"enabled\" and this broke all our project builds (40+ projects in Bitbucket) and took me a long while to debug as the error I was initially receiving was `Error: the command gunicorn could not be found within PATH or Pipfile's [scripts].`  on container start, rather than any issues during container build. ",
      "While this is certainly annoying that so many builds are broken, I think this 'enabled' work was wrong to use. This probably would also work if you wrote 'disabled', since the previous code only checked if the variable was set, not if it was truthy.\r\n```\r\n>>> import os\r\n>>> bool(os.environ.get(\"PIPENV_VENV_IN_PROJECT\", \"disabled\"))\r\nTrue\r\n>>> \r\n```\r\n\r\nThis was an accident waiting to happen. Sorry, for breaking your builds, maybe we could have done this in a more graceful way.",
      "> > This change is not 100% backwards compatible and broke one of our docker builds:\r\n> > ```dockerfile\r\n> > # Dockerfile\r\n> > RUN PIPENV_VENV_IN_PROJECT=\"enabled\" pipenv sync\r\n> > ```\r\n> > \r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > Previously, \"enabled\" was parsed as `True`, but with this change, you need to supply one of `_true_values` for it to work.\r\n> \r\n> We were also using \"enabled\" and this broke all our project builds (40+ projects in Bitbucket) and took me a long while to debug as the error I was initially receiving was `Error: the command gunicorn could not be found within PATH or Pipfile's [scripts].` on container start, rather than any issues during container build.\r\n\r\nI suggest you pin your version of `pipenv` to avoid these potential breaks in the future."
    ],
    "commit_messages": [
      "More granular control over PIPENV_VENV_IN_PROJECT variable. (#5026)\n\n* Allow PIPENV_VENV_IN_PROJECT to be read in as None, and ensure if it is set to False that it does not use .venv directory.\r\n\r\n* refactor based on PR feedback and add news fragment.\r\n\r\n* Review unit test coverage and add new tests.  Remove unneccesary bits from other tests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013fe44ee515ce6a4ebe3",
    "number": 5024,
    "body": "### The issue\r\n\r\nFixes: #5023 \r\n\r\n### The fix\r\n\r\nRe-organize the logic and fallback to generating the hash from the link, if pypi is not applicable, and there are no applicable candidates.  This also applies the index restrictions to the hash finder so it too can find the right hashes.\r\n\r\n#### Pipfile.lock Before\r\n```\r\n{\r\n    \"_meta\": {\r\n        \"hash\": {\r\n            \"sha256\": \"dd84b90e2afa892488dc59130dc48898573afeee5ba3aa45d8c64c54be6be39c\"\r\n        },\r\n        \"pipfile-spec\": 6,\r\n        \"requires\": {\r\n            \"python_version\": \"3.10\"\r\n        },\r\n        \"sources\": [\r\n            {\r\n                \"name\": \"pypi\",\r\n                \"url\": \"https://pypi.org/simple\",\r\n                \"verify_ssl\": true\r\n            },\r\n            {\r\n                \"name\": \"downloadpytorch\",\r\n                \"url\": \"https://download.pytorch.org/whl/cu113/\",\r\n                \"verify_ssl\": true\r\n            },\r\n            {\r\n                \"name\": \"downloadpytorch-390\",\r\n                \"url\": \"https://download.pytorch.org/whl/\",\r\n                \"verify_ssl\": true\r\n            }\r\n        ]\r\n    },\r\n    \"default\": {\r\n        \"torch\": {\r\n            \"index\": \"downloadpytorch-390\",\r\n            \"version\": \"==1.11.0+cu113\"\r\n        },\r\n        \"typing-extensions\": {\r\n            \"hashes\": [\r\n                \"sha256:1a9462dcc3347a79b1f1c0271fbe79e844580bb598bafa1ed208b94da3cdcd42\",\r\n                \"sha256:21c85e0fe4b9a155d0799430b0ad741cdce7e359660ccbd8b530613e8df88ce2\"\r\n            ],\r\n            \"markers\": \"python_version >= '3.6'\",\r\n            \"version\": \"==4.1.1\"\r\n        }\r\n    },\r\n    \"develop\": {}\r\n}\r\n```\r\n\r\n#### Pilfile.lock After\r\n```\r\n{\r\n    \"_meta\": {\r\n        \"hash\": {\r\n            \"sha256\": \"a22d7bb22d610cc3aad6f7c9c0a955c862618ad63d3a5f1ada90f4a4e0d6e9cd\"\r\n        },\r\n        \"pipfile-spec\": 6,\r\n        \"requires\": {\r\n            \"python_version\": \"3.10\"\r\n        },\r\n        \"sources\": [\r\n            {\r\n                \"name\": \"pypi\",\r\n                \"url\": \"https://pypi.org/simple\",\r\n                \"verify_ssl\": true\r\n            },\r\n            {\r\n                \"name\": \"downloadpytorch\",\r\n                \"url\": \"https://download.pytorch.org/whl/cu113/\",\r\n                \"verify_ssl\": true\r\n            },\r\n            {\r\n                \"name\": \"downloadpytorch-390\",\r\n                \"url\": \"https://download.pytorch.org/whl/\",\r\n                \"verify_ssl\": true\r\n            }\r\n        ]\r\n    },\r\n    \"default\": {\r\n        \"torch\": {\r\n            \"hashes\": [\r\n                \"sha256:7fd4751bbf39bbb04ec6116c7243ce6528aded4197afcf380537340e1eebd19a\",\r\n                \"sha256:a68c33657a546131eb9bc44e2a98d2fa704aafae861460b051b82813852ccb44\",\r\n                \"sha256:b6a799bdb6ee3d914e5e62bddb4276d4a10248c1af4f2d217738e5f9ee27485b\",\r\n                \"sha256:ddc57495195aa2456e78bfc7d8d3f45dabbb8b7b268b3b5dbed4f0e4db492f33\",\r\n                \"sha256:e4bb14d953db9aad5bdb945a328410638721d77e3e622d0a8d77063c01daf40b\",\r\n                \"sha256:e9126b0a5d95704bee40a9d0ef1cbd82d8dc7863e4638a376bef702dfd659370\",\r\n                \"sha256:e9df65c1fb2d80283b276114878fd38f411b70880e0b406c451d000e6159f451\",\r\n                \"sha256:f56333470daea3c97078b37607e0035cccf72fc5c36fd84546e1a4b8d9944f2b\"\r\n            ],\r\n            \"index\": \"downloadpytorch\",\r\n            \"version\": \"==1.11.0+cu113\"\r\n        },\r\n        \"typing-extensions\": {\r\n            \"hashes\": [\r\n                \"sha256:1a9462dcc3347a79b1f1c0271fbe79e844580bb598bafa1ed208b94da3cdcd42\",\r\n                \"sha256:21c85e0fe4b9a155d0799430b0ad741cdce7e359660ccbd8b530613e8df88ce2\"\r\n            ],\r\n            \"markers\": \"python_version >= '3.6'\",\r\n            \"version\": \"==4.1.1\"\r\n        }\r\n    },\r\n    \"develop\": {}\r\n}\r\n``` \r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-5023-hash-links",
    "is_a_fork": false,
    "comments": [
      "I'd like to add a test, though I am not going to depend on this 2GB wheel file example, and I am surprised that the existing CI passed without this change.  So I don't have a great alternate example to go on, as to why this was such an edge case to the torch example but not the CI since much of the CI uses a private pypi server."
    ],
    "commit_messages": [
      "Issue 5023 Fix hash link generation (#5024)\n\n* Ensure that we generate a hash when there are no applicable candidates but the ireq.link exists.\r\n\r\n* refactor and improve collect_hashes logic.\r\n\r\n* Further fix hash searching and package index restrictions.\r\n\r\n* Factor out common method, fixing code path in process.\r\n\r\n* add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ff44ee515ce6a4ebe4",
    "number": 5018,
    "body": "These additional tests and accepted bug fix, plus also revert the crud I had done to main the night I realize the regression with the CI. ",
    "head_branch": "5011-more-tests3-final",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5018 from pypa/5011-more-tests3-final\n\n5011 more tests3 final"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662013ff44ee515ce6a4ebe5",
    "number": 5017,
    "body": "It would appear that potentially a recent change to setuptools revealed that we weren't actually passing in the subdirectory properly to generate the pep517 wheels, and that was revealed ~3 days ago when the CI started failing on a change that was merged in but had passed the CI the day before. \r\n\r\nFixes #5019\r\nFixes #5014",
    "head_branch": "potential-subdir-fix",
    "is_a_fork": false,
    "comments": [
      "Thanks @frostming, I have now access to requirementslib but unfortunately the build of main is already failing there by the time I have seen the project, so it will take me more time to patch upstream.   Its on my list since I already have another PR over there for the future pip vendoring as well."
    ],
    "commit_messages": [
      "Merge pull request #5017 from pypa/potential-subdir-fix\n\nSubdirectory vcs installs are never passing the subdirectory in requirementslib which is now required by setuptools"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140044ee515ce6a4ebe6",
    "number": 5016,
    "body": "Trying to sort out the setuptools upgrade issue.  More details to follow once I get the test passing again.",
    "head_branch": "5011-more-tests3",
    "is_a_fork": false,
    "comments": [
      "Closing this branch as it was research towards what was ultimately accepted:  https://github.com/pypa/pipenv/pull/5018/files"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140144ee515ce6a4ebe7",
    "number": 5015,
    "body": "fix #5011\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "5011-more-tests2",
    "is_a_fork": false,
    "comments": [
      "This was a research branch, relevant work being ported over to new branch."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140244ee515ce6a4ebe8",
    "number": 5014,
    "body": "### The issue\r\n\r\n#4027 is incomplete because it stops the `.env` file from being loaded at all in quiet mode\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "quiet-.env",
    "is_a_fork": true,
    "comments": [
      "Thanks @nomis but this is a duplicate PR of https://github.com/pypa/pipenv/pull/5010"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140344ee515ce6a4ebe9",
    "number": 5013,
    "body": "This implements a feature according to https://github.com/pypa/pipenv/issues/4959. ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "@ImreC Could you merge latest main branch into your branch so the CI should pass again?",
      "@matteius is the news file correct? I have never worked with this before",
      "> @matteius is the news file correct? I have never worked with this before\r\n\r\nIt should be name `4959.feature.rst`  is the main thing, and anything that is code should be in double backticks.  I have a linting PR out that will add pre-commit hooks to the project and so at that time it will be more obvious if you are naming the news fragments wrong among other things.   I think the content itself makes sense, just remember to update the command name there as well.   ",
      "@ImreC thank you for the latest changes! really good to see this, just a small change still, and I think this can be merged.",
      "@oz123 I have one small question. I have been looking at the env var substitution (or rather lack thereof) as suggested by @rittneje  and added a test for this, but something is going wrong on the shell/python intersection. The env var gets substituted in stdout where python checks, but I don't think it gets substituted anywhere else which is why the test fails. I expect this to not get substituted, but difficult to test in this way. I see possible paths forward:\r\n- Know where this substitution takes place and prevent it somehow. \r\n- Omit the test and assume that no env var gets expanded (which I think shouldn't happen)\r\nAny suggestions? ",
      "For now I have changed the test back so it passes. All checks that I have performed indicates that this works as expected (the literal index URL including env var keys gets outputted with no expansion)",
      "@ImreC I suspect for that test that shows the environment variables were not expanded, I think they are expanded.  It has been in known issue reports, here are just some:\r\nhttps://github.com/pypa/pipenv/issues/3751\r\nhttps://github.com/pypa/pipenv/issues/3138",
      "@matteius but this could also explain the test failing. What my code does is that it takes the literal string in the package index and echoes that. I think that should work right? Another question that I have after looking at this is whether the code should support the case where a package index is linked to a package directly (as in `requests = {index = \"pypi\",version = \"*\"}`). Should this case be supported?",
      "@ImreC I think it does explain your test failing and unless @rittneje has some inputs on this one, we may have to defer the environment variable in the pip indexes as a separate issue/enhancement.\r\n\r\nFor your second question, I am of the view that we should try to figure out how to support pinned indexes such as `requests = {index = \"pypi\",version = \"*\"}).` -- It is interesting though, because you are generating pip commands and I have patched pip in pipenv to be able to pin indexes correctly, meaning that the pip command is likely going to do it funky, potentially even wrong, by searching pypi and other indexes URLs for something that is index restricted. \r\n\r\n",
      "Ok so `requests = {index = \"pypi\",version = \"*\"})` isn't the best example because pypi is the default index and that basically gets pinned to pypi when when you leave off the index such as ` requests = {version = \"*\"})` ... a better example is torch:\r\n\r\n```\r\n[[source]]\r\nurl = \"https://pypi.org/simple\"\r\nverify_ssl = true\r\nname = \"pypi\"\r\n\r\n[[source]]\r\nurl = \"https://download.pytorch.org/whl/cu113/\"\r\nverify_ssl = true\r\nname = \"downloadpytorch\"\r\n\r\n[packages]\r\ntorch = {version = \"==1.11.0+cu113\", index = \"downloadpytorch\"}\r\n\r\n[dev-packages]\r\n\r\n[requires]\r\npython_version = \"3.10\"\r\n```",
      "@matteius I don't think adding a package index per line in requirements.txt is supported by pip, so I think this is impossible to achieve. The only way forward that I can see is to generate a requirements.txt file per package index, but this seems to deviate pretty far from the original gist of the feature: to be a simple way to generate a requirements.txt. Maybe we can just add a caveat to the readme and leave this as is? Potentially we can add this as an enhancement later, but I am also thinking that in the way it is implemented right now it would work for the majority of people. Thoughts?",
      "> @matteius I don't think adding a package index per line in requirements.txt is supported by pip, so I think this is impossible to achieve. The only way forward that I can see is to generate a requirements.txt file per package index, but this seems to deviate pretty far from the original gist of the feature: to be a simple way to generate a requirements.txt. Maybe we can just add a caveat to the readme and leave this as is? Potentially we can add this as an enhancement later, but I am also thinking that in the way it is implemented right now it would work for the majority of people. Thoughts?\r\n\r\n@ImreC Yeah I agree with everything you have discovered and said about this.  That was kind of my assumption too that pip did not support such a thing.   Let's not make it a blocker to the fantastic work you've done on this to get it this far. \r\n\r\nI do have one last thing for you to consider, and it doesn't have to be part of this PR -- but what do you think about the current option `pipenv lock -r`   Should we drop support of however that is working in favor of this feature, or possibly if people are going to complain about removing the `-r` flag from `lock`, that we could make it use the same functionality as this requirements command.   I haven't looked much yet at the implementation of the existing requirements.txt generation, but am curious if you have and what your thoughts are?",
      "I would definitely leave it in for now as the behavior is different than `pipenv requirements`, but it might make more sense to at some point take it out. Maybe `pipenv lock` does too much with the options currently in it. Conceptually it is maybe cleaner to use `pipenv lock` for creating a lockfile and doing that well, and then using `pipenv requirements` to generate requirements.txt from that, instead of trying to do everything from a single command with flags. I have not looked into the implementation, but happy to have a look at some point to see what it currently does.",
      "@ImreC Looks like your build is failing on the new linting checks I added recently.  Can you run `pre-commit install` on your branch and cleanup any errors generated during: `pre-commit run --all-files --verbose`.   `pip install pre-commit` if you don't have it already.",
      "@matteius should be fixed",
      "@matteius suppression expansion of variables is already merged into pip and I believe also into pipenv. So this should not happen here. Also, as @ImreC  already mentioned index url are not part of `requirements.txt`.\r\nI believe pip can handle the following:\r\n\r\n```\r\n$ cat requirements.txt\r\npackage_a==1.0.1 # from private pypi\r\npackage_b==2.0.2 # from another pypi\r\nrequests  # from pypi\r\n```\r\ncan be resolved with:\r\n```\r\npip install --extra-index-url https://private_a.org l --extra-index-url https://private_b.org\r\n```\r\nSee also: https://stackoverflow.com/a/41926975\r\n",
      "@ImreC you might want to change your author email. It seems currently wrong. If you are fine with the current email, I can merge it like this.",
      "@oz123 I changed my email address mid-PR so I think it is fine. Just for my understanding. Where is this visible?",
      "> @matteius suppression expansion of variables is already merged into pip and I believe also into pipenv. So this should not happen here. Also, as @ImreC already mentioned index url are not part of `requirements.txt`. I believe pip can handle the following:\r\n> \r\n> ```\r\n> $ cat requirements.txt\r\n> package_a==1.0.1 # from private pypi\r\n> package_b==2.0.2 # from another pypi\r\n> requests  # from pypi\r\n> ```\r\n> \r\n> can be resolved with:\r\n> \r\n> ```\r\n> pip install --extra-index-url https://private_a.org l --extra-index-url https://private_b.org\r\n> ```\r\n> \r\n> See also: https://stackoverflow.com/a/41926975\r\n\r\n@oz123 I think this case will work fine. The only problem that I can see is where you have packages with clashing names, f.e. you have a private package index with a package called `requests` in it. This will definitely not work with requirements.txt, even though I think pipenv offers the option to specifically define that this package needs to come from the private index and not pypi. Or maybe similarly named packages exist in multiple locations. We could solve this by defining multiple requirements.txt outputs, but it seems like a really exotic case to me. In case you control the private index a more obvious thing to do would be to not name your package `requests`, or add prefixes or something. ",
      ">  The only problem that I can see is where you have packages with clashing names, f.e. you have a private package index with a package called requests in it. This will definitely not work with requirements.txt, even though I think pipenv offers the option to specifically define that this package needs to come from the private index and not pypi. \r\n\r\n@ImreC Actually this shouldn't be a big issue anymore, please see:   https://github.com/pypa/pipenv/pull/5029\r\n\r\nTLDR:  Basically all packages have to be pinned now to an index, and by default the first index in the `Pipfile` is the primary index that unspecified packages utilize."
    ],
    "commit_messages": [
      "Implements requirements command as per #4959 (#5013)\n\n* Implements reqs command\r\n\r\n* Add news document\r\n\r\n* Process comments\r\n\r\n* Rename newsfile\r\n\r\n* Adds --dev-only and --hash args\r\n\r\n* Linting fixes\r\n\r\nCo-authored-by: Imre Persoonlijk <imre1@pop-os.localdomain>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140444ee515ce6a4ebea",
    "number": 5012,
    "body": "fix #5011\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "5011-more-tests",
    "is_a_fork": false,
    "comments": [
      "Too many attempts at setuptools and they published a new version 2 hours ago that hopefully fixes the bug:  https://pypi.org/project/setuptools/61.1.1/\r\n\r\nGrafted the relevant commits to:  https://github.com/pypa/pipenv/pull/5015"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140444ee515ce6a4ebeb",
    "number": 5010,
    "body": "### The issue\r\n\r\nWhen the output is quieted, pipenv no longer loads the `.env` file\r\n\r\n### The fix\r\n\r\nLoad .env but only print the message if quiet is False\r\n\r\n\r\n### The checklist\r\n\r\n* [ ] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "fixes #5006",
      "@smac89 Nice catch!"
    ],
    "commit_messages": [
      "Merge pull request #5010 from smac89/patch-2\n\nBugfix: Not loading .env when quiet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140544ee515ce6a4ebec",
    "number": 5009,
    "body": "### The issue\r\n\r\nhttps://github.com/pypa/pipenv/issues/5008\r\n\r\n### The fix\r\n\r\nThis vendors in `pip==21.2.4` to fix a bug in one of the last releases that will support py 3.6\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-5008-vendor-pip-21.2.4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Vendor in pip 21.2.4 release (from pip 21.2.2 prior). (#5009)\n\n* Vendor in pip 21.2.4 release (from pip 21.2.2 prior).\r\n\r\n* Add news fragment for pip 21.2.4 vendor update.\r\n\r\n* Add potentially missing LICENSE files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140644ee515ce6a4ebed",
    "number": 5006,
    "body": "Allow quiet flag to suppress the .env loading message.\r\n\r\n### The issue\r\n\r\nhttps://github.com/pypa/pipenv/issues/4027\r\n\r\n### The fix\r\n\r\nThis quiets the message when `--quiet` is passed in like `pipenv run --quiet`  or when the environment variable `PIPENV_QUIET` is set to 1.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-4027-quiet-option-install",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Allow quieting the output of pipenv run and .env loading. (#5006)\n\n* Restore this message as stderr because it affects requirements.txt generation.\r\n\r\n* Only load the dotenv file when its a real file and thus only print the message when its present.\r\n\r\n* Add news fragment.\r\n\r\n* Allow quieting the output of install and .env loading.\r\n\r\n* Missed this spot in th test to convert back.\r\n\r\n* Add news fragment for quiet run option."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140744ee515ce6a4ebee",
    "number": 5005,
    "body": "### The issue\r\n\r\n- https://github.com/pypa/pipenv/issues/5003\r\n- https://github.com/pypa/pipenv/issues/4027#issuecomment-1076121297\r\n\r\n### The fix\r\n\r\nRestore the logging back to be stderr.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-5003-pipenv-dot-env-loading-message",
    "is_a_fork": false,
    "comments": [
      "@matteius does this solve any use case when the output of any pipenv command is redirected to a file. We found ourselves with the same issue when doing `pipenv run` ",
      "@sdepablos Yes, this was only affecting `pipenv run` my earlier messages said install which was misleading but was what I thought initially this AM.   Since we changed it back to stderr it won't be redirected to the file because that only captures stdout.  Also, planning to issue a new release tonight to patch up the two known regressions."
    ],
    "commit_messages": [
      "Restore this message as stderr because it affects requirements.txt generation (#5005)\n\n* Restore this message as stderr because it affects requirements.txt generation.\r\n\r\n* Only load the dotenv file when it's a real file, and thus only print the message when it's present.\r\n\r\n* Add news fragment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140844ee515ce6a4ebef",
    "number": 5004,
    "body": "### The issue\r\n\r\nhttps://github.com/pypa/pipenv/issues/5002\r\n\r\n### The fix\r\n\r\nCheck the indexes safely, the problem will still be that if you don't name an index, then it is just an extra source, but if you call out the name of an index it won't be able to resolve to an index that is unamed, and that should be fine.\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "issue-5002-pipenv-index-safety-fix",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix the assumption that all sources are named. (#5004)\n\n* Fix the assumption that all sources are named.\r\n\r\n* Add test case\r\n\r\n* Add news fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140844ee515ce6a4ebf0",
    "number": 5001,
    "body": "Removes vendored requests and certifi because we can -- its not what we use in the project.\r\n\r\nEdit:  so it appears we do use it, not sure why the coverage report has mislead me here.   Will revisit.\r\n\r\n\r\n### The issue\r\nhttps://github.com/pypa/pipenv/issues/5000\r\n",
    "head_branch": "issue-5000-remove-vendored-requests",
    "is_a_fork": false,
    "comments": [
      "Coverage report only tells there are not tests for it, rather than it isn't used. Using the coverage report as a mark may be misleading.",
      "> Coverage report only tells there are not tests for it, rather than it isn't used. Using the coverage report as a mark may be misleading.\r\n\r\nTotally agree with the premise of your comment--in this case it is code that was exercised by tests but was showing red on the coverage report which seems odd.  At first I suspect that maybe because of where the import was happening or maybe it was using the `requests` from the Pipfile.lock requirements, but really if it was it wouldn't have blown up pulling out the vendor version.  \r\n\r\nI was thinking there could be some value in being consistent in using the same version of requests for both pip and the remainder of the project but also still exploring this one.    @frostming  What are your thoughts about relying on the requests provided by pip rather than explicitly vendoring our own?",
      "I'll revisit this in a fresh PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140944ee515ce6a4ebf1",
    "number": 4999,
    "body": "Remove option --code from install and --unused from check which has been broken since 2018.  Also removed unused args from check command, and removed the vendored dependencies:\r\n* pipreqs\r\n* yarg\r\n* doctopt\r\n\r\n### The issue\r\nFor more details on rationale:  \r\nhttps://github.com/pypa/pipenv/issues/4998\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "4998-remove-long-broken-pipreqs-usage",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #4999 from pypa/4998-remove-long-broken-pipreqs-usage\n\nremove long broken pipreqs usage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140a44ee515ce6a4ebf2",
    "number": 4997,
    "body": "This gives us coverage report so we can study what parts of the code are not being exercised by the existing tests, which can be indicators of unused code paths in some cases, such totally unused methods or hard to reach conditional branches that may not be relevant anymore.  It also helps finds code that should have been covered by tests.\r\n\r\n### The issue\r\n\r\nhttps://github.com/pypa/pipenv/issues/4996\r\n\r\n\r\n### The fix\r\n\r\nLet's take an example of a method that should be refactored and study its coverage report:  \r\n![image](https://user-images.githubusercontent.com/479892/159172395-31d56d5f-5d09-4ebd-9320-162bd3cfbbb4.png)\r\n\r\nAt first glance it appears all tests pass and this method perhaps could be reduced to:\r\n```\r\n    def _build_package_list(self, package_section):\r\n        \"\"\"Returns the list of packages from the Project's Pipfile.\"\"\"\r\n        ps = {}\r\n        for k, v in self.parsed_pipfile.get(package_section, {}).items():\r\n            ps.update({k: v})\r\n        return ps\r\n```\r\nBut if that is true, then why iterate over the result to build up the same result, so that really becomes:\r\n```\r\n    def _build_package_list(self, package_section):\r\n        \"\"\"Returns the list of packages from the Project's Pipfile.\"\"\"\r\n        return self.parsed_pipfile.get(package_section, {})\r\n```\r\n\r\nSo does this mean we have missed some test case that is important here to try and hit that super complex hard to reach conditional, or the later one to actually be excluded, or can we really simplify this 5 year old method from multiple authors that far?\r\n\r\nGoing to see what else the coverage report reveals ...\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [ ] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n",
    "head_branch": "4996-review-existing-options",
    "is_a_fork": false,
    "comments": [
      "As far as planning goes -- this one will be delayed until sometime after we update the pip vendoring to 22.0.4 since we will be dropping support for python 3.6 at that time, and these coverage requirements require at least python 3.7.   So this WIP PR could be considered in a later release once all that other pending work has been verified by with a separate release.",
      "Closing in favor of branch with fewer commits/merge conflicts:  https://github.com/pypa/pipenv/pull/5038"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140b44ee515ce6a4ebf3",
    "number": 4994,
    "body": "Similar to how pip has pre-commit configuration: https://github.com/pypa/pip/blob/main/.pre-commit-config.yaml\r\nThis adds the configuration, applies it using `pre-commit run --all-files --verbose` and like usual there are a few flake8 things that had to be manually applied, but 99% of this was applied automatically by the linting tools.  Also updates the .github action to have a component to check the `pre-commit run --all-files` doesn't have errors.\r\n\r\n**TODO:**\r\n* Update the Development docs on how to add the pre-commit hooks (should be as easy as running `pre-commit install` or `pip install pre-commit` if that is missing)\r\n* Add news fragment\r\n\r\n\r\n### The issue\r\n\r\nhttps://github.com/pypa/pipenv/issues/4993\r\n\r\n### The fix\r\n\r\nFollows the standards of the pip project, but customized for excluding our vendor and patched directories.   Updated to the latest package versions of the pre-commit hooks packages.\r\n\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-4993-pre-commit-hooks",
    "is_a_fork": false,
    "comments": [
      "Put on hold as it has to follow the merging of the split-utils branch, since its based off that."
    ],
    "commit_messages": [
      "Issue 4993 Add standard pre commit hooks and apply linting. (#4994)\n\n* Add .pre-commit-config.yaml to the project and exclude tests (for now).  This does not include the MyPy linting that pip does but does include everything else."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140c44ee515ce6a4ebf4",
    "number": 4990,
    "body": "### The issue\r\n\r\nThe pipenv/utils.py has grown to 2338 lines of code, which makes it unwieldy and disorganized.  When trying to consider larger bugs and refactors this is problematic because of the logical complexity of navigating around and understanding what kind of util you are looking at.  I would like to do something similar with core.py at some point as well, but this is my first iteration of proposing reorg'ing some of the code.\r\n\r\nhttps://github.com/pypa/pipenv/issues/4992\r\n\r\n### The fix\r\n\r\nMove the existing utils.py code into a utils module organized by functionality type.   This is a first pass at it, and I suspect there may be some tweaking to my naming conventions to make everyone happy.   The only draw back I see to doing this is loosing some of the git annotations around this code, but ultimately that would happen whenever we get around to organizing the code better and I think good code organization is more important than legacy annotations which would still ultimately be in the git history.\r\n\r\nThe only modifications to code being moved are the following methods have been dropped due to lack of use:\r\n* `escape_grouped_arguments` + unit tests\r\n* `parse_python_version`  + unit tests\r\n* `add_to_set`\r\n* `sys_version`\r\n* `get_indexes_from_requirement`\r\n* `interrupt_handled_subprocess`\r\n* `rmtree`\r\n\r\n\r\nAlso two unused code lines were removed `pipenv/core.py` because I had already run the test suite showing they were not used after my IDE tipped me off about that.\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "code-reorg-utils-reduces-complexity",
    "is_a_fork": false,
    "comments": [
      "@matteius I think this can be merged.\r\n@frostming want to have a look at this giant PR?",
      "I am going to merge this because I need to modify a util based on a new issue report from today, and I am tired of keeping those changes in sync with this PR.  It will also allow merging the linting PR."
    ],
    "commit_messages": [
      "Code reorg utils into utils module reduces complexity (#4990)\n\n* Split apart the massive utils.py into a utils module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140d44ee515ce6a4ebf5",
    "number": 4989,
    "body": "### The issue\r\n\r\nTwo tests are broken because of: https://github.blog/2021-09-01-improving-git-protocol-security-github/",
    "head_branch": "fix-failing-git-protocol-tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #4989 from pypa/fix-failing-git-protocol-tests\n\nFix for the failing git protocol tests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140e44ee515ce6a4ebf6",
    "number": 4988,
    "body": "I am proposing via PR we remove the flag `--selective-upgrade` on several grounds:\r\n* It doesn't work and hasn't for a long time\r\n* The suggestion for people using it are to use `--keep-outdated` instead.\r\n* There is no documentation for the code path.\r\n* The code path doesn't make sense and exists in overly complex method we aim to simplify anyway.\r\n* It does things like uses Pip feature \r\n  * to-satisfy-only (undocumented, please avoid) - packages are not upgraded (not even direct requirements) unless the currently installed version fails to satisfy a requirement (either explicitly specified or a dependency).\r\n    * This is actually the “default” upgrade strategy when --upgrade is not set, i.e. pip install AlreadyInstalled and pip install --upgrade --upgrade-strategy=to-satisfy-only AlreadyInstalled yield the same behavior.\r\n    * Ref:  https://pip.pypa.io/en/stable/development/architecture/upgrade-options/#controlling-what-gets-installed\r\n* the https://pip.pypa.io/en/stable/cli/pip/#exists-action-option usage also doesn't seem to be anything special or make extra sense why its would be needed over `--keep-outdated`.   \r\n* More reasons to follow if necessary ...\r\n\r\n\r\n### The issue\r\n\r\nhttps://github.com/pypa/pipenv/issues/4650\r\nhttps://github.com/pypa/pipenv/issues/4626\r\nhttps://github.com/pypa/pipenv/issues/4351\r\nhttps://github.com/pypa/pipenv/issues/3461\r\nhttps://github.com/pypa/pipenv/issues/2412\r\nAnd more:  https://github.com/pypa/pipenv/issues?q=is%3Aissue+is%3Aopen+selective-upgrade\r\n\r\n### The fix\r\n\r\nI removed the code for `--selective-upgrade`\r\n\r\n### The checklist\r\n\r\n* [X] Associated issue\r\n* [X] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n",
    "head_branch": "issue-4650-unsupported-feature-selective-upgrade",
    "is_a_fork": false,
    "comments": [
      "Putting this one on hold until -- even though this flag isn't really supported, we probably need to support something that does the right thing for selective upgrades now that I realize what `--keep-outdated` is doing.  Will revisit this.",
      "Deferring this for now -- it needs to be revisited, but one user suggested that we keep the functionality and don't support it.  I don't love that approach either, but perhaps there is a way to cleanup or understand the implementation/implications in time.  "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620140e44ee515ce6a4ebf7",
    "number": 4987,
    "body": "Thank you for contributing to Pipenv!\r\n\r\n\r\n### The issue\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n**https://github.com/pypa/pipenv/issues/2222**\r\n**https://github.com/pypa/pipenv/issues/2870**\r\n\r\nAlways consider opening an issue first to describe your problem, so we can discuss what is the best way to amend it.  Note that if you do not describe the goal of this change or link to a related issue, the maintainers may close the PR without further review.\r\n\r\nIf your pull request makes a non-insignificant change to Pipenv, such as the user interface or intended functionality, please file a PEEP.\r\n\r\n    https://github.com/pypa/pipenv/blob/master/peeps/PEEP-000.md\r\n\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\n_When pipenv does not find Pipfile, it tries to find requirements.txt file, if the file is not in the same directory, then, pipenv looks in the parent directories (the default settings PIPENV_MAX_DEPTH=3)._\r\n_when pipenv finds the requirements.txt file either in the same folder or in one of the parent folders, it prints the message: \"**requirements.txt found, instead of Pipfile! Converting...**\"._\r\n_I think this message is cofusing for the user when there is no requirements.txt file stored in the same folder and the user might not know that pipenv looks in the parent folders as well._\r\n_The confusion here could be avoided by displaying to the user the folder path of the requirements.txt file where pipenv found it._\r\n\r\n_Here is my proposal: \"**requirements.txt found in <requirements.txt-DIR-PATH> instead of Pipfile! Converting...**\"\r\nI bolded **requirements.txt** and **Pipfile** and colored the directory path to the requirements.txt file with Yellow._\r\n\r\n### The checklist\r\n\r\n* [x] Associated issue\r\n* [x] A news fragment in the `news/` directory to describe this fix with the extension `.bugfix`, `.feature`, `.behavior`, `.doc`. `.vendor`. or `.trivial` (this will appear in the release changelog). Use semantic line breaks and name the file after the issue number or the PR #.\r\n\r\n<!--\r\n### If this is a patch to the `vendor` directory...\r\n\r\nPlease try to refrain from submitting patches directly to `vendor` or `patched`, but raise your issue to the upstream project instead, and inform Pipenv to upgrade when the upstream project accepts the fix.\r\n\r\nA pull request to upgrade vendor packages is strongly discouraged, unless there is a very good reason (e.g. you need to test Pipenv’s integration to a new vendor feature). Pipenv audits and performs vendor upgrades regularly, generally before a new release is about to drop.\r\n\r\nIf your patch is not or cannot be accepted by upstream, but is essential to Pipenv (make sure to discuss this with maintainers!), please remember to attach a patch file in `tasks/vendoring/patched`, so this divergence from upstream can be recorded and replayed afterwards.\r\n-->\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "here is a screenshot of how the message will look like:\r\n![image](https://user-images.githubusercontent.com/32025281/158707340-86724343-b8a7-4d17-b6a4-bb55af9b8726.png)\r\n\r\n`mkdir outer-dir`\r\n`cd outer-dir`\r\n`touch requirements.txt`\r\n`mkdir inner-dir`\r\n`cd inner-dir`\r\n`pipenv shell`\r\n",
      "Personally I think it looks good, but also the current tests broke because of a git:// protocol deprecation, so not running this until we can merge:  https://github.com/pypa/pipenv/pull/4989 and your PR gets updated with the updated main branch at that time."
    ],
    "commit_messages": [
      "Merge pull request #4987 from HosamAlmoghraby/main\n\ndisplay the directory path of the found requirements.txt file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  }
]