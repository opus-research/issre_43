[
  {
    "_id": "661fab38a88c0a76e0a514d0",
    "number": 4352,
    "body": "This rewrites most of the arch/linux code that handles the loading of `conf.ifaces`, `conf.route` and `conf.route6`, in order to use a RTNETLINK socket (instead of the current reading of `/proc/net/XXX`).\r\n\r\nAmong those:\r\n- the read_routes(6) functions\r\n- the linux interfaces provider\r\n- arch/linux util functions\r\n\r\nThis:\n- adds support for multiple IPv4 addresses to interfaces\n- handles interfaces aliases, etc. natively without needing additional tricks\n- allows us to have access to all routing tables (local, etc.) rather than just the default one, giving us generally much better handling of routes.\r\n\r\nfixes #4201\r\n(maybe other issues too?)\r\n\r\n## Note to all maintainers\r\n\r\nThis will need thorough **TESTING** on other platforms (that we don't include in the CI). Especially big-endian or x32 platforms",
    "head_branch": "rewrite-linux-arch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab39a88c0a76e0a514d1",
    "number": 4351,
    "body": "This PR:\r\n- bundles `manufdb`. This fixes https://github.com/secdev/scapy/issues/4280\r\n- introduces a caching system for files loaded in `data`. This was required in order not to introduce a slow down with this change.\r\n- re-enables all manufdb tests. because we can now always fallback on it.\r\n- `.config/scapy` and `.cache/scapy` now comply with the `XDG_XXX_HOME` variables.\r\n\r\nFun fact: a first version of this PR converted Manuf to a python dictionary. Apparently loading a file containing a very, very big Python dictionnary takes infinetly longer than loading text/binary and parsing it.",
    "head_branch": "nomanuf",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4351?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4351](https://app.codecov.io/gh/secdev/scapy/pull/4351?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1602125) into [master](https://app.codecov.io/gh/secdev/scapy/commit/cd2fed92557810265693d716558f0cd34eddb006?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cd2fed9) will **decrease** coverage by `0.03%`.\n> The diff coverage is `59.44%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4351      +/-   ##\n==========================================\n- Coverage   82.13%   82.10%   -0.03%     \n==========================================\n  Files         350      352       +2     \n  Lines       83136    83224      +88     \n==========================================\n+ Hits        68280    68334      +54     \n- Misses      14856    14890      +34     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4351?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4351?src=pr&el=tree&filepath=scapy%2Farch%2Fwindows%2F__init__.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `61.73% <100.00%> (-0.99%)` | :arrow_down: |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4351?src=pr&el=tree&filepath=scapy%2Fconfig.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `79.81% <100.00%> (+1.70%)` | :arrow_up: |\n| [scapy/dadict.py](https://app.codecov.io/gh/secdev/scapy/pull/4351?src=pr&el=tree&filepath=scapy%2Fdadict.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZGFkaWN0LnB5) | `92.64% <100.00%> (+0.84%)` | :arrow_up: |\n| [scapy/libs/manuf.py](https://app.codecov.io/gh/secdev/scapy/pull/4351?src=pr&el=tree&filepath=scapy%2Flibs%2Fmanuf.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy9tYW51Zi5weQ==) | `100.00% <ø> (ø)` | |\n| [scapy/main.py](https://app.codecov.io/gh/secdev/scapy/pull/4351?src=pr&el=tree&filepath=scapy%2Fmain.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbWFpbi5weQ==) | `70.95% <78.26%> (-0.05%)` | :arrow_down: |\n| [scapy/data.py](https://app.codecov.io/gh/secdev/scapy/pull/4351?src=pr&el=tree&filepath=scapy%2Fdata.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZGF0YS5weQ==) | `90.52% <86.88%> (-0.81%)` | :arrow_down: |\n| [scapy/tools/generate\\_manuf.py](https://app.codecov.io/gh/secdev/scapy/pull/4351?src=pr&el=tree&filepath=scapy%2Ftools%2Fgenerate_manuf.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdG9vbHMvZ2VuZXJhdGVfbWFudWYucHk=) | `0.00% <0.00%> (ø)` | |\n| [scapy/tools/generate\\_ethertypes.py](https://app.codecov.io/gh/secdev/scapy/pull/4351?src=pr&el=tree&filepath=scapy%2Ftools%2Fgenerate_ethertypes.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdG9vbHMvZ2VuZXJhdGVfZXRoZXJ0eXBlcy5weQ==) | `0.00% <0.00%> (ø)` | |\n\n... and [1 file with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4351/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Hm, should we `gzip` the blob ? It's a bit big.\r\nI can't recall how supported `gzip` is on all plateforms. If I'm not mistaken `zlib` is often not available...\r\n\r\nEdit: we're already using gzip as a hard dependency, so I ended up using it.",
      "It took me a while but I figured out why Packit failed in https://download.copr.fedorainfracloud.org/results/packit/evverx-scapy-2/fedora-rawhide-x86_64/07331856-scapy/builder-live.log.gz. There is no `~/.config` there. I reproduced it locally by launching a stripped container and running the test there. Once I manually created the `~/.config` directory the tests started passing.",
      "Thanks for looking into it.\n\nI didn't fully read the XDG spec so I kinda assumed one shouldn't create the `.config`, apparently as I was wrong and it is actually standardized:\n\n\nhttps://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\n> If, when attempting to write a file, the destination directory is non-existent an attempt should be made to create it with permission 0700. If the destination directory exists already the permissions should not be changed. ",
      "/packit build",
      "/packit build"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab3aa88c0a76e0a514d2",
    "number": 4349,
    "body": "fixes #4348",
    "head_branch": "rtcp-parse-test",
    "is_a_fork": true,
    "comments": [
      "CI failure unrelated, here's the message:  \"Error: getaddrinfo ENOTFOUND cli.codecov.io at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:118:26)\"",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4349?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4349](https://app.codecov.io/gh/secdev/scapy/pull/4349?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8300e72) into [master](https://app.codecov.io/gh/secdev/scapy/commit/731c4c050ac14e5ed8fc8ad80489b368dfeeb5f5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (731c4c0) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4349   +/-   ##\n=======================================\n  Coverage   82.12%   82.12%           \n=======================================\n  Files         350      350           \n  Lines       83132    83136    +4     \n=======================================\n+ Hits        68269    68276    +7     \n+ Misses      14863    14860    -3     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4349?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/rtcp.py](https://app.codecov.io/gh/secdev/scapy/pull/4349?src=pr&el=tree&filepath=scapy%2Fcontrib%2Frtcp.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ydGNwLnB5) | `100.00% <100.00%> (+14.28%)` | :arrow_up: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4349/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix RTCP parsing with SR or multiple RR (#4349)\n\n* rtcp: Add extract_padding to SenderInfo and ReceptionReport\r\n\r\nBy default when parsing these packets parse everything as their\r\n\"payload\" but they are in fact fixed-size.\r\n\r\nFixes Issue #4348\r\n\r\n* rtcp: Add test demonstrating parsing of SR+RR"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab3ba88c0a76e0a514d3",
    "number": 4347,
    "body": "Similar to the motivation in https://github.com/secdev/scapy/issues/3947#issuecomment-1479767620 : I would like to scan all the possible services including a nonsense/malformed/invalid request to a 7f service.\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nenables uds scanning of 0x00 - 0xff without crash\r\n\r\nSimilar to the motivation in https://github.com/secdev/scapy/issues/3947#issuecomment-1479767620 : I would like to scan all the possible services including a nonsense/malformed/invalid request to a 7f service.\r\n\r\nIt is definitely invalid UDS to make requests to services with 0x40 bit set; however, the motivation is precisely to test targets with invalid UDS.\r\n\r\nAt present `UDS_Scanner(isock, test_cases=[UDS_ServiceEnumerator], UDS_ServiceEnumerator_kwargs={...,'scan_range': range(256)})` will fail with `AttributeError: requestServiceId` when the scanner gets to sending `017f`. This small patch makes scapy.contrib.automotive.uds.UDS.hashret() check if the payload.fields has requestedServiceId before trying to grab that field value for struct.pack().\r\n\r\nI'm proposing the patch here even though this is invalid UDS because a crash seems like the wrong outcome. Happy to adapt the patch or testing -- or withdraw at you discretion.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4347?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4347](https://app.codecov.io/gh/secdev/scapy/pull/4347?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (26d21f9) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0a2b2bcff17b45106fc81aeecb9ba48fe75f916c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0a2b2bc) will **decrease** coverage by `0.55%`.\n> Report is 5 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4347      +/-   ##\n==========================================\n- Coverage   82.03%   81.48%   -0.55%     \n==========================================\n  Files         350      350              \n  Lines       82888    83136     +248     \n==========================================\n- Hits        67994    67744     -250     \n- Misses      14894    15392     +498     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4347?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/uds.py](https://app.codecov.io/gh/secdev/scapy/pull/4347?src=pr&el=tree&filepath=scapy%2Fcontrib%2Fautomotive%2Fuds.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3Vkcy5weQ==) | `98.41% <100.00%> (ø)` | |\n\n... and [40 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4347/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Hi, thanks for the PR. I think an additional check in hashret is a good idea in general. \r\n\r\nI suggest to change the check to \r\n\r\n‘’’ … and len(self) >= 2… ‘’’\r\n\r\nI’m not a fan of string comparisons inside hashret.",
      "Could you please provide a test case as well? ",
      "> I suggest to change the check to ... I’m not a fan of string comparisons inside hashret.\r\n\r\nWill do\r\n\r\n> Could you please provide a test case as well?\r\n\r\nI can, yes. I don't really know where to start; could you please tell me which file to add to @polybassa ?\r\n",
      "Great. \r\n\r\nI think you can copy this test case and change the scan_range \r\n\r\nhttps://github.com/secdev/scapy/blob/731c4c050ac14e5ed8fc8ad80489b368dfeeb5f5/test/contrib/automotive/scanner/uds_scanner.uts#L259\r\n\r\n",
      "Actually the UTS is harder to grok than I anticipated 😅\r\n\r\nI can keep trying but it's not clear to me what write just yet.\r\n\r\n\r\nOn Wed, Apr 10, 2024, 15:16 Nils Weiss ***@***.***> wrote:\r\n\r\n> Great.\r\n>\r\n> I think you can copy this test case and change the scan_range\r\n>\r\n>\r\n> https://github.com/secdev/scapy/blob/731c4c050ac14e5ed8fc8ad80489b368dfeeb5f5/test/contrib/automotive/scanner/uds_scanner.uts#L259\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/secdev/scapy/pull/4347#issuecomment-2048270229>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAB3M6KJ35NYWH6SBXVWSITY4WFXLAVCNFSM6AAAAABF6673VCVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDANBYGI3TAMRSHE>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "I think you can just copy the testcase from line 259 to 305 and change the kwargs in line 284.\r\n\r\nfinally you need to change the asserts ",
      "OK I did eventually understand it enough to create testcases.\r\n\r\nusing  ` … and len(self) >= 2… ` in hashret() was insufficient; there appears to be another case where len(self) > 1  BUT also .requestServiceId does not exist... (where bytes(self.payload) == b'\\x00' or bytes(self.payload) == b'\\x00\\x00') . I added another compound condition here... but I am not confident this is correct.\r\n\r\n",
      "Looks good so far"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab3ca88c0a76e0a514d4",
    "number": 4346,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nThis PR adds PoE (IEEE802.3bt) organization specific TLVs for LLDP layer\r\n\r\nDifferent versions of PoE TLVs were added as separate classes instead of using `ConditionalField` to allow the user explicitly instantiate the desired TLV version.\r\n",
    "head_branch": "poe",
    "is_a_fork": true,
    "comments": [
      "Unit test failed because `tshark` is not installed on testing machine",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4346?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4346](https://app.codecov.io/gh/secdev/scapy/pull/4346?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b736503) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0a2b2bcff17b45106fc81aeecb9ba48fe75f916c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0a2b2bc) will **decrease** coverage by `0.53%`.\n> Report is 3 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4346      +/-   ##\n==========================================\n- Coverage   82.03%   81.50%   -0.53%     \n==========================================\n  Files         350      350              \n  Lines       82888    83230     +342     \n==========================================\n- Hits        67994    67836     -158     \n- Misses      14894    15394     +500     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4346?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/lldp.py](https://app.codecov.io/gh/secdev/scapy/pull/4346?src=pr&el=tree&filepath=scapy%2Fcontrib%2Flldp.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9sbGRwLnB5) | `94.62% <100.00%> (+2.09%)` | :arrow_up: |\n\n... and [38 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4346/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Added PoE measure TLV. Again, macos tests are failing because tshark is not installed.",
      "Changed to use `ScalingField` everywhere. Yet again, macos check failed because `tshark` is not installed.",
      "Found the mistake in `LLDPDUPowerViaMDI` length. Fixed it and added `tshark` tests for this TLV (initially I thought it was unsupported by Wireshark)",
      "Double-checked `LLDPDUPowerViaMDIMeasure` via Wireshark. For some strange reason, it reports the warning `Invalid length, greather then expected` even though package length, counting from Org code, is 26 octets long."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab3da88c0a76e0a514d5",
    "number": 4344,
    "body": "This PR includes several improvements of the SMB and Kerberos stacks:\n- refactor SMB client and server to reuse common code for signing/encryption/session management, that was previously only used in the server, in preparation of SMB 3.1.1 client support and encryption (not yet implemented)\r\n- test smbserver 2.0.2 specifically\r\n- minor smbclient improvements (neogtiate MaxRead/Write sizes, etc.)\n- Much better GSS_WrapEx support for Kerberos\n- Add test vectors for RFC4757, and some more",
    "head_branch": "smb-session",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4344?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4344](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4f379a5) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0a2b2bcff17b45106fc81aeecb9ba48fe75f916c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0a2b2bc) will **decrease** coverage by `0.70%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `76.31%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4344      +/-   ##\n==========================================\n- Coverage   82.03%   81.33%   -0.70%     \n==========================================\n  Files         350      350              \n  Lines       82888    84981    +2093     \n==========================================\n+ Hits        67994    69118    +1124     \n- Misses      14894    15863     +969     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4344?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/automaton.py](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree&filepath=scapy%2Fautomaton.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `74.95% <100.00%> (ø)` | |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree&filepath=scapy%2Fconfig.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `78.10% <ø> (ø)` | |\n| [scapy/layers/dcerpc.py](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree&filepath=scapy%2Flayers%2Fdcerpc.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RjZXJwYy5weQ==) | `90.99% <100.00%> (+0.09%)` | :arrow_up: |\n| [scapy/layers/ldap.py](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree&filepath=scapy%2Flayers%2Fldap.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2xkYXAucHk=) | `53.84% <ø> (ø)` | |\n| [scapy/layers/msrpce/rpcserver.py](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree&filepath=scapy%2Flayers%2Fmsrpce%2Frpcserver.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL21zcnBjZS9ycGNzZXJ2ZXIucHk=) | `79.31% <100.00%> (+0.69%)` | :arrow_up: |\n| [scapy/supersocket.py](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree&filepath=scapy%2Fsupersocket.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `74.56% <100.00%> (+0.07%)` | :arrow_up: |\n| [scapy/layers/dhcp.py](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree&filepath=scapy%2Flayers%2Fdhcp.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3AucHk=) | `83.54% <66.66%> (-0.17%)` | :arrow_down: |\n| [scapy/layers/msrpce/rpcclient.py](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree&filepath=scapy%2Flayers%2Fmsrpce%2Frpcclient.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL21zcnBjZS9ycGNjbGllbnQucHk=) | `52.07% <80.00%> (+3.23%)` | :arrow_up: |\n| [scapy/layers/smbserver.py](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree&filepath=scapy%2Flayers%2Fsmbserver.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYnNlcnZlci5weQ==) | `70.57% <90.47%> (-0.09%)` | :arrow_down: |\n| [scapy/modules/ticketer.py](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree&filepath=scapy%2Fmodules%2Fticketer.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbW9kdWxlcy90aWNrZXRlci5weQ==) | `35.66% <25.00%> (+0.34%)` | :arrow_up: |\n| ... and [4 more](https://app.codecov.io/gh/secdev/scapy/pull/4344?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n\n... and [11 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4344/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "SMB + Kerberos improvements (#4344)\n\n* Refactor SMB client and server around a common SMBSession\r\n\r\n* Test smbserver 2.0.2\r\n\r\n* Begin support of smbclient 3.1.1\r\n\r\n* Minor smbclient improvements\r\n\r\n* Support Kerberos GSS_WrapEx other kerberos improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab3ea88c0a76e0a514d6",
    "number": 4342,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nBased on draft-ietf-opsawg-pcapng-latest, 5 March 2024, I made following changes:\r\n-  map `packet.sniffed_on` to unique IDB id. When writing, if_name option and linktype is populated based on the first packet seen with a unique sniffed_on string.\r\n-  map `packet.direction` to EPB flags inbound/outbound direction bits. Remaining flag bits not implemented.\r\n-  simplified `RawPcapNgReader._read_options()` and moved (code,value) treatment to the caller since codes of same type can have different meaning for different type of blocks.\r\n- Fix `RawPcapNgReader._read_block_shb()` and `_write_block_shb()` to be according to the draft\r\n- Added new tests and adapted others to the changes.\r\n\r\nNote: I couldn't figure the meaning of `packet.direction `on Scapy API reference or source code, but since it's marked as integer I assumed it follows the pcapng epb_flags outbound/inbound field.\r\n\r\nWhy I did this changes:\r\nI was using scapy to convert packet hex dump from a text file to pcap. The text file included information about interface name and direction (outbound/inbound) which I would like to to have included in the pcapng file.",
    "head_branch": "pcapng-enhancements",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4342?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAttention: Patch coverage is `90.10989%` with `9 lines` in your changes are missing coverage. Please review.\n> Project coverage is 82.12%. Comparing base [(`f919a6a`)](https://app.codecov.io/gh/secdev/scapy/commit/f919a6af6a3c86aacce36958ac530e71c8f7be5b?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`b90ff7b`)](https://app.codecov.io/gh/secdev/scapy/pull/4342?dropdown=coverage&src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n> Report is 19 commits behind head on master.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4342      +/-   ##\n==========================================\n+ Coverage   81.67%   82.12%   +0.44%     \n==========================================\n  Files         350      350              \n  Lines       82884    83195     +311     \n==========================================\n+ Hits        67699    68326     +627     \n+ Misses      15185    14869     -316     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4342?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/packet.py](https://app.codecov.io/gh/secdev/scapy/pull/4342?src=pr&el=tree&filepath=scapy%2Fpacket.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `84.15% <100.00%> (+0.18%)` | :arrow_up: |\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4342?src=pr&el=tree&filepath=scapy%2Futils.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `73.40% <89.65%> (+0.30%)` | :arrow_up: |\n\n... and [41 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4342/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Unless specifically asked or discussed during a PR review process, we squash all commits. You can simply add more commits to apply changes.\n",
      "@guedou, I have done some changes as per your review suggestion. Additionally added a length check for the tsresol option when reading IDB."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab3fa88c0a76e0a514d7",
    "number": 4339,
    "body": "I'm trying to send my own SSLv2 Client Hello message using the automaton provided:\r\n\r\n```python\r\n#! /usr/bin/env python3\r\n\r\nfrom scapy.layers.tls.all import *\r\n\r\nhello = SSLv2ClientHello(\r\n    ciphers=[\r\n        0x010080,  # SSL2_RC4_128_WITH_MD5\r\n        0x020080,  # SSL2_RC4_128_EXPORT40_WITH_MD5\r\n        0x030080,  # SSL2_RC2_128_CBC_WITH_MD5\r\n        0x040080,  # SSL2_RC2_128_CBC_EXPORT40_WITH_MD5\r\n        0x050080,  # SSL2_IDEA_128_CBC_WITH_MD5\r\n        0x060040,  # SSL2_DES_64_CBC_WITH_MD5\r\n        0x060140,  # SSL2_DES_64_CBC_WITH_SHA\r\n        0x0700c0,  # SSL2_DES_192_EDE3_CBC_WITH_MD5\r\n        0x0701c0,  # SSL2_DES_192_EDE3_CBC_WITH_SHA\r\n        0x080080,  # SSL2_RC4_64_WITH_MD5\r\n        0x000000   # TLS_NULL_WITH_NULL_NULL\r\n    ]\r\n)\r\nautomaton = TLSClientAutomaton('localhost', 443, version='sslv2', client_hello=hello, data='quit')\r\nautomaton.run()\r\n```\r\n\r\nUnfortunately the `client_hello ` parameter is not taken into account as we can see in the tshark result below:\r\n\r\n```\r\nEthernet II, Src: 02:42:ba:98:b6:f7, Dst: 02:42:ac:11:00:02\r\nInternet Protocol Version 4, Src: 172.17.0.1 (172.17.0.1), Dst: 172.17.0.2 (172.17.0.2)\r\nTransmission Control Protocol, Src Port: 54976, Dst Port: 443, Seq: 1, Ack: 1, Len: 30\r\nTransport Layer Security\r\n    SSLv2 Record Layer: Client Hello\r\n        [Version: SSL 2.0 (0x0002)]\r\n        Length: 28\r\n        Handshake Message Type: Client Hello (1)\r\n        Version: SSL 2.0 (0x0002)\r\n        Cipher Spec Length: 3\r\n        Session ID Length: 0\r\n        Challenge Length: 16\r\n        Cipher Specs (1 specs)\r\n            Cipher Spec: SSL2_DES_192_EDE3_CBC_WITH_MD5 (0x0700c0)\r\n        Challenge\r\n```\r\n\r\nI had to make the proposed fix to have the expected result:\r\n\r\n```\r\nEthernet II, Src: 02:42:ba:98:b6:f7, Dst: 02:42:ac:11:00:02\r\nInternet Protocol Version 4, Src: 172.17.0.1 (172.17.0.1), Dst: 172.17.0.2 (172.17.0.2)\r\nTransmission Control Protocol, Src Port: 47976, Dst Port: 443, Seq: 1, Ack: 1, Len: 44\r\nTransport Layer Security\r\n    SSLv2 Record Layer: Client Hello\r\n        [Version: SSL 2.0 (0x0002)]\r\n        Length: 42\r\n        Handshake Message Type: Client Hello (1)\r\n        Version: SSL 2.0 (0x0002)\r\n        Cipher Spec Length: 33\r\n        Session ID Length: 0\r\n        Challenge Length: 0\r\n        Cipher Specs (11 specs)\r\n            Cipher Spec: SSL2_RC4_128_WITH_MD5 (0x010080)\r\n            Cipher Spec: SSL2_RC4_128_EXPORT40_WITH_MD5 (0x020080)\r\n            Cipher Spec: SSL2_RC2_128_CBC_WITH_MD5 (0x030080)\r\n            Cipher Spec: SSL2_RC2_128_CBC_EXPORT40_WITH_MD5 (0x040080)\r\n            Cipher Spec: SSL2_IDEA_128_CBC_WITH_MD5 (0x050080)\r\n            Cipher Spec: SSL2_DES_64_CBC_WITH_MD5 (0x060040)\r\n            Cipher Spec: Unknown (0x060140)\r\n            Cipher Spec: SSL2_DES_192_EDE3_CBC_WITH_MD5 (0x0700c0)\r\n            Cipher Spec: Unknown (0x0701c0)\r\n            Cipher Spec: SSL2_RC4_64_WITH_MD5 (0x080080)\r\n            Cipher Spec: TLS_NULL_WITH_NULL_NULL (0x000000)\r\n```\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4339?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4339](https://app.codecov.io/gh/secdev/scapy/pull/4339?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9ff1065) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2b58b51d367924093970ad002f4adeeebb2def2e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2b58b51) will **decrease** coverage by `32.63%`.\n> The diff coverage is `0.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4339       +/-   ##\n===========================================\n- Coverage   82.03%   49.41%   -32.63%     \n===========================================\n  Files         350      343        -7     \n  Lines       82884    77172     -5712     \n===========================================\n- Hits        67996    38133    -29863     \n- Misses      14888    39039    +24151     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4339?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/automaton\\_cli.py](https://app.codecov.io/gh/secdev/scapy/pull/4339?src=pr&el=tree&filepath=scapy%2Flayers%2Ftls%2Fautomaton_cli.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b25fY2xpLnB5) | `26.81% <0.00%> (-59.90%)` | :arrow_down: |\n\n... and [265 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4339/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "TLS ATMT client: support custom SSLv2ClientHello (#4339)\n\n* Taking SSLv2ClientHello messages into account\n\n* wrap line"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab40a88c0a76e0a514d8",
    "number": 4337,
    "body": "- clarify `scapy.1` license\r\n- minor content updates",
    "head_branch": "manpage",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4337?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4337](https://app.codecov.io/gh/secdev/scapy/pull/4337?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7a2ea97) into [master](https://app.codecov.io/gh/secdev/scapy/commit/76e660c65ded08828ea3f8e5791bd93a92f62e48?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (76e660c) will **decrease** coverage by `0.75%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4337      +/-   ##\n==========================================\n- Coverage   82.03%   81.29%   -0.75%     \n==========================================\n  Files         350      350              \n  Lines       82884    82884              \n==========================================\n- Hits        67998    67380     -618     \n- Misses      14886    15504     +618     \n```\n\n[see 18 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4337/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Update scapy.1: license & content (#4337)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab41a88c0a76e0a514d9",
    "number": 4335,
    "body": "- fixes https://github.com/secdev/scapy/issues/4180 (we should eventually still switch to IANA names..)\r\n- combine the 3 netflow dictionaries into one. This will be much easier to maintain.",
    "head_branch": "netflow-cleanup",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4335?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4335](https://app.codecov.io/gh/secdev/scapy/pull/4335?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (bbccfcf) into [master](https://app.codecov.io/gh/secdev/scapy/commit/76e660c65ded08828ea3f8e5791bd93a92f62e48?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (76e660c) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4335      +/-   ##\n==========================================\n- Coverage   82.03%   82.03%   -0.01%     \n==========================================\n  Files         350      350              \n  Lines       82884    82894      +10     \n==========================================\n+ Hits        67998    68004       +6     \n- Misses      14886    14890       +4     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4335?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4335?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `92.39% <ø> (ø)` | |\n| [scapy/layers/netflow.py](https://app.codecov.io/gh/secdev/scapy/pull/4335?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL25ldGZsb3cucHk=) | `90.46% <100.00%> (+0.30%)` | :arrow_up: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4335/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Unify dicts for Netflow fields (#4335)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab42a88c0a76e0a514da",
    "number": 4334,
    "body": "# Description\r\n\r\nThis PR implements a CoAP socket, pretty similar on how ISOTPSoftSocket works.\r\nI implemented the basic message exchange, mostly based on the RFC-7252.\r\n\r\n- Congestion control\r\n- Retransmission mechanism\r\n- Separate responses\r\n- Message duplication detection\r\n\r\n# Known-limitations\r\n\r\n- No POST and DELETE methods\r\n- No DTLS\r\n- No discovery via multicast/broadcast, although you can still bind to one of these interfaces\r\n- No observer\r\n\r\n# General comments\r\n\r\nIt has a dependency for `from scapy.contrib.isotp.isotp_soft_socket import TimeoutScheduler`, I found nice how this is implemented, so I just used it, I didn't want to copy/paste again.\r\n\r\nAlso I added some unit tests for the basic cases.\r\n\r\n# Quick usage\r\n\r\n```python\r\nClient example:\r\n    >>> with CoAPSocket(\"127.0.0.1\", 1234) as coap_client:\r\n    >>>     req = CoAPSocket.make_coap_req_packet(method=GET, uri=\"endpoint-uri\", payload=b\"\")\r\n    >>>     coap_client.send(\"127.0.0.1\", 5683, req)\r\n    >>>     res = coap_client.recv() # Careful, this will block until the coap_client receives something\r\n\r\nServer without specifying resources:\r\n    >>> with CoAPSocket(\"127.0.0.1\", 5683) as coap_server:\r\n    >>>     while True:\r\n    >>>         pkg = coap_server.recv()\r\n    >>>         handle_package(pkg)\r\n\r\nServer with custom resources:\r\n    >>> class DummyResource(CoAPResource):\r\n    >>>     def get(self, payload, options, token, sa_ll):\r\n    >>>         return {\"type\": ACK, \"code\": CONTENT_205, \"options\": [(CONTENT_FORMAT, CF_TEXT_PLAIN)], \"payload\": b'dummy response'}\r\n    >>>\r\n    >>> class DelayedResource(CoAPResource):\r\n    >>>     def __init__(self, url):\r\n    >>>         CoAPResource.__init__(self, url=url)\r\n    >>>         self.delayed_tokens = []\r\n    >>>\r\n    >>>     def delayed_message(self):\r\n    >>>         token, address = self.delayed_tokens.pop(0)\r\n    >>>         pkt = CoAPSocket.make_delayed_resp_packet(token, [(CONTENT_FORMAT, CF_TEXT_PLAIN)], b\"delayed payload\")\r\n    >>>         self._send_separate_response(pkt, address)\r\n    >>>\r\n    >>>     def get(self, payload, options, token, sa_ll):\r\n    >>>         # We know that this can take a while, so we return an empty ACK now and wait for whatever resource to be available.\r\n    >>>         TimeoutScheduler.schedule(1, self.delayed_message)\r\n    >>>         self.delayed_tokens.append((token, sa_ll))\r\n    >>>         return CoAPSocket.empty_ack_params()\r\n    >>>\r\n    >>> # Doesn't matter if it starts with \"/dummy\" or \"dummy\", but it is an error if it is in the end\r\n    >>> lst_resources = [DummyResource(\"dummy\"), DelayedResource(\"/delayed\")].\r\n    >>> with CoAPSocket(\"127.0.0.1\", 5683, lst_resources=lst_resources) as coap_socket:\r\n    >>>     while True:\r\n    >>>         pkg = coap_socket.recv()\r\n    >>>         # You can handle the packages inside your resources, here will only be the \"unhandled\" ones.\r\n```",
    "head_branch": "coap-socket",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4334?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAttention: Patch coverage is `89.01602%` with `48 lines` in your changes missing coverage. Please review.\n> Project coverage is 81.53%. Comparing base [(`6294c6e`)](https://app.codecov.io/gh/secdev/scapy/commit/6294c6e48c21bcc61a7ce24b27d3ceddd53d356f?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`73ce0b0`)](https://app.codecov.io/gh/secdev/scapy/commit/73ce0b0d07b74eb44045641f949dcff0bfc2055a?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n> Report is 193 commits behind head on master.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4334      +/-   ##\n==========================================\n- Coverage   81.90%   81.53%   -0.38%     \n==========================================\n  Files         330      356      +26     \n  Lines       76380    85140    +8760     \n==========================================\n+ Hits        62561    69416    +6855     \n- Misses      13819    15724    +1905     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4334?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/coap.py](https://app.codecov.io/gh/secdev/scapy/pull/4334?src=pr&el=tree&filepath=scapy%2Fcontrib%2Fcoap.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jb2FwLnB5) | `95.91% <97.29%> (+0.42%)` | :arrow_up: |\n| [scapy/contrib/coap\\_socket.py](https://app.codecov.io/gh/secdev/scapy/pull/4334?src=pr&el=tree&filepath=scapy%2Fcontrib%2Fcoap_socket.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jb2FwX3NvY2tldC5weQ==) | `88.25% <88.25%> (ø)` | |\n\n... and [141 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4334/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Any idea on how I can fix these failed tests?\r\nIf I try to run on my machine without root, it works, so I don't know really how to debug this.",
      "Tests are failing on versions older than 3.9. You're using 3.9+ specific features. Scapy should work with anything starting from 3.7, so this probably needs to be updated.",
      "@gpotter2  Thanks for the insights, it is ready for reviews :D\r\n",
      "Could you please implement a select function for your socket, so that sr, sr1 and sniff will work. Could you please also provide unit tests for these functions. ",
      "Hello, thanks for the review, I updated the code to include a select function, I'm not sure about the error in the macos tests.\r\n\r\nAbout the changes, I'm not sure if those can be considered \"correct\", it feels like workarounds. Because:\r\n\r\n- To send a package you have to assemble as `IP / UDP / CoAP`, therefore in `SndRcvHandler::_sndrcv_snd`, line 246, it puts the package in the hash by calling the `hashret` function of `IP`, then `UDP`, then `CoAP`.\r\n- When I receive the response, it will not receive the full `IP / UDP / CoAP`, I have to \"manually\" assemble this packet, so the hashes will match.\r\n- The same logic for the `answer` function, where I have to set the `sport` to return the proper value.\r\n\r\nIs there a better way of doing this?\r\n\r\nThanks so far :)",
      "Thanks for the update. I'll review soon."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab43a88c0a76e0a514db",
    "number": 4333,
    "body": "- fixes https://github.com/secdev/scapy/issues/4324",
    "head_branch": "icmpv6-hdrdestopt",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4333?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4333](https://app.codecov.io/gh/secdev/scapy/pull/4333?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (70e0176) into [master](https://app.codecov.io/gh/secdev/scapy/commit/76e660c65ded08828ea3f8e5791bd93a92f62e48?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (76e660c) will **decrease** coverage by `0.02%`.\n> Report is 3 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4333      +/-   ##\n==========================================\n- Coverage   82.03%   82.02%   -0.02%     \n==========================================\n  Files         350      350              \n  Lines       82884    82884              \n==========================================\n- Hits        67998    67989       -9     \n- Misses      14886    14895       +9     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4333?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4333?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.44% <100.00%> (-0.23%)` | :arrow_down: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4333/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "@guedou @p-l- @polybassa This is ready for review & merge."
    ],
    "commit_messages": [
      "Fix ICMPv6 hashret()/answers() with IPv6ExtHdrDestOpt (#4333)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab44a88c0a76e0a514dc",
    "number": 4332,
    "body": "This PR:\r\n- re-write icmp extensions to be buildable, and integrated in the `ICMP` packet. This is a a breaking change, at least for dissection\r\n- fixes https://github.com/secdev/scapy/issues/1773\r\n- fixes https://github.com/secdev/scapy/issues/4281",
    "head_branch": "icmp-extensions",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4332?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4332](https://app.codecov.io/gh/secdev/scapy/pull/4332?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4e5bdc8) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d8d24da22540c353a0f25eb2ab0e602de8f78423?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d8d24da) will **increase** coverage by `0.04%`.\n> Report is 14 commits behind head on master.\n> The diff coverage is `85.04%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4332      +/-   ##\n==========================================\n+ Coverage   82.01%   82.05%   +0.04%     \n==========================================\n  Files         350      350              \n  Lines       82225    82894     +669     \n==========================================\n+ Hits        67440    68022     +582     \n- Misses      14785    14872      +87     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4332?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/mpls.py](https://app.codecov.io/gh/secdev/scapy/pull/4332?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9tcGxzLnB5) | `93.18% <100.00%> (+0.32%)` | :arrow_up: |\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4332?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `92.39% <100.00%> (+<0.01%)` | :arrow_up: |\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4332?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.68% <100.00%> (+0.01%)` | :arrow_up: |\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4332?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `73.09% <100.00%> (-1.99%)` | :arrow_down: |\n| [scapy/contrib/icmp\\_extensions.py](https://app.codecov.io/gh/secdev/scapy/pull/4332?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pY21wX2V4dGVuc2lvbnMucHk=) | `0.00% <0.00%> (-50.59%)` | :arrow_down: |\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4332?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `71.63% <87.50%> (+1.04%)` | :arrow_up: |\n\n... and [27 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4332/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "@guedou @p-l- @polybassa This is ready for review & merge.",
      "@gpotter2 do you want that the reporters of the issues confirm that this PR fix them? If not, this is ready to be merged."
    ],
    "commit_messages": [
      "Rewrite ICMP extensions (#4332)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab44a88c0a76e0a514dd",
    "number": 4331,
    "body": "fix typo endianess -> endianness",
    "head_branch": "RoboSchmied-AGfixT17",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4331?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4331](https://app.codecov.io/gh/secdev/scapy/pull/4331?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cd44255) into [master](https://app.codecov.io/gh/secdev/scapy/commit/f919a6af6a3c86aacce36958ac530e71c8f7be5b?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f919a6a) will **decrease** coverage by `0.38%`.\n> Report is 2 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4331      +/-   ##\n==========================================\n- Coverage   81.67%   81.30%   -0.38%     \n==========================================\n  Files         350      350              \n  Lines       82884    82884              \n==========================================\n- Hits        67699    67387     -312     \n- Misses      15185    15497     +312     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4331?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/pnio\\_rpc.py](https://app.codecov.io/gh/secdev/scapy/pull/4331?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9wbmlvX3JwYy5weQ==) | `94.67% <100.00%> (ø)` | |\n| [scapy/contrib/rtps/common\\_types.py](https://app.codecov.io/gh/secdev/scapy/pull/4331?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ydHBzL2NvbW1vbl90eXBlcy5weQ==) | `95.27% <100.00%> (ø)` | |\n| [scapy/layers/dcerpc.py](https://app.codecov.io/gh/secdev/scapy/pull/4331?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RjZXJwYy5weQ==) | `90.90% <100.00%> (ø)` | |\n\n... and [27 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4331/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "I have mixed feelings about this.\r\n\r\nOn the one hand this is technically correct, on the other I have mixed feelings merging a PR that's part of a 47 batch that only fixes a typo on the word \"endianness\". That's.. almost spammy, and reminds me of what people did to get PRs in for Hacktoberfest (or similar contests).\r\n\r\nWhat are you doing that for ? or what's the big deal with endianness :p\r\n\r\n<details>\r\n\r\n![image](https://github.com/secdev/scapy/assets/10530980/282ee530-111a-4303-a115-c6a3400a5b87)\r\n</details>",
      "> I have mixed feelings about this.\r\n> \r\n> On the one hand this is technically correct, on the other I have mixed feelings merging a PR that's part of a 47 batch that only fixes a typo on the word \"endianness\".\r\n\r\n@gpotter2 \r\nThank you for your review.  There are also functional and other changes in my PRs. \r\n\r\n> That's.. almost spammy, and reminds me of what people did to get PRs in for Hacktoberfest (or similar contests).\r\n> \r\n> What are you doing that for ? or what's the big deal with endianness :p\r\n\r\nIts no contest, no medal hunt.\r\n\r\nIts a test + dev of a bot that prepares everything up to the pull request. The review and PR is done manually by me. \r\nThe `endianess` is only used as an test case: an unique and often made typo easy to find and to fix.\r\nSo I learn much about the big reops, PR formatting, code style and so on.\r\n\r\nWhy not?   This is what bots are made for.   ;)\r\n\r\nGreetings\r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab45a88c0a76e0a514de",
    "number": 4329,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "Shu-xueyuan-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab46a88c0a76e0a514df",
    "number": 4328,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "Shu-xueyuan-patch-1-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab47a88c0a76e0a514e0",
    "number": 4327,
    "body": "This PR adds SSL functionality for DoIP Sockets. \r\n\r\nIn order to provide SSL functionality, the `recv()` function of existing DoIP socket needed to be refactored. \r\n\r\nThe SSL DoIP Sockets work the same way as existing DoIP sockets, only a SslContext has to be provided.\r\n\r\nAdditionally, this PR adds unit tests for the new recv() function and the SSL DoIPSockets.",
    "head_branch": "gh_doip",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4327?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAttention: Patch coverage is `84.94624%` with `14 lines` in your changes are missing coverage. Please review.\n> Project coverage is 82.21%. Comparing base [(`ac3d5bb`)](https://app.codecov.io/gh/secdev/scapy/commit/ac3d5bb645639225ad8416476872f9d311ba8ca7?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`30a3d48`)](https://app.codecov.io/gh/secdev/scapy/pull/4327?dropdown=coverage&src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4327      +/-   ##\n==========================================\n+ Coverage   82.20%   82.21%   +0.01%     \n==========================================\n  Files         353      353              \n  Lines       83529    83586      +57     \n==========================================\n+ Hits        68662    68719      +57     \n  Misses      14867    14867              \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4327?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/doip.py](https://app.codecov.io/gh/secdev/scapy/pull/4327?src=pr&el=tree&filepath=scapy%2Fcontrib%2Fautomotive%2Fdoip.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2RvaXAucHk=) | `88.88% <84.94%> (+12.69%)` | :arrow_up: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4327/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Could you add a PR summary? Thanks.",
      "@gpotter2 Done",
      "> LGTM. Could you rebase against master? Thanks\r\n\r\nDone!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab48a88c0a76e0a514e1",
    "number": 4326,
    "body": "- minor cosmetic changes",
    "head_branch": "smb-wip",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4326?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4326](https://app.codecov.io/gh/secdev/scapy/pull/4326?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4391c83) into [master](https://app.codecov.io/gh/secdev/scapy/commit/c36f92917d6a234562185bb9f40fc53f6b40ba62?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c36f929) will **decrease** coverage by `31.90%`.\n> The diff coverage is `5.88%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4326       +/-   ##\n===========================================\n- Coverage   81.30%   49.41%   -31.90%     \n===========================================\n  Files         350      343        -7     \n  Lines       82877    77172     -5705     \n===========================================\n- Hits        67387    38133    -29254     \n- Misses      15490    39039    +23549     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4326?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/smbclient.py](https://app.codecov.io/gh/secdev/scapy/pull/4326?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYmNsaWVudC5weQ==) | `18.44% <12.50%> (-54.65%)` | :arrow_down: |\n| [scapy/layers/kerberos.py](https://app.codecov.io/gh/secdev/scapy/pull/4326?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2tlcmJlcm9zLnB5) | `39.41% <0.00%> (-22.52%)` | :arrow_down: |\n\n... and [261 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4326/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Cosmetic changes to Kerberos and SMB (#4326)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab49a88c0a76e0a514e2",
    "number": 4323,
    "body": "This PR includes:\r\n\r\n- an LDAP client that supports the following binding methods:\r\n  - simple\r\n  - SPNEGO (windows)\r\n  - GSSAPI (kerberos, linux)\r\n  - SICILY (windows, ntlm only)\r\n- support for flags negotiation in NTLM\r\n- KerberosSSP `GSS_Wrap` with no confidentiality\r\n- doc updates",
    "head_branch": "ldap-client",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4323?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4323](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c5b6acd) into [master](https://app.codecov.io/gh/secdev/scapy/commit/58519e55cfd6af4bb80ed98cb671412a3385be24?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (58519e5) will **decrease** coverage by `1.41%`.\n> The diff coverage is `51.35%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4323      +/-   ##\n==========================================\n- Coverage   82.05%   80.64%   -1.41%     \n==========================================\n  Files         350      350              \n  Lines       82771    82877     +106     \n==========================================\n- Hits        67920    66840    -1080     \n- Misses      14851    16037    +1186     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4323?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/gssapi.py](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2dzc2FwaS5weQ==) | `91.17% <100.00%> (+1.76%)` | :arrow_up: |\n| [scapy/layers/msrpce/msnrpc.py](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL21zcnBjZS9tc25ycGMucHk=) | `63.11% <100.00%> (ø)` | |\n| [scapy/layers/ntlm.py](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250bG0ucHk=) | `88.96% <100.00%> (+1.33%)` | :arrow_up: |\n| [scapy/layers/smb.py](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYi5weQ==) | `74.54% <ø> (-0.73%)` | :arrow_down: |\n| [scapy/layers/smb2.py](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYjIucHk=) | `88.48% <ø> (ø)` | |\n| [scapy/layers/smbclient.py](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYmNsaWVudC5weQ==) | `73.09% <100.00%> (ø)` | |\n| [scapy/layers/smbserver.py](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYnNlcnZlci5weQ==) | `70.66% <ø> (ø)` | |\n| [scapy/layers/spnego.py](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NwbmVnby5weQ==) | `78.11% <100.00%> (+0.06%)` | :arrow_up: |\n| [scapy/layers/kerberos.py](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2tlcmJlcm9zLnB5) | `61.93% <95.83%> (+2.04%)` | :arrow_up: |\n| [scapy/layers/ldap.py](https://app.codecov.io/gh/secdev/scapy/pull/4323?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2xkYXAucHk=) | `53.84% <34.25%> (-5.68%)` | :arrow_down: |\n\n... and [30 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4323/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Add LDAP client (#4323)\n\n* Add LDAP client, Improve NTLM\r\n\r\nSupports the following binding methods:\r\n- simple\r\n- SPNEGO (windows)\r\n- GSSAPI (kerberos, linux)\r\n- SICILY (windows, ntlm only)\r\n\r\n* Documentation update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab4aa88c0a76e0a514e3",
    "number": 4321,
    "body": "Fixes #4312 and #4304.\r\n\r\nTo maintainers: shoud I add unit tests?",
    "head_branch": "guedou/20240316/ipv6_iface",
    "is_a_fork": false,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4321?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n> Project coverage is 78.53%. Comparing base [(`ac3d5bb`)](https://app.codecov.io/gh/secdev/scapy/commit/ac3d5bb645639225ad8416476872f9d311ba8ca7?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`6a4d90a`)](https://app.codecov.io/gh/secdev/scapy/commit/6a4d90a446025e12678830f8a02c2d3a9ed111a6?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n> Report is 49 commits behind head on master.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4321      +/-   ##\n==========================================\n- Coverage   82.20%   78.53%   -3.67%     \n==========================================\n  Files         353      354       +1     \n  Lines       83529    92937    +9408     \n==========================================\n+ Hits        68662    72985    +4323     \n- Misses      14867    19952    +5085     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4321?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/interfaces.py](https://app.codecov.io/gh/secdev/scapy/pull/4321?src=pr&el=tree&filepath=scapy%2Finterfaces.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `96.80% <100.00%> (+0.20%)` | :arrow_up: |\n| [scapy/route6.py](https://app.codecov.io/gh/secdev/scapy/pull/4321?src=pr&el=tree&filepath=scapy%2Froute6.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcm91dGU2LnB5) | `86.26% <100.00%> (-2.14%)` | :arrow_down: |\n\n... and [66 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4321/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "I would argue this needs tests considering it's already a regression.\r\n\r\nAlso you need to rebase ;p",
      "This makes me kinda wonder why we deprecated `conf.iface6`.",
      "I always found conf.iface6 confusing.\n\nIt makes sense to use it to control how IPv6 packets are built, but fe80::/64 and multiple interfaces break its usefulness.\n\n However, for sending with high-level  functions or SuperSocket, it adds complexity and non-standard behavior.\n\nWhen iface= is not specified by the user, shall Scapy use conf.iface6, conf.iface or both ? It gets even more complicated if we consider that sr*() can receive a list of IP and IPv6 packets that must be sent to different interfaces.\n\n\n",
      "Hey, I only noticed this after I opened my own PR #4380.\r\nAccording to my tests, it is not going to work because `conf.route6` is not populated by the time `get_working_if()` is called. This can be fixed by calling `conf.ifaces.reload()` at the end of `route6.py`.\r\nAlso I think it would be better to consider only default or generic enough routes. When someone has for instance an IPv6-only machine with a VPN that pushes route say `10.0.0.0/8`, then the interface with IPv6 default route should be preferred over the VPN interface with /8 IPv4 route.",
      "@oskar456 sorry for the delay. I slightly modified this PR and it should now work as expected. Do you have time to test it?",
      "Hey, thanks a lot! I can confirm that this PR fixes #4304.",
      "So we have to discuss a bit regarding this.\nIt's a good idea to have a better default selection when no IPv4 is available, however I disagree with the added documentation regarding `iface` and `conf.iface`.\n\nRegarding link-local / multicast destinations, https://github.com/secdev/scapy/pull/4461 should properly add a route on interfaces that support multicast, so that should supposedly also fix the OP's question (as they only have a single interface with multicast). It also allows for a much more flexible behavior, which aims at avoiding to have to change `conf.iface` or `iface`."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab4aa88c0a76e0a514e4",
    "number": 4318,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab4ba88c0a76e0a514e5",
    "number": 4317,
    "body": "with different hints to distinguish between event_id and method_id",
    "head_branch": "gh_someip_event_id_method_id",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4317?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4317](https://app.codecov.io/gh/secdev/scapy/pull/4317?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (58241b9) into [master](https://app.codecov.io/gh/secdev/scapy/commit/4e343bb6907be0c31467319c4329b67de406492d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4e343bb) will **decrease** coverage by `32.52%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `0.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4317       +/-   ##\n===========================================\n- Coverage   81.96%   49.45%   -32.52%     \n===========================================\n  Files         350      343        -7     \n  Lines       82320    77054     -5266     \n===========================================\n- Hits        67477    38104    -29373     \n- Misses      14843    38950    +24107     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4317?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/someip.py](https://app.codecov.io/gh/secdev/scapy/pull/4317?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NvbWVpcC5weQ==) | `0.00% <0.00%> (-93.75%)` | :arrow_down: |\n\n... and [265 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4317/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "@gpotter2 Ready for review"
    ],
    "commit_messages": [
      "Fix #3750: Use MultipleTypeField in SomeIP  (#4317)\n\n* Fix #3750: Add MultipleTypeValue with different hints to distinguish between event_id and method_id\n\n* additional fixes and improvements\n\n* add enum for SD.type\n\n* add enum for SD.option.type\n\n* make someip tp chunks parsable\n\n* bugfix\n\n* fix unittest\n\n* add support for malformed packets\n\n* fix unittest\n\nimprove parsing\n\n* fix flake\n\n* fix to short packet dissection\n\n* fix unit test\n\n* fix unit test\n\n* be able to parse malformed packets\n\n* cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab4ca88c0a76e0a514e6",
    "number": 4315,
    "body": "- Update `SSLStreamSocket` to also work with TCP sessions\r\n- Improve `StreamSocket` handling of underflow ",
    "head_branch": "tcpsession-ssl",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4315?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4315](https://app.codecov.io/gh/secdev/scapy/pull/4315?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2b8b023) into [master](https://app.codecov.io/gh/secdev/scapy/commit/ce7596da9eb4f3474d4391ca9f499e825273c29f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ce7596d) will **decrease** coverage by `0.01%`.\n> The diff coverage is `86.66%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4315      +/-   ##\n==========================================\n- Coverage   81.96%   81.96%   -0.01%     \n==========================================\n  Files         350      350              \n  Lines       82341    82320      -21     \n==========================================\n- Hits        67492    67474      -18     \n+ Misses      14849    14846       -3     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4315?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/http.py](https://app.codecov.io/gh/secdev/scapy/pull/4315?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2h0dHAucHk=) | `82.28% <ø> (+1.55%)` | :arrow_up: |\n| [scapy/supersocket.py](https://app.codecov.io/gh/secdev/scapy/pull/4315?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `74.48% <86.66%> (-0.38%)` | :arrow_down: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4315/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix (SSL)StreamSocket handling of underflowed data. (#4315)\n\nAlso remove a HTTP 'iptables' option which is terrible."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab4da88c0a76e0a514e7",
    "number": 4314,
    "body": "- Big SSP improvements\r\n  - support DCE header signing (except on Kerberos where it's currently broken)\r\n  - support \"passive\" mode, to decrypt a pcap if you have access to the secrets\r\n- premises of a LDAP client\r\n- move `auth_level` to the DCE/RPC client and server (from the SSP)\r\n- support `req_flags` in SSP clients, to request CONF, INT, etc.\r\n- rework SPNEGOSSP\r\n- lots of KerberosSSP improvements\r\n- many, many tests (test reproducibility of Wrapping, etc.)",
    "head_branch": "krb-cleanup",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4314?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4314](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4ac4368) into [master](https://app.codecov.io/gh/secdev/scapy/commit/4e343bb6907be0c31467319c4329b67de406492d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4e343bb) will **increase** coverage by `0.07%`.\n> The diff coverage is `59.11%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4314      +/-   ##\n==========================================\n+ Coverage   81.96%   82.04%   +0.07%     \n==========================================\n  Files         350      350              \n  Lines       82320    82771     +451     \n==========================================\n+ Hits        67477    67912     +435     \n- Misses      14843    14859      +16     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4314?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `78.10% <100.00%> (+0.10%)` | :arrow_up: |\n| [scapy/layers/msrpce/rpcserver.py](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL21zcnBjZS9ycGNzZXJ2ZXIucHk=) | `78.61% <100.00%> (+0.89%)` | :arrow_up: |\n| [scapy/layers/smbclient.py](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYmNsaWVudC5weQ==) | `73.09% <ø> (ø)` | |\n| [scapy/libs/rfc3961.py](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy9yZmMzOTYxLnB5) | `86.16% <ø> (+0.65%)` | :arrow_up: |\n| [scapy/layers/dcerpc.py](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RjZXJwYy5weQ==) | `90.90% <94.00%> (+1.17%)` | :arrow_up: |\n| [scapy/layers/msrpce/msdcom.py](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL21zcnBjZS9tc2Rjb20ucHk=) | `69.56% <20.00%> (-0.81%)` | :arrow_down: |\n| [scapy/layers/msrpce/msnrpc.py](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL21zcnBjZS9tc25ycGMucHk=) | `63.11% <84.61%> (+36.79%)` | :arrow_up: |\n| [scapy/layers/ntlm.py](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250bG0ucHk=) | `87.62% <92.72%> (+0.47%)` | :arrow_up: |\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `72.88% <20.00%> (-0.15%)` | :arrow_down: |\n| [scapy/layers/gssapi.py](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2dzc2FwaS5weQ==) | `89.41% <88.88%> (+2.64%)` | :arrow_up: |\n| ... and [4 more](https://app.codecov.io/gh/secdev/scapy/pull/4314?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4314/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Windows SSPs: various improvements (#4314)\n\n- All SSPs: support PFC_SUPPORT_HEADER_SIGN for DCE/RPC\r\n- Refactor SSPs and DCE/RPC client/server to use req_flags in GSS_Init_sec_context\r\n- KerberosSSP:\r\n  - support DCE_STYLE (for DCE/RPC)\r\n  - add MIC/WRAP support\r\n- NTLMSSP: fix SeqNum when used with SPNEGO\r\n- Fix a bunch of SPNEGO edge cases\r\n- Many tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab4ea88c0a76e0a514e8",
    "number": 4313,
    "body": "This PR:\r\n- adds `python3 -m scapy.layers.smbclient` and `python3 -m scapy.layers.smbserver` support\r\n  - for that, introduce a `AutoArgparse` class that wraps the function with an argparse\r\n- fix `lcd` in smbclient\r\n- minor doc updates",
    "head_branch": "autoargparse-smb",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4313?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4313](https://app.codecov.io/gh/secdev/scapy/pull/4313?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (617ba75) into [master](https://app.codecov.io/gh/secdev/scapy/commit/a05013cf98b460ae07b51613332b8bcbecf804d5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a05013c) will **decrease** coverage by `0.06%`.\n> The diff coverage is `6.77%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4313      +/-   ##\n==========================================\n- Coverage   82.01%   81.95%   -0.06%     \n==========================================\n  Files         350      350              \n  Lines       82282    82341      +59     \n==========================================\n- Hits        67485    67484       -1     \n- Misses      14797    14857      +60     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4313?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/smbclient.py](https://app.codecov.io/gh/secdev/scapy/pull/4313?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYmNsaWVudC5weQ==) | `73.09% <33.33%> (-0.18%)` | :arrow_down: |\n| [scapy/layers/smbserver.py](https://app.codecov.io/gh/secdev/scapy/pull/4313?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYnNlcnZlci5weQ==) | `70.66% <33.33%> (-0.16%)` | :arrow_down: |\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4313?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `73.02% <3.77%> (-2.06%)` | :arrow_down: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4313/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Auto-Argparse for smb{client,server} (#4313)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab4fa88c0a76e0a514e9",
    "number": 4311,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab4fa88c0a76e0a514ea",
    "number": 4310,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nWhile working on a strictly timed test for IPv6 firewall we noticed that the `neighsol` function was not respecting the given timeout. Looking at the code it was apparent that the `timeout` variable was not actually used in the code. This PR fixes that.\r\n\r\nFor unit tests I might require some guidance...\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n",
    "head_branch": "fix/neighsol_timeout",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4310?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4310](https://app.codecov.io/gh/secdev/scapy/pull/4310?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (99a0af5) into [master](https://app.codecov.io/gh/secdev/scapy/commit/42b98a2ab30e8e001c9360ac7d8da142d622e3ba?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (42b98a2) will **decrease** coverage by `0.88%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4310      +/-   ##\n==========================================\n- Coverage   81.37%   80.49%   -0.88%     \n==========================================\n  Files         350      350              \n  Lines       82282    82282              \n==========================================\n- Hits        66954    66231     -723     \n- Misses      15328    16051     +723     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4310?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4310?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.67% <100.00%> (ø)` | |\n\n... and [29 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4310/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Good catch! Thanks for this PR."
    ],
    "commit_messages": [
      "Fix neighsol timeout not actually used (#4310)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab50a88c0a76e0a514eb",
    "number": 4309,
    "body": "- fix support of BUFFER_OVERFLOW when the server answers with a response too big for the pipe read\r\n- fix NTLM with timestamp not specified in the challenge",
    "head_branch": "smb-ntlm-bugs",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4309?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4309](https://app.codecov.io/gh/secdev/scapy/pull/4309?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0fb9108) into [master](https://app.codecov.io/gh/secdev/scapy/commit/28c2f78511d310f4465fe55aefb1f9ca28e228c3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (28c2f78) will **decrease** coverage by `0.01%`.\n> Report is 3 commits behind head on master.\n> The diff coverage is `33.33%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4309      +/-   ##\n==========================================\n- Coverage   82.01%   82.01%   -0.01%     \n==========================================\n  Files         350      350              \n  Lines       82225    82241      +16     \n==========================================\n+ Hits        67439    67447       +8     \n- Misses      14786    14794       +8     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4309?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/smb2.py](https://app.codecov.io/gh/secdev/scapy/pull/4309?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYjIucHk=) | `88.48% <ø> (ø)` | |\n| [scapy/layers/ntlm.py](https://app.codecov.io/gh/secdev/scapy/pull/4309?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250bG0ucHk=) | `87.14% <0.00%> (+0.17%)` | :arrow_up: |\n| [scapy/layers/smbclient.py](https://app.codecov.io/gh/secdev/scapy/pull/4309?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYmNsaWVudC5weQ==) | `73.27% <36.36%> (-0.58%)` | :arrow_down: |\n\n... and [8 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4309/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "SMB: support BUFFER_OVERFLOW and NTLM without TimeStamp (#4309)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab51a88c0a76e0a514ec",
    "number": 4307,
    "body": "- fix `HEAD` keyword for HTTP 1.0 session reconstruction",
    "head_branch": "http-head",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4307?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4307](https://app.codecov.io/gh/secdev/scapy/pull/4307?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (97fae77) into [master](https://app.codecov.io/gh/secdev/scapy/commit/28c2f78511d310f4465fe55aefb1f9ca28e228c3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (28c2f78) will **decrease** coverage by `0.01%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `53.33%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4307      +/-   ##\n==========================================\n- Coverage   82.01%   82.01%   -0.01%     \n==========================================\n  Files         350      350              \n  Lines       82225    82242      +17     \n==========================================\n+ Hits        67439    67450      +11     \n- Misses      14786    14792       +6     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4307?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/http.py](https://app.codecov.io/gh/secdev/scapy/pull/4307?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2h0dHAucHk=) | `80.72% <53.33%> (-0.37%)` | :arrow_down: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4307/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "HTTP 1.0: support HEAD in reconstruction (#4307)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab52a88c0a76e0a514ed",
    "number": 4306,
    "body": "- fixes https://github.com/secdev/scapy/issues/3830\r\n- remove some hacks I did that were not such a good idea after all\r\n- cleanup LDAP and Kerberos ASN.1 tags",
    "head_branch": "ldap-bugfixes",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4306?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4306](https://app.codecov.io/gh/secdev/scapy/pull/4306?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cd92c32) into [master](https://app.codecov.io/gh/secdev/scapy/commit/28c2f78511d310f4465fe55aefb1f9ca28e228c3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (28c2f78) will **decrease** coverage by `0.27%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `92.92%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4306      +/-   ##\n==========================================\n- Coverage   82.01%   81.75%   -0.27%     \n==========================================\n  Files         350      350              \n  Lines       82225    82748     +523     \n==========================================\n+ Hits        67439    67648     +209     \n- Misses      14786    15100     +314     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4306?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/asn1/ber.py](https://app.codecov.io/gh/secdev/scapy/pull/4306?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMS9iZXIucHk=) | `86.38% <100.00%> (-0.27%)` | :arrow_down: |\n| [scapy/layers/ldap.py](https://app.codecov.io/gh/secdev/scapy/pull/4306?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2xkYXAucHk=) | `67.98% <100.00%> (+2.75%)` | :arrow_up: |\n| [scapy/asn1fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4306?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMWZpZWxkcy5weQ==) | `83.26% <85.71%> (-0.58%)` | :arrow_down: |\n| [scapy/layers/kerberos.py](https://app.codecov.io/gh/secdev/scapy/pull/4306?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2tlcmJlcm9zLnB5) | `54.72% <84.78%> (+0.34%)` | :arrow_up: |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4306/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "ASN.1: minor cleanup + LDAP/KRB bug fixes (#4306)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab53a88c0a76e0a514ee",
    "number": 4305,
    "body": "Without this patch the type of Neighbor Discovery options generated by fuzz(ICMPv6NDOptUnknown()) is always 0. With this patch applied option types are random.\r\n\r\nIt's a follow-up to https://github.com/secdev/scapy/pull/4233",
    "head_branch": "nd-fuzz-type",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4305?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4305](https://app.codecov.io/gh/secdev/scapy/pull/4305?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e898305) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d8d24da22540c353a0f25eb2ab0e602de8f78423?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d8d24da) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4305      +/-   ##\n==========================================\n- Coverage   82.01%   82.01%   -0.01%     \n==========================================\n  Files         350      350              \n  Lines       82225    82225              \n==========================================\n- Hits        67440    67437       -3     \n- Misses      14785    14788       +3     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4305?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4305?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.67% <100.00%> (ø)` | |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4305/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "[inet6] make ICMPv6NDOptUnknown a bit more fuzzable (#4305)\n\nWithout this patch the type of Neighbor Discovery options generated by\r\nfuzz(ICMPv6NDOptUnknown()) is always 0. With this patch applied option\r\ntypes are random.\r\n\r\nIt's a follow-up to https://github.com/secdev/scapy/pull/4233"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab54a88c0a76e0a514ef",
    "number": 4303,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n\r\n![imagen](https://github.com/secdev/scapy/assets/304193/2f84a1f8-36e9-4a9f-92fe-038bf55ef736)\r\n\r\nName field must be 248 bytes!\r\n",
    "head_branch": "btfix2",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4303?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4303](https://app.codecov.io/gh/secdev/scapy/pull/4303?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (877286d) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d8d24da22540c353a0f25eb2ab0e602de8f78423?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d8d24da) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4303   +/-   ##\n=======================================\n  Coverage   82.01%   82.02%           \n=======================================\n  Files         350      350           \n  Lines       82225    82225           \n=======================================\n+ Hits        67440    67441    +1     \n+ Misses      14785    14784    -1     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4303?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4303?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `89.59% <100.00%> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4303/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thank you!"
    ],
    "commit_messages": [
      "Bluetooth: fix HCI_Cmd_Write_Local_Name command (#4303)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab55a88c0a76e0a514f0",
    "number": 4302,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n\r\nYet another bluetooth protocol fix :)\r\n",
    "head_branch": "btfix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4302?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4302](https://app.codecov.io/gh/secdev/scapy/pull/4302?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (121bb23) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d8d24da22540c353a0f25eb2ab0e602de8f78423?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d8d24da) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4302      +/-   ##\n==========================================\n- Coverage   82.01%   82.01%   -0.01%     \n==========================================\n  Files         350      350              \n  Lines       82225    82225              \n==========================================\n- Hits        67440    67439       -1     \n- Misses      14785    14786       +1     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4302?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4302?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `89.59% <100.00%> (ø)` | |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4302/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks!"
    ],
    "commit_messages": [
      "Bluetooth: Fix HCI_Cmd_Read_Remote_Extended_Features binding (#4302)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab55a88c0a76e0a514f1",
    "number": 4301,
    "body": "- fix imports in preparation of cryptography 43.0+. This is backward compatible",
    "head_branch": "crypto-43",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4301?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4301](https://app.codecov.io/gh/secdev/scapy/pull/4301?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a2517c0) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d8d24da22540c353a0f25eb2ab0e602de8f78423?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d8d24da) will **decrease** coverage by `32.38%`.\n> The diff coverage is `83.33%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4301       +/-   ##\n===========================================\n- Coverage   82.01%   49.64%   -32.38%     \n===========================================\n  Files         350      343        -7     \n  Lines       82225    76569     -5656     \n===========================================\n- Hits        67440    38010    -29430     \n- Misses      14785    38559    +23774     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4301?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/libs/rfc3961.py](https://app.codecov.io/gh/secdev/scapy/pull/4301?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy9yZmMzOTYxLnB5) | `38.09% <100.00%> (-47.32%)` | :arrow_down: |\n| [scapy/layers/ipsec.py](https://app.codecov.io/gh/secdev/scapy/pull/4301?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lwc2VjLnB5) | `30.07% <71.42%> (-60.53%)` | :arrow_down: |\n\n... and [264 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4301/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix imports of cryptography for 43.0+"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab56a88c0a76e0a514f2",
    "number": 4300,
    "body": "- add basic [MS-BRWS] support (mailslots announcements)",
    "head_branch": "brws",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4300?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4300](https://app.codecov.io/gh/secdev/scapy/pull/4300?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e84291d) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2a8e0cf9fb969c8f1422ed0d9e86f2cb72d6700f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2a8e0cf) will **increase** coverage by `0.00%`.\n> The diff coverage is `78.57%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4300   +/-   ##\n=======================================\n  Coverage   81.96%   81.97%           \n=======================================\n  Files         350      350           \n  Lines       82122    82163   +41     \n=======================================\n+ Hits        67312    67352   +40     \n- Misses      14810    14811    +1     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4300?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ldap.py](https://app.codecov.io/gh/secdev/scapy/pull/4300?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2xkYXAucHk=) | `65.23% <ø> (ø)` | |\n| [scapy/layers/netbios.py](https://app.codecov.io/gh/secdev/scapy/pull/4300?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL25ldGJpb3MucHk=) | `85.13% <87.50%> (+0.13%)` | :arrow_up: |\n| [scapy/layers/smb.py](https://app.codecov.io/gh/secdev/scapy/pull/4300?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYi5weQ==) | `74.18% <76.47%> (+4.34%)` | :arrow_up: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4300/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Basic [MS-BRWS] support (#4300)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab57a88c0a76e0a514f3",
    "number": 4299,
    "body": "https://datatracker.ietf.org/doc/html/rfc1035#section-3.3.2\r\n\r\nThe patch was also cross-checked with Wireshark:\r\n```python\r\ntdecode(Ether()/IP()/UDP()/DNS(raw(DNS(an=[DNSRRHINFO(rrname='H.local', os='OS', cpu='CPU')]))))\r\n...\r\n    Answers\r\n        H.local: type HINFO, class IN, CPU CPU, OS OS\r\n            Name: H.local\r\n            Type: HINFO (host information) (13)\r\n            Class: IN (0x0001)\r\n            Time to live: 0 (0 seconds)\r\n            Data length: 7\r\n            CPU Length: 3\r\n            CPU: CPU\r\n            OS Length: 2\r\n            OS: OS\r\n```",
    "head_branch": "hinfo",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4299?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4299](https://app.codecov.io/gh/secdev/scapy/pull/4299?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a047488) into [master](https://app.codecov.io/gh/secdev/scapy/commit/9bc922289368a3e1eac16a74c55b1f694158cef3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9bc9222) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4299   +/-   ##\n=======================================\n  Coverage   81.96%   81.96%           \n=======================================\n  Files         350      350           \n  Lines       82122    82125    +3     \n=======================================\n+ Hits        67313    67316    +3     \n  Misses      14809    14809           \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4299?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4299?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `87.53% <100.00%> (+0.05%)` | :arrow_up: |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4299/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "DNS: add HINFO resource record (#4299)\n\nhttps://datatracker.ietf.org/doc/html/rfc1035#section-3.3.2\r\n\r\nThe patch was also cross-checked with Wireshark:\r\n```\r\ntdecode(Ether()/IP()/UDP()/DNS(raw(DNS(an=[DNSRRHINFO(rrname='H.local', os='OS', cpu='CPU')]))))\r\n...\r\n    Answers\r\n        H.local: type HINFO, class IN, CPU CPU, OS OS\r\n            Name: H.local\r\n            Type: HINFO (host information) (13)\r\n            Class: IN (0x0001)\r\n            Time to live: 0 (0 seconds)\r\n            Data length: 7\r\n            CPU Length: 3\r\n            CPU: CPU\r\n            OS Length: 2\r\n            OS: OS\r\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab58a88c0a76e0a514f4",
    "number": 4298,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nThis fixes a bug.\r\n\r\nBrefore:\r\n```\r\n>>> HCI_Event_Inquiry_Result(b'\\x01\\xcb\\x7f\\xdbn\\x8c\\x9c\\x01\\x00\\x00<\\x04\\x08\\x8di')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\a\\path\\venv\\Lib\\site-packages\\scapy\\base_classes.py\", line 398, in __call__\r\n    i.__init__(*args, **kargs)\r\n  File \"C:\\a\\path\\venv\\Lib\\site-packages\\scapy\\packet.py\", line 181, in __init__      \r\n    self.dissect(_pkt)\r\n  File \"C:\\a\\path\\venv\\Lib\\site-packages\\scapy\\packet.py\", line 1074, in dissect      \r\n    s = self.do_dissect(s)\r\n        ^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\a\\path\\venv\\Lib\\site-packages\\scapy\\packet.py\", line 1012, in do_dissect   \r\n    s, fval = f.getfield(self, s)\r\n              ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\a\\path\\venv\\Lib\\site-packages\\scapy\\fields.py\", line 2149, in getfield     \r\n    s, v = self.field.getfield(pkt, s)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: Field.getfield() missing 1 required positional argument: 's'\r\n```\r\n\r\nAfter:\r\n```\r\n>>> HCI_Event_Inquiry_Result(b'\\x01\\xcb\\x7f\\xdbn\\x8c\\x9c\\x01\\x00\\x00<\\x04\\x08\\x8di')\r\n<HCI_Event_Inquiry_Result  num_response=1 addr=[9c:8c:6e:db:7f:cb] page_scan_repetition_mode=[1] reserved=[0] device_class=[0x8043c] clock_offset=[27021] |>\r\n```\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "btfix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4298?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4298](https://app.codecov.io/gh/secdev/scapy/pull/4298?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3543268) into [master](https://app.codecov.io/gh/secdev/scapy/commit/ce2c2d7fb1809df6c21cced1e12c958746280f05?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ce2c2d7) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4298      +/-   ##\n==========================================\n- Coverage   82.00%   81.99%   -0.01%     \n==========================================\n  Files         350      350              \n  Lines       82046    82046              \n==========================================\n- Hits        67281    67277       -4     \n- Misses      14765    14769       +4     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4298?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4298?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `89.59% <ø> (ø)` | |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4298/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix HCI_Event_Inquiry_Result parsing (#4298)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab59a88c0a76e0a514f5",
    "number": 4297,
    "body": "- add support of keywords in `CLIUtil`, much better `help` message\r\n- QoL changes in `smbclient`: recursive mode for get, sortable `ls`, test",
    "head_branch": "smbclient-improve",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4297?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4297](https://app.codecov.io/gh/secdev/scapy/pull/4297?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (42993b7) into [master](https://app.codecov.io/gh/secdev/scapy/commit/e94fba098e26840908a79728a78c4783f90357e2?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e94fba0) will **decrease** coverage by `0.05%`.\n> The diff coverage is `39.82%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4297      +/-   ##\n==========================================\n- Coverage   81.99%   81.95%   -0.05%     \n==========================================\n  Files         350      350              \n  Lines       82015    82091      +76     \n==========================================\n+ Hits        67247    67276      +29     \n- Misses      14768    14815      +47     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4297?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/smbclient.py](https://app.codecov.io/gh/secdev/scapy/pull/4297?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYmNsaWVudC5weQ==) | `73.84% <76.92%> (-0.07%)` | :arrow_down: |\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4297?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `75.08% <20.27%> (-1.29%)` | :arrow_down: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4297/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Support keywords in CLIUtil + improve smbclient"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab5aa88c0a76e0a514f6",
    "number": 4296,
    "body": "- support all versions of `NETLOGON_SAM_LOGON`, merging the WITH_IP/SITE variants\r\n- minor kerberos fixes",
    "head_branch": "ldapfixes",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4296?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4296](https://app.codecov.io/gh/secdev/scapy/pull/4296?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c582ceb) into [master](https://app.codecov.io/gh/secdev/scapy/commit/9b061e918de73b5b60fa88a49207119e4f83680d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9b061e9) will **decrease** coverage by `0.76%`.\n> The diff coverage is `67.92%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4296      +/-   ##\n==========================================\n- Coverage   82.00%   81.25%   -0.76%     \n==========================================\n  Files         350      350              \n  Lines       81980    82015      +35     \n==========================================\n- Hits        67228    66638     -590     \n- Misses      14752    15377     +625     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4296?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/kerberos.py](https://app.codecov.io/gh/secdev/scapy/pull/4296?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2tlcmJlcm9zLnB5) | `54.38% <0.00%> (-0.06%)` | :arrow_down: |\n| [scapy/layers/ldap.py](https://app.codecov.io/gh/secdev/scapy/pull/4296?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2xkYXAucHk=) | `65.23% <40.00%> (-0.35%)` | :arrow_down: |\n| [scapy/layers/smb.py](https://app.codecov.io/gh/secdev/scapy/pull/4296?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYi5weQ==) | `69.83% <75.55%> (-1.26%)` | :arrow_down: |\n\n... and [14 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4296/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Support all versions of NETLOGON_SAM_LOGON*"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab5ba88c0a76e0a514f7",
    "number": 4295,
    "body": "This PR:\r\n- add support for TLS 1.3 post handshake authentication in the client (heavily contributed by https://github.com/secdev/scapy/issues/4080, which was a surprinsingly good analysis of various roadblocks for this). Key computation should also work for the server, but the automaton hasn't been updated.\r\n- cleanup various parts of the TLS 1.3 client automaton\r\n- add proper testing for TLS 1.3 `HelloRetryRequest`\r\n\r\n\r\n\r\nfixes https://github.com/secdev/scapy/issues/4080",
    "head_branch": "tlspostauth",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4295?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4295](https://app.codecov.io/gh/secdev/scapy/pull/4295?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d6cbfe5) into [master](https://app.codecov.io/gh/secdev/scapy/commit/9b061e918de73b5b60fa88a49207119e4f83680d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9b061e9) will **decrease** coverage by `0.14%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `89.47%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4295      +/-   ##\n==========================================\n- Coverage   82.00%   81.87%   -0.14%     \n==========================================\n  Files         350      350              \n  Lines       81980    82563     +583     \n==========================================\n+ Hits        67228    67596     +368     \n- Misses      14752    14967     +215     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4295?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4295?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9fX2luaXRfXy5weQ==) | `50.00% <ø> (ø)` | |\n| [scapy/layers/tls/automaton.py](https://app.codecov.io/gh/secdev/scapy/pull/4295?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b24ucHk=) | `86.23% <100.00%> (+0.10%)` | :arrow_up: |\n| [scapy/layers/tls/session.py](https://app.codecov.io/gh/secdev/scapy/pull/4295?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `86.66% <100.00%> (+0.09%)` | :arrow_up: |\n| [scapy/layers/tls/automaton\\_srv.py](https://app.codecov.io/gh/secdev/scapy/pull/4295?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b25fc3J2LnB5) | `72.09% <83.33%> (-2.32%)` | :arrow_down: |\n| [scapy/layers/tls/handshake.py](https://app.codecov.io/gh/secdev/scapy/pull/4295?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9oYW5kc2hha2UucHk=) | `87.44% <96.66%> (+0.32%)` | :arrow_up: |\n| [scapy/layers/tls/automaton\\_cli.py](https://app.codecov.io/gh/secdev/scapy/pull/4295?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b25fY2xpLnB5) | `86.71% <86.00%> (+5.60%)` | :arrow_up: |\n\n... and [10 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4295/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "TLS: add support for post-handshake auth (#4295)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab5ba88c0a76e0a514f8",
    "number": 4293,
    "body": "- Make `arping` work without having an IP not any routes assigned to an interface, if an `iface` parameter is provided.",
    "head_branch": "arping-fixes",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4293?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4293](https://app.codecov.io/gh/secdev/scapy/pull/4293?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cba6611) into [master](https://app.codecov.io/gh/secdev/scapy/commit/e3fb112c23adda6372dd918f48c0bf7a2d9ca8cd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e3fb112) will **decrease** coverage by `0.01%`.\n> The diff coverage is `66.66%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4293      +/-   ##\n==========================================\n- Coverage   81.98%   81.98%   -0.01%     \n==========================================\n  Files         350      350              \n  Lines       81964    81969       +5     \n==========================================\n+ Hits        67201    67203       +2     \n- Misses      14763    14766       +3     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4293?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/l2.py](https://app.codecov.io/gh/secdev/scapy/pull/4293?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `85.00% <75.00%> (-0.08%)` | :arrow_down: |\n| [scapy/sendrecv.py](https://app.codecov.io/gh/secdev/scapy/pull/4293?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `87.42% <50.00%> (-0.13%)` | :arrow_down: |\n\n... and [2 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4293/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix arping() without routes configured (#4293)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab5ca88c0a76e0a514f9",
    "number": 4292,
    "body": "- fix parsing of weird broken NTLM messages that are out there in the wild.\r\n\r\nThere are cases where the \"VERSION\" payload can be missing from both the NEGO, CHALL and AUTH.",
    "head_branch": "ntlm-fixes",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4292?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4292](https://app.codecov.io/gh/secdev/scapy/pull/4292?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (167fcf6) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0708e6743cb4ef119c74725bb99047edfb66f66d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0708e67) will **increase** coverage by `32.30%`.\n> Report is 10 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4292       +/-   ##\n===========================================\n+ Coverage   49.67%   81.98%   +32.30%     \n===========================================\n  Files         342      350        +8     \n  Lines       76269    81964     +5695     \n===========================================\n+ Hits        37889    67198    +29309     \n+ Misses      38380    14766    -23614     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4292?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ntlm.py](https://app.codecov.io/gh/secdev/scapy/pull/4292?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250bG0ucHk=) | `86.97% <100.00%> (+58.22%)` | :arrow_up: |\n\n... and [267 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4292/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Add tons of heuristics to parse old NTLM (#4292)\n\nCo-authored-by: gpotter2 <gpotter@local>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab5da88c0a76e0a514fa",
    "number": 4291,
    "body": "- try updating codecov-action",
    "head_branch": "codecov",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4291?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4291](https://app.codecov.io/gh/secdev/scapy/pull/4291?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (409f156) into [master](https://app.codecov.io/gh/secdev/scapy/commit/9ee84a19d1b84ce543bc3d1b6789886c32f6dea2?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9ee84a1) will **increase** coverage by `32.31%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4291       +/-   ##\n===========================================\n+ Coverage   49.66%   81.98%   +32.31%     \n===========================================\n  Files         342      349        +7     \n  Lines       76303    81889     +5586     \n===========================================\n+ Hits        37897    67133    +29236     \n+ Misses      38406    14756    -23650     \n```\n\n[see 265 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4291/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Update codecov-action to v4 (#4291)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab5ea88c0a76e0a514fb",
    "number": 4290,
    "body": "- fixes https://github.com/secdev/scapy/pull/4285#issuecomment-1951332853 and below",
    "head_branch": "crypto-rsa512",
    "is_a_fork": true,
    "comments": [
      "Thanks!",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4290?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4290](https://app.codecov.io/gh/secdev/scapy/pull/4290?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7bae538) into [master](https://app.codecov.io/gh/secdev/scapy/commit/9a91d0e9efabcca2ee45e82df38b222456b74d07?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9a91d0e) will **increase** coverage by `32.31%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `58.33%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4290       +/-   ##\n===========================================\n+ Coverage   49.66%   81.98%   +32.31%     \n===========================================\n  Files         342      349        +7     \n  Lines       76293    81882     +5589     \n===========================================\n+ Hits        37894    67134    +29240     \n+ Misses      38399    14748    -23651     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4290?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/cert.py](https://app.codecov.io/gh/secdev/scapy/pull/4290?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jZXJ0LnB5) | `87.15% <58.33%> (+70.31%)` | :arrow_up: |\n\n... and [264 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4290/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Hack support for terrible RSA key-lengths in cryptography 43.0 (#4290)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab5fa88c0a76e0a514fc",
    "number": 4289,
    "body": "- fix `StreamSocket` on windows",
    "head_branch": "win-streamsocket",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4289?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4289](https://app.codecov.io/gh/secdev/scapy/pull/4289?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (88e808b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/16e13720fcb29b6452bd9422973375feb2d313ee?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (16e1372) will **increase** coverage by `32.09%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `14.28%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4289       +/-   ##\n===========================================\n+ Coverage   49.67%   81.76%   +32.09%     \n===========================================\n  Files         342      349        +7     \n  Lines       76292    82093     +5801     \n===========================================\n+ Hits        37896    67127    +29231     \n+ Misses      38396    14966    -23430     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4289?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/automaton.py](https://app.codecov.io/gh/secdev/scapy/pull/4289?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `74.95% <0.00%> (ø)` | |\n| [scapy/supersocket.py](https://app.codecov.io/gh/secdev/scapy/pull/4289?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `74.85% <20.00%> (ø)` | |\n\n... and [263 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4289/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix StreamSocket on windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab5fa88c0a76e0a514fd",
    "number": 4288,
    "body": "- faster tls client/server tests (see https://github.com/secdev/scapy/pull/4285)\r\n- disable `needs_root` tests for cryptography's test config\r\n- fix test failure with `-W error` and add debug code to `run_tests`",
    "head_branch": "faster-tlsclientserver-tests",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4288?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4288](https://app.codecov.io/gh/secdev/scapy/pull/4288?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (90d5191) into [master](https://app.codecov.io/gh/secdev/scapy/commit/16e13720fcb29b6452bd9422973375feb2d313ee?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (16e1372) will **increase** coverage by `32.33%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4288       +/-   ##\n===========================================\n+ Coverage   49.67%   82.00%   +32.33%     \n===========================================\n  Files         342      349        +7     \n  Lines       76292    81872     +5580     \n===========================================\n+ Hits        37896    67137    +29241     \n+ Misses      38396    14735    -23661     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4288?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/automaton\\_srv.py](https://app.codecov.io/gh/secdev/scapy/pull/4288?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b25fc3J2LnB5) | `74.40% <100.00%> (+51.84%)` | :arrow_up: |\n\n... and [264 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4288/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Faster TLS client/server tests (#4288)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab60a88c0a76e0a514fe",
    "number": 4286,
    "body": "- add a test for `TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5` and `SSL_CK_RC2_128_CBC_EXPORT40_WITH_MD5` to test https://github.com/secdev/scapy/pull/4285\r\n- fix `example_client.py` and `example_server.py` since the reorg\r\n- do not require root to spawn a TLS client/server automata",
    "head_branch": "tls-rc2-test",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4286?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4286](https://app.codecov.io/gh/secdev/scapy/pull/4286?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (43ea26e) into [master](https://app.codecov.io/gh/secdev/scapy/commit/cb7134ccf45080811ca839e7c0ea98c4330a2502?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cb7134c) will **increase** coverage by `32.33%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4286       +/-   ##\n===========================================\n+ Coverage   49.66%   81.99%   +32.33%     \n===========================================\n  Files         342      349        +7     \n  Lines       76288    81871     +5583     \n===========================================\n+ Hits        37892    67134    +29242     \n+ Misses      38396    14737    -23659     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4286?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/automaton.py](https://app.codecov.io/gh/secdev/scapy/pull/4286?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b24ucHk=) | `83.94% <100.00%> (+68.15%)` | :arrow_up: |\n\n... and [264 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4286/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Add TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 test (#4286)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab61a88c0a76e0a514ff",
    "number": 4285,
    "body": "This PR uses the new unreleased (and undocumented) `RC2` support in `cryptography` (https://github.com/pyca/cryptography/pull/10407), but retains the fallbacks for older versions so that scapy remains compatible. In the next release of `cryptography` we are oxidizing the cipher layer so the non-public APIs currently in use will cease functioning.\r\n\r\nfixes https://github.com/secdev/scapy/issues/4237",
    "head_branch": "rc2-oh-no",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4285?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4285](https://app.codecov.io/gh/secdev/scapy/pull/4285?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a6811b2) into [master](https://app.codecov.io/gh/secdev/scapy/commit/dedddd975c0a5b588e121568f61c4ffe942e1d5e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (dedddd9) will **decrease** coverage by `0.02%`.\n> The diff coverage is `90.90%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4285      +/-   ##\n==========================================\n- Coverage   81.99%   81.98%   -0.02%     \n==========================================\n  Files         349      349              \n  Lines       81889    81897       +8     \n==========================================\n- Hits        67148    67140       -8     \n- Misses      14741    14757      +16     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4285?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/crypto/cipher\\_block.py](https://app.codecov.io/gh/secdev/scapy/pull/4285?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY2lwaGVyX2Jsb2NrLnB5) | `95.68% <90.90%> (-1.27%)` | :arrow_down: |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4285/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Looks like the most recent changes are causing failures in our CI right now (https://github.com/secdev/scapy/commit/16e13720fcb29b6452bd9422973375feb2d313ee#diff-750e485bcc229105845db52d66b35efca6075324730a92e7b8c921e75b741ccdL3) and also have significantly slowed down testing. Anything we can do there? 😄 ",
      "Hi. Sorry about that, do you have an example of a failing runner?",
      "@gpotter2 https://github.com/pyca/cryptography/actions/runs/7946618525/job/21694556742?pr=10414 -- it times out after 15 minutes",
      "@alex Got it, thanks. Could you retry with https://github.com/secdev/scapy/pull/4288 merged? If that still doesn't do it I'll investigate more & disable the test.",
      "Good news, they now run much faster (no timeout!).\r\n\r\nBad news, they seem to fail: https://github.com/pyca/cryptography/actions/runs/7946618525/job/21700730313?pr=10414\r\n\r\n",
      "Appears to be failing with\r\n```\r\n Traceback (most recent call last):\r\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/threading.py\", line 1073, in _bootstrap_inner\r\n    self.run()\r\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/threading.py\", line 1010, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"<input>\", line 29, in run_tls_test_server\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/automaton.py\", line 1497, in run\r\n    raise value\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/automaton.py\", line 1292, in _do_control\r\n    state = next(iterator)\r\n            ^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/automaton.py\", line 1350, in _do_iter\r\n    self._run_condition(cond, *state_output)\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/automaton.py\", line 1214, in _run_condition\r\n    cond(self, *args, **kargs)\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/automaton_srv.py\", line 369, in should_send_ServerFlight1\r\n    self.flush_records()\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/automaton.py\", line 265, in flush_records\r\n    s = b\"\".join(p.raw_stateful() for p in self.buffer_out)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/automaton.py\", line 265, in <genexpr>\r\n    s = b\"\".join(p.raw_stateful() for p in self.buffer_out)\r\n                 ^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/session.py\", line 1047, in raw_stateful\r\n    return super(_GenericTLSSessionInheritance, self).__bytes__()\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/packet.py\", line 599, in __bytes__\r\n    return self.build()\r\n           ^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/packet.py\", line 758, in build\r\n    p = self.do_build()\r\n        ^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/packet.py\", line 738, in do_build\r\n    pkt = self.self_build()\r\n          ^^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/packet.py\", line 717, in self_build\r\n    raise ex\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/packet.py\", line 708, in self_build\r\n    p = f.addfield(self, p, val)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/record.py\", line 206, in addfield\r\n    res += self.i2m(pkt, p)\r\n           ^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/record.py\", line 190, in i2m\r\n    cur = p.raw_stateful()\r\n          ^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/session.py\", line 1047, in raw_stateful\r\n    return super(_GenericTLSSessionInheritance, self).__bytes__()\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/packet.py\", line 599, in __bytes__\r\n    return self.build()\r\n           ^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/handshake.py\", line 1044, in build\r\n    cls.fill_missing()\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/config.py\", line 1161, in func_in\r\n    return func(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/keyexchange.py\", line 662, in fill_missing\r\n    k.fill_and_store(modulusLen=512)\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/config.py\", line 1161, in func_in\r\n    return func(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/cert.py\", line 473, in fill_and_store\r\n    self.key = rsa.generate_private_key(public_exponent=pubExp,\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/cryptography/hazmat/primitives/asymmetric/rsa.py\", line 142, in generate_private_key\r\n    _verify_rsa_parameters(public_exponent, key_size)\r\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/cryptography/hazmat/primitives/asymmetric/rsa.py\", line 154, in _verify_rsa_parameters\r\n    raise ValueError(\"key_size must be at least 1024-bits.\")\r\nValueError: While dissecting field 'msg': key_size must be at least 1024-bits.\r\n```\r\n(then subsequent failures are due to the first one)",
      "On `main` we've raised the minimum key size to generate a new RSA key to 1024-bit (previously it was 512-bit).\r\n\r\nCan the key size here be raised to 1024-bit? If not, you can still load an existing, smaller, key.",
      "This test is using `TLS_RSA_EXPORT_WITH_RC4_40_MD5` which is a cipher part of the \"export restrictions\" era.  See https://datatracker.ietf.org/doc/html/rfc2246#autoid-66. So I'm pretty sure we do want a key no bigger than 512bits for those.\r\n\r\nI'll take a look of how we can work around this, probably by trying to generate the key ourselves or something.",
      "Hmm, in that case, I think the best solution would be to use a pre-generated (hardcoded) key.",
      "It bothers me to hardcode the key. I'd prefer as much as possible to keep the SSLv2-TLS1.0 implementation in a working, 'per-spec' state, as nowadays there aren't many implementations available that still support those old algorithms (yet they're still encountered in the wild).\r\n\r\nDo you mind if I 'fix' this by adding a hack that calls `rust_openssl.rsa.generate_private_key(65537, 512)` directly?",
      "I can't promise that will work forever (and it won't work on older pyca/cryptography), but for now it will work, and if we do change it, our CI will catch it.",
      "Okay, that works. See https://github.com/secdev/scapy/pull/4290. Tested with cryptography's main and it seems to be working, so I'll merge it once the tests pass. ",
      "Ooops, I don't think this should have been closed :-)",
      "@gpotter2 Fix pushed (and also rebased against master once more) 😄 ",
      "The RC2-40 test fails for me locally on our `main` branch so it appears some more investigation is required on my end.",
      "Okay, thanks.",
      "Should be fixed now 😄 ",
      "Test failure is in `send() and sniff()` https://github.com/secdev/scapy/actions/runs/7950566439/job/21703035999?pr=4285#step:5:688\r\n\r\nThis doesn't look related to the current PR as best I can tell."
    ],
    "commit_messages": [
      "Support RC2 in cryptography 43.0+ (#4285)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab62a88c0a76e0a51500",
    "number": 4284,
    "body": "~~This is a proposal to bring back the simple \"range\" format as in `Net(\"192.168.0.1-10\")`. There are a few cases where I think it might be useful, as you can't be that precise with netmasks..~~\r\n\r\nThis is a proposal to add support for ranges in `IPField` and `IP6Field`, to be able to do:\r\n```python\r\np = IP(dst=(\"192.168.0.100\", \"192.168.0.105\"))\r\n```\r\nand have it translate it to  a `Net(\"192.168.0.100\", \"192.168.0.105\")`\r\n\r\nI would really like to hear from @p-l- what he thinks about this, what were the reasons to remove it. (@guedou feel free to chime in)\r\n\r\n~~(also note this PR is broken for Net6 and everything != Net)~~",
    "head_branch": "proposal-net",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4284?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4284](https://app.codecov.io/gh/secdev/scapy/pull/4284?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7f606e8) into [master](https://app.codecov.io/gh/secdev/scapy/commit/cb7134ccf45080811ca839e7c0ea98c4330a2502?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cb7134c) will **increase** coverage by `32.31%`.\n> Report is 8 commits behind head on master.\n> The diff coverage is `75.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4284       +/-   ##\n===========================================\n+ Coverage   49.66%   81.98%   +32.31%     \n===========================================\n  Files         342      349        +7     \n  Lines       76288    81910     +5622     \n===========================================\n+ Hits        37892    67151    +29259     \n+ Misses      38396    14759    -23637     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4284?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4284?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `92.39% <75.00%> (+28.08%)` | :arrow_up: |\n\n... and [264 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4284/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thinking about this it would probably make more sense to use the existing format. Something like\r\n```\r\nIP(dst=(\"192.168.0.1\", \"192.168.0.100\"))\r\n```",
      "Looks like a good idea for the last byte. Other bytes such as (\"192.168.0.28\", \"192.168.16.64\") might be 1 but trick to implement or understand.",
      "You can use `Net(\"192.168.0.1\", \"192.168.0.10\")` which IMO makes more sense than using `1-10` since that is `-9`.",
      "Yeah you're right. Let's change this PR entirely for a new proposal, just adding support for:\r\n```python\r\np = IP(dst=(\"192.168.0.100\", \"192.168.0.105\"))\r\n```\r\nand have it convert it to a `Net(\"192.168.0.100\", \"192.168.0.105\")`\r\n\r\n\r\nWhich may or not be that useful of a feature honnestly."
    ],
    "commit_messages": [
      "Support range format in IP(v6) fields (#4284)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab63a88c0a76e0a51501",
    "number": 4283,
    "body": "- add a `json()` function\r\n- add more `command()` tests\r\n\r\nThe rationale is: I've had someone ask me if there was a format that could be used for dirty grepping. This must NOT be used as a pickle alternative (I'm feeling like I have to remind this because some projects / people were asking for that..) ... as the binary form is just fine for that.",
    "head_branch": "tojson",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4283?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4283](https://app.codecov.io/gh/secdev/scapy/pull/4283?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (abfc483) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0708e6743cb4ef119c74725bb99047edfb66f66d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0708e67) will **increase** coverage by `32.30%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `95.45%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4283       +/-   ##\n===========================================\n+ Coverage   49.67%   81.98%   +32.30%     \n===========================================\n  Files         342      349        +7     \n  Lines       76269    81879     +5610     \n===========================================\n+ Hits        37889    67131    +29242     \n+ Misses      38380    14748    -23632     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4283?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/asn1/asn1.py](https://app.codecov.io/gh/secdev/scapy/pull/4283?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMS9hc24xLnB5) | `86.28% <100.00%> (+19.06%)` | :arrow_up: |\n| [scapy/packet.py](https://app.codecov.io/gh/secdev/scapy/pull/4283?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `84.11% <96.96%> (ø)` | |\n| [scapy/volatile.py](https://app.codecov.io/gh/secdev/scapy/pull/4283?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdm9sYXRpbGUucHk=) | `85.24% <75.00%> (+48.50%)` | :arrow_up: |\n\n... and [262 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4283/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "@guedou Feel free to merge if ok :)",
      "@gpotter2 from a user perspective, I think that it will make more sense that `command(json=True)` and `json()` returns the same thing, i.e. a string. I find it odd that `command(json=True)` returns a dict. What do you think?",
      "The `command()` you're talking about it not the `Packet`'s one but the `VolatileValue` / ASN.1 ones. I'd say no one calls those.\nThe `Packet`'s `command` has no `json` parameter.",
      "Sorry for the mistake!",
      "Nice!\r\n\r\nLooks like some packets can't be serialized:\r\n```sh\r\n === Uncaught Python exception: ===                                                                                                                           \r\nTypeError: Object of type UUID is not JSON serializable  \r\n...\r\n    p.json()\r\n  File \"/home/vagrant/scapy/scapy/packet.py\", line 1778, in json\r\n    pc = self.payload.json()\r\n         ^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/vagrant/scapy/scapy/packet.py\", line 1778, in json\r\n    pc = self.payload.json()\r\n         ^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/vagrant/scapy/scapy/packet.py\", line 1778, in json\r\n    pc = self.payload.json()\r\n         ^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/vagrant/scapy/scapy/packet.py\", line 1777, in json\r\n    dump = json.dumps({k: v for (k, v) in self._command(json=True)})\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/json/__init__.py\", line 231, in dumps\r\n    return _default_encoder.encode(obj)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/json/encoder.py\", line 200, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/json/encoder.py\", line 258, in iterencode\r\n    return _iterencode(o, 0)\r\n           ^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/json/encoder.py\", line 180, in default\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '\r\nTypeError: Object of type UUID is not JSON serializable\r\n\r\n==144946== ERROR: libFuzzer: fuzz target exited\r\n```\r\nAs far as I can tell it can be reproduced with something like\r\n```python\r\nDceRpc4(object='00480009-0800-0000-0000-0600c0000000').json()\r\n```",
      "That was expected, we'll fix them as they come. This isn't really a critical feature as the output is rather fuzzy."
    ],
    "commit_messages": [
      "Add json() (#4283)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab64a88c0a76e0a51502",
    "number": 4282,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n     The \"run_tests\" does not completed. But it is not rerated to the changed files.\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nIPv6 has been added to contrib/pim.py\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #4274 <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4282?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4282](https://app.codecov.io/gh/secdev/scapy/pull/4282?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (aa43883) into [master](https://app.codecov.io/gh/secdev/scapy/commit/041fbfa7394dd4aa4802a221e0fc819bdf71ba66?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (041fbfa) will **decrease** coverage by `0.01%`.\n> The diff coverage is `88.88%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4282      +/-   ##\n==========================================\n- Coverage   81.98%   81.98%   -0.01%     \n==========================================\n  Files         349      349              \n  Lines       81902    81918      +16     \n==========================================\n+ Hits        67148    67160      +12     \n- Misses      14754    14758       +4     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4282?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/pim.py](https://app.codecov.io/gh/secdev/scapy/pull/4282?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9waW0ucHk=) | `96.80% <88.88%> (-1.91%)` | :arrow_down: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4282/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks for the PR ! it looks good but I have some minor suggestion."
    ],
    "commit_messages": [
      "Support IPv6 in contrib/pim.py (#4282)\n\n* IPv6 would be added to contrib/pim.py #4274\n\n* pim.py has been rewritten with MultipleTypeFeilds\n\n* contrib/pim.py has been updated according to PEP8(tox -e flake8)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab65a88c0a76e0a51503",
    "number": 4279,
    "body": "- add RTSP\r\n- minor tweaks to HTTP to support a wider range of HTTP-like protocols",
    "head_branch": "rtsp",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4279?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4279](https://app.codecov.io/gh/secdev/scapy/pull/4279?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c1c2c30) into [master](https://app.codecov.io/gh/secdev/scapy/commit/bb36cecd1f24fff7a02483c8e981e2897cc06ea1?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (bb36cec) will **increase** coverage by `32.32%`.\n> Report is 2 commits behind head on master.\n> The diff coverage is `81.17%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4279       +/-   ##\n===========================================\n+ Coverage   49.67%   81.99%   +32.32%     \n===========================================\n  Files         342      350        +8     \n  Lines       76267    81909     +5642     \n===========================================\n+ Hits        37886    67165    +29279     \n+ Misses      38381    14744    -23637     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4279?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/msrpce/rpcclient.py](https://app.codecov.io/gh/secdev/scapy/pull/4279?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL21zcnBjZS9ycGNjbGllbnQucHk=) | `50.00% <100.00%> (+50.00%)` | :arrow_up: |\n| [scapy/layers/http.py](https://app.codecov.io/gh/secdev/scapy/pull/4279?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2h0dHAucHk=) | `81.08% <94.73%> (+56.01%)` | :arrow_up: |\n| [scapy/layers/msrpce/msdcom.py](https://app.codecov.io/gh/secdev/scapy/pull/4279?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL21zcnBjZS9tc2Rjb20ucHk=) | `70.37% <14.28%> (+70.37%)` | :arrow_up: |\n| [scapy/contrib/rtsp.py](https://app.codecov.io/gh/secdev/scapy/pull/4279?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ydHNwLnB5) | `84.21% <84.21%> (ø)` | |\n\n... and [262 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4279/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Add RTSP and minor fixes (#4279)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab65a88c0a76e0a51504",
    "number": 4278,
    "body": "- better libc loading for bluetooth\r\n\r\ncloses https://github.com/secdev/scapy/issues/4276",
    "head_branch": "bt-libc",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4278?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4278](https://app.codecov.io/gh/secdev/scapy/pull/4278?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (862e630) into [master](https://app.codecov.io/gh/secdev/scapy/commit/286523c471ea0aec1470abc9226765652dae92ef?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (286523c) will **increase** coverage by `32.30%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `0.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4278       +/-   ##\n===========================================\n+ Coverage   49.67%   81.97%   +32.30%     \n===========================================\n  Files         342      349        +7     \n  Lines       76267    81846     +5579     \n===========================================\n+ Hits        37885    67096    +29211     \n+ Misses      38382    14750    -23632     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4278?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4278?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `89.59% <0.00%> (+6.63%)` | :arrow_up: |\n\n... and [264 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4278/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "BT: cleanup libc loading (#4278)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab66a88c0a76e0a51505",
    "number": 4277,
    "body": "- fix `check_spdx.sh` to return 1 on failure",
    "head_branch": "spdx-fail",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update check_spdx.sh to return 1 on failure (#4277)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab67a88c0a76e0a51506",
    "number": 4273,
    "body": "**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nBluetooth EIR packets.\r\n\r\nAdded few tests as I could not find data samples that I could share. I will try to collect some real world examples I can put there.\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "dev/eir",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4273?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4273](https://app.codecov.io/gh/secdev/scapy/pull/4273?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e95d088) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0a2b2bcff17b45106fc81aeecb9ba48fe75f916c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0a2b2bc) will **increase** coverage by `0.01%`.\n> The diff coverage is `95.23%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4273      +/-   ##\n==========================================\n+ Coverage   82.03%   82.04%   +0.01%     \n==========================================\n  Files         350      350              \n  Lines       82888    82929      +41     \n==========================================\n+ Hits        67994    68036      +42     \n+ Misses      14894    14893       -1     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4273?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4273?src=pr&el=tree&filepath=scapy%2Ffields.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `92.39% <100.00%> (ø)` | |\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4273?src=pr&el=tree&filepath=scapy%2Flayers%2Fbluetooth.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `89.81% <95.12%> (+0.21%)` | :arrow_up: |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4273/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "As said previously, it is not easy to find those fields out in the wild to test this as acuratelly as possible...\r\n\r\nI will add tests as soon as I come across a packet for the missing packets. For the time being I would like to merge the tested packets if possible. I can remove the untested packets from the PR if you wish so...\r\n\r\nThanks!",
      "Would you prefer that I delete the non-tested packets or to leave them? Thanks"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab68a88c0a76e0a51507",
    "number": 4272,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ x] I squashed commits belonging together\r\n-   [ x] I added unit tests or explained why they are not relevant\r\n-   [ x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nFixes broken dissection of Counter64 values required for SNMP v2c\r\nI don't believe unit tests are necessary since this is the same implementation that was previously in the code.\r\nThis value of 6 comes from [RFC2578 Section 2](https://datatracker.ietf.org/doc/html/rfc2578#section-2) Page 8\r\n```\r\n-- for counters that wrap in less than one hour with only 32 bits\r\nCounter64 ::=\r\n    [APPLICATION 6]\r\n        IMPLICIT INTEGER (0..18446744073709551615)\r\n\r\n```\r\nScapy may want to include the Opaque type as well from the standard but I believe that would be a different issue.\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\nCopied implementation from commit 2e776b7917d60e640d15e4d4fb3015217443b233\r\nTested using device \r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #4270 <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "20240207_counter64",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4272?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4272](https://app.codecov.io/gh/secdev/scapy/pull/4272?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4ce3369) into [master](https://app.codecov.io/gh/secdev/scapy/commit/286523c471ea0aec1470abc9226765652dae92ef?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (286523c) will **increase** coverage by `31.65%`.\n> Report is 4 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4272       +/-   ##\n===========================================\n+ Coverage   49.67%   81.32%   +31.65%     \n===========================================\n  Files         342      349        +7     \n  Lines       76267    81851     +5584     \n===========================================\n+ Hits        37885    66568    +28683     \n+ Misses      38382    15283    -23099     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4272?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/asn1/asn1.py](https://app.codecov.io/gh/secdev/scapy/pull/4272?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMS9hc24xLnB5) | `85.98% <100.00%> (+18.76%)` | :arrow_up: |\n| [scapy/asn1/ber.py](https://app.codecov.io/gh/secdev/scapy/pull/4272?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMS9iZXIucHk=) | `86.64% <100.00%> (+46.91%)` | :arrow_up: |\n\n... and [260 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4272/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Added support for Counter64 in asn1 and ber (for snmp v2c) (#4272)\n\n* Added support for Counter64 in asn1 and ber (for snmp v2c)\r\n\r\n* Update regression.uts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab69a88c0a76e0a51508",
    "number": 4271,
    "body": "This is a test related to #3716 ",
    "head_branch": "guedou/20240207/ga_bsd",
    "is_a_fork": false,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4271?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4271](https://app.codecov.io/gh/secdev/scapy/pull/4271?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b2f5579) into [master](https://app.codecov.io/gh/secdev/scapy/commit/286523c471ea0aec1470abc9226765652dae92ef?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (286523c) will **increase** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4271   +/-   ##\n=======================================\n  Coverage   49.67%   49.68%           \n=======================================\n  Files         342      342           \n  Lines       76267    76267           \n=======================================\n+ Hits        37885    37892    +7     \n+ Misses      38382    38375    -7     \n```\n\n[see 5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4271/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "This is very cool. I really like the \"labeled\" enabling",
      "It will be better when I will understand why the workflow is not triggered =)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab6aa88c0a76e0a51509",
    "number": 4269,
    "body": "This PR makes sure that all unit tests pass on *BSD.",
    "head_branch": "guedou/20240206/bsd",
    "is_a_fork": false,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4269?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAttention: Patch coverage is `0%` with `1 lines` in your changes are missing coverage. Please review.\n> Project coverage is 81.20%. Comparing base [(`29b5413`)](https://app.codecov.io/gh/secdev/scapy/commit/29b5413f102bda8796f52e78c19adb8d23f4cdee?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`b8ea9e8`)](https://app.codecov.io/gh/secdev/scapy/pull/4269?dropdown=coverage&src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4269      +/-   ##\n==========================================\n- Coverage   81.56%   81.20%   -0.37%     \n==========================================\n  Files         352      352              \n  Lines       83601    83601              \n==========================================\n- Hits        68193    67891     -302     \n- Misses      15408    15710     +302     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4269?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/data.py](https://app.codecov.io/gh/secdev/scapy/pull/4269?src=pr&el=tree&filepath=scapy%2Fdata.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZGF0YS5weQ==) | `90.25% <0.00%> (ø)` | |\n\n... and [19 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4269/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "On NetBSD 10, all unit tests pass.",
      "On OpenBSD 7.5, tests also pass, yet some randomly fail on my test VM.\r\n\r\n@bluhm do you have time to confirm that everything is OK on OpenBSD before we release v2.6.0?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab6aa88c0a76e0a5150a",
    "number": 4268,
    "body": "This PR adds a check of SPDX identifiers with GitHub Actions, see #4263.",
    "head_branch": "guedou/20240106/ci_spdx",
    "is_a_fork": false,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4268?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4268](https://app.codecov.io/gh/secdev/scapy/pull/4268?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c301a6c) into [master](https://app.codecov.io/gh/secdev/scapy/commit/6829f4c97d1ad9587b96bc4af551fcaf6735724e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6829f4c) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4268   +/-   ##\n=======================================\n  Coverage   49.67%   49.67%           \n=======================================\n  Files         342      342           \n  Lines       76267    76267           \n=======================================\n  Hits        37886    37886           \n  Misses      38381    38381           \n```\n\n[see 1 file with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4268/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks for the PR. I think you forgot to add the content of the shell file",
      "@polybassa the commit only changes the permissions of the script that was commited by @gpotter2 ",
      "Sorry, my bad!",
      "@gpotter2 done!"
    ],
    "commit_messages": [
      "Automatically check SPDX identifiers (#4268)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab6ba88c0a76e0a5150b",
    "number": 4267,
    "body": "fix https://github.com/secdev/scapy/issues/4182",
    "head_branch": "atmtshutwin",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4267?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4267](https://app.codecov.io/gh/secdev/scapy/pull/4267?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f67935f) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5fa6428a1843fb851d8c6de1d0c59dad0168df78?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5fa6428) will **increase** coverage by `32.33%`.\n> The diff coverage is `0.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4267       +/-   ##\n===========================================\n+ Coverage   49.60%   81.94%   +32.33%     \n===========================================\n  Files         341      348        +7     \n  Lines       76081    81660     +5579     \n===========================================\n+ Hits        37742    66918    +29176     \n+ Misses      38339    14742    -23597     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4267?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/automaton.py](https://app.codecov.io/gh/secdev/scapy/pull/4267?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `75.29% <0.00%> (ø)` | |\n\n... and [264 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4267/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Catch shutting down ImportError (#4267)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab6ca88c0a76e0a5150c",
    "number": 4266,
    "body": "- During testing of ticketer++, force the timezone to be UTC \r\n\r\nfix https://github.com/secdev/scapy/issues/4264\r\n",
    "head_branch": "utckrb",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4266?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4266](https://app.codecov.io/gh/secdev/scapy/pull/4266?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c3a55ac) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5fa6428a1843fb851d8c6de1d0c59dad0168df78?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5fa6428) will **increase** coverage by `0.01%`.\n> The diff coverage is `0.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4266      +/-   ##\n==========================================\n+ Coverage   49.60%   49.62%   +0.01%     \n==========================================\n  Files         341      341              \n  Lines       76081    76081              \n==========================================\n+ Hits        37742    37754      +12     \n+ Misses      38339    38327      -12     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4266?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/modules/ticketer.py](https://app.codecov.io/gh/secdev/scapy/pull/4266?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbW9kdWxlcy90aWNrZXRlci5weQ==) | `0.00% <0.00%> (ø)` | |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4266/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Merging fearing this might affect pyca/cryptography."
    ],
    "commit_messages": [
      "Fix show() on non-UTC Kerberos"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab6da88c0a76e0a5150d",
    "number": 4265,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab6ea88c0a76e0a5150e",
    "number": 4263,
    "body": "- make sure all files have a SPDX\r\n- add a script to check all files have an SPDX",
    "head_branch": "spdxcheck",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4263?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4263](https://app.codecov.io/gh/secdev/scapy/pull/4263?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c96ff4e) into [master](https://app.codecov.io/gh/secdev/scapy/commit/329e61d6c5eb7de4635f5a72b586e9a48f43c674?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (329e61d) will **increase** coverage by `32.29%`.\n> Report is 2 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4263       +/-   ##\n===========================================\n+ Coverage   49.62%   81.92%   +32.29%     \n===========================================\n  Files         339      348        +9     \n  Lines       76066    81644     +5578     \n===========================================\n+ Hits        37751    66889    +29138     \n+ Misses      38315    14755    -23560     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4263?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/tcpros.py](https://app.codecov.io/gh/secdev/scapy/pull/4263?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi90Y3Byb3MucHk=) | `55.17% <ø> (+22.06%)` | :arrow_up: |\n| [scapy/layers/msrpce/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4263?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL21zcnBjZS9fX2luaXRfXy5weQ==) | `100.00% <ø> (ø)` | |\n| [scapy/layers/msrpce/raw/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4263?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL21zcnBjZS9yYXcvX19pbml0X18ucHk=) | `100.00% <100.00%> (ø)` | |\n| [scapy/layers/ppi.py](https://app.codecov.io/gh/secdev/scapy/pull/4263?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3BwaS5weQ==) | `83.87% <ø> (+17.20%)` | :arrow_up: |\n\n... and [262 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4263/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "I am late to comment this, but can we add the script in CI? It seems that it could save us future issues.",
      "Sure, feel free to submit a PR."
    ],
    "commit_messages": [
      "Make sure all core files have an SPDX (#4263)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab6fa88c0a76e0a5150f",
    "number": 4261,
    "body": "fixes https://github.com/secdev/scapy/issues/3936",
    "head_branch": "tlsbadnss",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4261?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4261](https://app.codecov.io/gh/secdev/scapy/pull/4261?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b0b1bb4) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d36f23c2bf1d3afb76e9a6ebfb085c2ef23be6f0?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d36f23c) will **increase** coverage by `32.44%`.\n> Report is 4 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4261       +/-   ##\n===========================================\n+ Coverage   49.51%   81.95%   +32.44%     \n===========================================\n  Files         338      345        +7     \n  Lines       75842    81513     +5671     \n===========================================\n+ Hits        37550    66807    +29257     \n+ Misses      38292    14706    -23586     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4261?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/session.py](https://app.codecov.io/gh/secdev/scapy/pull/4261?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `86.26% <100.00%> (+52.28%)` | :arrow_up: |\n\n... and [263 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4261/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Ignore bad UTF8 in NSS files (#4261)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab70a88c0a76e0a51510",
    "number": 4260,
    "body": "fix https://github.com/secdev/scapy/issues/3962\r\n\r\nWe can probably just enable this entirely. This should be fine.",
    "head_branch": "utscapysyntax",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4260?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4260](https://app.codecov.io/gh/secdev/scapy/pull/4260?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (eca93e4) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d36f23c2bf1d3afb76e9a6ebfb085c2ef23be6f0?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d36f23c) will **increase** coverage by `32.44%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4260       +/-   ##\n===========================================\n+ Coverage   49.51%   81.95%   +32.44%     \n===========================================\n  Files         338      345        +7     \n  Lines       75842    81423     +5581     \n===========================================\n+ Hits        37550    66732    +29182     \n+ Misses      38292    14691    -23601     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4260?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/tools/UTscapy.py](https://app.codecov.io/gh/secdev/scapy/pull/4260?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdG9vbHMvVVRzY2FweS5weQ==) | `64.67% <100.00%> (+4.59%)` | :arrow_up: |\n\n... and [262 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4260/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks!\r\n\r\nI reintroduced that syntax error locally:\r\n```diff\r\ndiff --git a/test/contrib/rtr.uts b/test/contrib/rtr.uts\r\nindex 0ec0d4e4..4a279b4d 100644\r\n--- a/test/contrib/rtr.uts\r\n+++ b/test/contrib/rtr.uts\r\n@@ -230,7 +230,7 @@ RTRErrorReport in pkt and pkt.error_code == 0 and pkt.erroneous_PDU == b'' and p\r\n = filled values build\r\n \r\n pkt = IP()/TCP(dport=323)/RTRErrorReport(error_code=1, error_text='Internal Error')\r\n-RTRErrorReport in pkt and pkt.error_code == 1 and pkt.error_text == b'Internal Error'\r\n+RTRErrorReport in pkt and pkt.error_code == 1and pkt.error_text == b'Internal Error'\r\n \r\n = dissection\r\n```\r\nand it seems it can't be caught with this patch applied. (it could be I messed something up somewhere though. I'll double-check)",
      "I tested it on some similar examples before making the PR :)",
      "I think what confused me is that\r\n```sh\r\npython3  -m scapy.tools.UTscapy -P 'load_contrib(\"rtr\")' -t test/contrib/rtr.uts\r\n```\r\nfails with \r\n```python\r\n  File \"<input>\", line 2\r\n    RTRErrorReport in pkt and pkt.error_code == 1and pkt.error_text == b'Internal Error'\r\n                                                ^\r\nSyntaxError: invalid decimal literal\r\n...\r\nUTscapy ended with error code 1\r\n```\r\nbut\r\n```sh\r\npython3  -m scapy.tools.UTscapy -c test/configs/linux.utsc -K automotive_comm -K scanner -K imports\r\n```\r\npasses. I'm not sure what I'm doing wrong"
    ],
    "commit_messages": [
      "UTscapy: treat SyntaxWarning as errors (#4260)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab70a88c0a76e0a51511",
    "number": 4259,
    "body": "fix https://github.com/secdev/scapy/issues/4174",
    "head_branch": "in4_pseudoheaderdestr",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4259?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4259](https://app.codecov.io/gh/secdev/scapy/pull/4259?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3cd3df5) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d36f23c2bf1d3afb76e9a6ebfb085c2ef23be6f0?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d36f23c) will **increase** coverage by `32.44%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4259       +/-   ##\n===========================================\n+ Coverage   49.51%   81.95%   +32.44%     \n===========================================\n  Files         338      345        +7     \n  Lines       75842    81423     +5581     \n===========================================\n+ Hits        37550    66730    +29180     \n+ Misses      38292    14693    -23599     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4259?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `70.56% <100.00%> (+48.13%)` | :arrow_up: |\n\n... and [262 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4259/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix in4_pseudoheader being destructive (#4259)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab71a88c0a76e0a51512",
    "number": 4258,
    "body": "tkinter shouldn't be a hard dependency, even for testing.",
    "head_branch": "tkinteroptional",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4258?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4258](https://app.codecov.io/gh/secdev/scapy/pull/4258?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1ab9899) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d36f23c2bf1d3afb76e9a6ebfb085c2ef23be6f0?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d36f23c) will **increase** coverage by `32.44%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `18.60%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4258       +/-   ##\n===========================================\n+ Coverage   49.51%   81.95%   +32.44%     \n===========================================\n  Files         338      345        +7     \n  Lines       75842    81420     +5578     \n===========================================\n+ Hits        37550    66729    +29179     \n+ Misses      38292    14691    -23601     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4258?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/modules/ticketer.py](https://app.codecov.io/gh/secdev/scapy/pull/4258?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbW9kdWxlcy90aWNrZXRlci5weQ==) | `35.32% <18.60%> (+35.32%)` | :arrow_up: |\n\n... and [262 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4258/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Make tkinter optional in ticketer (#4258)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab72a88c0a76e0a51513",
    "number": 4257,
    "body": "fix https://github.com/secdev/scapy/issues/3760",
    "head_branch": "mqttfix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4257?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4257](https://app.codecov.io/gh/secdev/scapy/pull/4257?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (acb499c) into [master](https://app.codecov.io/gh/secdev/scapy/commit/b2f3587cf7111c544a74ea4b03c096d6d81ea856?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b2f3587) will **increase** coverage by `32.44%`.\n> Report is 2 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4257       +/-   ##\n===========================================\n+ Coverage   49.50%   81.95%   +32.44%     \n===========================================\n  Files         338      345        +7     \n  Lines       75835    81417     +5582     \n===========================================\n+ Hits        37542    66725    +29183     \n+ Misses      38293    14692    -23601     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4257?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/mqtt.py](https://app.codecov.io/gh/secdev/scapy/pull/4257?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9tcXR0LnB5) | `97.34% <100.00%> (+18.58%)` | :arrow_up: |\n\n... and [262 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4257/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix MQTT SubAck retcodes (#4257)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab73a88c0a76e0a51514",
    "number": 4256,
    "body": "fix https://github.com/secdev/scapy/issues/3866",
    "head_branch": "dnsfix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4256?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4256](https://app.codecov.io/gh/secdev/scapy/pull/4256?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (198e1a2) into [master](https://app.codecov.io/gh/secdev/scapy/commit/cb7134ccf45080811ca839e7c0ea98c4330a2502?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cb7134c) will **increase** coverage by `1.28%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `66.66%`.\n\n> :exclamation: Current head 198e1a2 differs from pull request most recent head 32852d9. Consider uploading reports for the commit 32852d9 to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4256      +/-   ##\n==========================================\n+ Coverage   49.66%   50.95%   +1.28%     \n==========================================\n  Files         342      349       +7     \n  Lines       76288    81873    +5585     \n==========================================\n+ Hits        37892    41716    +3824     \n- Misses      38396    40157    +1761     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4256?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4256?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `33.99% <66.66%> (+0.40%)` | :arrow_up: |\n\n... and [124 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4256/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix DNSStrField multiple values (#4256)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab74a88c0a76e0a51515",
    "number": 4255,
    "body": "fix https://github.com/secdev/scapy/issues/3873\r\ncloses https://github.com/secdev/scapy/issues/4171",
    "head_branch": "winbugfixes",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4255?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4255](https://app.codecov.io/gh/secdev/scapy/pull/4255?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (309a285) into [master](https://app.codecov.io/gh/secdev/scapy/commit/b2f3587cf7111c544a74ea4b03c096d6d81ea856?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b2f3587) will **increase** coverage by `32.43%`.\n> Report is 3 commits behind head on master.\n> The diff coverage is `29.54%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4255       +/-   ##\n===========================================\n+ Coverage   49.50%   81.94%   +32.43%     \n===========================================\n  Files         338      345        +7     \n  Lines       75835    81441     +5606     \n===========================================\n+ Hits        37542    66736    +29194     \n+ Misses      38293    14705    -23588     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4255?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/sendrecv.py](https://app.codecov.io/gh/secdev/scapy/pull/4255?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `87.55% <100.00%> (+47.99%)` | :arrow_up: |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4255?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `78.00% <0.00%> (+22.79%)` | :arrow_up: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4255?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.00% <64.70%> (-1.25%)` | :arrow_down: |\n| [scapy/arch/windows/native.py](https://app.codecov.io/gh/secdev/scapy/pull/4255?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL25hdGl2ZS5weQ==) | `27.27% <4.00%> (-1.68%)` | :arrow_down: |\n\n... and [260 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4255/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Minor windows bug fixes (#4255)\n\n* Minor windows bug fixes\r\n\r\n* The libpcap warning should be log_loading\r\n\r\n* Restore non-libpcap support on Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab75a88c0a76e0a51516",
    "number": 4254,
    "body": "- Clarify the doc vs code licenses.\r\n\r\ncloses https://github.com/secdev/scapy/issues/3870",
    "head_branch": "docfixes",
    "is_a_fork": true,
    "comments": [
      "@guedou @p-l- Hi. Could you confirm that this is fine?\r\nDoc is under a Non-Commercial License, but that sounds... just fine to me.",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4254?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4254](https://app.codecov.io/gh/secdev/scapy/pull/4254?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2257d82) into [master](https://app.codecov.io/gh/secdev/scapy/commit/86e176428c55f569585890b466dbd9719c19147c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (86e1764) will **increase** coverage by `32.38%`.\n> Report is 12 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4254       +/-   ##\n===========================================\n+ Coverage   49.50%   81.88%   +32.38%     \n===========================================\n  Files         338      345        +7     \n  Lines       75835    81545     +5710     \n===========================================\n+ Hits        37542    66774    +29232     \n+ Misses      38293    14771    -23522     \n```\n\n[see 263 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4254/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "FWIW packagers usually ship documentation separately and distros where it matters just don't ship the scapy documentation any more:\r\nhttps://gitlab.com/redhat/centos-stream/rpms/scapy/-/commit/6239c6c2fcb09ba961f68b19f20c27d80cec2e7a\r\nhttps://salsa.debian.org/pkg-security-team/scapy/-/commit/415bf9d78e38563551523ee9e87c1fb03e034a1d\r\n\r\nso it shouldn't prevent the code from being distributed via classic packages at least.",
      "Yeah. I take this opportunity to drop a slightly off-topic rant, aimed at whoever might come back to this PR in the future.\r\n\r\nFor a long time I was wondering if we should try to relicense the doc under not-NC license, because of what Debian requires, but at the end of the day I'm still unsure what the big deal is. Nowadays 99% of users google \"scapy documentation\", so it's already debatable what impact doc packages really have.\r\n\r\nIt sounds reasonable to me to enforce that packages on a distro allow commercial use, and we are more than fine with Scapy being used in products or commercially (etc.), as you usually get good-quality contributions back from private companies that have both time and money, and interesting use cases. But enforcing documentation to also be commercial sounds a bit funky to me. I personally probably don't want companies to sell repackaged \"guides\" that are just a copy/paste of the documentation, nor do I see a real usage for legitimate commercial use of documentation on the top of my mind. Allowing to resell documentation honnestly sounds like letting people put a paywall in front of knowledge, and I mean that for documentation only.\r\n\r\nI'm probably missing the reasons why this matters to so many distributions, but wording it a \"DFSG infringement\" and \"do that else we'll remove the doc package, for the sake of freedom !\" when we're only really talking about documentation sounds very harsh (feel free to correct me if I'm missing the point, as I've yet to see a convincing explanation)."
    ],
    "commit_messages": [
      "Clarify that the DOC is under CC BY-NC-SA 2.5 (#4254)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab76a88c0a76e0a51517",
    "number": 4253,
    "body": "closes https://github.com/secdev/scapy/issues/2133\r\ncloses https://github.com/secdev/scapy/issues/3577\r\ncloses https://github.com/secdev/scapy/issues/3423",
    "head_branch": "routedisable",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4253?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4253](https://app.codecov.io/gh/secdev/scapy/pull/4253?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (10e9f09) into [master](https://app.codecov.io/gh/secdev/scapy/commit/86e176428c55f569585890b466dbd9719c19147c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (86e1764) will **increase** coverage by `32.09%`.\n> Report is 2 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4253       +/-   ##\n===========================================\n+ Coverage   49.50%   81.60%   +32.09%     \n===========================================\n  Files         338      345        +7     \n  Lines       75835    81417     +5582     \n===========================================\n+ Hits        37542    66437    +28895     \n+ Misses      38293    14980    -23313     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4253?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4253?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `78.00% <100.00%> (+22.79%)` | :arrow_up: |\n| [scapy/route.py](https://app.codecov.io/gh/secdev/scapy/pull/4253?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcm91dGUucHk=) | `90.15% <100.00%> (+68.61%)` | :arrow_up: |\n| [scapy/route6.py](https://app.codecov.io/gh/secdev/scapy/pull/4253?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcm91dGU2LnB5) | `88.39% <100.00%> (+69.29%)` | :arrow_up: |\n\n... and [257 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4253/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Allow to disable auto-loading of routes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab76a88c0a76e0a51518",
    "number": 4251,
    "body": "Fixes https://github.com/secdev/scapy/issues/4247 and probably also https://github.com/secdev/scapy/issues/3617\r\n\r\nThe extensions of an TLSClientHello frame were overwritten because of a wrong indention\r\n\r\nfix #4247\r\nfix #3617",
    "head_branch": "tls-extension-fix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4251?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4251](https://app.codecov.io/gh/secdev/scapy/pull/4251?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ad37ba8) into [master](https://app.codecov.io/gh/secdev/scapy/commit/86e176428c55f569585890b466dbd9719c19147c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (86e1764) will **increase** coverage by `32.45%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4251       +/-   ##\n===========================================\n+ Coverage   49.50%   81.95%   +32.45%     \n===========================================\n  Files         338      345        +7     \n  Lines       75835    81410     +5575     \n===========================================\n+ Hits        37542    66720    +29178     \n+ Misses      38293    14690    -23603     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4251?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/automaton\\_cli.py](https://app.codecov.io/gh/secdev/scapy/pull/4251?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b25fY2xpLnB5) | `81.11% <100.00%> (+55.23%)` | :arrow_up: |\n\n... and [262 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4251/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "Fixes an issue, where TLSClientHello extensions were overwritten"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab77a88c0a76e0a51519",
    "number": 4249,
    "body": "According to https://www.rfc-editor.org/rfc/rfc6672.html#section-2.1\r\n```\r\nThe DNAME RR has mnemonic DNAME and type code 39 (decimal).\r\nIts RDATA is comprised of a single field, <target>, which contains a\r\nfully qualified domain name that MUST be sent in uncompressed form\r\n```\r\nEven though the RFC says it MUST NOT be compressed `dns_compress`\r\ncompresses it intentionally to make it easier to test DNS-related\r\nsoftware that should be able to handle compressed and uncompressed\r\nDNAMEs regradless of what the RFC says.\r\n\r\nThis patch makes it possible to work with FQDNs instead of the wire format. It was prompted by\r\nhttps://github.com/systemd/systemd/issues/30392 where recursive DNAMEs were initially built using FQDNs (by analogy with CNAMEs) and were rejected because they weren't valid.\r\n\r\nThe patch was also cross-checked with Wireshark:\r\n```\r\n>>> tdecode(Ether()/IP()/UDP()/DNS(qd=[], an=[DNSRR(rrname='local', type='DNAME', rdata='local')]))\r\n...\r\n    Answers\r\n        local: type DNAME, class IN, dname local\r\n            Name: local\r\n            Type: DNAME (39)\r\n            Class: IN (0x0001)\r\n            Time to live: 0 (0 seconds)\r\n            Data length: 7\r\n            Dname: local\r\n```",
    "head_branch": "dnames",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4249?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4249](https://app.codecov.io/gh/secdev/scapy/pull/4249?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4decc6b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/86e176428c55f569585890b466dbd9719c19147c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (86e1764) will **increase** coverage by `32.46%`.\n> Report is 4 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4249       +/-   ##\n===========================================\n+ Coverage   49.50%   81.96%   +32.46%     \n===========================================\n  Files         338      345        +7     \n  Lines       75835    81417     +5582     \n===========================================\n+ Hits        37542    66737    +29195     \n+ Misses      38293    14680    -23613     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4249?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4249?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `87.44% <ø> (+53.90%)` | :arrow_up: |\n\n... and [262 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4249/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "DNS: support DNAME RRs in DNSRRs (#4249)\n\nAccording to https://www.rfc-editor.org/rfc/rfc6672.html#section-2.1\r\n```\r\nThe DNAME RR has mnemonic DNAME and type code 39 (decimal).\r\nIts RDATA is comprised of a single field, <target>, which contains a\r\nfully qualified domain name that MUST be sent in uncompressed form\r\n```\r\nEven though the RFC says it MUST NOT be compressed `dns_compress`\r\ncompresses it intentionally to make it easier to test DNS-related\r\nsoftware that should be able to handle compressed and uncompressed\r\nDNAMEs regradless of what the RFC says.\r\n\r\nThis patch makes it possible to work with FQDNs instead of the wire\r\nformat. It was prompted by\r\nhttps://github.com/systemd/systemd/issues/30392 where recursive DNAMEs\r\nwere initially built using FQDNs (by analogy with CNAMEs) and were\r\nrejected because they weren't valid.\r\n\r\nThe patch was also cross-checked with Wireshark:\r\n```\r\n>>> tdecode(Ether()/IP()/UDP()/DNS(qd=[], an=[DNSRR(rrname='local', type='DNAME', rdata='local')]))\r\n...\r\n    Answers\r\n        local: type DNAME, class IN, dname local\r\n            Name: local\r\n            Type: DNAME (39)\r\n            Class: IN (0x0001)\r\n            Time to live: 0 (0 seconds)\r\n            Data length: 7\r\n            Dname: local\r\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab78a88c0a76e0a5151a",
    "number": 4246,
    "body": "- try fixing the MacOS coverage glitch",
    "head_branch": "macostest",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4246?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4246](https://app.codecov.io/gh/secdev/scapy/pull/4246?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8871e1a) into [master](https://app.codecov.io/gh/secdev/scapy/commit/86e176428c55f569585890b466dbd9719c19147c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (86e1764) will **increase** coverage by `32.45%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4246       +/-   ##\n===========================================\n+ Coverage   49.50%   81.95%   +32.45%     \n===========================================\n  Files         338      345        +7     \n  Lines       75835    81410     +5575     \n===========================================\n+ Hits        37542    66720    +29178     \n+ Misses      38293    14690    -23603     \n```\n\n[see 263 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4246/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix coverage tests on MacOS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab79a88c0a76e0a5151b",
    "number": 4244,
    "body": "- update all github actions\r\n- hopefully this will fix the codecov glitches",
    "head_branch": "actions",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4244?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4244](https://app.codecov.io/gh/secdev/scapy/pull/4244?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c81c412) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0137bbbecf6fdf33bdd72ef4b54f098be9211aa9?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0137bbb) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4244      +/-   ##\n==========================================\n- Coverage   81.77%   81.77%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76624    76624              \n==========================================\n- Hits        62661    62660       -1     \n- Misses      13963    13964       +1     \n```\n\n[see 4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4244/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Update github actions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab7aa88c0a76e0a5151c",
    "number": 4243,
    "body": "fix https://github.com/secdev/scapy/issues/4112",
    "head_branch": "modbusfix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4243?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4243](https://app.codecov.io/gh/secdev/scapy/pull/4243?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b5c8313) into [master](https://app.codecov.io/gh/secdev/scapy/commit/277f31e2564602685729c6d5973f881c073ab6f4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (277f31e) will **increase** coverage by `30.74%`.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4243       +/-   ##\n===========================================\n+ Coverage   51.02%   81.77%   +30.74%     \n===========================================\n  Files         324      331        +7     \n  Lines       71345    76624     +5279     \n===========================================\n+ Hits        36406    62658    +26252     \n+ Misses      34939    13966    -20973     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4243?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/modbus.py](https://app.codecov.io/gh/secdev/scapy/pull/4243?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9tb2RidXMucHk=) | `90.98% <ø> (+16.33%)` | :arrow_up: |\n\n... and [251 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4243/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Rename modbus 'payload' field (#4243)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab7ba88c0a76e0a5151d",
    "number": 4242,
    "body": "fix https://github.com/secdev/scapy/issues/4216",
    "head_branch": "dnscache",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4242?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4242](https://app.codecov.io/gh/secdev/scapy/pull/4242?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (679cc3a) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0137bbbecf6fdf33bdd72ef4b54f098be9211aa9?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0137bbb) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4242      +/-   ##\n==========================================\n- Coverage   81.77%   81.77%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76624    76626       +2     \n==========================================\n+ Hits        62661    62662       +1     \n- Misses      13963    13964       +1     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4242?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4242?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `87.40% <100.00%> (+0.03%)` | :arrow_up: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4242/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Auto clear DNS cache on set"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab7ca88c0a76e0a5151e",
    "number": 4241,
    "body": "fix https://github.com/secdev/scapy/issues/4209",
    "head_branch": "badfilter",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4241?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4241](https://app.codecov.io/gh/secdev/scapy/pull/4241?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (30298a7) into [master](https://app.codecov.io/gh/secdev/scapy/commit/277f31e2564602685729c6d5973f881c073ab6f4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (277f31e) will **increase** coverage by `30.76%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4241       +/-   ##\n===========================================\n+ Coverage   51.02%   81.78%   +30.76%     \n===========================================\n  Files         324      331        +7     \n  Lines       71345    76622     +5277     \n===========================================\n+ Hits        36406    62669    +26263     \n+ Misses      34939    13953    -20986     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4241?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/bpf/supersocket.py](https://app.codecov.io/gh/secdev/scapy/pull/4241?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9icGYvc3VwZXJzb2NrZXQucHk=) | `71.64% <100.00%> (+71.64%)` | :arrow_up: |\n| [scapy/arch/libpcap.py](https://app.codecov.io/gh/secdev/scapy/pull/4241?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saWJwY2FwLnB5) | `75.24% <100.00%> (+38.81%)` | :arrow_up: |\n| [scapy/arch/linux.py](https://app.codecov.io/gh/secdev/scapy/pull/4241?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saW51eC5weQ==) | `84.79% <100.00%> (+84.79%)` | :arrow_up: |\n\n... and [249 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4241/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Correctly raise on bad filter (#4241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab7ca88c0a76e0a5151f",
    "number": 4240,
    "body": "fix https://github.com/secdev/scapy/issues/4226",
    "head_branch": "ocsp-revoked",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4240?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4240](https://app.codecov.io/gh/secdev/scapy/pull/4240?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (71bddf4) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0137bbbecf6fdf33bdd72ef4b54f098be9211aa9?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0137bbb) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4240      +/-   ##\n==========================================\n- Coverage   81.77%   81.77%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76624    76624              \n==========================================\n- Hits        62661    62660       -1     \n- Misses      13963    13964       +1     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4240?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/x509.py](https://app.codecov.io/gh/secdev/scapy/pull/4240?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3g1MDkucHk=) | `97.05% <ø> (ø)` | |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4240/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix OCSP_RevokedInfo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab7da88c0a76e0a51520",
    "number": 4238,
    "body": "This patch fixes an issue where empty lists assigned explicitly to override non-empty default values weren't present in commands generated by Packet.command and the packets were different.\r\n\r\nFor example `DNS(qd=[]).command()` generated `DNS()` and it turned into packets with the default \"example.com IN A\" query. With this patch applied it generates `DNS(qd=[])`.",
    "head_branch": "command-empty-values",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4238?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4238](https://app.codecov.io/gh/secdev/scapy/pull/4238?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (42a3934) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5a1abdc4cee779cf3a8afd337aace8917ab66127?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5a1abdc) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4238      +/-   ##\n==========================================\n- Coverage   81.77%   81.76%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76722    76722              \n==========================================\n- Hits        62736    62731       -5     \n- Misses      13986    13991       +5     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4238?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/packet.py](https://app.codecov.io/gh/secdev/scapy/pull/4238?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `83.67% <100.00%> (ø)` | |\n\n... and [2 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4238/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "packet: don't always skip empty values in .command() (#4238)\n\nThis patch fixes an issue where empty lists assigned explicitly to\r\noverride non-empty default values weren't present in commands generated\r\nby Packet.command and the packets were different.\r\n\r\nFor example `DNS(qd=[]).command()` generated `DNS()` and it turned into\r\npackets with the default \"example.com IN A\" query. With this patch\r\napplied it generates `DNS(qd=[])`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab7ea88c0a76e0a51521",
    "number": 4236,
    "body": "- restore support for cryptography post version 42\r\n- remove old code for cryptography<1.9 (we already enforce 2.0)\r\n- fix upstream/downstream cryptography TLS tests not being triggered ",
    "head_branch": "cryptography-42",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support cryptography>=42.0 (and restore TLS tests)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab7fa88c0a76e0a51522",
    "number": 4235,
    "body": "1.support IFA over ipv4/ipv6 + udp/tcp/vxlan/gre\r\n2.add IFA unit tests\r\n\r\n",
    "head_branch": "master.hujf.ifa",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4235?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAttention: Patch coverage is `98.78049%` with `1 line` in your changes missing coverage. Please review.\n> Project coverage is 81.23%. Comparing base [(`1346522`)](https://app.codecov.io/gh/secdev/scapy/commit/13465222cc36c8e6d6ebf61451a192df9e12bd8b?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`4687de0`)](https://app.codecov.io/gh/secdev/scapy/commit/4687de0cd21622976a1897945d3ee6d435aca5e1?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n\n| [Files with missing lines](https://app.codecov.io/gh/secdev/scapy/pull/4235?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Patch % | Lines |\n|---|---|---|\n| [scapy/contrib/ifa.py](https://app.codecov.io/gh/secdev/scapy/pull/4235?src=pr&el=tree&filepath=scapy%2Fcontrib%2Fifa.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pZmEucHk=) | 98.03% | [1 Missing :warning: ](https://app.codecov.io/gh/secdev/scapy/pull/4235?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) |\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4235      +/-   ##\n==========================================\n- Coverage   81.62%   81.23%   -0.39%     \n==========================================\n  Files         359      360       +1     \n  Lines       86052    86126      +74     \n==========================================\n- Hits        70237    69968     -269     \n- Misses      15815    16158     +343     \n```\n\n| [Files with missing lines](https://app.codecov.io/gh/secdev/scapy/pull/4235?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4235?src=pr&el=tree&filepath=scapy%2Flayers%2Finet.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `72.40% <100.00%> (+0.56%)` | :arrow_up: |\n| [scapy/layers/l2.py](https://app.codecov.io/gh/secdev/scapy/pull/4235?src=pr&el=tree&filepath=scapy%2Flayers%2Fl2.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `77.01% <100.00%> (-6.75%)` | :arrow_down: |\n| [scapy/contrib/ifa.py](https://app.codecov.io/gh/secdev/scapy/pull/4235?src=pr&el=tree&filepath=scapy%2Fcontrib%2Fifa.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pZmEucHk=) | `98.03% <98.03%> (ø)` | |\n\n... and [27 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4235/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab80a88c0a76e0a51523",
    "number": 4233,
    "body": "According to https://www.rfc-editor.org/rfc/rfc4861.html#section-4.6\r\n```\r\nAll options are of the form:\r\n\r\n        0                   1                   2                   3\r\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n       |     Type      |    Length     |              ...              |\r\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n```\r\nwhere\r\n```\r\n      Length         8-bit unsigned integer.  The length of the option\r\n                     (including the type and length fields) in units of\r\n                     8 octets.\r\n```\r\n\r\nThis patch makes it possible to recognize/generate unknown options by introducing a new field where lengths are calculated according to the RFC and options are padded with zeroes if necessary. By default trailing zeroes aren't stripped to make it easier to process options where trailing zeroes can be mixed up with actual data (like the encrypted DNS option for example). The captive portal option was switched to the new field too but there trailing zeroes are still stripped.\r\n\r\nfuzz(ICMPv6NDOptUnknown(type=...)) is much more effective now because it generates options valid enough to get past basic checks but nonsensical enough to trigger interesting issues like\r\nhttps://github.com/systemd/systemd/pull/30952#discussion_r1466173103\r\nhttps://github.com/systemd/systemd/pull/30952#discussion_r1466813680\r\n\r\nICMPv6NDOptUnknown is also used instead of Raw to guess payloads so router advertisements can be parsed even when unknown options pop up in the middle.\r\n\r\nThe patch was also cross-checked with Wireshark:\r\n```\r\n>>> tdecode(Ether()/IPv6()/ICMPv6ND_RA()/ICMPv6NDOptSrcLLAddr()/ICMPv6NDOptUnknown(data='watwatwat')/ICMPv6NDOptCaptivePortal())\r\n...\r\n    ICMPv6 Option (Source link-layer address : 00:00:00:00:00:00)\r\n        Type: Source link-layer address (1)\r\n        Length: 1 (8 bytes)\r\n        Link-layer address: 00:00:00_00:00:00 (00:00:00:00:00:00)\r\n    ICMPv6 Option (Unknown 0)\r\n        Type: Unknown (0)\r\n        Length: 2 (16 bytes)\r\n        [Expert Info (Note/Undecoded): Dissector for ICMPv6 Option (0) code not implemented, Contact Wireshark developers if you want this supported]\r\n            [Dissector for ICMPv6 Option (0) code not implemented, Contact Wireshark developers if you want this supported]\r\n            [Severity level: Note]\r\n            [Group: Undecoded]\r\n        Data: 7761747761747761740000000000\r\n    ICMPv6 Option (DHCP Captive-Portal)\r\n        Type: DHCP Captive-Portal (37)\r\n        Length: 1 (8 bytes)\r\n        Captive Portal:\r\n```",
    "head_branch": "inet6-unknown-ra-option",
    "is_a_fork": true,
    "comments": [
      "The CI seems to be failing because cryptography switched to Rust in https://github.com/pyca/cryptography/commit/ba9131eaf23669098997b54859174834edf19fb9 and the `_p` attribute was removed. I pinned it to [41.0.7](https://github.com/pyca/cryptography/releases/tag/41.0.7) in https://github.com/evverx/scapy/pull/2 and all the tests passed there.",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4233?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4233](https://app.codecov.io/gh/secdev/scapy/pull/4233?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (14f928f) into [master](https://app.codecov.io/gh/secdev/scapy/commit/ae79fcba3107ef3cd40aed437fe921a853b6ad6e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ae79fcb) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4233      +/-   ##\n==========================================\n- Coverage   81.77%   81.76%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76716    76722       +6     \n==========================================\n  Hits        62731    62731              \n- Misses      13985    13991       +6     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4233?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4233?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.58% <100.00%> (+0.03%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4233/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "I converted it to draft because I added a commit pinning cryptography to get Codecov to work",
      "Really cool PR! Thanks."
    ],
    "commit_messages": [
      "[inet6] recognize unknown router advertisement options (#4233)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab81a88c0a76e0a51524",
    "number": 4232,
    "body": "1.support CMCC IOAM over ipv4/ipv6 + tcp/udp/vxlan \r\n2.add CMCC IOAM unit tests",
    "head_branch": "master.hujf.ioam",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4232?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4232](https://app.codecov.io/gh/secdev/scapy/pull/4232?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f93e029) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d71014a5adf8fe7144408f78402bd1ca40e9b4a7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d71014a) will **decrease** coverage by `32.65%`.\n> Report is 5 commits behind head on master.\n> The diff coverage is `46.15%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4232       +/-   ##\n===========================================\n- Coverage   81.77%   49.12%   -32.65%     \n===========================================\n  Files         331      332        +1     \n  Lines       76721    76752       +31     \n===========================================\n- Hits        62736    37703    -25033     \n- Misses      13985    39049    +25064     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/ioam.py](https://app.codecov.io/gh/secdev/scapy/pull/4232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pb2FtLnB5) | `100.00% <100.00%> (ø)` | |\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `41.22% <54.54%> (-47.33%)` | :arrow_down: |\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4232?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `24.09% <0.00%> (-46.53%)` | :arrow_down: |\n\n... and [232 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4232/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "@jingfeihu it looks like some tests are failing. I converted your PR to a draft. Feel free to modify it when it is ready."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab82a88c0a76e0a51525",
    "number": 4230,
    "body": "1.support INT MX/MD mode.\r\n2.support INT over IPv4/IPv6+TCP/UDP/VXLAN/GRE/GENEVE. \r\n3.add 28 testcases for INT.\r\n",
    "head_branch": "master.hujf",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4230?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4230](https://app.codecov.io/gh/secdev/scapy/pull/4230?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5b44983) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d71014a5adf8fe7144408f78402bd1ca40e9b4a7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d71014a) will **decrease** coverage by `34.22%`.\n> Report is 5 commits behind head on master.\n> The diff coverage is `62.79%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4230       +/-   ##\n===========================================\n- Coverage   81.77%   47.55%   -34.22%     \n===========================================\n  Files         331      325        -6     \n  Lines       76721    71527     -5194     \n===========================================\n- Hits        62736    34016    -28720     \n- Misses      13985    37511    +23526     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4230?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4230?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `22.40% <20.00%> (-48.21%)` | :arrow_down: |\n| [scapy/contrib/int.py](https://app.codecov.io/gh/secdev/scapy/pull/4230?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pbnQucHk=) | `82.35% <82.35%> (ø)` | |\n| [scapy/contrib/geneve.py](https://app.codecov.io/gh/secdev/scapy/pull/4230?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9nZW5ldmUucHk=) | `51.66% <40.00%> (-45.56%)` | :arrow_down: |\n\n... and [255 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4230/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks for your PR. Your code looks good so far, besides my to comments."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab83a88c0a76e0a51526",
    "number": 4228,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Could you share an example that triggers the issue that your are aiming to fix? That will allow us to understand your PR.",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4228?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAttention: Patch coverage is `0%` with `5 lines` in your changes missing coverage. Please review.\n> Project coverage is 49.10%. Comparing base [(`d71014a`)](https://app.codecov.io/gh/secdev/scapy/commit/d71014a5adf8fe7144408f78402bd1ca40e9b4a7?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`6c901ba`)](https://app.codecov.io/gh/secdev/scapy/commit/6c901ba4bb3234367adc58a31f65939c0d4fe2c7?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n> Report is 254 commits behind head on master.\n\n| [Files with missing lines](https://app.codecov.io/gh/secdev/scapy/pull/4228?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Patch % | Lines |\n|---|---|---|\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4228?src=pr&el=tree&filepath=scapy%2Flayers%2Finet6.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | 0.00% | [5 Missing :warning: ](https://app.codecov.io/gh/secdev/scapy/pull/4228?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) |\n\n> :exclamation:  There is a different number of reports uploaded between BASE (d71014a) and HEAD (6c901ba). Click for more details.\n> \n> <details><summary>HEAD has 8 uploads less than BASE</summary>\n>\n>| Flag | BASE (d71014a) | HEAD (6c901ba) |\n>|------|------|------|\n>||11|3|\n></details>\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4228       +/-   ##\n===========================================\n- Coverage   81.77%   49.10%   -32.67%     \n===========================================\n  Files         331      331               \n  Lines       76721    76725        +4     \n===========================================\n- Hits        62736    37675    -25061     \n- Misses      13985    39050    +25065     \n```\n\n| [Files with missing lines](https://app.codecov.io/gh/secdev/scapy/pull/4228?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4228?src=pr&el=tree&filepath=scapy%2Flayers%2Finet6.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `41.04% <0.00%> (-47.50%)` | :arrow_down: |\n\n... and [234 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4228/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "@guedou When there are extra bytes after the IP packet (e.g., Ethernet trailer displayed as a Padding layer), it becomes part of `q.payload` which is appended to `fragmentable`. This causes `fragmentable` to include wrong data and to grow in size beyond the intended fragment data size. In this case warnings will be issued for the next fragment, for having a wrong `offset` field (since `fragmentable` became too large).\r\n\r\nExample that triggers the issue:\r\n```python3\r\npkt = Ether() / IPv6() / ICMPv6EchoRequest(data='b'*100)\r\nfrags = fragment6( pkt, 100 )\r\ndefragment6( frag / Padding('a'*8) for frag in frags )\r\n````\r\n\r\nMy pull request correctly builds the fragment data that is appended to `fragmentable`.",
      "Thanks for your explanation. Could you add a unit test based on your example at https://github.com/secdev/scapy/blob/master/test/scapy/layers/inet6.uts#L1817 ?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab84a88c0a76e0a51527",
    "number": 4227,
    "body": "Fix UDP packet unable to calculate validity when carrying AH extension header\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4227?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAttention: Patch coverage is `0%` with `16 lines` in your changes missing coverage. Please review.\n> Project coverage is 49.29%. Comparing base [(`d71014a`)](https://app.codecov.io/gh/secdev/scapy/commit/d71014a5adf8fe7144408f78402bd1ca40e9b4a7?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`45aee45`)](https://app.codecov.io/gh/secdev/scapy/commit/45aee45ae81a3f46b800b0902ae66b6bbf1e9cba?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n> Report is 152 commits behind head on master.\n\n> :exclamation:  There is a different number of reports uploaded between BASE (d71014a) and HEAD (45aee45). Click for more details.\n> \n> <details><summary>HEAD has 10 uploads less than BASE</summary>\n>| Flag | BASE (d71014a) | HEAD (45aee45) |\n>|------|------|------|\n>||11|1|\n></details>\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4227       +/-   ##\n===========================================\n- Coverage   81.77%   49.29%   -32.48%     \n===========================================\n  Files         331      343       +12     \n  Lines       76721    77435      +714     \n===========================================\n- Hits        62736    38175    -24561     \n- Misses      13985    39260    +25275     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4227?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4227?src=pr&el=tree&filepath=scapy%2Flayers%2Finet.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `23.74% <0.00%> (-46.88%)` | :arrow_down: |\n\n... and [273 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4227/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "@Shu-xueyuan thanks for your PR. Could you share an example that triggers the issue that you are fixing?",
      "> @Shu-xueyuan thanks for your PR. Could you share an example that triggers the issue that you are fixing?\r\n\r\n<img width=\"498\" alt=\"fail\" src=\"https://github.com/secdev/scapy/assets/35594064/6500dcca-1a93-406e-8808-3c85ab55a59c\">\r\n<img width=\"513\" alt=\"pass\" src=\"https://github.com/secdev/scapy/assets/35594064/c26890e6-43b4-4bc3-80ef-835449a2567f\">\r\n@guedou I'm very glad that you can reply to me. When I use the official scapy library to construct a UDP message carrying Authentication Header, the Checksum of the message is illegal. Using my modified scapy library to construct the same message will not have this problem. The following is my process of calling scapy: originalPacket = Ether(**ETH2_dicts) / IPv6(**IPV6_dicts) / AH(**Ah_dicts) / UDP(**UDP_dicts).",
      "> @Shu-xueyuan thanks for your PR. Could you share an example that triggers the issue that you are fixing?\r\n\r\n@guedou This is the encapsulation format of AH in transport mode：\r\n<img width=\"264\" alt=\"企业微信截图_17066847603282\" src=\"https://github.com/secdev/scapy/assets/35594064/946bcc74-eb33-4291-839a-5f5a9c2f2a17\">\r\nLooking forward to your reply.",
      "Hi. This looks good, but you need to add tests in https://github.com/secdev/scapy/blob/master/test/scapy/layers/inet.uts to make sure that this does not regress. Thanks",
      "@gpotter2 Hello, the test case has been submitted",
      "@gpotter2 Hello, when will my changes be reviewed?",
      "LGTM",
      "Please fix the flake8 issues.",
      "I noted I still need to check when this PR really applies, and compare to what's already implemented in `ipsec.py`. I will review this more in depth eventually, sorry for the delay. There were some higher priority issues blocking for 2.6.0",
      "Thanks for your reply, I totally understand. I'll be happy to wait until you have time to review my edits. If there is anything you need further explanation or assistance from me, please feel free to let me know. I fully understand the high-priority issues encountered in version 2.6.0 and hope that the issues can be resolved smoothly. Thanks!",
      "> Please fix the flake8 issues.\r\n\r\n@polybassa Thank you for your review, the issue has been resolved.",
      "Hi, sorry for the delay.\r\n\r\nSo I think that generally you should consider that `AH` is supported through the `SecurityAssociation` class only. I'm not sure if we want to support stacking `AH()` packets in the normal Scapy way, as I don't really see how those packets would be valid without the crypto that comes with it. What do you think @guedou @p-l- ?\r\n\r\nThis currently works fine for your case, and builds valid packets with the proper checksum:\r\n```python\r\n>>> sa = SecurityAssociation(AH, spi=1)\r\n>>> sa.encrypt(IP()/UDP()/b\"aaa\")\r\n```\r\nCrafting AH or ESP packets without using `SecurityAssociation` probably means using only 'null' ciphers, and I'm not sure if that's worth the extra code to support it in `inet.py`.",
      "@Shu-xueyuan could you describe the use case that you have in mind for these changes ?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab85a88c0a76e0a51528",
    "number": 4224,
    "body": "fix https://github.com/secdev/scapy/issues/4197",
    "head_branch": "tcpsession-fix-retransmit",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4224?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAttention: Patch coverage is `66.66667%` with `4 lines` in your changes are missing coverage. Please review.\n> Project coverage is 82.17%. Comparing base [(`bcf500d`)](https://app.codecov.io/gh/secdev/scapy/commit/bcf500d8720268a187eef148c91c2015d0f07e1f?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`94db327`)](https://app.codecov.io/gh/secdev/scapy/pull/4224?dropdown=coverage&src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n> Report is 2 commits behind head on master.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4224      +/-   ##\n==========================================\n+ Coverage   82.12%   82.17%   +0.04%     \n==========================================\n  Files         350      350              \n  Lines       83242    83269      +27     \n==========================================\n+ Hits        68364    68427      +63     \n+ Misses      14878    14842      -36     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4224?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/http.py](https://app.codecov.io/gh/secdev/scapy/pull/4224?src=pr&el=tree&filepath=scapy%2Flayers%2Fhttp.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2h0dHAucHk=) | `82.38% <100.00%> (+0.10%)` | :arrow_up: |\n| [scapy/sessions.py](https://app.codecov.io/gh/secdev/scapy/pull/4224?src=pr&el=tree&filepath=scapy%2Fsessions.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2Vzc2lvbnMucHk=) | `95.40% <55.55%> (-1.97%)` | :arrow_down: |\n\n... and [14 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4224/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab85a88c0a76e0a51529",
    "number": 4223,
    "body": "- fix `MultipleTypeField` on ASN.1\r\n- fix https://github.com/secdev/scapy/issues/4222",
    "head_branch": "asn1-oscp",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4223?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4223](https://app.codecov.io/gh/secdev/scapy/pull/4223?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9587100) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0dd08cd064134bcbf7c6bfbdbd356b69cdee05ac?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0dd08cd) will **decrease** coverage by `0.79%`.\n> Report is 6 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4223      +/-   ##\n==========================================\n- Coverage   81.77%   80.99%   -0.79%     \n==========================================\n  Files         331      331              \n  Lines       76693    76622      -71     \n==========================================\n- Hits        62717    62058     -659     \n- Misses      13976    14564     +588     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4223?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/asn1fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4223?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMWZpZWxkcy5weQ==) | `85.23% <100.00%> (+0.13%)` | :arrow_up: |\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4223?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.92% <100.00%> (+<0.01%)` | :arrow_up: |\n| [scapy/layers/x509.py](https://app.codecov.io/gh/secdev/scapy/pull/4223?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3g1MDkucHk=) | `97.05% <100.00%> (+4.47%)` | :arrow_up: |\n\n... and [18 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4223/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix MultipleTypeField on ASN.1 packets and OSCP (#4222) (#4223)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab86a88c0a76e0a5152a",
    "number": 4220,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nLoad USB layer by adding it to `conf.load_layers`. This is because otherwise `DLT_USBPCAP` does not get registered and USB pcaps are not correctly parsed...\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is -->\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "usb",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4220?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4220](https://app.codecov.io/gh/secdev/scapy/pull/4220?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (00d92a5) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d71014a5adf8fe7144408f78402bd1ca40e9b4a7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d71014a) will **decrease** coverage by `0.02%`.\n> Report is 4 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4220      +/-   ##\n==========================================\n- Coverage   81.77%   81.75%   -0.02%     \n==========================================\n  Files         331      331              \n  Lines       76721    76721              \n==========================================\n- Hits        62736    62726      -10     \n- Misses      13985    13995      +10     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4220?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4220?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `79.27% <ø> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4220/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "@antoniovazquezblanco does reading the pcap works if you do `load_layer(\"usb\")`? Scapy does not load all layers by default. That is the expected behavior.",
      "Yes, rdpcap is able to correctly interpret USB packets in a PCAP after `load_layer(\"usb\")`.\r\n\r\n> Scapy does not load all layers by default. That is the expected behavior.\r\n\r\nIf that is so, feel free to close this PR without a merge.\r\n\r\nThank you!",
      "Thank you"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab87a88c0a76e0a5152b",
    "number": 4218,
    "body": "- move default config setter to `_read_config_file` so that it is only set when calling `interact()`, and not just importing Scapy\r\n\r\nThis fixes the current MacOS failures",
    "head_branch": "interact-default",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4218?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4218](https://app.codecov.io/gh/secdev/scapy/pull/4218?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5405965) into [master](https://app.codecov.io/gh/secdev/scapy/commit/51c07540eef76a53cbd3cce0980bae01577fb37c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (51c0754) will **increase** coverage by `0.68%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4218      +/-   ##\n==========================================\n+ Coverage   81.07%   81.76%   +0.68%     \n==========================================\n  Files         331      331              \n  Lines       76720    76721       +1     \n==========================================\n+ Hits        62201    62729     +528     \n+ Misses      14519    13992     -527     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4218?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/main.py](https://app.codecov.io/gh/secdev/scapy/pull/4218?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbWFpbi5weQ==) | `72.39% <100.00%> (+0.49%)` | :arrow_up: |\n\n... and [20 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4218/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Only create default config file in interactive mode (#4218)\n\nThis fixes macOS unit tests, and makes a bit more sense."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab88a88c0a76e0a5152c",
    "number": 4217,
    "body": "https://www.rfc-editor.org/rfc/rfc9460.html\r\n\r\n```python\r\n>>> p = dns_resolve('_dns.one.one.one.one', 'SVCB', raw=True)\r\n>>> p.an[0].show()\r\n  rrname    = b'_dns.one.one.one.one.'\r\n  type      = SVCB\r\n  rclass    = IN\r\n  ttl       = 300\r\n  rdlen     = None\r\n  svc_priority= 1\r\n  target_name= b'one.one.one.one.'\r\n  \\svc_params\\\r\n   |###[ SvcParam ]###\r\n   |  key       = alpn\r\n   |  len       = 6\r\n   |  value     = [b'h3', b'h2']\r\n   |###[ SvcParam ]###\r\n   |  key       = dohpath\r\n   |  len       = 16\r\n   |  value     = b'/dns-query{?dns}'\r\n\r\n>>> p.an[1].show()\r\n  rrname    = b'_dns.one.one.one.one.'\r\n  type      = SVCB\r\n  rclass    = IN\r\n  ttl       = 300\r\n  rdlen     = None\r\n  svc_priority= 2\r\n  target_name= b'one.one.one.one.'\r\n  \\svc_params\\\r\n   |###[ SvcParam ]###\r\n   |  key       = alpn\r\n   |  len       = 4\r\n   |  value     = [b'dot']\r\n```\r\n\r\nThe patch was also cross-checked with Wireshark:\r\n```python\r\n>>> alpn = SvcParam(key='alpn', value=['h3', 'h2'])\r\n>>> ipv4hint = SvcParam(key='ipv4hint', value=['104.16.132.229', '104.16.133.229'])\r\n>>> ipv6hint = SvcParam(key='ipv6hint', value=['2606:4700::6810:84e5', '2606:4700::6810:85e5'])\r\n>>> httpsrr = DNSRRHTTPS(rrname='cloudflare.com', svc_priority=1, ttl=62, target_name='.', svc_params=[alpn, ipv4hint, ipv6hint])\r\n>>> tdecode(Ether()/IP()/UDP()/DNS(qd=[], an=[httpsrr]))\r\n...\r\n            Type: HTTPS (HTTPS Specific Service Endpoints) (65)\r\n            Class: IN (0x0001)\r\n            Time to live: 62 (1 minute, 2 seconds)\r\n            Data length: 61\r\n            SvcPriority: 1\r\n            TargetName: <Root>\r\n            SvcParam: alpn=h3,h2\r\n                SvcParamKey: alpn (1)\r\n                SvcParamValue length: 6\r\n                ALPN length: 2\r\n                ALPN: h3\r\n                ALPN length: 2\r\n                ALPN: h2\r\n            SvcParam: ipv4hint=104.16.132.229,104.16.133.229\r\n                SvcParamKey: ipv4hint (4)\r\n                SvcParamValue length: 8\r\n                IP: 104.16.132.229\r\n                IP: 104.16.133.229\r\n            SvcParam: ipv6hint=2606:4700::6810:84e5,2606:4700::6810:85e5\r\n                SvcParamKey: ipv6hint (6)\r\n                SvcParamValue length: 32\r\n                IP: 2606:4700::6810:84e5\r\n                IP: 2606:4700::6810:85e5\r\n\r\n```\r\n\r\nThis patch was prompted by https://github.com/systemd/systemd/pull/30661#issuecomment-1872487949 and was used to parse SVCB/HTTPS RRs produced by an upstream fuzz target and also build packets sent by another fuzzer to resolved.",
    "head_branch": "dns-svcb-https",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4217?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4217](https://app.codecov.io/gh/secdev/scapy/pull/4217?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e204392) into [master](https://app.codecov.io/gh/secdev/scapy/commit/084400f72cc4db5826e6de145ab024c76d793a4b?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (084400f) will **increase** coverage by `0.32%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4217      +/-   ##\n==========================================\n+ Coverage   81.43%   81.75%   +0.32%     \n==========================================\n  Files         331      331              \n  Lines       76708    76720      +12     \n==========================================\n+ Hits        62464    62726     +262     \n+ Misses      14244    13994     -250     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4217?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4217?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `87.36% <100.00%> (+0.24%)` | :arrow_up: |\n\n... and [12 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4217/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "DNS: add the SVCB/HTTPS resource records (#4217)\n\nhttps://www.rfc-editor.org/rfc/rfc9460.html\r\n\r\n```\r\n>>> p = dns_resolve('_dns.one.one.one.one', 'SVCB', raw=True)\r\n>>> p.an[0].show()\r\n  rrname    = b'_dns.one.one.one.one.'\r\n  type      = SVCB\r\n  rclass    = IN\r\n  ttl       = 300\r\n  rdlen     = None\r\n  svc_priority= 1\r\n  target_name= b'one.one.one.one.'\r\n  \\svc_params\\\r\n   |###[ SvcParam ]###\r\n   |  key       = alpn\r\n   |  len       = 6\r\n   |  value     = [b'h3', b'h2']\r\n   |###[ SvcParam ]###\r\n   |  key       = dohpath\r\n   |  len       = 16\r\n   |  value     = b'/dns-query{?dns}'\r\n\r\n>>> p.an[1].show()\r\n  rrname    = b'_dns.one.one.one.one.'\r\n  type      = SVCB\r\n  rclass    = IN\r\n  ttl       = 300\r\n  rdlen     = None\r\n  svc_priority= 2\r\n  target_name= b'one.one.one.one.'\r\n  \\svc_params\\\r\n   |###[ SvcParam ]###\r\n   |  key       = alpn\r\n   |  len       = 4\r\n   |  value     = [b'dot']\r\n```\r\n\r\nThe patch was also cross-checked with Wireshark:\r\n```\r\n>>> alpn = SvcParam(key='alpn', value=['h3', 'h2'])\r\n>>> ipv4hint = SvcParam(key='ipv4hint', value=['104.16.132.229', '104.16.133.229'])\r\n>>> ipv6hint = SvcParam(key='ipv6hint', value=['2606:4700::6810:84e5', '2606:4700::6810:85e5'])\r\n>>> httpsrr = DNSRRHTTPS(rrname='cloudflare.com', svc_priority=1, ttl=62, target_name='.', svc_params=[alpn, ipv4hint, ipv6hint])\r\n>>> tdecode(Ether()/IP()/UDP()/DNS(qd=[], an=[httpsrr]))\r\n...\r\n            Type: HTTPS (HTTPS Specific Service Endpoints) (65)\r\n            Class: IN (0x0001)\r\n            Time to live: 62 (1 minute, 2 seconds)\r\n            Data length: 61\r\n            SvcPriority: 1\r\n            TargetName: <Root>\r\n            SvcParam: alpn=h3,h2\r\n                SvcParamKey: alpn (1)\r\n                SvcParamValue length: 6\r\n                ALPN length: 2\r\n                ALPN: h3\r\n                ALPN length: 2\r\n                ALPN: h2\r\n            SvcParam: ipv4hint=104.16.132.229,104.16.133.229\r\n                SvcParamKey: ipv4hint (4)\r\n                SvcParamValue length: 8\r\n                IP: 104.16.132.229\r\n                IP: 104.16.133.229\r\n            SvcParam: ipv6hint=2606:4700::6810:84e5,2606:4700::6810:85e5\r\n                SvcParamKey: ipv6hint (6)\r\n                SvcParamValue length: 32\r\n                IP: 2606:4700::6810:84e5\r\n                IP: 2606:4700::6810:85e5\r\n\r\n```\r\n\r\nThis patch was prompted by https://github.com/systemd/systemd/pull/30661#issuecomment-1872487949\r\nand was used to parse SVCB/HTTPS RRs produced by an upstream fuzz target and also build\r\npackets sent by another fuzzer to resolved."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab89a88c0a76e0a5152d",
    "number": 4214,
    "body": "This PR includes a major refactor regarding several Windows specific protocols, particularily SMB2/3 and DCE/RPC. It also touches many parts of Scapy's core in order to accommodate those changes.\r\n\r\nThis includes:\r\n  - DCE/RPC:\r\n      - DCERPC_Client with support for NCACN_IP_TCP and NCACN_NP\r\n      - DCERPC_Server with support for NCACN_IP_TCP and NCACN_NP\r\n      - Finish NDR engine !\r\n      - Server/Client Endpoint mapper support - Premises of a few special clients (Netlogon, DCOM, ...)\r\n      - A few RPC interfaces (to debug/test the DCE/RPC engine. TODO: MORE !) - Documentation !\r\n  - SMB2/3:\r\n      - Protocol refactor, many more SMB2/3 structures supported\r\n      - Server (class + 'simple' util smbserver()) (2.0.2 to 3.1.1) \r\n      - Client (class + interactive CLI smbclient()) (2.0.2 only) \r\n      - SMB socket, RPC over SMB socket, etc. \r\n      - Documentation !\r\n  - Kerberos: \r\n      - KerberosSSP to use in SMB/RPC clients/servers \r\n      - Crypto: use cryptography, latest RFC8009, typing, etc. \r\n      - Util functions krb_as_req, krb_tgt_req, kpasswd (both modes), etc. \r\n      - [MS-KILE] variants, SFU and more ! \r\n      - Both MIT and Windows variations support\r\n  - NTLM: \r\n      - refactor, clean SSP \r\n      - remove relay (TODO: reimplement with the new system)\r\n  - Extensive GSSAPI / SPNEGO support !\r\n  - Ticketer++ \r\n      - CCache support: read/write \r\n      - Kerberos integration: ask/renew/resign/edit tickets \r\n      - Change ticket fields through a GUI ! and more !\r\n  - LDAP \r\n      - Fixes, ASN.1 Windows variation support \r\n      - dclocator, answering machine for \"LDAP PING\"\r\n  - Automaton: \r\n      - fixes (memory usage on Windows) \r\n      - support for EOF events \r\n      - spawn() mode, better socket.socket support and more !\r\n  - StreamSocket changes, support for TCP reassembly, etc !\r\n  - Unit tests for everything (using samba, etc.)\r\n\r\n**How to review**:\r\n- build the doc locally and browse SMB/Kerberos/DCERPC\r\n- try out `smbclient` and `smbserver` against Windows machines\r\n- look at the code\r\n\r\n\r\nfixes https://github.com/secdev/scapy/issues/4170",
    "head_branch": "the-windows-update",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4214](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1a328ea) into [master](https://app.codecov.io/gh/secdev/scapy/commit/ae79fcba3107ef3cd40aed437fe921a853b6ad6e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ae79fcb) will **increase** coverage by `0.20%`.\n> Report is 4 commits behind head on master.\n> The diff coverage is `72.71%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4214      +/-   ##\n==========================================\n+ Coverage   81.77%   81.97%   +0.20%     \n==========================================\n  Files         331      345      +14     \n  Lines       76716    81410    +4694     \n==========================================\n+ Hits        62731    66734    +4003     \n- Misses      13985    14676     +691     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvX19pbml0X18ucHk=) | `83.78% <100.00%> (+0.22%)` | :arrow_up: |\n| [scapy/arch/libpcap.py](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saWJwY2FwLnB5) | `73.80% <100.00%> (ø)` | |\n| [scapy/asn1/mib.py](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMS9taWIucHk=) | `91.27% <ø> (ø)` | |\n| [scapy/contrib/automotive/bmw/hsfz.py](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2Jtdy9oc2Z6LnB5) | `59.78% <ø> (ø)` | |\n| [scapy/contrib/automotive/doip.py](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2RvaXAucHk=) | `76.19% <ø> (ø)` | |\n| [scapy/error.py](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZXJyb3IucHk=) | `97.05% <100.00%> (+0.04%)` | :arrow_up: |\n| [scapy/layers/dhcp6.py](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3A2LnB5) | `86.04% <100.00%> (+0.15%)` | :arrow_up: |\n| [scapy/layers/http.py](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2h0dHAucHk=) | `78.73% <ø> (+0.22%)` | :arrow_up: |\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.60% <100.00%> (+0.06%)` | :arrow_up: |\n| [scapy/layers/kerberos.py](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2tlcmJlcm9zLnB5) | `54.43% <ø> (-17.09%)` | :arrow_down: |\n| ... and [42 more](https://app.codecov.io/gh/secdev/scapy/pull/4214?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4214/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Ready for review !",
      "I reviewed a few files that I have an idea about, and everything looks good so far"
    ],
    "commit_messages": [
      "The Windows Update (#4214)\n\n* The Windows Update\r\n\r\nThis PR includes a major refactor regarding several Windows specific\r\nprotocols, particularily SMB2/3 and DCE/RPC. It also touches many parts\r\nof Scapy's core in order to accommodate those changes.\r\n\r\nThis includes:\r\n  - DCE/RPC:\r\n      - DCERPC_Client with support for NCACN_IP_TCP and NCACN_NP\r\n      - DCERPC_Server with support for NCACN_IP_TCP and NCACN_NP\r\n      - Finish NDR engine !\r\n      - Server/Client Endpoint mapper support\r\n      - Premises of a few special clients (Netlogon, DCOM, ...)\r\n      - A few RPC interfaces (to debug/test the DCE/RPC engine. TODO:\r\n        MORE !)\r\n      - Documentation !\r\n  - SMB2/3:\r\n      - Protocol refactor, many more SMB2/3 structures supported\r\n      - Server (class + 'simple' util smbserver()) (2.0.2 to 3.1.1)\r\n      - Client (class + interactive CLI smbclient()) (2.0.2 only)\r\n      - SMB socket, RPC over SMB socket, etc.\r\n      - Documentation !\r\n  - Kerberos:\r\n      - KerberosSSP to use in SMB/RPC clients/servers\r\n      - Crypto: use cryptography, latest RFC8009, typing, etc.\r\n      - Util functions krb_as_req, krb_tgt_req, kpasswd (both modes), etc.\r\n      - [MS-KILE] variants, SFU and more !\r\n      - Both MIT and Windows variations support\r\n  - NTLM:\r\n      - refactor, clean SSP\r\n      - remove relay (TODO: reimplement with the new system)\r\n  - Extensive GSSAPI / SPNEGO support !\r\n  - Ticketer++\r\n      - CCache support: read/write\r\n      - Kerberos integration: ask/renew/resign/edit tickets\r\n      - Change ticket fields through a GUI ! and more !\r\n  - LDAP\r\n      - Fixes, ASN.1 Windows variation support\r\n      - dclocator, answering machine for \"LDAP PING\"\r\n  - Automaton:\r\n      - fixes (memory usage on Windows)\r\n      - support for EOF events\r\n      - spawn() mode, better socket.socket support and more !\r\n  - StreamSocket changes, support for TCP reassembly, etc !\r\n  - Unit tests for everything (using samba, etc.)\r\n\r\n* CI: remove travis and log smbclient version\r\n\r\n* Add parsing of SECURITY_DESCRIPTOR\r\n\r\n* Use UPN in NTLMSSP\r\n\r\n* Slightly more doc\r\n\r\n* More smb error handling\r\n\r\n* Minor SMB/Kerberos doc updates\r\n\r\n* Minor ticketer improvements and fixes\r\n\r\n* Conditional ACEs + SDDL\r\n\r\n* Minor SMB client API cleanups for query\r\n\r\n* Remove rfc3961 cryptography's hack for DES\r\n\r\n* Fix smbserver symlinks + smbclient guest\r\n\r\n* PEP8\r\n\r\n* Minor doc fix\r\n\r\n* Fix wrong SPNEGO auth_type"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab8aa88c0a76e0a5152e",
    "number": 4213,
    "body": "https://datatracker.ietf.org/doc/html/rfc7873#section-4\r\n\r\nThe patch was also cross-checked with Wireshark:\r\n```sh\r\ntdecode(Ether()/IPv6()/UDP()/DNS(qd=[], ar=[DNSRROPT(rdata=[EDNS0COOKIE(client_cookie=b'\\x01'*8, server_cookie=b'\\x02'*16)])]))\r\n...\r\nData length: 28\r\nOption: COOKIE\r\n    Option Code: COOKIE (10)\r\n    Option Length: 24\r\n    Option Data: 010101010101010102020202020202020202020202020202\r\n    Client Cookie: 0101010101010101\r\n    Server Cookie: 02020202020202020202020202020202\r\n```",
    "head_branch": "dns-cookies",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4213?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4213](https://app.codecov.io/gh/secdev/scapy/pull/4213?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2feb7ca) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0dd08cd064134bcbf7c6bfbdbd356b69cdee05ac?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0dd08cd) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4213      +/-   ##\n==========================================\n- Coverage   81.77%   81.77%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76693    76696       +3     \n==========================================\n+ Hits        62717    62718       +1     \n- Misses      13976    13978       +2     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4213?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4213?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `87.12% <100.00%> (+0.06%)` | :arrow_up: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4213/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "DNS: add the DNS COOKIE EDNS(0) option\n\nhttps://datatracker.ietf.org/doc/html/rfc7873#section-4\n\nThe patch was cross-checked with Wireshark:\n```\ntdecode(Ether()/IPv6()/UDP()/DNS(qd=[], ar=[DNSRROPT(rdata=[EDNS0COOKIE(client_cookie=b'\\x01'*8, server_cookie=b'\\x02'*16)])]))\n...\nData length: 28\nOption: COOKIE\n    Option Code: COOKIE (10)\n    Option Length: 24\n    Option Data: 010101010101010102020202020202020202020202020202\n    Client Cookie: 0101010101010101\n    Server Cookie: 02020202020202020202020202020202\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab8ba88c0a76e0a5152f",
    "number": 4211,
    "body": "The patch was cross-checked with Wireshark:\r\n```\r\ntdecode(Ether()/IP()/UDP()/DNS(ar=[DNSRROPT(rdata=[EDNS0DAU(alg_code=['Ed25519', 'Ed448'])])]))\r\n...\r\nOption: DAU - DNSSEC Algorithm Understood (RFC6975)\r\n    Option Code: DAU - DNSSEC Algorithm Understood (RFC6975) (5)\r\n    Option Length: 2\r\n    Option Data: 0f10\r\n    DAU: Ed25519 (15)\r\n    DAU: Ed448 (16)\r\n```\r\n\r\nIt's a follow-up to 0dd08cd064134bcbf7c6bfbdbd356b69cdee05ac\r\n",
    "head_branch": "dnssec-algs",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4211?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4211](https://app.codecov.io/gh/secdev/scapy/pull/4211?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f37b9f9) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0dd08cd064134bcbf7c6bfbdbd356b69cdee05ac?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0dd08cd) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4211      +/-   ##\n==========================================\n- Coverage   81.77%   81.77%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76693    76693              \n==========================================\n- Hits        62717    62715       -2     \n- Misses      13976    13978       +2     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4211?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4211?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `87.06% <ø> (ø)` | |\n\n... and [2 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4211/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "DNS: update DNSSEC algorithm numbers\n\nThe patch was cross-checked with Wireshark:\n```\ntdecode(Ether()/IP()/UDP()/DNS(ar=[DNSRROPT(rdata=[EDNS0DAU(alg_code=['Ed25519', 'Ed448'])])]))\n...\nOption: DAU - DNSSEC Algorithm Understood (RFC6975)\n    Option Code: DAU - DNSSEC Algorithm Understood (RFC6975) (5)\n    Option Length: 2\n    Option Data: 0f10\n    DAU: Ed25519 (15)\n    DAU: Ed448 (16)\n```\n\nIt's a follow-up to 0dd08cd064134bcbf7c6bfbdbd356b69cdee05ac"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab8ca88c0a76e0a51530",
    "number": 4210,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nIssues 4206, Typo was noted and i fixed it.\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\nNone\r\n<!-- if required - outline impacts on other parts of the library -->\r\nI don't know the details, but since it's just a name change, it seems to me that there should be no problem.\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n[4206](https://github.com/secdev/scapy/issues/4206)",
    "head_branch": "4206",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4210?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4210](https://app.codecov.io/gh/secdev/scapy/pull/4210?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a044884) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0dd08cd064134bcbf7c6bfbdbd356b69cdee05ac?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0dd08cd) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4210   +/-   ##\n=======================================\n  Coverage   81.77%   81.77%           \n=======================================\n  Files         331      331           \n  Lines       76693    76693           \n=======================================\n  Hits        62717    62717           \n  Misses      13976    13976           \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4210?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dot11.py](https://app.codecov.io/gh/secdev/scapy/pull/4210?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RvdDExLnB5) | `91.37% <ø> (ø)` | |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4210/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Please remove your duplicated imports and minimize your changes in this PR!",
      "i always use 'isort' and 'black'.\r\ni need to off these?",
      "Yes please, keep your changes at a minimum\r\n\r\n--\r\nMit freundlichen Grüßen\r\n\r\nDr. Nils Weiß\r\n\r\ndissecto GmbH\r\nFranz-Mayer-Str. 1\r\n93053 Regensburg\r\n________________________________\r\nFrom: Teppei.F ***@***.***>\r\nSent: Monday, December 18, 2023 4:14:19 PM\r\nTo: secdev/scapy ***@***.***>\r\nCc: Nils Weiß ***@***.***>; Comment ***@***.***>\r\nSubject: Re: [secdev/scapy] fix issue 4206 (PR #4210)\r\n\r\n\r\ni always use 'isort' and 'black'.\r\ni need to off these?\r\n\r\n—\r\nReply to this email directly, view it on GitHub<https://github.com/secdev/scapy/pull/4210#issuecomment-1860776900>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAMZGF35KTC4X6QYKPPFMGDYKBMUXAVCNFSM6AAAAABAUWVJHWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNRQG43TMOJQGA>.\r\nYou are receiving this because you commented.Message ID: ***@***.***>\r\n",
      "I disabled isort and black because the differences were too large when using them."
    ],
    "commit_messages": [
      "Fix typo (#4210)\n\nCo-authored-by: fukutomi <150325208+kyd-ft@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab8da88c0a76e0a51531",
    "number": 4208,
    "body": null,
    "head_branch": "gh_can_socket_aux_data",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4208?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4208](https://app.codecov.io/gh/secdev/scapy/pull/4208?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ff8886d) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0dd08cd064134bcbf7c6bfbdbd356b69cdee05ac?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0dd08cd) will **decrease** coverage by `0.40%`.\n> The diff coverage is `66.66%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4208      +/-   ##\n==========================================\n- Coverage   81.77%   81.38%   -0.40%     \n==========================================\n  Files         331      331              \n  Lines       76693    76705      +12     \n==========================================\n- Hits        62717    62424     -293     \n- Misses      13976    14281     +305     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4208?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/isotp/isotp\\_native\\_socket.py](https://app.codecov.io/gh/secdev/scapy/pull/4208?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9uYXRpdmVfc29ja2V0LnB5) | `43.39% <0.00%> (ø)` | |\n| [scapy/contrib/cansocket\\_native.py](https://app.codecov.io/gh/secdev/scapy/pull/4208?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfbmF0aXZlLnB5) | `78.57% <70.58%> (-6.16%)` | :arrow_down: |\n\n... and [12 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4208/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "This PR aims to fix an issue with timestamps of packets from VCAN sockets on aarch64",
      "More context. This PR solves an issue appearing on `aarch64` kernel versions in combination with VCAN sockets. The function `get_last_pkt_timestamp` (https://github.com/secdev/scapy/blob/0dd08cd064134bcbf7c6bfbdbd356b69cdee05ac/scapy/contrib/cansocket_native.py#L137) returns an invalid time value for VCAN sockets on these kernel versions. This PR fixes it by using AUX data instead. "
    ],
    "commit_messages": [
      "Use aux data in NativeCANSocket to determine timestamp of packet (#4208)\n\n* Use aux data in NativeCANSocket to determine timestamp of packet\r\n\r\n* debug unit test\r\n\r\n* fix unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab8da88c0a76e0a51532",
    "number": 4207,
    "body": "# Overview\r\nUpdate the comment for the `iface` argument for the `AsyncSniffer` class as it was incorrect.\r\n\r\n# Details\r\nThe readthedocs documentation claims the following functionality for the `iface` argument given to the `AsyncSniffer` class: \"interface or list of interfaces (default: None for sniffing on all interfaces)\". In reality if `iface` is `None`, then `conf.iface` is used which is the \"default interface\", not all interfaces. This lead to a lot of confusion when an application was able to sniff packets just fine on my computer, but not on another computer.\r\n\r\nLine that handles `iface` being `None`: https://github.com/secdev/scapy/blob/master/scapy/sendrecv.py#L1188\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4207?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4207](https://app.codecov.io/gh/secdev/scapy/pull/4207?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (054bc15) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0dd08cd064134bcbf7c6bfbdbd356b69cdee05ac?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0dd08cd) will **decrease** coverage by `30.86%`.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4207       +/-   ##\n===========================================\n- Coverage   81.77%   50.92%   -30.86%     \n===========================================\n  Files         331      324        -7     \n  Lines       76693    71414     -5279     \n===========================================\n- Hits        62717    36365    -26352     \n- Misses      13976    35049    +21073     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4207?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/sendrecv.py](https://app.codecov.io/gh/secdev/scapy/pull/4207?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `39.61% <ø> (-48.37%)` | :arrow_down: |\n\n... and [251 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4207/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Correct misleading documentation\n\nUpdate the comment for the `iface` argument for the AsyncSniffer class as it was incorrect."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab8ea88c0a76e0a51533",
    "number": 4205,
    "body": "Docstrings are added to ldp.py. Docstrings are written from https://datatracker.ietf.org/doc/html/rfc5036. No tests are needed as only docstrings are added.\r\n",
    "head_branch": "ldp-docstrings",
    "is_a_fork": true,
    "comments": [
      "I don't think that copy/pasting the RFC is useful.\r\nScapy shouldn't really be used instead of an RFC. Adding references to the sections of the RFC or the real RFC name is useful, but copy/pasting the description doesn't bring (IMO) much.\r\n\r\nThanks anyways for your interest in Scapy !",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4205?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4205](https://app.codecov.io/gh/secdev/scapy/pull/4205?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (35c5ef0) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0dd08cd064134bcbf7c6bfbdbd356b69cdee05ac?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0dd08cd) will **decrease** coverage by `30.86%`.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4205       +/-   ##\n===========================================\n- Coverage   81.77%   50.92%   -30.86%     \n===========================================\n  Files         331      324        -7     \n  Lines       76693    71414     -5279     \n===========================================\n- Hits        62717    36366    -26351     \n- Misses      13976    35048    +21072     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4205?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/ldp.py](https://app.codecov.io/gh/secdev/scapy/pull/4205?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9sZHAucHk=) | `35.51% <ø> (-50.62%)` | :arrow_down: |\n\n... and [251 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4205/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab8fa88c0a76e0a51534",
    "number": 4203,
    "body": "Fixes typo in GTPv2.",
    "head_branch": "fix-typo",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4203?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4203](https://app.codecov.io/gh/secdev/scapy/pull/4203?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cb1c29c) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d33c7b491d398cf1704b33d008aaa5fcafbe69e9?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d33c7b4) will **decrease** coverage by `0.01%`.\n> Report is 6 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4203      +/-   ##\n==========================================\n- Coverage   81.77%   81.77%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76688    76694       +6     \n==========================================\n- Hits        62714    62713       -1     \n- Misses      13974    13981       +7     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4203?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/gtp\\_v2.py](https://app.codecov.io/gh/secdev/scapy/pull/4203?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ndHBfdjIucHk=) | `95.42% <100.00%> (+0.01%)` | :arrow_up: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4203/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Could you a `deprecated_fields` value (search for other example in the code) to alias the old one to the new one? Thanks"
    ],
    "commit_messages": [
      "GTPv2: Fix typo in ChargingCharacteristics (#4203)\n\n* Fix typo in ChargingCharacteristics\r\n\r\n* Add deprecated_fields to ChargingCharacteristics"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab90a88c0a76e0a51535",
    "number": 4202,
    "body": "According to\r\nhttps://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4 it's 15.",
    "head_branch": "dns-mx-tweaks",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4202?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4202](https://app.codecov.io/gh/secdev/scapy/pull/4202?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (98a0588) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d33c7b491d398cf1704b33d008aaa5fcafbe69e9?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d33c7b4) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4202      +/-   ##\n==========================================\n- Coverage   81.77%   81.77%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76688    76688              \n==========================================\n- Hits        62714    62713       -1     \n- Misses      13974    13975       +1     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4202?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4202?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `86.95% <ø> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4202/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "DNS: use the right type in MX RRs\n\nAccording to\nhttps://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4\nit's 15."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab91a88c0a76e0a51536",
    "number": 4200,
    "body": "These options are used for signaling cryptographic algorithm understanding in DNS Security Extensions (DNSSEC): https://www.rfc-editor.org/rfc/rfc6975.html\r\n\r\nThe patch was cross-checked with Wireshark:\r\n```sh\r\n>>> dau = EDNS0DAU(alg_code=['RSA/SHA-256', 'RSA/SHA-512'])\r\n>>> dhu = EDNS0DHU(alg_code=['SHA-1', 'SHA-256', 'SHA-384'])\r\n>>> n3u = EDNS0N3U(alg_code=['SHA-1'])\r\n>>> tdecode(Ether()/IP()/UDP()/DNS(ar=[DNSRROPT(rdata=[dau, dhu, n3u])]))\r\n...\r\n            Option: DAU - DNSSEC Algorithm Understood (RFC6975)\r\n                Option Code: DAU - DNSSEC Algorithm Understood (RFC6975) (5)\r\n                Option Length: 2\r\n                Option Data: 080a\r\n                DAU: RSA/SHA-256 (8)\r\n                DAU: RSA/SHA-512 (10)\r\n            Option: DHU - DS Hash Understood (RFC6975)\r\n                Option Code: DHU - DS Hash Understood (RFC6975) (6)\r\n                Option Length: 3\r\n                Option Data: 010204\r\n                DHU: SHA-1 (1)\r\n                DHU: SHA-256 (2)\r\n                DHU: SHA-384 (4)\r\n            Option: N3U - NSEC3 Hash Understood (RFC6975)\r\n                Option Code: N3U - NSEC3 Hash Understood (RFC6975) (7)\r\n                Option Length: 1\r\n                Option Data: 01\r\n                N3U: SHA-1 (1)\r\n```\r\n",
    "head_branch": "dnssec-opts",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4200?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4200](https://app.codecov.io/gh/secdev/scapy/pull/4200?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9005ba7) into [master](https://app.codecov.io/gh/secdev/scapy/commit/e80b3d4457a30c361beb31e53e416cddb5bbbbb4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e80b3d4) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4200      +/-   ##\n==========================================\n- Coverage   81.77%   81.77%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76688    76693       +5     \n==========================================\n+ Hits        62715    62717       +2     \n- Misses      13973    13976       +3     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4200?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4200?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `87.06% <100.00%> (+0.10%)` | :arrow_up: |\n\n... and [2 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4200/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "DNS: add the DAU, DHU and N3U EDNS(0) options\n\nThese options are used for signaling cryptographic algorithm\nunderstanding in DNS Security Extensions (DNSSEC):\nhttps://www.rfc-editor.org/rfc/rfc6975.html\n\nThe patch was cross-checked with Wireshark:\n```sh\n>>> dau = EDNS0DAU(alg_code=['RSA/SHA-256', 'RSA/SHA-512'])\n>>> dhu = EDNS0DHU(alg_code=['SHA-1', 'SHA-256', 'SHA-384'])\n>>> n3u = EDNS0N3U(alg_code=['SHA-1'])\n>>> tdecode(Ether()/IP()/UDP()/DNS(ar=[DNSRROPT(rdata=[dau, dhu, n3u])]))\n...\n            Option: DAU - DNSSEC Algorithm Understood (RFC6975)\n                Option Code: DAU - DNSSEC Algorithm Understood (RFC6975) (5)\n                Option Length: 2\n                Option Data: 080a\n                DAU: RSA/SHA-256 (8)\n                DAU: RSA/SHA-512 (10)\n            Option: DHU - DS Hash Understood (RFC6975)\n                Option Code: DHU - DS Hash Understood (RFC6975) (6)\n                Option Length: 3\n                Option Data: 010204\n                DHU: SHA-1 (1)\n                DHU: SHA-256 (2)\n                DHU: SHA-384 (4)\n            Option: N3U - NSEC3 Hash Understood (RFC6975)\n                Option Code: N3U - NSEC3 Hash Understood (RFC6975) (7)\n                Option Length: 1\n                Option Data: 01\n                N3U: SHA-1 (1)\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab91a88c0a76e0a51537",
    "number": 4199,
    "body": "Without this patch EDNS0ClientSubnet and EDNS0ExtendedDNSError consume all the bytes (including all the options following them):\r\n```sh\r\n>>> DNSRROPT(raw(DNSRROPT(rdata=[EDNS0ExtendedDNSError(), EDNS0TLV()]))).rdata\r\n[<EDNS0ExtendedDNSError  optcode=Extended DNS Error optlen=2 info_code=Other extra_text=b'' |<Raw  load=b'\\x00\\x00\\x00\\x00' |>>]\r\n```\r\n\r\nWith this patch applied the options are fully split:\r\n```sh\r\n>>> DNSRROPT(raw(DNSRROPT(rdata=[EDNS0ExtendedDNSError(), EDNS0TLV()]))).rdata\r\n[<EDNS0ExtendedDNSError  optcode=Extended DNS Error optlen=2 info_code=Other extra_text=b'' |>,\r\n <EDNS0TLV  optcode=Reserved optlen=0 optdata=b'' |>]\r\n```\r\n",
    "head_branch": "split-edns0-opts",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4199?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4199](https://app.codecov.io/gh/secdev/scapy/pull/4199?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d02a8e0) into [master](https://app.codecov.io/gh/secdev/scapy/commit/3eee39e1b13f90ac256038d693b5f70d8647c9f2?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3eee39e) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4199      +/-   ##\n==========================================\n- Coverage   81.94%   81.94%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76654    76658       +4     \n==========================================\n+ Hits        62817    62818       +1     \n- Misses      13837    13840       +3     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4199?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4199?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `86.95% <100.00%> (+0.08%)` | :arrow_up: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4199/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "DNS: tweak extract_padding in EDNS(0) options\n\nWithout this patch EDNS0ClientSubnet and EDNS0ExtendedDNSError consume\nall the bytes (including all the options following them):\n```sh\n>>> DNSRROPT(raw(DNSRROPT(rdata=[EDNS0ExtendedDNSError(), EDNS0TLV()]))).rdata\n[<EDNS0ExtendedDNSError  optcode=Extended DNS Error optlen=2 info_code=Other extra_text=b'' |<Raw  load=b'\\x00\\x00\\x00\\x00' |>>]\n```\n\nWith this patch applied the options are fully split:\n```sh\n>>> DNSRROPT(raw(DNSRROPT(rdata=[EDNS0ExtendedDNSError(), EDNS0TLV()]))).rdata\n[<EDNS0ExtendedDNSError  optcode=Extended DNS Error optlen=2 info_code=Other extra_text=b'' |>,\n <EDNS0TLV  optcode=Reserved optlen=0 optdata=b'' |>]\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab92a88c0a76e0a51538",
    "number": 4195,
    "body": "This PR:\r\n- restores the use of a modified Wagner Fischer algorithm in `hexdiff`, alongside `difflib`: in some cases, it's far more accurate than `difflib`. The drawback being that it is much less efficient (o(n^2)) making it unusable on very big strings.\r\n- keep the two algorithms side by side, and chose which one to use based on the estimated complexity. We only use `difflib` if the complexity is too high to use `wagnerfischer`.\r\n- document the implementation of our (phil's?) Wagner Fischer algorithm\r\n\r\nThis PR partially reverts https://github.com/secdev/scapy/pull/2849. It's one of those days where I finally understand what the cryptic code I previously thought \"was dumb\" did... and it wasn't dumb :) Props to older maintainers for keeping the history, having https://github.com/secdev/scapy/commit/2b99db22f15e75a03410acf92be1b571388822b2 was very useful for my understanding.\r\n\r\nFor reviewers, test:\r\n\r\n```\r\nhexdiff(IP(dst=\"192.168.0.100\", ttl=2)/UDP()/DNS(), IP(dst=\"192.168.0.200\", ttl=1)/TCP()/DNS())\r\nhexdiff(IP(dst=\"192.168.0.100\", ttl=2)/UDP()/DNS(), IP(dst=\"192.168.0.200\", ttl=1)/TCP()/DNS(), algo=\"difflib\")\r\n```",
    "head_branch": "hexdiff",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4195?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4195](https://app.codecov.io/gh/secdev/scapy/pull/4195?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2d0b2ee) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5a2dbf08d76367ef8c392c9ff9c62674c9732d2f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5a2dbf0) will **decrease** coverage by `0.01%`.\n> The diff coverage is `90.19%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4195      +/-   ##\n==========================================\n- Coverage   81.95%   81.94%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76647    76677      +30     \n==========================================\n+ Hits        62813    62835      +22     \n- Misses      13834    13842       +8     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4195?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4195?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `78.42% <90.19%> (+0.09%)` | :arrow_up: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4195/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "hexdiff: 2 algorithms, doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab93a88c0a76e0a51539",
    "number": 4194,
    "body": "Added docstrings to the file carp.py . Unit tests are not relevant because no change has been done to the code. Only docstrings added. Fixed the issue in previous pull request.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4194?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4194](https://app.codecov.io/gh/secdev/scapy/pull/4194?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4d3786d) into [master](https://app.codecov.io/gh/secdev/scapy/commit/83918924c3227cd16427451ad8ea24766d9db456?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8391892) will **decrease** coverage by `31.03%`.\n> Report is 10 commits behind head on master.\n> The diff coverage is `0.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4194       +/-   ##\n===========================================\n- Coverage   81.94%   50.91%   -31.03%     \n===========================================\n  Files         331      325        -6     \n  Lines       76624    71430     -5194     \n===========================================\n- Hits        62788    36368    -26420     \n- Misses      13836    35062    +21226     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4194?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/carp.py](https://app.codecov.io/gh/secdev/scapy/pull/4194?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYXJwLnB5) | `58.06% <ø> (-41.94%)` | :arrow_down: |\n| [scapy/contrib/ldp.py](https://app.codecov.io/gh/secdev/scapy/pull/4194?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9sZHAucHk=) | `35.51% <ø> (-50.62%)` | :arrow_down: |\n| [scapy/contrib/quic.py](https://app.codecov.io/gh/secdev/scapy/pull/4194?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9xdWljLnB5) | `0.00% <0.00%> (ø)` | |\n\n... and [252 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4194/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks for the PR !\r\nI must say that those docstrings do not look very... useful. `\"Used for confidentiality.\"` then `pkt: bytes` doesn't bring much to the table.",
      "This PR makes no sense. Still bad docstrings and now quic packed in. Closing",
      "The last commit was wrongly committed by me. I did not mean to make the last commit here or open a PR for last commit. I wanted to make it to my forked repo. Sorry."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab94a88c0a76e0a5153a",
    "number": 4193,
    "body": " This PR should prevent an accidental close of the socket if errno 70 is received. ",
    "head_branch": "gh_isotp_native_socket_fix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4193?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4193](https://app.codecov.io/gh/secdev/scapy/pull/4193?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (178e0bc) into [master](https://app.codecov.io/gh/secdev/scapy/commit/088d58ac2aee30091ad389b3625e46dffd651647?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (088d58a) will **decrease** coverage by `0.01%`.\n> The diff coverage is `0.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4193      +/-   ##\n==========================================\n- Coverage   81.95%   81.94%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76644    76647       +3     \n==========================================\n- Hits        62812    62810       -2     \n- Misses      13832    13837       +5     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4193?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/isotp/isotp\\_native\\_socket.py](https://app.codecov.io/gh/secdev/scapy/pull/4193?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9uYXRpdmVfc29ja2V0LnB5) | `43.39% <0.00%> (-0.84%)` | :arrow_down: |\n\n... and [2 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4193/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Add additional errno handling to ISOTPNativeSocket to prevent accidental close (#4193)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab95a88c0a76e0a5153b",
    "number": 4192,
    "body": "Added docstrings to the file carp.py . Unit tests are not relevant because no change has been done to the code. Only docstrings added.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4192?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4192](https://app.codecov.io/gh/secdev/scapy/pull/4192?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e4fb994) into [master](https://app.codecov.io/gh/secdev/scapy/commit/83918924c3227cd16427451ad8ea24766d9db456?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8391892) will **increase** coverage by `0.00%`.\n> Report is 3 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4192   +/-   ##\n=======================================\n  Coverage   81.94%   81.94%           \n=======================================\n  Files         331      331           \n  Lines       76624    76624           \n=======================================\n+ Hits        62788    62790    +2     \n+ Misses      13836    13834    -2     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4192?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/carp.py](https://app.codecov.io/gh/secdev/scapy/pull/4192?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYXJwLnB5) | `100.00% <ø> (ø)` | |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4192/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab96a88c0a76e0a5153c",
    "number": 4190,
    "body": "This reverts commit ef1875acdcd6ae65d30311c093288f40fc0e1b9d.\r\n\r\n",
    "head_branch": "gh_revert",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4190?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4190](https://app.codecov.io/gh/secdev/scapy/pull/4190?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8a976cf) into [master](https://app.codecov.io/gh/secdev/scapy/commit/ef1875acdcd6ae65d30311c093288f40fc0e1b9d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ef1875a) will **decrease** coverage by `0.23%`.\n> Report is 2 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4190      +/-   ##\n==========================================\n- Coverage   81.94%   81.71%   -0.23%     \n==========================================\n  Files         331      331              \n  Lines       76624    76624              \n==========================================\n- Hits        62791    62615     -176     \n- Misses      13833    14009     +176     \n```\n\n[see 16 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4190/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Should I merge this?",
      "In my opinion, no. I just accidentally pushed to master. So if you are OK with the change on master, it doesn't need to be reverted. ",
      "Sorry that this happened! I was trying code-spaces the first time and \"clicked\" on the wrong button. Which makes me think if we need more restrictive rules to protect the master branch"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab96a88c0a76e0a5153d",
    "number": 4189,
    "body": "Just fixed a broken link",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4189?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4189](https://app.codecov.io/gh/secdev/scapy/pull/4189?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a70a066) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5160430bd16c6084d5aef2a10e47dc0455aace40?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5160430) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4189      +/-   ##\n==========================================\n- Coverage   81.89%   81.88%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76624    76624              \n==========================================\n- Hits        62748    62744       -4     \n- Misses      13876    13880       +4     \n```\n\n[see 5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4189/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix broken documentation link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab97a88c0a76e0a5153e",
    "number": 4188,
    "body": "- improve main.interact banner()\r\n- adds extensions",
    "head_branch": "plugin-manager",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4188?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4188](https://app.codecov.io/gh/secdev/scapy/pull/4188?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (372359a) into [master](https://app.codecov.io/gh/secdev/scapy/commit/6294c6e48c21bcc61a7ce24b27d3ceddd53d356f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6294c6e) will **decrease** coverage by `0.04%`.\n> Report is 2 commits behind head on master.\n> The diff coverage is `56.43%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4188      +/-   ##\n==========================================\n- Coverage   81.90%   81.87%   -0.04%     \n==========================================\n  Files         330      330              \n  Lines       76380    76469      +89     \n==========================================\n+ Hits        62561    62607      +46     \n- Misses      13819    13862      +43     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4188?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4188?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9fX2luaXRfXy5weQ==) | `100.00% <100.00%> (ø)` | |\n| [scapy/layers/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4188?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL19faW5pdF9fLnB5) | `100.00% <100.00%> (ø)` | |\n| [scapy/modules/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4188?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbW9kdWxlcy9fX2luaXRfXy5weQ==) | `100.00% <100.00%> (ø)` | |\n| [scapy/main.py](https://app.codecov.io/gh/secdev/scapy/pull/4188?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbWFpbi5weQ==) | `71.89% <68.00%> (-0.02%)` | :arrow_down: |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4188?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `80.26% <50.68%> (-4.07%)` | :arrow_down: |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4188/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Improve main.interact() banner + support exts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab98a88c0a76e0a5153f",
    "number": 4187,
    "body": "- cache `get_if_hwaddr` in the `NetworkInterface` as `get_if_hwaddr` is slow.\r\n\r\nThis speeds up `bytes(Ether())` by ~30%.\r\n\r\n- minor fix in `connect_from_ip`",
    "head_branch": "cache-hwaddr",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4187?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4187](https://app.codecov.io/gh/secdev/scapy/pull/4187?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (80f75de) into [master](https://app.codecov.io/gh/secdev/scapy/commit/6294c6e48c21bcc61a7ce24b27d3ceddd53d356f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6294c6e) will **decrease** coverage by `0.01%`.\n> The diff coverage is `63.63%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4187      +/-   ##\n==========================================\n- Coverage   81.90%   81.90%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76380    76381       +1     \n==========================================\n- Hits        62561    62558       -3     \n- Misses      13819    13823       +4     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4187?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/libpcap.py](https://app.codecov.io/gh/secdev/scapy/pull/4187?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saWJwY2FwLnB5) | `74.44% <100.00%> (+0.08%)` | :arrow_up: |\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4187?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.91% <100.00%> (ø)` | |\n| [scapy/interfaces.py](https://app.codecov.io/gh/secdev/scapy/pull/4187?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `96.60% <100.00%> (ø)` | |\n| [scapy/layers/l2.py](https://app.codecov.io/gh/secdev/scapy/pull/4187?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `85.14% <100.00%> (+0.31%)` | :arrow_up: |\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4187?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `70.54% <20.00%> (-0.17%)` | :arrow_down: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4187/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Cache `get_if_hwaddr` for SourceMACField (#4187)\n\n* Cache get_if_hwaddr for SourceMACField\r\n\r\n* Cache gateway before poisoning in connect_from_ip\r\n\r\n* Apply suggestion by guedou\r\n\r\nCo-authored-by: Guillaume Valadon <guillaume@valadon.net>\r\n\r\n* Fix PEP8\r\n\r\n---------\r\n\r\nCo-authored-by: Guillaume Valadon <guillaume@valadon.net>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab99a88c0a76e0a51540",
    "number": 4186,
    "body": "- disable enumerator tests as they keep faling on windows https://github.com/secdev/scapy/issues/4185",
    "head_branch": "enumerator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Disable enumerator tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab9aa88c0a76e0a51541",
    "number": 4184,
    "body": "fix https://github.com/secdev/scapy/pull/4141 being trash",
    "head_branch": "geneve",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4184?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4184](https://app.codecov.io/gh/secdev/scapy/pull/4184?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f186ea6) into [master](https://app.codecov.io/gh/secdev/scapy/commit/81aa7fa918ee69750f7c6ef1aefae71e9310d8d8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (81aa7fa) will **decrease** coverage by `0.78%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n> :exclamation: Current head f186ea6 differs from pull request most recent head faf4bc8. Consider uploading reports for the commit faf4bc8 to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4184      +/-   ##\n==========================================\n- Coverage   81.77%   81.00%   -0.78%     \n==========================================\n  Files         330      330              \n  Lines       76381    76380       -1     \n==========================================\n- Hits        62463    61871     -592     \n- Misses      13918    14509     +591     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4184?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/geneve.py](https://app.codecov.io/gh/secdev/scapy/pull/4184?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9nZW5ldmUucHk=) | `97.22% <100.00%> (-0.08%)` | :arrow_down: |\n\n... and [16 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4184/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix geneve tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab9ba88c0a76e0a51542",
    "number": 4181,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nFix port number in the document of SYN Scan usage.\r\n",
    "head_branch": "fix/syn-scans-documents",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4181?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4181](https://app.codecov.io/gh/secdev/scapy/pull/4181?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1733b11) into [master](https://app.codecov.io/gh/secdev/scapy/commit/7e19b7b99ebefdf4e0c89e71273f39c4bff51be5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7e19b7b) will **decrease** coverage by `0.01%`.\n> Report is 12 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4181      +/-   ##\n==========================================\n- Coverage   81.79%   81.78%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76378    76378              \n==========================================\n- Hits        62470    62469       -1     \n- Misses      13908    13909       +1     \n```\n\n[see 3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4181/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix documentation (#4181)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab9ba88c0a76e0a51543",
    "number": 4179,
    "body": "- bump mypy version to 1.7.0 (discovers more issues) and fix the typing issues triggered by the bump\r\n- small cleanup to the tox.ini config, simplify the defaults. If tox was not buggy (https://github.com/tox-dev/tox/issues/3153) this would have restablished simply typing `tox` to autoselect the environment.",
    "head_branch": "readthedocsversion",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4179?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4179](https://app.codecov.io/gh/secdev/scapy/pull/4179?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4c987f9) into [master](https://app.codecov.io/gh/secdev/scapy/commit/a0dc5025f2c5039600ec54872a8209a94d4563a3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a0dc502) will **decrease** coverage by `30.66%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `89.28%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4179       +/-   ##\n===========================================\n- Coverage   81.79%   51.13%   -30.66%     \n===========================================\n  Files         330      323        -7     \n  Lines       76369    71265     -5104     \n===========================================\n- Hits        62465    36444    -26021     \n- Misses      13904    34821    +20917     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4179?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/asn1fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4179?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMWZpZWxkcy5weQ==) | `53.27% <75.00%> (-31.83%)` | :arrow_down: |\n| [scapy/compat.py](https://app.codecov.io/gh/secdev/scapy/pull/4179?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29tcGF0LnB5) | `78.12% <66.66%> (-13.68%)` | :arrow_down: |\n| [scapy/plist.py](https://app.codecov.io/gh/secdev/scapy/pull/4179?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGxpc3QucHk=) | `29.24% <0.00%> (-56.40%)` | :arrow_down: |\n| [scapy/themes.py](https://app.codecov.io/gh/secdev/scapy/pull/4179?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdGhlbWVzLnB5) | `78.69% <93.54%> (-12.95%)` | :arrow_down: |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4179?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `59.21% <91.11%> (-23.82%)` | :arrow_down: |\n\n... and [246 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4179/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Last self merged stuff. Basically just bumping versions it's not interesting."
    ],
    "commit_messages": [
      "Bump mypy to 1.7.0 and tox"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab9ca88c0a76e0a51544",
    "number": 4178,
    "body": "- update tests build python versions (add 3.11 and 3.12)\r\n- update readthedocs build python version\r\n- mark 3.11 and 3.12 as supported",
    "head_branch": "readthedocsversion",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4178?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4178](https://app.codecov.io/gh/secdev/scapy/pull/4178?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1bf6683) into [master](https://app.codecov.io/gh/secdev/scapy/commit/42badf86db5f9d334f4333306df445094b71e4ad?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (42badf8) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4178      +/-   ##\n==========================================\n- Coverage   81.79%   81.79%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76369    76369              \n==========================================\n- Hits        62466    62463       -3     \n- Misses      13903    13906       +3     \n```\n\n[see 6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4178/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Support 3.11 and 3.12"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab9da88c0a76e0a51545",
    "number": 4177,
    "body": "- Currently wrongly shows \"2023.XX.XX\" as the Scapy version on https://scapy.readthedocs.io/en/latest/",
    "head_branch": "readthedocsversion",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4177?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4177](https://app.codecov.io/gh/secdev/scapy/pull/4177?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (262e8ed) into [master](https://app.codecov.io/gh/secdev/scapy/commit/c4b6ef76ee3a1c00190008849f676b2bd212dca8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c4b6ef7) will **decrease** coverage by `0.34%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4177      +/-   ##\n==========================================\n- Coverage   81.79%   81.45%   -0.34%     \n==========================================\n  Files         330      330              \n  Lines       76369    76369              \n==========================================\n- Hits        62467    62208     -259     \n- Misses      13902    14161     +259     \n```\n\n[see 12 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4177/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "ReadTheDocs: fix displayed Scapy version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab9ea88c0a76e0a51546",
    "number": 4176,
    "body": "- add a basic SSHv2 implementation (not loaded by default)\r\n- tests",
    "head_branch": "ssh",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4176?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4176](https://app.codecov.io/gh/secdev/scapy/pull/4176?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1e6629a) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0474c37bf1d147c969173d52ab3ac76d2404d981?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0474c37) will **increase** coverage by `0.00%`.\n> Report is 2 commits behind head on master.\n> The diff coverage is `88.96%`.\n\n```diff\n@@           Coverage Diff            @@\n##           master    #4176    +/-   ##\n========================================\n  Coverage   81.79%   81.79%            \n========================================\n  Files         330      331     +1     \n  Lines       76370    76523   +153     \n========================================\n+ Hits        62466    62595   +129     \n- Misses      13904    13928    +24     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4176?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ssh.py](https://app.codecov.io/gh/secdev/scapy/pull/4176?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NzaC5weQ==) | `88.96% <88.96%> (ø)` | |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4176/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@guedou @p-l- @polybassa Ready for review :D ",
      "Thanks !\n\nProbably not that hard. I'm still hesitant regarding what would be the cleanest way of implementing it.\n\nEither:\n- an external class like the SecurityAssociation we have for Ipsec\n- something like using a Session\n- just an automaton",
      "SSHSessions like TLSSessions will be my favorite."
    ],
    "commit_messages": [
      "Add SSHv2 (RFC 4250, 4251, 4252, 4253 and 4254)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fab9fa88c0a76e0a51547",
    "number": 4173,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4173?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4173](https://app.codecov.io/gh/secdev/scapy/pull/4173?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (75bf82d) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0474c37bf1d147c969173d52ab3ac76d2404d981?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0474c37) will **decrease** coverage by `0.40%`.\n> Report is 20 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4173      +/-   ##\n==========================================\n- Coverage   81.79%   81.40%   -0.40%     \n==========================================\n  Files         330      330              \n  Lines       76370    76370              \n==========================================\n- Hits        62466    62167     -299     \n- Misses      13904    14203     +299     \n```\n\n[see 14 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4173/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fixed typo in routing.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba0a88c0a76e0a51548",
    "number": 4172,
    "body": "**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [X] I added unit tests or explained why they are not relevant\r\n-   [X] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [X] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nSupport quiet mode for `L2ListenTcpdump`.\r\n",
    "head_branch": "l2tcpdump-quiet",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4172?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4172](https://app.codecov.io/gh/secdev/scapy/pull/4172?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (41931ef) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0474c37bf1d147c969173d52ab3ac76d2404d981?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0474c37) will **decrease** coverage by `0.02%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4172      +/-   ##\n==========================================\n- Coverage   81.79%   81.77%   -0.02%     \n==========================================\n  Files         330      330              \n  Lines       76370    76370              \n==========================================\n- Hits        62466    62452      -14     \n- Misses      13904    13918      +14     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4172?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/supersocket.py](https://app.codecov.io/gh/secdev/scapy/pull/4172?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `75.66% <0.00%> (ø)` | |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4172/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "How on earth does this reduce 30% in code coverage?",
      "Could you provide a before / after explanation and a rationale for this change?",
      "Without this change, when using dumpcap as the executable, there is progress output that cannot be suppressed. Something like:\r\n```\r\nPackets: 1\r\nPackets: 14\r\nPackets: 32\r\n```\r\netc (repeating on the same line).\r\n\r\nThis change allows suppressing this output."
    ],
    "commit_messages": [
      "L2ListenTcpdump: Support quiet mode (#4172)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba0a88c0a76e0a51549",
    "number": 4169,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nAdd support for unencrypted tacacs packets `TacacsHeader(flags=1)`\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4169?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4169](https://app.codecov.io/gh/secdev/scapy/pull/4169?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f8a42b3) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0474c37bf1d147c969173d52ab3ac76d2404d981?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0474c37) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4169      +/-   ##\n==========================================\n- Coverage   81.79%   81.78%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76370    76369       -1     \n==========================================\n- Hits        62466    62458       -8     \n- Misses      13904    13911       +7     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4169?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/tacacs.py](https://app.codecov.io/gh/secdev/scapy/pull/4169?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi90YWNhY3MucHk=) | `93.23% <100.00%> (+0.69%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4169/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "tacacs: support unencrypted packets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba1a88c0a76e0a5154a",
    "number": 4167,
    "body": "According to https://datatracker.ietf.org/doc/html/rfc1035#section-3.3.14 TXT RDATA holds one or more `<character-string>`s where `<character-string>` is a single length octet followed by that number of characters.\r\n\r\nThis patch makes it possible to include empty strings (by appending zero-bytes showing that their length is zero).\r\n\r\nIt also changes the default value to avoid generating TXT RRs with zero-length TXT RDATA by default. It's still possible to generate zero-length TXT RDATA by passing rdata=[] explicitly.\r\n\r\nThe patch was cross-checked with Wireshark\r\n```sh\r\n    Answers\r\n        scapy: type TXT, class IN\r\n            Name: scapy\r\n            Type: TXT (Text strings) (16)\r\n            Class: IN (0x0001)\r\n            Time to live: 0 (0 seconds)\r\n            Data length: 4\r\n            TXT Length: 0\r\n            TXT: \r\n            TXT Length: 1\r\n            TXT: a\r\n            TXT Length: 0\r\n            TXT: \r\n```\r\nWithout this PR the two empty strings aren't included:\r\n```\r\n    Answers\r\n        scapy: type TXT, class IN\r\n            Name: scapy\r\n            Type: TXT (Text strings) (16)\r\n            Class: IN (0x0001)\r\n            Time to live: 0 (0 seconds)\r\n            Data length: 2\r\n            TXT Length: 1\r\n            TXT: a\r\n```",
    "head_branch": "txt-rdata",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4167?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4167](https://app.codecov.io/gh/secdev/scapy/pull/4167?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (51a0e0e) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0d9cca1a89f5f426d7c05236f6484b940690aef7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0d9cca1) will **decrease** coverage by `0.01%`.\n> Report is 6 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n> :exclamation: Current head 51a0e0e differs from pull request most recent head 8e58278. Consider uploading reports for the commit 8e58278 to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4167      +/-   ##\n==========================================\n- Coverage   81.79%   81.78%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76369    76372       +3     \n==========================================\n- Hits        62464    62461       -3     \n- Misses      13905    13911       +6     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4167?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `86.87% <100.00%> (+0.06%)` | :arrow_up: |\n\n... and [2 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4167/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "> Merging #4167 ... will increase coverage by 30.70%\r\n\r\nCodecov is being weird today :-)",
      "Thanks for this PR",
      "The CI seems to be failing because of 94bc3720927a5911bf16e3903f74baeb0f6e4dc8. With that commit reverted the tests pass.",
      "Thanks again for the PR !"
    ],
    "commit_messages": [
      "DNS: make it possible to include empty strings in TXT RDATA\n\nAccording to https://datatracker.ietf.org/doc/html/rfc1035#section-3.3.14\nTXT RDATA holds one or more <character-string>s where <character-string>\nis a single length octet followed by that number of characters.\n\nThis patch makes it possible to include empty strings (by appending\nzero-bytes showing that their length is zero).\n\nIt also changes the default value to avoid generating TXT RRs with zero-length\nTXT RDATA by default. It's still possible to generate zero-length TXT RDATA by\npassing rdata=[] explicitly."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba2a88c0a76e0a5154b",
    "number": 4166,
    "body": "https://datatracker.ietf.org/doc/html/rfc4039#section-4\r\n```\r\n4.  Rapid Commit Option Format\r\n\r\n   The Rapid Commit option is used to indicate the use of the two-\r\n   message exchange for address assignment.  The code for the Rapid\r\n   Commit option is 80.  The format of the option is:\r\n\r\n           Code  Len\r\n         +-----+-----+\r\n         |  80 |  0  |\r\n         +-----+-----+\r\n```",
    "head_branch": "dhcp4-rapid-commit",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4166?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4166](https://app.codecov.io/gh/secdev/scapy/pull/4166?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8ac229e) into [master](https://app.codecov.io/gh/secdev/scapy/commit/ba51704fcfc60094da386c3614fb52c348d82020?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ba51704) will **increase** coverage by `27.60%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4166       +/-   ##\n===========================================\n+ Coverage   51.07%   78.68%   +27.60%     \n===========================================\n  Files         323      330        +7     \n  Lines       71126    76370     +5244     \n===========================================\n+ Hits        36330    60089    +23759     \n+ Misses      34796    16281    -18515     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4166?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dhcp.py](https://app.codecov.io/gh/secdev/scapy/pull/4166?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3AucHk=) | `83.71% <ø> (+56.02%)` | :arrow_up: |\n\n... and [248 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4166/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "DHCPv4: add the rapid commit option (#4166)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba3a88c0a76e0a5154c",
    "number": 4165,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nPartially rework HCI events and add new packet definitions. I did not have captures with `Inquiry Result` and `Inquiry Result with RSSI` packets...\r\n\r\nI've added many tests for existing packets and fixed various packet definitions...\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "dev/hcievents",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4165?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4165](https://app.codecov.io/gh/secdev/scapy/pull/4165?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (37de33c) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5fa6428a1843fb851d8c6de1d0c59dad0168df78?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5fa6428) will **increase** coverage by `31.72%`.\n> Report is 9 commits behind head on master.\n> The diff coverage is `89.21%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4165       +/-   ##\n===========================================\n+ Coverage   49.60%   81.32%   +31.72%     \n===========================================\n  Files         341      349        +8     \n  Lines       76081    81840     +5759     \n===========================================\n+ Hits        37742    66559    +28817     \n+ Misses      38339    15281    -23058     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4165?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cdp.py](https://app.codecov.io/gh/secdev/scapy/pull/4165?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jZHAucHk=) | `95.42% <100.00%> (+23.42%)` | :arrow_up: |\n| [scapy/contrib/rtps/rtps.py](https://app.codecov.io/gh/secdev/scapy/pull/4165?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ydHBzL3J0cHMucHk=) | `98.82% <ø> (+12.94%)` | :arrow_up: |\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4165?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.67% <100.00%> (+47.75%)` | :arrow_up: |\n| [scapy/layers/ipsec.py](https://app.codecov.io/gh/secdev/scapy/pull/4165?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lwc2VjLnB5) | `90.60% <100.00%> (+61.02%)` | :arrow_up: |\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4165?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `89.59% <91.80%> (+7.28%)` | :arrow_up: |\n| [scapy/contrib/oam.py](https://app.codecov.io/gh/secdev/scapy/pull/4165?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9vYW0ucHk=) | `85.21% <85.21%> (ø)` | |\n\n... and [256 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4165/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Sorry but I am unsure of what is happening...\r\n\r\nIf I run `test/run_tests -t test/scapy/layers/bluetooth.uts` my tests pass but if I simply run them all then bluetooth tests fail...\r\n\r\nWhat is going on? 🤣 ",
      "Try with `conf.debug_dissector=True`",
      "I've removed the conflicting packet. I did not have a lot of time to debug the issue. I will send a PR whenever I get the problem sorted out.\r\n\r\nFor the time being let's keep it rolling with the remaining changes.\r\n\r\nThanks!",
      "Apparently the reason is that you missed the section 8 about Extended Inquiry Responses. Fixed.",
      "Thank you!"
    ],
    "commit_messages": [
      "Bluetooth: Add more HCI event packets (#4165)\n\n* bluetooth: Add more HCI event packets\r\n\r\n* Restore HCI_Event_Extended_Inquiry_Result\r\n\r\n---------\r\n\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba4a88c0a76e0a5154d",
    "number": 4164,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nIf a `_BluetoothLibcSocket` fails to bind, then `self.hci_fd` will not be available, thus causing an exception when trying to execute `close(self.hci_fd)`.\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "dev/libcsocketfix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4164?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4164](https://app.codecov.io/gh/secdev/scapy/pull/4164?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (61079ff) into [master](https://app.codecov.io/gh/secdev/scapy/commit/7e19b7b99ebefdf4e0c89e71273f39c4bff51be5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7e19b7b) will **increase** coverage by `0.00%`.\n> The diff coverage is `0.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4164   +/-   ##\n=======================================\n  Coverage   81.79%   81.79%           \n=======================================\n  Files         330      330           \n  Lines       76378    76379    +1     \n=======================================\n+ Hits        62470    62471    +1     \n  Misses      13908    13908           \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4164?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4164?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `88.14% <0.00%> (-0.11%)` | :arrow_down: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4164/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thank you very much!"
    ],
    "commit_messages": [
      "Fix exception on failed _BluetoothLibcSockets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba4a88c0a76e0a5154e",
    "number": 4163,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n",
    "head_branch": "remove-trailing-whitespace",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4163?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4163](https://app.codecov.io/gh/secdev/scapy/pull/4163?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (eb0d223) into [master](https://app.codecov.io/gh/secdev/scapy/commit/363d3766f53c3d55e92b0d51c5cdde7185733e3b?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (363d376) will **decrease** coverage by `0.01%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4163      +/-   ##\n==========================================\n- Coverage   81.78%   81.77%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76340    76340              \n==========================================\n- Hits        62434    62430       -4     \n- Misses      13906    13910       +4     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4163?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/packet.py](https://app.codecov.io/gh/secdev/scapy/pull/4163?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `83.67% <100.00%> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4163/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "packet: Remove trailing whitespace"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba5a88c0a76e0a5154f",
    "number": 4162,
    "body": "**Summary:**\r\n\r\nThis PR makes changes to the `introduction.rst` file in the `doc` folder. The changes include adding commas, rewording sentences, and removing words to improve grammar and readability.\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n",
    "head_branch": "intro-edits",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4162?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4162](https://app.codecov.io/gh/secdev/scapy/pull/4162?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (88092a8) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0474c37bf1d147c969173d52ab3ac76d2404d981?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0474c37) will **decrease** coverage by `30.73%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4162       +/-   ##\n===========================================\n- Coverage   81.79%   51.07%   -30.73%     \n===========================================\n  Files         330      323        -7     \n  Lines       76370    71126     -5244     \n===========================================\n- Hits        62466    36326    -26140     \n- Misses      13904    34800    +20896     \n```\n\n[see 251 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4162/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Intro doc edits (#4162)\n\n* Removed extra \"and\"\n\n* Remove misused parentheses\n\n* Consistent use of contractions in sentence\n\n* Changing to be less confusing\n\n* Fixing typos\n\n* Changes for better readability\n\n* Adding missing comma\n\n* Add missing \"the\"\n\n* Removing extra \"the\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba6a88c0a76e0a51550",
    "number": 4161,
    "body": "This PR removes some fields from the UDS_IOCBI packet definition to allow further customization of the payload with bind_layers. This is useful if ECUs from different brands need custom parsing of IOCBI payloads.",
    "head_branch": "gh_UDS_IOCBI_fix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4161?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4161](https://app.codecov.io/gh/secdev/scapy/pull/4161?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4a9b9ee) into [master](https://app.codecov.io/gh/secdev/scapy/commit/36c074d59e19168fe6e1582fd90a29a8265ac076?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (36c074d) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4161      +/-   ##\n==========================================\n- Coverage   81.78%   81.78%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76337    76336       -1     \n==========================================\n- Hits        62431    62430       -1     \n  Misses      13906    13906              \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4161?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/uds.py](https://app.codecov.io/gh/secdev/scapy/pull/4161?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3Vkcy5weQ==) | `98.32% <ø> (-0.01%)` | :arrow_down: |\n| [scapy/contrib/automotive/uds\\_scan.py](https://app.codecov.io/gh/secdev/scapy/pull/4161?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3Vkc19zY2FuLnB5) | `88.07% <ø> (ø)` | |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4161/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Modify packet definition of UDS_IOCBI packet to allow customization (#4161)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba7a88c0a76e0a51551",
    "number": 4160,
    "body": "Some more work on handy oneliners.\r\n- **support dnsd relay mode**: oneliner DNS server that forwards to a real server, only replacing some values.\r\n\r\n```python\r\n>>> # DNS server that replaces google.com. Forwards using conf.nameservers\r\n>>> dnsd(match={\"google.com\": (\"1.1.1.1\", \"::1\")}, relay=True)\r\n```\r\n\r\n- bind multicast LLMNR addresses\r\n- do not set a default domain for `dhcpd`. This breaks Windows DNS by default\r\n- rename some answering machines (makes much more sense, also consistent with `dhcpd`, `icmpechod`...)\r\n  - `dns_spoof` -> `dnsd`\r\n  - `llmnr_spoof` -> `llmnrd`\r\n  - `nbns_spoof` -> `nbnsd`",
    "head_branch": "ansmachines",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4160?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4160](https://app.codecov.io/gh/secdev/scapy/pull/4160?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6024540) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d54a4578d7610265f4a97e0e1312d9c676f4604e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d54a457) will **increase** coverage by `0.00%`.\n> The diff coverage is `63.76%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4160   +/-   ##\n=======================================\n  Coverage   81.78%   81.79%           \n=======================================\n  Files         330      330           \n  Lines       76331    76361   +30     \n=======================================\n+ Hits        62431    62458   +27     \n- Misses      13900    13903    +3     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4160?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dhcp.py](https://app.codecov.io/gh/secdev/scapy/pull/4160?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3AucHk=) | `82.41% <ø> (ø)` | |\n| [scapy/layers/llmnr.py](https://app.codecov.io/gh/secdev/scapy/pull/4160?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2xsbW5yLnB5) | `97.87% <100.00%> (+0.19%)` | :arrow_up: |\n| [scapy/layers/netbios.py](https://app.codecov.io/gh/secdev/scapy/pull/4160?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL25ldGJpb3MucHk=) | `92.85% <100.00%> (ø)` | |\n| [scapy/ansmachine.py](https://app.codecov.io/gh/secdev/scapy/pull/4160?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYW5zbWFjaGluZS5weQ==) | `69.44% <55.55%> (+0.08%)` | :arrow_up: |\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4160?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `86.80% <60.37%> (-0.09%)` | :arrow_down: |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4160/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@p-l- @guedou @polybassa Ready for review !"
    ],
    "commit_messages": [
      "Improve answering machines, dns_resolve, renames"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba8a88c0a76e0a51552",
    "number": 4159,
    "body": "**Summary**\r\n\r\nThis PR updates the map from RTPS Vendor ID to RTPS product name and company. This change follows the DDS Foundation's official mapping ((link)[https://www.dds-foundation.org/dds-rtps-vendor-and-product-ids/]). \r\n\r\n**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [X] I added unit tests or explained why they are not relevant\r\n-   [X] I executed the regression tests (using `cd test && ./run_tests` or `tox`)",
    "head_branch": "DDSvendorIDs",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4159?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4159](https://app.codecov.io/gh/secdev/scapy/pull/4159?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (dc7b1fe) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d54a4578d7610265f4a97e0e1312d9c676f4604e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d54a457) will **decrease** coverage by `0.02%`.\n> Report is 4 commits behind head on master.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4159      +/-   ##\n==========================================\n- Coverage   81.78%   81.77%   -0.02%     \n==========================================\n  Files         330      330              \n  Lines       76331    76340       +9     \n==========================================\n- Hits        62431    62428       -3     \n- Misses      13900    13912      +12     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4159?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/rtps/common\\_types.py](https://app.codecov.io/gh/secdev/scapy/pull/4159?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ydHBzL2NvbW1vbl90eXBlcy5weQ==) | `95.27% <ø> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4159/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Updated DDS RTPS Vendor IDs using DDS-Foundation spec (#4159)\n\n* Updated DDS RTPS Vendor IDs using DDS-Foundation spec\r\n\r\n* linter fix\r\n\r\n---------\r\n\r\nCo-authored-by: Cooper de Nicola <cdenicola@10693-laptop.corp.zooxlabs.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba9a88c0a76e0a51553",
    "number": 4158,
    "body": "ISOTPSoftSocket should pass the fd (CanFD support) to the NativeCANSocket instance it creates. Otherwise it will always be created as non CanFD.",
    "head_branch": "isotp-canfd",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4158?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4158](https://app.codecov.io/gh/secdev/scapy/pull/4158?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (afe82ef) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d54a4578d7610265f4a97e0e1312d9c676f4604e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d54a457) will **decrease** coverage by `0.01%`.\n> Report is 4 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4158      +/-   ##\n==========================================\n- Coverage   81.78%   81.78%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76331    76340       +9     \n==========================================\n+ Hits        62431    62434       +3     \n- Misses      13900    13906       +6     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4158?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://app.codecov.io/gh/secdev/scapy/pull/4158?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `85.87% <100.00%> (+0.73%)` | :arrow_up: |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4158/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "one last thing... now you need to add the tag: `not_pypy` do disable the unit test for the pypy machines. Thanks for your patience "
    ],
    "commit_messages": [
      "Pass the fd to underlying NativeCANSocket (#4158)\n\nISOTPSoftSocket should pass the fd (CanFD support) to the\r\nNativeCANSocket instance it creates. Otherwise it will always\r\nbe created as non CanFD."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faba9a88c0a76e0a51554",
    "number": 4157,
    "body": "- improve consistency in APIs\r\n\r\nThe behavior of:\r\n```python\r\nsendpfast(Ether(), loop=1)\r\n```\n\r\nis now equivalent to:\r\n```python\r\nsendp(Ether(), loop=1)\r\n```\r\n\r\nwhere previously it would have been:\r\n```python\r\nsendp(Ether(), loop=0)\r\n```\r\n\r\nCalling @p-l- for review",
    "head_branch": "sendpfastapi",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4157?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4157](https://app.codecov.io/gh/secdev/scapy/pull/4157?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2130ee3) into [master](https://app.codecov.io/gh/secdev/scapy/commit/4fefbb09a232b753a08e63cd1c805414011e18e7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4fefbb0) will **increase** coverage by `0.02%`.\n> Report is 3 commits behind head on master.\n> The diff coverage is `57.14%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4157      +/-   ##\n==========================================\n+ Coverage   81.76%   81.78%   +0.02%     \n==========================================\n  Files         330      330              \n  Lines       76315    76334      +19     \n==========================================\n+ Hits        62399    62431      +32     \n+ Misses      13916    13903      -13     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4157?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/supersocket.py](https://app.codecov.io/gh/secdev/scapy/pull/4157?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `75.66% <100.00%> (ø)` | |\n| [scapy/sendrecv.py](https://app.codecov.io/gh/secdev/scapy/pull/4157?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `87.97% <50.00%> (-0.25%)` | :arrow_down: |\n\n... and [15 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4157/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "More consistent sendpfast API (breaking) (#4157)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabaaa88c0a76e0a51555",
    "number": 4155,
    "body": "- restore support for OSes that do not support IPv6\r\n- move banner generation into its own function (main.py), and add `mini` argument",
    "head_branch": "stupid-oses",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4155?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4155](https://app.codecov.io/gh/secdev/scapy/pull/4155?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (db58c41) into [master](https://app.codecov.io/gh/secdev/scapy/commit/4fefbb09a232b753a08e63cd1c805414011e18e7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4fefbb0) will **increase** coverage by `0.01%`.\n> The diff coverage is `80.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4155      +/-   ##\n==========================================\n+ Coverage   81.76%   81.77%   +0.01%     \n==========================================\n  Files         330      330              \n  Lines       76315    76328      +13     \n==========================================\n+ Hits        62399    62421      +22     \n+ Misses      13916    13907       -9     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4155?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4155?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `86.89% <100.00%> (+0.06%)` | :arrow_up: |\n| [scapy/layers/hsrp.py](https://app.codecov.io/gh/secdev/scapy/pull/4155?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2hzcnAucHk=) | `90.00% <100.00%> (+0.71%)` | :arrow_up: |\n| [scapy/layers/ntp.py](https://app.codecov.io/gh/secdev/scapy/pull/4155?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250cC5weQ==) | `85.32% <ø> (-0.04%)` | :arrow_down: |\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4155?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `78.66% <100.00%> (+0.75%)` | :arrow_up: |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4155?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `83.02% <0.00%> (ø)` | |\n| [scapy/pton\\_ntop.py](https://app.codecov.io/gh/secdev/scapy/pull/4155?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcHRvbl9udG9wLnB5) | `86.84% <50.00%> (-2.05%)` | :arrow_down: |\n| [scapy/main.py](https://app.codecov.io/gh/secdev/scapy/pull/4155?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbWFpbi5weQ==) | `71.91% <77.77%> (+0.09%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4155/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "> What are these OSes?\r\n\r\nOnly the most ridiculous ones: https://gpotter2.github.io/secdev.github.io/?try=1"
    ],
    "commit_messages": [
      "Support stupid OSes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fababa88c0a76e0a51556",
    "number": 4154,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\n\n**Checklist:**\n\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\n-   [x] I squashed commits belonging together\n-   [x] I added unit tests or explained why they are not relevant\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\n\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\n\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\n\n<!-- if required - outline impacts on other parts of the library -->\n\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\n",
    "head_branch": "scapy_leonid",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4154?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4154](https://app.codecov.io/gh/secdev/scapy/pull/4154?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (48e07fe) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2a4c4ae25e267c34129ba091a2b411aafdaebcfd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2a4c4ae) will **decrease** coverage by `0.01%`.\n> Report is 2 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4154      +/-   ##\n==========================================\n- Coverage   81.77%   81.76%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76290    76315      +25     \n==========================================\n+ Hits        62383    62398      +15     \n- Misses      13907    13917      +10     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4154?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/roce.py](https://app.codecov.io/gh/secdev/scapy/pull/4154?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9yb2NlLnB5) | `95.18% <100.00%> (+1.15%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4154/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Added logic to compute ICRC for RoCEv2 over IPv6 (#4154)\n\n* Added logic to compute ICRC for RoCEv2 over IPv6.\r\n\r\n* Fixed RoCEv2 icrc computation.\r\n\r\n---------\r\n\r\nCo-authored-by: leonidokner <leonidokner@enfabrica.net>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabaca88c0a76e0a51557",
    "number": 4152,
    "body": "This PR adds an argument to suppress socket exceptions",
    "head_branch": "gh_periodic_sender_improvement",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4152?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4152](https://app.codecov.io/gh/secdev/scapy/pull/4152?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5d3289b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2a4c4ae25e267c34129ba091a2b411aafdaebcfd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2a4c4ae) will **decrease** coverage by `0.14%`.\n> The diff coverage is `12.50%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4152      +/-   ##\n==========================================\n- Coverage   81.77%   81.63%   -0.14%     \n==========================================\n  Files         330      330              \n  Lines       76290    76296       +6     \n==========================================\n- Hits        62383    62287      -96     \n- Misses      13907    14009     +102     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4152?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4152?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `77.54% <12.50%> (-0.36%)` | :arrow_down: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4152/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Improve exception handling in PeriodicSender Thread (#4152)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabada88c0a76e0a51558",
    "number": 4151,
    "body": "function dispaly() was deprecated and deleted in version2.5.0  but this caused some compatibility issues.  Reuse the function to resolve them.\r\n",
    "head_branch": "restore_deprecated_functions",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4151?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4151](https://app.codecov.io/gh/secdev/scapy/pull/4151?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b952b88) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2a4c4ae25e267c34129ba091a2b411aafdaebcfd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2a4c4ae) will **decrease** coverage by `30.68%`.\n> The diff coverage is `50.00%`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4151       +/-   ##\n===========================================\n- Coverage   81.77%   51.09%   -30.68%     \n===========================================\n  Files         330      323        -7     \n  Lines       76290    71054     -5236     \n===========================================\n- Hits        62383    36304    -26079     \n- Misses      13907    34750    +20843     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4151?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/plist.py](https://app.codecov.io/gh/secdev/scapy/pull/4151?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGxpc3QucHk=) | `29.35% <50.00%> (-56.29%)` | :arrow_down: |\n\n... and [250 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4151/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "What still uses this function? Can you post an example?",
      "@Hiina962 @gpotter2 I guess the proper fix should change the line https://github.com/secdev/scapy/blob/2a4c4ae25e267c34129ba091a2b411aafdaebcfd/scapy/layers/l2.py#L1041 to\r\n``` python\r\nans.show()\r\n```\r\n",
      "@gnought You are right!",
      "@gpotter2 shall we close this?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabaea88c0a76e0a51559",
    "number": 4150,
    "body": "I accidentally formatted the keys in the enum wrong. ",
    "head_branch": "gh_bmw_def",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4150?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4150](https://app.codecov.io/gh/secdev/scapy/pull/4150?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ac4440b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2a4c4ae25e267c34129ba091a2b411aafdaebcfd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2a4c4ae) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4150      +/-   ##\n==========================================\n- Coverage   81.77%   81.76%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76290    76290              \n==========================================\n- Hits        62383    62381       -2     \n- Misses      13907    13909       +2     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4150?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/bmw/definitions.py](https://app.codecov.io/gh/secdev/scapy/pull/4150?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2Jtdy9kZWZpbml0aW9ucy5weQ==) | `99.94% <ø> (ø)` | |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4150/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Fix enum in UDS BMW definitions (#4150)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabaea88c0a76e0a5155a",
    "number": 4149,
    "body": "This PR changes the definition of DTCs inside the UDS_RDTCI packet to have a better representation of the DTC. Additionally, a DTC Snapshot Packet class is introduced to allow customization of DTC Snapshot records for individual ECUs",
    "head_branch": "gh_dtc_fixes",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4149?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4149](https://app.codecov.io/gh/secdev/scapy/pull/4149?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (eed336b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2a4c4ae25e267c34129ba091a2b411aafdaebcfd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2a4c4ae) will **decrease** coverage by `3.37%`.\n> The diff coverage is `96.42%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4149      +/-   ##\n==========================================\n- Coverage   81.77%   78.40%   -3.37%     \n==========================================\n  Files         330      330              \n  Lines       76290    76310      +20     \n==========================================\n- Hits        62383    59832    -2551     \n- Misses      13907    16478    +2571     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4149?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/uds.py](https://app.codecov.io/gh/secdev/scapy/pull/4149?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3Vkcy5weQ==) | `98.42% <96.42%> (+0.08%)` | :arrow_up: |\n\n... and [57 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4149/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@gpotter2 @guedou Can this PR get merged, please?",
      "It's a bad practice to start PRs with no description. Generally when I see stuff like that I think that it's a draft.",
      "> It's a bad practice to start PRs with no description. Generally when I see stuff like that I think that it's a draft.\r\n\r\nSorry",
      "@gpotter2 @guedou Can this PR get merged, please?"
    ],
    "commit_messages": [
      "Improve parsing of UDS DTC Snapshots and ExtendedData (#4149)\n\n* Improve parsing of UDS DTC Snapshots and ExtendedData\r\n\r\n* fix unit test\r\n\r\n* fix unit test\r\n\r\n* fix unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabafa88c0a76e0a5155b",
    "number": 4148,
    "body": "@gpotter2 \r\nIn preparation for #4126, this PR removes just the \"\\\\\" from various tests",
    "head_branch": "gh_pypy3_tests",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4148?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4148](https://app.codecov.io/gh/secdev/scapy/pull/4148?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (dae8123) into [master](https://app.codecov.io/gh/secdev/scapy/commit/e3074451823394e3bb750a1a810dc880e7ea7082?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e307445) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4148      +/-   ##\n==========================================\n- Coverage   81.76%   81.76%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76281    76281              \n==========================================\n- Hits        62372    62369       -3     \n- Misses      13909    13912       +3     \n```\n\n[see 5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4148/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "I disagree with this PR because this is a PyPy bug, as mentioned in the original issue. See https://foss.heptapod.net/pypy/pypy/-/issues/4003.\n\nMy stance regarding PyPy support is: report the bugs, but do not adapt. Otherwise considering how often we have issues with PyPy it would be endless.",
      "ok.. I no problem"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb0a88c0a76e0a5155c",
    "number": 4147,
    "body": "fixes https://github.com/secdev/scapy/issues/4142",
    "head_branch": "padwith",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4147?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4147](https://app.codecov.io/gh/secdev/scapy/pull/4147?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (18791c6) into [master](https://app.codecov.io/gh/secdev/scapy/commit/bb0164b692ff689a6720fb874e649227a2e458a5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (bb0164b) will **decrease** coverage by `30.28%`.\n> Report is 6 commits behind head on master.\n> The diff coverage is `0.00%`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4147       +/-   ##\n===========================================\n- Coverage   81.76%   51.48%   -30.28%     \n===========================================\n  Files         330      323        -7     \n  Lines       76270    72771     -3499     \n===========================================\n- Hits        62360    37469    -24891     \n- Misses      13910    35302    +21392     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4147?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4147?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `66.25% <0.00%> (-25.83%)` | :arrow_down: |\n\n... and [250 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4147/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@gpotter2 any chance to merge it?"
    ],
    "commit_messages": [
      "Fix padwith in PadField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb1a88c0a76e0a5155d",
    "number": 4146,
    "body": "The `default` type should be same as its parent `FieldLenField`\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4146?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4146](https://app.codecov.io/gh/secdev/scapy/pull/4146?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (23f706e) into [master](https://app.codecov.io/gh/secdev/scapy/commit/06fc74b0f37e4fc68abde735b6164085aae9cfbe?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (06fc74b) will **increase** coverage by `0.00%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `n/a`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4146   +/-   ##\n=======================================\n  Coverage   80.97%   80.97%           \n=======================================\n  Files         330      330           \n  Lines       76239    76239           \n=======================================\n+ Hits        61732    61735    +3     \n+ Misses      14507    14504    -3     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4146?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4146?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `92.08% <ø> (ø)` | |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4146/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "update type of `default` param in LEFieldLenField\n\nThe `default` type should be same as its parent `FieldLenField`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb2a88c0a76e0a5155e",
    "number": 4145,
    "body": "Two absolutely horrifying issues, that have been there since the beginning of times.\r\n\r\n- **Currently if you do**:\r\n```python\r\n>>> pkt = Ether()/ARP(pdst=\"10.0.0.1\")\r\n>>> srp(pkt)\r\n```\r\nit sends a `ARP` request implicitly to resolve the Ethernet destination of the L2 dst... then sends it a who-has request. This makes no sense, that's two ARP who-has requests.\r\n\r\n- **Currently if you do**:\r\n```python\r\n>>> pkt = Ether() / IP(pdst=\"10.0.0.1\")\r\n>>> pkt.show()\r\n```\r\nit also sends a `ARP` request implicitly. This looks like an unintended behavior, I'd argue the L2 dst should only be resolved  when building the packet (when using send, show2, etc.)\r\n\r\n**This PR does two things:**\r\n- in general, only resolve the Ethernet dst address when building the packet, and not just when printing it\r\n- fix ARP which has a completly broken default behavior",
    "head_branch": "arp-buildonly",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4145?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4145](https://app.codecov.io/gh/secdev/scapy/pull/4145?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cbdf959) into [master](https://app.codecov.io/gh/secdev/scapy/commit/148ab7b41f951bdd424ee8c61b8fd97eea761677?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (148ab7b) will **increase** coverage by `0.79%`.\n> Report is 5 commits behind head on master.\n> The diff coverage is `81.25%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4145      +/-   ##\n==========================================\n+ Coverage   80.97%   81.76%   +0.79%     \n==========================================\n  Files         330      330              \n  Lines       76235    76279      +44     \n==========================================\n+ Hits        61729    62370     +641     \n+ Misses      14506    13909     -597     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4145?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4145?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `70.70% <ø> (ø)` | |\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4145?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.54% <ø> (+0.05%)` | :arrow_up: |\n| [scapy/layers/l2.py](https://app.codecov.io/gh/secdev/scapy/pull/4145?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `84.83% <81.25%> (-0.34%)` | :arrow_down: |\n\n... and [18 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4145/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the review, I've updated the PR.\r\n\r\n> If the host goes offline between the two, the Ether destination will be send to the broadcast address.\r\n\r\nI would argue that this is not an issue."
    ],
    "commit_messages": [
      "Fix L2 dst address computation (very intrusive) (#4145)\n\n* Less intrusive L2 dst computation (especially ARP)\r\n\r\n* Apply guedou suggestions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb3a88c0a76e0a5155f",
    "number": 4143,
    "body": "Just a few more definitions",
    "head_branch": "gh_bmw_def",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4143?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4143](https://app.codecov.io/gh/secdev/scapy/pull/4143?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (fffaab3) into [master](https://app.codecov.io/gh/secdev/scapy/commit/148ab7b41f951bdd424ee8c61b8fd97eea761677?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (148ab7b) will **increase** coverage by `0.40%`.\n> Report is 6 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4143      +/-   ##\n==========================================\n+ Coverage   80.97%   81.37%   +0.40%     \n==========================================\n  Files         330      330              \n  Lines       76235    76281      +46     \n==========================================\n+ Hits        61729    62077     +348     \n+ Misses      14506    14204     -302     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4143?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/bmw/definitions.py](https://app.codecov.io/gh/secdev/scapy/pull/4143?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2Jtdy9kZWZpbml0aW9ucy5weQ==) | `99.94% <100.00%> (+<0.01%)` | :arrow_up: |\n\n... and [30 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4143/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Add more BMW software version definitions (#4143)\n\n* Add more BMW software version definitions\r\n\r\n* fix codespell\r\n\r\n* add englisch translation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb4a88c0a76e0a51560",
    "number": 4141,
    "body": "fixes #4120 \r\n",
    "head_branch": "master.hujf",
    "is_a_fork": true,
    "comments": [
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "Fix and add test for GENEVE.optionlen"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb4a88c0a76e0a51561",
    "number": 4140,
    "body": "- fix PyPy tests by pinning brotli\r\n- fix Windows tests by removing leftover\r\n\r\nfix https://github.com/secdev/scapy/issues/4115",
    "head_branch": "pypy3",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4140?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4140](https://app.codecov.io/gh/secdev/scapy/pull/4140?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e85cd66) into [master](https://app.codecov.io/gh/secdev/scapy/commit/148ab7b41f951bdd424ee8c61b8fd97eea761677?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (148ab7b) will **increase** coverage by `0.77%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4140      +/-   ##\n==========================================\n+ Coverage   80.97%   81.74%   +0.77%     \n==========================================\n  Files         330      330              \n  Lines       76235    76235              \n==========================================\n+ Hits        61729    62320     +591     \n+ Misses      14506    13915     -591     \n```\n\n[see 15 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4140/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Fix tests (#4140)\n\n* Fix PyPy3 tests\r\n\r\n* Fix Windows tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb5a88c0a76e0a51562",
    "number": 4139,
    "body": "- replace badly named `BitFixedLenField` with `BitLenField`\r\n- add BitLenEnumField",
    "head_branch": "bitlenfield",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4139?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4139](https://app.codecov.io/gh/secdev/scapy/pull/4139?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (86a953b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/bb0164b692ff689a6720fb874e649227a2e458a5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (bb0164b) will **decrease** coverage by `30.67%`.\n> The diff coverage is `53.84%`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4139       +/-   ##\n===========================================\n- Coverage   81.76%   51.09%   -30.67%     \n===========================================\n  Files         330      323        -7     \n  Lines       76270    71042     -5228     \n===========================================\n- Hits        62360    36299    -26061     \n- Misses      13910    34743    +20833     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4139?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/sixlowpan.py](https://app.codecov.io/gh/secdev/scapy/pull/4139?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NpeGxvd3Bhbi5weQ==) | `19.78% <ø> (-66.80%)` | :arrow_down: |\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4139?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `64.01% <53.84%> (-28.07%)` | :arrow_down: |\n\n... and [248 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4139/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@guedou @p-l- @polybassa Ready for review. Please merge if ok."
    ],
    "commit_messages": [
      "Merge pull request #4139 from gpotter2/bitlenfield\n\nAdd BitLenEnumField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb6a88c0a76e0a51563",
    "number": 4138,
    "body": "- fix `LatexTheme` to properly escape #",
    "head_branch": "latexfix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4138?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4138](https://app.codecov.io/gh/secdev/scapy/pull/4138?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (64591b2) into [master](https://app.codecov.io/gh/secdev/scapy/commit/148ab7b41f951bdd424ee8c61b8fd97eea761677?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (148ab7b) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4138      +/-   ##\n==========================================\n- Coverage   80.97%   80.96%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76235    76239       +4     \n==========================================\n+ Hits        61729    61730       +1     \n- Misses      14506    14509       +3     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4138?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/packet.py](https://app.codecov.io/gh/secdev/scapy/pull/4138?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `83.52% <100.00%> (ø)` | |\n| [scapy/themes.py](https://app.codecov.io/gh/secdev/scapy/pull/4138?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdGhlbWVzLnB5) | `91.63% <100.00%> (+0.11%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4138/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Fix LatexTheme to escape \"#\" (#4138)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb7a88c0a76e0a51564",
    "number": 4137,
    "body": "Apparently, codespell received an update.",
    "head_branch": "gh_codespell",
    "is_a_fork": false,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4137?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4137](https://app.codecov.io/gh/secdev/scapy/pull/4137?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b1dc814) into [master](https://app.codecov.io/gh/secdev/scapy/commit/341b285cea0f17ed7e52a01b5cc59bd62d5e6ec9?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (341b285) will **increase** coverage by `0.00%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4137   +/-   ##\n=======================================\n  Coverage   80.96%   80.97%           \n=======================================\n  Files         330      330           \n  Lines       76235    76235           \n=======================================\n+ Hits        61724    61731    +7     \n+ Misses      14511    14504    -7     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4137?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/ife.py](https://app.codecov.io/gh/secdev/scapy/pull/4137?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pZmUucHk=) | `100.00% <ø> (ø)` | |\n| [scapy/contrib/ppi\\_geotag.py](https://app.codecov.io/gh/secdev/scapy/pull/4137?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9wcGlfZ2VvdGFnLnB5) | `95.48% <ø> (ø)` | |\n| [scapy/contrib/socks.py](https://app.codecov.io/gh/secdev/scapy/pull/4137?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9zb2Nrcy5weQ==) | `95.83% <ø> (ø)` | |\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4137?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `88.24% <ø> (ø)` | |\n| [scapy/layers/gssapi.py](https://app.codecov.io/gh/secdev/scapy/pull/4137?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2dzc2FwaS5weQ==) | `75.73% <ø> (ø)` | |\n| [scapy/modules/krack/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4137?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbW9kdWxlcy9rcmFjay9fX2luaXRfXy5weQ==) | `0.00% <ø> (ø)` | |\n| [scapy/modules/krack/automaton.py](https://app.codecov.io/gh/secdev/scapy/pull/4137?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbW9kdWxlcy9rcmFjay9hdXRvbWF0b24ucHk=) | `0.00% <0.00%> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4137/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "It’s just the name of the testcase\r\n\r\n________________________________\r\nFrom: gpotter2 ***@***.***>\r\nSent: Friday, October 6, 2023 7:30:22 PM\r\nTo: secdev/scapy ***@***.***>\r\nCc: Nils Weiß ***@***.***>; Author ***@***.***>\r\nSubject: Re: [secdev/scapy] Fix codespell (PR #4137)\r\n\r\n\r\n@gpotter2 commented on this pull request.\r\n\r\n________________________________\r\n\r\nIn test/contrib/automotive/ccp.uts<https://github.com/secdev/scapy/pull/4137#discussion_r1349130592>:\r\n\r\n> @@ -903,7 +903,7 @@ assert hasattr(dto, \"load\") == False\r\n assert dto.MTA0_extension == 2\r\n assert dto.MTA0_address == 0x34002006\r\n\r\n-= CAN Socket sr1 with dto.ansers(cro) == False\r\n+= CAN Socket sr1 with dto.answers(cro) == False\r\n\r\n\r\nHow did this work before?\r\n\r\n—\r\nReply to this email directly, view it on GitHub<https://github.com/secdev/scapy/pull/4137#pullrequestreview-1662508177>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAMZGF3CCF37X6HUAZ47RDLX6A525AVCNFSM6AAAAAA5VKZRMGVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMYTMNRSGUYDQMJXG4>.\r\nYou are receiving this because you authored the thread.Message ID: ***@***.***>\r\n"
    ],
    "commit_messages": [
      "Fix codespell (#4137)\n\n* fix codespell\r\n\r\n* revert change\r\n\r\n* Revert \"revert change\"\r\n\r\nThis reverts commit a36d24a0f2dc058d6d61676094c6db746434a721.\r\n\r\n* revert changes\r\n\r\n* add exception to codespell\r\n\r\n* add exception to codespell"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb8a88c0a76e0a51565",
    "number": 4136,
    "body": "https://www.rfc-editor.org/rfc/rfc8914.html\r\n\r\nThe patch was also cross-checked with Wireshark:\r\n```\r\nOption: Extended DNS Error\r\n    Option Code: Extended DNS Error (15)\r\n    Option Length: 45\r\n    Option Data: 000670726f6f66206f66206e6f6e2d6578697374656e6365206f66206578616d706c652e…\r\n    Info Code: DNSSEC Bogus (6)\r\n    Extra Text: proof of non-existence of example.com. NSEC\r\n```",
    "head_branch": "extended-dns-errors",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4136?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4136](https://app.codecov.io/gh/secdev/scapy/pull/4136?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a5c621e) into [master](https://app.codecov.io/gh/secdev/scapy/commit/06fc74b0f37e4fc68abde735b6164085aae9cfbe?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (06fc74b) will **increase** coverage by `0.78%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4136      +/-   ##\n==========================================\n+ Coverage   80.97%   81.75%   +0.78%     \n==========================================\n  Files         330      330              \n  Lines       76239    76245       +6     \n==========================================\n+ Hits        61732    62333     +601     \n+ Misses      14507    13912     -595     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4136?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4136?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `86.82% <100.00%> (+0.13%)` | :arrow_up: |\n\n... and [12 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4136/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "I rebased this PR on top of https://github.com/secdev/scapy/commit/619d1e45f39f2f705e59e8da417b090ea4ec3049 and force-pushed it to trigger the CI. Looks like it's green now."
    ],
    "commit_messages": [
      "DNS: add Extended DNS Error EDNS0 Option\n\nhttps://www.rfc-editor.org/rfc/rfc8914.html\n\nThe patch was also cross-checked with Wireshark:\n```\nOption: Extended DNS Error\n    Option Code: Extended DNS Error (15)\n    Option Length: 45\n    Option Data: 000670726f6f66206f66206e6f6e2d6578697374656e6365206f66206578616d706c652e…\n    Info Code: DNSSEC Bogus (6)\n    Extra Text: proof of non-existence of example.com. NSEC\n\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabb9a88c0a76e0a51566",
    "number": 4135,
    "body": "Sendpfast accepts a float for the PPS value as well as the underlying tcpreplay; however, this is converted to an integer in the tcpreplay string causing flows needing refined throughput values to be inaccurate. This is a very simple fix by changing it from an integer conversion to a float. I have been doing this manually using sed in docker build to patch this, but should have submitted this when originally found.\r\n\r\nNote: I looked to see if there were unit tests under the tests directory; however, initial look I didn't see an obvious test for sendrecv.py. Although I haven't verified if this will break any unit tests, this has been used in a container for some time with this small change with no issues and more accurate traffic flows.\r\n\r\nfixes #4006 \r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4135?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4135](https://app.codecov.io/gh/secdev/scapy/pull/4135?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5d8ce77) into [master](https://app.codecov.io/gh/secdev/scapy/commit/112aa9bb3a86665437a34675ef022155dd3c93f5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (112aa9b) will **decrease** coverage by `0.01%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4135      +/-   ##\n==========================================\n- Coverage   80.97%   80.96%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76235    76235              \n==========================================\n- Hits        61728    61726       -2     \n- Misses      14507    14509       +2     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4135?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/sendrecv.py](https://app.codecov.io/gh/secdev/scapy/pull/4135?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `88.21% <0.00%> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4135/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Anyone else able to quickly review? This was just a single character change so should be pretty basic. I have been using sed to fix this in my docker build stage as accuracy of the traffic flow is pretty important.\n\nTcpreplay takes a float for the pps value and this method also accepts a float; however, this is converted to an integer when passed to tcpreplay. Simple fix."
    ],
    "commit_messages": [
      "Resolve Issue_4006\n\nSendpfast accepts a float for the PPS value as well as the underlying tcpreplay; however, this is converted to an integer in the tcpreplay string causing flows needing refined throughput values to be inaccurate.\nThis is a very simple fix by changing it from an integer conversion to a float. I have been doing this manually using sed in docker build to patch this, but should have submitted this when originally found."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabbaa88c0a76e0a51567",
    "number": 4134,
    "body": "I wanted to be able to use `LenField` in my packet, but need to fit it in 10-bits. I was hoping `BitFieldLenField` could be used to similarly get the whole payload length, but an exception is raised in `FieldLenField` when `length_of` and `count_of` are omitted.\r\n\r\nThis PR changes `FieldLenField.i2m` to return the packet payload length when `length_of` and `count_of` are omitted, rather than throwing an exception.\r\n\r\nNow we can use it like\r\n\r\n```python\r\nclass Header(Packet):\r\n    name = \"Header\"\r\n    fields_desc = [\r\n        BitField(\"packet_id\", 0, 6),\r\n        BitFieldLenField(\"length\", None, 10),\r\n    ]\r\n```\r\n\r\nand the length field is automatically calculated based on the payload size, just like in `LenField`. The `adjust` argument works as expected.\r\n\r\nUT's appear to pass, up to where it already fails on master. I spent some time trying to troubleshoot it but couldn't get it working.",
    "head_branch": "field-len-field-enhance",
    "is_a_fork": true,
    "comments": [
      "No. That would be way to confusing. The proper solution would be to add a BitLenField, if you need that.",
      "Thanks, will look into that.",
      "@gpotter2 , thanks again... That was super easy, and is a much cleaner solution.\r\n\r\nThis is what I came up with, it seems to be working with some brief tests. Mostly just piecing together `BitField` and `LenField`.\r\n\r\n```python\r\nclass BitLenField(BitField):\r\n    __slots__ = BitField.__slots__ + [\"adjust\"]\r\n\r\n    def __init__(self, name, default, size, tot_size=0, end_tot_size=0, adjust=lambda x: x):\r\n        super(BitField, self).__init__(name, default, size, tot_size, end_tot_size)\r\n        self.adjust = adjust\r\n\r\n    def i2m(\r\n        self,\r\n        pkt,  # type: Optional[Packet]\r\n        x,  # type: Optional[int]\r\n    ):\r\n        # type: (...) -> int\r\n        if not x:  # x == 0 or x == None\r\n            x = 0\r\n            if pkt is not None:\r\n                x = self.adjust(len(pkt.payload))\r\n        return x\r\n```\r\n\r\nWould you like me to resubmit a PR with this addition?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabbaa88c0a76e0a51568",
    "number": 4133,
    "body": "Fixed handling of 802.11 frames with Country Information element tags that don't comply to the standard, by having an odd length, and not adding the padding byte.\r\n\r\nfixes #4132 \r\n",
    "head_branch": "handle-missing-pad-byte-in-country-info",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4133?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4133](https://app.codecov.io/gh/secdev/scapy/pull/4133?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (176d2cb) into [master](https://app.codecov.io/gh/secdev/scapy/commit/112aa9bb3a86665437a34675ef022155dd3c93f5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (112aa9b) will **increase** coverage by `0.81%`.\n> Report is 27 commits behind head on master.\n> The diff coverage is `n/a`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4133      +/-   ##\n==========================================\n+ Coverage   80.97%   81.78%   +0.81%     \n==========================================\n  Files         330      330              \n  Lines       76235    76369     +134     \n==========================================\n+ Hits        61728    62462     +734     \n+ Misses      14507    13907     -600     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4133?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dot11.py](https://app.codecov.io/gh/secdev/scapy/pull/4133?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RvdDExLnB5) | `91.37% <ø> (ø)` | |\n\n... and [38 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4133/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks for the PR ! I left a few comments.",
      "I still really dislike the long version.\nWould you mind switching to a one liner, and adding a shorter version of your comment above it?"
    ],
    "commit_messages": [
      "802.11: support badly implemented Country Information padding (#4133)\n\n* fixed parsing of 802.11 frames with Country Information element tags that don't comply with the standard by avoiding the necessary padding byte that should make the tag length even\r\n\r\n* Fix PEP8\r\n\r\n---------\r\n\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabbba88c0a76e0a51569",
    "number": 4131,
    "body": "Fixes #4130",
    "head_branch": "fix-4130",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4131?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4131](https://app.codecov.io/gh/secdev/scapy/pull/4131?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (36c6e51) into [master](https://app.codecov.io/gh/secdev/scapy/commit/4b386fffbbdfcc46f41433e7f96ca00488ac30c6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4b386ff) will **increase** coverage by `3.13%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4131      +/-   ##\n==========================================\n+ Coverage   77.83%   80.96%   +3.13%     \n==========================================\n  Files         330      330              \n  Lines       76235    76235              \n==========================================\n+ Hits        59340    61727    +2387     \n+ Misses      16895    14508    -2387     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4131?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/http2.py](https://app.codecov.io/gh/secdev/scapy/pull/4131?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9odHRwMi5weQ==) | `96.94% <100.00%> (ø)` | |\n\n... and [50 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4131/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@guedou you're right. I have adapted the existing test to check both `str` and `bytes` work and give the same results."
    ],
    "commit_messages": [
      "fix(http2): HPackHdrTable().parse_txt_hdrs() accepts str & bytes (#4131)\n\n* fix(http2): HPackHdrTable().parse_txt_hdrs() accepts str & bytes\r\n\r\n* tests(http2): test  HPackHdrTable().parse_txt_hdrs() w/ both str & bytes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabbca88c0a76e0a5156a",
    "number": 4129,
    "body": "to prevent do_dissect_payload from failing with\r\n```\r\n  File \"scapy/scapy/layers/tls/record_sslv2.py\", line 177, in do_dissect_payload\r\n    if conf.debug_dissect:\r\n       ^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/scapy/config.py\", line 950, in __getattribute__\r\n    return object.__getattribute__(self, attr)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'Conf' object has no attribute 'debug_dissect'\r\n```\r\n\r\nThe test is added to exercise the Exception clause.\r\n\r\n(I accidentally spotted it in https://github.com/secdev/scapy/pull/4082#issuecomment-1690075949 but forgot to send a PR)",
    "head_branch": "tls-debug-dissector",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4129?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4129](https://app.codecov.io/gh/secdev/scapy/pull/4129?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (57c5fa5) into [master](https://app.codecov.io/gh/secdev/scapy/commit/219f2febd8456c440988b329b44c1dbcd0e47d0d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (219f2fe) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4129   +/-   ##\n=======================================\n  Coverage   80.95%   80.96%           \n=======================================\n  Files         330      330           \n  Lines       76234    76234           \n=======================================\n+ Hits        61714    61721    +7     \n+ Misses      14520    14513    -7     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4129?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/record\\_sslv2.py](https://app.codecov.io/gh/secdev/scapy/pull/4129?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfc3NsdjIucHk=) | `90.50% <100.00%> (+4.46%)` | :arrow_up: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4129/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "SSLv2: s/debug_dissect/debug_dissector/ (#4129)\n\nto prevent do_dissect_payload from failing with\r\n```\r\n  File \"scapy/scapy/layers/tls/record_sslv2.py\", line 177, in do_dissect_payload\r\n    if conf.debug_dissect:\r\n       ^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/scapy/config.py\", line 950, in __getattribute__\r\n    return object.__getattribute__(self, attr)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'Conf' object has no attribute 'debug_dissect'\r\n```\r\n\r\nThe test is added to exercise the Exception clause."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabbda88c0a76e0a5156b",
    "number": 4128,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks for your interest in Scapy.\r\nUnfortunately, the code you provided has almost nothing to do with Scapy, and is basically unsalvageable."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabbea88c0a76e0a5156c",
    "number": 4126,
    "body": "- switch PyPy to 3.10\r\n\r\nBreaking issues:\r\n- there's a bug (`https://foss.heptapod.net/pypy/pypy/-/issues/4003`) in PyPy that breaks our tests when a backslash is used to break, so we need it to be fixed before merging this.\r\n- brotli is currently having issues with the latest PyPy version: `https://github.com/google/brotli/issues/1072` (bypassed in https://github.com/secdev/scapy/issues/4115 by pinning the version). I however don't expect this to be fixed any time soon, considering their track record.",
    "head_branch": "pypy310",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4126?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n> Project coverage is 81.51%. Comparing base [(`01aeed2`)](https://app.codecov.io/gh/secdev/scapy/commit/01aeed2a3f729b7d4e125f6f7a042b3a94882862?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`4cde487`)](https://app.codecov.io/gh/secdev/scapy/pull/4126?dropdown=coverage&src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4126      +/-   ##\n==========================================\n- Coverage   82.17%   81.51%   -0.66%     \n==========================================\n  Files         350      350              \n  Lines       83261    83261              \n==========================================\n- Hits        68419    67870     -549     \n- Misses      14842    15391     +549     \n```\n\n[see 21 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4126/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Hi, how to run pydroid scapy\r\n\r\nOn Tue, Oct 10, 2023, 11:44 AM Nils Weiss ***@***.***> wrote:\r\n\r\n> ***@***.**** approved this pull request.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/secdev/scapy/pull/4126#pullrequestreview-1666324888>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BCIPH774JIDZP6PTAYCB3KDX6TRTTAVCNFSM6AAAAAA43VIJJWVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMYTMNRWGMZDIOBYHA>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n",
      "Ugh. I don't want to have and debug this. whyyyyy pypy",
      "The macos failure is funny though.\r\n\r\n```\r\n###(063)=[failed] Test signal fuzzing offset 1\r\n\r\n>>> test_offset = 100\r\n>>> \r\n>>> class testFrame3(SignalPacket):\r\n...     fields_desc = [\r\n...         BEUnsignedSignalField(\"muxSig7\", default=0, start=2, size=8, scaling=1, offset=test_offset),\r\n...     ]\r\n... \r\n>>> pkt = testFrame3()\r\n>>> pkt = fuzz(pkt)\r\n>>> \r\n>>> li = [pkt.muxSig7._fix() for x in range(100000)]\r\n>>> \r\n>>> assert abs(round(sum(li) / len(li)) - 128 - test_offset) < 2\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\nAssertionError\r\n```\r\n\r\nAs I understand is that was very, very unlikely :p "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabbfa88c0a76e0a5156d",
    "number": 4125,
    "body": "By the statement on line 1051 (`ip_header = ip_header.__class__(raw(ip_header))`), the value of the `len` field in the UDP header was set to 8 and the ESP layer in the packet was seen as padding.\r\n",
    "head_branch": "fix-ipsec-nat",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4125?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4125](https://app.codecov.io/gh/secdev/scapy/pull/4125?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3d068aa) into [master](https://app.codecov.io/gh/secdev/scapy/commit/63838a3fb471907fa5cc30dc1b92311666263078?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (63838a3) will **decrease** coverage by `0.01%`.\n> Report is 4 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4125      +/-   ##\n==========================================\n- Coverage   81.95%   81.95%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76200    76211      +11     \n==========================================\n+ Hits        62449    62456       +7     \n- Misses      13751    13755       +4     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4125?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ipsec.py](https://app.codecov.io/gh/secdev/scapy/pull/4125?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lwc2VjLnB5) | `90.38% <100.00%> (+1.58%)` | :arrow_up: |\n\n... and [8 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4125/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Could you share an example of the issue reproducer and add it as a unit test?"
    ],
    "commit_messages": [
      "Fix UDP header in IPSec NAT-Traversal. (#4125)\n\n* Fix UDP header in IPSec NAT-Traversal.\r\n\r\n* Added tests for IPSec NAT-Traversal."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabbfa88c0a76e0a5156e",
    "number": 4123,
    "body": "This PR corrects the value of the `padding` field of the `_ESPPlain` instance returned by `decrypt` method in `CryptAlgo` class.\r\n",
    "head_branch": "fix-padding",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4123?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4123](https://app.codecov.io/gh/secdev/scapy/pull/4123?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4c9568f) into [master](https://app.codecov.io/gh/secdev/scapy/commit/63838a3fb471907fa5cc30dc1b92311666263078?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (63838a3) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4123      +/-   ##\n==========================================\n- Coverage   81.95%   81.94%   -0.01%     \n==========================================\n  Files         330      330              \n  Lines       76200    76200              \n==========================================\n- Hits        62449    62443       -6     \n- Misses      13751    13757       +6     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4123?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ipsec.py](https://app.codecov.io/gh/secdev/scapy/pull/4123?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lwc2VjLnB5) | `88.80% <100.00%> (ø)` | |\n\n... and [9 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4123/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "HI there, thanks for your PR. Could you add a test that is broken before your PR and fixed with it? Also, it would greatly help the maintainers if you could provide explanations about your change. Thanks! ",
      "The fix looks right altough a test would be nice."
    ],
    "commit_messages": [
      "Fixed ESP padding in decryption"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc0a88c0a76e0a5156f",
    "number": 4119,
    "body": "- Fix Automaton.graph() with indirection\r\n\r\n**Before: `TLSClientAutomaton.graph()`**\r\n![scapy1](https://github.com/secdev/scapy/assets/10530980/1084e950-83d9-45ee-9834-c3bfea20d66c)\r\n\r\nThere are a few dangling conditions (linked to nothing, look just at the right of the BEGIN, or on the far right), or stuck states.\r\n\r\n**After: `TLSClientAutomaton.graph()`**\r\n![scapy2](https://github.com/secdev/scapy/assets/10530980/afcad463-054c-4b93-951f-18164674be73)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4119?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4119](https://app.codecov.io/gh/secdev/scapy/pull/4119?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (94c7dd3) into [master](https://app.codecov.io/gh/secdev/scapy/commit/63838a3fb471907fa5cc30dc1b92311666263078?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (63838a3) will **decrease** coverage by `0.02%`.\n> The diff coverage is `0.00%`.\n\n> :exclamation: Current head 94c7dd3 differs from pull request most recent head 811e00a. Consider uploading reports for the commit 811e00a to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4119      +/-   ##\n==========================================\n- Coverage   81.95%   81.93%   -0.02%     \n==========================================\n  Files         330      330              \n  Lines       76200    76212      +12     \n==========================================\n- Hits        62449    62445       -4     \n- Misses      13751    13767      +16     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4119?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/automaton.py](https://app.codecov.io/gh/secdev/scapy/pull/4119?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `73.99% <0.00%> (-0.98%)` | :arrow_down: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4119/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Fix Automaton.graph() with indirection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc1a88c0a76e0a51570",
    "number": 4118,
    "body": "Update doc-related dependencies to fix readthedocs",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix readthedocs: update doc dependencies"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc2a88c0a76e0a51571",
    "number": 4117,
    "body": null,
    "head_branch": "dtc_update",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4117?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4117](https://app.codecov.io/gh/secdev/scapy/pull/4117?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cfc8192) into [master](https://app.codecov.io/gh/secdev/scapy/commit/e3074451823394e3bb750a1a810dc880e7ea7082?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e307445) will **increase** coverage by `0.18%`.\n> The diff coverage is `90.00%`.\n\n> :exclamation: Current head cfc8192 differs from pull request most recent head e76abe4. Consider uploading reports for the commit e76abe4 to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4117      +/-   ##\n==========================================\n+ Coverage   81.76%   81.94%   +0.18%     \n==========================================\n  Files         330      330              \n  Lines       76281    76209      -72     \n==========================================\n+ Hits        62372    62451      +79     \n+ Misses      13909    13758     -151     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4117?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/uds.py](https://app.codecov.io/gh/secdev/scapy/pull/4117?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3Vkcy5weQ==) | `98.33% <90.00%> (-0.25%)` | :arrow_down: |\n\n... and [41 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4117/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "should I rebase, or is it fine?\r\n",
      "Oh.. wrong PR\r\n",
      "can this PR get merged, please?"
    ],
    "commit_messages": [
      "Add parsing of ExtendedDataRecord to UDS_DTCs (#4117)\n\n* Add UDS_DTC parsing for ExtendedDataRecords\r\n\r\n* add dict for DTC descriptions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc3a88c0a76e0a51572",
    "number": 4116,
    "body": "This PR cleans up the ISOTP TimeoutScheduler logging and adds a utility function the the Automotive Scanner",
    "head_branch": "uds_scanner_update",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4116?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4116](https://app.codecov.io/gh/secdev/scapy/pull/4116?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (23675ea) into [master](https://app.codecov.io/gh/secdev/scapy/commit/e3074451823394e3bb750a1a810dc880e7ea7082?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e307445) will **increase** coverage by `0.00%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `87.50%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4116   +/-   ##\n=======================================\n  Coverage   81.76%   81.76%           \n=======================================\n  Files         330      330           \n  Lines       76281    76379   +98     \n=======================================\n+ Hits        62372    62454   +82     \n- Misses      13909    13925   +16     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4116?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://app.codecov.io/gh/secdev/scapy/pull/4116?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `85.13% <100.00%> (+0.02%)` | :arrow_up: |\n| [scapy/contrib/automotive/scanner/executor.py](https://app.codecov.io/gh/secdev/scapy/pull/4116?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NjYW5uZXIvZXhlY3V0b3IucHk=) | `88.20% <66.66%> (-0.29%)` | :arrow_down: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4116/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Could you make sure you always add some context to your PRs?",
      "@gpotter2 Done!",
      "Can this PR get merged, please?\r\n"
    ],
    "commit_messages": [
      "Minor cleanup and add utility function for Automotive Scanner"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc4a88c0a76e0a51573",
    "number": 4114,
    "body": null,
    "head_branch": "docs",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4114?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4114](https://app.codecov.io/gh/secdev/scapy/pull/4114?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (81a7975) into [master](https://app.codecov.io/gh/secdev/scapy/commit/6829f4c97d1ad9587b96bc4af551fcaf6735724e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6829f4c) will **increase** coverage by `32.30%`.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4114       +/-   ##\n===========================================\n+ Coverage   49.67%   81.98%   +32.30%     \n===========================================\n  Files         342      349        +7     \n  Lines       76267    81853     +5586     \n===========================================\n+ Hits        37886    67105    +29219     \n+ Misses      38381    14748    -23633     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4114?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/sendrecv.py](https://app.codecov.io/gh/secdev/scapy/pull/4114?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `87.68% <100.00%> (+48.12%)` | :arrow_up: |\n| [scapy/supersocket.py](https://app.codecov.io/gh/secdev/scapy/pull/4114?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `75.64% <ø> (ø)` | |\n\n... and [263 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4114/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks.. can we merge it?",
      "I'll just try to test it and merge it when it's done, but it looks alright.\n\nI would also like to fix readthedocs builds, which have been broken for a while.",
      "whats broken? Can I assist?",
      "Builds fail (i.e. doc is not updated).\n\nhttps://readthedocs.org/projects/scapy/builds/\n\nThis happens in weird cases where dependencies don't match between readthedocs and our github tests.\n\nJust bumped the dependencies, it should get back to working.",
      "ok, great.. so we can merge this one?\r\n",
      "Ready for merge",
      "Okay there are many issues with this PR.\r\nGenerally `help(srp)` is unreadable, and the variables don't have the same name, nor are in the same order in the function and in the docstring.\r\n\r\nFor readers, this is what `help(srp)` looks like:\r\n\r\n```\r\nHelp on function srp in module scapy.sendrecv:\r\n\r\nsrp(x, promisc=None, iface=None, iface_hint=None, filter=None, nofilter=0, type=3, *args, **kargs)\r\n    Send and receive packets at layer 2\r\n\r\n    :param pks: SuperSocket instance to send/receive packets\r\n    :type pkt: SuperSocket\r\n\r\n    :param pkt: Packet or iterable of packets to be sent.\r\n    :type pkt: _PacketIterable\r\n    :param timeout: How much time to wait after the last packet\r\n                    has been sent. Defaults to None.\r\n    :type timeout: Optional[int]\r\n    :param inter: Delay between two packets during sending. Defaults to 0.\r\n    :type inter: Optional[int]\r\n\r\n    :param verbose: Set verbosity level. Defaults to None.\r\n    :type verbose: Optional[int]\r\n\r\n    :param chainCC: If True, KeyboardInterrupts will be forwarded.\r\n                    Defaults to False.\r\n    :type chainCC: Optional[bool]\r\n\r\n    :param retry: If positive, how many times to resend unanswered packets.\r\n                  If negative, how many times to retry when no more packets\r\n                  are answered. Defaults to 0.\r\n    :type retry: Optional[int]\r\n```\r\n\r\n- arguments are not in order\r\n- don't have the correct names\r\n- and the typing information makes it unreadable",
      "I totally agree, srp and srp1 is broken. Sorry. I'll fix it",
      "@gpotter2 Cleaned it up. ",
      "Could you please review?\r\n",
      "@gpotter2 I've resolved the conflicts on this PR, could you please have a look?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc4a88c0a76e0a51574",
    "number": 4113,
    "body": "https://datatracker.ietf.org/doc/html/rfc5908#section-4\r\n\r\nThe patch was cross-checked with Wireshark:\r\n\r\n        Option: NTP Server (56)\r\n        Length: 57\r\n        NTP Server Address\r\n            Suboption: NTP Server Address (1)\r\n            Length: 16\r\n            NTP Server Address: 2001:db8::1\r\n        NTP Multicast Address\r\n            Suboption: NTP Multicast Address (2)\r\n            Length: 16\r\n            NTP Multicast Address: ff02::101\r\n        NTP Server FQDN\r\n            Suboption: NTP Server FQDN (3)\r\n            Length: 13\r\n            NTP Server FQDN: example.com.",
    "head_branch": "dhcpv6-ntp",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4113?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4113](https://app.codecov.io/gh/secdev/scapy/pull/4113?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (197c9b8) into [master](https://app.codecov.io/gh/secdev/scapy/commit/06fc74b0f37e4fc68abde735b6164085aae9cfbe?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (06fc74b) will **increase** coverage by `0.78%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4113      +/-   ##\n==========================================\n+ Coverage   80.97%   81.75%   +0.78%     \n==========================================\n  Files         330      330              \n  Lines       76239    76264      +25     \n==========================================\n+ Hits        61732    62353     +621     \n+ Misses      14507    13911     -596     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4113?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dhcp6.py](https://app.codecov.io/gh/secdev/scapy/pull/4113?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3A2LnB5) | `85.73% <100.00%> (+0.41%)` | :arrow_up: |\n\n... and [18 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4113/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "The CI seems to have failed because of https://github.com/secdev/scapy/issues/4115.",
      "I've just rebased this PR on top of https://github.com/secdev/scapy/commit/619d1e45f39f2f705e59e8da417b090ea4ec3049 and force-pushed it to trigger the CI. Looks like it's green now."
    ],
    "commit_messages": [
      "[DHCPv6] add the NTP Server Option (#4113)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc5a88c0a76e0a51575",
    "number": 4111,
    "body": "- let Scapy load on unsupported platforms\r\n  - mock the required arch functions (`read_routes`, etc.)\r\n  - fix a dependency loop on those platforms, by putting `L3RawSocket6` next to its brother `L3RawSocket`\r\n\r\nIt's still miserable but at least it loads.",
    "head_branch": "miserable",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4111?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4111](https://app.codecov.io/gh/secdev/scapy/pull/4111?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b4e5e76) into [master](https://app.codecov.io/gh/secdev/scapy/commit/f0843cc7ad2d0e6e2a96fdd84fe14a1d5e8d4a8c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f0843cc) will **decrease** coverage by `0.02%`.\n> The diff coverage is `15.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4111      +/-   ##\n==========================================\n- Coverage   81.95%   81.93%   -0.02%     \n==========================================\n  Files         330      330              \n  Lines       76145    76161      +16     \n==========================================\n+ Hits        62405    62406       +1     \n- Misses      13740    13755      +15     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4111?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4111?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9fX2luaXRfXy5weQ==) | `73.43% <0.00%> (-16.95%)` | :arrow_down: |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4111?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `84.33% <0.00%> (+0.34%)` | :arrow_up: |\n| [scapy/interfaces.py](https://app.codecov.io/gh/secdev/scapy/pull/4111?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `96.60% <0.00%> (ø)` | |\n| [scapy/supersocket.py](https://app.codecov.io/gh/secdev/scapy/pull/4111?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `74.77% <50.00%> (-1.43%)` | :arrow_down: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4111/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks @gpotter2, that's a great idea! No reason one cannot dissect packets from a PCAP file on an unsupported platform!"
    ],
    "commit_messages": [
      "Let Scapy load on unsupported platforms (#4111)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc6a88c0a76e0a51576",
    "number": 4110,
    "body": "- compressing a 1 octet string into a 2 octet pointer isn't really smart\r\n\r\nbug shown as side effect of https://github.com/secdev/scapy/issues/4109",
    "head_branch": "dns-compression",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4110?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4110](https://app.codecov.io/gh/secdev/scapy/pull/4110?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2b176f5) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0bc40c69352e850500890b633d326963da4e9a1a?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0bc40c6) will **increase** coverage by `0.01%`.\n> Report is 3 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4110      +/-   ##\n==========================================\n+ Coverage   81.96%   81.97%   +0.01%     \n==========================================\n  Files         328      328              \n  Lines       75933    76029      +96     \n==========================================\n+ Hits        62239    62326      +87     \n- Misses      13694    13703       +9     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4110?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4110?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `86.68% <100.00%> (+0.04%)` | :arrow_up: |\n\n... and [8 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4110/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Do not compress 1 octet DNS strings (#4110)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc7a88c0a76e0a51577",
    "number": 4108,
    "body": "https://datatracker.ietf.org/doc/html/rfc8925#name-option-format\r\n```\r\n3.1.  Option Format\r\n\r\n      0                   1                   2                   3\r\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n     |     Code      |   Length      |           Value               |\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n     |         Value (cont.)         |\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n\r\n                Figure 1: IPv6-Only Preferred Option Format\r\n\r\n   Fields:\r\n\r\n   Code:  8-bit identifier of the IPv6-Only Preferred option code as\r\n      assigned by IANA: 108.\r\n\r\n   Length:  8-bit unsigned integer.  The length of the option, excluding\r\n      the Code and Length Fields.  The server MUST set the length field\r\n      to 4.\r\n\r\n   Value:  32-bit unsigned integer.  The number of seconds for which the\r\n      client should disable DHCPv4 (V6ONLY_WAIT configuration variable).\r\n```\r\nThe patch was also cross-checked with Wireshark:\r\n```\r\n    Option: (108) IPv6-Only Preferred\r\n        Length: 4\r\n        Value: ffffffff\r\n```",
    "head_branch": "ipv6-only-preferred",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4108?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4108](https://app.codecov.io/gh/secdev/scapy/pull/4108?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (17226d9) into [master](https://app.codecov.io/gh/secdev/scapy/commit/c57c02beb60538f23c3355cd8e207ed4f44462b6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c57c02b) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4108      +/-   ##\n==========================================\n- Coverage   81.98%   81.98%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       76027    76027              \n==========================================\n- Hits        62333    62328       -5     \n- Misses      13694    13699       +5     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4108?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dhcp.py](https://app.codecov.io/gh/secdev/scapy/pull/4108?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3AucHk=) | `82.41% <ø> (-1.63%)` | :arrow_down: |\n\n... and [8 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4108/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "[DHCPv4] add the IPv6-Only Preferred Option (#4108)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc8a88c0a76e0a51578",
    "number": 4107,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "7.4",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4107?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4107](https://app.codecov.io/gh/secdev/scapy/pull/4107?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cc51514) into [master](https://app.codecov.io/gh/secdev/scapy/commit/3e6900776698cd5472c5405294414d5b672a3f18?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3e69007) will **increase** coverage by `0.38%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4107      +/-   ##\n==========================================\n+ Coverage   81.59%   81.97%   +0.38%     \n==========================================\n  Files         328      328              \n  Lines       75949    75958       +9     \n==========================================\n+ Hits        61968    62264     +296     \n+ Misses      13981    13694     -287     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4107?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4107?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `87.23% <100.00%> (+0.14%)` | :arrow_up: |\n\n... and [14 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4107/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the PR ! Could you add one (or more) unit tests? Thanks",
      "Should this PR include some layer binding?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabc9a88c0a76e0a51579",
    "number": 4106,
    "body": "In commit 2f5d9bd4dab8 (\"PPP: protocol field can be limited to one byte\"), a new class PPP_ was added to manage parsing and generation a PPP header with a one byte PPP protocol field.\r\n\r\nThis was later reworked by commit 834309f91c1d (\"Small doc cleanups\"), which removed the PPP_ class, and changed the default behavior of the PPP class to generate a one byte protocol field by default, when its value was lower than 0x100.\r\n\r\nThe RFC states that \"by default, all implementations MUST transmit packets with two octet PPP Protocol fields\". A header with a one byte protocol field is issued by implementations when the compression is negociated.\r\n\r\nThis patch reverts to the original behavior, which is to generate a two bytes protocol field by default, but make it possible to explicitly generate a one byte protocol by passing the value as bytes(). The PPP class is still able to parse either a one or two bytes protocol.\r\n\r\nLink: https://www.rfc-editor.org/rfc/rfc1661.html#section-6.5\r\nFixes: 834309f91c1d (\"Small doc cleanups\")\r\nfixes #3913\r\n",
    "head_branch": "fix_ppp_proto_default_size",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4106?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4106](https://app.codecov.io/gh/secdev/scapy/pull/4106?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (62edcb9) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0bc40c69352e850500890b633d326963da4e9a1a?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0bc40c6) will **decrease** coverage by `0.39%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `70.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4106      +/-   ##\n==========================================\n- Coverage   81.96%   81.58%   -0.39%     \n==========================================\n  Files         328      328              \n  Lines       75933    75938       +5     \n==========================================\n- Hits        62239    61953     -286     \n- Misses      13694    13985     +291     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4106?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ppp.py](https://app.codecov.io/gh/secdev/scapy/pull/4106?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3BwcC5weQ==) | `96.66% <70.00%> (-0.97%)` | :arrow_down: |\n\n... and [14 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4106/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "> Could you add a test such as something like that?\r\n> \r\n> ```python\r\n> PPP(b\"\\x00\\x21\" + raw(IP())) == PPP(b\"\\x21\" + raw(IP()))\r\n> ```\r\n> \r\n> This would ensure we can dissect both packets with the same result.\r\n\r\nGood idea, I'm sending a v2 with this change.\r\nThanks for the review!",
      "Thanks @olivier-matz-6wind for this contribution!"
    ],
    "commit_messages": [
      "PPP: fix default size of protocol field (#4106)\n\nIn commit 2f5d9bd4dab8 (\"PPP: protocol field can be limited to one\r\nbyte\"), a new class PPP_ was added to manage parsing and generation a\r\nPPP header with a one byte PPP protocol field.\r\n\r\nThis was later reworked by commit 834309f91c1d (\"Small doc cleanups\"),\r\nwhich removed the PPP_ class, and changed the default behavior of the\r\nPPP class to generate a one byte protocol field by default, when its\r\nvalue was lower than 0x100.\r\n\r\nThe RFC states that \"by default, all implementations MUST transmit\r\npackets with two octet PPP Protocol fields\". A header with a one byte\r\nprotocol field is issued by implementations when the compression is\r\nnegociated.\r\n\r\nThis patch reverts to the original behavior, which is to generate a two\r\nbytes protocol field by default, but make it possible to explicitly\r\ngenerate a one byte protocol by passing the value as bytes(). The PPP\r\nclass is still able to parse either a one or two bytes protocol.\r\n\r\nLink: https://www.rfc-editor.org/rfc/rfc1661.html#section-6.5\r\nFixes #3913"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabcaa88c0a76e0a5157a",
    "number": 4105,
    "body": "https://datatracker.ietf.org/doc/html/rfc8781#name-option-format\r\n```\r\n      0                   1                   2                   3\r\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n     |     Type      |    Length     |     Scaled Lifetime     | PLC |\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n     |                                                               |\r\n     +                                                               +\r\n     |              Highest 96 bits of the Prefix                    |\r\n     +                                                               +\r\n     |                                                               |\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n\r\n                    Figure 1: NAT64 Prefix Option Format\r\n\r\n   Fields:\r\n\r\n   Type:  8-bit identifier of the PREF64 option type (38)\r\n\r\n   Length:  8-bit unsigned integer.  The length of the option (including\r\n      the Type and Length fields) is in units of 8 octets.  The sender\r\n      MUST set the length to 2.  The receiver MUST ignore the PREF64\r\n      option if the Length field value is not 2.\r\n\r\n   Scaled Lifetime:  13-bit unsigned integer.  The maximum time in units\r\n      of 8 seconds over which this NAT64 prefix MAY be used.\r\n\r\n   PLC (Prefix Length Code):  3-bit unsigned integer.  This field\r\n      encodes the NAT64 Prefix Length defined in [RFC6052].  The PLC\r\n      field values 0, 1, 2, 3, 4, and 5 indicate the NAT64 prefix length\r\n      of 96, 64, 56, 48, 40, and 32 bits, respectively.  The receiver\r\n      MUST ignore the PREF64 option if the Prefix Length Code field is\r\n      not set to one of those values.\r\n\r\n   Highest 96 bits of the Prefix:  96-bit unsigned integer.  Contains\r\n      bits 0 - 95 of the NAT64 prefix.\r\n```\r\n\r\nThe patch was also cross-checked with Wireshark:\r\n```\r\n    ICMPv6 Option (PREF64 Option)\r\n        Type: PREF64 Option (38)\r\n        Length: 2 (16 bytes)\r\n        0000 0111 0000 1... = Scaled Lifetime: 225\r\n        .... .... .... .001 = PLC (Prefix Length Code): 64 bits prefix length (0x1)\r\n        Prefix: 2003:da8:1::\r\n```\r\n\r\n(It's mostly prompted by https://github.com/systemd/systemd/issues/28985)",
    "head_branch": "pref64-ra-option",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4105?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4105](https://app.codecov.io/gh/secdev/scapy/pull/4105?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (bb38bdc) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0bc40c69352e850500890b633d326963da4e9a1a?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0bc40c6) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4105      +/-   ##\n==========================================\n- Coverage   81.96%   81.96%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75933    75944      +11     \n==========================================\n+ Hits        62239    62247       +8     \n- Misses      13694    13697       +3     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4105?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4105?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.60% <100.00%> (+0.12%)` | :arrow_up: |\n\n... and [8 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4105/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "[INET6] add the PREF64 ND option (#4105)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabcaa88c0a76e0a5157b",
    "number": 4104,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n\r\nWhile reviewing related code in https://github.com/secdev/scapy/pull/4091, @gpotter2 spotted an error in a previous submission.\r\n\r\nFixed and tested on a virtual machine.\r\n\r\nThanks\r\n",
    "head_branch": "dev/btmonfix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4104?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4104](https://app.codecov.io/gh/secdev/scapy/pull/4104?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d953f65) into [master](https://app.codecov.io/gh/secdev/scapy/commit/0bc40c69352e850500890b633d326963da4e9a1a?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0bc40c6) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4104      +/-   ##\n==========================================\n- Coverage   81.96%   81.95%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75933    75933              \n==========================================\n- Hits        62239    62233       -6     \n- Misses      13694    13700       +6     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4104?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4104?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `87.09% <100.00%> (ø)` | |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4104/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "scapy send erro how to fix\r\n\r\n\r\nOn Tue, Oct 10, 2023, 12:13 PM gpotter2 ***@***.***> wrote:\r\n\r\n> Merged #4104 <https://github.com/secdev/scapy/pull/4104> into master.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/secdev/scapy/pull/4104#event-10599640383>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BCIPH74F4Z5VGEMIN6MWZJTX6TU7XAVCNFSM6AAAAAA4BAZQQCVHI2DSMVQWIX3LMV45UABCJFZXG5LFIV3GK3TUJZXXI2LGNFRWC5DJN5XDWMJQGU4TSNRUGAZTQMY>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n",
      "Thanks for the merge! :)",
      "Thanks for the PR ! sorry for the delay"
    ],
    "commit_messages": [
      "bluetooth: BluetoothMonitorSocket fix\n\nSigned-off-by: Antonio Vázquez <antonio.vazquez@tarlogic.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabcba88c0a76e0a5157c",
    "number": 4103,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4103?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4103](https://app.codecov.io/gh/secdev/scapy/pull/4103?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (be02a89) into [master](https://app.codecov.io/gh/secdev/scapy/commit/8eab848c4b3820c3792d547b637ded43e3ad6155?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8eab848) will **increase** coverage by `0.01%`.\n> Report is 3 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4103      +/-   ##\n==========================================\n+ Coverage   81.96%   81.98%   +0.01%     \n==========================================\n  Files         328      328              \n  Lines       75918    76027     +109     \n==========================================\n+ Hits        62224    62327     +103     \n- Misses      13694    13700       +6     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4103?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4103?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `88.24% <100.00%> (+1.14%)` | :arrow_up: |\n\n... and [12 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4103/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Please fix the PEP8 issues.",
      "@gpotter2 Updated, can you please have a look?",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "Adding a few more Bluetooth HCI Commands (#4103)\n\n* Document the section of definition of some HCI commands\r\n\r\n* Add more Bluetooth HCI Commands [1]\r\n\r\n* Add more Bluetooth HCI commands [2]\r\n\r\n* Fix the definition of HCI_Connection_Complete\r\n\r\n- fix the name\r\n- add missing fields\r\n- update test\r\n\r\n* Add HCI_Inquiry_Complete event"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabcca88c0a76e0a5157d",
    "number": 4102,
    "body": "added the missing negative response code 0x34 - \"authentication required\"\r\n",
    "head_branch": "missing_uds_nr_fix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4102?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4102](https://app.codecov.io/gh/secdev/scapy/pull/4102?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f93cde5) into [master](https://app.codecov.io/gh/secdev/scapy/commit/62f398cc2b730dc01287fc2c7d9e469c65007761?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (62f398c) will **decrease** coverage by `1.85%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4102      +/-   ##\n==========================================\n- Coverage   81.94%   80.10%   -1.85%     \n==========================================\n  Files         328      328              \n  Lines       75873    75873              \n==========================================\n- Hits        62177    60779    -1398     \n- Misses      13696    15094    +1398     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4102?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/uds.py](https://app.codecov.io/gh/secdev/scapy/pull/4102?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3Vkcy5weQ==) | `98.52% <ø> (ø)` | |\n\n... and [43 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4102/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Update uds.py (#4102)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabcda88c0a76e0a5157e",
    "number": 4101,
    "body": "This PR adds support for [wireshark extcap](https://www.wireshark.org/docs/man-pages/extcap.html). It works on both linux and windows (note: extcap uses fifo on Linux and NamedPipes on Windows so it was a bit annoying on Windows).\r\n\r\nThis is pretty cool because it adds support for a ton of **weird hardware**.\r\n\r\nI tested the PR on:\r\n- [`nrf sniffer`](https://www.nordicsemi.com/Products/Development-tools/nrf-sniffer-for-bluetooth-le) (a bluetooth dongle stick)\r\n- [usbpcap](https://desowin.org/usbpcap/)\r\n- [`sshdump`](https://www.wireshark.org/docs/man-pages/sshdump.html)\r\n\r\nand it worked surprisingly okay.",
    "head_branch": "extcap-nordic",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4101](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6b19b09) into [master](https://app.codecov.io/gh/secdev/scapy/commit/c57c02beb60538f23c3355cd8e207ed4f44462b6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c57c02b) will **decrease** coverage by `0.03%`.\n> The diff coverage is `68.42%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4101      +/-   ##\n==========================================\n- Coverage   81.98%   81.96%   -0.03%     \n==========================================\n  Files         328      330       +2     \n  Lines       76027    76143     +116     \n==========================================\n+ Hits        62333    62408      +75     \n- Misses      13694    13735      +41     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/nrf\\_sniffer.py](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ucmZfc25pZmZlci5weQ==) | `0.00% <0.00%> (ø)` | |\n| [scapy/arch/windows/structures.py](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL3N0cnVjdHVyZXMucHk=) | `82.78% <25.92%> (-7.08%)` | :arrow_down: |\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `77.90% <73.33%> (-0.08%)` | :arrow_down: |\n| [scapy/libs/extcap.py](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy9leHRjYXAucHk=) | `88.70% <88.70%> (ø)` | |\n| [scapy/arch/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9fX2luaXRfXy5weQ==) | `90.38% <100.00%> (+0.18%)` | :arrow_up: |\n| [scapy/arch/bpf/core.py](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9icGYvY29yZS5weQ==) | `87.12% <100.00%> (ø)` | |\n| [scapy/arch/linux.py](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saW51eC5weQ==) | `86.59% <100.00%> (+1.28%)` | :arrow_up: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `66.17% <100.00%> (-0.44%)` | :arrow_down: |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `83.99% <100.00%> (-0.43%)` | :arrow_down: |\n| [scapy/data.py](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZGF0YS5weQ==) | `91.33% <100.00%> (+0.02%)` | :arrow_up: |\n| ... and [4 more](https://app.codecov.io/gh/secdev/scapy/pull/4101?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4101/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "> Did you try it with sshdump?\r\n\r\nJust did and it's working fine !",
      "Excellent !"
    ],
    "commit_messages": [
      "Add wireshark extcap support (#4101)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabcea88c0a76e0a5157f",
    "number": 4100,
    "body": "Resolves #4049 \r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4100?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4100](https://app.codecov.io/gh/secdev/scapy/pull/4100?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8af2e41) into [master](https://app.codecov.io/gh/secdev/scapy/commit/f37c4021eb191b2cf95693dc308a06d2bfb17717?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f37c402) will **increase** coverage by `0.26%`.\n> Report is 25 commits behind head on master.\n> The diff coverage is `34.28%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4100      +/-   ##\n==========================================\n+ Coverage   81.68%   81.95%   +0.26%     \n==========================================\n  Files         328      328              \n  Lines       75497    75875     +378     \n==========================================\n+ Hits        61668    62181     +513     \n+ Misses      13829    13694     -135     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4100?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tuntap.py](https://app.codecov.io/gh/secdev/scapy/pull/4100?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3R1bnRhcC5weQ==) | `73.77% <34.28%> (-9.06%)` | :arrow_down: |\n\n... and [40 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4100/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for this PR. I will give it a try. In the meantine, could you fix the PEP-08 issues https://github.com/secdev/scapy/actions/runs/5920584081/job/16053137679?pr=4100#step:5:1 ?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabcfa88c0a76e0a51580",
    "number": 4099,
    "body": "Since we already have a mechanism for selecting the `L3socket` based on the interface (this was designed more towards special bluetooth/usb interfaces), we can very simply add a check to use `L3RawSocket(6)` when using the loopback interface.\r\n\r\nThis removes the necessity to use `conf.L3socket = L3RawSocket` when using loopback.\r\n\r\n**I am however unsure if this is necessary on BSD/OSX**. @guedou what do you think?",
    "head_branch": "iface-routing",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4099?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4099](https://app.codecov.io/gh/secdev/scapy/pull/4099?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6ccbb12) into [master](https://app.codecov.io/gh/secdev/scapy/commit/204605b16590615159a7a563ea4d0820a592cd6d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (204605b) will **increase** coverage by `0.35%`.\n> Report is 5 commits behind head on master.\n> The diff coverage is `94.28%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4099      +/-   ##\n==========================================\n+ Coverage   81.60%   81.96%   +0.35%     \n==========================================\n  Files         328      328              \n  Lines       75766    75867     +101     \n==========================================\n+ Hits        61832    62183     +351     \n+ Misses      13934    13684     -250     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4099?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/interfaces.py](https://app.codecov.io/gh/secdev/scapy/pull/4099?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `96.50% <85.71%> (-0.93%)` | :arrow_down: |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4099?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `84.41% <100.00%> (+0.18%)` | :arrow_up: |\n| [scapy/sendrecv.py](https://app.codecov.io/gh/secdev/scapy/pull/4099?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `88.27% <100.00%> (+0.32%)` | :arrow_up: |\n\n... and [15 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4099/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "While you are at it, could you remove the useless backtick at https://github.com/secdev/scapy/blob/master/doc/scapy/troubleshooting.rst?plain=1#L57 ?",
      "Setting iface= is the best thing to do. I was just wandering why you were changing thisSent from my iPhoneOn 21 Aug 2023, at 19:23, gpotter2 ***@***.***> wrote:﻿\r\n@gpotter2 commented on this pull request.\r\n\r\n\r\n\r\nIn doc/scapy/troubleshooting.rst:\r\n> @@ -50,11 +64,20 @@ With IPv6, you can simply do::\r\n     <IPv6  version=6 tc=0 fl=866674 plen=8 nh=ICMPv6 hlim=64 src=::1 dst=::1 |<ICMPv6EchoReply  type=Echo Reply code=0 cksum=0x7ebb id=0x0 seq=0x0 |>>\r\n \r\n     # Layer 2\r\n-    >>> conf.iface = \"lo\"\r\n-    >>> srp1(Ether() / IPv6() / ICMPv6EchoRequest())\r\n+    >>> srp1(Ether() / IPv6() / ICMPv6EchoRequest(), iface=conf.loopback_name)\r\n\r\nI'm replacing the conf.iface = \"lo\" (line above), by iface= in the sniff itself. Do you think that's confusing?\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you were mentioned.Message ID: ***@***.***>",
      "I've addressed your points ! Feel free to merge it if you think it's ready."
    ],
    "commit_messages": [
      "Use L3RawSocket(6) automatically on lo (#4099)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd0a88c0a76e0a51581",
    "number": 4098,
    "body": "This PR adds a very small wrapper over `TCP_client` called `connect_asip`. This allows to open a TCP socket that spoofs another IP, without having to change the host IP. This is very useful for some specific scanning purposes.\r\n\r\nAlso cleans up a bit the `_IO_fdwrapper` on windows to support sockets.",
    "head_branch": "connect_asip",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4098?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4098](https://app.codecov.io/gh/secdev/scapy/pull/4098?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6b32b39) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2fe5cee7b2fdca940b1774ee26a4948e88417232?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2fe5cee) will **decrease** coverage by `0.01%`.\n> The diff coverage is `47.36%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4098      +/-   ##\n==========================================\n- Coverage   81.95%   81.95%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75852    75873      +21     \n==========================================\n+ Hits        62163    62178      +15     \n- Misses      13689    13695       +6     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4098?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/l2.py](https://app.codecov.io/gh/secdev/scapy/pull/4098?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `85.16% <0.00%> (-0.73%)` | :arrow_down: |\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4098?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `71.13% <28.57%> (-0.67%)` | :arrow_down: |\n| [scapy/automaton.py](https://app.codecov.io/gh/secdev/scapy/pull/4098?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `74.97% <91.66%> (+0.41%)` | :arrow_up: |\n| [scapy/supersocket.py](https://app.codecov.io/gh/secdev/scapy/pull/4098?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `76.20% <100.00%> (+0.97%)` | :arrow_up: |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4098/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Suggestions for something better than `connect_asip` are welcome.",
      "> Suggestions for something better than `connect_asip` are welcome.\n\nYou mean a better _name_ for the function? Here some suggestions:\n\nconnect_from_ip\nconnect_spoofing_ip\nspoof_ip\nspoof\n",
      "Thanks. I like `connect_from_ip`"
    ],
    "commit_messages": [
      "Add connect_from_ip command (#4098)\n\nconnect_from_ip creates a tcp socket that spoofs another IP."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd0a88c0a76e0a51582",
    "number": 4095,
    "body": "These fields are 8-bit signed integers, per\r\nhttps://datatracker.ietf.org/doc/html/rfc5905#page-21 (bottom of the page).\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nPossible impact: client code depending on this being unsigned will break.  But that code is wrong already, so maybe that's OK?  I'm happy to discuss in the PR or create an issue if that's what you prefer.\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "ntp-poll-and-precision-signed",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4095?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4095](https://app.codecov.io/gh/secdev/scapy/pull/4095?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (47d7b77) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2fe5cee7b2fdca940b1774ee26a4948e88417232?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2fe5cee) will **increase** coverage by `0.01%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4095      +/-   ##\n==========================================\n+ Coverage   81.95%   81.96%   +0.01%     \n==========================================\n  Files         328      328              \n  Lines       75852    75852              \n==========================================\n+ Hits        62163    62171       +8     \n+ Misses      13689    13681       -8     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4095?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ntp.py](https://app.codecov.io/gh/secdev/scapy/pull/4095?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250cC5weQ==) | `85.36% <ø> (ø)` | |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4095/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "If any maintainers are seeing this PR, I don't think the unit test failures are anything to do with the code - they're failing on package installation.  Also, the code coverage reduction seems strange, since there were no lines added or deleted, merely updates.",
      "Thanks a lot for the PR and sorry for the delay !"
    ],
    "commit_messages": [
      "Fix NTP poll and precision data types\n\nThese fields are 8-bit signed integers, per\nhttps://datatracker.ietf.org/doc/html/rfc5905#page-21 (bottom of the\npage)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd1a88c0a76e0a51583",
    "number": 4094,
    "body": null,
    "head_branch": "dtcs_o",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4094?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4094](https://app.codecov.io/gh/secdev/scapy/pull/4094?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a7c523b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/353b2413f41c01eeacf3516eebc70821c82f70ef?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (353b241) will **decrease** coverage by `1.94%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4094      +/-   ##\n==========================================\n- Coverage   81.93%   80.00%   -1.94%     \n==========================================\n  Files         330      330              \n  Lines       76161    76174      +13     \n==========================================\n- Hits        62405    60944    -1461     \n- Misses      13756    15230    +1474     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4094?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/uds.py](https://app.codecov.io/gh/secdev/scapy/pull/4094?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3Vkcy5weQ==) | `98.57% <100.00%> (+0.05%)` | :arrow_up: |\n\n... and [46 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4094/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "The failing unit test is not related to this PR. @gpotter2 Can this PR please get merged?",
      "Yeah there's some weird PyPy bug.",
      "I've read the upstream documentation.. Sounds horrible"
    ],
    "commit_messages": [
      "UDS: more precise parsing of DTCs (#4094)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd2a88c0a76e0a51584",
    "number": 4092,
    "body": "This PR adds some checks in the DNS answering machine code that parses the received packets.\r\n\r\n**Checklist:**\r\n\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n\r\nfixes #4090\r\n",
    "head_branch": "fix-4090",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4092?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAttention: Patch coverage is `87.50000%` with `3 lines` in your changes are missing coverage. Please review.\n> Project coverage is 82.17%. Comparing base [(`01aeed2`)](https://app.codecov.io/gh/secdev/scapy/commit/01aeed2a3f729b7d4e125f6f7a042b3a94882862?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`32ef3af`)](https://app.codecov.io/gh/secdev/scapy/pull/4092?dropdown=coverage&src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4092   +/-   ##\n=======================================\n  Coverage   82.17%   82.17%           \n=======================================\n  Files         350      350           \n  Lines       83261    83282   +21     \n=======================================\n+ Hits        68419    68441   +22     \n+ Misses      14842    14841    -1     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4092?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4092?src=pr&el=tree&filepath=scapy%2Flayers%2Fdns.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `88.62% <87.50%> (-0.10%)` | :arrow_down: |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4092/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd3a88c0a76e0a51585",
    "number": 4091,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n\r\nI need some help to finish the last details of this PR.\r\n\r\nThere are some packets that do not contain fields. Tests for those packets fail as layers are not added for what I presume is there are no remaining bytes to parse...\r\n\r\nHow should I proceed to force the addition of this layer?\r\n\r\nThanks!\r\n",
    "head_branch": "dev/btmon",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4091?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4091](https://app.codecov.io/gh/secdev/scapy/pull/4091?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (43c361b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5fa6428a1843fb851d8c6de1d0c59dad0168df78?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5fa6428) will **increase** coverage by `32.18%`.\n> Report is 5 commits behind head on master.\n> The diff coverage is `84.61%`.\n\n> :exclamation: Current head 43c361b differs from pull request most recent head 7255046. Consider uploading reports for the commit 7255046 to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4091       +/-   ##\n===========================================\n+ Coverage   49.60%   81.79%   +32.18%     \n===========================================\n  Files         341      331       -10     \n  Lines       76081    76401      +320     \n===========================================\n+ Hits        37742    62491    +24749     \n+ Misses      38339    13910    -24429     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4091?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4091?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `83.20% <ø> (+27.86%)` | :arrow_up: |\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4091?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `88.60% <ø> (+6.28%)` | :arrow_up: |\n| [scapy/layers/hcimon.py](https://app.codecov.io/gh/secdev/scapy/pull/4091?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2hjaW1vbi5weQ==) | `84.61% <84.61%> (ø)` | |\n\n... and [270 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4091/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "There are tests failing, could you fix them?\r\n\r\nOn another note. Are you testing the code you're submitting? I did not enforce the requirement for Unit Testing (which is usually the case) in the last PR because sockets are hard to test on CI, but I realized that clearly `BluetoothMonitorSocket` couldn't work since it was defined as\r\n```python\r\nclass BluetoothMonitorSocket(SuperSocket):\r\n```\r\ninstead of\r\n```python\r\nclass BluetoothMonitorSocket(_BluetoothLibcSocket):\r\n```\r\nSo I'll be manually making sure the PRs do work from now on. Expect longer review times.\r\n\r\nStill, thanks for your work on Scapy !",
      "> There are tests failing, could you fix them?\r\n\r\nI raised the issue on the PR comment:\r\n\r\n> There are some packets that do not contain fields. Tests for those packets fail as layers are not added for what I presume is there are no remaining bytes to parse...\r\n> How should I proceed to force the addition of this layer?\r\n\r\nAny pointers?\r\n\r\nRegarding the socket issue I have opened a separate PR. I don't know how that got in... I try to test it all and use it in my projects. It may got in during a rebase 🤦 . Will try to be more thorough. Thanks",
      "Renamed layer as per your request @gpotter2 .\r\nSocket fix has been merged.\r\n\r\nFor the time being, the only remaining point is the empty layer not being appended when parsing... Any points regarding my issue? Please, see https://github.com/secdev/scapy/pull/4091#issuecomment-1695310999 as I need help in order to move forward...",
      "Regarding your question: you shouldn't be using empty payloads. It's a better practice to stick to the whats send on the network. You could provide the same information by using an EnumField in opcode, and even a `mysummary()` function to ease displaying.",
      "(sorry for the delayed answer :/)",
      "That is interesting, thanks for the feedback. Please note that I am still a bit confused. It makes sense to me to not empty payloads. I don't think that conceptually makes much sense to use \"empty packets\", but...\r\n\r\nUsing a `EnumField` would require to duplicate all the information available via the `bind_layer` operations that are already mandatory for many other packets that do have length. (Warning: opinionated comment follows) This also makes using the packet a little bit more difficult when trying to write tools with Scapy as it would mean that you need to check and compare the opcode instead of directly using higher level filters such as the layer you are interested in.\r\n\r\nI did not know about `mysummary()` and will read about it when I find some time.\r\n\r\nI will use an `EnumField` in this case as it seems the most reasonable thing to do but beware that I think that the Bluetooth core specification is a bit confusing regarding this. I mean this because it defines those \"empty packets\" as packets or PDUs (see Bluetooth Core V5.3 Vol 4 Part E Section 7.4.1 for example). Bluetooth layer is full of those empty packet definitions but there are no tests for those! Anyway, for the time being lets fix this and we will deal with the other packets in the future.\r\n\r\nOne last thought, the packets I am trying to implement are not part of Bluetooth core spec. These come from Bluez. I am tempted to put them in a separate file for better organization. I will move them, let me know if you prefer to not do that...\r\n\r\nThanks!\r\n",
      "> This also makes using the packet a little bit more difficult when trying to write tools with Scapy as it would mean that you need to check and compare the opcode instead of directly using higher level filters such as the layer you are interested in.\n\nTypically you can afterwards then use either the number or the string when building a packet. It also shows a nice string when using `show()` or similar.",
      "All lights green! :)"
    ],
    "commit_messages": [
      "Bluetooth: refactor Bluetooth Monitor packets (#4091)\n\n* Add many Bluetooth Monitor packets\r\n\r\n* Restore HCI_MON in bluetooth.py\r\n\r\n---------\r\n\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd4a88c0a76e0a51586",
    "number": 4089,
    "body": "According to https://datatracker.ietf.org/doc/html/rfc4795#section-2.1.1 the TC bit is followed by the T bit:\r\n```\r\n                                      1  1  1  1  1  1\r\n        0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5\r\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\r\n      |                      ID                       |\r\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\r\n      |QR|   Opcode  | C|TC| T| Z| Z| Z| Z|   RCODE   |\r\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\r\n```\r\nwhere the 'T'entative bit is set in a response if the responder is authoritative for the name, but has not yet verified the uniqueness of the name.\r\n\r\nThis patch splits the 2-bit \"TC\" field into two 1-bit fields corresponding to the \"TC\" and \"T\" bits.\r\n\r\nThe test is added to make sure that tentative responses can be dissected. It was also cross-checked with Wireshark:\r\n```\r\nLink-local Multicast Name Resolution (response)\r\n    Transaction ID: 0x87df\r\n    Flags: 0x8100 Standard query response, No error\r\n        1... .... .... .... = Response: Message is a response\r\n        .000 0... .... .... = Opcode: Standard query (0)\r\n        .... .0.. .... .... = Conflict: The name is considered unique\r\n        .... ..0. .... .... = Truncated: Message is not truncated\r\n        .... ...1 .... .... = Tentative: Tentative\r\n        .... .... .... 0000 = Reply code: No error (0)\r\n```",
    "head_branch": "llmnr-t-bit",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4089?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4089](https://app.codecov.io/gh/secdev/scapy/pull/4089?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b3d4a33) into [master](https://app.codecov.io/gh/secdev/scapy/commit/3bd29da2a86aac1e82ab9197d156ff28cdd48860?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3bd29da) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4089      +/-   ##\n==========================================\n- Coverage   81.96%   81.95%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75847    75847              \n==========================================\n- Hits        62171    62164       -7     \n- Misses      13676    13683       +7     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4089?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/llmnr.py](https://app.codecov.io/gh/secdev/scapy/pull/4089?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2xsbW5yLnB5) | `97.67% <ø> (ø)` | |\n\n... and [8 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4089/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks @evverx!"
    ],
    "commit_messages": [
      "[LLMNR] recognize the \"T\"entative bit (#4089)\n\nAccording to https://datatracker.ietf.org/doc/html/rfc4795#section-2.1.1\r\nthe TC bit is followed by the T bit:\r\n```\r\n                                      1  1  1  1  1  1\r\n        0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5\r\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\r\n      |                      ID                       |\r\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\r\n      |QR|   Opcode  | C|TC| T| Z| Z| Z| Z|   RCODE   |\r\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\r\n```\r\nwhere the 'T'entative bit is set in a response if the\r\nresponder is authoritative for the name, but has not yet\r\nverified the uniqueness of the name.\r\n\r\nThis patch splits the 2-bit \"TC\" field into two 1-bit fields\r\ncorresponding to the \"TC\" and \"T\" bits.\r\n\r\nThe test is added to make sure that tentative responses can be\r\ndissected. It was also cross-checked with Wireshark:\r\n```\r\nLink-local Multicast Name Resolution (response)\r\n    Transaction ID: 0x87df\r\n    Flags: 0x8100 Standard query response, No error\r\n        1... .... .... .... = Response: Message is a response\r\n        .000 0... .... .... = Opcode: Standard query (0)\r\n        .... .0.. .... .... = Conflict: The name is considered unique\r\n        .... ..0. .... .... = Truncated: Message is not truncated\r\n        .... ...1 .... .... = Tentative: Tentative\r\n        .... .... .... 0000 = Reply code: No error (0)\r\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd5a88c0a76e0a51587",
    "number": 4088,
    "body": "- Divide opcode into ogf and ocf following Core Spec\r\n- Redefine existing HCI commands with new format\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThe ogf and ocf fields in the Bluetooth  HCI Command Header are grouped together, \r\nmaking it difficult to check these individual fields and mapping them back to packet definitions in\r\nCore spec.\r\n\r\nThis change divide the opcode field into ogf and ocf bitfields following the defitions in core spec.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4088?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4088](https://app.codecov.io/gh/secdev/scapy/pull/4088?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (98d96ef) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2fe5cee7b2fdca940b1774ee26a4948e88417232?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2fe5cee) will **increase** coverage by `0.01%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `96.61%`.\n\n> :exclamation: Current head 98d96ef differs from pull request most recent head a1a5e03. Consider uploading reports for the commit a1a5e03 to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4088      +/-   ##\n==========================================\n+ Coverage   81.95%   81.97%   +0.01%     \n==========================================\n  Files         328      328              \n  Lines       75852    75897      +45     \n==========================================\n+ Hits        62163    62213      +50     \n+ Misses      13689    13684       -5     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4088?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4088?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `87.09% <96.61%> (+0.77%)` | :arrow_up: |\n\n... and [9 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4088/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "You have quite a bunch of failing tests. Could you fix those? Thanks",
      "Please do not run an auto-formatter. This brings many un-necessary changes to the PR making it harder to review, and breaking the history. Could you revert this commit and only fix the formatting of your own changes? Thanks",
      "@gpotter2 Can you please have another look?",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "Improve Bluetooth HCI Command packet definition (#4088)\n\n* Improve Bluetooth HCI Command packet definition\n\n- Divide opcode into ogf and ocf following Core Spec\n- Redefine existing HCI commands with new format\n\n* Fix some issues in existing hci command packets\n\n1. Fix some outdated command definitions\n2. Fix the names of commands, use the formal name from core spec\n3. Fix the some of the tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd5a88c0a76e0a51588",
    "number": 4084,
    "body": "Some tests seem broken. See #4083\r\n\r\n**Checklist:**\r\n\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n",
    "head_branch": "fix-asres-tests",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4084?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4084](https://app.codecov.io/gh/secdev/scapy/pull/4084?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b781212) into [master](https://app.codecov.io/gh/secdev/scapy/commit/7fced60458435297d2442604014301af32a8f9cd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7fced60) will **increase** coverage by `29.15%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4084       +/-   ##\n===========================================\n+ Coverage   52.80%   81.95%   +29.15%     \n===========================================\n  Files         328      328               \n  Lines       75836    75836               \n===========================================\n+ Hits        40042    62154    +22112     \n+ Misses      35794    13682    -22112     \n```\n\n[see 230 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4084/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Well, the test works perfectly fine. However, as the data source for the whois server that we use depends on live BGP data, the test sometimes catches BGP leaks / hijacks.I understand your concern but there is much that we can do here. Adding the hijacker ASN to the list is not a fix as next time it will likely be another ASN.We could check that 15169 appears at least once in the list instead, but I like the idea of Scapy CI detecting BGP hijacks now and then =)Sent from my iPhoneOn 1 Aug 2023, at 23:52, Pierre ***@***.***> wrote:﻿\r\n@p-l- commented on this pull request.\r\n\r\n\r\n\r\nIn test/regression.uts:\r\n> @@ -1639,7 +1639,8 @@ retry_test(_test)\r\n def _test():\r\n     ret = conf.AS_resolver.resolve(\"8.8.8.8\", \"8.8.4.4\")\r\n     assert (len(ret) == 2)\r\n-    all(x[1] == \"AS15169\" for x in ret)\r\n\r\nI don't like the idea of keeping a test that sometimes \"does not work\". Also, while we could ignore it, when this test fails, it can hide another test, running after this one, that would fail. For this reason I'm not confident in merging e.g. #4083.\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you commented.Message ID: ***@***.***>",
      "Well, the test is still broken. It does not work, as its purpose is to spot errors in Scapy, not unrelated BGP leaks or hijacks. I don't like having our CI to break when it's not a bug in Scapy, particularly when it really last.",
      "> We could check that 15169 appears at least once in the list instead\r\n\r\nI have implemented that, you're right it's much better and will make this test way more reliable!"
    ],
    "commit_messages": [
      "Tests: fix AS resolver tests (#4084)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd6a88c0a76e0a51589",
    "number": 4083,
    "body": "**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [X] I added unit tests or explained why they are not relevant\r\n-   [X] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThis PR introduces the following changes to the Ethernet/IP layer, last updated in 2019:\r\n- Fix a few syntax errors\r\n- Change the payload build/dissect type from MultipleTypeField to bind_layer\r\n- Detail the List* requests and replies' fields\r\n- Add some constants\r\n- Refactor some classes (I also changed a few names)\r\n\r\nI made the PR because some Packets from the layer were apparently untested and wouldn't work against a real Ethernet/IP server.\r\n\r\nAll the changes have been tested against a physical Ethernet/IP gateway device and were written according to Ethernet/IP (enip) Wireshark dissector's code. Some packets could be added or detailed in the future but I did not have the means to test them (I left comments instead).\r\n\r\n",
    "head_branch": "contrib-enip",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4083?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4083](https://app.codecov.io/gh/secdev/scapy/pull/4083?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f873aa9) into [master](https://app.codecov.io/gh/secdev/scapy/commit/8e116af0e0326f71d54cc20d4b6d894ba3c9bddb?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8e116af) will **decrease** coverage by `27.31%`.\n> The diff coverage is `100.00%`.\n\n> :exclamation: Current head f873aa9 differs from pull request most recent head 0c19169. Consider uploading reports for the commit 0c19169 to get more accurate results\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4083       +/-   ##\n===========================================\n- Coverage   80.11%   52.81%   -27.31%     \n===========================================\n  Files         328      328               \n  Lines       75836    75847       +11     \n===========================================\n- Hits        60756    40056    -20700     \n- Misses      15080    35791    +20711     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4083?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/enipTCP.py](https://app.codecov.io/gh/secdev/scapy/pull/4083?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9lbmlwVENQLnB5) | `93.84% <100.00%> (-0.60%)` | :arrow_down: |\n\n... and [234 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4083/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Hey @claire-lex!\r\nThanks for this contribution. Could you update `.config/codespell_ignore.txt` to add `componet` and `hart`, to make codespell happy?\r\nApart from that, LGTM, but I'd like to have @polybassa's view. ",
      "Hi @p-l- ! \r\nAll done for the codespell_ignore.txt part :)",
      "For some reason the `AS_resolver6()` tests are failing for `\"2001:4860:4860::8888\"`, unrelated to that PR.\r\n```\r\n>>> as_resolver6 = AS_resolver6()\r\n>>> ret = as_resolver6.resolve(\"2001:4860:4860::8888\", \"2001:4860:4860::4444\")\r\n>>> ret\r\n[('2001:4860:4860::8888', 4205777769, ''),\r\n ('2001:4860:4860::4444', 15169, 'GOOGLE, US')]\r\n```",
      "Hey @claire-lex!\r\nWe had an issue with a test that should be fixed now. Could you rebase your PR against current `master` branch?\r\nSorry for the inconvenience",
      "Hi!\r\nDone :)",
      "Thank you!"
    ],
    "commit_messages": [
      "Update Ethernet/IP contrib and tests (#4083)\n\nAdd Hart and CompoNet to Codespell ignore settings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd7a88c0a76e0a5158a",
    "number": 4082,
    "body": "- all `Sessions`: replace `on_received_packet` by two functions: `recv` that is an iterator and `process`. This makes a cleaner separation, and re-puts the storing/prn/etc; back into `sniff` (where it should have been left)\r\n- cleanup `TCPSession`:\r\n  - now do not dissect the packet just to re-build it afterwards, thanks to a new `stop_payload_dissection` attribute, which allows the caller to say \"Don't parse above TCP\". This required changing the layout of `recv()` in SuperSocket to allow for extra arguments.\r\n  - better handling of out-of-order packets: handle the case where the first packet received wasn't the first (fixes https://github.com/secdev/scapy/issues/4030)\r\n- cleanup IP fragmentation utils:\r\n  - deduplicate the two `fragment()` functions\r\n  - fix https://github.com/secdev/scapy/pull/3970\r\n- cleanup TLS sessions\r\n  - fix TLS sessions being badly recognized when over TCP defragmented sessions (with TCPSession)\r\n  - fix `repr()` not showing the correct direction in tls sessions\r\n  - deprecate `TLSSession` (literally brings nothing. Just use `TCPSession` with `conf.tls_session_enable=True`). This is now also fixed thanks to the above fix.\r\n  - fix the handling of NSS files: now supports multiple streams (fixes https://github.com/secdev/scapy/pull/3374#issuecomment-981634748)\r\n  - there was a bug in our handling of extended master secret key that made it so that we always called `compute_ms_and_derive_keys` even if no `pre_master_secret_key` was computed (i.e. we don't have any private key). This is now fixed, the function is only called whenever the `pre_master_secret_key` has been computed.\r\n  - fix https://github.com/secdev/scapy/issues/3722 (the NSS keys were only computed when the bug above occured, leading to sessions not using extended master key to fail to compute them, and making the bug unclear). This is now properly fixed: NSS keys are checked separately as last resort.\r\n\r\nfixes https://github.com/secdev/scapy/issues/4030\r\nfixes https://github.com/secdev/scapy/issues/3722\r\ncloses https://github.com/secdev/scapy/pull/3966\r\ncloses https://github.com/secdev/scapy/pull/3970 ",
    "head_branch": "sessions",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4082](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b5b47b7) into [master](https://app.codecov.io/gh/secdev/scapy/commit/f311149a3073dc592fd6488ca83574dcad782e1a?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f311149) will **decrease** coverage by `1.00%`.\n> The diff coverage is `88.79%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4082      +/-   ##\n==========================================\n- Coverage   81.93%   80.94%   -1.00%     \n==========================================\n  Files         330      330              \n  Lines       76212    76234      +22     \n==========================================\n- Hits        62448    61710     -738     \n- Misses      13764    14524     +760     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/record\\_sslv2.py](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfc3NsdjIucHk=) | `86.03% <0.00%> (ø)` | |\n| [scapy/contrib/isotp/isotp\\_native\\_socket.py](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9uYXRpdmVfc29ja2V0LnB5) | `44.23% <50.00%> (ø)` | |\n| [scapy/layers/dcerpc.py](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RjZXJwYy5weQ==) | `78.41% <50.00%> (+0.03%)` | :arrow_up: |\n| [scapy/contrib/automotive/bmw/hsfz.py](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2Jtdy9oc2Z6LnB5) | `59.78% <75.00%> (ø)` | |\n| [scapy/contrib/automotive/doip.py](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2RvaXAucHk=) | `71.15% <75.00%> (ø)` | |\n| [scapy/contrib/automotive/ecu.py](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `93.26% <75.00%> (ø)` | |\n| [scapy/layers/tls/record\\_tls13.py](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfdGxzMTMucHk=) | `87.28% <75.00%> (+3.95%)` | :arrow_up: |\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `77.90% <76.92%> (ø)` | |\n| [scapy/layers/tls/session.py](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `86.18% <82.35%> (-2.01%)` | :arrow_down: |\n| [scapy/layers/netflow.py](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL25ldGZsb3cucHk=) | `90.15% <85.71%> (-0.32%)` | :arrow_down: |\n| ... and [17 more](https://app.codecov.io/gh/secdev/scapy/pull/4082?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n\n... and [17 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4082/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Hi,\r\n\r\nWhen I run this PR on my [test pcap](https://github.com/secdev/scapy/files/12231501/test.pcap.zip) I'm getting:\r\n\r\n```bash\r\n(venv) $ python3 test.py\r\nWARNING: No IPv4 address found on anpi1 !\r\nWARNING: No IPv4 address found on anpi2 !\r\nWARNING: more No IPv4 address found on anpi0 !\r\nWARNING: TLSSession is deprecated and will be removed in a future version. Please use TCPSession instead with conf.tls_session_enable=True\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 9, in <module>\r\n    capture = sniff(offline=\"test.pcap\", session=TCPSession)\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/scapy/sendrecv.py\", line 1311, in sniff\r\n    sniffer._run(*args, **kwargs)\r\n  File \"/venv/lib/python3.11/site-packages/scapy/sendrecv.py\", line 1254, in _run\r\n    session.on_packet_received(p)\r\n  File \"/venv/lib/python3.11/site-packages/scapy/sessions.py\", line 396, in on_packet_received\r\n    pkt = self._process_packet(pkt)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/scapy/sessions.py\", line 359, in _process_packet\r\n    packet = tcp_reassemble(\r\n             ^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/scapy/layers/tls/session.py\", line 1128, in tcp_reassemble\r\n    return cls(data, _underlayer=underlayer)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/scapy/base_classes.py\", line 398, in __call__\r\n    i.__init__(*args, **kargs)\r\n  File \"/venv/lib/python3.11/site-packages/scapy/layers/tls/record.py\", line 303, in __init__\r\n    super(TLS, self).__init__(*args, **kargs)\r\n  File \"/venv/lib/python3.11/site-packages/scapy/layers/tls/session.py\", line 995, in __init__\r\n    Packet.__init__(self, _pkt=_pkt, post_transform=post_transform,\r\n  File \"/venv/lib/python3.11/site-packages/scapy/packet.py\", line 183, in __init__\r\n    self.dissect(_pkt)\r\n  File \"/venv/lib/python3.11/site-packages/scapy/packet.py\", line 1070, in dissect\r\n    s = self.pre_dissect(s)\r\n        ^^^^^^^^^^^^^^^^^^^\r\n  File \"/venv/lib/python3.11/site-packages/scapy/layers/tls/record.py\", line 528, in pre_dissect\r\n    iv, cfrag, mac = self._tls_auth_decrypt(hdr, efrag)\r\n    ^^^^^^^^^^^^^^\r\nValueError: not enough values to unpack (expected 3, got 2)\r\n```\r\n\r\nCode:\r\n\r\n```python\r\nfrom scapy.config import conf\r\nfrom scapy.main import load_layer\r\nfrom scapy.sendrecv import sniff\r\nfrom scapy.sessions import TCPSession\r\n\r\nconf.tls_session_enable=True\r\nload_layer(\"tls\")\r\n\r\ncapture = sniff(offline=\"test.pcap\", session=TCPSession)\r\n```\r\n\r\nCheers",
      "Hi,\r\n\r\nJust ran another test with this [pcap](https://github.com/secdev/scapy/files/12300645/test_2.pcap.zip) and `tcp_reassemble()` (in `scapy/layers/tls/session.py`) takes forever to process.\r\n\r\n```python\r\nfrom scapy.config import conf\r\nfrom scapy.main import load_layer\r\nfrom scapy.sendrecv import sniff\r\nfrom scapy.sessions import TCPSession\r\n\r\nconf.tls_session_enable=True\r\nload_layer(\"tls\")\r\n\r\n\r\ncapture = sniff(offline=\"test_2.pcap\", session=TCPSession)\r\n\r\nprint(\"Done\")\r\n```\r\n\r\nPyinstrument output:\r\n\r\n```bash\r\n$ pyinstrument test.py -r text --show '*/scapy/*'    \r\n\r\n  _     ._   __/__   _ _  _  _ _/_   Recorded: 11:34:08  Samples:  354062\r\n /_//_/// /_\\ / //_// / //_'/ //     Duration: 361.988   CPU time: 360.251\r\n/   _/                      v4.5.1\r\n\r\nProgram: test.py\r\n\r\n361.987 <module>  test.py:1\r\n└─ 359.257 sniff  scapy/sendrecv.py:1307\r\n   └─ 359.257 AsyncSniffer._run  scapy/sendrecv.py:1064\r\n      └─ 358.970 TCPSession.on_packet_received  scapy/sessions.py:385\r\n         └─ 358.947 TCPSession._process_packet  scapy/sessions.py:288\r\n            └─ 358.330 TLS.tcp_reassemble  scapy/layers/tls/session.py:1124\r\n               └─ 353.972 [self]  scapy/layers/tls/session.py\r\n```",
      "Thanks for the report, I'll have a look.",
      "Hey @gpotter2,\r\n\r\nSorry for bothering :-D found another issue when processing this [pcap](https://github.com/secdev/scapy/files/12357616/chunk.zip) (using the same code from above):\r\n\r\n```bash\r\nWARNING: No IPv4 address found on anpi2 !\r\nWARNING: No IPv4 address found on anpi1 !\r\nWARNING: more No IPv4 address found on anpi0 !\r\nWARNING: Socket <scapy.utils.PcapNgReader object at 0x110de25d0> failed with 'PcapNgReader.recv() got an unexpected keyword argument 'stop_payload_dissection''. It was closed.\r\n```\r\n\r\nCheers",
      "Thanks. I'm currently rewriting the PR quite a bit.",
      "@stulle123 this is fixed thanks.",
      "regarding the failing test, somehow the behavior of the `count` parameter changed. \r\n```\r\ndiff --git a/test/contrib/automotive/ecu.uts b/test/contrib/automotive/ecu.uts\r\nindex 680a2b33..4ced5203 100644\r\n--- a/test/contrib/automotive/ecu.uts\r\n+++ b/test/contrib/automotive/ecu.uts\r\n@@ -673,7 +673,7 @@ with PcapReader(scapy_path(\"test/pcaps/gmlan_trace.pcap.gz\")) as sock:\r\n     print(\"Check 1 after change to diagnostic mode\")\r\n     assert len(ecu.supported_responses) == 1\r\n     assert ecu.state == EcuState(session=3)\r\n-    gmlanmsgs = sniff(session=ISOTPSession(supersession=session, rx_id=[0x241, 0x641, 0x101], basecls=GMLAN), count=8, opened_socket=sock)\r\n+    gmlanmsgs = sniff(session=ISOTPSession(supersession=session, rx_id=[0x241, 0x641, 0x101], basecls=GMLAN), count=6, opened_socket=sock)\r\n     ecu = session.ecu\r\n     print(\"Check 2 after some more messages were read1\")\r\n     assert len(ecu.supported_responses) == 3\r\n@@ -681,13 +681,13 @@ with PcapReader(scapy_path(\"test/pcaps/gmlan_trace.pcap.gz\")) as sock:\r\n     assert ecu.state.session == 3\r\n     print(\"assert 1\")\r\n     assert ecu.state.communication_control == 1\r\n-    gmlanmsgs = sniff(session=ISOTPSession(supersession=session, rx_id=[0x241, 0x641, 0x101], basecls=GMLAN), count=10, opened_socket=sock)\r\n+    gmlanmsgs = sniff(session=ISOTPSession(supersession=session, rx_id=[0x241, 0x641, 0x101], basecls=GMLAN), count=2, opened_socket=sock)\r\n     ecu = session.ecu\r\n     print(\"Check 3 after change to programming mode (bootloader)\")\r\n     assert len(ecu.supported_responses) == 4\r\n     assert ecu.state.session == 2\r\n     assert ecu.state.communication_control == 1\r\n-    gmlanmsgs = sniff(session=ISOTPSession(supersession=session, rx_id=[0x241, 0x641, 0x101], basecls=GMLAN), count=16, opened_socket=sock)\r\n+    gmlanmsgs = sniff(session=ISOTPSession(supersession=session, rx_id=[0x241, 0x641, 0x101], basecls=GMLAN), count=6, opened_socket=sock)\r\n     ecu = session.ecu\r\n     print(\"Check 4 after gaining security access\")\r\n     assert len(ecu.supported_responses) == 6\r\n\r\n```\r\n\r\nThis changes make the test work again",
      "Thanks a lot !!!",
      "@polybassa is this change with the `count` parameter expected and/or explained?",
      "I would say, it's more \"clean / correct\" now. In the past, the session object itself stored the packets and count was evaluated against that. Therefore I needed to place the \"total\" number of packets, stored in the session, into the count parameter of sniff.  Now you place the number of packet you want to receive there. ",
      "With this PR applied `sniff` seems to fail with\r\n```\r\nWARNING: Socket <scapy.arch.bpf.supersocket.L2bpfListenSocket object at 0x10e4e5910> failed with ''Conf' object has no attribute 'debug_dissect''. It was closed.\r\n```\r\nfrom time to time. I'll try to collect packets triggering it and attach a pcap.",
      "Looks like it has nothing to do with this PR. It can be fixed with:\r\n```diff\r\ndiff --git a/scapy/layers/tls/record_sslv2.py b/scapy/layers/tls/record_sslv2.py\r\nindex 8d311faa..8e99a352 100644\r\n--- a/scapy/layers/tls/record_sslv2.py\r\n+++ b/scapy/layers/tls/record_sslv2.py\r\n@@ -174,7 +174,7 @@ class SSLv2(TLS):\r\n             except KeyboardInterrupt:\r\n                 raise\r\n             except Exception:\r\n-                if conf.debug_dissect:\r\n+                if conf.debug_dissector:\r\n                     raise\r\n                 p = conf.raw_layer(s, _internal=1, _underlayer=self)\r\n             self.add_payload(p)\r\n```",
      "Still waiting for more reviews !\r\n\r\nNote: this PR should be squashed on merge."
    ],
    "commit_messages": [
      "Cleanup IP fragmentation, TCP session and TLS sessions (#4082)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd8a88c0a76e0a5158b",
    "number": 4079,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nAdd a BT monitor header for pcap parsing\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\nPcap bluetooth monitor format is not the same as the data that comes directly from the bluetooth monitor socket. Slightly different header. Add support.\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "dev/btmonpcap",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4079?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4079](https://app.codecov.io/gh/secdev/scapy/pull/4079?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1888911) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5ac3c2886cda533d8602a6f7121a8e35dc197011?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5ac3c28) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4079      +/-   ##\n==========================================\n- Coverage   81.97%   81.97%   -0.01%     \n==========================================\n  Files         327      327              \n  Lines       75618    75623       +5     \n==========================================\n+ Hits        61986    61990       +4     \n- Misses      13632    13633       +1     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4079?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/data.py](https://app.codecov.io/gh/secdev/scapy/pull/4079?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZGF0YS5weQ==) | `91.30% <100.00%> (+0.02%)` | :arrow_up: |\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4079?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `86.32% <100.00%> (+0.07%)` | :arrow_up: |\n\n... and [8 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4079/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Failed tests seem related to Traceroute function which hopefully are not caused by the PR changes :)",
      "Github shows this PR as needing changes but I believe they have been addressed. Sorry for the comment and noise, just trying to clarify. ´Thanks",
      "Thanks for the PR !",
      "Thanks for your time! More to come :)"
    ],
    "commit_messages": [
      "bluetooth: Add a BT monitor header for pcap parsing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabd9a88c0a76e0a5158c",
    "number": 4077,
    "body": "Literally after merging https://github.com/secdev/scapy/pull/4070 I realized it would have been better to return the entire RR rather than the arbitrary `rdata` field.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4077?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4077](https://app.codecov.io/gh/secdev/scapy/pull/4077?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3cc23ea) into [master](https://app.codecov.io/gh/secdev/scapy/commit/b1fa81116b38c6e89af39c429cb755f538a08a3c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b1fa811) will **decrease** coverage by `0.01%`.\n> The diff coverage is `80.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4077      +/-   ##\n==========================================\n- Coverage   81.96%   81.96%   -0.01%     \n==========================================\n  Files         327      327              \n  Lines       75614    75618       +4     \n==========================================\n  Hits        61978    61978              \n- Misses      13636    13640       +4     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4077?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4077?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `86.64% <80.00%> (-0.09%)` | :arrow_down: |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4077/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Improve dns_resolve"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabdaa88c0a76e0a5158d",
    "number": 4076,
    "body": "minor fix in doip.py adding the \"buffer\" variable which was introduced in the last fix for DoIP.\r\nSince DoIPSocket6 has an own __init__ function, this vairable is not inherited.\r\n",
    "head_branch": "fix_doipsocket6",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4076?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4076](https://app.codecov.io/gh/secdev/scapy/pull/4076?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (172b705) into [master](https://app.codecov.io/gh/secdev/scapy/commit/7d31fcc9187afaa11756bc4cec516fa702c59f90?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7d31fcc) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4076   +/-   ##\n=======================================\n  Coverage   81.95%   81.96%           \n=======================================\n  Files         327      327           \n  Lines       75568    75619   +51     \n=======================================\n+ Hits        61935    61984   +49     \n- Misses      13633    13635    +2     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4076?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/doip.py](https://app.codecov.io/gh/secdev/scapy/pull/4076?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2RvaXAucHk=) | `76.19% <100.00%> (+5.03%)` | :arrow_up: |\n\n... and [13 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4076/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Can you please add the relevant lines for the unit test to your test case: https://github.com/secdev/scapy/blob/b1fa81116b38c6e89af39c429cb755f538a08a3c/test/contrib/automotive/doip.uts#L403-L409",
      "you need to use a DoIPSocket6"
    ],
    "commit_messages": [
      "Fix doipsocket6 (#4076)\n\n* added buffer variable in DoIPSocket6\r\n\r\n* added test for DoIPSocket6\r\n\r\n* fix doip.uts\r\n\r\n* fix fix doip.uts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabdba88c0a76e0a5158e",
    "number": 4075,
    "body": "**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThis PR adds support for a new protocol in `contrib`: **HICP**\r\nThe protocol is used by industrial devices HMS Anybus for network discovery and configuration.\r\nAll the messages used by the official HMS IPconfig software are implemented.\r\n",
    "head_branch": "contrib-hicp",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4075?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4075](https://app.codecov.io/gh/secdev/scapy/pull/4075?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f6dd968) into [master](https://app.codecov.io/gh/secdev/scapy/commit/7d31fcc9187afaa11756bc4cec516fa702c59f90?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7d31fcc) will **increase** coverage by `0.02%`.\n> The diff coverage is `89.86%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4075      +/-   ##\n==========================================\n+ Coverage   81.95%   81.98%   +0.02%     \n==========================================\n  Files         327      328       +1     \n  Lines       75568    75766     +198     \n==========================================\n+ Hits        61935    62113     +178     \n- Misses      13633    13653      +20     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4075?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/hicp.py](https://app.codecov.io/gh/secdev/scapy/pull/4075?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9oaWNwLnB5) | `89.86% <89.86%> (ø)` | |\n\n... and [19 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4075/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Add layer HICP (#4075)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabdba88c0a76e0a5158f",
    "number": 4074,
    "body": "small fix for doipsocket6\r\n",
    "head_branch": "doip_fix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4074?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4074](https://app.codecov.io/gh/secdev/scapy/pull/4074?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7b410a1) into [master](https://app.codecov.io/gh/secdev/scapy/commit/7d31fcc9187afaa11756bc4cec516fa702c59f90?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7d31fcc) will **increase** coverage by `0.00%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4074   +/-   ##\n=======================================\n  Coverage   81.95%   81.96%           \n=======================================\n  Files         327      327           \n  Lines       75568    75569    +1     \n=======================================\n+ Hits        61935    61937    +2     \n+ Misses      13633    13632    -1     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4074?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/doip.py](https://app.codecov.io/gh/secdev/scapy/pull/4074?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2RvaXAucHk=) | `70.47% <0.00%> (-0.68%)` | :arrow_down: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4074/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Can you please describe the issue that you are fixing?\r\n\r\n--\r\nMit freundlichen Grüßen\r\n\r\nDr. Nils Weiß\r\n\r\ndissecto GmbH\r\nFranz-Mayer-Str. 1\r\n93053 Regensburg\r\n________________________________\r\nFrom: superuserx ***@***.***>\r\nSent: Thursday, July 20, 2023 4:48:27 PM\r\nTo: secdev/scapy ***@***.***>\r\nCc: Subscribed ***@***.***>\r\nSubject: [secdev/scapy] fix doip.py (PR #4074)\r\n\r\n\r\nsmall fix for doipsocket6\r\n\r\n________________________________\r\nYou can view, comment on, or merge this pull request online at:\r\n\r\n  https://github.com/secdev/scapy/pull/4074\r\n\r\nCommit Summary\r\n\r\n  *   68957b1<https://github.com/secdev/scapy/pull/4074/commits/68957b1779cb19bf51076c65481ddd1d5f96ef2d> fix doip.py\r\n\r\nFile Changes\r\n\r\n(1 file<https://github.com/secdev/scapy/pull/4074/files>)\r\n\r\n  *   M scapy/contrib/automotive/doip.py<https://github.com/secdev/scapy/pull/4074/files#diff-a329830b3cc3e2184386c69f7a3a7b754b8643a0b76c935f946a97fb59ad47c4> (1)\r\n\r\nPatch Links:\r\n\r\n  *   https://github.com/secdev/scapy/pull/4074.patch\r\n  *   https://github.com/secdev/scapy/pull/4074.diff\r\n\r\n—\r\nReply to this email directly, view it on GitHub<https://github.com/secdev/scapy/pull/4074>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAMZGF4TDHGO5W7LUYDFLUTXRFALXANCNFSM6AAAAAA2RRRGVE>.\r\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\r\n",
      "In the last fix DoIPSocket got the new variable \"self.buffer\" in the init function.\r\nDoIPSocket6 has an own init therefore this variable is missing. \r\n",
      "Thanks for clarification.\r\n\r\nCould you please  add a similar test like this one for the IPV6 doip socket: https://github.com/secdev/scapy/blob/7d31fcc9187afaa11756bc4cec516fa702c59f90/test/contrib/automotive/doip.uts#L384\r\n\r\n--\r\nMit freundlichen Grüßen\r\n\r\nDr. Nils Weiß\r\n\r\ndissecto GmbH\r\nFranz-Mayer-Str. 1\r\n93053 Regensburg\r\n________________________________\r\nFrom: superuserx ***@***.***>\r\nSent: Friday, July 21, 2023 8:38:05 AM\r\nTo: secdev/scapy ***@***.***>\r\nCc: Nils Weiß ***@***.***>; Comment ***@***.***>\r\nSubject: Re: [secdev/scapy] fix doip.py (PR #4074)\r\n\r\n\r\nIn the last fix DoIPSocket got the new variable \"self.buffer\" in the init function.\r\nDoIPSocket6 has an own init therefore this variable is missing.\r\n\r\n—\r\nReply to this email directly, view it on GitHub<https://github.com/secdev/scapy/pull/4074#issuecomment-1645057614>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAMZGF6X3JQVMST2AA4ZLS3XRIPU3ANCNFSM6AAAAAA2RRRGVE>.\r\nYou are receiving this because you commented.Message ID: ***@***.***>\r\n",
      "The merge commit was a mistake right? I will open a new pull request..."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabdca88c0a76e0a51590",
    "number": 4073,
    "body": "This commit changes the following:\r\n- `.scapy_startup.py` and `.scapy_prestart.py` are moved to `.config/scapy/startup.py` and `.config/scapy/prestart.py`. This is what apparently most big libraries/softwares are moving towards (matplotlib, wireshark, etc.). ~~Question: do we want to move the history there? (for now it's the only file remaining in \\~)~~ (done)\r\n- automatically create `.config/scapy/prestart.py`. This is IMHO much easier for a novice user to understand what's going on, since it will show what it is supposed to look like.\r\n- the Scapy terminal now supports **`ptpython`** and **`bpython`**, in addition to the existing **`IPython`**. `ptpython` comes with the **`ptipython`** variant that's a mix between `ptpython` and `IPython`.\r\n- improve doc a bit, remove useless info `usage.rst`.\r\n- fix https://github.com/secdev/scapy/issues/4056\r\n\r\nBugs:\r\n- bpython requires the https://github.com/bpython/bpython/pull/992 and https://github.com/bpython/bpython/pull/996 patches to autocomplete classes similarly as the others\r\n- ptpython requires https://github.com/prompt-toolkit/ptpython/pull/545 and https://github.com/prompt-toolkit/ptpython/issues/542. The default `repr` is also broken\r\n\r\nI encourage you to try them all a bit, some are pretty fun. Until one of them is as stable as IPython though, it will remain the default. There are some `conf.color_theme` features that comes with IPython that are not implemented here yet.\r\n\r\n#### Gallery\r\n\r\n**bpython**\r\n![image](https://github.com/secdev/scapy/assets/10530980/3165a2bc-f1c4-445b-9c24-5600e9c05b76)\r\n\r\n**ptpython**\r\n![image](https://github.com/secdev/scapy/assets/10530980/5dab1dc9-325d-4681-870d-dfee7147c44f)",
    "head_branch": "terminal",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4073?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4073](https://app.codecov.io/gh/secdev/scapy/pull/4073?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d29cd0c) into [master](https://app.codecov.io/gh/secdev/scapy/commit/eb3658d5b1537ebdef8312d71403a10eb0e3ce07?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (eb3658d) will **increase** coverage by `0.36%`.\n> Report is 5 commits behind head on master.\n> The diff coverage is `58.49%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4073      +/-   ##\n==========================================\n+ Coverage   81.58%   81.95%   +0.36%     \n==========================================\n  Files         327      328       +1     \n  Lines       75546    75836     +290     \n==========================================\n+ Hits        61633    62148     +515     \n+ Misses      13913    13688     -225     \n```\n\n| [Files Changed](https://app.codecov.io/gh/secdev/scapy/pull/4073?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/main.py](https://app.codecov.io/gh/secdev/scapy/pull/4073?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbWFpbi5weQ==) | `71.81% <55.55%> (-3.39%)` | :arrow_down: |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4073?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `84.44% <100.00%> (+1.84%)` | :arrow_up: |\n\n... and [22 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4073/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@gpotter2 I am fine with moving everything into `.config/scapy` that makes more sense.",
      "@guedou @polybassa @p-l- Ready for review & merge !",
      "LGTM.Thanks for the changes. I don't why but I cannot approve the PR."
    ],
    "commit_messages": [
      "Scapy terminal improvements (#4073)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabdda88c0a76e0a51591",
    "number": 4070,
    "body": "- adds `conf.nameservers` which is read from either `resolv.conf` or the windows C API\r\n- adds a small `dns_resolve` (propose better name?) util that queries the server in `conf.nameservers`\r\n- fixes issues with `CacheInstance` and minor cleanups (found randomly while doing this)\r\n\r\nThe purpose of this is to have a very simple and reliable API to use in other Scapy scripts / functions, and not to have the more \"craft-it-yourself\" approach (that's also very nice) you'd have with `sr1(IP()/UDP()/DNS())`. I'm using that in a future PR.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4070?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4070](https://app.codecov.io/gh/secdev/scapy/pull/4070?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7f406c8) into [master](https://app.codecov.io/gh/secdev/scapy/commit/f19d36ff8221cd7b7b14eff7ef9ba5776291f9d5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f19d36f) will **increase** coverage by `0.00%`.\n> The diff coverage is `75.86%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4070   +/-   ##\n=======================================\n  Coverage   81.96%   81.96%           \n=======================================\n  Files         327      327           \n  Lines       75553    75592   +39     \n=======================================\n+ Hits        61924    61958   +34     \n- Misses      13629    13634    +5     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4070?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/interfaces.py](https://app.codecov.io/gh/secdev/scapy/pull/4070?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `97.42% <ø> (ø)` | |\n| [scapy/config.py](https://app.codecov.io/gh/secdev/scapy/pull/4070?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `84.23% <50.00%> (+1.44%)` | :arrow_up: |\n| [scapy/arch/unix.py](https://app.codecov.io/gh/secdev/scapy/pull/4070?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC91bml4LnB5) | `77.04% <62.50%> (-0.50%)` | :arrow_down: |\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4070?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `86.72% <73.17%> (-1.06%)` | :arrow_down: |\n| [scapy/arch/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4070?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9fX2luaXRfXy5weQ==) | `90.19% <100.00%> (ø)` | |\n| [scapy/arch/linux.py](https://app.codecov.io/gh/secdev/scapy/pull/4070?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saW51eC5weQ==) | `85.30% <100.00%> (+0.03%)` | :arrow_up: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4070?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `66.23% <100.00%> (-0.13%)` | :arrow_down: |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4070/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Great, feel free to merge if current implementation looks ok."
    ],
    "commit_messages": [
      "Add conf.nameservers + small dns resolver (#4070)\n\n* Fix CacheInstance\r\n\r\n* Add dns_resolve and conf.nameservers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabdea88c0a76e0a51592",
    "number": 4069,
    "body": "[RFC 3416](https://datatracker.ietf.org/doc/html/rfc3416#section-3)\n```\n   VarBind ::= SEQUENCE {\n           name ObjectName,\n\n           CHOICE {\n               value          ObjectSyntax,\n               unSpecified    NULL,    -- in retrieval requests\n\n                                       -- exceptions in responses\n               noSuchObject   [0] IMPLICIT NULL,\n               noSuchInstance [1] IMPLICIT NULL,\n               endOfMibView   [2] IMPLICIT NULL\n           }\n       }\n```\n\nFixes #3900\n\n<!-- This is just a checklist to guide you. You can remove it safely. -->\n\n**Checklist:**\n\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\n-   [X] I squashed commits belonging together\n-   [X] I added unit tests or explained why they are not relevant\n-   [X] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\n",
    "head_branch": "christian-sahlmann/ber-decoding-3900",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4069?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4069](https://app.codecov.io/gh/secdev/scapy/pull/4069?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0be3981) into [master](https://app.codecov.io/gh/secdev/scapy/commit/9abb9cb6dddfaef2af5b15c44d451ed63cb26bfc?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9abb9cb) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4069      +/-   ##\n==========================================\n- Coverage   81.96%   81.95%   -0.01%     \n==========================================\n  Files         327      327              \n  Lines       75555    75555              \n==========================================\n- Hits        61925    61920       -5     \n- Misses      13630    13635       +5     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4069?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/snmp.py](https://app.codecov.io/gh/secdev/scapy/pull/4069?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NubXAucHk=) | `88.42% <100.00%> (ø)` | |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4069/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "add support for exceptions in SNMP varbind responses\n\n[RFC 3416](https://datatracker.ietf.org/doc/html/rfc3416#section-3)\n```\n   VarBind ::= SEQUENCE {\n           name ObjectName,\n\n           CHOICE {\n               value          ObjectSyntax,\n               unSpecified    NULL,    -- in retrieval requests\n\n                                       -- exceptions in responses\n               noSuchObject   [0] IMPLICIT NULL,\n               noSuchInstance [1] IMPLICIT NULL,\n               endOfMibView   [2] IMPLICIT NULL\n           }\n       }\n```\n\nFixes #3900"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabdfa88c0a76e0a51593",
    "number": 4067,
    "body": "I added a `bufsz` parameter to the `RawPcapWriter` constructor to allow users to specify a custom buffersize. This does will not change the behavior of any pre-existing code, and will only change the buffer size of the file being opened if specified (otherwise it will default to 4096, as the class currently does).\r\n\r\nThis will help speed up any pcap creation, especially for large pcap files.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4067?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4067](https://app.codecov.io/gh/secdev/scapy/pull/4067?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9768e7e) into [master](https://app.codecov.io/gh/secdev/scapy/commit/ca57be524fccd648f4f923ef12be20adcd30aa14?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ca57be5) will **decrease** coverage by `0.40%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4067      +/-   ##\n==========================================\n- Coverage   81.96%   81.56%   -0.40%     \n==========================================\n  Files         327      327              \n  Lines       75555    75554       -1     \n==========================================\n- Hits        61925    61626     -299     \n- Misses      13630    13928     +298     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4067?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4067?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `77.69% <ø> (-0.27%)` | :arrow_down: |\n\n... and [14 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4067/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Scapy seems to be pretty slow when writing large PCAP files because the buffer is so small. Allowing for a larger buffer could help batch packet writes to the file.",
      "Thanks!"
    ],
    "commit_messages": [
      "Add bufsz parameter to RawPcapWriter constructor (#4067)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe0a88c0a76e0a51594",
    "number": 4066,
    "body": "This PR will create an overall range for the verification of isotp scan findings. This will remove double verification on findings next to each other. ",
    "head_branch": "isotp_scan_speedup",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4066?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4066](https://app.codecov.io/gh/secdev/scapy/pull/4066?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3972f27) into [master](https://app.codecov.io/gh/secdev/scapy/commit/ca57be524fccd648f4f923ef12be20adcd30aa14?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ca57be5) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4066      +/-   ##\n==========================================\n- Coverage   81.96%   81.95%   -0.01%     \n==========================================\n  Files         327      327              \n  Lines       75555    75554       -1     \n==========================================\n- Hits        61925    61922       -3     \n- Misses      13630    13632       +2     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4066?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/isotp/isotp\\_scanner.py](https://app.codecov.io/gh/secdev/scapy/pull/4066?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zY2FubmVyLnB5) | `89.06% <100.00%> (+0.46%)` | :arrow_up: |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4066/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Speedup isotp scan verification function (#4066)\n\n* Speedup isotp scan verification function\r\n\r\n* fix\r\n\r\n* fix flake"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe0a88c0a76e0a51595",
    "number": 4064,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nThis PR will add the `EXPLICIT_INITIAL_DATA_CONTROL` key to the `FLAGSDEF` dictionary in the `SD` class.\r\n\r\nIn the latest version, the `FLAGSDEF` dictionary is defined as follows:\r\n\r\n```python\r\nFLAGSDEF = {\r\n    \"REBOOT\": _sdFlag(mask=0x80, offset=7),\r\n    \"UNICAST\": _sdFlag(mask=0x40, offset=6)\r\n}\r\n\r\n```\r\n\r\nAccording to the SOME/IP-SD protocol, the correct `FLAGSDEF` should be:\r\n\r\n```python\r\nFLAGSDEF = {\r\n    \"REBOOT\": _sdFlag(mask=0x80, offset=7),\r\n    \"UNICAST\": _sdFlag(mask=0x40, offset=6),\r\n    \"EXPLICIT_INITIAL_DATA_CONTROL\": _sdFlag(mask=0x20, offset=5),\r\n}\r\n\r\n```\r\n\r\nFor more detail, please see [PRS_SOMEIPSD_00700] in [SOME/IP Service Discovery Protocol Specification](https://www.autosar.org/fileadmin/standards/R1-5-0/FO/AUTOSAR_PRS_SOMEIPServiceDiscoveryProtocol.pdf).\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #4058\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4064?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4064](https://app.codecov.io/gh/secdev/scapy/pull/4064?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7f4d9a8) into [master](https://app.codecov.io/gh/secdev/scapy/commit/66fdfa362185e376f7bff483bc4675f6e4a268c4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (66fdfa3) will **increase** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4064      +/-   ##\n==========================================\n+ Coverage   81.92%   81.95%   +0.02%     \n==========================================\n  Files         327      327              \n  Lines       75510    75540      +30     \n==========================================\n+ Hits        61863    61906      +43     \n+ Misses      13647    13634      -13     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4064?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/someip.py](https://app.codecov.io/gh/secdev/scapy/pull/4064?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NvbWVpcC5weQ==) | `93.75% <ø> (ø)` | |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4064/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Update SD class to support Explicit Initial Data Control Flag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe1a88c0a76e0a51596",
    "number": 4063,
    "body": "Let's use the new git feature to have some commits ignored from git blame.\r\nhttps://docs.github.com/en/repositories/working-with-files/using-files/viewing-a-file#ignore-commits-in-the-blame-view\r\n\r\nI started by adding the commits from PEPin, but we could probably also add the ones from Mypy\r\n\r\n@guedou What do you think.",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [
      "That should be enough to start with."
    ],
    "commit_messages": [
      "Create .git-blame-ignore-revs (#4063)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe2a88c0a76e0a51597",
    "number": 4062,
    "body": null,
    "head_branch": "str_field_fix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4062?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4062](https://app.codecov.io/gh/secdev/scapy/pull/4062?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (80c4903) into [master](https://app.codecov.io/gh/secdev/scapy/commit/6dbdc37bd896c5477f4f9e28e7d1bff63f3dc6fd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6dbdc37) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4062      +/-   ##\n==========================================\n- Coverage   81.95%   81.95%   -0.01%     \n==========================================\n  Files         327      327              \n  Lines       75540    75540              \n==========================================\n- Hits        61911    61906       -5     \n- Misses      13629    13634       +5     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4062?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4062?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `92.08% <100.00%> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4062/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Improve display of bytes strings (#4062)\n\n* Fix #4044\r\n\r\n* fix macsec.uts\r\n\r\n* fix sebek tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe3a88c0a76e0a51598",
    "number": 4061,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [V] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [V] I squashed commits belonging together\r\n-   [] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nThis fixes a bug in the answers function of SOMEIP, in case there is a SD above it. it should be considered.\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "fix_someip_answers_func",
    "is_a_fork": true,
    "comments": [
      "Thanks for your PR. Could you please add a unit test for this case?",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4061?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4061](https://app.codecov.io/gh/secdev/scapy/pull/4061?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (54c5599) into [master](https://app.codecov.io/gh/secdev/scapy/commit/6dbdc37bd896c5477f4f9e28e7d1bff63f3dc6fd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6dbdc37) will **decrease** coverage by `0.01%`.\n> Report is 199 commits behind head on master.\n> The diff coverage is `0.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4061      +/-   ##\n==========================================\n- Coverage   81.95%   81.94%   -0.01%     \n==========================================\n  Files         327      327              \n  Lines       75540    75542       +2     \n==========================================\n- Hits        61911    61906       -5     \n- Misses      13629    13636       +7     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4061?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/someip.py](https://app.codecov.io/gh/secdev/scapy/pull/4061?src=pr&el=tree&filepath=scapy%2Fcontrib%2Fautomotive%2Fsomeip.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NvbWVpcC5weQ==) | `92.92% <0.00%> (-0.83%)` | :arrow_down: |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4061/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe4a88c0a76e0a51599",
    "number": 4060,
    "body": "Fixed return value of the srloop and srploop functions. The return value was updated in the comment, but not in the docstring.\r\n\r\n",
    "head_branch": "srloop-docstring-fix",
    "is_a_fork": true,
    "comments": [
      "Thanks for this PR!",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4060?dropdown=coverage&src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n> Project coverage is 81.95%. Comparing base [(`6dbdc37`)](https://app.codecov.io/gh/secdev/scapy/commit/6dbdc37bd896c5477f4f9e28e7d1bff63f3dc6fd?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) to head [(`32ec515`)](https://app.codecov.io/gh/secdev/scapy/commit/32ec515d18ed3b6efe75ad2d81cd7c85f97980dd?dropdown=coverage&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev).\n> Report is 328 commits behind head on master.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4060   +/-   ##\n=======================================\n  Coverage   81.95%   81.95%           \n=======================================\n  Files         327      327           \n  Lines       75540    75554   +14     \n=======================================\n+ Hits        61911    61923   +12     \n- Misses      13629    13631    +2     \n```\n\n| [Files with missing lines](https://app.codecov.io/gh/secdev/scapy/pull/4060?dropdown=coverage&src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/sendrecv.py](https://app.codecov.io/gh/secdev/scapy/pull/4060?src=pr&el=tree&filepath=scapy%2Fsendrecv.py&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `87.95% <ø> (-0.16%)` | :arrow_down: |\n\n... and [10 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4060/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Retrigger tests",
      "Added another fix in the docstring, regarding the AsyncSniffer/sniff docstring.",
      "So I doubt this is very useful. This is basically only ever shown in help(), in which case I would much rather have a user friendly typing. Generally, the current docstrings is also very unhelpful so I believe it would be better to simply redo it using words, and sphinx `:param:` tags."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe5a88c0a76e0a5159a",
    "number": 4059,
    "body": "https://www.rfc-editor.org/rfc/rfc8910.html#name-the-captive-portal-ipv6-ra-\r\n```\r\n    0                   1                   2                   3\r\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |     Type      |     Length    |              URI              .\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               .\r\n   .                                                               .\r\n   .                                                               .\r\n   .                                                               .\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n\r\nType: 37\r\n\r\nLength: 8-bit unsigned integer. The length of the option\r\n   (including the Type and Length fields) in units of 8 bytes.\r\n\r\nURI: The URI for the captive portal API endpoint to which the\r\n   user should connect. This MUST be padded with NUL (0x00) to\r\n   make the total option length (including the Type and Length\r\n   fields) a multiple of 8 bytes.\r\n```\r\n\r\nCombined with f37c4021eb191b2cf95693dc308a06d2bfb17717 this patch should fully cover RFC8910.\r\n\r\nThe patch has been used and tested downstream for about a week and helped to trigger various issues like\r\nhttps://github.com/systemd/systemd/issues/28229\r\nhttps://github.com/systemd/systemd/issues/28231\r\nhttps://github.com/systemd/systemd/issues/28277\r\nhttps://github.com/systemd/systemd/issues/28283",
    "head_branch": "ra-captive-portal",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4059?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4059](https://app.codecov.io/gh/secdev/scapy/pull/4059?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7b97774) into [master](https://app.codecov.io/gh/secdev/scapy/commit/6dbdc37bd896c5477f4f9e28e7d1bff63f3dc6fd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6dbdc37) will **increase** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4059      +/-   ##\n==========================================\n+ Coverage   81.95%   81.96%   +0.01%     \n==========================================\n  Files         327      327              \n  Lines       75540    75555      +15     \n==========================================\n+ Hits        61911    61931      +20     \n+ Misses      13629    13624       -5     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4059?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4059?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.47% <100.00%> (+0.09%)` | :arrow_up: |\n\n... and [10 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4059/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "[inet6] add Captive-Portal RA option (#4059)\n\nhttps://www.rfc-editor.org/rfc/rfc8910.html#name-the-captive-portal-ipv6-ra-\r\n\r\n    0                   1                   2                   3\r\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |     Type      |     Length    |              URI              .\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               .\r\n   .                                                               .\r\n   .                                                               .\r\n   .                                                               .\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n\r\nType: 37\r\n\r\nLength: 8-bit unsigned integer. The length of the option\r\n   (including the Type and Length fields) in units of 8 bytes.\r\n\r\nURI: The URI for the captive portal API endpoint to which the\r\n   user should connect. This MUST be padded with NUL (0x00) to\r\n   make the total option length (including the Type and Length\r\n   fields) a multiple of 8 bytes.\r\n\r\nCombined with f37c4021eb191b2cf95693dc308a06d2bfb17717 this patch should\r\nfully cover RFC8910.\r\n\r\nThe patch has been used and tested downstream for about a week and\r\nhelped to trigger various issues like\r\nhttps://github.com/systemd/systemd/issues/28229\r\nhttps://github.com/systemd/systemd/issues/28231\r\nhttps://github.com/systemd/systemd/issues/28277\r\nhttps://github.com/systemd/systemd/issues/28283"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe6a88c0a76e0a5159b",
    "number": 4057,
    "body": "GRE-in-UDP uses port 4754 (see RFC 8086)\r\n\r\nThis change just adds the `bind_layers`; I can add a test as well, just not sure what file it should go in.  I see some GRE stuff in pptp and erspan, but maybe inet and/or inet6 would make more sense.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Also, port 4755 is GRE-in-UDP with DTLS.  I'm not familiar with DTLS - presumably it should be bound differently due to additional DTLS headers of some sort, but RFC 8086 seems to indicate otherwise?  Not sure, so I'll leave that one out.",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4057?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4057](https://app.codecov.io/gh/secdev/scapy/pull/4057?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d0ca803) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5fa6428a1843fb851d8c6de1d0c59dad0168df78?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5fa6428) will **increase** coverage by `32.35%`.\n> Report is 5 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n> :exclamation: Current head d0ca803 differs from pull request most recent head d6c7eeb. Consider uploading reports for the commit d6c7eeb to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4057       +/-   ##\n===========================================\n+ Coverage   49.60%   81.96%   +32.35%     \n===========================================\n  Files         341      327       -14     \n  Lines       76081    75619      -462     \n===========================================\n+ Hits        37742    61980    +24238     \n+ Misses      38339    13639    -24700     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/4057?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4057?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `71.81% <100.00%> (+49.38%)` | :arrow_up: |\n\n... and [274 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4057/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Happy to add that; what file should it go in?  inet.uts?",
      "Yes, inet.uts is the good file.\r\n\r\n> On Jul 8, 2023, at 09:04, Alex Forencich ***@***.***> wrote:\r\n> \r\n> \r\n> Happy to add that; what file should it go in? inet.uts?\r\n> \r\n> —\r\n> Reply to this email directly, view it on GitHub <https://github.com/secdev/scapy/pull/4057#issuecomment-1626891278>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ACZEPVHBJ4Y3YU4KT6NWESDXPEA6VANCNFSM6AAAAAA2CLYEEM>.\r\n> You are receiving this because you commented.\r\n> \r\n\r\n",
      "Alright, added some test for GRE, based on the existing ones for UDP/DNS."
    ],
    "commit_messages": [
      "GRE-in-UDP uses port 4754 (see RFC 8086) (#4057)\n\n* GRE-in-UDP uses port 4754 (see RFC 8086)\r\n\r\nSigned-off-by: Alex Forencich <alex@alexforencich.com>\r\n\r\n* Add GRE layer binding tests\r\n\r\nSigned-off-by: Alex Forencich <alex@alexforencich.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Alex Forencich <alex@alexforencich.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe6a88c0a76e0a5159c",
    "number": 4054,
    "body": "Use correct field name to bind VXLAN GPE\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master_pp",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4054?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4054](https://app.codecov.io/gh/secdev/scapy/pull/4054?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (fcff42b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/f19d36ff8221cd7b7b14eff7ef9ba5776291f9d5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f19d36f) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4054      +/-   ##\n==========================================\n- Coverage   81.96%   81.95%   -0.01%     \n==========================================\n  Files         327      327              \n  Lines       75553    75553              \n==========================================\n- Hits        61924    61919       -5     \n- Misses      13629    13634       +5     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4054?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/nsh.py](https://app.codecov.io/gh/secdev/scapy/pull/4054?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9uc2gucHk=) | `95.83% <100.00%> (ø)` | |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4054/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "NSH: fix layer binding for VXLAN GPE (#4054)\n\nUse correct field name to bind VXLAN GPE\r\n\r\nSigned-off-by: Raslan Darawsheh <rasland@nvidia.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe7a88c0a76e0a5159d",
    "number": 4053,
    "body": "This PR should fix #4026 ",
    "head_branch": "hsfz_update",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4053?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4053](https://app.codecov.io/gh/secdev/scapy/pull/4053?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a78de8d) into [master](https://app.codecov.io/gh/secdev/scapy/commit/cdbdb150ce69dc10debc1d659e5303d13b15f7fa?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cdbdb15) will **increase** coverage by `0.01%`.\n> The diff coverage is `86.66%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4053      +/-   ##\n==========================================\n+ Coverage   81.91%   81.93%   +0.01%     \n==========================================\n  Files         328      328              \n  Lines       75494    75524      +30     \n==========================================\n+ Hits        61841    61878      +37     \n+ Misses      13653    13646       -7     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4053?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/doip.py](https://app.codecov.io/gh/secdev/scapy/pull/4053?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2RvaXAucHk=) | `71.15% <80.00%> (+13.85%)` | :arrow_up: |\n| [scapy/contrib/automotive/bmw/hsfz.py](https://app.codecov.io/gh/secdev/scapy/pull/4053?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2Jtdy9oc2Z6LnB5) | `59.78% <93.33%> (+15.62%)` | :arrow_up: |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4053/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Could you add a unit tests for that? (that didn't work previously but now does). I know it's probably annoying but that's what makes good code :P",
      "Done \r\n"
    ],
    "commit_messages": [
      "Fix recv of HSFZ and DoIP (#4053)\n\n* Fix recv of HSFZ and DoIP\r\n\r\n* add unit test for hsfz\r\n\r\n* add test case for DoIP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe8a88c0a76e0a5159e",
    "number": 4052,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n\r\nThis only touches documentation.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4052?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4052](https://app.codecov.io/gh/secdev/scapy/pull/4052?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9e622f1) into [master](https://app.codecov.io/gh/secdev/scapy/commit/cdbdb150ce69dc10debc1d659e5303d13b15f7fa?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cdbdb15) will **increase** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4052   +/-   ##\n=======================================\n  Coverage   81.91%   81.92%           \n=======================================\n  Files         328      328           \n  Lines       75494    75494           \n=======================================\n+ Hits        61841    61845    +4     \n+ Misses      13653    13649    -4     \n```\n\n[see 10 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4052/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Small typos in usage.rst (#4052)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabe9a88c0a76e0a5159f",
    "number": 4051,
    "body": "From the ICMPEcho_am code:\r\n```\r\n    def make_reply(self, req):\r\n        reply = IP(dst=req[IP].src) / ICMP()\r\n        reply[ICMP].type = 0  # echo-reply\r\n        reply[ICMP].seq = req[ICMP].seq\r\n        reply[ICMP].id = req[ICMP].id\r\n        # Force re-generation of the checksum\r\n        reply[ICMP].chksum = None\r\n        return reply\r\n```\r\n\r\nNothing is actually swapped; the source IP address from the echo request is used as the destination for the echo reply. `src` in the echo reply is left unspecified, so it defaults to that of the outgoing interface\r\n",
    "head_branch": "doc-fix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4051?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4051](https://app.codecov.io/gh/secdev/scapy/pull/4051?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c1aaa2b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/cdbdb150ce69dc10debc1d659e5303d13b15f7fa?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cdbdb15) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4051      +/-   ##\n==========================================\n- Coverage   81.91%   81.91%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75494    75494              \n==========================================\n- Hits        61841    61838       -3     \n- Misses      13653    13656       +3     \n```\n\n[see 9 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4051/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Hi, did you find this confusing? I'm interested in why you bumped into this.\r\nDid you have a case where this was unexpected?\r\nThanks !",
      "Hi @gpotter2,\r\n\r\nI was just reading the docs about using tun/tap (https://scapy.readthedocs.io/en/latest/layers/tuntap.html) when I ran into that.\r\n\r\nTowards the bottom, it mentions \"ICMPEcho_am _swaps_ the source and destination fields of any Ether and IP headers...\".\r\nLooking at the packets in Wireshark, I noticed that the behavior didn't quite match that description in the docs, so just thought of reporting it\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabeaa88c0a76e0a515a0",
    "number": 4050,
    "body": "* [dhcp6] add Captive-Portal option \r\n\r\nhttps://datatracker.ietf.org/doc/html/rfc8910#section-2.2\r\n\r\n    The format of the IPv6 Captive-Portal DHCP option is shown below.\r\n\r\n        0                   1                   2                   3\r\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n       |          option-code          |          option-len           |\r\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n       .                      URI (variable length)                    .\r\n       |                              ...                              |\r\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n\r\n    option-code: The Captive-Portal DHCPv6 Option (103) (two octets).\r\n    option-len: The unsigned 16-bit length, in octets, of the URI.\r\n    URI: The URI for the captive portal API endpoint to which the user should connect.\r\n\r\n\r\n* [dhcp] rename default-url to captive-portal\r\n\r\nhttps://datatracker.ietf.org/doc/html/rfc8910#section-4.2\r\n\r\n    IANA has updated the \"BOOTP Vendor Extensions and DHCP Options\" registry\r\n    (https://www.iana.org/assignments/bootp-dhcp-parameters) as follows:\r\n\r\n    Tag: 114\r\n    Name: DHCP Captive-Portal\r\n    Data Length: N\r\n    Meaning: DHCP Captive-Portal\r\n    Reference: RFC 8910",
    "head_branch": "dhcp-captive-portal",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4050?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4050](https://app.codecov.io/gh/secdev/scapy/pull/4050?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f6f489a) into [master](https://app.codecov.io/gh/secdev/scapy/commit/cdbdb150ce69dc10debc1d659e5303d13b15f7fa?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cdbdb15) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4050      +/-   ##\n==========================================\n- Coverage   81.91%   81.91%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75494    75497       +3     \n==========================================\n+ Hits        61841    61843       +2     \n- Misses      13653    13654       +1     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4050?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dhcp.py](https://app.codecov.io/gh/secdev/scapy/pull/4050?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3AucHk=) | `84.03% <ø> (ø)` | |\n| [scapy/layers/dhcp6.py](https://app.codecov.io/gh/secdev/scapy/pull/4050?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3A2LnB5) | `85.16% <100.00%> (+0.07%)` | :arrow_up: |\n\n... and [8 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4050/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "[dhcp6] add Captive-Portal option  (#4050)\n\n* [dhcp] rename default-url to captive-portal\r\n\r\nAccording to https://datatracker.ietf.org/doc/html/rfc8910#section-4.2\r\n\r\nIANA has updated the \"BOOTP Vendor Extensions and DHCP Options\" registry\r\n(https://www.iana.org/assignments/bootp-dhcp-parameters) as follows:\r\n\r\nTag: 114\r\nName: DHCP Captive-Portal\r\nData Length: N\r\nMeaning: DHCP Captive-Portal\r\nReference: RFC 8910\r\n\r\n* [dhcp6] add Captive-Portal option\r\n\r\nhttps://datatracker.ietf.org/doc/html/rfc8910#section-2.2\r\n\r\nThe format of the IPv6 Captive-Portal DHCP option is shown below.\r\n\r\n    0                   1                   2                   3\r\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |          option-code          |          option-len           |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   .                      URI (variable length)                    .\r\n   |                              ...                              |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n\r\noption-code: The Captive-Portal DHCPv6 Option (103) (two octets).\r\noption-len: The unsigned 16-bit length, in octets, of the URI.\r\nURI: The URI for the captive portal API endpoint to which the user should connect."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabeba88c0a76e0a515a1",
    "number": 4048,
    "body": "Rebased https://github.com/secdev/scapy/pull/3967",
    "head_branch": "eHonnef/isotp-soft-socket-can-fd-support",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4048?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4048](https://app.codecov.io/gh/secdev/scapy/pull/4048?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ea1bf48) into [master](https://app.codecov.io/gh/secdev/scapy/commit/b1fa81116b38c6e89af39c429cb755f538a08a3c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b1fa811) will **decrease** coverage by `0.01%`.\n> The diff coverage is `94.44%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4048      +/-   ##\n==========================================\n- Coverage   81.96%   81.95%   -0.01%     \n==========================================\n  Files         327      327              \n  Lines       75614    75640      +26     \n==========================================\n+ Hits        61978    61994      +16     \n- Misses      13636    13646      +10     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4048?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://app.codecov.io/gh/secdev/scapy/pull/4048?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `85.11% <93.10%> (+0.27%)` | :arrow_up: |\n| [scapy/contrib/isotp/isotp\\_packet.py](https://app.codecov.io/gh/secdev/scapy/pull/4048?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9wYWNrZXQucHk=) | `93.29% <100.00%> (+0.10%)` | :arrow_up: |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4048/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@gpotter2 This is ready for merge",
      "@guedou @p-l- Can this PR please get merged?"
    ],
    "commit_messages": [
      "Added support for CanFD in the ISOTPSoftSocket (#4048)\n\n* Added support for CanFD in the ISOTPSoftSocket\n\n* Code review.\n\n* Fixing mypy and removing an useless import in the test campaign\n\n* fix test\n\n* fix test\n\n* remove unnessesary test case file\n\n---------\n\nCo-authored-by: bhonnef <contact@honnef.dev>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabeca88c0a76e0a515a2",
    "number": 4047,
    "body": "Rebased #3967 ",
    "head_branch": "isotp-soft-socket-can-fd-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabeda88c0a76e0a515a3",
    "number": 4046,
    "body": "Rebased #4031 ",
    "head_branch": "vw_rc_definitions",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4046?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4046](https://app.codecov.io/gh/secdev/scapy/pull/4046?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b880323) into [master](https://app.codecov.io/gh/secdev/scapy/commit/dda902e829a51cc6237e253290c6871f30d7daf3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (dda902e) will **increase** coverage by `0.38%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4046      +/-   ##\n==========================================\n+ Coverage   81.53%   81.92%   +0.38%     \n==========================================\n  Files         328      328              \n  Lines       75494    75494              \n==========================================\n+ Hits        61556    61849     +293     \n+ Misses      13938    13645     -293     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4046?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/volkswagen/definitions.py](https://app.codecov.io/gh/secdev/scapy/pull/4046?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3ZvbGtzd2FnZW4vZGVmaW5pdGlvbnMucHk=) | `0.00% <0.00%> (ø)` | |\n\n... and [15 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4046/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Update definitions.py (#4046)\n\nCo-authored-by: superuserx <schroeder.alxndr@web.de>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabeda88c0a76e0a515a4",
    "number": 4045,
    "body": null,
    "head_branch": "uds_scan_exector_fix2",
    "is_a_fork": false,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4045?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4045](https://app.codecov.io/gh/secdev/scapy/pull/4045?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7ca7127) into [master](https://app.codecov.io/gh/secdev/scapy/commit/dda902e829a51cc6237e253290c6871f30d7daf3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (dda902e) will **increase** coverage by `0.38%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4045      +/-   ##\n==========================================\n+ Coverage   81.53%   81.91%   +0.38%     \n==========================================\n  Files         328      328              \n  Lines       75494    75494              \n==========================================\n+ Hits        61556    61843     +287     \n+ Misses      13938    13651     -287     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4045?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/scanner/executor.py](https://app.codecov.io/gh/secdev/scapy/pull/4045?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NjYW5uZXIvZXhlY3V0b3IucHk=) | `88.49% <100.00%> (+0.44%)` | :arrow_up: |\n\n... and [11 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4045/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Could you add a unit test? Thanks !",
      "Done"
    ],
    "commit_messages": [
      "Fix issue in Automotive Executor using make_lined_table (#4045)\n\n* Fix issue in Automotive Executor using make_lined_table\r\n\r\n* add unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabeea88c0a76e0a515a5",
    "number": 4043,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n\r\nMove LEMACField to the fields file with its base implementation MACField. Use MACField implementation that has received some love as a base to implement the LE version... Wrote some tests for the field also.\r\n",
    "head_branch": "dev/macfield",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4043?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4043](https://app.codecov.io/gh/secdev/scapy/pull/4043?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e21625f) into [master](https://app.codecov.io/gh/secdev/scapy/commit/2f2bf33a252397eafd010a9bfb0370c04a19a58d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2f2bf33) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4043      +/-   ##\n==========================================\n- Coverage   81.94%   81.94%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75494    75477      -17     \n==========================================\n- Hits        61867    61853      -14     \n+ Misses      13627    13624       -3     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4043?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4043?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `86.79% <ø> (+0.14%)` | :arrow_up: |\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4043?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.98% <100.00%> (+0.02%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4043/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thank you very much!",
      "Nope, thank **you** @antoniovazquezblanco!"
    ],
    "commit_messages": [
      "Move LEMACField to fields, refactor it and add tests (#4043)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabefa88c0a76e0a515a6",
    "number": 4042,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n\r\nImplement a Bluetooth Monitor Socket. Refactor bluetooth libc sockets in the process... I am wondering what testing scope is expected. Let me know what you may consider adecuate...\r\n\r\nThanks",
    "head_branch": "dev/btsockets",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4042?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4042](https://app.codecov.io/gh/secdev/scapy/pull/4042?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d7b6085) into [master](https://app.codecov.io/gh/secdev/scapy/commit/66fdfa362185e376f7bff483bc4675f6e4a268c4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (66fdfa3) will **decrease** coverage by `0.01%`.\n> The diff coverage is `44.44%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4042      +/-   ##\n==========================================\n- Coverage   81.92%   81.91%   -0.01%     \n==========================================\n  Files         327      327              \n  Lines       75510    75532      +22     \n==========================================\n+ Hits        61863    61874      +11     \n- Misses      13647    13658      +11     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4042?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4042?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `86.24% <44.44%> (-0.55%)` | :arrow_down: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4042/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "LGTM",
      "Added documentation for the new socket and also the existing undocumented user socket. I did kind of my best to explain it but I find the lack of information from BlueZ kind of difficult to overcome.\r\n\r\nPlease, let me know if you find it lacking or if you expect more from it.\r\n\r\nThank you!",
      "Thank you! :)"
    ],
    "commit_messages": [
      "Refactor libc sockets and add BluetoothMonitorSocket (#4042)\n\nSigned-off-by: Antonio Vázquez Blanco <antonio.vazquez@tarlogic.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf0a88c0a76e0a515a7",
    "number": 4041,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n\r\nThis PR adds two new field definitions. Those two new fields will be of use in future PRs to the bluetooth layer. Tests are added meanwhile.\r\n\r\nThanks\r\n",
    "head_branch": "dev/field",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4041?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4041](https://app.codecov.io/gh/secdev/scapy/pull/4041?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e33f417) into [master](https://app.codecov.io/gh/secdev/scapy/commit/99db114bf7087447ab8c9b1fd5e1f92d17f88884?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (99db114) will **increase** coverage by `0.00%`.\n> The diff coverage is `85.71%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4041   +/-   ##\n=======================================\n  Coverage   81.91%   81.92%           \n=======================================\n  Files         328      328           \n  Lines       75494    75501    +7     \n=======================================\n+ Hits        61842    61851    +9     \n+ Misses      13652    13650    -2     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4041?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/scada/pcom.py](https://app.codecov.io/gh/secdev/scapy/pull/4041?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9zY2FkYS9wY29tLnB5) | `97.82% <ø> (ø)` | |\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4041?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `92.08% <85.00%> (+0.08%)` | :arrow_up: |\n| [scapy/contrib/loraphy2wan.py](https://app.codecov.io/gh/secdev/scapy/pull/4041?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9sb3JhcGh5Mndhbi5weQ==) | `97.32% <100.00%> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4041/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "I used EnumField tests as a starting point. I do not have that deep of a scapy knowledge and it was useful to perform all that testing just to ensure that what I programmed was working as expected and producing the desired result because I did not know what implications may have any small change in my implementation. While I am learning more and more about scapy I now have the knowledge to understand that many of this tests are not needed but I am still learning and may require some guidance.\r\n\r\nI removed what I think may not be needed but may have overdone it... Thanks for the review and the patience! :)",
      "Easier, shorter, better... Taking notes. I hope the next is less work for you. Thank you very much!"
    ],
    "commit_messages": [
      "Add LE3BytesEnumField and LEX3BytesEnumField (#4041)\n\n* Add LE3BytesEnumField and LEX3BytesEnumField\r\n\r\n* Cleanup, code-reuse + what I had in mind\r\n\r\n---------\r\n\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf1a88c0a76e0a515a8",
    "number": 4040,
    "body": null,
    "head_branch": "add_me_to_maintainers2",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4040?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4040](https://app.codecov.io/gh/secdev/scapy/pull/4040?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a261a76) into [master](https://app.codecov.io/gh/secdev/scapy/commit/91159a701cc690769c2db85e38ebe3e89728c935?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (91159a7) will **increase** coverage by `0.38%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4040      +/-   ##\n==========================================\n+ Coverage   81.57%   81.95%   +0.38%     \n==========================================\n  Files         328      328              \n  Lines       75497    75497              \n==========================================\n+ Hits        61584    61876     +292     \n+ Misses      13913    13621     -292     \n```\n\n[see 15 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4040/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Fix capitalization (#4040)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf2a88c0a76e0a515a9",
    "number": 4038,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n\r\nRemove duplicage XLEShortField implementation in bluetooth layer\r\n",
    "head_branch": "dev/btxlefield",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4038?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4038](https://app.codecov.io/gh/secdev/scapy/pull/4038?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3f36178) into [master](https://app.codecov.io/gh/secdev/scapy/commit/91159a701cc690769c2db85e38ebe3e89728c935?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (91159a7) will **increase** coverage by `0.37%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4038      +/-   ##\n==========================================\n+ Coverage   81.57%   81.94%   +0.37%     \n==========================================\n  Files         328      328              \n  Lines       75497    75494       -3     \n==========================================\n+ Hits        61584    61862     +278     \n+ Misses      13913    13632     -281     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4038?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4038?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `86.64% <100.00%> (-0.06%)` | :arrow_down: |\n\n... and [13 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4038/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "bluetooth: Remove duplicage XLEShortField implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf2a88c0a76e0a515aa",
    "number": 4037,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n\r\nThis PR simply reorders bluetooth HCI command packets by opcode to keep the source a little bit tidier. Reordering the packets and the binding instructions I found a duplicate binding...\r\n\r\nLow effort maintenance...\r\n",
    "head_branch": "dev/bthcicmdreorder",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4037?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4037](https://app.codecov.io/gh/secdev/scapy/pull/4037?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (fc563fa) into [master](https://app.codecov.io/gh/secdev/scapy/commit/f359a7e01b65f8516d021f76c6ffa42800234546?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f359a7e) will **decrease** coverage by `0.38%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4037      +/-   ##\n==========================================\n- Coverage   81.94%   81.56%   -0.38%     \n==========================================\n  Files         328      328              \n  Lines       75498    75497       -1     \n==========================================\n- Hits        61864    61581     -283     \n- Misses      13634    13916     +282     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4037?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4037?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `86.70% <100.00%> (-0.02%)` | :arrow_down: |\n\n... and [11 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4037/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "In order to keep clean commit history I can squash this changes to changes that are to come to this layer but I guess that reduces readability of the future changes.\r\n\r\nWould you prefer to only reoder binding?\r\nWould you prefer to squash a full reorder with new additions?\r\n\r\n\r\nThanks",
      "Followed the instructions and only provided `bind_layers()` reordering.\r\n\r\nWould you like to include packet reordering whenever I modify a packet in the future or do you prefer to not touch the packet ordering?\r\n\r\nThanks",
      "Thank you!\r\nI'd rather keep the order even when changing code (even more importantly then, because reordering will hide the changes from the diff).",
      "Thank you!"
    ],
    "commit_messages": [
      "bluetooth: Reorder HCI command packets binding to follow opcode (#4037)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf3a88c0a76e0a515ab",
    "number": 4036,
    "body": null,
    "head_branch": "add_me_to_maintainers",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4036?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4036](https://app.codecov.io/gh/secdev/scapy/pull/4036?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d59ba12) into [master](https://app.codecov.io/gh/secdev/scapy/commit/92c18f9e60c0959b633589953ce0c53063185ff7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (92c18f9) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4036      +/-   ##\n==========================================\n- Coverage   81.93%   81.93%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75470    75470              \n==========================================\n- Hits        61839    61838       -1     \n- Misses      13631    13632       +1     \n```\n\n[see 5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4036/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Aw we should've done that.\nWelcome @polybassa !",
      "No worries ;-D",
      "Welcome!",
      "Aw I forgot to \"push\" my comment"
    ],
    "commit_messages": [
      "Added myself to the maintainers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf4a88c0a76e0a515ac",
    "number": 4033,
    "body": "Docstring incorrectly refers to the `proto` param of `in4_chksum` method as `nh`\r\n\r\nSubmitting this PR again because I deleted the fork before PR was merged.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4033?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4033](https://app.codecov.io/gh/secdev/scapy/pull/4033?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (088a301) into [master](https://app.codecov.io/gh/secdev/scapy/commit/92c18f9e60c0959b633589953ce0c53063185ff7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (92c18f9) will **increase** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4033   +/-   ##\n=======================================\n  Coverage   81.93%   81.94%           \n=======================================\n  Files         328      328           \n  Lines       75470    75470           \n=======================================\n+ Hits        61839    61845    +6     \n+ Misses      13631    13625    -6     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4033?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4033?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `71.79% <ø> (ø)` | |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4033/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "fix param name in docstring\n\nDocstring incorrectly refers to the `proto` param of `in4_chksum` method as `nh`\r\n\r\nSubmitting this PR again because I deleted the fork before PR was merged."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf5a88c0a76e0a515ad",
    "number": 4032,
    "body": null,
    "head_branch": "spell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix grammar for codespell 2.2.5 (#4032)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf6a88c0a76e0a515ae",
    "number": 4031,
    "body": null,
    "head_branch": "vw_rc_definitions",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4031?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4031](https://app.codecov.io/gh/secdev/scapy/pull/4031?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (91b4f7a) into [master](https://app.codecov.io/gh/secdev/scapy/commit/577ab1f3b2e1f81d1926a0b3dc7b5a0f085ebc1a?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (577ab1f) will **decrease** coverage by `1.63%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4031      +/-   ##\n==========================================\n- Coverage   81.94%   80.32%   -1.63%     \n==========================================\n  Files         328      328              \n  Lines       75470    75470              \n==========================================\n- Hits        61843    60620    -1223     \n- Misses      13627    14850    +1223     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4031?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/volkswagen/definitions.py](https://app.codecov.io/gh/secdev/scapy/pull/4031?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3ZvbGtzd2FnZW4vZGVmaW5pdGlvbnMucHk=) | `0.00% <0.00%> (ø)` | |\n\n... and [43 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4031/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Could you please rebase on master",
      "Rebased version of this PR in #4046 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf7a88c0a76e0a515af",
    "number": 4027,
    "body": "Docstring refers to the `proto` param of `in4_chksum` method as `nh`",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4027?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4027](https://app.codecov.io/gh/secdev/scapy/pull/4027?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (65ab467) into [master](https://app.codecov.io/gh/secdev/scapy/commit/a45836f97ef61baa2f17590d19c710414af6b9ef?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a45836f) will **decrease** coverage by `2.29%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4027      +/-   ##\n==========================================\n- Coverage   81.60%   79.32%   -2.29%     \n==========================================\n  Files         328      321       -7     \n  Lines       75415    70204    -5211     \n==========================================\n- Hits        61541    55687    -5854     \n- Misses      13874    14517     +643     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4027?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet.py](https://app.codecov.io/gh/secdev/scapy/pull/4027?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `67.90% <ø> (-3.90%)` | :arrow_down: |\n\n... and [117 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4027/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf8a88c0a76e0a515b0",
    "number": 4024,
    "body": "`cryptography.hazmat.backends.openssl.ec ` was not a public API, but an implementation detail, and is likely to be removed (see https://github.com/pyca/cryptography/pull/9024)\r\n\r\n*edited by gpotter2 for search purposes:*\r\n```\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/handshake.py\", line 42, in <module>\r\n    from scapy.layers.tls.cert import Cert\r\n  File \"/home/runner/work/cryptography/cryptography/scapy/scapy/layers/tls/cert.py\", line 51, in <module>\r\n    from cryptography.hazmat.backends.openssl.ec import InvalidSignature\r\nModuleNotFoundError: No module named 'cryptography.hazmat.backends.openssl.ec'\r\n```",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4024?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4024](https://app.codecov.io/gh/secdev/scapy/pull/4024?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a7cdb97) into [master](https://app.codecov.io/gh/secdev/scapy/commit/3da71cb275721292131a3ea5196bfa98883741f2?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3da71cb) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4024      +/-   ##\n==========================================\n- Coverage   81.94%   81.93%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75415    75415              \n==========================================\n- Hits        61799    61795       -4     \n- Misses      13616    13620       +4     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4024?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/cert.py](https://app.codecov.io/gh/secdev/scapy/pull/4024?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jZXJ0LnB5) | `88.15% <100.00%> (ø)` | |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4024/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "I wonder if it's related to https://github.com/pyca/cryptography/pull/9024 in any way? :-)",
      "As far as I understand with that cryptography PR merged scapy without this patch (< 2.6) should stop working with the first version of cryptography where `ec` is removed. I think at least it should probably be mentioned in the commit message to make it easier for people backporting stuff to find this patch.",
      "Ok, updated the description",
      "Thanks a lot for the heads-up and PR @alex !"
    ],
    "commit_messages": [
      "Import InvalidSignature from the correct location"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf8a88c0a76e0a515b1",
    "number": 4022,
    "body": "On the CANFD protocol, two additional packets for ISOTP are possible. This PR adds those to scapy",
    "head_branch": "isotp_fd_github",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4022?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4022](https://app.codecov.io/gh/secdev/scapy/pull/4022?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6ba18ab) into [master](https://app.codecov.io/gh/secdev/scapy/commit/3da71cb275721292131a3ea5196bfa98883741f2?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3da71cb) will **decrease** coverage by `0.01%`.\n> The diff coverage is `79.31%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4022      +/-   ##\n==========================================\n- Coverage   81.94%   81.93%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75415    75468      +53     \n==========================================\n+ Hits        61799    61837      +38     \n- Misses      13616    13631      +15     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4022?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/isotp/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/secdev/scapy/pull/4022?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9fX2luaXRfXy5weQ==) | `91.30% <ø> (ø)` | |\n| [scapy/contrib/isotp/isotp\\_packet.py](https://app.codecov.io/gh/secdev/scapy/pull/4022?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9wYWNrZXQucHk=) | `93.19% <79.31%> (-6.09%)` | :arrow_down: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4022/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Implement ISOTP packets for CANFD layer (#4022)\n\n* Implement ISOTP packets for CANFD layer\r\n\r\n* fix flake\r\n\r\n---------\r\n\r\nCo-authored-by: Nils Weiss <nils@dissecto.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabf9a88c0a76e0a515b2",
    "number": 4021,
    "body": "I couldn't find anything in the spec about requiring this.\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n",
    "head_branch": "nkorth/pcapng-comment",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4021?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4021](https://app.codecov.io/gh/secdev/scapy/pull/4021?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5e25fc2) into [master](https://app.codecov.io/gh/secdev/scapy/commit/3da71cb275721292131a3ea5196bfa98883741f2?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3da71cb) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4021      +/-   ##\n==========================================\n- Coverage   81.94%   81.94%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75415    75408       -7     \n==========================================\n- Hits        61799    61791       -8     \n- Misses      13616    13617       +1     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4021?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4021?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `77.98% <100.00%> (+0.02%)` | :arrow_up: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4021/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Awaiting a review from @guedou",
      "I think that this PR is not valid as current Scapy behavior is explicitly written in https://www.ietf.org/archive/id/draft-tuexen-opsawg-pcapng-05.html\r\n\r\n```\r\nopt_comment:\r\n\r\n    The opt_comment option is a UTF-8 string containing human-readable comment text that is associated to the current block. Line separators SHOULD be a carriage-return + linefeed ('\\r\\n') or just linefeed ('\\n'); either form may appear and be considered a line separator. The string is not zero-terminated.\r\n```",
      "The example comment right below the bit you quoted would be rejected by current scapy as invalid. The spec only says line separators \"should\" be crlf, it doesn't say anything about putting one at the end.\n\nOn July 17, 2023 9:34:59 AM EDT, Guillaume Valadon ***@***.***> wrote:\n>I think that this PR is not valid as current Scapy behavior is explicitly written in https://www.ietf.org/archive/id/draft-tuexen-opsawg-pcapng-05.html\n>\n>```\n>opt_comment:\n>\n>    The opt_comment option is a UTF-8 string containing human-readable comment text that is associated to the current block. Line separators SHOULD be a carriage-return + linefeed ('\\r\\n') or just linefeed ('\\n'); either form may appear and be considered a line separator. The string is not zero-terminated.\n>```\n>\n>-- \n>Reply to this email directly or view it on GitHub:\n>https://github.com/secdev/scapy/pull/4021#issuecomment-1638157916\n>You are receiving this because you authored the thread.\n>\n>Message ID: ***@***.***>",
      "Which changes do you suggest?",
      "I suggest the change in this PR. The code that I'm deleting here enforced something like \"the string MUST end with a line separator\", but there's no such statement in the spec.\r\n\r\nThe spec says this about line separators:\r\n\r\n> Line separators SHOULD be a carriage-return + linefeed ('\\r\\n') or just linefeed ('\\n'); either form may appear and be considered a line separator.\r\n\r\nand the example in the spec demonstrates both types of line separators in use, but does not **end** in a line separator.\r\n\r\n> \"Packets 17-23 showing a bogus TCP retransmission!\\r\\n This is reported in bugzilla entry 1486.\\nIt will be fixed in the future.\"",
      "Oh, I see. You are absolutely right. I incorrectly assumed that `\\n`should be a the end of the line. I should have use the example from the specifications in the regression tests to figure this out."
    ],
    "commit_messages": [
      "Don't require newline at end of pcapng comment (#4021)\n\nI couldn't find anything in the spec about requiring this."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabfaa88c0a76e0a515b3",
    "number": 4020,
    "body": "This PR fixes #4016 by specifying the Ethernet source MAC address. Without this patch, Scapy could pick an invalid address by using `conf.iface`.",
    "head_branch": "guedou/Issue_#4016",
    "is_a_fork": false,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4020?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4020](https://app.codecov.io/gh/secdev/scapy/pull/4020?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0b85a0c) into [master](https://app.codecov.io/gh/secdev/scapy/commit/7f89ce51c09417c2aa9d78d3e5c75091cacd4bff?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7f89ce5) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4020   +/-   ##\n=======================================\n  Coverage   81.93%   81.93%           \n=======================================\n  Files         328      328           \n  Lines       75406    75407    +1     \n=======================================\n+ Hits        61786    61787    +1     \n  Misses      13620    13620           \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4020?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/4020?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.37% <100.00%> (+<0.01%)` | :arrow_up: |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4020/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Force the source MAC address in neighsol() (#4020)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabfba88c0a76e0a515b4",
    "number": 4019,
    "body": "The argument bustype will get replaced to interface in python-can. This PR fixes this. ",
    "head_branch": "python_can_deprecation_fix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4019?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4019](https://app.codecov.io/gh/secdev/scapy/pull/4019?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b431183) into [master](https://app.codecov.io/gh/secdev/scapy/commit/7f89ce51c09417c2aa9d78d3e5c75091cacd4bff?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7f89ce5) will **increase** coverage by `0.00%`.\n> The diff coverage is `66.66%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4019   +/-   ##\n=======================================\n  Coverage   81.93%   81.94%           \n=======================================\n  Files         328      328           \n  Lines       75406    75408    +2     \n=======================================\n+ Hits        61786    61793    +7     \n+ Misses      13620    13615    -5     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4019?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cansocket\\_python\\_can.py](https://app.codecov.io/gh/secdev/scapy/pull/4019?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `88.15% <66.66%> (-0.51%)` | :arrow_down: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4019/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "fix depricated argument in python-can"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabfca88c0a76e0a515b5",
    "number": 4017,
    "body": "Trigger an ImportError on calls to any TLS13_HKDF methods if the 'cryptography' module is missing.\r\n",
    "head_branch": "hkdf_crypto_validator",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4017?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4017](https://app.codecov.io/gh/secdev/scapy/pull/4017?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5c96386) into [master](https://app.codecov.io/gh/secdev/scapy/commit/7f89ce51c09417c2aa9d78d3e5c75091cacd4bff?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7f89ce5) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4017   +/-   ##\n=======================================\n  Coverage   81.93%   81.94%           \n=======================================\n  Files         328      328           \n  Lines       75406    75412    +6     \n=======================================\n+ Hits        61786    61794    +8     \n+ Misses      13620    13618    -2     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4017?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/crypto/hkdf.py](https://app.codecov.io/gh/secdev/scapy/pull/4017?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vaGtkZi5weQ==) | `100.00% <100.00%> (ø)` | |\n\n... and [3 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4017/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@guedou please let me know if anything else is needed for this PR!",
      "@guedou would you be able to trigger the unit tests on this PR?",
      "Sorry, I haven't seen your PR earlier.",
      "@guedou thanks! Looks like all tests are passing. Feel free to merge anytime if it all looks good to you!"
    ],
    "commit_messages": [
      "Add crypto_validator decorator to TLS13_HKDF methods to fix #4005\n\nTrigger an ImportError on calls to any TLS13_HKDF methods if the 'cryptography' module is missing."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabfda88c0a76e0a515b6",
    "number": 4015,
    "body": "I noticed that scapy seemed to skip packets when parsing tlsv1.2 messages from pcap files. I could not find a relevant issue and investigated it myself. It seems that scapy was returning the last tls message in a sequence when tls was fragmented across tcp packets. \r\nIndependently, I noticed that tls messages wireshark calls \"Encrypted Handshake Messages\" were not recognized by scapy. Since these messages aren't indicated by any outside field, I modified tls records to consider the message content encrypted if a message fails to parse.\r\n\r\nI'm opening this PR as a draft since I haven't done testing outside of my use case. I'm not sure what implications outside of tls handshakes these changes have.",
    "head_branch": "tls_parsing",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4015?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4015](https://app.codecov.io/gh/secdev/scapy/pull/4015?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (25a0296) into [master](https://app.codecov.io/gh/secdev/scapy/commit/047be325fe7b67fc05287632e7b14bc9e5d6701f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (047be32) will **decrease** coverage by `29.09%`.\n> The diff coverage is `7.14%`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #4015       +/-   ##\n===========================================\n- Coverage   81.93%   52.85%   -29.09%     \n===========================================\n  Files         328      328               \n  Lines       75404    75425       +21     \n===========================================\n- Hits        61783    39865    -21918     \n- Misses      13621    35560    +21939     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4015?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/record.py](https://app.codecov.io/gh/secdev/scapy/pull/4015?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmQucHk=) | `20.26% <0.00%> (-71.61%)` | :arrow_down: |\n| [scapy/layers/tls/session.py](https://app.codecov.io/gh/secdev/scapy/pull/4015?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `35.36% <0.00%> (-52.83%)` | :arrow_down: |\n| [scapy/layers/tls/crypto/cipher\\_aead.py](https://app.codecov.io/gh/secdev/scapy/pull/4015?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY2lwaGVyX2FlYWQucHk=) | `38.15% <100.00%> (-50.00%)` | :arrow_down: |\n\n... and [225 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4015/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for your interest in Scapy. Could you share an example that triggers the issue? For example by adding a pcap file to a github comment.",
      "When running the included test with the included pcap file with master, I observe scapy parsing: the client hello, the server hello done, 2 hello requests?, raw handshake data, and finally application data.\r\nWhen using my commit, I observe scapy parsing: the client hello, the server hello & handshake certificate & key exchange & hello done, the client key exchange & change cipher spec & encrypted handshake data, the server change cipher spec & encrypted handshake data, and finally application data.\r\n[issue.zip](https://github.com/secdev/scapy/files/11539530/issue.zip)\r\nI think tls packets reassembled over tcp were being dropped since only the last tls packet parsed was returned in session.py. The record.py change helps identify handshake messages with encrypted content, but I'm not sure if it has other consequences. ",
      "There's indeed an issue with TLS and tcp reassembly, but that should be handled by fixing TCP sessions (which is currently somewhat broken because we dissect then rebuild packets), rather than modifying TLS.",
      "Perhaps the first issue would be fixed with a refactoring of TCP sessions, but as-is, as far as I can tell, TLS `tcp_reassemble` does not return the correct value.\r\nThe behavior I noticed was that `tcp_reassemble` does not return a packet until all available bytes are able to be deserialized. When the bytes were able to be deserialized, it would only return the last packet in the list. My changes to `session.py` still ensure all bytes must be deserialized until a packet is returned, but it returns the first packet in the list such that packets are not dropped and are instead accessible from the payload of the first packet.\r\nThe first change to `record.py` ensures TLS encrypted data is represented by an encrypted class instead of as raw data.\r\nThe second change to `record.py` and `cipher_aead.py` is addressing a cryptographic error I received when dealing with a specific encryption mechanism (which I'd have to look back at to identify). IIRC `self._tls_auth_decrypt` wasn't returning a predictable tuple with some encryption mechanism and I couldn't not find the route cause."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabfda88c0a76e0a515b7",
    "number": 4014,
    "body": "It's mostly prompted by relatively new dig and delv sending cookies by default (unless `+nocookie`/`+noedns`/... is specified explicitly).\r\n\r\nhttps://datatracker.ietf.org/doc/html/rfc7873#section-4",
    "head_branch": "dns-cookie",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4014?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4014](https://app.codecov.io/gh/secdev/scapy/pull/4014?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (81bdeb2) into [master](https://app.codecov.io/gh/secdev/scapy/commit/7b4e34e149f09b4e588919e58ac2472ae4777277?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7b4e34e) will **increase** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4014   +/-   ##\n=======================================\n  Coverage   81.92%   81.92%           \n=======================================\n  Files         328      328           \n  Lines       75405    75405           \n=======================================\n+ Hits        61772    61776    +4     \n+ Misses      13633    13629    -4     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4014?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4014?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `91.72% <ø> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4014/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks!"
    ],
    "commit_messages": [
      "Recognize DNS cookies (#4014)\n\nIt's mostly prompted by relatively new dig and delv sending cookies by\r\ndefault (unless `+nocookie`/`+noedns`/... is specified explicitly).\r\n\r\nhttps://datatracker.ietf.org/doc/html/rfc7873#section-4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabfea88c0a76e0a515b8",
    "number": 4012,
    "body": "### Rewrite DNS\r\n- remove the extremly old `DNSRRCountField`, `DNSRRField` and `DNSQRField` fields, and use standard `PacketListField`, `FieldLenField`.\r\n  - old build is still supported: `ans = sr1(IP(dst=\"192.168.5.1\")/UDP()/DNS(rd=1,qd=DNSQR(qname=\"www.slashdot.org\")))`\r\n  - new dissection: **should now do `ans.an[0]` instead of `ans.an`**. For other answers, it becomes `ans.an[1]`... instead of `ans.an.payload`. There's a compat layer to do that that throws DeprecationWarnings\r\n- remove the `InheritOriginDNSStrPacket`, `_orig_s`, `_orig_p` nonsense\r\n- simplify `dns_get_str` by removing all useless parameters\r\n- improve `dns_spoof` (therefore also `llmns_spoof`) and the `DNS_am` to add support for multiple answers and SRV records\r\n\r\n**This makes it so that `DNSStrField` and its compression can be used very simply outside of the `DNS` packet**, which has some direct applications (for instance [MS-ADTS] sect 6.3.1.9)\r\n\r\n### Add `MayEnd` field, prevent unexpected ending\r\n\r\nThere's a behavior in current Scapy that currently makes no sense: if not enough bytes are passed to the packet while dissecting, dissection might ends between fields. This is buggy because the defaults for the remaining fields will be kept, and applied when rebuilding that field.\r\n\r\nLet's take a (broken) example:\r\n```\r\n>>> # DHCP6OptRelayMsg with optlen=0, but scapy has a non-conditional message\r\n>>> a = DHCP6OptRelayMsg(b'\\x00\\r\\x00\\x00')\r\n>>> # dissected just fine\r\n>>> a.show()\r\n###[ DHCP6 Relay Message Option ]###\r\n  optcode   = STATUS_CODE\r\n  optlen    = 0\r\n  \\message   \\\r\n   |###[ DHCPv6 Generic Message ]###\r\n   |  msgtype   = None\r\n   |  trid      = 0x0\r\n>>> # that message should be None but dissection stopped and the default Generic Message was kept\r\n```\r\n\r\nThat's because of this: https://github.com/secdev/scapy/blob/a45836f97ef61baa2f17590d19c710414af6b9ef/scapy/packet.py#L1008-L1009\r\n\r\nthat is broken as it stops the dissection early.\r\n\r\nThis PR removes this weird behavior, but introduces a `MayEnd` field wrapper to restore it, by allowing a packet to end after a specific field. It can indeed be easier to have something like that than add many `ConditionalField`s.\r\n\r\n#### Example: an imaginary packet with an optional payload that contains exactly 2 shorts:\r\n```python\r\nclass A(Packet):\r\n    fields_desc = [\r\n        ByteField(\"a\", 0),\r\n        # len can be 0 or 4\r\n        MayEnd(ByteField(\"len\", 0)),\r\n        ShortField(\"b\", 0),\r\n        ShortField(\"c\", 123),\r\n    ]\r\n```\r\n\r\nThis works:\r\n```\r\n>>> A(b\"\\x01\\x04\\x00\\x02\\x00\\x00\")\r\n<A  a=1 len=4 b=2 c=0 |>\r\n```\r\nand this works (thanks to the MayEnd):\r\n```\r\n>>> A(b\"\\x01\\x00\")\r\n<A  a=1 len=0 |>\r\n```\r\nbut this doesn't (it used to return 123):\r\n```\r\n>>> A(b\"\\x01\\x04\\x00\\x00\").c\r\n```\r\n\r\nThis PR therefore also fixes a (bunch) of places where the previous behavior was (clearly) broken.",
    "head_branch": "dns-rewrite",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4012](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (fc59ae8) into [master](https://app.codecov.io/gh/secdev/scapy/commit/92c18f9e60c0959b633589953ce0c53063185ff7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (92c18f9) will **decrease** coverage by `0.03%`.\n> The diff coverage is `80.76%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4012      +/-   ##\n==========================================\n- Coverage   81.93%   81.90%   -0.03%     \n==========================================\n  Files         328      328              \n  Lines       75470    75487      +17     \n==========================================\n- Hits        61839    61831       -8     \n- Misses      13631    13656      +25     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/coap.py](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jb2FwLnB5) | `95.49% <ø> (+0.90%)` | :arrow_up: |\n| [scapy/contrib/openflow3.py](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9vcGVuZmxvdzMucHk=) | `96.53% <ø> (ø)` | |\n| [scapy/contrib/rtcp.py](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ydGNwLnB5) | `85.71% <ø> (ø)` | |\n| [scapy/contrib/stamp.py](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9zdGFtcC5weQ==) | `86.84% <ø> (ø)` | |\n| [scapy/layers/dot11.py](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RvdDExLnB5) | `91.37% <ø> (ø)` | |\n| [scapy/contrib/isotp/isotp\\_utils.py](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF91dGlscy5weQ==) | `90.52% <37.50%> (-2.37%)` | :arrow_down: |\n| [scapy/contrib/erspan.py](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9lcnNwYW4ucHk=) | `88.09% <66.66%> (-9.05%)` | :arrow_down: |\n| [scapy/layers/tls/keyexchange\\_tls13.py](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9rZXlleGNoYW5nZV90bHMxMy5weQ==) | `80.89% <66.66%> (-1.92%)` | :arrow_down: |\n| [scapy/layers/dns.py](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `87.77% <80.12%> (-3.96%)` | :arrow_down: |\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.98% <90.90%> (+0.01%)` | :arrow_up: |\n| ... and [14 more](https://app.codecov.io/gh/secdev/scapy/pull/4012?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n\n... and [11 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4012/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "I did not find any regressions while parsing 120k+ UDP-based DNS messages. LGTM.",
      "Hi @polybassa ! This is a heads up.\r\n\r\nThrough this PR, Scapy will now fail to dissect packets that are given insufficient bytes, in all cases (where previously it was only in some cases). You can read the PR message.\r\n\r\nA few automotive tests have crashed because of the new stricter rules. I started fixing them too but actually didn't finish because unlike I realise that unlike most other protocols, it's much harder to find the RFC (or it's behind a paywall). I might end up only adding `XXX` with stupid `MayEnd` fields whereever needed so that tests don't fail, but it is probably smarter to check if the failures are expected (most are actually probably bugs).\r\n\r\nHere are a few I \"fixed\" (not really) in the last commit:\r\n\r\n- DoIP: (\"read main pcap file\")\r\n```python\r\n>>> load_contrib(\"automotive.doip\")\r\n>>> Ether(hex_bytes('ffffffffffff001a37bfee740800450000444d7c0000ff11a441a9fe75eea9feffff345834580030df5e02fd0004000000204241554e4545344d5a31373034323430334010001a37bfee74001a37bfee7400'))\r\n```\r\n- GMLAN: (\"Analyze on the fly with EcuSession GMLAN logging test\")\r\n```python\r\nload_contrib(\"automotive.doip\")\r\nGMLAN(hex_bytes('7f3478'))\r\n```\r\n- KWP:\r\n```python\r\nload_contrib(\"automotive.kwp\")\r\nKWP(b'\\xC6\\x00\\x01')\r\nKWP(b'\\x86\\x01\\x10\\x00')\r\n```\r\n\r\nFeel free to have a look, if you want/have the time of course, at why those fail, and feel free to point out if one was indeed not expected. Eventually I'm going to finish this PR by probably just adding `MayField`s.\r\nCheers !",
      "@guedou @p-l- @polybassa This is ready for review !",
      "Looks like the dns test fails with `-Werror`:\r\n```python\r\n###(021)=[failed] DNS - Backward compatibility: keep deprecated behavior\r\n...\r\n>>> assert pkt.an.rdata == b'140C768FFE28@Freebox Server._raop._tcp.local.'\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"/scapy/scapy/layers/dns.py\", line 941, in __getattr__\r\n    warnings.warn(\r\nDeprecationWarning: The DNS fields 'qd', 'an', 'ns' and 'ar' are now PacketListField(s) ! To access the first element, use pkt.an[0] instead of pkt.an\r\n```\r\nSince those deprecation warnings are expected there I wonder if it should be wrapped into `catch_warnings`? I fixed it locally with\r\n```python\r\nwith warnings.catch_warnings(record=True) as w:\r\n    warnings.simplefilter(\"always\")\r\n    assert pkt.an.rdata == b'140C768FFE28@Freebox Server._raop._tcp.local.'\r\n    # Set qd to None (should be qd=[])\r\n    pkt = DNS(qr=1, qd=None, aa=1, rd=1)\r\n    pkt = DNS(bytes(pkt))\r\n    assert pkt.qd == []\r\n    assert len(w) == 2\r\n    assert all(issubclass(m.category, DeprecationWarning) for m in w)\r\n```\r\nand can send a PR if it makes sense.",
      "Finally found this PR while tracking down why code that worked in Scapy 2.5 broke in 2.6. To help others searching for this issue: if you have custom packets, and upgrading to Scapy 2.6 results in `struct.error: unpack requires a buffer of X bytes`, then you may need to wrap fields that have the potential to not be dissected in some cases with a `scapy.fields.MayEnd`. "
    ],
    "commit_messages": [
      "DNS rewrite + MayEnd (make undersized dissection fail) (#4012)\n\n* DNS rewrite\r\n\r\n* Build/dissect packets on answering tests\r\n\r\n* Safety check to avoid OOM\r\n\r\n* DNS backward compatibility\r\n\r\n* Add MayEnd support\r\n\r\n* Fix automative tests for MayEnd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fabffa88c0a76e0a515b9",
    "number": 4011,
    "body": "Fixes #4008\r\n",
    "head_branch": "enh-dot1q-dei",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4011?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4011](https://app.codecov.io/gh/secdev/scapy/pull/4011?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5572f7d) into [master](https://app.codecov.io/gh/secdev/scapy/commit/9d81d48812a5adb4e35bb9672a1a7fba9ec94a2c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9d81d48) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4011      +/-   ##\n==========================================\n- Coverage   81.92%   81.92%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75404    75405       +1     \n==========================================\n- Hits        61774    61773       -1     \n- Misses      13630    13632       +2     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4011?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/l2.py](https://app.codecov.io/gh/secdev/scapy/pull/4011?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `84.25% <100.00%> (+0.03%)` | :arrow_up: |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4011/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "802.1q: rename .id field to .dei"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac00a88c0a76e0a515ba",
    "number": 4009,
    "body": "Implement IEEE 802.1ah I-Tag for Provider Backbone Bridging (PBB) MAC-in-MAC encapsulation.\r\n\r\nThe tag is similar to a VLAN tag, but it is effectively followed by a complete Ethernet packet including addresses, instead of only the Ethertype and payload.  \r\n\r\nAlso, there are probably at least 3 different ways of supporting 802.1ah, I have implemented one way but I'm not sure it's necessarily the best way.  Wireshark at least seems to subsume the B-tag (802.1ad type 0x88a8 outer/Q-in-Q VLAN tag), I-tag (this tag, type 0x88e7), and the following Ethernet header (as C-Destination, C-Source, and Type fields) all under the same IEEE 802.1ah block.  I'm not sure if it makes sense to do something similar in scapy, or if the tags should be kept separate.  The IEEE spec seems to consider the \"wrapped\" MAC addresses as part of the I-Tag, as the tag sits in between the MAC addresses and ethertype field of the original frame.\r\n\r\nOptions:\r\n\r\n1. Everything separate (Dot1AD, Dot1AH, Ether) - what I have implemented here so far\r\n2. Pull Ethernet header fields of wrapped frame into Dot1AH\r\n3. Pull Ethernet headers and preceding Dot1AD into Dot1AH (what Wireshark seems to do)\r\n\r\nI'm also not sure if I have done everything correctly wrt. scapy internals, particularly in relation to aliastypes, register_l3, and default_payload_class.  It seems to build and dissect correctly, but I have not done much testing yet.  I also don't have a unit test implemented - which file should I add it to?\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Here is a python script that generates a handful of different encapsulated frames including some PBB frames, along with the output pcap file, for examination in wireshark.\r\n\r\n[encap_test.zip](https://github.com/secdev/scapy/files/11468894/encap_test.zip)",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4009?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4009](https://app.codecov.io/gh/secdev/scapy/pull/4009?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e558564) into [master](https://app.codecov.io/gh/secdev/scapy/commit/9d81d48812a5adb4e35bb9672a1a7fba9ec94a2c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9d81d48) will **increase** coverage by `0.01%`.\n> The diff coverage is `95.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4009      +/-   ##\n==========================================\n+ Coverage   81.92%   81.93%   +0.01%     \n==========================================\n  Files         328      327       -1     \n  Lines       75404    75476      +72     \n==========================================\n+ Hits        61774    61845      +71     \n- Misses      13630    13631       +1     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4009?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/l2.py](https://app.codecov.io/gh/secdev/scapy/pull/4009?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `85.68% <95.00%> (+1.46%)` | :arrow_up: |\n\n... and [13 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4009/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Interesting, from the test failures it looks like 802.1ah is already implemented in scapy as \"SPBM\" under contrib.  Presumably that should be renamed to Dot1AH and moved into l2.py with the contrib implementation replaced with an alias for backwards compatibility, as the 802.1aq standard (SPB) references the tag format defined in 802.1ah (PBB).  ",
      "Updated the PR to move the `SPBM` implementation to `Dot1AH` under `scapy.layers.l2`, replacing `SPBM` with an alias to `Dot1AH` for backwards-compatibility.  ",
      "Added unit tests to l2.uts for `Dot1Q`, `Dot1AD`, and `Dot1AH`.  I think this is probably good enough to take out of draft mode, although there still may need to be some adjustments for `aliastypes`, `register_l3`, and `default_payload_class`.  ",
      "> Updated the PR to move the `SPBM` implementation to `Dot1AH` under `scapy.layers.l2`, replacing `SPBM` with an alias to `Dot1AH` for backwards-compatibility.\r\n\r\nIf I understand correctly, that should never have been called `SPBM`. It's just an implementation of IEEE 802.1ah (PBB), and it actually has nothing specifically to do with IEEE 802.1aq (SPBM or SPBV). The only connection is that networks which use SPBM will necessarily be using PBB — just like networks which use SPBV will necessarily be using IEEE 802.1ad (PB).\r\n\r\nPersonally I think the old name should be dropped, to avoid propagating confusion any further. Do we actually need to maintain that compatibility here?",
      "> Personally I think the old name should be dropped, to avoid propagating confusion any further. Do we actually need to maintain that compatibility here?\r\n\r\nWell, it's in contrib, so I'm not sure what makes the most sense.  Removing it could break someone's use of scapy, presumably.  But the alias is literally just `SPBM = Dot1AH`.  Could maybe leave it in for a release or two, then remove the alias.  Possibly also mark as deprecated somehow.  Also, there is a unit test for `SPBM` that I didn't touch.  ",
      "> 3. Pull Ethernet headers and preceding Dot1AD into Dot1AH (what Wireshark seems to do)\r\n\r\nI-tagged service interfaces (section 25.5 of the specification) do not include a B-TAG. It looks like Wireshark includes the B-TAG as part of the 802.1ah dissector if it is there, but ignores it if it is not.\r\n\r\nSo, if you want to match specifically on the B-VID (and not the S-VID), or vice versa, I believe this was the only way to do it before Wireshark 4.0 - so I assume that's why they did it. But now, you can filter on a specific occurrence of the same header in Wireshark (with the `#` notation). Scapy also lets you do this, with the `nb` parameter to `scapy.packet.getlayer()`.",
      "> > Personally I think the old name should be dropped, to avoid propagating confusion any further. Do we actually need to maintain that compatibility here?\r\n> \r\n> Well, it's in contrib, so I'm not sure what makes the most sense. Removing it could break someone's use of scapy, presumably. But the alias is literally just `SPBM = Dot1AH`. Could maybe leave it in for a release or two, then remove the alias. Possibly also mark as deprecated somehow. Also, there is a unit test for `SPBM` that I didn't touch.\r\n\r\nWhat if someone actually decides to implement handling of IEEE 802.1aq / SPB in Scapy though? Don't we want to reserve the name `SPBM` for that?\r\n(That said, I believe the only PDUs added by SPB are really just additional TLVs for existing PDUs in IS-IS, so perhaps there's no concern here.)",
      "> > > Personally I think the old name should be dropped, to avoid propagating confusion any further. Do we actually need to maintain that compatibility here?\r\n> > \r\n> > \r\n> > Well, it's in contrib, so I'm not sure what makes the most sense. Removing it could break someone's use of scapy, presumably. But the alias is literally just `SPBM = Dot1AH`. Could maybe leave it in for a release or two, then remove the alias. Possibly also mark as deprecated somehow. Also, there is a unit test for `SPBM` that I didn't touch.\r\n> \r\n> What if someone actually decides to implement handling of IEEE 802.1aq / SPB in Scapy though? Don't we want to reserve the name `SPBM` for that? (That said, I believe the only PDUs added by SPB are really just additional TLVs for existing PDUs in IS-IS, so perhaps there's no concern here.)\r\n\r\nWell, if you think it would be best to delete it completely, then I can certainly do that instead replacing it with an alias.",
      "> > 5\\. Pull Ethernet headers and preceding Dot1AD into Dot1AH (what Wireshark seems to do)\r\n> \r\n> I-tagged service interfaces (section 25.5 of the specification) do not include a B-TAG. It looks like Wireshark includes the B-TAG as part of the 802.1ah dissector if it is there, but ignores it if it is not.\r\n> \r\n> So, if you want to match specifically on the B-VID (and not the S-VID), or vice versa, I believe this was the only way to do it before Wireshark 4.0 - so I assume that's why they did it. But now, you can filter on a specific occurrence of the same header in Wireshark (with the `#` notation). Scapy also lets you do this, with the `nb` parameter to `scapy.packet.getlayer()`.\r\n\r\nRight, I guess that makes sense.  So implementing it the way I have done here (and how `SPBM` was implemented) is probably the best method.",
      "One other thing to sort out: `Dot1Q` has a bunch of additional stuff in it (aliastypes, answers, default_payload_class, extractpadding, and mysummary).  How much of that should be applied to `Dot1AH`?",
      "If you want to delete spbm.py, you'll also need to delete or update the existing spbm unit test.  \r\n\r\nWhat about the extra stuff in `Dot1Q` (aliastypes, answers, default_payload_class, extractpadding, and mysummary) ?  Does any of that need to be transferred over to `Dot1AH`?",
      "> What about the extra stuff in Dot1Q (aliastypes, answers, default_payload_class, extractpadding, and mysummary) \r\n\r\n`answers` and `mysummary` sure. The others I don't think a necessary.",
      "Got it, makes sense.  I suppose `ETHER_TYPES[0x88e7] = '802_AH'` should probably also be adjusted to `802_1AH`, and possibly same thing with the existing `802_AD` which @dpward noticed earlier.  Is there anything else that needs to be done with this so it's ready for merging?"
    ],
    "commit_messages": [
      "Implement 802.1ah I-Tag for PBB MAC-in-MAC encapsulation (#4009)\n\n* Implement 802.1ah I-tag for PBB mac-in-mac encapsulation\r\n\r\nSigned-off-by: Alex Forencich <alex@alexforencich.com>\r\n\r\n* Add unit tests for 802.1Q\r\n\r\nSigned-off-by: Alex Forencich <alex@alexforencich.com>\r\n\r\n* Remove SPBM contrib\r\n\r\n* Fix some ETHER_TYPES\r\n\r\n---------\r\n\r\nSigned-off-by: Alex Forencich <alex@alexforencich.com>\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac01a88c0a76e0a515bb",
    "number": 4007,
    "body": "NetBIOS names encoded using non-UTF-8 encodings can't be decoded without specifying them explicitly (and for that to work they have to be inferred based on bytes). It's kind of possible but instead of guessing encodings `is_request` uses raw question names and `server_name` is converted to bytes instead. To make it possible to spoof all sorts of hosts NBNS_am also accepts bytes as server_names directly (but the patch is backward-compatible with the previous versions accepting strings only). Empty strings and Nones are still equivalent and keep working too.\r\n\r\nFixes:\r\n```python\r\n  File \"scapy/ansmachine.py\", line 57, in <lambda>\r\n  File \"scapy/ansmachine.py\", line 211, in __call__\r\n  File \"scapy/ansmachine.py\", line 217, in sniff\r\n  File \"scapy/sendrecv.py\", line 1311, in sniff\r\n  File \"scapy/sendrecv.py\", line 1254, in _run\r\n  File \"scapy/sessions.py\", line 109, in on_packet_received\r\n  File \"scapy/ansmachine.py\", line 167, in reply\r\n  File \"scapy/layers/netbios.py\", line 381, in is_request\r\n    req[NBNSQueryRequest].QUESTION_NAME.decode().strip() ==\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 0: invalid continuation byte\r\n```",
    "head_branch": "netbios-answering-machine",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4007?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4007](https://app.codecov.io/gh/secdev/scapy/pull/4007?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (761c993) into [master](https://app.codecov.io/gh/secdev/scapy/commit/9d81d48812a5adb4e35bb9672a1a7fba9ec94a2c?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9d81d48) will **increase** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4007      +/-   ##\n==========================================\n+ Coverage   81.92%   81.94%   +0.01%     \n==========================================\n  Files         328      328              \n  Lines       75404    75405       +1     \n==========================================\n+ Hits        61774    61787      +13     \n+ Misses      13630    13618      -12     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4007?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/netbios.py](https://app.codecov.io/gh/secdev/scapy/pull/4007?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL25ldGJpb3MucHk=) | `92.85% <100.00%> (+9.97%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4007/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Tolerate non-UTF-8 NetBIOS names in NetBIOS answering machines (#4007)\n\nNetBIOS names encoded using non-UTF-8 encodings can't be\r\ndecoded without specifying them explicitly (and for that to work they\r\nhave to be inferred based on bytes). It's kind of possible but instead\r\nof guessing encodings `is_request` uses raw question names and `server_name` is\r\nconverted to bytes instead. To make it possible to spoof all sorts of\r\nhosts NBNS_am also accepts bytes as server_names directly (but the patch is\r\nbackward-compatible with the previous versions accepting strings only).\r\nEmpty strings and Nones are still equivalent and keep working too.\r\n\r\nFixes:\r\n```\r\n  File \"scapy/ansmachine.py\", line 57, in <lambda>\r\n  File \"scapy/ansmachine.py\", line 211, in __call__\r\n  File \"scapy/ansmachine.py\", line 217, in sniff\r\n  File \"scapy/sendrecv.py\", line 1311, in sniff\r\n  File \"scapy/sendrecv.py\", line 1254, in _run\r\n  File \"scapy/sessions.py\", line 109, in on_packet_received\r\n  File \"scapy/ansmachine.py\", line 167, in reply\r\n  File \"scapy/layers/netbios.py\", line 381, in is_request\r\n    req[NBNSQueryRequest].QUESTION_NAME.decode().strip() ==\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 0: invalid continuation byte\r\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac02a88c0a76e0a515bc",
    "number": 4004,
    "body": "to prevent .command() from producing invalid commands containing something like `<Flag 15 ...>`.\r\n\r\nWhen flag fields are embedded into other fields they can't be recognized by looking at their type without following the \"fld\" chain. Their values are always FlagValues though so this check can be used instead.\r\n\r\nFixes:\r\n```python\r\np = CondFlagsTest(b\"\\x00\\x0f\")\r\nassert p == eval(p.command())\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"<string>\", line 1\r\n    CondFlagsTest(b=0, f=<Flag 15 (????)>)\r\n                         ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nIt's a follow-up to a0fd8688dc405799b676e21d7a0741512ad9aca1\r\n",
    "head_branch": "cond-flags-field",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4004?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4004](https://app.codecov.io/gh/secdev/scapy/pull/4004?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2d00100) into [master](https://app.codecov.io/gh/secdev/scapy/commit/047be325fe7b67fc05287632e7b14bc9e5d6701f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (047be32) will **decrease** coverage by `0.02%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4004      +/-   ##\n==========================================\n- Coverage   81.93%   81.91%   -0.02%     \n==========================================\n  Files         328      328              \n  Lines       75404    75404              \n==========================================\n- Hits        61783    61770      -13     \n- Misses      13621    13634      +13     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4004?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/packet.py](https://app.codecov.io/gh/secdev/scapy/pull/4004?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `83.39% <100.00%> (+0.21%)` | :arrow_up: |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4004/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Look for flag values instead of flag fields (#4004)\n\nto prevent .command() from producing invalid commands containing\r\nsomething like `<Flag 15 ...>`.\r\n\r\nWhen flag fields are embedded into other fields they can't be\r\nrecognized by looking at their type without following the \"fld\" chain.\r\nTheir values are always FlagValues though so this check can be used\r\ninstead.\r\n\r\nFixes:\r\n```\r\np = CondFlagsTest(b\"\\x00\\x0f\")\r\nassert p == eval(p.command())\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"<string>\", line 1\r\n    CondFlagsTest(b=0, f=<Flag 15 (????)>)\r\n                         ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nIt's a follow-up to a0fd8688dc405799b676e21d7a0741512ad9aca1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac02a88c0a76e0a515bd",
    "number": 4003,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [X] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThis PR adds some additional HCI command and event types. With these additional commands and events, it is possible to create a full Bluetooth Classic connection with an endpoint. For reference, these are section numbers in Volume 4, Part E of the Bluetooth 5.3 specification where these types are defined: 7.1.5, 7.1.10, 7.1.15, 7.1.16, 7.1.19\r\n",
    "head_branch": "hci-packets",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4003?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4003](https://app.codecov.io/gh/secdev/scapy/pull/4003?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (61fb9ff) into [master](https://app.codecov.io/gh/secdev/scapy/commit/1fb14adfc16f84ac3d891ae7b1b63111a3427582?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1fb14ad) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #4003   +/-   ##\n=======================================\n  Coverage   81.94%   81.94%           \n=======================================\n  Files         328      328           \n  Lines       75470    75498   +28     \n=======================================\n+ Hits        61843    61866   +23     \n- Misses      13627    13632    +5     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4003?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://app.codecov.io/gh/secdev/scapy/pull/4003?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `86.71% <100.00%> (+0.51%)` | :arrow_up: |\n\n... and [4 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4003/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "This is ready for review, can someone kick off the required workflows?\r\n\r\nI'm not sure why test coverage decreased 2.6%, my added code should have 100% coverage: https://app.codecov.io/gh/secdev/scapy/pull/4003",
      "Ping @guedou or @p-l-, can I get a review for this? ",
      "@gpotter2 I added some more tests, can you take another look?",
      "Hey @gsingh93 can you rebase against current master? That should fix the failing test.",
      "@p-l- done",
      "@gsingh93 perfect. Now @gpotter2 is it OK on your side (since you had requested changes)?",
      "Thank you @gsingh93!"
    ],
    "commit_messages": [
      "Add more HCI command and event packets (#4003)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac03a88c0a76e0a515be",
    "number": 4002,
    "body": "As a testcase, add a decrypted CREATE_CHILD_SA request for an ESP child sa, which contains a REKEY_SA Notify payload.",
    "head_branch": "fix-notify-length",
    "is_a_fork": true,
    "comments": [
      "# Example\r\n\r\nThe following example shows how the decrypted CREATE_CHILD_SA request is dissected incorrectly on master and how it is dissected with the change in this pull request:\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nfrom scapy.all import *\r\nfrom scapy.contrib.ikev2 import *\r\n\r\nimport binascii\r\n\r\ndecrypted_frame = binascii.unhexlify(''.join(\"\"\"\r\n00 50 56 99 bf d5 00 50  56 99 69 93 08 00 45 00\r\n01 38 60 32 40 00 40 11  c1 0f 0a 05 02 36 0a 05\r\n02 34 b8 99 11 94 01 24  19 a9 00 00 00 00 46 b3\r\nf6 88 4d 37 5f 9a f5 38  82 35 ea 87 5e 8a 29 20\r\n24 00 00 00 00 00 00 00  01 18            \r\n\r\n21 00 00 0c 03 04 40 09  5f c7 ff 5a 28 00 00 2c\r\n00 00 00 28 01 03 04 03  6b 21 88 20 03 00 00 0c\r\n01 00 00 14 80 0e 00 80  03 00 00 08 04 00 00 1c\r\n00 00 00 08 05 00 00 00  22 00 00 2c ea 7e 88 57\r\n4a 36 64 cd 67 e3 3c 42  46 66 59 4d df 70 25 03\r\nb2 00 a3 3f 87 82 f2 3c  94 c0 60 0e ae 7e d9 50\r\nd7 67 e9 6e 2c 00 00 48  00 1c 00 00 8e 15 b1 f4\r\n9a cc 04 ff 12 e3 2f bc  3a f0 57 14 81 f3 b9 6c\r\n21 1a f7 36 97 6d c2 23  80 74 ef 75 59 d1 99 65\r\n5a a5 80 00 87 4a bf 1f  13 f7 e1 6f de 34 80 94\r\n28 1c 93 cb 5a ee 30 24  d9 3e b9 55 2d 00 00 18\r\n01 00 00 00 07 00 00 10  00 00 ff ff c0 a8 e1 0b\r\nc0 a8 e1 0b 00 00 00 18  01 00 00 00 07 00 00 10\r\n00 00 ff ff c0 a8 e1 00  c0 a8 e1 ff            \r\n\"\"\".split()))\r\n\r\nEther(decrypted_frame)['IKEv2'].show()\r\n```\r\n\r\n### Broken (master)\r\n\r\n```\r\n###[ IKEv2 ]### \r\n  init_SPI  = 46b3f6884d375f9a\r\n  resp_SPI  = f5388235ea875e8a\r\n  next_payload= Notify\r\n  version   = 0x20\r\n  exch_type = CREATE_CHILD_SA\r\n  flags     = \r\n  id        = 0\r\n  length    = 280\r\n###[ IKEv2 Notify ]### \r\n     next_payload= SA\r\n     flags     = \r\n     length    = 12\r\n     proto     = ESP\r\n     SPIsize   = 4\r\n     type      = REKEY_SA\r\n     SPI       = 5fc7ff5a\r\n     notify    = 2800002c\r\n###[ IKEv2 SA ]### \r\n        next_payload= None\r\n        flags     = \r\n        length    = 40\r\n        \\prop      \\\r\n         |###[ IKEv2 Proposal ]### \r\n         |  next_payload= 1\r\n         |  flags     = critical+?\r\n         |  length    = 1027\r\n         |  proposal  = 107\r\n         |  proto     = 33\r\n         |  SPIsize   = 136\r\n         |  trans_nb  = 32\r\n         |  SPI       = 0300000c01000014800e0080030000080400001c0000000805000000\r\n         |  \\trans     \\\r\n         |   |###[ Raw ]### \r\n         |   |  load      = ''\r\n###[ Raw ]### \r\n           load      = '\"\\x00\\x00,\\\\xea~\\\\x88WJ6d\\\\xcdg\\\\xe3<BFfYM\\\\xdfp%\\x03\\\\xb2\\x00\\\\xa3?\\\\x87\\\\x82\\\\xf2<\\\\x94\\\\xc0`\\x0e\\\\xae~\\\\xd9P\\\\xd7g\\\\xe9n,\\x00\\x00H\\x00\\x1c\\x00\\x00\\\\x8e\\x15\\\\xb1\\\\xf4\\\\x9a\\\\xcc\\x04\\\\xff\\x12\\\\xe3/\\\\xbc:\\\\xf0W\\x14\\\\x81\\\\xf3\\\\xb9l!\\x1a\\\\xf76\\\\x97m\\\\xc2#\\\\x80t\\\\xefuYљeZ\\\\xa5\\\\x80\\x00\\\\x87J\\\\xbf\\x1f\\x13\\\\xf7\\\\xe1o\\\\xde4\\\\x80\\\\x94(\\x1c\\\\x93\\\\xcbZ\\\\xee0$\\\\xd9>\\\\xb9U-\\x00\\x00\\x18\\x01\\x00\\x00\\x00\\x07\\x00\\x00\\x10\\x00\\x00\\\\xff\\\\xff\\\\xc0\\\\xa8\\\\xe1\\x0b\\\\xc0\\\\xa8\\\\xe1\\x0b\\x00\\x00\\x00\\x18\\x01\\x00\\x00\\x00\\x07\\x00\\x00\\x10\\x00\\x00\\\\xff\\\\xff\\\\xc0\\\\xa8\\\\xe1\\x00\\\\xc0\\\\xa8\\\\xe1\\\\xff'\r\n```\r\n\r\n\r\n\r\n### Fixed (this pull request)\r\n\r\n```\r\n###[ IKEv2 ]### \r\n  init_SPI  = 46b3f6884d375f9a\r\n  resp_SPI  = f5388235ea875e8a\r\n  next_payload= Notify\r\n  version   = 0x20\r\n  exch_type = CREATE_CHILD_SA\r\n  flags     = \r\n  id        = 0\r\n  length    = 280\r\n###[ IKEv2 Notify ]### \r\n     next_payload= SA\r\n     flags     = \r\n     length    = 12\r\n     proto     = ESP\r\n     SPIsize   = 4\r\n     type      = REKEY_SA\r\n     SPI       = 5fc7ff5a\r\n     notify    = ###[ IKEv2 SA ]### \r\n        next_payload= Nonce\r\n        flags     = \r\n        length    = 44\r\n        \\prop      \\\r\n         |###[ IKEv2 Proposal ]### \r\n         |  next_payload= None\r\n         |  flags     = \r\n         |  length    = 40\r\n         |  proposal  = 1\r\n         |  proto     = ESP\r\n         |  SPIsize   = 4\r\n         |  trans_nb  = 3\r\n         |  SPI       = 6b218820\r\n         |  \\trans     \\\r\n         |   |###[ IKEv2 Transform ]### \r\n         |   |  next_payload= Transform\r\n         |   |  flags     = \r\n         |   |  length    = 12\r\n         |   |  transform_type= Encryption\r\n         |   |  res2      = 0\r\n         |   |  transform_id= AES-GCM-16ICV\r\n         |   |  key_length= 128\r\n         |   |###[ IKEv2 Transform ]### \r\n         |   |     next_payload= Transform\r\n         |   |     flags     = \r\n         |   |     length    = 8\r\n         |   |     transform_type= GroupDesc\r\n         |   |     res2      = 0\r\n         |   |     transform_id= brainpoolP256r1gr\r\n         |   |###[ IKEv2 Transform ]### \r\n         |   |        next_payload= None\r\n         |   |        flags     = \r\n         |   |        length    = 8\r\n         |   |        transform_type= Extended Sequence Number\r\n         |   |        res2      = 0\r\n         |   |        transform_id= No ESN\r\n###[ IKEv2 Nonce ]### \r\n           next_payload= KE\r\n           flags     = \r\n           length    = 44\r\n           nonce     = ea7e88574a3664cd67e33c424666594ddf702503b200a33f8782f23c94c0600eae7ed950d767e96e\r\n###[ IKEv2 Key Exchange ]### \r\n              next_payload= TSi\r\n              flags     = \r\n              length    = 72\r\n              group     = brainpoolP256r1gr\r\n              res2      = 0\r\n              ke        = 8e15b1f49acc04ff12e32fbc3af0571481f3b96c211af736976dc2238074ef7559d199655aa58000874abf1f13f7e16fde348094281c93cb5aee3024d93eb955\r\n###[ IKEv2 Traffic Selector - Initiator ]### \r\n                 next_payload= TSr\r\n                 flags     = \r\n                 length    = 24\r\n                 number_of_TSs= 1\r\n                 res2      = 0x0\r\n                 \\traffic_selector\\\r\n                  |###[ IKEv2 IPv4 Traffic Selector ]### \r\n                  |  TS_type   = TS_IPV4_ADDR_RANGE\r\n                  |  IP_protocol_ID= All protocols\r\n                  |  length    = 16\r\n                  |  start_port= 0\r\n                  |  end_port  = 65535\r\n                  |  starting_address_v4= 192.168.225.11\r\n                  |  ending_address_v4= 192.168.225.11\r\n###[ IKEv2 Traffic Selector - Responder ]### \r\n                    next_payload= None\r\n                    flags     = \r\n                    length    = 24\r\n                    number_of_TSs= 1\r\n                    res2      = 0x0\r\n                    \\traffic_selector\\\r\n                     |###[ IKEv2 IPv4 Traffic Selector ]### \r\n                     |  TS_type   = TS_IPV4_ADDR_RANGE\r\n                     |  IP_protocol_ID= All protocols\r\n                     |  length    = 16\r\n                     |  start_port= 0\r\n                     |  end_port  = 65535\r\n                     |  starting_address_v4= 192.168.225.0\r\n                     |  ending_address_v4= 192.168.225.255\r\n\r\n```\r\n\r\n\r\n### TShark\r\n\r\nHere is the TShark dump of the original capture  (with decryption secrets available)\r\n\r\n**tshark -r CREATE_CHILD_SA.pcapng -V -x**\r\n\r\n```\r\nFrame 1: 326 bytes on wire (2608 bits), 326 bytes captured (2608 bits) on interface eth_ext, id 2\r\n    Section number: 1\r\n    Interface id: 2 (eth_ext)\r\n        Interface name: eth_ext\r\n    Encapsulation type: Ethernet (1)\r\n    Arrival Time: May  2, 2023 17:41:42.378369439 CEST\r\n    [Time shift for this packet: 0.000000000 seconds]\r\n    Epoch Time: 1683042102.378369439 seconds\r\n    [Time delta from previous captured frame: 0.000000000 seconds]\r\n    [Time delta from previous displayed frame: 0.000000000 seconds]\r\n    [Time since reference or first frame: 0.000000000 seconds]\r\n    Frame Number: 1\r\n    Frame Length: 326 bytes (2608 bits)\r\n    Capture Length: 326 bytes (2608 bits)\r\n    [Frame is marked: False]\r\n    [Frame is ignored: False]\r\n    [Protocols in frame: eth:ethertype:ip:udp:udpencap:isakmp]\r\nEthernet II, Src: VMware_99:69:93 (00:50:56:99:69:93), Dst: VMware_99:bf:d5 (00:50:56:99:bf:d5)\r\n    Destination: VMware_99:bf:d5 (00:50:56:99:bf:d5)\r\n        Address: VMware_99:bf:d5 (00:50:56:99:bf:d5)\r\n        .... ..0. .... .... .... .... = LG bit: Globally unique address (factory default)\r\n        .... ...0 .... .... .... .... = IG bit: Individual address (unicast)\r\n    Source: VMware_99:69:93 (00:50:56:99:69:93)\r\n        Address: VMware_99:69:93 (00:50:56:99:69:93)\r\n        .... ..0. .... .... .... .... = LG bit: Globally unique address (factory default)\r\n        .... ...0 .... .... .... .... = IG bit: Individual address (unicast)\r\n    Type: IPv4 (0x0800)\r\nInternet Protocol Version 4, Src: 10.5.2.54, Dst: 10.5.2.52\r\n    0100 .... = Version: 4\r\n    .... 0101 = Header Length: 20 bytes (5)\r\n    Differentiated Services Field: 0x00 (DSCP: CS0, ECN: Not-ECT)\r\n        0000 00.. = Differentiated Services Codepoint: Default (0)\r\n        .... ..00 = Explicit Congestion Notification: Not ECN-Capable Transport (0)\r\n    Total Length: 312\r\n    Identification: 0x6032 (24626)\r\n    010. .... = Flags: 0x2, Don't fragment\r\n        0... .... = Reserved bit: Not set\r\n        .1.. .... = Don't fragment: Set\r\n        ..0. .... = More fragments: Not set\r\n    ...0 0000 0000 0000 = Fragment Offset: 0\r\n    Time to Live: 64\r\n    Protocol: UDP (17)\r\n    Header Checksum: 0xc10f [validation disabled]\r\n    [Header checksum status: Unverified]\r\n    Source Address: 10.5.2.54\r\n    Destination Address: 10.5.2.52\r\nUser Datagram Protocol, Src Port: 47257, Dst Port: 4500\r\n    Source Port: 47257\r\n    Destination Port: 4500\r\n    Length: 292\r\n    Checksum: 0x19a9 [unverified]\r\n    [Checksum Status: Unverified]\r\n    [Stream index: 0]\r\n    [Timestamps]\r\n        [Time since first frame: 0.000000000 seconds]\r\n        [Time since previous frame: 0.000000000 seconds]\r\n    UDP payload (284 bytes)\r\nUDP Encapsulation of IPsec Packets\r\n    Non-ESP Marker\r\nInternet Security Association and Key Management Protocol\r\n    Initiator SPI: 46b3f6884d375f9a\r\n    Responder SPI: f5388235ea875e8a\r\n    Next payload: Encrypted and Authenticated (46)\r\n    Version: 2.0\r\n        0010 .... = MjVer: 0x2\r\n        .... 0000 = MnVer: 0x0\r\n    Exchange type: CREATE_CHILD_SA (36)\r\n    Flags: 0x00 (Responder, No higher version, Request)\r\n        .... 0... = Initiator: Responder\r\n        ...0 .... = Version: No higher version\r\n        ..0. .... = Response: Request\r\n    Message ID: 0x00000000\r\n    Length: 280\r\n    Payload: Encrypted and Authenticated (46)\r\n        Next payload: Notify (41)\r\n        0... .... = Critical Bit: Not critical\r\n        .000 0000 = Reserved: 0x00\r\n        Payload length: 252\r\n        Initialization Vector: 4353b6d55744ae42 (8 bytes)\r\n        Encrypted Data (224 bytes) <AES-GCM-256 with 16 octet ICV [RFC5282]>\r\n        Decrypted Data (224 bytes)\r\n            Contained Data (220 bytes)\r\n                Payload: Notify (41) - REKEY_SA\r\n                    Next payload: Security Association (33)\r\n                    0... .... = Critical Bit: Not critical\r\n                    .000 0000 = Reserved: 0x00\r\n                    Payload length: 12\r\n                    Protocol ID: ESP (3)\r\n                    SPI Size: 4\r\n                    Notify Message Type: REKEY_SA (16393)\r\n                    SPI: 5fc7ff5a\r\n                    Notification DATA: <MISSING>\r\n                Payload: Security Association (33)\r\n                    Next payload: Nonce (40)\r\n                    0... .... = Critical Bit: Not critical\r\n                    .000 0000 = Reserved: 0x00\r\n                    Payload length: 44\r\n                    Payload: Proposal (2) # 1\r\n                        Next payload: NONE / No Next Payload  (0)\r\n                        Reserved: 00\r\n                        Payload length: 40\r\n                        Proposal number: 1\r\n                        Protocol ID: ESP (3)\r\n                        SPI Size: 4\r\n                        Proposal transforms: 3\r\n                        SPI: 6b218820\r\n                        Payload: Transform (3)\r\n                            Next payload: Transform (3)\r\n                            Reserved: 00\r\n                            Payload length: 12\r\n                            Transform Type: Encryption Algorithm (ENCR) (1)\r\n                            Reserved: 00\r\n                            Transform ID (ENCR): AES-GCM with a 16 octet ICV (20)\r\n                            Transform Attribute (t=14,l=2): Key Length: 128\r\n                                1... .... .... .... = Format: Type/Value (TV)\r\n                                Type: Key Length (14)\r\n                                Value: 0080\r\n                                Key Length: 128\r\n                        Payload: Transform (3)\r\n                            Next payload: Transform (3)\r\n                            Reserved: 00\r\n                            Payload length: 8\r\n                            Transform Type: Diffie-Hellman Group (D-H) (4)\r\n                            Reserved: 00\r\n                            Transform ID (D-H): 256-bit Brainpool ECP group (28)\r\n                        Payload: Transform (3)\r\n                            Next payload: NONE / No Next Payload  (0)\r\n                            Reserved: 00\r\n                            Payload length: 8\r\n                            Transform Type: Extended Sequence Numbers (ESN) (5)\r\n                            Reserved: 00\r\n                            Transform ID (ESN): No Extended Sequence Numbers (0)\r\n                Payload: Nonce (40)\r\n                    Next payload: Key Exchange (34)\r\n                    0... .... = Critical Bit: Not critical\r\n                    .000 0000 = Reserved: 0x00\r\n                    Payload length: 44\r\n                    Nonce DATA: ea7e88574a3664cd67e33c424666594ddf702503b200a33f8782f23c94c0600eae7ed950…\r\n                Payload: Key Exchange (34)\r\n                    Next payload: Traffic Selector - Initiator (44)\r\n                    0... .... = Critical Bit: Not critical\r\n                    .000 0000 = Reserved: 0x00\r\n                    Payload length: 72\r\n                    DH Group #: 256-bit Brainpool ECP group (28)\r\n                    Reserved: 0000\r\n                    Key Exchange Data: 8e15b1f49acc04ff12e32fbc3af0571481f3b96c211af736976dc2238074ef7559d19965…\r\n                Payload: Traffic Selector - Initiator (44) # 1\r\n                    Next payload: Traffic Selector - Responder (45)\r\n                    0... .... = Critical Bit: Not critical\r\n                    .000 0000 = Reserved: 0x00\r\n                    Payload length: 24\r\n                    Number of Traffic Selectors: 1\r\n                    Reserved: 000000\r\n                    Traffic Selector: TS_IPV4_ADDR_RANGE\r\n                        Traffic Selector Type: TS_IPV4_ADDR_RANGE (7)\r\n                        Protocol ID: Unused\r\n                        Selector Length: 16\r\n                        Start Port: 0\r\n                        End Port: 65535\r\n                        Starting Addr: 192.168.225.11\r\n                        Ending Addr: 192.168.225.11\r\n                Payload: Traffic Selector - Responder (45) # 1\r\n                    Next payload: NONE / No Next Payload  (0)\r\n                    0... .... = Critical Bit: Not critical\r\n                    .000 0000 = Reserved: 0x00\r\n                    Payload length: 24\r\n                    Number of Traffic Selectors: 1\r\n                    Reserved: 000000\r\n                    Traffic Selector: TS_IPV4_ADDR_RANGE\r\n                        Traffic Selector Type: TS_IPV4_ADDR_RANGE (7)\r\n                        Protocol ID: Unused\r\n                        Selector Length: 16\r\n                        Start Port: 0\r\n                        End Port: 65535\r\n                        Starting Addr: 192.168.225.0\r\n                        Ending Addr: 192.168.225.255\r\n            Padding (3 bytes)\r\n            Pad Length: 3\r\n        Integrity Checksum Data: 03d4e2681957b4e5bd0a95ed2beb5912 (16 bytes)[correct]\r\n\r\nFrame (326 bytes):\r\n0000  00 50 56 99 bf d5 00 50 56 99 69 93 08 00 45 00   .PV....PV.i...E.\r\n0010  01 38 60 32 40 00 40 11 c1 0f 0a 05 02 36 0a 05   .8`2@.@......6..\r\n0020  02 34 b8 99 11 94 01 24 19 a9 00 00 00 00 46 b3   .4.....$......F.\r\n0030  f6 88 4d 37 5f 9a f5 38 82 35 ea 87 5e 8a 2e 20   ..M7_..8.5..^.. \r\n0040  24 00 00 00 00 00 00 00 01 18 29 00 00 fc 43 53   $.........)...CS\r\n0050  b6 d5 57 44 ae 42 61 0b 18 83 1a 69 4b 67 60 5c   ..WD.Ba....iKg`\\\r\n0060  46 4f 78 8e 77 83 0d 3f 82 8d c2 0f 62 38 b4 0e   FOx.w..?....b8..\r\n0070  45 1f fc ba 6c 88 e3 9a f1 bb 8b df 47 8f b1 35   E...l.......G..5\r\n0080  22 42 15 c5 1d 76 64 a5 8f 6f ec 18 ad cd ad 2d   \"B...vd..o.....-\r\n0090  a2 c5 8e 47 1d 4c ce 76 dd de 43 5f 39 80 d6 b4   ...G.L.v..C_9...\r\n00a0  9c 02 71 b9 37 a7 a3 a2 cf 48 54 6a 47 6e 6f ea   ..q.7....HTjGno.\r\n00b0  60 c8 be e5 42 8b f8 f5 70 fa 7e fc e1 f9 f8 6d   `...B...p.~....m\r\n00c0  33 6e d6 ce e3 cb 7c dd 62 dc 6a 02 86 07 8b 60   3n....|.b.j....`\r\n00d0  05 57 bc 73 18 3d 1f 8f da 38 07 f8 6b 8e 1a 16   .W.s.=...8..k...\r\n00e0  91 b1 e6 54 b6 99 91 b2 e9 4d fa 6e c4 0a 17 53   ...T.....M.n...S\r\n00f0  38 a0 97 f1 81 7f 87 53 ab 66 c7 57 5e 1f 36 28   8......S.f.W^.6(\r\n0100  af e1 94 59 8b d3 aa 51 64 9f 28 a8 da 35 6a a2   ...Y...Qd.(..5j.\r\n0110  b8 43 e9 f7 c4 ff 2e 7a ef e3 b5 b5 44 29 ee 02   .C.....z....D)..\r\n0120  76 93 b3 33 ec 44 f8 43 1b a3 34 d4 2e 52 67 c7   v..3.D.C..4..Rg.\r\n0130  61 02 94 03 73 33 03 d4 e2 68 19 57 b4 e5 bd 0a   a...s3...h.W....\r\n0140  95 ed 2b eb 59 12                                 ..+.Y.\r\nDecrypted Data (224 bytes):\r\n0000  21 00 00 0c 03 04 40 09 5f c7 ff 5a 28 00 00 2c   !.....@._..Z(..,\r\n0010  00 00 00 28 01 03 04 03 6b 21 88 20 03 00 00 0c   ...(....k!. ....\r\n0020  01 00 00 14 80 0e 00 80 03 00 00 08 04 00 00 1c   ................\r\n0030  00 00 00 08 05 00 00 00 22 00 00 2c ea 7e 88 57   ........\"..,.~.W\r\n0040  4a 36 64 cd 67 e3 3c 42 46 66 59 4d df 70 25 03   J6d.g.<BFfYM.p%.\r\n0050  b2 00 a3 3f 87 82 f2 3c 94 c0 60 0e ae 7e d9 50   ...?...<..`..~.P\r\n0060  d7 67 e9 6e 2c 00 00 48 00 1c 00 00 8e 15 b1 f4   .g.n,..H........\r\n0070  9a cc 04 ff 12 e3 2f bc 3a f0 57 14 81 f3 b9 6c   ....../.:.W....l\r\n0080  21 1a f7 36 97 6d c2 23 80 74 ef 75 59 d1 99 65   !..6.m.#.t.uY..e\r\n0090  5a a5 80 00 87 4a bf 1f 13 f7 e1 6f de 34 80 94   Z....J.....o.4..\r\n00a0  28 1c 93 cb 5a ee 30 24 d9 3e b9 55 2d 00 00 18   (...Z.0$.>.U-...\r\n00b0  01 00 00 00 07 00 00 10 00 00 ff ff c0 a8 e1 0b   ................\r\n00c0  c0 a8 e1 0b 00 00 00 18 01 00 00 00 07 00 00 10   ................\r\n00d0  00 00 ff ff c0 a8 e1 00 c0 a8 e1 ff 01 02 03 03   ................\r\n```\r\n",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4002?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4002](https://app.codecov.io/gh/secdev/scapy/pull/4002?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d2e5d55) into [master](https://app.codecov.io/gh/secdev/scapy/commit/3da71cb275721292131a3ea5196bfa98883741f2?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3da71cb) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4002      +/-   ##\n==========================================\n- Coverage   81.94%   81.94%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75415    75415              \n==========================================\n- Hits        61799    61798       -1     \n- Misses      13616    13617       +1     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4002?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/ikev2.py](https://app.codecov.io/gh/secdev/scapy/pull/4002?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pa2V2Mi5weQ==) | `95.31% <ø> (ø)` | |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4002/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Sorry mister [codecov](https://github.com/apps/codecov) but your [statistics](https://app.codecov.io/gh/secdev/scapy/pull/4002/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) makes absolutely no sense and your verdict insults me, given all the work I put into testing a single line change ;-)\r\n\r\n![grafik](https://user-images.githubusercontent.com/11467854/235801207-9b00295a-c75d-437e-9062-817a0f1b876e.png)\r\n",
      "CI failures seem to be unrelated:\r\n\r\n```\r\n failed ED1D221E 300.00s AS resolvers\r\n ```",
      "ping?",
      "Last force-push was just a rebase on master."
    ],
    "commit_messages": [
      "IKEv2: fix length calculation for IKEv2_Notify payloads with SPI\n\nAs a testcase, add a decrypted CREATE_CHILD_SA request for an\nESP child sa, which contains a REKEY_SA Notify payload."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac04a88c0a76e0a515bf",
    "number": 4001,
    "body": "The servernames packet list field can contain \"Raw\" instances when server_name extenstions are malformed. The \"i2repr\" method doesn't expect that and ends up throwing exceptions when it can't find the \"servername\" attribute. This patch addresses that by removing the ServerListField class and relying on PacketListField doing the right thing. Another option would be to use something like\r\n```python\r\n[getattr(p, \"servername\", p) for p in x]\r\n```\r\nin the \"ServerListField.i2repr\" method but I think full server names along with their types and lengths are more helpful.\r\n\r\nFixes:\r\n```python\r\n  File \"scapy/packet.py\", line 563, in __repr__\r\n    val = f.i2repr(self, fval)\r\n          ^^^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/layers/tls/extensions.py\", line 180, in i2repr\r\n    res = [p.servername for p in x]\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/layers/tls/extensions.py\", line 180, in <listcomp>\r\n    res = [p.servername for p in x]\r\n           ^^^^^^^^^^^^\r\n  File \"scapy/packet.py\", line 467, in __getattr__\r\n    return self.payload.__getattr__(attr)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/packet.py\", line 465, in __getattr__\r\n    fld, v = self.getfield_and_val(attr)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/packet.py\", line 1788, in getfield_and_val\r\n    raise AttributeError(attr)\r\nAttributeError: servername\r\n```",
    "head_branch": "tls_servername_ext",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/4001?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4001](https://app.codecov.io/gh/secdev/scapy/pull/4001?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f9f2b19) into [master](https://app.codecov.io/gh/secdev/scapy/commit/047be325fe7b67fc05287632e7b14bc9e5d6701f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (047be32) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4001      +/-   ##\n==========================================\n- Coverage   81.93%   81.92%   -0.01%     \n==========================================\n  Files         328      328              \n  Lines       75404    75400       -4     \n==========================================\n- Hits        61783    61773      -10     \n- Misses      13621    13627       +6     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/4001?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/extensions.py](https://app.codecov.io/gh/secdev/scapy/pull/4001?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9leHRlbnNpb25zLnB5) | `84.22% <ø> (+0.42%)` | :arrow_up: |\n\n... and [8 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/4001/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "`TLS_Ext_PrettyPacketList` doesn't seem to be compatible with Raw instances conceptually. I'll try to figure out how to make them prettier. This PR just dumps bytes and calls it a day :-)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac05a88c0a76e0a515c0",
    "number": 4000,
    "body": "… PR fixes those warnings\r\n",
    "head_branch": "python_can_fix2",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/4000?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#4000](https://codecov.io/gh/secdev/scapy/pull/4000?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b083ccd) into [master](https://codecov.io/gh/secdev/scapy/commit/0f294fd6231baa5876624776aab9817bd6bc2b39?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0f294fd) will **decrease** coverage by `0.38%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #4000      +/-   ##\n==========================================\n- Coverage   81.92%   81.55%   -0.38%     \n==========================================\n  Files         328      328              \n  Lines       75403    75404       +1     \n==========================================\n- Hits        61776    61492     -284     \n- Misses      13627    13912     +285     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/4000?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cansocket\\_python\\_can.py](https://codecov.io/gh/secdev/scapy/pull/4000?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `88.66% <100.00%> (-1.27%)` | :arrow_down: |\n\n... and [16 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/4000/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Ready to merge, failure is unrelated"
    ],
    "commit_messages": [
      "Python-can changed it's interface and therefore raised warnings. This PR fixes those warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac06a88c0a76e0a515c1",
    "number": 3999,
    "body": "to make it possible for its derived classes to accept None too. For example ntp.TimeStampField has to be able to handle None to calculate timestamps when packets are assembled.\r\n\r\nFixes:\r\n```python\r\norig       : TimeStampField  (64 bits)           = Traceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"scapy/packet.py\", line 2379, in ls\r\n    print(\"%-15r\" % (getattr(obj, fname),), end=' ')\r\n                     ^^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/packet.py\", line 469, in __getattr__\r\n    return v if isinstance(v, RawVal) else fld.i2h(self, v)\r\n                                           ^^^^^^^^^^^^^^^^\r\n  File \"scapy/fields.py\", line 3209, in i2h\r\n    int_part = val >> self.frac_bits\r\n               ~~~~^^~~~~~~~~~~~~~~~\r\nTypeError: unsupported operand type(s) for >>: 'NoneType' and 'int'\r\n```\r\n\r\nAlso closes https://github.com/secdev/scapy/issues/3872",
    "head_branch": "ls-ntp",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3999?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3999](https://app.codecov.io/gh/secdev/scapy/pull/3999?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7a566e2) into [master](https://app.codecov.io/gh/secdev/scapy/commit/047be325fe7b67fc05287632e7b14bc9e5d6701f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (047be32) will **decrease** coverage by `0.02%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3999      +/-   ##\n==========================================\n- Coverage   81.93%   81.92%   -0.02%     \n==========================================\n  Files         328      328              \n  Lines       75404    75406       +2     \n==========================================\n- Hits        61783    61774       -9     \n- Misses      13621    13632      +11     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/3999?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/3999?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.96% <100.00%> (+<0.01%)` | :arrow_up: |\n\n... and [7 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3999/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Fix FixedPointField.i2h to accept None (#3999)\n\nto make it possible for its derived classes to accept None too.\r\nFor example ntp.TimeStampField has to be able to handle None to\r\ncalculate timestamps when packets are assembled.\r\n\r\nFixes:\r\n```sh\r\norig       : TimeStampField  (64 bits)           = Traceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"scapy/packet.py\", line 2379, in ls\r\n    print(\"%-15r\" % (getattr(obj, fname),), end=' ')\r\n                     ^^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/packet.py\", line 469, in __getattr__\r\n    return v if isinstance(v, RawVal) else fld.i2h(self, v)\r\n                                           ^^^^^^^^^^^^^^^^\r\n  File \"scapy/fields.py\", line 3209, in i2h\r\n    int_part = val >> self.frac_bits\r\n               ~~~~^^~~~~~~~~~~~~~~~\r\nTypeError: unsupported operand type(s) for >>: 'NoneType' and 'int'\r\n```\r\n\r\nAlso closes https://github.com/secdev/scapy/issues/3872"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac07a88c0a76e0a515c2",
    "number": 3998,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] The PR is complete\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nThis adds support for the RPL Option, defined in [RFC 6553](https://www.rfc-editor.org/rfc/rfc6553.html), which is used in the Hop-by-Hop options.\r\n",
    "head_branch": "rpl-hop-by-hop-option",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3998?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3998](https://app.codecov.io/gh/secdev/scapy/pull/3998?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4a85ff8) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5a2dbf08d76367ef8c392c9ff9c62674c9732d2f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5a2dbf0) will **decrease** coverage by `0.01%`.\n> Report is 1 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3998      +/-   ##\n==========================================\n- Coverage   81.95%   81.94%   -0.01%     \n==========================================\n  Files         331      331              \n  Lines       76647    76664      +17     \n==========================================\n+ Hits        62813    62823      +10     \n- Misses      13834    13841       +7     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/3998?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/3998?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.60% <100.00%> (+0.06%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3998/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "The RFC says that there are no sub-TLV's defined in that RFC.\r\n\r\n> The action taken by using the RPL Option and the potential set of\r\n   sub-TLVs carried within the RPL Option MUST be specified by the RFC\r\n   of the protocol that uses that option.  No sub-TLVs are defined in\r\n   this document.  A RPL device MUST skip over any unrecognized sub-TLVs\r\n   and attempt to process any additional sub-TLVs that may appear after.\r\n\r\nI hope this answers your question.",
      "Hi ! Would you mind rebasing against master? Thanks",
      "@thvdveld the linting issues will appear in the `Checks` tab. Locally, you can install https://tox.wiki/en/4.11.4/ and launch `tox flake8` to reproduce the CI behavior.",
      "@guedou Thank you!",
      "Very sorry for the delay !"
    ],
    "commit_messages": [
      "Add RPL Hop-by-Hop option (RFC 6553)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac08a88c0a76e0a515c3",
    "number": 3997,
    "body": "to make its repr work.\r\n\r\nIt's just one bit so FlagsField isn't suitable there.\r\n\r\nFixes:\r\n```python\r\n>>> repr(PIMv2HelloLANPruneDelayValue(t=1))\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"scapy/packet.py\", line 563, in __repr__\r\n    val = f.i2repr(self, fval)\r\n          ^^^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/fields.py\", line 3092, in i2repr\r\n    return \"None\" if x is None else str(self._fixup_val(x))\r\n                                    ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/fields.py\", line 2947, in __str__\r\n    return (\"+\" if self.multi else \"\").join(r)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: sequence item 0: expected str instance, int found\r\n```\r\n\r\nIt's a follow-up to 6e205b21608f1672a01ce2e186526fd117ac7397",
    "head_branch": "pim-repr",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3997?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3997](https://app.codecov.io/gh/secdev/scapy/pull/3997?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6b40351) into [master](https://app.codecov.io/gh/secdev/scapy/commit/047be325fe7b67fc05287632e7b14bc9e5d6701f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (047be32) will **decrease** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3997      +/-   ##\n==========================================\n- Coverage   81.93%   81.92%   -0.02%     \n==========================================\n  Files         328      328              \n  Lines       75404    75404              \n==========================================\n- Hits        61783    61774       -9     \n- Misses      13621    13630       +9     \n```\n\n| [Impacted Files](https://app.codecov.io/gh/secdev/scapy/pull/3997?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/pim.py](https://app.codecov.io/gh/secdev/scapy/pull/3997?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9waW0ucHk=) | `98.71% <ø> (ø)` | |\n\n... and [9 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3997/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Turn PIMv2HelloLANPruneDelayValue.t into BitField\n\nto make its repr work.\n\nIt's just one bit so FlagsField isn't suitable there.\n\nFixes:\n```\n>>> repr(PIMv2HelloLANPruneDelayValue(t=1))\nTraceback (most recent call last):\n  File \"<input>\", line 2, in <module>\n  File \"scapy/packet.py\", line 563, in __repr__\n    val = f.i2repr(self, fval)\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"scapy/fields.py\", line 3092, in i2repr\n    return \"None\" if x is None else str(self._fixup_val(x))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"scapy/fields.py\", line 2947, in __str__\n    return (\"+\" if self.multi else \"\").join(r)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: sequence item 0: expected str instance, int found\n```\n\nIt's a follow-up to 6e205b21608f1672a01ce2e186526fd117ac7397"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac08a88c0a76e0a515c4",
    "number": 3994,
    "body": "Add support for both Forward-TSN and I-Forward-TSN chunks.",
    "head_branch": "sctp_forward_tsn",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3994?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3994](https://codecov.io/gh/secdev/scapy/pull/3994?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b45801d) into [master](https://codecov.io/gh/secdev/scapy/commit/e65180e048ffdb0284a218b6e5ff6d090d4217bd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e65180e) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3994   +/-   ##\n=======================================\n  Coverage   81.87%   81.88%           \n=======================================\n  Files         326      326           \n  Lines       75427    75435    +8     \n=======================================\n+ Hits        61755    61768   +13     \n+ Misses      13672    13667    -5     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3994?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/sctp.py](https://codecov.io/gh/secdev/scapy/pull/3994?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NjdHAucHk=) | `95.81% <100.00%> (+0.18%)` | :arrow_up: |\n\n... and [7 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3994/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "layers/sctp.py: Add support for [I-]Forward-TSN chunks (#3994)\n\n* SCTP: add support for Forward-TSN chunk\r\n\r\nAdding support to forge Forward-TSN chunk and corresponding\r\nparameters based on RFC3758.\r\n\r\nExample usage:\r\n```\r\nSCTPChunkForwardTSN(new_tsn=7777, skips=\r\n                      [\r\n                        SCTPForwardSkip(stream_id=10, stream_seq=2),\r\n                        SCTPForwardSkip(stream_id=11, stream_seq=2)\r\n                      ])\r\n```\r\n\r\nSigned-off-by: Yuxuan Luo <luoyuxuan.carl@gmail.com>\r\n\r\n* SCTP: add support for I-Forward-TSN chunk\r\n\r\nAdding support to forge I-Forward-TSN chunk and corresponding\r\nparameters based on RFC8260.\r\n\r\nExample usage:\r\n```\r\nSCTPChunkIForwardTSN(new_tsn=7777, skips=\r\n                      [\r\n                        SCTPIForwardSkip(stream_id=1, message_id=1),\r\n                        SCTPIForwardSkip(stream_id=2, unordered=1, message_id=2)\r\n                      ])\r\n```\r\n\r\nSigned-off-by: Yuxuan Luo <luoyuxuan.carl@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Yuxuan Luo <luoyuxuan.carl@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac09a88c0a76e0a515c5",
    "number": 3993,
    "body": "to prevent `sprintf` from trying to parse them.\r\n\r\nFixes:\r\n```python\r\n  File \"scapy/sendrecv.py\", line 1439, in tshark\r\n  File \"scapy/sendrecv.py\", line 1311, in sniff\r\n  File \"scapy/sendrecv.py\", line 1254, in _run\r\n  File \"scapy/sessions.py\", line 109, in on_packet_received\r\n  File \"scapy/sendrecv.py\", line 1436, in _cb\r\n  File \"scapy/packet.py\", line 1645, in summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  [Previous line repeated 6 more times]\r\n  File \"scapy/packet.py\", line 1622, in _do_summary\r\n  File \"scapy/layers/lltd.py\", line 718, in mysummary\r\n    return (self.sprintf(\"Hostname: %r\" % self.hostname),\r\n  File \"scapy/packet.py\", line 1530, in sprintf\r\n    j = fmt[i + 1:].index(\"}\")\r\nValueError: substring not found\r\n```",
    "head_branch": "lltd-hostname-summary",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3993?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3993](https://codecov.io/gh/secdev/scapy/pull/3993?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cb1ce72) into [master](https://codecov.io/gh/secdev/scapy/commit/e65180e048ffdb0284a218b6e5ff6d090d4217bd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e65180e) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3993      +/-   ##\n==========================================\n- Coverage   81.87%   81.86%   -0.01%     \n==========================================\n  Files         326      326              \n  Lines       75427    75427              \n==========================================\n- Hits        61755    61751       -4     \n- Misses      13672    13676       +4     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3993?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/lltd.py](https://codecov.io/gh/secdev/scapy/pull/3993?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2xsdGQucHk=) | `87.09% <100.00%> (+0.46%)` | :arrow_up: |\n\n... and [5 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3993/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "No longer include LLTD hostnames in format strings (#3993)\n\nto prevent sprintf from trying to parse them.\r\n\r\nFixes:\r\n```\r\n  File \"scapy/sendrecv.py\", line 1439, in tshark\r\n  File \"scapy/sendrecv.py\", line 1311, in sniff\r\n  File \"scapy/sendrecv.py\", line 1254, in _run\r\n  File \"scapy/sessions.py\", line 109, in on_packet_received\r\n  File \"scapy/sendrecv.py\", line 1436, in _cb\r\n  File \"scapy/packet.py\", line 1645, in summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  [Previous line repeated 6 more times]\r\n  File \"scapy/packet.py\", line 1622, in _do_summary\r\n  File \"scapy/layers/lltd.py\", line 718, in mysummary\r\n    return (self.sprintf(\"Hostname: %r\" % self.hostname),\r\n  File \"scapy/packet.py\", line 1530, in sprintf\r\n    j = fmt[i + 1:].index(\"}\")\r\nValueError: substring not found\r\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac0aa88c0a76e0a515c6",
    "number": 3992,
    "body": null,
    "head_branch": "debug_msg_fix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3992?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3992](https://codecov.io/gh/secdev/scapy/pull/3992?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3ca37fa) into [master](https://codecov.io/gh/secdev/scapy/commit/19f86dd38ec43397e2108207ce5f1e85db2b5989?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (19f86dd) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3992      +/-   ##\n==========================================\n- Coverage   81.86%   81.86%   -0.01%     \n==========================================\n  Files         326      326              \n  Lines       75427    75427              \n==========================================\n- Hits        61750    61747       -3     \n- Misses      13677    13680       +3     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3992?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/scanner/enumerator.py](https://codecov.io/gh/secdev/scapy/pull/3992?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NjYW5uZXIvZW51bWVyYXRvci5weQ==) | `92.85% <ø> (-0.27%)` | :arrow_down: |\n\n... and [7 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3992/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@gpotter2 Can this PR get merged, please",
      "Sure ! sorry for the delay"
    ],
    "commit_messages": [
      "Fix debug message from AutomotiveScannerExecutor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac0ba88c0a76e0a515c7",
    "number": 3990,
    "body": "This is only a small PR in which the order of the creation of a list gets moved from inside a loop to the outside of it. This allows the usage of a generator for the extended_scan_range variable. Inside the loop the generator would be empty after the first iteration.\r\n",
    "head_branch": "allow_generator_usage_ext_scan_range",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3990?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3990](https://codecov.io/gh/secdev/scapy/pull/3990?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (74f9637) into [master](https://codecov.io/gh/secdev/scapy/commit/19f86dd38ec43397e2108207ce5f1e85db2b5989?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (19f86dd) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3990   +/-   ##\n=======================================\n  Coverage   81.86%   81.86%           \n=======================================\n  Files         326      326           \n  Lines       75427    75427           \n=======================================\n+ Hits        61750    61752    +2     \n+ Misses      13677    13675    -2     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3990?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/isotp/isotp\\_scanner.py](https://codecov.io/gh/secdev/scapy/pull/3990?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zY2FubmVyLnB5) | `88.60% <100.00%> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3990/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@gpotter2 Can this PR get merged, please"
    ],
    "commit_messages": [
      "change order of creation of list to allow usage of generators for extended_scan_range"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac0ca88c0a76e0a515c8",
    "number": 3989,
    "body": "`TimeStampField.i2repr` should convert EDecimals to strings by analogy with `FixedPointField.i2repr` to make it possible for the \"filtoffset\" packet list field to assemble its repr.\r\n\r\nFixes:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"scapy/packet.py\", line 563, in __repr__\r\n    val = f.i2repr(self, fval)\r\n          ^^^^^^^^^^^^^^^^^^^^\r\n  File \"scapy/fields.py\", line 2042, in i2repr\r\n    return \"[%s]\" % \", \".join(self.field.i2repr(pkt, v) for v in x)\r\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: sequence item 0: expected str instance, EDecimal found\r\n```",
    "head_branch": "repr-ntp",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3989?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3989](https://codecov.io/gh/secdev/scapy/pull/3989?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (7b8c18c) into [master](https://codecov.io/gh/secdev/scapy/commit/19f86dd38ec43397e2108207ce5f1e85db2b5989?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (19f86dd) will **not change** coverage.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3989   +/-   ##\n=======================================\n  Coverage   81.86%   81.86%           \n=======================================\n  Files         326      326           \n  Lines       75427    75427           \n=======================================\n  Hits        61750    61750           \n  Misses      13677    13677           \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3989?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ntp.py](https://codecov.io/gh/secdev/scapy/pull/3989?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250cC5weQ==) | `85.28% <100.00%> (+0.27%)` | :arrow_up: |\n\n... and [7 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3989/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the PR !\r\nOut of curiosity: how do you find all these bugs. Is it through fuzzing? They are pretty interesting",
      "@gpotter2 I happen to send (and receive) a lot of weird stuff like https://github.com/systemd/systemd/issues/26151, https://github.com/systemd/systemd/issues/25891, https://github.com/systemd/systemd/issues/25449, https://github.com/systemd/systemd/issues/23894, https://github.com/systemd/systemd/issues/23873 and all the scapy issues related to DHCP, DHCP6, LLMNR, neighbor discovery and so on came from those seed corpora so it's safe to say that they are found with fuzzing but scapy was fuzzed somewhat indirectly. I think I opened https://github.com/google/oss-fuzz/pull/9629 to start fuzzing scapy directly at the time.\r\n\r\nThe NETBIOS issue was found accidentally in the sense that `tshark` ran in the background and a Windows laptop using some CP* encoding woke up so I extended the scapy fuzz target a bit and that's where the other issues came from. There are some issues I haven't fixed yet (for example `Packet.command()` can't be used to rebuild packets if packets contain conditional flag fields) but I'm slowly working on it :-)"
    ],
    "commit_messages": [
      "Make repr(NTPInfoPeer) work\n\nTimeStampField.i2repr should convert EDecimals to strings by analogy\nwith FixedPointField.i2repr to make it possible for the \"filtoffset\"\npacket list field to assemble its repr.\n\nFixes:\n```\nTraceback (most recent call last):\n  File \"<input>\", line 2, in <module>\n  File \"scapy/packet.py\", line 563, in __repr__\n    val = f.i2repr(self, fval)\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"scapy/fields.py\", line 2042, in i2repr\n    return \"[%s]\" % \", \".join(self.field.i2repr(pkt, v) for v in x)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: sequence item 0: expected str instance, EDecimal found\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac0ca88c0a76e0a515c9",
    "number": 3988,
    "body": "Fixes:\r\n```python\r\n  File \"scapy/sendrecv.py\", line 1439, in tshark\r\n  File \"scapy/sendrecv.py\", line 1311, in sniff\r\n  File \"scapy/sendrecv.py\", line 1254, in _run\r\n  File \"scapy/sessions.py\", line 109, in on_packet_received\r\n  File \"scapy/sendrecv.py\", line 1436, in _cb\r\n  File \"scapy/packet.py\", line 1645, in summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  File \"scapy/packet.py\", line 1622, in _do_summary\r\n  File \"scapy/layers/llmnr.py\", line 63, in mysummary\r\n    self.qd.qname.decode(),\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 2: invalid start byte\r\n```\r\n\r\nIt's a follow-up to dd7a5c97d68c00d1d03ecf8ac27c6c7038525065",
    "head_branch": "llmnr-decode",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3988?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3988](https://codecov.io/gh/secdev/scapy/pull/3988?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5a3ac61) into [master](https://codecov.io/gh/secdev/scapy/commit/19f86dd38ec43397e2108207ce5f1e85db2b5989?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (19f86dd) will **increase** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3988      +/-   ##\n==========================================\n+ Coverage   81.86%   81.88%   +0.01%     \n==========================================\n  Files         326      326              \n  Lines       75427    75427              \n==========================================\n+ Hits        61750    61760      +10     \n+ Misses      13677    13667      -10     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3988?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/llmnr.py](https://codecov.io/gh/secdev/scapy/pull/3988?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2xsbW5yLnB5) | `97.50% <ø> (+10.00%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3988/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the pr !"
    ],
    "commit_messages": [
      "Tolerate decoding errors in LLMNR queries/responses\n\nFixes:\n```\n  File \"scapy/sendrecv.py\", line 1439, in tshark\n  File \"scapy/sendrecv.py\", line 1311, in sniff\n  File \"scapy/sendrecv.py\", line 1254, in _run\n  File \"scapy/sessions.py\", line 109, in on_packet_received\n  File \"scapy/sendrecv.py\", line 1436, in _cb\n  File \"scapy/packet.py\", line 1645, in summary\n  File \"scapy/packet.py\", line 1619, in _do_summary\n  File \"scapy/packet.py\", line 1619, in _do_summary\n  File \"scapy/packet.py\", line 1619, in _do_summary\n  File \"scapy/packet.py\", line 1622, in _do_summary\n  File \"scapy/layers/llmnr.py\", line 63, in mysummary\n    self.qd.qname.decode(),\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 2: invalid start byte\n```\n\nIt's a follow-up to dd7a5c97d68c00d1d03ecf8ac27c6c7038525065"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac0da88c0a76e0a515ca",
    "number": 3987,
    "body": "IFACES is obsolete (used to be windows-only). `conf.ifaces` is the new thing",
    "head_branch": "deboug",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3987?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3987](https://codecov.io/gh/secdev/scapy/pull/3987?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f9647b2) into [master](https://codecov.io/gh/secdev/scapy/commit/62c4bc369a75a45b0484bf43b41d96f30f6ea8f5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (62c4bc3) will **increase** coverage by `0.23%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3987      +/-   ##\n==========================================\n+ Coverage   81.63%   81.87%   +0.23%     \n==========================================\n  Files         326      326              \n  Lines       75427    75427              \n==========================================\n+ Hits        61574    61754     +180     \n+ Misses      13853    13673     -180     \n```\n\n[see 18 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3987/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Tests: use conf.ifaces instead of IFACES"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac0ea88c0a76e0a515cb",
    "number": 3986,
    "body": "to prevent `sprintf` from trying to parse them. `ICMPv6NDOptRDNSS.mysummary` was changed too even though special characters should never get past `inet_pton` and reach `sprintf` there.\r\n\r\nIt's a follow-up to f2a137c0388494318662b19f7082b492c7c22fca.\r\n\r\nFixes:\r\n```python\r\n  File \"scapy/sendrecv.py\", line 1439, in tshark\r\n  File \"scapy/sendrecv.py\", line 1311, in sniff\r\n  File \"scapy/sendrecv.py\", line 1254, in _run\r\n  File \"scapy/sessions.py\", line 109, in on_packet_received\r\n  File \"scapy/sendrecv.py\", line 1436, in _cb\r\n  File \"scapy/packet.py\", line 1645, in summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  File \"scapy/packet.py\", line 1619, in _do_summary\r\n  [Previous line repeated 2 more times]\r\n  File \"scapy/packet.py\", line 1622, in _do_summary\r\n  File \"scapy/layers/inet6.py\", line 2052, in mysummary\r\n  File \"scapy/packet.py\", line 1530, in sprintf\r\n    j = fmt[i + 1:].index(\"}\")\r\n        ^^^^^^^^^^^^^^^^^^^^^^\r\nValueError: substring not found\r\n```",
    "head_branch": "ra-dnssl-mysummary",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3986?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3986](https://codecov.io/gh/secdev/scapy/pull/3986?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (40b9975) into [master](https://codecov.io/gh/secdev/scapy/commit/8ae53f098098db444d6fa76fefdf5adbda08a368?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8ae53f0) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3986      +/-   ##\n==========================================\n- Coverage   81.68%   81.67%   -0.01%     \n==========================================\n  Files         326      326              \n  Lines       75406    75406              \n==========================================\n- Hits        61595    61589       -6     \n- Misses      13811    13817       +6     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3986?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://codecov.io/gh/secdev/scapy/pull/3986?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.36% <100.00%> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3986/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "No longer include DNSSLs in format strings\n\nto prevent sprintf from trying to parse them. ICMPv6NDOptRDNSS.mysummary\nwas changed too even though special characters should never get past\ninet_pton and reach sprintf there.\n\nIt's a follow-up to f2a137c0388494318662b19f7082b492c7c22fca.\n\nFixes:\n```\n  File \"scapy/sendrecv.py\", line 1439, in tshark\n  File \"scapy/sendrecv.py\", line 1311, in sniff\n  File \"scapy/sendrecv.py\", line 1254, in _run\n  File \"scapy/sessions.py\", line 109, in on_packet_received\n  File \"scapy/sendrecv.py\", line 1436, in _cb\n  File \"scapy/packet.py\", line 1645, in summary\n  File \"scapy/packet.py\", line 1619, in _do_summary\n  File \"scapy/packet.py\", line 1619, in _do_summary\n  File \"scapy/packet.py\", line 1619, in _do_summary\n  [Previous line repeated 2 more times]\n  File \"scapy/packet.py\", line 1622, in _do_summary\n  File \"scapy/layers/inet6.py\", line 2052, in mysummary\n  File \"scapy/packet.py\", line 1530, in sprintf\n    j = fmt[i + 1:].index(\"}\")\n        ^^^^^^^^^^^^^^^^^^^^^^\nValueError: substring not found\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac0fa88c0a76e0a515cc",
    "number": 3985,
    "body": "Looks like it was a typo because FlagsFields expect lists, strings or dicts to be passed to them.\r\n\r\nFixes:\r\n```python\r\nTraceback (most recent call last):\r\n  ...\r\n  File \"/home/vagrant/scapy-2/scapy/packet.py\", line 563, in __repr__\r\n    val = f.i2repr(self, fval)\r\n          ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/vagrant/scapy-2/scapy/fields.py\", line 3082, in i2repr\r\n    return \"None\" if x is None else str(self._fixup_val(x))\r\n                                    ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/vagrant/scapy-2/scapy/fields.py\", line 2931, in __str__\r\n    name = self.names[i]\r\n           ~~~~~~~~~~^^^\r\nTypeError: 'set' object is not subscriptable\r\n```\r\n\r\nIt's a follow-up to 76a88dacfcfed7308a316acd14136b5e6fb8ea52\r\n",
    "head_branch": "radiotap-flags-field",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3985?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3985](https://codecov.io/gh/secdev/scapy/pull/3985?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f12ca04) into [master](https://codecov.io/gh/secdev/scapy/commit/8ae53f098098db444d6fa76fefdf5adbda08a368?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8ae53f0) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3985      +/-   ##\n==========================================\n- Coverage   81.68%   81.67%   -0.01%     \n==========================================\n  Files         326      326              \n  Lines       75406    75406              \n==========================================\n- Hits        61595    61591       -4     \n- Misses      13811    13815       +4     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3985?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dot11.py](https://codecov.io/gh/secdev/scapy/pull/3985?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RvdDExLnB5) | `91.37% <100.00%> (ø)` | |\n\n... and [8 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3985/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Make repr(RadioTap) with the hemuou_per_user_known field work\n\nLooks like it was a typo because FlagsFields expect lists, strings or\ndicts to be passed to them.\n\nFixes:\n```\nTraceback (most recent call last):\n  ...\n  File \"/home/vagrant/scapy-2/scapy/packet.py\", line 563, in __repr__\n    val = f.i2repr(self, fval)\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/vagrant/scapy-2/scapy/fields.py\", line 3082, in i2repr\n    return \"None\" if x is None else str(self._fixup_val(x))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/vagrant/scapy-2/scapy/fields.py\", line 2931, in __str__\n    name = self.names[i]\n           ~~~~~~~~~~^^^\nTypeError: 'set' object is not subscriptable\n```\n\nIt's a follow-up to 76a88dacfcfed7308a316acd14136b5e6fb8ea52"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac10a88c0a76e0a515cd",
    "number": 3984,
    "body": "Some parsing is broken when the data is not byte-aligned. ",
    "head_branch": "unaligned",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3984?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3984](https://codecov.io/gh/secdev/scapy/pull/3984?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4040dd2) into [master](https://codecov.io/gh/secdev/scapy/commit/d36aaf697c5022f59c8ce00909ec37c2745ae85a?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d36aaf6) will **decrease** coverage by `0.23%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3984      +/-   ##\n==========================================\n- Coverage   81.67%   81.44%   -0.23%     \n==========================================\n  Files         326      326              \n  Lines       75397    75406       +9     \n==========================================\n- Hits        61581    61415     -166     \n- Misses      13816    13991     +175     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3984?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3984?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.95% <100.00%> (+0.02%)` | :arrow_up: |\n| [scapy/packet.py](https://codecov.io/gh/secdev/scapy/pull/3984?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `83.16% <100.00%> (+0.03%)` | :arrow_up: |\n\n... and [12 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3984/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks!"
    ],
    "commit_messages": [
      "fix parsing when data is unaligned (#3984)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac11a88c0a76e0a515ce",
    "number": 3983,
    "body": "FieldListField parsing is broken when the field is not byte-aligned. In the unit test included with this pull request is an example where the field is offset by 3 bits. In that case, self.field.getfield() returns a tuple which is then concatenated with bytes in the return statement. This pull request fixes that bug by checking whether the return value is a tuple and handling it properly.",
    "head_branch": "FLFUnaligned",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3983?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3983](https://codecov.io/gh/secdev/scapy/pull/3983?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (632c980) into [master](https://codecov.io/gh/secdev/scapy/commit/3381b98fc5259a626c803197f77f5770a08c5376?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3381b98) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3983      +/-   ##\n==========================================\n- Coverage   81.67%   81.67%   -0.01%     \n==========================================\n  Files         326      326              \n  Lines       75397    75400       +3     \n==========================================\n  Hits        61581    61581              \n- Misses      13816    13819       +3     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3983?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3983?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.94% <100.00%> (+0.01%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3983/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac11a88c0a76e0a515cf",
    "number": 3981,
    "body": "It should make it easier to run scapy with -Xdev -Werror without getting deprecation warnings like\r\n```sh\r\nDeprecationWarning: sci has been deprecated in favor of SCI since 2.4.4 !\r\n...\r\nDeprecationWarning: pn has been deprecated in favor of PN since 2.4.4 !\r\n```\r\n\r\nThe testsuite got updated too and\r\n```\r\npython3 -Xdev -Werror -m scapy.tools.UTscapy -P 'load_contrib(\"macsec\")' -t test/contrib/macsec.uts\r\n```\r\nis green.\r\n\r\nIt's a follow-up to d1fc7e3eb96083d09a18c66d26865bc4c2d089b1\r\n",
    "head_branch": "macsec-deprecated",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3981?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3981](https://codecov.io/gh/secdev/scapy/pull/3981?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8750b61) into [master](https://codecov.io/gh/secdev/scapy/commit/96bf3878809521bed8eb137e665daa8b55249c90?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (96bf387) will **increase** coverage by `1.67%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3981      +/-   ##\n==========================================\n+ Coverage   79.99%   81.67%   +1.67%     \n==========================================\n  Files         326      326              \n  Lines       75397    75397              \n==========================================\n+ Hits        60315    61579    +1264     \n+ Misses      15082    13818    -1264     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3981?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/macsec.py](https://codecov.io/gh/secdev/scapy/pull/3981?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9tYWNzZWMucHk=) | `95.17% <100.00%> (+4.13%)` | :arrow_up: |\n\n... and [40 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3981/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "No longer use deprecated MACsec fields (#3981)\n\nIt should make it easier to run scapy with -Xdev -Werror without getting\r\ndeprecation warnings like\r\n```sh\r\nDeprecationWarning: sci has been deprecated in favor of SCI since 2.4.4 !\r\n...\r\nDeprecationWarning: pn has been deprecated in favor of PN since 2.4.4 !\r\n```\r\n\r\nThe testsuite got updated too and\r\n```\r\npython3 -Xdev -Werror -m scapy.tools.UTscapy -P 'load_contrib(\"macsec\")' -t test/contrib/macsec.uts\r\n```\r\nis green.\r\n\r\nIt's a follow-up to d1fc7e3eb96083d09a18c66d26865bc4c2d089b1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac12a88c0a76e0a515d0",
    "number": 3979,
    "body": "fix https://github.com/secdev/scapy/issues/3891",
    "head_branch": "getiflist-win",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3979?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3979](https://codecov.io/gh/secdev/scapy/pull/3979?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (be27835) into [master](https://codecov.io/gh/secdev/scapy/commit/42115bf5493e6dd11630692f384a76d4475d1ba6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (42115bf) will **decrease** coverage by `0.24%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3979      +/-   ##\n==========================================\n- Coverage   81.66%   81.42%   -0.24%     \n==========================================\n  Files         326      326              \n  Lines       75395    75395              \n==========================================\n- Hits        61571    61394     -177     \n- Misses      13824    14001     +177     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3979?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3979?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `61.98% <100.00%> (-4.31%)` | :arrow_down: |\n\n... and [13 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3979/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Fix get_if_list on windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac13a88c0a76e0a515d1",
    "number": 3978,
    "body": "fix https://github.com/secdev/scapy/issues/3892",
    "head_branch": "wrpcapsink-kwargs",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3978?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3978](https://codecov.io/gh/secdev/scapy/pull/3978?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (02336d1) into [master](https://codecov.io/gh/secdev/scapy/commit/42115bf5493e6dd11630692f384a76d4475d1ba6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (42115bf) will **increase** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3978      +/-   ##\n==========================================\n+ Coverage   81.66%   81.67%   +0.01%     \n==========================================\n  Files         326      326              \n  Lines       75395    75396       +1     \n==========================================\n+ Hits        61571    61583      +12     \n+ Misses      13824    13813      -11     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3978?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/scapypipes.py](https://codecov.io/gh/secdev/scapy/pull/3978?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2NhcHlwaXBlcy5weQ==) | `83.00% <100.00%> (+0.05%)` | :arrow_up: |\n\n... and [8 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3978/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Pass kwargs to WrpcapSink"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac14a88c0a76e0a515d2",
    "number": 3977,
    "body": "fix https://github.com/secdev/scapy/issues/3964",
    "head_branch": "time_monotonic",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3977?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3977](https://codecov.io/gh/secdev/scapy/pull/3977?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (96a689c) into [master](https://codecov.io/gh/secdev/scapy/commit/42115bf5493e6dd11630692f384a76d4475d1ba6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (42115bf) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3977   +/-   ##\n=======================================\n  Coverage   81.66%   81.66%           \n=======================================\n  Files         326      326           \n  Lines       75395    75395           \n=======================================\n+ Hits        61571    61574    +3     \n+ Misses      13824    13821    -3     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3977?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/sendrecv.py](https://codecov.io/gh/secdev/scapy/pull/3977?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `87.50% <100.00%> (ø)` | |\n\n... and [4 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3977/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Use time.monotonic() in sndrcv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac15a88c0a76e0a515d3",
    "number": 3976,
    "body": "At first I wanted to replace `scapy.compat` in one go but that's way too much work. So for now:\r\n- replace `scapy.compat` stubs with `typing` when possible (keep the ones only available in 3.8, 3.9 and 3.11)\r\n- remove `lambda_tuple_converter` used for Python 2 compatibility",
    "head_branch": "typing",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3976](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c2e1a2d) into [master](https://codecov.io/gh/secdev/scapy/commit/19f86dd38ec43397e2108207ce5f1e85db2b5989?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (19f86dd) will **decrease** coverage by `0.30%`.\n> The diff coverage is `96.90%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3976      +/-   ##\n==========================================\n- Coverage   81.86%   81.57%   -0.30%     \n==========================================\n  Files         326      326              \n  Lines       75427    75381      -46     \n==========================================\n- Hits        61750    61493     -257     \n- Misses      13677    13888     +211     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/xcp/scanner.py](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3hjcC9zY2FubmVyLnB5) | `0.00% <0.00%> (-95.53%)` | :arrow_down: |\n| [scapy/tools/automotive/isotpscanner.py](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdG9vbHMvYXV0b21vdGl2ZS9pc290cHNjYW5uZXIucHk=) | `0.00% <0.00%> (-65.72%)` | :arrow_down: |\n| [scapy/config.py](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `82.75% <66.66%> (+0.03%)` | :arrow_up: |\n| [scapy/ansmachine.py](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYW5zbWFjaGluZS5weQ==) | `69.36% <100.00%> (ø)` | |\n| [scapy/arch/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9fX2luaXRfXy5weQ==) | `90.19% <100.00%> (ø)` | |\n| [scapy/arch/common.py](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9jb21tb24ucHk=) | `67.39% <100.00%> (ø)` | |\n| [scapy/arch/libpcap.py](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saWJwY2FwLnB5) | `74.35% <100.00%> (ø)` | |\n| [scapy/arch/linux.py](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saW51eC5weQ==) | `85.27% <100.00%> (ø)` | |\n| [scapy/arch/unix.py](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC91bml4LnB5) | `77.54% <100.00%> (ø)` | |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `65.98% <100.00%> (-0.32%)` | :arrow_down: |\n| ... and [68 more](https://codecov.io/gh/secdev/scapy/pull/3976?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n\n... and [4 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3976/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Hi @guedou @p-l-, feel free to review this when you have the time.\r\nCheers",
      "Thanks for this @gpotter2!"
    ],
    "commit_messages": [
      "Use the typing module (Python 3.7+) (#3976)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac16a88c0a76e0a515d4",
    "number": 3975,
    "body": "Fix a stupid mistake in ffdhe size computation on generation",
    "head_branch": "tls-ffdhe",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3975?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3975](https://codecov.io/gh/secdev/scapy/pull/3975?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0b4ddf2) into [master](https://codecov.io/gh/secdev/scapy/commit/42115bf5493e6dd11630692f384a76d4475d1ba6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (42115bf) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3975   +/-   ##\n=======================================\n  Coverage   81.66%   81.66%           \n=======================================\n  Files         326      326           \n  Lines       75395    75395           \n=======================================\n+ Hits        61571    61574    +3     \n+ Misses      13824    13821    -3     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3975?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/crypto/groups.py](https://codecov.io/gh/secdev/scapy/pull/3975?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vZ3JvdXBzLnB5) | `92.85% <100.00%> (ø)` | |\n\n... and [5 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3975/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Fix ffdhe creation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac17a88c0a76e0a515d5",
    "number": 3972,
    "body": null,
    "head_branch": "isotp_scan_json",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3972?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3972](https://codecov.io/gh/secdev/scapy/pull/3972?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2794120) into [master](https://codecov.io/gh/secdev/scapy/commit/cb619e534d6684c86fd2e00a90ce2b69a8f77ef1?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cb619e5) will **increase** coverage by `0.38%`.\n> The diff coverage is `77.77%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3972      +/-   ##\n==========================================\n+ Coverage   81.28%   81.66%   +0.38%     \n==========================================\n  Files         326      326              \n  Lines       75466    75483      +17     \n==========================================\n+ Hits        61342    61644     +302     \n+ Misses      14124    13839     -285     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3972?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/isotp/isotp\\_scanner.py](https://codecov.io/gh/secdev/scapy/pull/3972?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zY2FubmVyLnB5) | `88.60% <77.77%> (-1.18%)` | :arrow_down: |\n\n... and [18 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3972/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Add JSON output format for isotpscan"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac17a88c0a76e0a515d6",
    "number": 3971,
    "body": "Fixes:\r\n```\r\nFile scapy/scapy/sendrecv.py:1438, in tshark(*args, **kargs)\r\nFile scapy/scapy/sendrecv.py:1310, in sniff(*args, **kwargs)\r\nFile scapy/scapy/sendrecv.py:1253, in AsyncSniffer._run(self, count, store, offline, quiet, prn, lfilter, L2socket, timeout, opened_socket, stop_filter, iface, started_callback, session, session_kwargs, **karg)\r\nFile scapy/scapy/sessions.py:109, in DefaultSession.on_packet_received(self, pkt)\r\nFile scapy/scapy/sendrecv.py:1435, in tshark.<locals>._cb(pkt)\r\nFile scapy/scapy/packet.py:1637, in Packet.summary(self, intern)\r\nFile scapy/scapy/packet.py:1611, in Packet._do_summary(self)\r\nFile scapy/scapy/packet.py:1611, in Packet._do_summary(self)\r\n    [... skipping similar frames: Packet._do_summary at line 1611 (1 times)]\r\nFile scapy/scapy/packet.py:1611, in Packet._do_summary(self)\r\nFile scapy/scapy/packet.py:1614, in Packet._do_summary(self)\r\nFile scapy/scapy/layers/netbios.py:145, in NBNSQueryRequest.mysummary(self)\r\n    143 def mysummary(self):\r\n    144     return \"NBNSQueryRequest who has '\\\\\\\\%s'\" % (\r\n--> 145         self.QUESTION_NAME.strip().decode()\r\n    146     )\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte\r\n```\r\n\r\nIt's a follow-up to c17140a419e3e4496706faa1cb9753816a6c586b",
    "head_branch": "netbios-names",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3971?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3971](https://codecov.io/gh/secdev/scapy/pull/3971?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (252d672) into [master](https://codecov.io/gh/secdev/scapy/commit/ee7d0b47c8a53e98cb109add3eeaba66958b07c7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ee7d0b4) will **increase** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3971   +/-   ##\n=======================================\n  Coverage   81.66%   81.67%           \n=======================================\n  Files         326      326           \n  Lines       75395    75395           \n=======================================\n+ Hits        61571    61578    +7     \n+ Misses      13824    13817    -7     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3971?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/netbios.py](https://codecov.io/gh/secdev/scapy/pull/3971?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL25ldGJpb3MucHk=) | `82.88% <ø> (+3.60%)` | :arrow_up: |\n\n... and [6 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3971/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Tolerate decoding errors in NetBIOS names (#3971)\n\nFixes:\r\n```\r\nFile scapy/scapy/sendrecv.py:1438, in tshark(*args, **kargs)\r\nFile scapy/scapy/sendrecv.py:1310, in sniff(*args, **kwargs)\r\nFile scapy/scapy/sendrecv.py:1253, in AsyncSniffer._run(self, count, store, offline, quiet, prn, lfilter, L2socket, timeout, opened_socket, stop_filter, iface, started_callback, session, session_kwargs, **karg)\r\nFile scapy/scapy/sessions.py:109, in DefaultSession.on_packet_received(self, pkt)\r\nFile scapy/scapy/sendrecv.py:1435, in tshark.<locals>._cb(pkt)\r\nFile scapy/scapy/packet.py:1637, in Packet.summary(self, intern)\r\nFile scapy/scapy/packet.py:1611, in Packet._do_summary(self)\r\nFile scapy/scapy/packet.py:1611, in Packet._do_summary(self)\r\n    [... skipping similar frames: Packet._do_summary at line 1611 (1 times)]\r\nFile scapy/scapy/packet.py:1611, in Packet._do_summary(self)\r\nFile scapy/scapy/packet.py:1614, in Packet._do_summary(self)\r\nFile scapy/scapy/layers/netbios.py:145, in NBNSQueryRequest.mysummary(self)\r\n    143 def mysummary(self):\r\n    144     return \"NBNSQueryRequest who has '\\\\\\\\%s'\" % (\r\n--> 145         self.QUESTION_NAME.strip().decode()\r\n    146     )\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte\r\n```\r\n\r\nIt's a follow-up to c17140a419e3e4496706faa1cb9753816a6c586b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac18a88c0a76e0a515d7",
    "number": 3970,
    "body": "fragment was raising a ZeroDivisionError when given a frag size < 8. This is a regression, as versions older than 2.4.4 didn't have this problem. It was a side-effect of fixing fragment to support frag sizes that are not multiples of 8.\r\n\r\nThis commit simply tops up frag size to 8 if it's lower, as IP can't really handle fragments smaller than that anyway, due to the way the Fragment Offset field works.\r\n",
    "head_branch": "fragment",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3970?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3970](https://codecov.io/gh/secdev/scapy/pull/3970?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3040c89) into [master](https://codecov.io/gh/secdev/scapy/commit/4aaed1d0a423ad8e9da571d4c1b1d105b84823a8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4aaed1d) will **decrease** coverage by `0.47%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3970      +/-   ##\n==========================================\n- Coverage   81.65%   81.19%   -0.47%     \n==========================================\n  Files         326      326              \n  Lines       75466    75468       +2     \n==========================================\n- Hits        61625    61274     -351     \n- Misses      13841    14194     +353     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3970?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet.py](https://codecov.io/gh/secdev/scapy/pull/3970?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQucHk=) | `71.85% <100.00%> (+0.04%)` | :arrow_up: |\n\n... and [16 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3970/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the PR.\r\n\r\nJust a note on why this is taking so long: you are absolutely right and your fix is mostly right, but I'm not looking forward merging it. This PR pointed out that the fragment/frag implementation is duplicated and kinda terrible, so I think that the best option would be to actually rewrite the fragmentation functions (and session integration entirely). I'm working on that but it is taking longer than anticipated.\r\n\r\nYou can keep the PR open because it shows there's an issue, and use your patch in the meantime. Sorry for the wait !",
      "I  understand your point 100%, it took me quite a bit of digging to figure the problem. I had a bigger patch for this but it not also not quite easy to understand. I'm using this one at the moment, it fits my immediate needs - so no worries about that.\r\n\r\nThank you for working on this!\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac19a88c0a76e0a515d8",
    "number": 3969,
    "body": "DSCP is a one-byte field just like TOS, and is already listed in the list of possible values in the template (NetflowV910TemplateFieldTypes), this just adds it to the list of possible values.\r\n\r\n",
    "head_branch": "gg/netflow-ip-dscp",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3969?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3969](https://codecov.io/gh/secdev/scapy/pull/3969?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (07fc045) into [master](https://codecov.io/gh/secdev/scapy/commit/4aaed1d0a423ad8e9da571d4c1b1d105b84823a8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4aaed1d) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3969      +/-   ##\n==========================================\n- Coverage   81.65%   81.65%   -0.01%     \n==========================================\n  Files         326      326              \n  Lines       75466    75466              \n==========================================\n- Hits        61625    61622       -3     \n- Misses      13841    13844       +3     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3969?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/netflow.py](https://codecov.io/gh/secdev/scapy/pull/3969?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL25ldGZsb3cucHk=) | `90.47% <ø> (ø)` | |\n\n... and [7 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3969/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "netflow - add IP_DSCP support\n\nDSCP is a one-byte field just like TOS, and is already listed in the\nlist of possible values in the template (NetflowV910TemplateFieldTypes),\nthis just adds it to the list of possible values.\n\nSigned-off-by: Gabriel Ganne <gabriel.ganne@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac1aa88c0a76e0a515d9",
    "number": 3967,
    "body": "The goal of the PR is to provide support for CanFD messages into the ISOTPSocket, this PR changes/add:\r\n\r\n- Added new tests for this change in the file `test/contrib/isotp_soft_socket_fd.uts`, I followed something similar to what the `test/contrib/isotp_soft_socket.uts` is doing.\r\n- Added a flag \"fd\" in the `ISOTP.fragment` function, but it is optional and should not impact the previous version.\r\n- Added a flag \"fd\" in the `ISOTPSoftSocket` to enable the fd messages functionality.\r\n\r\nIt should close #3937 \r\n",
    "head_branch": "isotp-soft-socket-can-fd-support",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3967?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3967](https://codecov.io/gh/secdev/scapy/pull/3967?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (87344d6) into [master](https://codecov.io/gh/secdev/scapy/commit/4aaed1d0a423ad8e9da571d4c1b1d105b84823a8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4aaed1d) will **decrease** coverage by `29.91%`.\n> The diff coverage is `50.00%`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3967       +/-   ##\n===========================================\n- Coverage   81.65%   51.75%   -29.91%     \n===========================================\n  Files         326      326               \n  Lines       75466    75452       -14     \n===========================================\n- Hits        61625    39050    -22575     \n- Misses      13841    36402    +22561     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3967?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/isotp/isotp\\_packet.py](https://codecov.io/gh/secdev/scapy/pull/3967?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9wYWNrZXQucHk=) | `47.51% <14.28%> (-51.76%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3967?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `65.44% <58.62%> (-18.44%)` | :arrow_down: |\n\n... and [230 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3967/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@gpotter2 Could you please press something to enable the unit tests?",
      "Code reviewed, also reran the tests locally, everything seems to be working",
      "can you please fix mypy",
      "Some workflows didn't run correctly, will mark as draft until I have some time to fix it",
      "Updated version of this PR in #4048 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac1ba88c0a76e0a515da",
    "number": 3966,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nAdd indent for examples to improve readability.\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3966?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3966](https://codecov.io/gh/secdev/scapy/pull/3966?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4a1f64e) into [master](https://codecov.io/gh/secdev/scapy/commit/4aaed1d0a423ad8e9da571d4c1b1d105b84823a8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4aaed1d) will **decrease** coverage by `2.44%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3966      +/-   ##\n==========================================\n- Coverage   81.65%   79.22%   -2.44%     \n==========================================\n  Files         326      319       -7     \n  Lines       75466    70252    -5214     \n==========================================\n- Hits        61625    55654    -5971     \n- Misses      13841    14598     +757     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3966?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/tls/session.py](https://codecov.io/gh/secdev/scapy/pull/3966?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `87.87% <ø> (-0.34%)` | :arrow_down: |\n\n... and [119 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3966/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac1ba88c0a76e0a515db",
    "number": 3963,
    "body": "padding alignment used to be 4, now it's 2, but in radiotap.org the alignment is 1 so the ReversePadField is redundant.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi & sorry for the delay.\nCould you provide a pcap where this fails? Thanks "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac1ca88c0a76e0a515dc",
    "number": 3961,
    "body": "This PR fixes #3947\r\n",
    "head_branch": "fix_3947",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3961?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3961](https://codecov.io/gh/secdev/scapy/pull/3961?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9c48420) into [master](https://codecov.io/gh/secdev/scapy/commit/96bf3878809521bed8eb137e665daa8b55249c90?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (96bf387) will **increase** coverage by `1.66%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3961      +/-   ##\n==========================================\n+ Coverage   79.99%   81.66%   +1.66%     \n==========================================\n  Files         326      326              \n  Lines       75397    75397              \n==========================================\n+ Hits        60315    61571    +1256     \n+ Misses      15082    13826    -1256     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3961?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/gm/gmlan.py](https://codecov.io/gh/secdev/scapy/pull/3961?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2dtL2dtbGFuLnB5) | `98.05% <100.00%> (ø)` | |\n| [scapy/contrib/automotive/kwp.py](https://codecov.io/gh/secdev/scapy/pull/3961?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2t3cC5weQ==) | `94.73% <100.00%> (ø)` | |\n| [scapy/contrib/automotive/uds.py](https://codecov.io/gh/secdev/scapy/pull/3961?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3Vkcy5weQ==) | `98.52% <100.00%> (ø)` | |\n\n... and [40 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3961/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "@p-l- Sorry for the confusion. This PR was actually created by me. I've made it from my \"work\" account. Since I'm currently testing the handling of multiple github accounts to separate private and work. "
    ],
    "commit_messages": [
      "Fix #3947"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac1da88c0a76e0a515dd",
    "number": 3960,
    "body": "I found a subtle bug in UTscapy where it swallows syntax errors like\r\n```python\r\nRTRErrorReport in pkt and pkt.error_code == 1and pkt.error_text == b'Internal Error'\r\n                                                    ^\r\nSyntaxError: invalid decimal literal\r\n```\r\nand It boils down to `code.InteractiveInterpreter()` swallowing syntax errors unless syntax warnings are treated as errors:\r\n```\r\npython3 -c '1and print(12)'\r\n<string>:1: SyntaxWarning: invalid decimal literal\r\n12\r\n```\r\nI haven't fully fixed that bug yet but in the process several syntax errors popped up and they are addressed here.\r\n\r\nFixes:\r\n```python\r\n>>> RTRErrorReport in pkt and pkt.error_code == 1and pkt.error_text == b'Internal Error'\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.11/codeop.py\", line 153, in __call__\r\n    return _maybe_compile(self.compiler, source, filename, symbol)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/codeop.py\", line 73, in _maybe_compile\r\n    return compiler(source, filename, symbol)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/codeop.py\", line 118, in __call__\r\n    codeob = compile(source, filename, symbol, self.flags, True)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"<input>\", line 2\r\n    RTRErrorReport in pkt and pkt.error_code == 1and pkt.error_text == b'Internal Error'\r\n                                                ^\r\nSyntaxError: invalid decimal literal\r\n```\r\nand\r\n```python\r\n>>> assert msg.rx_ext_address is 0xE2\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.11/codeop.py\", line 153, in __call__\r\n    return _maybe_compile(self.compiler, source, filename, symbol)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/codeop.py\", line 73, in _maybe_compile\r\n    return compiler(source, filename, symbol)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/codeop.py\", line 118, in __call__\r\n    codeob = compile(source, filename, symbol, self.flags, True)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"<input>\", line 2\r\nSyntaxError: \"is\" with a literal. Did you mean \"==\"?\r\n```",
    "head_branch": "various-warnings",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3960?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3960](https://codecov.io/gh/secdev/scapy/pull/3960?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (753116e) into [master](https://codecov.io/gh/secdev/scapy/commit/55cc32cc89a293e5947bef620eca342935a12866?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (55cc32c) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3960      +/-   ##\n==========================================\n- Coverage   81.66%   81.66%   -0.01%     \n==========================================\n  Files         326      326              \n  Lines       75456    75456              \n==========================================\n- Hits        61620    61618       -2     \n- Misses      13836    13838       +2     \n```\n\n[see 7 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3960/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Fix syntax errors (#3960)\n\n* Use \"==\" instead of \"is\" to compare numbers\r\n* Fix syntax errors in the RTR test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac1ea88c0a76e0a515de",
    "number": 3959,
    "body": "RFC is kinda unclear, and apparently I was wrong. The MIC is actually always present but meaningless\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/227813692-f29a7ef1-2456-48c7-9e33-ad3018baf3a9.png)\r\n\r\nfixes https://github.com/secdev/scapy/issues/3957",
    "head_branch": "eapol-key",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3959?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3959](https://codecov.io/gh/secdev/scapy/pull/3959?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ee67904) into [master](https://codecov.io/gh/secdev/scapy/commit/358f5465ddbf6149bcfe9cad8fef2f4b925dd173?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (358f546) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3959      +/-   ##\n==========================================\n- Coverage   81.65%   81.65%   -0.01%     \n==========================================\n  Files         326      326              \n  Lines       75456    75456              \n==========================================\n- Hits        61613    61612       -1     \n- Misses      13843    13844       +1     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3959?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/eap.py](https://codecov.io/gh/secdev/scapy/pull/3959?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2VhcC5weQ==) | `91.16% <ø> (ø)` | |\n\n... and [3 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3959/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Fix EAPOL_KEY"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac1fa88c0a76e0a515df",
    "number": 3958,
    "body": "The goals of this PR is to support `python -m build` to generate wheels along the sdist.\r\n\r\nThis PR:\r\n- makes sure that `scapy/VERSION` is also exported in wheels\r\n- update the documentation to reflect the new build methods: `python -m build`, and the new 3.7+ dependencies. Also updated some Windows parts and dependency to `tcpdump` (which is now to `libpcap`).\r\n- includes https://github.com/secdev/scapy/pull/3945\r\n\r\ncloses https://github.com/secdev/scapy/pull/3945\r\ncloses https://github.com/secdev/scapy/issues/3955\r",
    "head_branch": "better-version",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3958?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3958](https://codecov.io/gh/secdev/scapy/pull/3958?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b7c5f88) into [master](https://codecov.io/gh/secdev/scapy/commit/358f5465ddbf6149bcfe9cad8fef2f4b925dd173?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (358f546) will **increase** coverage by `0.00%`.\n> The diff coverage is `80.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3958   +/-   ##\n=======================================\n  Coverage   81.65%   81.65%           \n=======================================\n  Files         326      326           \n  Lines       75456    75397   -59     \n=======================================\n- Hits        61613    61568   -45     \n+ Misses      13843    13829   -14     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3958?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3958?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvX19pbml0X18ucHk=) | `83.56% <80.00%> (-0.95%)` | :arrow_down: |\n\n... and [68 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3958/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks!\r\n\r\nI can't say I fully understand how it all works (though I hope I'm slowly getting there :-)) but it seems it isn't possible to enforce versions downstream using something like\r\n```\r\nSCAPY_VERSION=2.10.0 python3 -m build\r\n...\r\nSuccessfully built scapy-2.5.1.dev68.tar.gz and scapy-2.5.1.dev68-py3-none-any.whl\r\n...\r\n(cd ..; python3 -c 'import scapy; print(scapy.VERSION)')\r\n2.5.1.dev68\r\n```\r\nMy understanding is that `SCAPY_VERSION` should take precedence over `git describe`.\r\n",
      "> removes the VERSION file\r\n\r\nWith `scapy/VERSION` gone at least Debian and Gentoo would have to either switch to the `SCAPY_VERSION` environment variable or just rely on the archive tag. It isn't the end of the world probably but I think it would be great to mention it in the release notes when the next tarball is released.\r\n\r\nFWIW I generated the git archive ~~and when I tried to unpack it I got a lot of warnings like~~\r\n<details>\r\n      <summary>scratch that. my bad.</summary>\r\n\r\n```\r\n...\r\ntox.ini\r\ntar: test: time stamp 2023-03-26 23:56:41 is 34702.105210495 s in the future\r\ntar: tox.ini: time stamp 2023-03-26 23:56:41 is 34702.105116622 s in the future\r\n```\r\n</details>\r\n\r\nWhen I tried to build scapy from inside the unpacked tarball it failed with:\r\n<details>\r\n  <summary>`ERROR Backend subprocess exited when trying to invoke get_requires_for_build_sdist`</summary>\r\n\r\n```\r\n* Creating virtualenv isolated environment...\r\n* Installing packages in isolated environment... (setuptools>=62.0.0, setuptools_scm[toml]>=6.2)\r\n* Getting build dependencies for sdist...\r\nTraceback (most recent call last):\r\n  File \"/VENV/lib/python3.11/site-packages/pyproject_hooks/_in_process/_in_process.py\", line 353, in <module>\r\n    main()\r\n  File \"/VENV/lib/python3.11/site-packages/pyproject_hooks/_in_process/_in_process.py\", line 335, in main\r\n    json_out['return_val'] = hook(**hook_input['kwargs'])\r\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/VENV/lib/python3.11/site-packages/pyproject_hooks/_in_process/_in_process.py\", line 287, in get_requires_for_build_sdist\r\n    return hook(config_settings)\r\n           ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools/build_meta.py\", line 341, in get_requires_for_build_sdist\r\n    return self._get_build_requires(config_settings, requirements=[])\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools/build_meta.py\", line 320, in _get_build_requires\r\n    self.run_setup()\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools/build_meta.py\", line 335, in run_setup\r\n    exec(code, locals())\r\n  File \"<string>\", line 38, in <module>\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools/__init__.py\", line 108, in setup\r\n    return distutils.core.setup(**attrs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools/_distutils/core.py\", line 147, in setup\r\n    _setup_distribution = dist = klass(attrs)\r\n                                 ^^^^^^^^^^^^\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools/dist.py\", line 488, in __init__\r\n    _Distribution.__init__(\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools/_distutils/dist.py\", line 283, in __init__\r\n    self.finalize_options()\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools/dist.py\", line 912, in finalize_options\r\n    ep(self)\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools_scm/integration.py\", line 127, in infer_version\r\n    _assign_version(dist, config)\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools_scm/integration.py\", line 63, in _assign_version\r\n    _version_missing(config)\r\n  File \"/tmp/build-env-54sucmvl/lib/python3.11/site-packages/setuptools_scm/__init__.py\", line 108, in _version_missing\r\n    raise LookupError(\r\nLookupError: setuptools-scm was unable to detect version for /TARBALL.\r\n\r\nMake sure you're either building from a fully intact git repository or PyPI tarballs. Most other sources (such as GitHub's tarballs, a git checkout without the .git folder) don't contain the necessary metadata and will not work.\r\n\r\nFor example, if you're using pip, instead of https://github.com/user/proj/archive/master.zip use git+https://github.com/user/proj.git#egg=proj\r\n\r\nERROR Backend subprocess exited when trying to invoke get_requires_for_build_sdist\r\n```\r\n</details>",
      "> When I tried to build scapy from inside the unpacked tarball it failed with\n\nHmm, that sucks. I'm suddenly really unsure about this PR, we don't want to break tarballs. I'll check again",
      "@p-l- @guedou Hi, this ready for review+merge. Thanks !",
      "Nice work here! I'll let you merge that @gpotter2!",
      "@gpotter2 Are you planning on releasing `.whl`s to PyPI? If this PR works, then it's a 0-effort improvement for everyone, since `pip` would no longer need to build the wheel during installs (nowadays pip always installs from a wheel, even if it has to generate one first).",
      "I think https://github.com/secdev/scapy/pull/3958/files#diff-7b9d684b62ceb5912e396a6250cf5c39a9fe913b0e52b5dbbd11a6d36142a23fR303-R316 kind of implies that wheels are built and uploaded when scapy is released.",
      "@evverx oh, I missed that one, thank you. All fine then.",
      "Does that mean that the current release workflow described at https://scapy.readthedocs.io/en/latest/development.html will also upload the wheel using twine?",
      "@guedou yup ! twine should upload the wheels as well, as long as they're built. This should be the case with the new build method"
    ],
    "commit_messages": [
      "Support new build methods (#3958)\n\n* Build and check the wheel in the twine check as well\r\n\r\nIt should help to make sure that scapy can be installed from PyPI (or\r\nany other package index) using pip and its sdist.\r\n\r\nThe check switched to the \"build\" build frontend because it builds\r\nwheels from sdists by default:\r\nhttps://pypa-build.readthedocs.io/en/stable/#python--m-build\r\n\r\n* Remove README\r\n\r\nIn 669506bd42e4141718374ba297974881fe125fb8 scapy switched to\r\npyproject.toml where 'readme' is dynamic and should be supplied by\r\nsetup.py. setup.py reads README.md and it works from inside the source\r\ntree but since README.md isn't included in the sdist it fails when pip\r\nor the build frontend builds the wheel from the sdist with:\r\n```\r\ndistutils.errors.DistutilsOptionError: No configuration found for dynamic 'readme'.\r\nSome dynamic fields need to be specified via `tool.setuptools.dynamic`\r\nothers must be specified via the equivalent attribute in `setup.py`.\r\n```\r\n\r\nThis patch addresses that by removing README and letting setuptools\r\ninclude README.md to the sdist automatcially.\r\n\r\nREADME was added in 4f71027fcd in 2016 and back then it probably made\r\nsense because setuptools didn't include README.md in the sdist\r\nautomatically. These days setuptools can handle README.md just fine so\r\nit's no longer necessary to keep README any more.\r\n\r\nIt makes it possible to build the wheel from the sdist again.\r\n\r\nFixes:\r\n```\r\npython3 -m build\r\n...\r\n* Building wheel from sdist\r\n* Creating venv isolated environment...\r\n* Installing packages in isolated environment... (setuptools>=62.0.0)\r\n* Getting build dependencies for wheel...\r\n...\r\n  File \"/tmp/build-env-vtaxy4xl/lib64/python3.11/site-packages/setuptools/config/pyprojecttoml.py\", line 351, in _obtain_readme\r\n    self._ensure_previously_set(dist, \"readme\")\r\n  File \"/tmp/build-env-vtaxy4xl/lib64/python3.11/site-packages/setuptools/config/pyprojecttoml.py\", line 307, in _ensure_previously_set\r\n    raise OptionError(msg)\r\ndistutils.errors.DistutilsOptionError: No configuration found for dynamic 'readme'.\r\nSome dynamic fields need to be specified via `tool.setuptools.dynamic`\r\nothers must be specified via the equivalent attribute in `setup.py`.\r\n\r\nERROR Backend subprocess exited when trying to invoke get_requires_for_build_wheel\r\n```\r\nand\r\n```\r\npython3 -m pip install dist/scapy-2.5.0.dev56.tar.gz\r\nProcessing ./dist/scapy-2.5.0.dev56.tar.gz\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... error\r\n  error: subprocess-exited-with-error\r\n\r\n  × Getting requirements to build wheel did not run successfully.\r\n  │ exit code: 1\r\n...\r\n```\r\n\r\nIt's a follow-up to 669506bd42e4141718374ba297974881fe125fb8\r\n\r\n* Update doc: installation & build instructions\r\n\r\n* Make sure VERSION is also exported in wheels\r\n\r\n* Cleanup MANIFEST.in\r\n\r\n* Add packaging instructions\r\n\r\n* Add git archive unit test\r\n\r\n* Use %(describe:tags=True)\r\n\r\n* Update doc/scapy/installation.rst\r\n\r\nCo-authored-by: Evgeny Vereshchagin <evvers@ya.ru>\r\n\r\n---------\r\n\r\nCo-authored-by: Evgeny Vereshchagin <evvers@ya.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac20a88c0a76e0a515e0",
    "number": 3956,
    "body": "Fixes:\r\n```\r\n>>> assert (pkt_1.precision.val == precision, pkt_1.precision.val)\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.11/codeop.py\", line 153, in __call__\r\n    return _maybe_compile(self.compiler, source, filename, symbol)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/codeop.py\", line 73, in _maybe_compile\r\n    return compiler(source, filename, symbol)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/codeop.py\", line 118, in __call__\r\n    codeob = compile(source, filename, symbol, self.flags, True)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"<input>\", line 2\r\nSyntaxError: assertion is always true, perhaps remove parentheses?\r\n```\r\nand\r\n```\r\n>>> test_tls_server(\"ECDHE-RSA-AES128-SHA\", \"-tls1\")\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"<input>\", line 9, in test_tls_server\r\n  File \"/usr/lib64/python3.11/threading.py\", line 1240, in setDaemon\r\n    warnings.warn('setDaemon() is deprecated, set the daemon attribute instead',\r\nDeprecationWarning: setDaemon() is deprecated, set the daemon attribute instead\r\n```",
    "head_branch": "assertions-and-deprecation-warnings",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3956?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3956](https://codecov.io/gh/secdev/scapy/pull/3956?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5e84d12) into [master](https://codecov.io/gh/secdev/scapy/commit/c456201a5a0cf622ab2f719405e056b4b22a17ec?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c456201) will **increase** coverage by `0.23%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3956      +/-   ##\n==========================================\n+ Coverage   81.42%   81.65%   +0.23%     \n==========================================\n  Files         326      326              \n  Lines       75451    75456       +5     \n==========================================\n+ Hits        61435    61616     +181     \n+ Misses      14016    13840     -176     \n```\n\n[see 16 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3956/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "Use the daemon attribute instead of setDaemon\n\nsetDaemon was deprecated in https://github.com/python/cpython/pull/25174\n\nFixes:\n```\n>>> test_tls_server(\"ECDHE-RSA-AES128-SHA\", \"-tls1\")\nTraceback (most recent call last):\n  File \"<input>\", line 2, in <module>\n  File \"<input>\", line 9, in test_tls_server\n  File \"/usr/lib64/python3.11/threading.py\", line 1240, in setDaemon\n    warnings.warn('setDaemon() is deprecated, set the daemon attribute instead',\nDeprecationWarning: setDaemon() is deprecated, set the daemon attribute instead\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac21a88c0a76e0a515e1",
    "number": 3954,
    "body": "ISAKMP improvements:\r\n- support nat traversal (merge with implem from ikev2)\r\n- various fixes regarding transform fields dissection (patch not from me, cheers)\r\n- **tests**, finally\r\n- minor quality of dissection improvements for ISAKMP (VendorId, show offset, stuff..)",
    "head_branch": "isakmp-patch",
    "is_a_fork": true,
    "comments": [
      "FTR I moved your nat-transversal code to be able to use it in ISAKMP @mspncp",
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3954?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3954](https://codecov.io/gh/secdev/scapy/pull/3954?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (556c214) into [master](https://codecov.io/gh/secdev/scapy/commit/43582d36fe202916fab4f36f0fd10d697eabd8a5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (43582d3) will **increase** coverage by `2.44%`.\n> The diff coverage is `96.15%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3954      +/-   ##\n==========================================\n+ Coverage   79.20%   81.65%   +2.44%     \n==========================================\n  Files         319      326       +7     \n  Lines       70234    75444    +5210     \n==========================================\n+ Hits        55631    61606    +5975     \n+ Misses      14603    13838     -765     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3954?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/isakmp.py](https://codecov.io/gh/secdev/scapy/pull/3954?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lzYWttcC5weQ==) | `88.50% <91.66%> (+3.74%)` | :arrow_up: |\n| [scapy/contrib/ikev2.py](https://codecov.io/gh/secdev/scapy/pull/3954?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pa2V2Mi5weQ==) | `95.31% <100.00%> (+0.38%)` | :arrow_up: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3954?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.72% <100.00%> (+0.14%)` | :arrow_up: |\n| [scapy/layers/ipsec.py](https://codecov.io/gh/secdev/scapy/pull/3954?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lwc2VjLnB5) | `88.70% <100.00%> (+0.42%)` | :arrow_up: |\n\n... and [118 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3954/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the review.\n\n> Would you agree that with all the recent improvements the IKEv2 protocol is now sufficiently mature to deserve a place next to its predecessor IKEv1 as an officially supported Scapy layer?\n\nSure. My only concerns would be to have consistent naming between `ISAKMP_payload_...` and `IKEv2_...` stuff, and also simply making sure there isn't code that could be evidently merged between the two, so that will be for a future PR.",
      "> Sure. My only concerns would be to have consistent naming between ISAKMP_payload_... and IKEv2_... stuff, and also simply making sure there isn't code that could be evidently merged between the two, so that will be for a future PR.\r\n\r\nWould it be allowed to adjust the ISAKMP names, i.e. remove the useless and verbose `_payload` infixes as I did für IKEv2? Or would this violate some API stability policy?",
      "> Would it be allowed to adjust the ISAKMP names, i.e. remove the useless and verbose _payload infixes as I did für IKEv2?\r\n\r\nMost likely. Or maybe we can setup an alias, I'll have a look",
      "Then I‘d volunteer to do it. ",
      "A similar step could be done for IKEv2 as well: aliases for the old payload names could be placed  in a compatibility module  `scapy.contrib.ikev2`, then existing code which uses the old import statement would continue to work. "
    ],
    "commit_messages": [
      "ISAKMP: support nat traversal, various fixes\n\n- apply patch related to transform fields dissection (not mine)\n- support nat traversal (non-esp, etc.) by merging with ikev2's\n- various improvements to quality of dissection of ISAKMP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac21a88c0a76e0a515e2",
    "number": 3953,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3953?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3953](https://codecov.io/gh/secdev/scapy/pull/3953?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3bbe8c0) into [master](https://codecov.io/gh/secdev/scapy/commit/43582d36fe202916fab4f36f0fd10d697eabd8a5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (43582d3) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3953   +/-   ##\n=======================================\n  Coverage   79.20%   79.20%           \n=======================================\n  Files         319      320    +1     \n  Lines       70234    70245   +11     \n=======================================\n+ Hits        55631    55641   +10     \n- Misses      14603    14604    +1     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3953?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/pdu.py](https://codecov.io/gh/secdev/scapy/pull/3953?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9wZHUucHk=) | `100.00% <100.00%> (ø)` | |\n\n... and [2 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3953/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Hi!\r\nThanks for contribution,but I have one doubt - It looks quite similar to this PR: https://github.com/secdev/scapy/pull/3933\r\n",
      "@bumblebeetron Is this PR implementing the same protocol as #3933. If not, could you please reference a documentation of this protocol?\r\n\r\nIn general, I would prefer the implementation from #3933, since this allows to bind custom packets onto individual PDUs, based on the identifier.  ",
      "> \r\n\r\nI think you are right on the matter. I could change my pull request to \"bind custom packets onto individual PDUs\" but it wouldn't be different than what #3933.\r\n\r\nSo I'm closing the pull request."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac22a88c0a76e0a515e3",
    "number": 3952,
    "body": "This pull request fixes the following issue.\r\n[ISSUE 3951](https://github.com/secdev/scapy/issues/3951)\r\n\r\nfix https://github.com/secdev/scapy/issues/3951\r\n",
    "head_branch": "fix_issue_3951_sae_resp_not_detected",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3952?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3952](https://app.codecov.io/gh/secdev/scapy/pull/3952?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (51f07d8) into [master](https://app.codecov.io/gh/secdev/scapy/commit/43582d36fe202916fab4f36f0fd10d697eabd8a5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (43582d3) will **increase** coverage by `0.01%`.\n> Report is 178 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n> :exclamation: Current head 51f07d8 differs from pull request most recent head 9c914c9. Consider uploading reports for the commit 9c914c9 to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3952      +/-   ##\n==========================================\n+ Coverage   79.20%   79.22%   +0.01%     \n==========================================\n  Files         319      319              \n  Lines       70234    70252      +18     \n==========================================\n+ Hits        55631    55654      +23     \n+ Misses      14603    14598       -5     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/3952?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dot11.py](https://app.codecov.io/gh/secdev/scapy/pull/3952?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RvdDExLnB5) | `91.36% <100.00%> (+0.12%)` | :arrow_up: |\n\n... and [8 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3952/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks for the PR ! would you mind adding a unit test?",
      "I added a unit test with some test cases. I also noticed that it should be checked first if the authentication algorithms are not the same and in case they don't match, `0` is returned. This was discovered by one of the new unit tests.\r\n\r\nI also had some ideas how to change the method `answer()` in order to handle invalid SAE authentication responses as well. These ideas are not fully developed but may be used as a starting point. However, they would require some SAE related additional fields to be implemented in Scapy (e.g., SAE message type, SAE send confirm) which I cannot provide at the moment. But if you're interested, I can provide the ideas for `answers()`.",
      "Hi @gpotter2, is there anything else that I can do or that is still required for this pull request?"
    ],
    "commit_messages": [
      "Fix SRP not detecting valid SAE auth responses (#3951)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac23a88c0a76e0a515e4",
    "number": 3946,
    "body": "Now that Python2 is no longer supported the intermediate bytearray.fromhex() step is redundant and can be removed.\r\n\r\nIt's mostly prompted by https://github.com/secdev/scapy/pull/3908 where I think `bytes(bytearray.fromhex())` was used to make the test consistent with the other tests.",
    "head_branch": "bytes-from-hex",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3946?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3946](https://codecov.io/gh/secdev/scapy/pull/3946?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8b4ff5e) into [master](https://codecov.io/gh/secdev/scapy/commit/d05de38207a1775adb6db6c5c3f635fc0c993dcd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d05de38) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3946   +/-   ##\n=======================================\n  Coverage   81.64%   81.64%           \n=======================================\n  Files         326      326           \n  Lines       75429    75429           \n=======================================\n  Hits        61582    61582           \n  Misses      13847    13847           \n```\n\n[see 2 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3946/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n"
    ],
    "commit_messages": [
      "cleanup: replace bytes(bytearray.fromhex()) with bytes.fromhex() (#3946)\n\nNow that Python2 is no longer supported the intermediate\r\nbytearray.fromhex() step is redundant and can be removed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac24a88c0a76e0a515e5",
    "number": 3945,
    "body": "In 669506bd42e4141718374ba297974881fe125fb8 scapy switched to\r\npyproject.toml where 'readme' is dynamic and should be supplied by\r\nsetup.py. setup.py reads README.md and it works from inside the source\r\ntree but since README.md isn't included in the sdist it fails when pip\r\nor the build frontend builds the wheel from the sdist with:\r\n```\r\ndistutils.errors.DistutilsOptionError: No configuration found for dynamic 'readme'.\r\nSome dynamic fields need to be specified via `tool.setuptools.dynamic`\r\nothers must be specified via the equivalent attribute in `setup.py`.\r\n```\r\n\r\nThis patch addresses that by removing README and letting setuptools\r\nadd README.md to the sdist automatcially.\r\n\r\nREADME was added in 4f71027fcdcb1e4ca8d7e04987588d2f7e615f4b in 2016 and back then it probably made\r\nsense because setuptools didn't include README.md in the sdist\r\nautomatically. These days setuptools can handle README.md just fine so\r\nit's no longer necessary to keep README any more.\r\n\r\nIt makes it possible to build the wheel from the sdist again.\r\n\r\nFixes:\r\n```\r\npython3 -m build\r\n...\r\n* Building wheel from sdist\r\n* Creating venv isolated environment...\r\n* Installing packages in isolated environment... (setuptools>=62.0.0)\r\n* Getting build dependencies for wheel...\r\n...\r\n  File \"/tmp/build-env-vtaxy4xl/lib64/python3.11/site-packages/setuptools/config/pyprojecttoml.py\", line 351, in _obtain_readme\r\n    self._ensure_previously_set(dist, \"readme\")\r\n  File \"/tmp/build-env-vtaxy4xl/lib64/python3.11/site-packages/setuptools/config/pyprojecttoml.py\", line 307, in _ensure_previously_set\r\n    raise OptionError(msg)\r\ndistutils.errors.DistutilsOptionError: No configuration found for dynamic 'readme'.\r\nSome dynamic fields need to be specified via `tool.setuptools.dynamic`\r\nothers must be specified via the equivalent attribute in `setup.py`.\r\n\r\nERROR Backend subprocess exited when trying to invoke get_requires_for_build_wheel\r\n```\r\nand\r\n```\r\npython3 -m pip install dist/scapy-2.5.0.dev56.tar.gz\r\nProcessing ./dist/scapy-2.5.0.dev56.tar.gz\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... error\r\n  error: subprocess-exited-with-error\r\n\r\n  × Getting requirements to build wheel did not run successfully.\r\n  │ exit code: 1\r\n...\r\n```\r\n\r\nIt's a follow-up to 669506bd42e4141718374ba297974881fe125fb8",
    "head_branch": "wheel-from-sdist",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3945?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3945](https://codecov.io/gh/secdev/scapy/pull/3945?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (dc555cc) into [master](https://codecov.io/gh/secdev/scapy/commit/d05de38207a1775adb6db6c5c3f635fc0c993dcd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d05de38) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3945      +/-   ##\n==========================================\n- Coverage   81.64%   81.64%   -0.01%     \n==========================================\n  Files         326      326              \n  Lines       75429    75438       +9     \n==========================================\n+ Hits        61582    61589       +7     \n- Misses      13847    13849       +2     \n```\n\n[see 4 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3945/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks a lot for the PR !\r\nI tested it and it looks almost good. I'm just having issues with `scapy/VERSION` not being generated when using this.\r\nI am starting to think that we might need something like this https://setuptools.pypa.io/en/latest/build_meta.html#dynamic-build-dependencies-and-other-build-meta-tweaks instead of the https://github.com/secdev/scapy/blob/master/setup.py#L40 thing",
      "Let me double-check. I unpacked the sdist and the wheel to make sure VERSION was there:\r\n```\r\ntar zxvf dist/scapy-2.5.0.dev59.tar.gz\r\ncat scapy-2.5.0.dev59/scapy/VERSION\r\n2.5.0.dev59\r\n```\r\n```\r\nunzip -d WHEEL dist/scapy-2.5.0.dev59-py3-none-any.whl\r\ncat WHEEL/scapy/VERSION\r\n2.5.0.dev59\r\n```\r\nbut it could be that I missed something. Could you show the build command where VERSION isn't generated? I'll try to figure out how to make it work.",
      "If you delete `scapy/VERSION` from the root (not in the builds) and call `python -m build`, I personally get a warning/error saying it doesn't exist",
      "I can't seem to reproduce it locally\r\n```sh\r\n$ git clean -dxff\r\n$ ls scapy/VERSION\r\nls: cannot access 'scapy/VERSION': No such file or directory\r\n$ python -m build\r\n...\r\nSuccessfully built scapy-2.5.0.dev59.tar.gz and scapy-2.5.0.dev59-py3-none-any.whl\r\n```\r\nThe CI can't seem to reproduce it either. I'll try to downgrade stuff to see if it helps to reproduce it.",
      "I think I got it. The following warning\r\n```\r\nwarning: no files found matching 'scapy/VERSION'\r\n```\r\npops up with and without this PR when scapy is built (with both `build` and `setup.py sdist`). I didn't notice it because the build didn't fail because of that.",
      "Looks like this warning was introduced in 915fe2d207b0f91768de2a25d576767a4cf2efaf\r\n> Do not try to generate the scapy/VERSION file when importing scapy\r\nanymore but generate it by overriding the sdist command in setup.py and\r\nwrite it to the temp folder used for the source archive generation\r\n\r\nand since `scapy/VERSION` is included in `MANIFEST.in` the warning is generated. It should be possible to \"fix\" it by removing it from `MANIFEST.in` but it would break the wheel in the sense that `VERSION` would no longer be included in the wheel generated from the sdist. @rjarry could you take a look? I can't say I fully understand all the corner cases there and I don't want to break it accidentally.",
      "I opened https://github.com/secdev/scapy/issues/3955 but I think it's a separate issue and it would probably be easier to fix it with the \"pip install <sdist>\" scenario fixed.",
      "Closing in favor of https://github.com/secdev/scapy/pull/3958"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac25a88c0a76e0a515e6",
    "number": 3944,
    "body": "In 1e48e13fc594f8d925451c7e2706086d21102716 NTP switched to dispatch_hook and all the fields including \"version\" and \"mode\" moved to the NTP subclasses. This PR adjusts the mysummary method accordingly.\r\n\r\nWith this patch applied tshark() prints something like\r\n```\r\n   17\tEther / IP / UDP / NTP v4, client\r\n   18\tEther / IP / UDP / NTP v4, server\r\n```\r\ninstead of\r\n```\r\n   17\tEther / IP / UDP / NTP v??, ??\r\n   18\tEther / IP / UDP / NTP v??, ??\r\n```\r\n\r\nIt's a follow-up to 1e48e13fc594f8d925451c7e2706086d21102716\r\n",
    "head_branch": "ntp-summary",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3944?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3944](https://codecov.io/gh/secdev/scapy/pull/3944?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8199a03) into [master](https://codecov.io/gh/secdev/scapy/commit/d05de38207a1775adb6db6c5c3f635fc0c993dcd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d05de38) will **decrease** coverage by `0.49%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3944      +/-   ##\n==========================================\n- Coverage   81.64%   81.15%   -0.49%     \n==========================================\n  Files         326      326              \n  Lines       75429    75429              \n==========================================\n- Hits        61582    61216     -366     \n- Misses      13847    14213     +366     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3944?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ntp.py](https://codecov.io/gh/secdev/scapy/pull/3944?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250cC5weQ==) | `85.05% <100.00%> (+0.27%)` | :arrow_up: |\n\n... and [24 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3944/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "Show NTP version and mode instead of question marks (#3944)\n\nIn 1e48e13fc594f8d925451c7e2706086d21102716 NTP switched to\r\ndispatch_hook and all the fields including \"version\" and \"mode\" moved to\r\nthe NTP subclasses. This PR adjusts the mysummary method accordingly.\r\n\r\nWith this patch applied tshark() prints something like\r\n```\r\n   17\tEther / IP / UDP / NTP v4, client\r\n   18\tEther / IP / UDP / NTP v4, server\r\n```\r\ninstead of\r\n```\r\n   17\tEther / IP / UDP / NTP v??, ??\r\n   18\tEther / IP / UDP / NTP v??, ??\r\n```\r\n\r\nIt's a follow-up to 1e48e13fc594f8d925451c7e2706086d21102716"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac25a88c0a76e0a515e7",
    "number": 3941,
    "body": "- 802.11-2016 9.4.2.159\r\n- Add unit test\r\n",
    "head_branch": "dot11_vht_operation",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3941?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3941](https://codecov.io/gh/secdev/scapy/pull/3941?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (326165e) into [master](https://codecov.io/gh/secdev/scapy/commit/d05de38207a1775adb6db6c5c3f635fc0c993dcd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d05de38) will **increase** coverage by `0.02%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3941      +/-   ##\n==========================================\n+ Coverage   81.64%   81.66%   +0.02%     \n==========================================\n  Files         326      326              \n  Lines       75429    75437       +8     \n==========================================\n+ Hits        61582    61605      +23     \n+ Misses      13847    13832      -15     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3941?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dot11.py](https://codecov.io/gh/secdev/scapy/pull/3941?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RvdDExLnB5) | `91.37% <100.00%> (+0.12%)` | :arrow_up: |\n\n... and [8 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3941/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for the PR!"
    ],
    "commit_messages": [
      "Add 802.11 VHT Operation Info\n\n- 802.11-2016 9.4.2.159\n- Add unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac27a88c0a76e0a515e8",
    "number": 3939,
    "body": "- remove ubberlogger: it's untested and appears to be some sort of phd dead project\r\n- merge `contrib/wpa_eapol` into `layers/eap` (+small test)\r\n- remove `tools/` from coverage\r\n- **fix test failures by disabling coverage on PyPy** (slows down the tests by about x4 times). There appears to be a somewhat consistent issue between PyPy and coverage: https://github.com/nedbat/coveragepy/issues/1339",
    "head_branch": "fix-pypy39-tests",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3939?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3939](https://codecov.io/gh/secdev/scapy/pull/3939?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9087b50) into [master](https://codecov.io/gh/secdev/scapy/commit/181aa4d5149fbf1b19fbf93650bc9a62ab948138?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (181aa4d) will **decrease** coverage by `0.15%`.\n> The diff coverage is `80.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3939      +/-   ##\n==========================================\n- Coverage   81.77%   81.62%   -0.15%     \n==========================================\n  Files         327      326       -1     \n  Lines       74712    75429     +717     \n==========================================\n+ Hits        61093    61569     +476     \n- Misses      13619    13860     +241     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3939?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/eap.py](https://codecov.io/gh/secdev/scapy/pull/3939?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2VhcC5weQ==) | `91.16% <78.94%> (-1.74%)` | :arrow_down: |\n| [scapy/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3939?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvX19pbml0X18ucHk=) | `84.50% <100.00%> (ø)` | |\n\n... and [16 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3939/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Hi @p-l- @guedou, this is ready for review.\r\n\r\nWanted to ask if it's okay to remove ubberlogger"
    ],
    "commit_messages": [
      "Several contrib layers cleanups (#3939)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac28a88c0a76e0a515e9",
    "number": 3935,
    "body": "Hello, thanks a lot for scapy, it's a great tool :)\r\nHere is a tentative implementation for RFC-4543 AES-NULL-GMAC for IPsec ESP, related to https://github.com/secdev/scapy/issues/556\r\nLet me know what you think, thanks!",
    "head_branch": "aes-null-gmac",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3935?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3935](https://codecov.io/gh/secdev/scapy/pull/3935?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f116241) into [master](https://codecov.io/gh/secdev/scapy/commit/c456201a5a0cf622ab2f719405e056b4b22a17ec?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c456201) will **increase** coverage by `0.22%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3935      +/-   ##\n==========================================\n+ Coverage   81.42%   81.65%   +0.22%     \n==========================================\n  Files         326      326              \n  Lines       75451    75456       +5     \n==========================================\n+ Hits        61435    61612     +177     \n+ Misses      14016    13844     -172     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3935?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ipsec.py](https://codecov.io/gh/secdev/scapy/pull/3935?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lwc2VjLnB5) | `88.82% <100.00%> (+0.11%)` | :arrow_up: |\n\n... and [17 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3935/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Thanks for merging and cleaning after me ^^"
    ],
    "commit_messages": [
      "Add RFC-4543 AES-NULL-GMAC support to IPSec layer (#3935)\n\n* Add RFC-4543 AES-NULL-GMAC support to IPSec layer\r\n\r\n* Minor cleanups\r\n\r\n---------\r\n\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac28a88c0a76e0a515ea",
    "number": 3934,
    "body": null,
    "head_branch": "file_fuzzing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac29a88c0a76e0a515eb",
    "number": 3933,
    "body": "**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n\r\nAdd AUTOSAR PDUTransport/PDU protocol for automotive, on top of UDP (for now), which is similar to CAN signals, but for Ethernet.\r\n\r\nThanks for @polybassa for help with PacketListField :)\r\n\r\nRemake of previous PR, to not break upstream.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3933?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3933](https://codecov.io/gh/secdev/scapy/pull/3933?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ec426a9) into [master](https://codecov.io/gh/secdev/scapy/commit/19f86dd38ec43397e2108207ce5f1e85db2b5989?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (19f86dd) will **decrease** coverage by `1.05%`.\n> The diff coverage is `100.00%`.\n\n> :exclamation: Current head ec426a9 differs from pull request most recent head 2a4edbc. Consider uploading reports for the commit 2a4edbc to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3933      +/-   ##\n==========================================\n- Coverage   81.86%   80.82%   -1.05%     \n==========================================\n  Files         326      328       +2     \n  Lines       75427    75470      +43     \n==========================================\n- Hits        61750    60998     -752     \n- Misses      13677    14472     +795     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3933?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/autosar/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3933?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2F1dG9zYXIvX19pbml0X18ucHk=) | `100.00% <100.00%> (ø)` | |\n| [scapy/contrib/automotive/autosar/pdu.py](https://codecov.io/gh/secdev/scapy/pull/3933?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2F1dG9zYXIvcGR1LnB5) | `100.00% <100.00%> (ø)` | |\n\n... and [88 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3933/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "LGTM!",
      "Just to update - should I do something about those merge commits or can it stay as it is? If needed, I can simply extract the changes and re-make PR. Or maybe is there a way to squash commits into one on remote?",
      "@KhazAkar the usual & preferred way is to rebase your PR against the current master branch rather than adding merge commits. It helps maintain the code history easy to read!",
      "> @KhazAkar the usual & preferred way is to rebase your PR against the current master branch rather than adding merge commits. It helps maintain the code history easy to read!\r\n\r\nThank you. What do you propose to me in current situation? Re-do PR?\r\nGithub IMO should add option to choose between rebase and merge when clicking \"sync fork\" on website",
      "> What do you propose to me in current situation? Re-do PR?\r\n\r\nNot needed. Pull master, rebase (with `-i`) your branch against it, during the rebase remove the merge commits, and push (force).",
      "> > What do you propose to me in current situation? Re-do PR?\r\n> \r\n> Not needed. Pull master, rebase (with `-i`) your branch against it, during the rebase remove the merge commits, and push (force).\r\n\r\nThanks a lot, will do that, when next update in mainline appears :)",
      "@p-l- tried with git pull --rebase=interactive, but it just pulled everything, no prompt. I'm afraid that either I have no idea how to fix it, or I need to re-make my PR :(",
      "Now should be fine, ready for review :)"
    ],
    "commit_messages": [
      "Add AUTOSAR PDUTransport/PDU with initial batch of tests (#3933)\n\n* Add AUTOSAR PDUTransport/PDU with initial batch of tests\r\n* Expand tests with building PDUTransport for 1 and many PDUs.\r\n\r\n---------\r\n\r\nCo-authored-by: KhazAkar <damianzrb@zohomail.eu>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac2aa88c0a76e0a515ec",
    "number": 3932,
    "body": "- keep up to date with codespell updates",
    "head_branch": "spell-2",
    "is_a_fork": true,
    "comments": [
      "I didn't see https://github.com/secdev/scapy/pull/3929"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac2ba88c0a76e0a515ed",
    "number": 3931,
    "body": null,
    "head_branch": "executor_time_fix",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3931?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3931](https://codecov.io/gh/secdev/scapy/pull/3931?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (89fcaf5) into [master](https://codecov.io/gh/secdev/scapy/commit/d05de38207a1775adb6db6c5c3f635fc0c993dcd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d05de38) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3931      +/-   ##\n==========================================\n- Coverage   81.64%   81.63%   -0.01%     \n==========================================\n  Files         326      326              \n  Lines       75429    75428       -1     \n==========================================\n- Hits        61582    61578       -4     \n- Misses      13847    13850       +3     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3931?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/automotive/scanner/executor.py](https://codecov.io/gh/secdev/scapy/pull/3931?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NjYW5uZXIvZXhlY3V0b3IucHk=) | `88.05% <ø> (-0.06%)` | :arrow_down: |\n\n... and [5 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3931/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "One unit test failed, however #3928 will disable this test for the \"default\" CI machines.",
      "One unit test failed, however #3928 will disable this test for the \"default\" CI machines."
    ],
    "commit_messages": [
      "Remove wrong debug message from Automotive Scanner Executor (#3931)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac2ca88c0a76e0a515ee",
    "number": 3930,
    "body": "**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nAdds AUTOSAR PDUTransport/PDU according to few documents, most notably https://www.autosar.org/fileadmin/standards/classic/22-11/AUTOSAR_SWS_IPDUMultiplexer.pdf for PDU 'layer' layout\r\n\r\nthings left to add/do: PCAP-based tests and run tests locally :)\r\nThanks @polybassa  for help with PacketListField :D \r\n\r\nUPDATE: to properly rebase, git shot me in the foot :P",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "When I looked at test results, it seems that my test case was not run. What should I do to fix it?",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3930](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cd65243) into [master](https://codecov.io/gh/secdev/scapy/commit/669506bd42e4141718374ba297974881fe125fb8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (669506b) will **decrease** coverage by `27.19%`.\n> The diff coverage is `78.65%`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3930       +/-   ##\n===========================================\n- Coverage   86.93%   59.75%   -27.19%     \n===========================================\n  Files         310      285       -25     \n  Lines       70599    65612     -4987     \n===========================================\n- Hits        61378    39209    -22169     \n- Misses       9221    26403    +17182     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/homeplugav.py](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ob21lcGx1Z2F2LnB5) | `79.48% <0.00%> (-6.09%)` | :arrow_down: |\n| [scapy/layers/bluetooth.py](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `76.99% <0.00%> (-9.47%)` | :arrow_down: |\n| [scapy/layers/dhcp.py](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3AucHk=) | `27.92% <0.00%> (-52.80%)` | :arrow_down: |\n| [scapy/contrib/gtp.py](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ndHAucHk=) | `66.18% <50.00%> (-25.61%)` | :arrow_down: |\n| [scapy/tools/UTscapy.py](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdG9vbHMvVVRzY2FweS5weQ==) | `59.06% <50.00%> (-3.89%)` | :arrow_down: |\n| [scapy/utils.py](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `27.15% <50.00%> (-50.76%)` | :arrow_down: |\n| [scapy/layers/isakmp.py](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lzYWttcC5weQ==) | `51.21% <63.15%> (-37.97%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `64.05% <85.71%> (-27.63%)` | :arrow_down: |\n| [scapy/contrib/ikev2.py](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pa2V2Mi5weQ==) | `81.56% <95.65%> (-12.70%)` | :arrow_down: |\n| [scapy/contrib/automotive/ecu.py](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `79.16% <100.00%> (-14.39%)` | :arrow_down: |\n| ... and [228 more](https://codecov.io/gh/secdev/scapy/pull/3930?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "Please properly rebase against master, this is broken",
      "> Please properly rebase against master, this is broken\r\n\r\nSure, will do it ASAP. Resync, create one commit and put there? My git-fu is not the best 😁"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac2da88c0a76e0a515ef",
    "number": 3929,
    "body": null,
    "head_branch": "fix_codespell",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3929](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3d18748) into [master](https://codecov.io/gh/secdev/scapy/commit/81b51d00c26d3db36d1a1e2af5ff51d4b7aa7d95?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (81b51d0) will **increase** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3929   +/-   ##\n=======================================\n  Coverage   86.54%   86.54%           \n=======================================\n  Files         310      310           \n  Lines       70619    70619           \n=======================================\n+ Hits        61119    61120    +1     \n+ Misses       9500     9499    -1     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/homeplugav.py](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ob21lcGx1Z2F2LnB5) | `85.57% <ø> (ø)` | |\n| [scapy/layers/bluetooth.py](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `86.22% <ø> (ø)` | |\n| [scapy/layers/tls/session.py](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `87.89% <0.00%> (-0.32%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `74.31% <0.00%> (-0.22%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `84.26% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/uds\\_scan.py](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3Vkc19zY2FuLnB5) | `88.24% <0.00%> (+0.16%)` | :arrow_up: |\n| [scapy/config.py](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `81.06% <0.00%> (+0.18%)` | :arrow_up: |\n| [scapy/contrib/automotive/scanner/enumerator.py](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NjYW5uZXIvZW51bWVyYXRvci5weQ==) | `93.12% <0.00%> (+0.26%)` | :arrow_up: |\n| [scapy/contrib/automotive/scanner/executor.py](https://codecov.io/gh/secdev/scapy/pull/3929?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NjYW5uZXIvZXhlY3V0b3IucHk=) | `88.98% <0.00%> (+0.88%)` | :arrow_up: |\n",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "fix codespell\n\nfix codespell"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac2ea88c0a76e0a515f0",
    "number": 3928,
    "body": "This commit speeds up the internal handling of\r\nmessages",
    "head_branch": "python_can_speedup",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3928?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3928](https://codecov.io/gh/secdev/scapy/pull/3928?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9e65676) into [master](https://codecov.io/gh/secdev/scapy/commit/8ae53f098098db444d6fa76fefdf5adbda08a368?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8ae53f0) will **increase** coverage by `0.18%`.\n> The diff coverage is `88.88%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3928      +/-   ##\n==========================================\n+ Coverage   81.68%   81.86%   +0.18%     \n==========================================\n  Files         326      326              \n  Lines       75406    75409       +3     \n==========================================\n+ Hits        61595    61735     +140     \n+ Misses      13811    13674     -137     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3928?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cansocket\\_python\\_can.py](https://codecov.io/gh/secdev/scapy/pull/3928?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `88.59% <86.20%> (+6.42%)` | :arrow_up: |\n| [scapy/layers/can.py](https://codecov.io/gh/secdev/scapy/pull/3928?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Nhbi5weQ==) | `92.97% <93.75%> (+0.25%)` | :arrow_up: |\n\n... and [12 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3928/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "This padding is necessary for CANFD. CANFD doesn’t support other lengths, since the length is only encoded in 5bits on the wire.--  Mit freundlichen Grüßen  Dr. Nils WeißOn 15. Mar 2023, at 20:43, Damian Zaręba ***@***.***> wrote:﻿\n@KhazAkar commented on this pull request.\n\n\n\nIn scapy/layers/can.py:\n> +            wire_length = 20\n+        elif 20 < length <= 24:\n+            wire_length = 24\n+        elif 24 < length <= 32:\n+            wire_length = 32\n+        elif 32 < length <= 40:\n+            wire_length = 40\n+        elif 40 < length <= 48:\n+            wire_length = 48\n+        elif 48 < length <= 56:\n+            wire_length = 56\n+        elif 56 < length <= 64:\n+            wire_length = 64\n+        else:\n+            wire_length = length\n+\n\nSometimes padding is different than 0x00. Do you see having it configurable (byte value used as padding, as well as option to remove it entirely) for both CAN and CAN FD as valuable?\n\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you authored the thread.Message ID: ***@***.***>",
      "> This padding is necessary for CANFD. CANFD doesn’t support other lengths, since the length is only encoded in 5bits on the wire.--  Mit freundlichen Grüßen  Dr. Nils Weiß\r\n\r\nFine for me, but having configurable padding in terms of byte selected might help with really weird systems :)",
      "Well, if the padding is present, or not, isn't configurable once you send CANFD frames on a bus. This padding is mandatory. For now, I would just do a zero padding. If you have a concrete usecase for a user defined padding, feel free to update the PR",
      "Sorry for the delay and thanks a lot for the PR !",
      "@gpotter2 Can this PR get merged?",
      "Tests actually fail on pypy :/",
      "Looks like the \"canfdsocket_native\" test passes on `6.2.10-200.fc37.x86_64`. Thanks! Below is its output on that machine just in case:\r\n<details>\r\n<summary>(006)=[passed] CAN Socket send recv small packet without remove padding</summary>\r\n\r\n```sh\r\n###(006)=[passed] CAN Socket send recv small packet without remove padding\r\n\r\n>>> conf.contribs['CAN'] = {'swap-bytes': False, 'remove-padding': False}\r\n>>>\r\n>>> sock2 = CANSocket(channel=\"vcan0\", fd=True)\r\n>>> sock2.send(CANFD(identifier=0x7ff,length=9,data=b'\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\xaa'))\r\n72\r\n>>> sock2.send(CAN(identifier=0x7ff,length=8,data=b'\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08'))\r\n72\r\n>>> sock2.close()\r\n>>>\r\n>>> rx = sock1.recv()\r\n>>> assert rx == CANFD(identifier=0x7ff,length=12,data=b'\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\xaa\\x00\\x00\\x00') / Padding(b\"\\x00\" * (64 - 12))\r\n>>> rx = sock1.recv()\r\n>>> hexdump(rx)\r\n0000  00 00 07 FF 08 04 00 00 01 02 03 04 05 06 07 08  ................\r\n0010  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\r\n0020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\r\n0030  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\r\n0040  00 00 00 00 00 00 00 00                          ........\r\n>>> test = CANFD(identifier=0x7ff, fd_flags=0, length=8,data=b'\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08') / Padding(b\"\\x00\" * (64 - 8))\r\n>>> hexdump(test)\r\n0000  00 00 07 FF 08 00 00 00 01 02 03 04 05 06 07 08  ................\r\n0010  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\r\n0020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\r\n0030  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\r\n0040  00 00 00 00 00 00 00 00                          ........\r\n>>> test2 = CANFD(identifier=0x7ff,fd_flags=4, length=8,data=b'\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08') / Padding(b\"\\x00\" * (64 - 8))\r\n>>> hexdump(test2)\r\n0000  00 00 07 FF 08 04 00 00 01 02 03 04 05 06 07 08  ................\r\n0010  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\r\n0020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\r\n0030  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\r\n0040  00 00 00 00 00 00 00 00                          ........\r\n>>> assert bytes(rx) in [bytes(test), bytes(test2)]\r\n```\r\n</details>\r\n\r\n\r\nFWIW I think to make it easier to run the vcan tests in containers where `modprobe vcan` doesn't work the `.config/ci/test.sh` script could also run something like `lsmod | grep vcan` to check whether the module is already loaded by the kernel and can be used without trying to load it first but it has nothing to do with this PR."
    ],
    "commit_messages": [
      "Refactoring of PythonCANSocket (#3928)\n\n* Refactoring of PythonCANSocket\r\n\r\nThis commit speeds up the internal handling of\r\nmessages\r\n\r\nCo-authored-by: Enrico Pozzobon <enrico@epozzobon.it>\r\n\r\n* try to install vcan\r\n\r\n* add ubuntu-18.04 to unittest.yml to test VCAN on linux\r\n\r\n* fix canfd unit test\r\n\r\n* Update cansocket_python_can.py\r\n\r\nreal-world ECU fixes\r\n\r\n* fix flake8\r\n\r\n* add scanner tag to gmlanutils tests\r\n\r\n* debugging\r\n\r\n* improve CANFD\r\n\r\n* fix flake8\r\n\r\n* update unit test\r\n\r\n* try to fix unit test\r\n\r\n* try to fix unit test\r\n\r\n* try to fix unit test\r\n\r\n* fix comments\r\n\r\n* add tags to ubuntu machine\r\n\r\n* try to run vcan on ubuntu 20.04\r\n\r\n* try to run vcan on ubuntu 20.04\r\n\r\n* fix workflow\r\n\r\n* add vcan tests\r\n\r\n* add not_pypy to test/contrib/canfdsocket_python_can.uts\r\n\r\n* fix tests\r\n\r\n* remove ubuntu 20.04 machine\r\n\r\n---------\r\n\r\nCo-authored-by: Nils Weiss <nils@dissec.to>\r\nCo-authored-by: Enrico Pozzobon <enrico@epozzobon.it>\r\nCo-authored-by: Nils Weiss <nils@dissecto.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac2ea88c0a76e0a515f1",
    "number": 3927,
    "body": "just to make sure that without this the test suite no longer times out with pypy on the CI.\r\n\r\nThis reverts commit 669506bd42e4141718374ba297974881fe125fb8.\r\n",
    "head_branch": "revert-pyproject",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3927](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (619f883) into [master](https://codecov.io/gh/secdev/scapy/commit/81b51d00c26d3db36d1a1e2af5ff51d4b7aa7d95?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (81b51d0) will **decrease** coverage by `36.49%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3927       +/-   ##\n===========================================\n- Coverage   86.54%   50.06%   -36.49%     \n===========================================\n  Files         310      228       -82     \n  Lines       70619    53310    -17309     \n===========================================\n- Hits        61119    26690    -34429     \n- Misses       9500    26620    +17120     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/linux.py](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saW51eC5weQ==) | `0.51% <0.00%> (-84.50%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `3.31% <0.00%> (-80.95%)` | :arrow_down: |\n| [scapy/sessions.py](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2Vzc2lvbnMucHk=) | `19.28% <0.00%> (-76.26%)` | :arrow_down: |\n| [scapy/sendrecv.py](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `13.24% <0.00%> (-74.13%)` | :arrow_down: |\n| [scapy/contrib/igmp.py](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pZ21wLnB5) | `27.69% <0.00%> (-72.31%)` | :arrow_down: |\n| [scapy/layers/tls/cert.py](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jZXJ0LnB5) | `16.98% <0.00%> (-71.19%)` | :arrow_down: |\n| [scapy/layers/tls/record.py](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmQucHk=) | `20.81% <0.00%> (-71.09%)` | :arrow_down: |\n| [scapy/layers/tls/record\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfc3NsdjIucHk=) | `16.75% <0.00%> (-69.28%)` | :arrow_down: |\n| [scapy/route.py](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcm91dGUucHk=) | `21.53% <0.00%> (-68.47%)` | :arrow_down: |\n| [scapy/layers/tls/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b24ucHk=) | `15.78% <0.00%> (-67.67%)` | :arrow_down: |\n| ... and [259 more](https://codecov.io/gh/secdev/scapy/pull/3927?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac2fa88c0a76e0a515f2",
    "number": 3926,
    "body": "- Used in 802.11n 2.4GHz 20/40 MHz coex\r\n- 802.11-2016 9.4.2.59\r\n- Add unit test",
    "head_branch": "dot11_obss",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3926?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3926](https://codecov.io/gh/secdev/scapy/pull/3926?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ee44e99) into [master](https://codecov.io/gh/secdev/scapy/commit/6c4c2babce60e2adebf5212bfd7be6ba0332aef9?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6c4c2ba) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3926      +/-   ##\n==========================================\n- Coverage   86.97%   86.96%   -0.01%     \n==========================================\n  Files         310      310              \n  Lines       70597    70600       +3     \n==========================================\n- Hits        61399    61396       -3     \n- Misses       9198     9204       +6     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3926?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dot11.py](https://codecov.io/gh/secdev/scapy/pull/3926?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RvdDExLnB5) | `91.25% <100.00%> (+0.04%)` | :arrow_up: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3926?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `83.87% <0.00%> (-0.77%)` | :arrow_down: |\n| [scapy/layers/tls/crypto/cipher\\_aead.py](https://codecov.io/gh/secdev/scapy/pull/3926?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY2lwaGVyX2FlYWQucHk=) | `87.77% <0.00%> (-0.44%)` | :arrow_down: |\n| [scapy/layers/tls/handshake\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3926?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9oYW5kc2hha2Vfc3NsdjIucHk=) | `91.98% <0.00%> (-0.39%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3926?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `74.31% <0.00%> (-0.22%)` | :arrow_down: |\n| [scapy/layers/tls/session.py](https://codecov.io/gh/secdev/scapy/pull/3926?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `88.20% <0.00%> (+0.31%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Add 802.11 Overlapping BSS Scan Parameters (OBSS)\n\n- Used in 802.11n 2.4GHz 20/40 MHz coex\n- 802.11-2016 9.4.2.59\n- Add unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac30a88c0a76e0a515f3",
    "number": 3925,
    "body": "* improve dissection of IKEv2 redirect notifications\r\n\r\n  See RFC 5685, section 9\r\n\r\n* add some more missing notifications\r\n\r\n  https://www.iana.org/assignments/ikev2-parameters/ikev2-parameters.xml\r\n\r\n\r\n**Checklist:**\r\n-   [x] I added unit tests\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n\r\n\r\nReplaces #3779",
    "head_branch": "ikev2-redirect",
    "is_a_fork": true,
    "comments": [
      "`tox -e spell` fails because the spell checker fails to spell check the key exchange payload?!  \r\n\r\nWhat I can I do to prevent it from spell checking `bytes` objects?\r\n```\r\ntest/contrib/ikev2.uts:1532: WyA ==> way\r\n```\r\n\r\nhttps://github.com/secdev/scapy/blob/d6a50110b8d27df6ab5b2245c1ed779bdedf7ab3/test/contrib/ikev2.uts#L1532",
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3925?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3925](https://codecov.io/gh/secdev/scapy/pull/3925?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (eb97f7b) into [master](https://codecov.io/gh/secdev/scapy/commit/d05de38207a1775adb6db6c5c3f635fc0c993dcd?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d05de38) will **increase** coverage by `4.89%`.\n> The diff coverage is `100.00%`.\n\n> :exclamation: Current head eb97f7b differs from pull request most recent head 3c5dcdb. Consider uploading reports for the commit 3c5dcdb to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3925      +/-   ##\n==========================================\n+ Coverage   81.64%   86.53%   +4.89%     \n==========================================\n  Files         326      310      -16     \n  Lines       75429    70598    -4831     \n==========================================\n- Hits        61582    61093     -489     \n+ Misses      13847     9505    -4342     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3925?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/ikev2.py](https://codecov.io/gh/secdev/scapy/pull/3925?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pa2V2Mi5weQ==) | `95.41% <100.00%> (+0.48%)` | :arrow_up: |\n\n... and [53 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3925/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "You can use `b'\\x57\\x61\\x59'`",
      "I overlooked something, see [fixup commit](https://github.com/secdev/scapy/pull/3925/commits/eb97f7bc16e1d517117a71136e20b7111896cf5e).  Since I edited the original tcpdump capture using the broken implementation, I need to fix the test.\r\n",
      "The [CI failure](https://github.com/secdev/scapy/actions/runs/4338322700/jobs/7574937380) seems to be unrelated.",
      "Last force-push was a plain rebase on the master branch without further changes. CI is clean now."
    ],
    "commit_messages": [
      "IKEv2: improve dissection of IKEv2 redirect notifications (#3925)\n\n* improve dissection of IKEv2 redirect notifications\r\n\r\n  See RFC 5685, section 9\r\n\r\n* add some more missing notifications\r\n\r\n  https://www.iana.org/assignments/ikev2-parameters/ikev2-parameters.xml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac31a88c0a76e0a515f4",
    "number": 3924,
    "body": "- try to understand why tests fail on pypy39",
    "head_branch": "fix-pypy39-tests",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3924?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3924](https://codecov.io/gh/secdev/scapy/pull/3924?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (46744bb) into [master](https://codecov.io/gh/secdev/scapy/commit/378be02c7bf4d5dadac34008f3a5b979d85882d8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (378be02) will **decrease** coverage by `5.22%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3924      +/-   ##\n==========================================\n- Coverage   86.96%   81.74%   -5.22%     \n==========================================\n  Files         310      327      +17     \n  Lines       70619    74712    +4093     \n==========================================\n- Hits        61417    61077     -340     \n- Misses       9202    13635    +4433     \n```\n\n[see 45 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3924/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Judging by https://github.com/secdev/scapy/pull/3927 https://github.com/secdev/scapy/commit/669506bd42e4141718374ba297974881fe125fb8 seems to be the culprit. With that commit reverted the test suite no longer times out with PyPy. I haven't figured out what exactly caused the regression yet though.",
      "Nice catch @evverx. I had some suspicions but that lead me on the right track: it silently broke the config of `coverage.py` which actually ran coverage on.. all of Python, leading to huge perf losses & some automotive tests to crash.\r\nsee https://github.com/secdev/scapy/pull/3924/commits/46fde3e8e8859a102672fce801da4651deda449d",
      "> it silently broke the config of coverage.py\r\n\r\nGiven how hard it is to spot I think it would be great if `coverage` complained about that. Looking at https://coverage.readthedocs.io/en/stable/config.html it seems all options always go into their own subsections.\r\n\r\n> see https://github.com/secdev/scapy/commit/46fde3e8e8859a102672fce801da4651deda449d\r\n\r\nI have to admit it didn't even occur to me to look at that part of `pyproject.toml`. My guess was that wheels broke something somehow."
    ],
    "commit_messages": [
      "Minor tests & coverage fixes (#3924)\n\n* Lord of the fix: The Return of the tests\r\n\r\n* Various minor test fixes\r\n\r\n* Appveyor: use new codecov\r\n\r\n* Better codecov rules"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac32a88c0a76e0a515f5",
    "number": 3923,
    "body": "In my opinion, a (much) better fix for https://github.com/secdev/scapy/issues/3894\r\n\r\nfixes https://github.com/secdev/scapy/issues/3894\r\ncloses https://github.com/secdev/scapy/pull/3919",
    "head_branch": "fix-nestedlist",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3923?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3923](https://codecov.io/gh/secdev/scapy/pull/3923?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4b87959) into [master](https://codecov.io/gh/secdev/scapy/commit/181aa4d5149fbf1b19fbf93650bc9a62ab948138?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (181aa4d) will **decrease** coverage by `0.03%`.\n> The diff coverage is `92.30%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3923      +/-   ##\n==========================================\n- Coverage   81.77%   81.74%   -0.03%     \n==========================================\n  Files         327      327              \n  Lines       74712    74722      +10     \n==========================================\n- Hits        61093    61081      -12     \n- Misses      13619    13641      +22     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3923?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/packet.py](https://codecov.io/gh/secdev/scapy/pull/3923?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `83.23% <92.30%> (+0.04%)` | :arrow_up: |\n\n... and [10 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3923/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Looks like the test failure is related. As far as I can see when `dns_ans2.qd.qname` is changed explicitly the cache isn't invalidated :\r\n```sh\r\n>>> dns_ans2.qd.qname = \"www.secdev.org.\"\r\n>>> b\"\\x03www\\x06secdev\\x03org\\x00\" in raw(dns_ans2)\r\nFalse\r\n...\r\n>>> dns_ans2.clear_cache()\r\n>>> b\"\\x03www\\x06secdev\\x03org\\x00\" in raw(dns_ans2)\r\nTrue\r\n```",
      "I tweaked it a bit, it's working fine now"
    ],
    "commit_messages": [
      "Fix nested ListFields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac33a88c0a76e0a515f6",
    "number": 3921,
    "body": "This PR fixes #3918.",
    "head_branch": "Issue_3918",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3921](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f4194ac) into [master](https://codecov.io/gh/secdev/scapy/commit/c54ca02ccacaee9257e9fd19741391743b543b44?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c54ca02) will **decrease** coverage by `0.43%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3921      +/-   ##\n==========================================\n- Coverage   86.96%   86.53%   -0.43%     \n==========================================\n  Files         310      310              \n  Lines       70606    70608       +2     \n==========================================\n- Hits        61401    61103     -298     \n- Misses       9205     9505     +300     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils.py](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `77.75% <100.00%> (-0.17%)` | :arrow_down: |\n| [scapy/arch/bpf/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9icGYvc3VwZXJzb2NrZXQucHk=) | `23.10% <0.00%> (-48.11%)` | :arrow_down: |\n| [scapy/layers/dhcp6.py](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3A2LnB5) | `63.10% <0.00%> (-22.01%)` | :arrow_down: |\n| [scapy/arch/bpf/core.py](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9icGYvY29yZS5weQ==) | `80.30% <0.00%> (-6.82%)` | :arrow_down: |\n| [scapy/libs/winpcapy.py](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy93aW5wY2FweS5weQ==) | `67.16% <0.00%> (-2.39%)` | :arrow_down: |\n| [scapy/route6.py](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcm91dGU2LnB5) | `85.95% <0.00%> (-2.25%)` | :arrow_down: |\n| [scapy/layers/tls/record\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfc3NsdjIucHk=) | `86.03% <0.00%> (-1.68%)` | :arrow_down: |\n| [scapy/layers/tls/handshake\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9oYW5kc2hha2Vfc3NsdjIucHk=) | `91.98% <0.00%> (-1.15%)` | :arrow_down: |\n| [scapy/layers/tls/basefields.py](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9iYXNlZmllbGRzLnB5) | `85.90% <0.00%> (-0.68%)` | :arrow_down: |\n| [scapy/layers/l2.py](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `84.25% <0.00%> (-0.64%)` | :arrow_down: |\n| ... and [7 more](https://codecov.io/gh/secdev/scapy/pull/3921?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "Thanks, my mistake"
    ],
    "commit_messages": [
      "Fix RawPcapReader usage with a Context Manager"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac33a88c0a76e0a515f7",
    "number": 3919,
    "body": "When do_dissect copies list fields it traverses them all the way down and it takes a lot of time and RAM if they are deeply nested. This patch addresses that by limiting the maximum depth.\r\n\r\nIt's a follow-up to aabf4b56f01fa22e039f6cd69e8058e0648b38e0 (where scapy started copying lists by traversing them).\r\n\r\nCloses https://github.com/secdev/scapy/issues/3894",
    "head_branch": "deeply-nested-lists",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3919](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c2dac27) into [master](https://codecov.io/gh/secdev/scapy/commit/c54ca02ccacaee9257e9fd19741391743b543b44?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c54ca02) will **decrease** coverage by `3.44%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3919      +/-   ##\n==========================================\n- Coverage   86.96%   83.52%   -3.44%     \n==========================================\n  Files         310      309       -1     \n  Lines       70606    70300     -306     \n==========================================\n- Hits        61401    58721    -2680     \n- Misses       9205    11579    +2374     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.49% <100.00%> (-0.19%)` | :arrow_down: |\n| [scapy/layers/tls/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b24ucHk=) | `15.78% <0.00%> (-67.67%)` | :arrow_down: |\n| [scapy/contrib/automotive/gm/gmlanutils.py](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2dtL2dtbGFudXRpbHMucHk=) | `31.64% <0.00%> (-55.15%)` | :arrow_down: |\n| [scapy/layers/tftp.py](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3RmdHAucHk=) | `46.97% <0.00%> (-49.86%)` | :arrow_down: |\n| [scapy/layers/tuntap.py](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3R1bnRhcC5weQ==) | `36.89% <0.00%> (-45.64%)` | :arrow_down: |\n| [scapy/layers/tls/automaton\\_cli.py](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b25fY2xpLnB5) | `39.17% <0.00%> (-41.97%)` | :arrow_down: |\n| [scapy/layers/tls/automaton\\_srv.py](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b25fc3J2LnB5) | `34.67% <0.00%> (-39.61%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_packet.py](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9wYWNrZXQucHk=) | `65.94% <0.00%> (-33.34%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `42.59% <0.00%> (-31.73%)` | :arrow_down: |\n| [scapy/arch/linux.py](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saW51eC5weQ==) | `55.03% <0.00%> (-29.98%)` | :arrow_down: |\n| ... and [46 more](https://codecov.io/gh/secdev/scapy/pull/3919?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "The `pypy3.9` job appears to be flaky because it also failed in https://github.com/secdev/scapy/pull/3912 and https://github.com/secdev/scapy/pull/3881. I've just triggered the tests manually against the master branch without this PR and it timed out there too: https://github.com/evverx/scapy/actions/runs/4266423827/jobs/7533783333.",
      "Thanks! Your proposal looks good to me.",
      "Thanks for the proposal and taking the time to do a PR! I must say I hate it. This introduces broken, unexpected behaviors, why trying to fix a bug that has nothing to do with it. This is my take on the issue: https://github.com/secdev/scapy/pull/3923 feel free to have a look and tell me what you think",
      ">  I must say I hate it\r\n\r\nI have to say I don't like it either :-)\r\n\r\n> This is my take on the issue: https://github.com/secdev/scapy/pull/3923 feel free to have a look and tell me what you think\r\n\r\nWith that PR applied scapy relies on Python being able to handle RecursionErrors correctly (because that's how deep PacketListFields can be nested) and it doesn't always work with at least Python 3.8: https://github.com/secdev/scapy/issues/3145#issuecomment-1454702817. I think the depth should be limited one way or another anyway.",
      "> This introduces broken, unexpected behaviors\r\n\r\nFWIW I wouldn't say it's totally unexpected because depending on the recursion limit scapy already produces lists where `Raw(...)` is present. The only difference is that this PR prevents scapy from hitting RecursionError and bails out much earlier.",
      "Closing this in favor of https://github.com/secdev/scapy/pull/3923. I think RecursionErrors in general can be discussed in https://github.com/secdev/scapy/issues/3145."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac34a88c0a76e0a515f8",
    "number": 3917,
    "body": "Fix Geneve dissection.\r\n\r\nWith current implementation, in case of multiple Geneve options, only the first option is parsed correctly and the rest options are interpreted as its raw payload. \r\n\r\n",
    "head_branch": "fix-geneve-dissection",
    "is_a_fork": true,
    "comments": [
      "@inthefog could you remove the `.DS_Store` files from the commit? My guess would be that they ended up there accidentally. (I think it would probably make sense to add `.DS_Store` to `.gitignore`).\r\n\r\nCould you also add a test to https://github.com/secdev/scapy/blob/master/test/contrib/geneve.uts to make sure that multiple options are dissected correctly? I don't think this scenario is covered by any tests at this point.",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3917?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3917](https://app.codecov.io/gh/secdev/scapy/pull/3917?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (02d5888) into [master](https://app.codecov.io/gh/secdev/scapy/commit/c54ca02ccacaee9257e9fd19741391743b543b44?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c54ca02) will **decrease** coverage by `4.19%`.\n> Report is 216 commits behind head on master.\n> The diff coverage is `100.00%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3917      +/-   ##\n==========================================\n- Coverage   86.96%   82.77%   -4.19%     \n==========================================\n  Files         310      352      +42     \n  Lines       70606   101297   +30691     \n==========================================\n+ Hits        61401    83853   +22452     \n- Misses       9205    17444    +8239     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/3917?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/geneve.py](https://app.codecov.io/gh/secdev/scapy/pull/3917?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9nZW5ldmUucHk=) | `97.72% <100.00%> (+0.42%)` | :arrow_up: |\n\n... and [210 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3917/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "> @inthefog could you remove the `.DS_Store` files from the commit? My guess would be that they ended up there accidentally. (I think it would probably make sense to add `.DS_Store` to `.gitignore`).\r\n> \r\n> Could you also add a test to https://github.com/secdev/scapy/blob/master/test/contrib/geneve.uts to make sure that multiple options are dissected correctly? I don't think this scenario is covered by any tests at this point.\r\n\r\nDone. Thanks for the review."
    ],
    "commit_messages": [
      "Fix Geneve dissection (#3917)\n\n* fix Geneve dissection\r\n\r\n* Removed accidentally added local files and added unit test.\r\n\r\n* Little enhancement of Geneve multiple options test\r\n\r\n* Removed redundant line from gitignore"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac35a88c0a76e0a515f9",
    "number": 3915,
    "body": "The count field of ACKNACK submessage is an integer field and should be packed using the endianness flag, just like how the count field of HEARTBEAT submessage is handled.\r\n\r\nCurrently, `count=1` is incorrectly packed as `\"\\x00\\x00\\x00\\x01\"` (== 16777216), regardless of the endianness bit. With this change, `count=1` is correctly packed as `\"\\x01\\x00\\x00\\x00\"` (== 1), given the endianness is set.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Hi ! Thanks a lot for the PR !\r\nWould you mind adding a unit test to https://github.com/secdev/scapy/tree/master/test/contrib/rtps.uts\r\nThanks",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3915?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3915](https://app.codecov.io/gh/secdev/scapy/pull/3915?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e01d371) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5fa6428a1843fb851d8c6de1d0c59dad0168df78?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5fa6428) will **increase** coverage by `29.58%`.\n> Report is 5 commits behind head on master.\n> The diff coverage is `n/a`.\n\n> :exclamation: Current head e01d371 differs from pull request most recent head 580761c. Consider uploading reports for the commit 580761c to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3915       +/-   ##\n===========================================\n+ Coverage   49.60%   79.19%   +29.58%     \n===========================================\n  Files         341      319       -22     \n  Lines       76081    70225     -5856     \n===========================================\n+ Hits        37742    55616    +17874     \n+ Misses      38339    14609    -23730     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/3915?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/rtps/rtps.py](https://app.codecov.io/gh/secdev/scapy/pull/3915?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ydHBzL3J0cHMucHk=) | `98.82% <ø> (+12.94%)` | :arrow_up: |\n\n... and [270 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3915/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "@gpotter2 added!",
      "Very sorry for the delay !"
    ],
    "commit_messages": [
      "RTPS: Pack count field of ACKNACK submessage correctly (#3915)\n\n* Pack count field of ACKNACK submessage correctly\r\n\r\nThe count field of ACKNACK submessage is an integer field and should be packed using the endianness flag, just like how the count field of HEARTBEAT submessage is handled.\r\n\r\nCurrently, `count=1` is incorrectly packed as `\"\\x00\\x00\\x00\\x01\"` (== 16777216), regardless of the endianness bit.\r\nWith this change, `count=1` is correctly packed as `\"\\x01\\x00\\x00\\x00\"` (== 1), given the endianness is set.\r\n\r\n* add a unit test\r\n\r\nSigned-off-by: Seulbae Kim <squizz617@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Seulbae Kim <squizz617@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac36a88c0a76e0a515fa",
    "number": 3914,
    "body": "As per DDS-RTPS specification, `firstSN` (named `firstAvailableSeqNum` in scapy) and `lastSN` (named `lastSeqNum` in scapy) fields of a Heartbeat submessage are of type `SequenceNumber_t`, which consists of two subfields, namely, `int32_t high` and `uint32_t low`. This change allows us to correctly assign values to fields.\r\n\r\nFor example, currently, `firstAvailableSeqNum = 0x01` is packed as `\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00`, which is semantically wrong. With the change, it is packed as `\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00`.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hi ! Thanks a lot for the PR !\r\nWould you mind adding a unit test to https://github.com/secdev/scapy/tree/master/test/contrib/rtps.uts\r\nThanks",
      "Hi @gpotter2, I added a unit test.",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3914?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3914](https://app.codecov.io/gh/secdev/scapy/pull/3914?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c2bd73c) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5fa6428a1843fb851d8c6de1d0c59dad0168df78?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5fa6428) will **increase** coverage by `32.02%`.\n> Report is 2 commits behind head on master.\n> The diff coverage is `n/a`.\n\n> :exclamation: Current head c2bd73c differs from pull request most recent head ecc6436. Consider uploading reports for the commit ecc6436 to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3914       +/-   ##\n===========================================\n+ Coverage   49.60%   81.63%   +32.02%     \n===========================================\n  Files         341      326       -15     \n  Lines       76081    75429      -652     \n===========================================\n+ Hits        37742    61575    +23833     \n+ Misses      38339    13854    -24485     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/3914?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/rtps/rtps.py](https://app.codecov.io/gh/secdev/scapy/pull/3914?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ydHBzL3J0cHMucHk=) | `98.82% <ø> (+12.94%)` | :arrow_up: |\n\n... and [282 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3914/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Very sorry for the very long delay."
    ],
    "commit_messages": [
      "RTPS: Handle SequenceNumber_t correctly\n\nAs per DDS-RTPS specification, `firstSN` (named `firstAvailableSeqNum` in scapy) and `lastSN` (named `lastSeqNum` in scapy) fields of a Heartbeat submessage are of type `SequenceNumber_t`, which consists of two subfields, namely, `int32_t high` and `uint32_t low`. This change allows us to correctly assign values to fields.\n\nFor example, currently, `firstAvailableSeqNum = 0x01` is packed as `\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00`, which is semantically wrong.\nWith the change, it is packed as `\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac37a88c0a76e0a515fb",
    "number": 3912,
    "body": "This PR fixes three different issues. Below are the commit messages I copied verbatim just in case:\r\n<details>\r\n  <summary>Parse zero-length DHCP options as well</summary>\r\n\r\nUntil https://github.com/secdev/scapy/commit/0db2a8cfb02195e6bba777ef9794fd33e605f11f was merged zero-length\r\nDHCP options were parsed at least once and the \"options\" list contained\r\ntuples with at least two elements. This patch restores that.\r\n\r\nIt prevents `repr(DHCP(...))` from crashing with something like\r\n```\r\nTypeError: ord() expected a character, but string of length 23 found\r\n```\r\nand also lets the fields with meaningfull empty values to be initialized\r\nproperly. For example,\r\n```\r\n>>> DHCP(b\"\\x79\\x00\").options\r\n[('classless_static_routes',)]\r\n```\r\nturns into\r\n```\r\n[(\"classless_static_routes\", [])]\r\n```\r\n\r\nIt's a follow-up to https://github.com/secdev/scapy/commit/0db2a8cfb02195e6bba777ef9794fd33e605f11f\r\n</details>\r\n\r\n<details>\r\n<summary>Fix the \"Classless Static Route\" parser</summary>\r\n\r\nFieldListField expects its fields to either fully consume bytes or throw\r\nexceptions if those bytes can't be consumed. The \"Classless Static\r\nRoute\" field didn't do that when it received invalid subnet mask widths\r\nand it led to a loop where FieldListField tried to parse the same\r\nsequence of bytes and append the same value to the list over and over\r\nagain until scapy got interrupted manually or got killed by the OOM killer.\r\n\r\nThis patch addresses that by throwing exceptions when classless static\r\nroutes can't be consumed. It basically relies on inet_ntoa rejecting\r\nanything other than 4 bytes. The test suite is updated to cover the\r\ncorner cases. Other than that the DHCP parser was fuzzed for about an\r\nhour and nothing popped up.\r\n\r\nIt's a follow-up to https://github.com/secdev/scapy/commit/f5b718881441637e9f8cab75515981b32247f707\r\n</details>\r\n",
    "head_branch": "dhcp-fixes",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3912](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ec63020) into [master](https://codecov.io/gh/secdev/scapy/commit/c54ca02ccacaee9257e9fd19741391743b543b44?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c54ca02) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3912      +/-   ##\n==========================================\n- Coverage   86.96%   86.96%   -0.01%     \n==========================================\n  Files         310      310              \n  Lines       70606    70608       +2     \n==========================================\n+ Hits        61401    61402       +1     \n- Misses       9205     9206       +1     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dhcp.py](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3AucHk=) | `83.76% <100.00%> (+3.04%)` | :arrow_up: |\n| [scapy/layers/tls/record\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfc3NsdjIucHk=) | `86.03% <0.00%> (-1.68%)` | :arrow_down: |\n| [scapy/layers/tls/handshake\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9oYW5kc2hha2Vfc3NsdjIucHk=) | `91.98% <0.00%> (-1.15%)` | :arrow_down: |\n| [scapy/layers/tls/basefields.py](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9iYXNlZmllbGRzLnB5) | `85.90% <0.00%> (-0.68%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `83.87% <0.00%> (-0.39%)` | :arrow_down: |\n| [scapy/contrib/automotive/ecu.py](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `93.26% <0.00%> (-0.33%)` | :arrow_down: |\n| [scapy/layers/tls/session.py](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `87.89% <0.00%> (-0.32%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3912?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `74.53% <0.00%> (+0.21%)` | :arrow_up: |\n",
      "Great work ! Thanks for the PR"
    ],
    "commit_messages": [
      "Various DHCP fixes (#3912)\n\n* Parse zero-length DHCP options as well\r\n\r\nUntil 0db2a8cfb02195e6bba777ef9794fd33e605f11f was merged zero-length\r\nDHCP options were parsed at least once and the \"options\" list contained\r\ntuples with at least two elements. This patch restores that.\r\n\r\nIt prevents `repr(DHCP(...))` from crashing with something like\r\n```\r\nTypeError: ord() expected a character, but string of length 23 found\r\n```\r\nand also lets the fields with meaningfull empty values to be initialized\r\nproperly. For example,\r\n```\r\n>>> DHCP(b\"\\x79\\x00\").options\r\n[('classless_static_routes',)]\r\n```\r\nturns into\r\n```\r\n[(\"classless_static_routes\", [])]\r\n```\r\n\r\nIt's a follow-up to 0db2a8cfb02195e6bba777ef9794fd33e605f11f\r\n\r\n* Fix the \"Classless Static Route\" parser\r\n\r\nFieldListField expects its fields to either fully consume bytes or throw\r\nexceptions if those bytes can't be consumed. The \"Classless Static\r\nRoute\" field didn't do that when it received invalid subnet mask widths\r\nand it led to a loop where FieldListField tried to parse the same\r\nsequence of bytes and append the same value to the list over and over\r\nagain until scapy got interrupted manually or got killed by the OOM killer.\r\n\r\nThis patch addresses that by throwing exceptions when classless static\r\nroutes can't be consumed. It basically relies on inet_ntoa rejecting\r\nanything other than 4 bytes. The test suite is updated to cover the\r\ncorner cases. Other than that the DHCP parser was fuzzed for about an\r\nhour and nothing popped up.\r\n\r\nIt's a follow-up to f5b718881441637e9f8cab75515981b32247f707"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac38a88c0a76e0a515fc",
    "number": 3911,
    "body": "this PR adds CFDP (CCSDS File Delivery Protocol)\r\nthis protocol is used to transfer files and file-system actions between satellites and/or space probes\r\n\r\nthis work is only intended for decoding frames\r\n\r\nsorry there's no test so far, it has been only used to decode frames dumped via tcpdump while spying exchanges between instances created with https://gitlab.com/librecube/lib/python-cfdp\r\nsome parts are not coded because they haven't been triggered by the exchanges\r\nlater on, the decoders will be tested against other CFDP implementations\r\n\r\npylint score is 9.08/10\r\nthe remaining warnings are:\r\ncfdp.py:170:5: W0511: TODO 5.4.2 (fixme)\r\ncfdp.py:293:9: W0511: TODO fault locations TLV (fixme)\r\ncfdp.py:380:9: W0511: TODO segment_requests 5.2.6.1 (fixme)\r\ncfdp.py:356:54: W0108: Lambda may not be necessary (unnecessary-lambda)\r\ncfdp.py:398:53: W0108: Lambda may not be necessary (unnecessary-lambda)\r\ncfdp.py:414:17: W0108: Lambda may not be necessary (unnecessary-lambda)\r\ncfdp.py:418:17: W0108: Lambda may not be necessary (unnecessary-lambda)\r\ncfdp.py:424:17: W0108: Lambda may not be necessary (unnecessary-lambda)\r\n\r\nfor the TODOs, well, it has already been discused\r\nfor the lambda, they make the code easier to understand and others, identical, are not reported...",
    "head_branch": "contrib_cfdp_protocol",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac39a88c0a76e0a515fd",
    "number": 3909,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n\r\nEnsure that params that representing packets are set to type bytes. In certain situations where bgp fields for open messages were being set, this function was initializing packet variable to a str and returning.\r\n\r\nFix bgp path_attrib length field. Should be type byte, not int.\r\n\r\nAdding fuzz() support to bgp open and update.\r\n\r\nAllow for BGPFieldLenField len to be fuzzed, but fixed when recalled.\r\n\r\n",
    "head_branch": "bgp-fuzzing-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac39a88c0a76e0a515fe",
    "number": 3908,
    "body": "Based on rfc4303 / 2.2.1. Extended (64-bit) Sequence Number\r\n If a separate integrity algorithm is employed, the high\r\n order bits are included in the implicit ESP trailer, but are not\r\n transmitted, analogous to integrity algorithm padding bits. \r\n\r\nSo, for ESP mode when aead is not used, we need to add ESN to the end of packet to be authenticated (if authentication operation is required)\r\n",
    "head_branch": "develop-scapy",
    "is_a_fork": true,
    "comments": [
      "Thanks for your interest in Scapy. Could you share an example that triggers the issue?",
      "For example: \r\n\r\n``` python\r\ndata = 'hello world'\r\npkt_in = IP()/TCP()/data\r\n\r\nenc_key = b'\\x85\\xee\\x35\\x4b\\x46\\x75\\xa9\\xc5\\xd1\\x6e\\x3d\\x6f\\x41\\x18\\x04\\x3b'\r\nauth_key = b'\\x6f\\x79\\xbf\\x94\\xda\\x7d\\xde\\x3c\\x86\\x00\\x99\\x34\\xd9\\x25\\x8f\\x1b\\x3f\\xc2\\xf5\\x38\\x2a\\xca\\x9c\\x9c\\xb8\\xe2\\x16\\xee\\xd2\\x35\\xf3\\x4c'\r\n\r\nsa = SecurityAssociation(ESP, spi=0xcf54ccdf, crypt_algo='AES-CBC', crypt_key=enc_key, \r\n                         auth_algo='SHA2-256-128', auth_key=auth_key,\r\n                         esn_en=True, esn=68)\r\npkt_processed = sa.encrypt(pkt=pkt_in, iv=b'\\x11\\x22\\x33\\x44\\x11\\x22\\x33\\x44\\x11\\x22\\x33\\x44\\x11\\x22\\x33\\x44')\r\n```\r\n\r\nWhen print `raw(pkt_processed )`, we should obtain:\r\n\\x45\\x00\\x00\\x6c\\x00\\x01\\x00\\x00\\x40\\x32\\x39\\x8a\\xc0\\xa8\\x01\\x2c\\x7f\\x00\\x00\\x01\\xcf\\x54\\xcc\\xdf\\x00\\x00\\x00\\x01\\x11\\x22\\x33\\x44\\x11\\x22\\x33\\x44\\x11\\x22\\x33\\x44\\x11\\x22\\x33\\x44\\x56\\x00\\x34\\xf4\\x2c\\x6e\\xa9\\xae\\x47\\x5b\\x8d\\x3d\\x80\\xda\\x14\\xd8\\x30\\xf7\\x4e\\xdc\\x89\\x42\\x1d\\x9d\\x63\\x6c\\xa5\\xbc\\x76\\x2b\\x4d\\xeb\\xa8\\x99\\x40\\x8b\\xfd\\xa5\\x46\\x5d\\xc2\\x82\\xd2\\x5b\\xdd\\x20\\x9a\\x20 **\\x07\\xb2\\xe6\\x44\\xb6\\xe4\\xaa\\x84\\x2f\\xe8\\xab\\xa8\\xd6\\xf3\\x59\\x0e**\r\n\r\nHowever, the current scapy version outputs the following packet:\r\n\\x45\\x00\\x00\\x6c\\x00\\x01\\x00\\x00\\x40\\x32\\x39\\x8a\\xc0\\xa8\\x01\\x2c\\x7f\\x00\\x00\\x01\\xcf\\x54\\xcc\\xdf\\x00\\x00\\x00\\x01\\x11\\x22\\x33\\x44\\x11\\x22\\x33\\x44\\x11\\x22\\x33\\x44\\x11\\x22\\x33\\x44\\x56\\x00\\x34\\xf4\\x2c\\x6e\\xa9\\xae\\x47\\x5b\\x8d\\x3d\\x80\\xda\\x14\\xd8\\x30\\xf7\\x4e\\xdc\\x89\\x42\\x1d\\x9d\\x63\\x6c\\xa5\\xbc\\x76\\x2b\\x4d\\xeb\\xa8\\x99\\x40\\x8b\\xfd\\xa5\\x46\\x5d\\xc2\\x82\\xd2\\x5b\\xdd\\x20\\x9a\\x20 **\\x0a\\xc5\\x59\\x01\\xba\\x9a\\xdc\\x0c\\xf7\\x49\\x2f\\xe3\\x90\\xa4\\x9c\\x5c**\r\n\r\nThe `ICV` is wrongly computed because `esn` is not contained in the data for authentication",
      "Hello, could you take a look on this problem?",
      "Would you mind adding your example as a unit test here https://github.com/secdev/scapy/blob/master/test/scapy/layers/ipsec.uts#L4107\r\n\r\nYou can add a title for the test using `=`, then add Python code and eventually an assert to check for the correct value,",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3908?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3908](https://app.codecov.io/gh/secdev/scapy/pull/3908?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8f48ca3) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5fa6428a1843fb851d8c6de1d0c59dad0168df78?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5fa6428) will **increase** coverage by `2.85%`.\n> The diff coverage is `0.00%`.\n\n> :exclamation: Current head 8f48ca3 differs from pull request most recent head bde7596. Consider uploading reports for the commit bde7596 to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3908      +/-   ##\n==========================================\n+ Coverage   49.60%   52.46%   +2.85%     \n==========================================\n  Files         341      326      -15     \n  Lines       76081    75432     -649     \n==========================================\n+ Hits        37742    39576    +1834     \n+ Misses      38339    35856    -2483     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/3908?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ipsec.py](https://app.codecov.io/gh/secdev/scapy/pull/3908?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lwc2VjLnB5) | `28.77% <0.00%> (-0.80%)` | :arrow_down: |\n\n... and [215 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3908/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "I modified the test a bit to avoid the long code line",
      "The test is failing :/",
      "Hello, \r\n\r\nCould you explain why the test is failed?\r\nI just saw this error message but not sure why it happens:\r\n\r\n>>> assert raw(pkt_processed) == bytes(bytearray.fromhex(\r\n...     \"4500006c000100004032398ac0a8012c7f000001cf54ccdf000000011122\"\r\n...     \"3344112233441122334411223344560034f42c6ea9ae475b8d3d80da14d8\"\r\n...     \"30f74edc89421d9d636ca5bc762b4deba899408bfda5465dc282d25bdd20\"\r\n...     \"9a2007b2e644b6e4aa842fe8aba8d6f3590e\"))\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 3, in <module>\r\nAssertionError",
      "> Could you explain why the test is failed?\r\n\r\nLooks like the last assertion failed because `raw(pkt_processed)` is different from `bytes.fromhex(...)`:\r\n```sh\r\n>>> raw(pkt_processed)\r\nb'E\\x00\\x00l\\x00\\x01\\x00\\x00@2|]\\x7f\\x00\\x00\\x01\\x7f\\x00\\x00\\x01\\xcfT\\xcc\\xdf\\x00\\x00\\x00\\x01\\x11\"3D\\x11\"3D\\x11\"3D\\x11\"3DV\\x004\\xf4,n\\xa9\\xaeG[\\x8d=\\x80\\xda\\x14\\xd8y\\xb0\\x05\\xdc\\xc3\\xcf\\xac\\x1a\\xfc\\xb2U\\x9d-\\xde\\xbc\\xf2\\x0c\\x8eq\\x1bQ\\xbb\\xbb\\xb8\\xb33\\x8ePB\\xbf\"\\xf5\\t\\xd0\\xf4\\x80\\xebK\\xbd\\x0eMv\\x07\\t\\xed%\\xfa\\x1e'\r\n\r\n>>> bytes(bytearray.fromhex(\"4500006c000100004032398ac0a8012c7f000001cf54ccdf0000000111223344112233441122334411223344560034f42c6ea9ae475b8d3d80da14d830f74edc89421d9d636ca5bc762b4deba899408bfda5465dc282d25bdd209a200\r\n...: 7b2e644b6e4aa842fe8aba8d6f3590e\"))\r\nb'E\\x00\\x00l\\x00\\x01\\x00\\x00@29\\x8a\\xc0\\xa8\\x01,\\x7f\\x00\\x00\\x01\\xcfT\\xcc\\xdf\\x00\\x00\\x00\\x01\\x11\"3D\\x11\"3D\\x11\"3D\\x11\"3DV\\x004\\xf4,n\\xa9\\xaeG[\\x8d=\\x80\\xda\\x14\\xd80\\xf7N\\xdc\\x89B\\x1d\\x9dcl\\xa5\\xbcv+M\\xeb\\xa8\\x99@\\x8b\\xfd\\xa5F]\\xc2\\x82\\xd2[\\xdd \\x9a \\x07\\xb2\\xe6D\\xb6\\xe4\\xaa\\x84/\\xe8\\xab\\xa8\\xd6\\xf3Y\\x0e'\r\n```\r\nIt can be reproduced by launching `scapy` with `./run_scapy` and copy-pasting the test case."
    ],
    "commit_messages": [
      "Extended Sequence Numbers support in ESP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac3aa88c0a76e0a515ff",
    "number": 3906,
    "body": "It's more of a bug report at this point probably but it already contains one bug fix and a few tests reproducing the issue.\r\n\r\nI ran into this while I was looking for packs that don't match their unpacks.\r\n",
    "head_branch": "ipv6-jumbo-payload",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3906](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ae95049) into [master](https://codecov.io/gh/secdev/scapy/commit/669506bd42e4141718374ba297974881fe125fb8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (669506b) will **decrease** coverage by `27.23%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3906       +/-   ##\n===========================================\n- Coverage   86.93%   59.71%   -27.23%     \n===========================================\n  Files         310      285       -25     \n  Lines       70599    65592     -5007     \n===========================================\n- Hits        61378    39169    -22209     \n- Misses       9221    26423    +17202     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/inet6.py](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `40.83% <0.00%> (-47.48%)` | :arrow_down: |\n| [scapy/contrib/igmp.py](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pZ21wLnB5) | `27.69% <0.00%> (-72.31%)` | :arrow_down: |\n| [scapy/layers/tls/record.py](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmQucHk=) | `20.81% <0.00%> (-71.09%)` | :arrow_down: |\n| [scapy/layers/tls/cert.py](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jZXJ0LnB5) | `17.56% <0.00%> (-70.61%)` | :arrow_down: |\n| [scapy/layers/tls/record\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfc3NsdjIucHk=) | `16.75% <0.00%> (-69.28%)` | :arrow_down: |\n| [scapy/route6.py](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcm91dGU2LnB5) | `19.10% <0.00%> (-69.11%)` | :arrow_down: |\n| [scapy/route.py](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcm91dGUucHk=) | `21.53% <0.00%> (-68.47%)` | :arrow_down: |\n| [scapy/layers/tls/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b24ucHk=) | `15.78% <0.00%> (-67.67%)` | :arrow_down: |\n| [scapy/layers/sixlowpan.py](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NpeGxvd3Bhbi5weQ==) | `19.68% <0.00%> (-66.90%)` | :arrow_down: |\n| [scapy/layers/tls/crypto/hkdf.py](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vaGtkZi5weQ==) | `35.55% <0.00%> (-64.45%)` | :arrow_down: |\n| ... and [215 more](https://codecov.io/gh/secdev/scapy/pull/3906?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "Interesting PR, what's blocking?",
      "I haven't addressed the TODO parts yet. I put this PR on hold because there are some other issues I wanted to fix first. (They are minor though but they prevent my fuzz target from covering the core part of scapy). I'm slowly working on them. Plus https://github.com/secdev/scapy/pull/3709#issuecomment-1620438888 confirmed that the tests there can safely be changed so I'll probably try to resurrect that PR first. All in all this PR is on the backburner but I'm planning to get back to it eventually."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac3ba88c0a76e0a51600",
    "number": 3905,
    "body": "The BFD module of Scapy (contrib/bfd.py) does not support Optional Authentification as described in https://www.rfc-editor.org/rfc/rfc5880#section-6.7\r\n\r\n1. New class OptionalAuth is added to support all type of Authentification.\r\n2. The \"len\" field of the BFD class is switched from ByteField to FieldLenField in order to support variable length in case of auth is used.\r\n3. A ConditionnalField is added to the BFD class to add an OptionalAuth PacketField if the flag A is set.\r\n4. Original uts file is improved\r\n",
    "head_branch": "bfd",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3905](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e863b71) into [master](https://codecov.io/gh/secdev/scapy/commit/6eaffb309879e4bf2ef2d639f6d378fb785a9f10?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6eaffb3) will **increase** coverage by `36.88%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3905       +/-   ##\n===========================================\n+ Coverage   50.06%   86.95%   +36.88%     \n===========================================\n  Files         228      310       +82     \n  Lines       53270    70605    +17335     \n===========================================\n+ Hits        26672    61396    +34724     \n+ Misses      26598     9209    -17389     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/bfd.py](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9iZmQucHk=) | `94.73% <100.00%> (+1.40%)` | :arrow_up: |\n| [scapy/libs/six.py](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy9zaXgucHk=) | `54.47% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | | |\n| [scapy/arch/windows/structures.py](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL3N0cnVjdHVyZXMucHk=) | | |\n| [scapy/arch/windows/native.py](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL25hdGl2ZS5weQ==) | | |\n| [scapy/contrib/rpl\\_metrics.py](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ycGxfbWV0cmljcy5weQ==) | `98.66% <0.00%> (ø)` | |\n| [...ontrib/scada/iec104/iec104\\_information\\_elements.py](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9zY2FkYS9pZWMxMDQvaWVjMTA0X2luZm9ybWF0aW9uX2VsZW1lbnRzLnB5) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/bmw/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2Jtdy9fX2luaXRfXy5weQ==) | `100.00% <0.00%> (ø)` | |\n| [scapy/layers/tls/tools.py](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy90b29scy5weQ==) | `81.81% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/kwp.py](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2t3cC5weQ==) | `94.73% <0.00%> (ø)` | |\n| ... and [260 more](https://codecov.io/gh/secdev/scapy/pull/3905?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "Hi ! Could you fix the small PEP8 mistake? (see the first failed test) thanks !"
    ],
    "commit_messages": [
      "Add Optional Auth to BFD protocol (#3905)\n\n* Add Optional Authentification to BFD protocol\r\n\r\n* code cleaning\r\n\r\n* review modif\r\n\r\n* fix trailing whitespace\r\n\r\n---------\r\n\r\nCo-authored-by: ldaniel <ludovic.daniel@ssi.gouv.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac3ca88c0a76e0a51601",
    "number": 3904,
    "body": "Ether.hashret converts EtherTypes into bytes using the native byte order so the first two bytes of pkt.hashret in this particular case can be either b'\\xd9\\x88' or b'\\x88\\xd9'.\r\n\r\nTo judge from\r\nhttps://github.com/secdev/scapy/commit/43738be928242713837e36d522a530dd9bd1c2c9 and https://github.com/secdev/scapy/issues/3133\r\nthe idea behind this test was to make sure that both Ether.hashret and LLTD.hashret can be concatenated into bytes without throwing TypeErrors along the way and pkt.hashret()[2:] should be enough for that.\r\n\r\nNow that only\r\nPython3 is supported it could probably be replaced with just isinstance(bytes) but I thought it would still make sense to check that LLTD.hashret produces two zero bytes as expected.\r\n\r\nAnother option would probably be to check whether the test is run on big endian machines and swap the first two bytes accordingly or always use the same endianness to pack the \"type\" field but it can in theory break something because Ether().hashret() has always returned the \"type\" field packed in the machine's native order and some scripts can rely on that somehow probably.\r\n\r\nFixes the LLTD test on big-endian machines:\r\n```\r\n\r\n>>> pkt = Ether(raw(Ether(dst=ETHER_BROADCAST, src=RandMAC()) / LLTD(tos=0, function=0)))\r\n>>> assert LLTD in pkt\r\n>>> assert pkt.dst == pkt.real_dst\r\n>>> assert pkt.src == pkt.real_src\r\n>>> assert pkt.tos == 0\r\n>>> assert pkt.function == 0\r\n>>> assert pkt.hashret() == b'\\xd9\\x88\\x00\\x00'\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\nAssertionError\r\n```\r\n\r\nIt was tested on BE and LE machines in https://github.com/evverx/scapy/pull/1. Combined with https://github.com/secdev/scapy/pull/3903 it should finally make the tests pass on big-endian machines.",
    "head_branch": "lltd-hashret",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3904?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3904](https://codecov.io/gh/secdev/scapy/pull/3904?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2e5c29b) into [master](https://codecov.io/gh/secdev/scapy/commit/6eaffb309879e4bf2ef2d639f6d378fb785a9f10?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6eaffb3) will **decrease** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3904      +/-   ##\n==========================================\n- Coverage   50.06%   50.05%   -0.02%     \n==========================================\n  Files         228      228              \n  Lines       53270    53270              \n==========================================\n- Hits        26672    26666       -6     \n- Misses      26598    26604       +6     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3904?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3904?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3904?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3904?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.88% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3904?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Skip the Ether part of hashret in the LLTD build/dissection test (#3904)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac3da88c0a76e0a51602",
    "number": 3903,
    "body": "DataLen seems to be a little-endian field because it's defined with fmt='<H' explicitly. Wireshark dissects it as an unsigned short integer as well: https://github.com/wireshark/wireshark/blob/5ce29956e40a4c1e381d4b455c03225d9eda547b/epan/dissectors/packet-homeplug-av.c#L3526\r\n\r\nChecksum seems to be a little-endian field because it's defined with LEIntField and Wireshark dissects it accordingly:\r\nhttps://github.com/wireshark/wireshark/blob/5ce29956e40a4c1e381d4b455c03225d9eda547b/epan/dissectors/packet-homeplug-av.c#L3528\r\n\r\nThis patch was cross-checked with Wireshark to make sure that it can parse packets produced by Scapy and both DataLen and Checksum matched. For example Scapy showed\r\n```\r\n        DataLen   = 32768\r\n        Offset    = 0\r\n        checksum  = 4294967295\r\n```\r\nand then it was written to a pcap file that was read by Wireshark and it showed\r\n```\r\n    Write Module Data Request\r\n...\r\n        Length: 0x8000\r\n        Offset: 0x00000000\r\n        Checksum: 0xffffffff\r\n```\r\nas expected.\r\n\r\nThe patch was also tested on BE and LE machines in https://github.com/evverx/scapy/pull/1.\r\n\r\nFixes the WriteModuleDataRequest test on big-endian machines:\r\n```\r\n\r\n>>> string = b\"goodchoucroute\\x00\\x00\"\r\n>>> pkt = WriteModuleDataRequest(ModuleData=string)\r\n>>> pkt = WriteModuleDataRequest(pkt.build())\r\n>>> pkt.show()\r\n  ModuleID  = PIB\r\n  reserved_1= 0x0\r\n  DataLen   = 4096\r\n  Offset    = 0\r\n  checksum  = 3975123099\r\n  ModuleData= 'goodchoucroute\\x00\\x00'\r\n\r\n>>> a = pkt.checksum == chksum32(pkt.ModuleData)\r\n>>> b = pkt.DataLen == len(pkt.ModuleData)\r\n>>> a, b\r\n(False, False)\r\n>>> assert a and b\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\nAssertionError\r\n```\r\n\r\nIt's worth mentioning that there are other places where packs and unpacks should probably be fixed:\r\nhttps://github.com/secdev/scapy/pull/2270#issuecomment-1431503009 but I'd leave it to homeplugav experts (which I'm not).\r\n",
    "head_branch": "homeplugav-wmdr-endianness",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3903?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3903](https://codecov.io/gh/secdev/scapy/pull/3903?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5657d63) into [master](https://codecov.io/gh/secdev/scapy/commit/6eaffb309879e4bf2ef2d639f6d378fb785a9f10?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6eaffb3) will **decrease** coverage by `0.01%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3903      +/-   ##\n==========================================\n- Coverage   50.06%   50.06%   -0.01%     \n==========================================\n  Files         228      228              \n  Lines       53270    53270              \n==========================================\n- Hits        26672    26668       -4     \n- Misses      26598    26602       +4     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3903?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/homeplugav.py](https://codecov.io/gh/secdev/scapy/pull/3903?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ob21lcGx1Z2F2LnB5) | `79.48% <0.00%> (ø)` | |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3903?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3903?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3903?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.88% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/arch/libpcap.py](https://codecov.io/gh/secdev/scapy/pull/3903?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saWJwY2FwLnB5) | `37.17% <0.00%> (+0.64%)` | :arrow_up: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3903?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Make pack and unpack match in homeplugav.WriteModuleDataRequest (#3903)\n\nDataLen seems to be a little-endian field because it's defined with\r\nfmt='<H' explicitly. Wireshark dissects it as an unsigned short integer\r\nas well: https://github.com/wireshark/wireshark/blob/5ce29956e40a4c1e381d4b455c03225d9eda547b/epan/dissectors/packet-homeplug-av.c#L3526\r\n\r\nChecksum seems to be a little-endian field because it's defined with LEIntField\r\nand Wireshark dissects it accordingly:\r\nhttps://github.com/wireshark/wireshark/blob/5ce29956e40a4c1e381d4b455c03225d9eda547b/epan/dissectors/packet-homeplug-av.c#L3528\r\n\r\nThis patch was cross-checked with Wireshark to make sure that it can\r\nparse packets produced by Scapy and both DataLen and Checksum matched.\r\nFor example Scapy showed\r\n```\r\n        DataLen   = 32768\r\n        Offset    = 0\r\n        checksum  = 4294967295\r\n```\r\nand then it was written to a pcap file that was read by Wireshark and\r\nit showed\r\n```\r\n    Write Module Data Request\r\n...\r\n        Length: 0x8000\r\n        Offset: 0x00000000\r\n        Checksum: 0xffffffff\r\n```\r\nas expected.\r\n\r\nThe patch was also tested on BE and LE machines in\r\nhttps://github.com/evverx/scapy/pull/1.\r\n\r\nFixes the WriteModuleDataRequest test on big-endian machines:\r\n```\r\n\r\n>>> string = b\"goodchoucroute\\x00\\x00\"\r\n>>> pkt = WriteModuleDataRequest(ModuleData=string)\r\n>>> pkt = WriteModuleDataRequest(pkt.build())\r\n>>> pkt.show()\r\n  ModuleID  = PIB\r\n  reserved_1= 0x0\r\n  DataLen   = 4096\r\n  Offset    = 0\r\n  checksum  = 3975123099\r\n  ModuleData= 'goodchoucroute\\x00\\x00'\r\n\r\n>>> a = pkt.checksum == chksum32(pkt.ModuleData)\r\n>>> b = pkt.DataLen == len(pkt.ModuleData)\r\n>>> a, b\r\n(False, False)\r\n>>> assert a and b\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\nAssertionError\r\n```\r\n\r\nIt's worth mentioning that there are other places where packs and\r\nunpacks should probably be fixed:\r\nhttps://github.com/secdev/scapy/pull/2270#issuecomment-1431503009."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac3ea88c0a76e0a51603",
    "number": 3902,
    "body": null,
    "head_branch": "fix_3901",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3902](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0e7a697) into [master](https://codecov.io/gh/secdev/scapy/commit/6eaffb309879e4bf2ef2d639f6d378fb785a9f10?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6eaffb3) will **increase** coverage by `0.36%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3902      +/-   ##\n==========================================\n+ Coverage   50.06%   50.43%   +0.36%     \n==========================================\n  Files         228      227       -1     \n  Lines       53270    52757     -513     \n==========================================\n- Hits        26672    26609      -63     \n+ Misses      26598    26148     -450     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cansocket\\_python\\_can.py](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `33.12% <0.00%> (-8.29%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `39.23% <0.00%> (-2.53%)` | :arrow_down: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `24.02% <0.00%> (-1.21%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.88% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | | |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3902?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Fix 3901 (#3902)\n\n* remove scanner tests from pypy\r\n\r\nset isotp_soft_socket to nonblocking for performance test\r\n\r\nrevert\r\n\r\n* add more generic UDS_ServieEnumerator\r\n\r\n* fix flake\r\n\r\n* Fix #3901\r\n\r\n* revert change\r\n\r\n---------\r\n\r\nCo-authored-by: Nils Weiss <nils@dissec.to>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac3fa88c0a76e0a51604",
    "number": 3899,
    "body": "According to\r\nhttps://www.unitronicsplc.com/Download/SoftwareUtilities/Unitronics%20PCOM%20Protocol.pdf low bytes of transaction lengths come first. Other than that the \"len\" field itself is declared with LEShortField.\r\n\r\nFixes the pcom test on big endian machines:\r\n```\r\n>>> r = b'\\x65\\x00\\x04\\x00\\x00\\x00\\x00\\x00'\r\n>>> raw(PCOMRequest() / b'\\x00\\x00\\x00\\x00')[2:] == r\r\nFalse\r\n>>> r =  b'\\x65\\x00\\x04\\x00\\x00\\x00\\x00\\x00'\r\n>>> raw(PCOMResponse() / b'\\x00\\x00\\x00\\x00')[2:] == r\r\nFalse\r\n```\r\n\r\nThis patch was tested on BE and LE machines in\r\nhttps://github.com/evverx/scapy/pull/1.",
    "head_branch": "scada-pcom-le",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3899](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ad7bb3f) into [master](https://codecov.io/gh/secdev/scapy/commit/967564e979049e5acc773e12fc278248d7142f01?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (967564e) will **increase** coverage by `1.61%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3899      +/-   ##\n==========================================\n+ Coverage   50.45%   52.07%   +1.61%     \n==========================================\n  Files         227      190      -37     \n  Lines       52757    43288    -9469     \n==========================================\n- Hits        26621    22543    -4078     \n+ Misses      26136    20745    -5391     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/compat.py](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29tcGF0LnB5) | `49.01% <0.00%> (-0.99%)` | :arrow_down: |\n| [scapy/base\\_classes.py](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYmFzZV9jbGFzc2VzLnB5) | `57.57% <0.00%> (-0.76%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.39% <0.00%> (-0.60%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/volatile.py](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdm9sYXRpbGUucHk=) | `36.11% <0.00%> (-0.50%)` | :arrow_down: |\n| [scapy/utils.py](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `18.69% <0.00%> (-0.07%)` | :arrow_down: |\n| [scapy/contrib/avs.py](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdnMucHk=) | | |\n| [scapy/contrib/http2.py](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9odHRwMi5weQ==) | | |\n| [scapy/layers/tls/record.py](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmQucHk=) | | |\n| ... and [35 more](https://codecov.io/gh/secdev/scapy/pull/3899?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n"
    ],
    "commit_messages": [
      "Use little-endian byte order to pack transaction lengths in PCOM\n\nAccording to\nhttps://www.unitronicsplc.com/Download/SoftwareUtilities/Unitronics%20PCOM%20Protocol.pdf\nlow bytes of transaction lengths come first. Other than that the \"len\"\nfield itself is declared with LEShortField.\n\nFixes the pcom test on big endian machines:\n```\n>>> r = b'\\x65\\x00\\x04\\x00\\x00\\x00\\x00\\x00'\n>>> raw(PCOMRequest() / b'\\x00\\x00\\x00\\x00')[2:] == r\nFalse\n>>> r =  b'\\x65\\x00\\x04\\x00\\x00\\x00\\x00\\x00'\n>>> raw(PCOMResponse() / b'\\x00\\x00\\x00\\x00')[2:] == r\nFalse\n```\n\nThis patch was tested on BE and LE machines in\nhttps://github.com/evverx/scapy/pull/1."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac3fa88c0a76e0a51605",
    "number": 3898,
    "body": "Fixes #3897\r\n\r\nTested successfully in local. \r\n\r\nAbout `NetflowOptionsFlowsetV9` count hardcoded to `1`, it comes from the fact that [NetflowOptionsFlowsetV9.templateID](https://github.com/secdev/scapy/blob/master/scapy/layers/netflow.py#L1640) not being a `PacketListField`, hence it can only carry a single template, but the correction would be outside of the scope of this issue.\r\n\r\nI tried my best to conform with scapy's coding style, please tell me how to correct things, I will gladly correct it following your guidelines.",
    "head_branch": "netflow_header_count",
    "is_a_fork": true,
    "comments": [
      "Hi ! could you please rebase against master? Thanks !",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3898](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0f49a3d) into [master](https://codecov.io/gh/secdev/scapy/commit/967564e979049e5acc773e12fc278248d7142f01?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (967564e) will **increase** coverage by `36.50%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3898       +/-   ##\n===========================================\n+ Coverage   50.45%   86.96%   +36.50%     \n===========================================\n  Files         227      310       +83     \n  Lines       52757    70606    +17849     \n===========================================\n+ Hits        26621    61402    +34781     \n+ Misses      26136     9204    -16932     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/netflow.py](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL25ldGZsb3cucHk=) | `90.47% <100.00%> (+50.93%)` | :arrow_up: |\n| [scapy/libs/six.py](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy9zaXgucHk=) | `54.47% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | | |\n| [scapy/arch/windows/native.py](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL25hdGl2ZS5weQ==) | | |\n| [scapy/arch/windows/structures.py](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL3N0cnVjdHVyZXMucHk=) | | |\n| [scapy/contrib/automotive/obd/tid/tids.py](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL29iZC90aWQvdGlkcy5weQ==) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/scada/iec104/iec104\\_fields.py](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9zY2FkYS9pZWMxMDQvaWVjMTA0X2ZpZWxkcy5weQ==) | `96.22% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/obd/mid/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL29iZC9taWQvX19pbml0X18ucHk=) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/obd/pid/pids.py](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL29iZC9waWQvcGlkcy5weQ==) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/obd/iid/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL29iZC9paWQvX19pbml0X18ucHk=) | `100.00% <0.00%> (ø)` | |\n| ... and [261 more](https://codecov.io/gh/secdev/scapy/pull/3898?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "Hi,\r\nRebase done, and add a comment about the remaining flake8 issue on https://github.com/secdev/scapy/pull/3898/commits/38ed682f9b0301975dcfcf10f4abd1e6a69c2b28#r1105538293 \r\n\r\n",
      "Mmmmh, I do not see how the unit tests are failing only on pypy3.9, on a test set not involved with my changes ?\r\nMoreover I don't think it failed before, any idea ?  :thinking: ",
      "You can ignore that safely. There's still a flake8 error though :/",
      "Fixed so that flake8 does not raise an error anymore, with a quick reference to the RFC section describing the count definition",
      "Hi :)\r\nWhat do you think of the last modification (only pypy3.9 related tests failed) ?\r\nThanks ",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "Fix #3897 - Incorrect behavior of NetflowHeaderV9 Count (#3898)\n\n* Add test case of complete build\r\n\r\nComplex packet with 5 flowsets of all available types\r\nTemplates / Option-Templates / Data\r\nwith several records inside each flowset.\r\n\r\n* Add test of dissection for complex Netflow packet\r\n\r\nExample taken is the one from the previous example\r\n\r\n* Typo\r\n\r\n* Fix Netflow Header Count Field\r\n\r\nAccording to RFC 3954\r\nCount\r\n         The total number of records in the Export Packet,\r\n         which is the sum of :\r\n         - Options FlowSet records,\r\n         - Template FlowSet records, and\r\n         - Data FlowSet records\r\n\r\n* conform to flake8\r\n\r\n* Update scapy/layers/netflow.py\r\n\r\nFix indentation\r\n\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>\r\n\r\n* Flake8 conformation\r\n\r\n---------\r\n\r\nCo-authored-by: nibl <nicolas.bloyet@ekinops.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac40a88c0a76e0a51606",
    "number": 3896,
    "body": "Converting a value with .i2h() followed by any2i() results in a different value than the original. This is due to loss of decimal precision and not rounding when converting float to int.\r\n\r\nFixes #3893\r\nFixes #3052\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3896?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3896](https://codecov.io/gh/secdev/scapy/pull/3896?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (471996f) into [master](https://codecov.io/gh/secdev/scapy/commit/967564e979049e5acc773e12fc278248d7142f01?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (967564e) will **decrease** coverage by `0.03%`.\n> The diff coverage is `25.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3896      +/-   ##\n==========================================\n- Coverage   50.45%   50.43%   -0.03%     \n==========================================\n  Files         227      227              \n  Lines       52757    52758       +1     \n==========================================\n- Hits        26621    26608      -13     \n- Misses      26136    26150      +14     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3896?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3896?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.85% <25.00%> (-0.14%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3896?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3896?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `39.23% <0.00%> (-0.66%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3896?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/plist.py](https://codecov.io/gh/secdev/scapy/pull/3896?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGxpc3QucHk=) | `17.08% <0.00%> (-0.26%)` | :arrow_down: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3896?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n",
      "Hi ! could you please rebase against master? Thanks !",
      "Could you explain the rationale behind how this PR works? In my testing, it's a regression from master.\r\n\r\nLet's assume you have a field defined as such:\r\n```python\r\nfield = FixedPointField(\"myfield\", 0, 64, 16)\r\n```\r\nPrecision of a 16-bit fixed point integer would be around\r\n```python\r\n>>> 2**(-16)\r\n1.52587890625e-05\r\n```\r\nso you expect values below this precision to lose any meaning. This is why those return the same value:\r\n```python\r\n>>> field.addfield(None, b\"\", field.any2i(None, 123.012315))\r\nb\"\\x00\\x00\\x00\\x00\\x00{\\x03'\"\r\n>>> field.addfield(None, b\"\", field.any2i(None, 123.012316))\r\nb\"\\x00\\x00\\x00\\x00\\x00{\\x03'\"\r\n```\r\n\r\nNow when dissecting, you want as much precision as the floating point can give you, not more nor less:\r\n**master**:\r\n```python\r\n>>> field = FixedPointField(\"myfield\", 0, 64, 16)\r\n>>> field.i2repr(None, field.getfield(None, b\"\\x00\\x00\\x00\\x00\\x00{\\x03'\")[1])\r\n'123.01231'\r\n```\r\n\r\n**this PR**:\r\n```python\r\n>>> field = FixedPointField(\"myfield\", 0, 64, 16)\r\n>>> field.i2repr(None, field.getfield(None, b\"\\x00\\x00\\x00\\x00\\x00{\\x03'\")[1])\r\n'123.0123'\r\n```\r\n\r\nYou're playing around with internal values, saying it 'looses precision', but it would be meaningless to show an artificial precision than can't actually be reflected on the network. Or in this case, a worse one.\r\n\r\n**Could you point out a real world scenario (from bytes to the floating point), where the current behavior appears to be invalid?**",
      "Closing for inactivity"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac41a88c0a76e0a51607",
    "number": 3895,
    "body": "Added Extremely helpful video resource on Understanding Network Layers with Scapy\r\n ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3895](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3782f77) into [master](https://codecov.io/gh/secdev/scapy/commit/e834fa305fba6700171483c51faca5a3163a2d41?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e834fa3) will **increase** coverage by `0.36%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3895      +/-   ##\n==========================================\n+ Coverage   50.06%   50.42%   +0.36%     \n==========================================\n  Files         228      227       -1     \n  Lines       53254    52741     -513     \n==========================================\n- Hits        26661    26597      -64     \n+ Misses      26593    26144     -449     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cansocket\\_python\\_can.py](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `33.12% <0.00%> (-8.29%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `39.23% <0.00%> (-2.53%)` | :arrow_down: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `24.02% <0.00%> (-1.21%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/pipetool.py](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGlwZXRvb2wucHk=) | `25.72% <0.00%> (-0.23%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.88% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | | |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3895?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n",
      "Thanks for your interest in Scapy. I believe that this resource will be better located at https://github.com/secdev/awesome-scapy/ Could you add Videos section here https://github.com/secdev/awesome-scapy/blob/main/README.md?plain=1#L15\r\n\r\nThanks."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac42a88c0a76e0a51608",
    "number": 3890,
    "body": null,
    "head_branch": "fix_setuptools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac43a88c0a76e0a51609",
    "number": 3888,
    "body": null,
    "head_branch": "remove_python3_only_tag",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3888?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3888](https://codecov.io/gh/secdev/scapy/pull/3888?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (43ed256) into [master](https://codecov.io/gh/secdev/scapy/commit/c3c1bb6dffd83f3d2ecb8497ad2cac72e8e7ec49?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c3c1bb6) will **decrease** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3888      +/-   ##\n==========================================\n- Coverage   50.45%   50.44%   -0.02%     \n==========================================\n  Files         227      227              \n  Lines       52757    52757              \n==========================================\n- Hits        26621    26615       -6     \n- Misses      26136    26142       +6     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3888?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3888?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3888?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3888?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.88% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3888?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n",
      "Thanks a lot for the PR @polybassa ! :stuck_out_tongue: ",
      "Hi ! could you please rebase against master? Thanks !",
      "@gpotter2 Done"
    ],
    "commit_messages": [
      "Remove python3_only and six from UTScapy (#3888)\n\n* remove python3_only and six from UTScapy\r\n\r\n* remove python2 leftovers\r\n\r\n* apply suggestions\r\n\r\n* apply suggestions\r\n\r\n---------\r\n\r\nCo-authored-by: Nils Weiss <nils@dissec.to>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac44a88c0a76e0a5160a",
    "number": 3887,
    "body": null,
    "head_branch": "bugfix_time",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3887](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0206538) into [master](https://codecov.io/gh/secdev/scapy/commit/e834fa305fba6700171483c51faca5a3163a2d41?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e834fa3) will **increase** coverage by `1.98%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3887      +/-   ##\n==========================================\n+ Coverage   50.06%   52.05%   +1.98%     \n==========================================\n  Files         228      190      -38     \n  Lines       53254    43272    -9982     \n==========================================\n- Hits        26661    22524    -4137     \n+ Misses      26593    20748    -5845     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cansocket\\_python\\_can.py](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `33.12% <0.00%> (-8.29%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `39.23% <0.00%> (-2.53%)` | :arrow_down: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `23.72% <0.00%> (-1.51%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/compat.py](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29tcGF0LnB5) | `49.01% <0.00%> (-0.99%)` | :arrow_down: |\n| [scapy/base\\_classes.py](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYmFzZV9jbGFzc2VzLnB5) | `57.57% <0.00%> (-0.76%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.39% <0.00%> (-0.60%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/volatile.py](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdm9sYXRpbGUucHk=) | `36.11% <0.00%> (-0.50%)` | :arrow_down: |\n| [scapy/pipetool.py](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGlwZXRvb2wucHk=) | `25.72% <0.00%> (-0.23%)` | :arrow_down: |\n| ... and [40 more](https://codecov.io/gh/secdev/scapy/pull/3887?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "Thanks! I've just run the tests on i386 and they passed: https://download.copr.fedorainfracloud.org/results/packit/evverx-scapy-1/fedora-36-i386/05523094-scapy/builder-live.log.gz"
    ],
    "commit_messages": [
      "Fix #3880: AutomotiveTestCaseExecutor on 32-bit machines (#3887)\n\n* Fix #3880\r\n\r\n* apply suggestions\r\n\r\n---------\r\n\r\nCo-authored-by: Nils Weiss <nils@dissec.to>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac44a88c0a76e0a5160b",
    "number": 3883,
    "body": "According to https://www.rfc-editor.org/rfc/rfc7252#section-1.2\r\n> All multi-byte integers in this protocol are interpreted in network\r\nbyte order.\r\n\r\nand according to https://www.rfc-editor.org/rfc/rfc7252#section-3.1\r\n> A 16-bit unsigned integer in network byte order precedes the\r\nOption Value and indicates the Option Length minus 269.\r\n\r\nAlso, judging by\r\nhttps://github.com/wireshark/wireshark/blob/8cddc32d35e36d9962495c3d4358842ea88aac41/epan/dissectors/packet-coap.c#L876 wireshark uses tvb_get_ntohs (which is roughly the same as unpack('!H')) too.\r\n\r\nIt surfaced on big endian machines where `H` turned into `!H` by default https://github.com/secdev/scapy/issues/3847#issuecomment-1411565053:\r\n```\r\n>>> assert raw(CoAP(options=[(\"Location-Path\", 'x' * 280)])) ==\r\nb'\\x40\\x00\\x00\\x00\\x8e\\x0b\\x00' + b'\\x78' * 280\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\nAssertionError\r\n```\r\n\r\nThis patch was tested on BE and LE machines in\r\nhttps://github.com/evverx/scapy/pull/1 along with some other patches making the unit tests pass.\r\n\r\nThat being said I have to admit I'm not particularly familiar with CoAP and I feel a bit uneasy about touching this code because it has been this way since 2016 (https://github.com/secdev/scapy/pull/201) and nobody appears to have complained so far.",
    "head_branch": "coap-byte-order",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3883](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9a95be8) into [master](https://codecov.io/gh/secdev/scapy/commit/e834fa305fba6700171483c51faca5a3163a2d41?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e834fa3) will **increase** coverage by `2.00%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3883      +/-   ##\n==========================================\n+ Coverage   50.06%   52.06%   +2.00%     \n==========================================\n  Files         228      190      -38     \n  Lines       53254    43272    -9982     \n==========================================\n- Hits        26661    22530    -4131     \n+ Misses      26593    20742    -5851     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/coap.py](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jb2FwLnB5) | `34.54% <0.00%> (ø)` | |\n| [scapy/contrib/cansocket\\_python\\_can.py](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `33.12% <0.00%> (-8.29%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `39.89% <0.00%> (-1.87%)` | :arrow_down: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `23.72% <0.00%> (-1.51%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/compat.py](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29tcGF0LnB5) | `49.01% <0.00%> (-0.99%)` | :arrow_down: |\n| [scapy/base\\_classes.py](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYmFzZV9jbGFzc2VzLnB5) | `57.57% <0.00%> (-0.76%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.39% <0.00%> (-0.60%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/volatile.py](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdm9sYXRpbGUucHk=) | `36.11% <0.00%> (-0.50%)` | :arrow_down: |\n| ... and [41 more](https://codecov.io/gh/secdev/scapy/pull/3883?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "> wireshark uses tvb_get_ntohs (which is roughly the same as unpack('!H'))\r\n\r\nJust to clarify because of that wireshark complains about CoAP packets containing extended options generated by scapy on little endian machines (x86_64/aarch64 and so on):\r\n```\r\n    [Expert Info (Warning/Malformed): option longer than the package]\r\n```\r\nWith this patch applied it can parse them\r\n```\r\n    Opt Name: #1: Location-Path: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n      Opt Desc: Type 8, Elective, Safe\r\n        1000 .... = Opt Delta: 8\r\n        .... 1110 = Opt Length: 14\r\n        Opt Length extended: 11\r\n        Location-Path [truncated]: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n```\r\nso I'm 99% sure this PR is correct."
    ],
    "commit_messages": [
      "Use network byte order explicitly to pack/unpack multi-byte integers in CoAP\n\nAccording to https://www.rfc-editor.org/rfc/rfc7252#section-1.2\n> All multi-byte integers in this protocol are interpreted in network\nbyte order.\n\nand according to https://www.rfc-editor.org/rfc/rfc7252#section-3.1\n> A 16-bit unsigned integer in network byte order precedes the\nOption Value and indicates the Option Length minus 269.\n\nAlso, judging by\nhttps://github.com/wireshark/wireshark/blob/8cddc32d35e36d9962495c3d4358842ea88aac41/epan/dissectors/packet-coap.c#L876\nwireshark uses tvb_get_ntohs (which is roughly the same as unpack('!H')) too.\n\nIt surfaced on big endian machines where `H` turned into `!H` by default\nhttps://github.com/secdev/scapy/issues/3847#issuecomment-1411565053:\n```\n>>> assert raw(CoAP(options=[(\"Location-Path\", 'x' * 280)])) ==\nb'\\x40\\x00\\x00\\x00\\x8e\\x0b\\x00' + b'\\x78' * 280\nTraceback (most recent call last):\n  File \"<input>\", line 2, in <module>\nAssertionError\n```\n\nThis patch was tested on BE and LE machines in\nhttps://github.com/evverx/scapy/pull/1 along with some other patches\nmaking the unit tests pass."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac45a88c0a76e0a5160c",
    "number": 3882,
    "body": "followup on https://github.com/secdev/scapy/pull/3820\r\n\r\n- Fix iterations on ranges, allowing to MITM an entire LAN to its gateway using `arp_mitm('192.168.0.1/24', '192.168.0.254')`\r\n\r\nSorry for bothering again @p-l-, this is the last one I promise.",
    "head_branch": "arp-mitm-all",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3882?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3882](https://codecov.io/gh/secdev/scapy/pull/3882?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d7e1a5c) into [master](https://codecov.io/gh/secdev/scapy/commit/e834fa305fba6700171483c51faca5a3163a2d41?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e834fa3) will **decrease** coverage by `0.01%`.\n> The diff coverage is `0.00%`.\n\n> :exclamation: Current head d7e1a5c differs from pull request most recent head 40f8a1e. Consider uploading reports for the commit 40f8a1e to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3882      +/-   ##\n==========================================\n- Coverage   50.06%   50.05%   -0.01%     \n==========================================\n  Files         228      228              \n  Lines       53254    53256       +2     \n==========================================\n- Hits        26661    26657       -4     \n- Misses      26593    26599       +6     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3882?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/l2.py](https://codecov.io/gh/secdev/scapy/pull/3882?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `42.88% <0.00%> (-0.19%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3882?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3882?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/pipetool.py](https://codecov.io/gh/secdev/scapy/pull/3882?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGlwZXRvb2wucHk=) | `25.72% <0.00%> (-0.23%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3882?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.88% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3882?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `3.89% <0.00%> (+0.58%)` | :arrow_up: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3882?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "arp_mitm: fix range iteration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac46a88c0a76e0a5160d",
    "number": 3881,
    "body": "The default randval function inherited from the Field class generates values from 0 to 255 because the \"fmt\" signature of NBytesFields ends with \"B\". Because of that only the last byte is different:\r\n```\r\n>>> hexdump(f)\r\n0000  00 00 00 00 00 00 00 00 00 45                    .........E\r\n>>> hexdump(f)\r\n0000  00 00 00 00 00 00 00 00 00 50                    .........P\r\n>>> hexdump(f)\r\n0000  00 00 00 00 00 00 00 00 00 DD                    ..........\r\n```\r\n\r\nWith this patch applied randval uses the whole range and all the bytes are involved in fuzzing:\r\n```\r\n>>> hexdump(f)\r\n0000  F2 50 65 CE 2D A7 11 95 E7 32                    .Pe.-....2\r\n>>> hexdump(f)\r\n0000  71 22 B3 4E 52 28 41 91 03 2C                    q\".NR(A..,\r\n>>> hexdump(f)\r\n0000  97 61 93 29 E4 AC 10 A8 8F 02                    .a.)......\r\n```",
    "head_branch": "fuzz-nbytes-field",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3881](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e73241d) into [master](https://codecov.io/gh/secdev/scapy/commit/5dad9286dba5247c6367c3cb1acc2200d8317e3e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5dad928) will **increase** coverage by `4.70%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3881      +/-   ##\n==========================================\n+ Coverage   81.81%   86.52%   +4.70%     \n==========================================\n  Files         301      310       +9     \n  Lines       63559    70603    +7044     \n==========================================\n+ Hits        52001    61086    +9085     \n+ Misses      11558     9517    -2041     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.68% <100.00%> (+0.17%)` | :arrow_up: |\n| [scapy/arch/bpf/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9icGYvc3VwZXJzb2NrZXQucHk=) | `23.10% <0.00%> (-48.11%)` | :arrow_down: |\n| [scapy/layers/dhcp6.py](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RoY3A2LnB5) | `63.10% <0.00%> (-22.01%)` | :arrow_down: |\n| [scapy/arch/bpf/core.py](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9icGYvY29yZS5weQ==) | `80.30% <0.00%> (-6.82%)` | :arrow_down: |\n| [scapy/route6.py](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcm91dGU2LnB5) | `85.95% <0.00%> (-2.25%)` | :arrow_down: |\n| [scapy/libs/winpcapy.py](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy93aW5wY2FweS5weQ==) | `67.16% <0.00%> (-0.60%)` | :arrow_down: |\n| [scapy/plist.py](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGxpc3QucHk=) | `83.66% <0.00%> (-0.51%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_native\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9uYXRpdmVfc29ja2V0LnB5) | `44.23% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/bmw/definitions.py](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2Jtdy9kZWZpbml0aW9ucy5weQ==) | `99.94% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/gm/gmlanutils.py](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2dtL2dtbGFudXRpbHMucHk=) | `86.79% <0.00%> (ø)` | |\n| ... and [69 more](https://codecov.io/gh/secdev/scapy/pull/3881?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n"
    ],
    "commit_messages": [
      "Make NBytesField a bit more fuzzable\n\nThe default randval function inherited from the Field class generates\nvalues from 0 to 255 because the \"fmt\" signature of NBytesFields ends\nwith \"B\". Because of that only the last byte is different:\n```\n>>> hexdump(f)\n0000  00 00 00 00 00 00 00 00 00 45                    .........E\n>>> hexdump(f)\n0000  00 00 00 00 00 00 00 00 00 50                    .........P\n>>> hexdump(f)\n0000  00 00 00 00 00 00 00 00 00 DD                    ..........\n```\n\nWith this patch applied randval uses the whole range and all the bytes\nare involved in fuzzing:\n```\n>>> hexdump(f)\n0000  F2 50 65 CE 2D A7 11 95 E7 32                    .Pe.-....2\n>>> hexdump(f)\n0000  71 22 B3 4E 52 28 41 91 03 2C                    q\".NR(A..,\n>>> hexdump(f)\n0000  97 61 93 29 E4 AC 10 A8 8F 02                    .a.)......\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac47a88c0a76e0a5160e",
    "number": 3879,
    "body": null,
    "head_branch": "enumerator_improvement",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3879?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3879](https://codecov.io/gh/secdev/scapy/pull/3879?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3d204f4) into [master](https://codecov.io/gh/secdev/scapy/commit/5f0bb6c43530dcb2e1fb21d810cba9297e7ba1ca?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5f0bb6c) will **decrease** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3879      +/-   ##\n==========================================\n- Coverage   52.08%   52.06%   -0.02%     \n==========================================\n  Files         190      190              \n  Lines       43267    43267              \n==========================================\n- Hits        22536    22529       -7     \n- Misses      20731    20738       +7     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3879?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3879?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3879?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3879?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `23.72% <0.00%> (-0.31%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3879?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.39% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3879?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Improvement of UDS_ServieEnumerator (#3879)\n\n* add more generic UDS_ServieEnumerator\r\n\r\n* use generator\r\n\r\n* fix flake\r\n\r\n* fix doc\r\n\r\n---------\r\n\r\nCo-authored-by: Nils Weiss <nils@dissec.to>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac48a88c0a76e0a5160f",
    "number": 3878,
    "body": "This PR fixes a bug in the `BluetoothUserSocket` implementation that made impossible to close and reopen the socket without having an error (\"device or resource busy\"), previously reported in issue #191.\r\n\r\n`BluetoothUserSocket` did not close the first socket returned by the first call to socket(), leaving this socket alive. OS returns \"Device or resource busy\" because of this when one try to instantiate a new `BluetoothUserSocket`.\r\nClosing this first socket in `BluetoothUserSocket`'s `close()` method frees all the file descriptors and solved this issue.\r\n\r\nFixes #191.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3878](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e8a9fb2) into [master](https://codecov.io/gh/secdev/scapy/commit/c54ca02ccacaee9257e9fd19741391743b543b44?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c54ca02) will **decrease** coverage by `0.02%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3878      +/-   ##\n==========================================\n- Coverage   86.96%   86.94%   -0.02%     \n==========================================\n  Files         310      310              \n  Lines       70606    70608       +2     \n==========================================\n- Hits        61401    61390      -11     \n- Misses       9205     9218      +13     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth.py](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aC5weQ==) | `86.22% <0.00%> (-0.24%)` | :arrow_down: |\n| [scapy/layers/tls/record\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfc3NsdjIucHk=) | `86.03% <0.00%> (-1.68%)` | :arrow_down: |\n| [scapy/layers/tls/handshake\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9oYW5kc2hha2Vfc3NsdjIucHk=) | `91.98% <0.00%> (-1.15%)` | :arrow_down: |\n| [scapy/layers/tls/basefields.py](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9iYXNlZmllbGRzLnB5) | `85.90% <0.00%> (-0.68%)` | :arrow_down: |\n| [scapy/layers/tls/crypto/cipher\\_aead.py](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY2lwaGVyX2FlYWQucHk=) | `87.77% <0.00%> (-0.44%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `83.87% <0.00%> (-0.39%)` | :arrow_down: |\n| [scapy/contrib/automotive/ecu.py](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `93.26% <0.00%> (-0.33%)` | :arrow_down: |\n| [scapy/layers/tls/session.py](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `87.89% <0.00%> (-0.32%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3878?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `74.53% <0.00%> (+0.21%)` | :arrow_up: |\n",
      "Hi ! Thanks for the PR ! could you please rebase against master?"
    ],
    "commit_messages": [
      "Fix bug #191\n\nBluetoothUserSocket did not close the first socket returned\nby the first call to socket(), leaving this socket alive.\nOS returns \"Device or resource busy\" because of this when\none try to instanciate a new BluetoothUserSocket.\n\nClosing this first socket in BluetoothUserSocket's `close()`\nmethod free all the file descriptors and solved this issue."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac49a88c0a76e0a51610",
    "number": 3877,
    "body": "Closes https://github.com/secdev/scapy/issues/3876",
    "head_branch": "nbytesfield",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3877?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3877](https://app.codecov.io/gh/secdev/scapy/pull/3877?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (55b315b) into [master](https://app.codecov.io/gh/secdev/scapy/commit/b2f3587cf7111c544a74ea4b03c096d6d81ea856?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (b2f3587) will **increase** coverage by `0.92%`.\n> The diff coverage is `0.00%`.\n\n> :exclamation: Current head 55b315b differs from pull request most recent head d1fc620. Consider uploading reports for the commit d1fc620 to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3877      +/-   ##\n==========================================\n+ Coverage   49.50%   50.43%   +0.92%     \n==========================================\n  Files         338      227     -111     \n  Lines       75835    52736   -23099     \n==========================================\n- Hits        37542    26596   -10946     \n+ Misses      38293    26140   -12153     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/3877?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://app.codecov.io/gh/secdev/scapy/pull/3877?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.88% <0.00%> (-12.43%)` | :arrow_down: |\n\n... and [235 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3877/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Make m2i match i2m in NBytesField\n\nCloses https://github.com/secdev/scapy/issues/3876"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac49a88c0a76e0a51611",
    "number": 3875,
    "body": "- 802.11-2016 9.4.2.19 CSA element\r\n- 802.11-2016 9.6.2.6 CSA action frame (partial)\r\n- test for CSA action frame + element",
    "head_branch": "dot11_csa",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3875?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3875](https://codecov.io/gh/secdev/scapy/pull/3875?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (391fc55) into [master](https://codecov.io/gh/secdev/scapy/commit/e834fa305fba6700171483c51faca5a3163a2d41?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e834fa3) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3875   +/-   ##\n=======================================\n  Coverage   50.06%   50.06%           \n=======================================\n  Files         228      228           \n  Lines       53254    53265   +11     \n=======================================\n+ Hits        26661    26668    +7     \n- Misses      26593    26597    +4     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3875?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dot11.py](https://codecov.io/gh/secdev/scapy/pull/3875?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RvdDExLnB5) | `53.34% <100.00%> (+1.28%)` | :arrow_up: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3875?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3875?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3875?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.88% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3875?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n",
      "Thanks for the PR !"
    ],
    "commit_messages": [
      "Add 802.11 Channel Switch Announcement (CSA)\n\n- 802.11-2016 9.4.2.19 CSA element\n- 802.11-2016 9.6.2.6 CSA action frame (partial)\n- test for CSA action frame + element"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac4aa88c0a76e0a51612",
    "number": 3874,
    "body": "see https://github.com/secdev/scapy/issues/3847#issuecomment-1409296379",
    "head_branch": "s390x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3874](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c9eb826) into [master](https://codecov.io/gh/secdev/scapy/commit/6ae0e87fba24e9e61eaf687d5374a5dbd330088d?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6ae0e87) will **increase** coverage by `50.05%`.\n> The diff coverage is `50.00%`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3874       +/-   ##\n===========================================\n+ Coverage        0   50.05%   +50.05%     \n===========================================\n  Files           0      228      +228     \n  Lines           0    53249    +53249     \n===========================================\n+ Hits            0    26653    +26653     \n- Misses          0    26596    +26596     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.88% <50.00%> (ø)` | |\n| [scapy/contrib/vtp.py](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi92dHAucHk=) | `59.57% <0.00%> (ø)` | |\n| [scapy/contrib/portmap.py](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9wb3J0bWFwLnB5) | `97.14% <0.00%> (ø)` | |\n| [scapy/sendrecv.py](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `13.24% <0.00%> (ø)` | |\n| [scapy/contrib/rtps/common\\_types.py](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ydHBzL2NvbW1vbl90eXBlcy5weQ==) | `59.05% <0.00%> (ø)` | |\n| [scapy/contrib/rpl.py](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ycGwucHk=) | `94.02% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/common.py](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY29tbW9uLnB5) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/vqp.py](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi92cXAucHk=) | `100.00% <0.00%> (ø)` | |\n| [scapy/layers/smb2.py](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NtYjIucHk=) | `64.32% <0.00%> (ø)` | |\n| [scapy/layers/ir.py](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lyLnB5) | `100.00% <0.00%> (ø)` | |\n| ... and [219 more](https://codecov.io/gh/secdev/scapy/pull/3874?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n"
    ],
    "commit_messages": [
      "Fix UTF-16 on s390x"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac4ba88c0a76e0a51613",
    "number": 3869,
    "body": "Followup to https://github.com/secdev/scapy/pull/3664\r\n\r\n- Since pip's latest version, there's a deprecation warning when installing scapy: https://pip.pypa.io/en/stable/news/#v22-3\r\n- use the new `pyproject.toml` approach where possible (everywhere except the long description)\r\n- enables `package = wheel` in `tox`\r\n- requires setuptools `>=62.0.0` because of https://github.com/pypa/setuptools/issues/3244\r\n\r\nCloses https://github.com/secdev/scapy/pull/3664 + **fixes codecov**",
    "head_branch": "pyproject.toml",
    "is_a_fork": true,
    "comments": [
      "Nice! Do you remember why we are not using the whole content of the README.md? That could helps us remove setup.my =)\n\nAlso, there are several things to check before merging such as the page on PyPi, the size of the tarball, manual installation with pip and a tarball. Otherwise, we might encounters issue later on.",
      "And also update references to `git grep setup.py`",
      "> Do you remember why we are not using the whole content of the README.md?\n\nThat was to remove CI badges from displaying on PyPi (PyPi capture images on push.. and we don't want to have a red badge set in stone)",
      "Hi @polybassa, sorry for bothering. If you have the time there's a small bug\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/threading.py\", line 980, in _bootstrap_inner\r\n    self.run()\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/threading.py\", line 917, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"<input>\", line 25, in answering_machine_thread\r\n  File \"/home/runner/work/scapy/scapy/scapy/ansmachine.py\", line 210, in __call__\r\n    self.sniff()\r\n  File \"/home/runner/work/scapy/scapy/scapy/ansmachine.py\", line 216, in sniff\r\n    sniff(**self.optsniff)\r\n  File \"/home/runner/work/scapy/scapy/scapy/sendrecv.py\", line 1310, in sniff\r\n    sniffer._run(*args, **kwargs)\r\n  File \"/home/runner/work/scapy/scapy/scapy/sendrecv.py\", line 1253, in _run\r\n    session.on_packet_received(p)\r\n  File \"/home/runner/work/scapy/scapy/scapy/sessions.py\", line 109, in on_packet_received\r\n    result = self.prn(pkt)\r\n  File \"/home/runner/work/scapy/scapy/scapy/ansmachine.py\", line 172, in reply\r\n    reply = self.make_reply(pkt)\r\n  File \"/home/runner/work/scapy/scapy/scapy/contrib/automotive/ecu.py\", line 681, in make_reply\r\n    if not resp.supports_state(self._ecu_state):\r\n  File \"/home/runner/work/scapy/scapy/scapy/contrib/automotive/ecu.py\", line 544, in supports_state\r\n    return any(s == state or state in s for s in self.__states)\r\n  File \"/home/runner/work/scapy/scapy/scapy/contrib/automotive/ecu.py\", line 544, in <genexpr>\r\n    return any(s == state or state in s for s in self.__states)\r\n  File \"/home/runner/work/scapy/scapy/scapy/contrib/automotive/ecu.py\", line 119, in __contains__\r\n    return all(s in self._expand() for s in item._expand())\r\n  File \"/home/runner/work/scapy/scapy/scapy/contrib/automotive/ecu.py\", line 54, in _expand\r\n    *[self._flatten(v) for v in self.__dict__.values()]):\r\n  File \"/home/runner/work/scapy/scapy/scapy/contrib/automotive/ecu.py\", line 54, in <listcomp>\r\n    *[self._flatten(v) for v in self.__dict__.values()]):\r\nRuntimeError: dictionary changed size during iteration\r\nTransition for edge (session1, session2tp1) failed\r\nError entering path [session1, session2tp1, security_level2session2tp1]\r\n```",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3869](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (35d9e64) into [master](https://codecov.io/gh/secdev/scapy/commit/967564e979049e5acc773e12fc278248d7142f01?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (967564e) will **increase** coverage by `36.06%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3869       +/-   ##\n===========================================\n+ Coverage   50.45%   86.52%   +36.06%     \n===========================================\n  Files         227      310       +83     \n  Lines       52757    70599    +17842     \n===========================================\n+ Hits        26621    61083    +34462     \n+ Misses      26136     9516    -16620     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/libs/six.py](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy9zaXgucHk=) | `54.47% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | | |\n| [scapy/arch/windows/structures.py](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL3N0cnVjdHVyZXMucHk=) | | |\n| [scapy/arch/windows/native.py](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL25hdGl2ZS5weQ==) | | |\n| [scapy/contrib/automotive/obd/tid/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL29iZC90aWQvX19pbml0X18ucHk=) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/xcp/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3hjcC9fX2luaXRfXy5weQ==) | `100.00% <0.00%> (ø)` | |\n| [scapy/arch/bpf/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9icGYvX19pbml0X18ucHk=) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/scanner/executor.py](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NjYW5uZXIvZXhlY3V0b3IucHk=) | `88.10% <0.00%> (ø)` | |\n| [scapy/arch/common.py](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9jb21tb24ucHk=) | `67.39% <0.00%> (ø)` | |\n| [test/testsocket.py](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-dGVzdC90ZXN0c29ja2V0LnB5) | `95.74% <0.00%> (ø)` | |\n| ... and [259 more](https://codecov.io/gh/secdev/scapy/pull/3869?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n"
    ],
    "commit_messages": [
      "Migrate to `pyproject.toml` (#3869)\n\n* Migrate to `pyproject.toml`\r\n\r\nCo-authored-by: KOLANICH <kolan_n@mail.ru>\r\n\r\n* Bump setuptools to 62.0.0\r\n\r\nOtherwise we suffer from the bug described in pypa/setuptools, #3244\r\n\r\n* Codecov: xml upload\r\n\r\n---------\r\n\r\nCo-authored-by: KOLANICH <kolan_n@mail.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac4ca88c0a76e0a51614",
    "number": 3868,
    "body": "The OSX test has begun failing the same way the linux previously did.\r\n\r\nhttps://github.com/secdev/scapy/actions/runs/3990457822/jobs/6844126086\r\n\r\nThis is because of Azure firewall issues.",
    "head_branch": "osx-ping",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Disable ping tests on OSX"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac4da88c0a76e0a51615",
    "number": 3867,
    "body": "See https://github.com/secdev/scapy/issues/3847\r\n\r\n```\r\n./test/run_tests -t test/tftp.uts -n 0-3 -F\r\n━ UTScapy - Scapy 2.5.0.dev12 - 3.10.9\r\n └ Non-root mode\r\n └ Booting scapy...\r\n └ Discovering tests files...\r\n━ Loading: test/tftp.uts\r\npassed CBBFDA20 000.00s Test answers\r\npassed D559286B 000.00s Utilities\r\npassed F88AFFD0 000.01s TFTP_read() automaton\r\npassed A974A974 000.01s TFTP_read() automaton error\r\nException in thread scapy.automaton _do_start:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.10/threading.py\", line 1016, in _bootstrap_inner\r\nCampaign CRC=913D7EA5 in 000.02s SHA=3A46E0AF5C478AAD6EA6C1B0822E5EEC7DC92353\r\nPASSED=4 FAILED=0\r\n✓ All campaigns executed. Writing output...\r\n\r\nRegression tests for TFTP\r\n━ Run at 13:38:31 from [test/tftp.uts] by UTscapy in 0.021495580673217773\r\n └ Passed=4\r\n └ Failed=0\r\n\r\n\r\nUTscapy ended successfully\r\n\r\nWARNING: UNFINISHED THREADS\r\n[<_MainThread(MainThread, started 139756419569472)>, <Thread(scapy.automaton _do_start, started daemon 139756339910208)>]\r\n    self.run()\r\n  File \"/usr/lib64/python3.10/threading.py\", line 953, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/vagrant/scapy/scapy/automaton.py\", line 1160, in _do_control\r\n    self.listen_sock.close()\r\nAttributeError: 'MockReadSocket' object has no attribute 'close'\r\n```",
    "head_branch": "fix-minor-test",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3867](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (00b259c) into [master](https://codecov.io/gh/secdev/scapy/commit/33d3093e4ff6e4a5a300ca54876fb5d214a020e6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (33d3093) will **increase** coverage by `1.96%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3867      +/-   ##\n==========================================\n+ Coverage   49.95%   51.92%   +1.96%     \n==========================================\n  Files         228      190      -38     \n  Lines       53176    43194    -9982     \n==========================================\n- Hits        26566    22430    -4136     \n+ Misses      26610    20764    -5846     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cansocket\\_python\\_can.py](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `33.12% <0.00%> (-8.29%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `39.23% <0.00%> (-2.53%)` | :arrow_down: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `24.02% <0.00%> (-1.51%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/compat.py](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29tcGF0LnB5) | `49.01% <0.00%> (-0.99%)` | :arrow_down: |\n| [scapy/base\\_classes.py](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYmFzZV9jbGFzc2VzLnB5) | `57.57% <0.00%> (-0.76%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.23% <0.00%> (-0.60%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/volatile.py](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdm9sYXRpbGUucHk=) | `36.11% <0.00%> (-0.50%)` | :arrow_down: |\n| [scapy/utils.py](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `18.69% <0.00%> (-0.07%)` | :arrow_down: |\n| ... and [39 more](https://codecov.io/gh/secdev/scapy/pull/3867?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n"
    ],
    "commit_messages": [
      "Fix minor UT test (#3867)\n\n* fix-minor-test\r\n\r\n* Fix minor p0fv2 issue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac4ea88c0a76e0a51616",
    "number": 3864,
    "body": "The following exception classes have been merged with OSError in Python version 3.3:\r\n\r\n    EnvironmentError, IOError, WindowsError,\r\n    socket.error, select.error and mmap.error\r\n",
    "head_branch": "replace-legacy-exceptions",
    "is_a_fork": true,
    "comments": [
      "_(Note to self: I should really get into the habit of running at least `tox -e mypy -e flake8` before creating a pull request.)_",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3864](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1fccf38) into [master](https://codecov.io/gh/secdev/scapy/commit/2fd25240fec92ea3b023aaecf2c048a013367b16?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2fd2524) will **decrease** coverage by `0.01%`.\n> The diff coverage is `8.47%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3864      +/-   ##\n==========================================\n- Coverage   49.97%   49.96%   -0.01%     \n==========================================\n  Files         228      228              \n  Lines       53157    53156       -1     \n==========================================\n- Hits        26565    26560       -5     \n- Misses      26592    26596       +4     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/linux.py](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saW51eC5weQ==) | `0.51% <0.00%> (ø)` | |\n| [scapy/arch/windows/native.py](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL25hdGl2ZS5weQ==) | `28.94% <0.00%> (ø)` | |\n| [scapy/as\\_resolvers.py](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNfcmVzb2x2ZXJzLnB5) | `34.31% <0.00%> (ø)` | |\n| [scapy/base\\_classes.py](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYmFzZV9jbGFzc2VzLnB5) | `58.33% <0.00%> (ø)` | |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.72% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/layers/dns.py](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2Rucy5weQ==) | `35.22% <0.00%> (ø)` | |\n| [scapy/layers/inet6.py](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `40.62% <0.00%> (ø)` | |\n| [scapy/layers/l2.py](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `43.19% <0.00%> (-0.13%)` | :arrow_down: |\n| [scapy/layers/sixlowpan.py](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NpeGxvd3Bhbi5weQ==) | `19.78% <0.00%> (ø)` | |\n| [scapy/layers/tftp.py](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3RmdHAucHk=) | `36.27% <0.00%> (ø)` | |\n| ... and [14 more](https://codecov.io/gh/secdev/scapy/pull/3864?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "So I don't really agree with the PR.\r\nWhere we have duplicates `except (IOError, OSError) as...`, it makes sense to update it. But other times, I often find it more explicit / clearer to have the name `IOError` used, because it can bring some extra documentation info, even if the behavior is identical.",
      "Well, I guess it's a matter of taste. Personally, it surprised me to learn that all those different exception types actually refer to the same type. The reason for joining all those types is obvious, it simplifies exception handling. The Python project chose OSError as the preferred name, because it is the most general name; all other error types can be considered OS errors.\r\n\r\nOther projects [chose to rename their types accordingly](https://www.google.com/search?client=firefox-b-d&q=EnvironmentError%2C+IOError%2C+WindowsError%2C+socket.error%2C+select.error+and+mmap.error), but as I said, it's a matter of taste and if you don't like it that's ok for me.\r\n\r\nSo you want me to clean up only the duplicates `except (IOError, OSError)`? Which one of the two names shall I keep? The more specific one or the more general one?",
      "BTW: [PEP 3151 – Reworking the OS and IO exception hierarchy](https://peps.python.org/pep-3151) gives some rationale for the cleanup. Maybe that convinces you?\r\n",
      "> BTW: [PEP 3151 – Reworking the OS and IO exception hierarchy](https://peps.python.org/pep-3151) gives some rationale for the cleanup. ~~Maybe that convinces you?~~\r\n\r\nInterestingly, that PEP classifies catching any of those exceptions as careless, if one doesn't check the errno attribute:\r\n\r\n![grafik](https://user-images.githubusercontent.com/11467854/214165166-1a6b1a67-8641-41ef-ab08-c6d55d87a585.png)\r\n",
      "IMHO the different exceptions were joined by the Python project for good reasons: it simplifies exception handling and makes clear that catching OSError is a very generic thing to do.\r\n\r\n> So I don't really agree with the PR.\r\n\r\nI understand your reasoning behind wanting to keep the original distinction, but your distinction is just artificial and might be confusing users.\r\n\r\n> Where we have duplicates except (IOError, OSError) as...,\r\n\r\nCleaning up just the duplicates does not make sense to me, it's a useless optimization. This pull request should either be accepted as it is or rejected entirely.",
      "This PR is stalled with a `discussion` label. Are you still interested in it, do you still intend to discuss it? If that's the case, I'll take the time to resolve the conflicts. If not, feel free to close the PR.",
      "I tend to agree with @gpotter2: specific exceptions give more context about what is expected to happen. So I also agree with @mspncp: we should change the \"alias\" names to the chosen preferred name, and I would add \"and check the `errorno` value\" (or, when they exist, use the specialized exception such as `FileNotFoundError`)",
      "@p-l- are you essentially stating that you agree with the recommendations given in https://peps.python.org/pep-3151/#compatibility-strategy?",
      "Closed due to inactivity."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac4fa88c0a76e0a51617",
    "number": 3863,
    "body": "Partially fixes #3856\r\n",
    "head_branch": "fix-unassigned-variable-warning",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3863](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ece39d5) into [master](https://codecov.io/gh/secdev/scapy/commit/3ce66d12ef07d2fb8f1a4a8277ed90277480b9c3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3ce66d1) will **decrease** coverage by `1.99%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3863      +/-   ##\n==========================================\n- Coverage   51.93%   49.95%   -1.99%     \n==========================================\n  Files         190      228      +38     \n  Lines       43195    53176    +9981     \n==========================================\n+ Hits        22435    26562    +4127     \n- Misses      20760    26614    +5854     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils.py](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `18.75% <0.00%> (+0.07%)` | :arrow_up: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/layers/tls/record\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfc3NsdjIucHk=) | `16.75% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/cipher\\_stream.py](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY2lwaGVyX3N0cmVhbS5weQ==) | `58.22% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/prf.py](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vcHJmLnB5) | `29.37% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/pkcs1.py](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vcGtjczEucHk=) | `27.06% <0.00%> (ø)` | |\n| [scapy/contrib/avs.py](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdnMucHk=) | `100.00% <0.00%> (ø)` | |\n| [scapy/layers/tls/cert.py](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jZXJ0LnB5) | `16.98% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/all.py](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vYWxsLnB5) | `100.00% <0.00%> (ø)` | |\n| ... and [40 more](https://codecov.io/gh/secdev/scapy/pull/3863?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n"
    ],
    "commit_messages": [
      "utils: fix warning about using variable before assignment\n\nPartially fixes #3856"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac4fa88c0a76e0a51618",
    "number": 3862,
    "body": "Currently, when installing from a non-tagged git archive version we get an error from `pkg_resources`:\r\n\r\n```\r\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version: 'git-archive.dev95ba5b8504'\r\n```\r\n\r\nThis version does not comply with the [PEP 440](https://peps.python.org/pep-0440/) standard.\r\n\r\nUpdate the parsing of git-archive `%(describe)` placeholder by adding multiple safeguards for computing `scapy.VERSION` (the first successful method is used in priority):\r\n\r\n1. If the `SCAPY_VERSION` env var is defined, use it. This will allow downstream packaging distros to force a specific version even if they store scapy in a different repository using a different git tag scheme.\r\n\r\n1. If the `scapy/VERSION` file exists, use its contents.\r\n\r\n1. Try to parse a tag from a git archive `%(describe)` placeholder. If the git archive was not made on a tag, use the commit timestamp to convert it to a date `YYYY.MM.DD` which is [PEP 440](https://peps.python.org/pep-0440/) compatible.\r\n\r\n1. Try to parse the version from `git describe`.\r\n\r\n1. Use the last modification of `scapy/__init__.py` and generate a date `YYYY.MM.DD` which is [PEP 440](https://peps.python.org/pep-0440/) compatible.\r\n\r\n1. Return `0.0.0`\r\n\r\nDo not try to generate the `scapy/VERSION` file when importing `scapy` anymore but generate it by overriding the `sdist` command in `setup.py` and write it to the temp folder used for the source archive generation.\r\n\r\nUpdate unit tests to ensure that order of priority is enforced.\r\n\r\nFixes: https://bugzilla.redhat.com/show_bug.cgi?id=2162667",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3862](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8765aa6) into [master](https://codecov.io/gh/secdev/scapy/commit/3ce66d12ef07d2fb8f1a4a8277ed90277480b9c3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3ce66d1) will **decrease** coverage by `1.51%`.\n> The diff coverage is `54.05%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3862      +/-   ##\n==========================================\n- Coverage   51.93%   50.43%   -1.51%     \n==========================================\n  Files         190      227      +37     \n  Lines       43195    52757    +9562     \n==========================================\n+ Hits        22435    26610    +4175     \n- Misses      20760    26147    +5387     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvX19pbml0X18ucHk=) | `64.78% <54.05%> (+2.97%)` | :arrow_up: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/layers/l2.py](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `43.07% <0.00%> (-0.25%)` | :arrow_down: |\n| [scapy/layers/tls/crypto/h\\_mac.py](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vaF9tYWMucHk=) | `78.46% <0.00%> (ø)` | |\n| [scapy/contrib/bier.py](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9iaWVyLnB5) | `100.00% <0.00%> (ø)` | |\n| [scapy/layers/tls/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b24ucHk=) | `15.78% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/prf.py](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vcHJmLnB5) | `29.37% <0.00%> (ø)` | |\n| [scapy/layers/tls/automaton\\_srv.py](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b25fc3J2LnB5) | `22.56% <0.00%> (ø)` | |\n| ... and [42 more](https://codecov.io/gh/secdev/scapy/pull/3862?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "Hey guys, gentle ping to get progress. @guedou do you have some remarks on these changes?",
      "What is the command that triggers this issue? I could not reproduce it with `pip install git+https://github.com/secdev/scapy`, or \r\n```\r\n$ python setup.py build\r\n$ python setup.py sdist\r\n$ pip install dist/scapy-2.5.0.dev27.tar.gz\r\n```",
      "If you clone scapy with `--depth=1`and use pip and setuptools latest version, I was able to reproduce.",
      "So all unit tests are currently failing because of this 😆 ",
      "Hehe thanks!"
    ],
    "commit_messages": [
      "setup: sanitize package version (#3862)\n\n* setup: sanitize package version\r\n\r\nCurrently, when installing from a non-tagged git archive version we get\r\nan error from pkg_resources:\r\n\r\npkg_resources.extern.packaging.version.InvalidVersion: Invalid version:\r\n'git-archive.dev95ba5b8504'\r\n\r\nThis version does not comply with the PEP 440 standard.\r\n\r\nUpdate the parsing of git-archive %(describe) placeholder by adding\r\nmultiple safeguards for computing scapy.VERSION (the first successful\r\nmethod is used in priority):\r\n\r\n1) If the SCAPY_VERSION env var is defined, use it. This will allow\r\n   downstream packaging to force a specific version even if they store\r\n   scapy in a different repository using a different git tag scheme.\r\n\r\n2) If the scapy/VERSION file exists, use its contents.\r\n\r\n3) Try to parse a tag from a git archive %(describe) placeholder. If the\r\n   git archive was not made on a tag, use the commit timestamp to\r\n   convert it to a date YYYY.MM.DD which is PEP 440 compatible.\r\n\r\n4) Try to use git describe to generate a tag.\r\n\r\n5) Use the last modification date of scapy/__init__.py and generate\r\n   a date YYYY.MM.DD which is PEP 440 compatible.\r\n\r\n6) Return 0.0.0\r\n\r\nDo not try to generate the scapy/VERSION file when importing scapy\r\nanymore but generate it by overriding the sdist command in setup.py and\r\nwrite it to the temp folder used for the source archive generation.\r\n\r\nUpdate unit tests to ensure that order of priority is enforced.\r\n\r\nLink: https://peps.python.org/pep-0440/\r\nLink: https://bugzilla.redhat.com/show_bug.cgi?id=2162667\r\nSigned-off-by: Robin Jarry <rjarry@redhat.com>\r\n\r\n* Reject invalid git tags\r\n\r\n---------\r\n\r\nSigned-off-by: Robin Jarry <rjarry@redhat.com>\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac50a88c0a76e0a51619",
    "number": 3861,
    "body": "- allow scanner builds to fail on appveyor",
    "head_branch": "failure-builds",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3861](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (bc60ee2) into [master](https://codecov.io/gh/secdev/scapy/commit/3ce66d12ef07d2fb8f1a4a8277ed90277480b9c3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3ce66d1) will **decrease** coverage by `2.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3861      +/-   ##\n==========================================\n- Coverage   51.93%   49.94%   -2.00%     \n==========================================\n  Files         190      228      +38     \n  Lines       43195    53177    +9982     \n==========================================\n+ Hits        22435    26559    +4124     \n- Misses      20760    26618    +5858     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/layers/tls/crypto/suites.py](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vc3VpdGVzLnB5) | `98.63% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/groups.py](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vZ3JvdXBzLnB5) | `68.08% <0.00%> (ø)` | |\n| [scapy/layers/tls/all.py](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hbGwucHk=) | `100.00% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/cipher\\_block.py](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY2lwaGVyX2Jsb2NrLnB5) | `68.70% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/compression.py](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY29tcHJlc3Npb24ucHk=) | `73.33% <0.00%> (ø)` | |\n| [scapy/layers/tls/record\\_tls13.py](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfdGxzMTMucHk=) | `28.33% <0.00%> (ø)` | |\n| [scapy/contrib/gtp.py](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ndHAucHk=) | `66.27% <0.00%> (ø)` | |\n| [scapy/layers/tls/automaton\\_srv.py](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b25fc3J2LnB5) | `22.56% <0.00%> (ø)` | |\n| ... and [39 more](https://codecov.io/gh/secdev/scapy/pull/3861?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n"
    ],
    "commit_messages": [
      "Appveyor: allow scanner builds to fail"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac51a88c0a76e0a5161a",
    "number": 3860,
    "body": null,
    "head_branch": "update_tps",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3860?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3860](https://codecov.io/gh/secdev/scapy/pull/3860?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (447e3b4) into [master](https://codecov.io/gh/secdev/scapy/commit/33d3093e4ff6e4a5a300ca54876fb5d214a020e6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (33d3093) will **decrease** coverage by `0.02%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3860      +/-   ##\n==========================================\n- Coverage   49.95%   49.94%   -0.02%     \n==========================================\n  Files         228      228              \n  Lines       53176    53176              \n==========================================\n- Hits        26566    26559       -7     \n- Misses      26610    26617       +7     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3860?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils.py](https://codecov.io/gh/secdev/scapy/pull/3860?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `18.75% <0.00%> (ø)` | |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3860?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3860?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3860?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `25.22% <0.00%> (-0.31%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3860?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.72% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3860?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Improvement of TesterPresentSenders (#3860)\n\nCo-authored-by: Nils Weiss <nils@dissec.to>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac52a88c0a76e0a5161b",
    "number": 3859,
    "body": "- use a 'with' statement to simplify error handling\r\n- open '/proc/net/dev' in text mode to avoid the need for decoding\r\n- use a list comprehension to generate the result\r\n\r\n\r\n_(related to issue #3856)_",
    "head_branch": "linux-simplify-get-if-list",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3859](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (158b80a) into [master](https://codecov.io/gh/secdev/scapy/commit/3ce66d12ef07d2fb8f1a4a8277ed90277480b9c3?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3ce66d1) will **decrease** coverage by `1.97%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3859      +/-   ##\n==========================================\n- Coverage   51.93%   49.97%   -1.97%     \n==========================================\n  Files         190      228      +38     \n  Lines       43195    53157    +9962     \n==========================================\n+ Hits        22435    26563    +4128     \n- Misses      20760    26594    +5834     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/linux.py](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saW51eC5weQ==) | `0.51% <0.00%> (+0.02%)` | :arrow_up: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/layers/tls/keyexchange\\_tls13.py](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9rZXlleGNoYW5nZV90bHMxMy5weQ==) | `37.82% <0.00%> (ø)` | |\n| [scapy/contrib/http2.py](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9odHRwMi5weQ==) | `39.28% <0.00%> (ø)` | |\n| [scapy/layers/tls/handshake.py](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9oYW5kc2hha2UucHk=) | `30.36% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/suites.py](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vc3VpdGVzLnB5) | `98.63% <0.00%> (ø)` | |\n| [scapy/contrib/igmpv3.py](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pZ21wdjMucHk=) | `57.89% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/h\\_mac.py](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vaF9tYWMucHk=) | `78.46% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/ciphers.py](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY2lwaGVycy5weQ==) | `100.00% <0.00%> (ø)` | |\n| ... and [41 more](https://codecov.io/gh/secdev/scapy/pull/3859?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "The codecov drop of  (-1.99%) compared to 3ce66d1 is a mystery to me.\r\n\r\nAnyway, there is more in the file which can be simplified... I'll switch to draft mode.",
      "Thanks for the cleanup ! You're right this function is written like garbage\n\nYou can safely ignore codecov (if clearly it's unrelated).",
      "@gpotter2 there are other places in the module where proc files are parsed and which could be cleaned up as well. That’s the reason why I switched to draft mode. Are you sure you don’t want to wait for it? Of course I could do it in a followup PR if you prefer it like that. ",
      "Sure thing ! Sorry about that. I wanted all tests to run. Will wait",
      " Done\r\n \r\n    arch.linux: simplify proc file parsing\r\n    \r\n    - use a 'with' statement to simplify error handling\r\n    - open proc files in text mode to avoid the need for decoding\r\n    - use list comprehensions and tuple unpacking\r\n",
      "Remark: I removed the `_b` suffixes from all  names of variables which changed from `bytes` to `str`. To fix mypy errors and to make the naming more consistent, I had to add some `_int` suffixes to some variables in other places.",
      "Now mypy and flake8 are happy, ready for review.",
      "Last [force-push](https://github.com/secdev/scapy/compare/9f48f3051cde0da3c73d174f76e26d315072dcf3..4033577747bac18874e6af41c9bdea7bcfa45db1) addressed the [Codacy complaints](https://app.codacy.com/gh/secdev/scapy/pullRequest?prid=10970983).",
      "@p-l- @guedou Hi ! This is ready to merge, if one of you could have a look",
      "@p-l-  According to the [Python documentation](https://docs.python.org/3/reference/compound_stmts.html#the-with-statement), grouping parentheses are only allowed since Python 3.10:\r\n\r\n> Changed in version 3.10: Support for using grouping parentheses to break the statement in multiple lines.\r\n\r\nThat's why the [ubuntu-latest 3.7](https://github.com/secdev/scapy/actions/runs/4046498140/jobs/6959360998) and [ubuntu-latest 3.8](https://github.com/secdev/scapy/actions/runs/4046498140/jobs/6959361199) jobs fail. I'll fix that. (Interestingly, the [ubuntu-latest 3.9](https://github.com/secdev/scapy/actions/runs/4046498140/jobs/6959361370) job doesn't fail, although it should according to the documentation.)\r\n",
      "Thanks @mspncp! (and thanks @gpotter2)",
      "Thanks @p-l- !"
    ],
    "commit_messages": [
      "Apply suggestions from code review\n\nCo-authored-by: Pierre <pierre@droids-corp.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac53a88c0a76e0a5161c",
    "number": 3857,
    "body": null,
    "head_branch": "remove-six",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3857](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d70bed2) into [master](https://codecov.io/gh/secdev/scapy/commit/cb619e534d6684c86fd2e00a90ce2b69a8f77ef1?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (cb619e5) will **increase** coverage by `0.38%`.\n> The diff coverage is `84.76%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3857      +/-   ##\n==========================================\n+ Coverage   81.28%   81.67%   +0.38%     \n==========================================\n  Files         326      326              \n  Lines       75466    75395      -71     \n==========================================\n+ Hits        61342    61577     +235     \n+ Misses      14124    13818     -306     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/libpcap.py](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saWJwY2FwLnB5) | `74.35% <ø> (-0.97%)` | :arrow_down: |\n| [scapy/contrib/automotive/ecu.py](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `93.56% <ø> (-0.03%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_utils.py](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF91dGlscy5weQ==) | `92.89% <ø> (ø)` | |\n| [scapy/error.py](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZXJyb3IucHk=) | `97.01% <ø> (+8.70%)` | :arrow_up: |\n| [scapy/modules/krack/crypto.py](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbW9kdWxlcy9rcmFjay9jcnlwdG8ucHk=) | `0.00% <0.00%> (ø)` | |\n| [scapy/tools/UTscapy.py](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdG9vbHMvVVRzY2FweS5weQ==) | `64.92% <ø> (ø)` | |\n| [scapy/tools/automotive/isotpscanner.py](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdG9vbHMvYXV0b21vdGl2ZS9pc290cHNjYW5uZXIucHk=) | `0.00% <0.00%> (ø)` | |\n| [scapy/tools/automotive/obdscanner.py](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdG9vbHMvYXV0b21vdGl2ZS9vYmRzY2FubmVyLnB5) | `0.00% <0.00%> (ø)` | |\n| [scapy/layers/tls/automaton\\_cli.py](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9hdXRvbWF0b25fY2xpLnB5) | `81.11% <33.33%> (-0.03%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `74.53% <40.00%> (+0.21%)` | :arrow_up: |\n| ... and [61 more](https://codecov.io/gh/secdev/scapy/pull/3857?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n\n... and [6 files with indirect coverage changes](https://codecov.io/gh/secdev/scapy/pull/3857/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n",
      "Really cool PR ! Thanks a lot for the work.\r\nFeel free to look at my changes (ughhhhhhh typing), and merge it if it looks okay !\r\n\r\nnext step is probably to cleanup `scapy.compat`",
      "Thanks a lot @gpotter2 once again!"
    ],
    "commit_messages": [
      "Drop six library (third & last batch) (#3857)\n\n* Drop six library (third & last batch)\r\n\r\n* Fix tiny mistake\r\n\r\n* Lots and lots of types fixes (+ upg 2 mypy 1.1.1)\r\n\r\n---------\r\n\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac54a88c0a76e0a5161d",
    "number": 3854,
    "body": null,
    "head_branch": "remove-six",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3854](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (da29db4) into [master](https://codecov.io/gh/secdev/scapy/commit/d8640e82c97b58a8b09976eccf3c62fe465ad451?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d8640e8) will **decrease** coverage by `0.41%`.\n> The diff coverage is `27.90%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3854      +/-   ##\n==========================================\n- Coverage   50.34%   49.94%   -0.41%     \n==========================================\n  Files         227      228       +1     \n  Lines       52678    53177     +499     \n==========================================\n+ Hits        26522    26559      +37     \n- Misses      26156    26618     +462     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/diameter.py](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9kaWFtZXRlci5weQ==) | `86.11% <0.00%> (-0.01%)` | :arrow_down: |\n| [scapy/contrib/ethercat.py](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ldGhlcmNhdC5weQ==) | `41.20% <0.00%> (-0.28%)` | :arrow_down: |\n| [scapy/contrib/icmp\\_extensions.py](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pY21wX2V4dGVuc2lvbnMucHk=) | `45.88% <ø> (-0.63%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `3.31% <0.00%> (ø)` | |\n| [scapy/contrib/ltp.py](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9sdHAucHk=) | `82.05% <0.00%> (-0.45%)` | :arrow_down: |\n| [scapy/contrib/macsec.py](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9tYWNzZWMucHk=) | `28.47% <0.00%> (-0.50%)` | :arrow_down: |\n| [scapy/contrib/nfs.py](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9uZnMucHk=) | `90.11% <0.00%> (-0.04%)` | :arrow_down: |\n| [scapy/contrib/pnio.py](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9wbmlvLnB5) | `41.17% <0.00%> (-0.39%)` | :arrow_down: |\n| [scapy/contrib/http2.py](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9odHRwMi5weQ==) | `39.28% <55.55%> (-0.14%)` | :arrow_down: |\n| [scapy/contrib/bgp.py](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9iZ3AucHk=) | `47.92% <100.00%> (-0.07%)` | :arrow_down: |\n| ... and [13 more](https://codecov.io/gh/secdev/scapy/pull/3854?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "Great work !"
    ],
    "commit_messages": [
      "Drop six library (second batch - contrib/)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac54a88c0a76e0a5161e",
    "number": 3852,
    "body": "Chocolatey winpcap support [is broken](http://disq.us/p/2sk5jna): the installer freezes to death.\r\n\r\nThis PR:\r\n- removes the appveyor winpcap test\r\n\r\nI might keep supporting it just a bit (without CI) or drop it eventually, still unsure. It was nice to have something that worked on Windows < 7 (arguably).",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3852?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3852](https://codecov.io/gh/secdev/scapy/pull/3852?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e61a5e1) into [master](https://codecov.io/gh/secdev/scapy/commit/246ad3fecbd218e6cd57705b1b42a8a5a0714652?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (246ad3f) will **increase** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3852   +/-   ##\n=======================================\n  Coverage   49.96%   49.96%           \n=======================================\n  Files         228      228           \n  Lines       53199    53199           \n=======================================\n+ Hits        26579    26583    +4     \n+ Misses      26620    26616    -4     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3852?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3852?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.96% <0.00%> (+0.18%)` | :arrow_up: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3852?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n",
      "What are the implications I removing this?",
      "We might end up losing Winpcap support because we can't test it.\r\n\r\nNpcap supports Windows7+ whereas Winpcap worked on Windows NT/2000/XP/2003+. Winpcap still works on Windows 11 so generally it has a much wider compat range and Scapy can, by disabling some features (such as WiFi monitor) and minor injections tweaks, still work on it.\r\n\r\nOn the other hand those older platforms don't work on Python 3 so arguably 2.5.0 could probably be the last version supporting Winpcap.",
      "Can you rebase this PR? I'd tend to say we could drop support for WinPcap if the only reason was to support Windows < 7.",
      "Done !",
      "After a minute of thoughts we are implicitly dropping < Windows 7 machines anyways by moving to python 3.7 so this is fine.\r\n\r\n2.5.0 will be the last version supporting winpcap, I'll remove the compat code in a future PR."
    ],
    "commit_messages": [
      "Remove winpcap test\n\nRemove winpcap test (frozen to death)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac55a88c0a76e0a5161f",
    "number": 3851,
    "body": "Some Debian-based systems don't have `wheel` pre-installed from the Python package. This causes issues when installing scapy using pip.\r\n\r\n`wheel` is required by the bdist_wheel target in setup.cfg.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "What do you mean 'issues' ?\r\n\r\nIt is up to the user to chose wether they want to use the `wheel` behavior or not. This is why it's not installed by default, and Scapy shouldn't be in charge of chosing that in place of the user.\r\n\r\nYou should probably open an issue instead if you're having problems :p"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac56a88c0a76e0a51620",
    "number": 3848,
    "body": "patches as discussed in https://github.com/secdev/scapy/issues/3847\r\n\r\n- remove resource-heavy isotp test (ftr @polybassa). I understand why it is here (there is a max limit in the spec, which it is testing), but it's a too demanding test\r\n- fix a bug with ftp_data wrongly being tested as 21 when netbase isn't available",
    "head_branch": "debian-patches",
    "is_a_fork": true,
    "comments": [
      "Since you called this various patches (debian packaging), there is a small patch to fix a typo indicated by lintian:\r\n\r\n```bash\r\nI: python3-scapy: typo-in-manual-page \"Allows to\" \"Allows one to\" [usr/share/man/man1/scapy.1.gz:75]\r\n```\r\n\r\nThe patch below fix this warning.\r\n\r\n```diff\r\nDescription: fix typo in manpage\r\nAuthor: Carlos Henrique Lima Melara <charlesmelara@outlook.com>\r\nForwarded: https://github.com/secdev/scapy/pull/3848\r\nLast-Update: 2023-01-11\r\n\r\n--- a/doc/scapy.1\r\n+++ b/doc/scapy.1\r\n@@ -72,7 +72,7 @@ If a string is given as parameter, it is used to filter the layers.\r\n .TP\r\n \\fBexplore()\\fR\r\n explores available protocols.\r\n-Allows to look for a layer or protocol through an interactive GUI.\r\n+Allows one to look for a layer or protocol through an interactive GUI.\r\n If a Scapy module is given as parameter, explore this specific module.\r\n .TP\r\n \\fBlsc()\\fR\r\n```",
      "I can confirm that the \"scapy version\" tests pass when they are run inside unpacked tarballs. I'm not sure why it didn't occur to me that `_parse_tag` can be mocked as well to get them to work there. Thanks!\r\n\r\nThe `netbios`, `ikev2` and `traceroute6` tests still fail without `/etc/services` and `/etc/protocols` (https://github.com/secdev/scapy/issues/3847#issuecomment-1378705355) but since the `netbase` package is now installed as a test dependency it no longer affects the debian package and can probably be addressed later."
    ],
    "commit_messages": [
      "Fix tests that require git on non-git installs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac57a88c0a76e0a51621",
    "number": 3846,
    "body": "Add support to forge I-DATA, PAD, and RE-CONFIG chunks based on corresponding RFCs.",
    "head_branch": "sctp_extend",
    "is_a_fork": true,
    "comments": [
      "Thanks for your interest in Scapy. Could you add the corresponding unit tests?",
      "Hi, maintainers, I have updated the corresponding unit tests. I believe the failed `Code health check` does not correctly reflect the real code health as the style of my code is consistent with existing ones, therefore, the line length warning should be ignored. Thank you for your time reviewing my commit.",
      "```\r\nRun tox -e flake8\r\nflake8: install_deps> python -I -m pip install 'flake8<6.0.0'\r\nflake8: freeze> python -m pip freeze --all\r\nflake8: flake8==5.0.4,mccabe==0.7.0,pip==22.3.1,pycodestyle==2.9.1,pyflakes==2.5.0,setuptools==65.6.3,wheel==0.38.4\r\nflake8: commands[0]> flake8 scapy/\r\nscapy/layers/sctp.py:401:89: E501 line too long (104 > 88 characters)\r\nscapy/layers/sctp.py:405:89: E501 line too long (98 > 88 characters)\r\nscapy/layers/sctp.py:413:89: E501 line too long (103 > 88 characters)\r\nscapy/layers/sctp.py:415:89: E501 line too long (98 > 88 characters)\r\nscapy/layers/sctp.py:644:89: E501 line too long (93 > 88 characters)\r\nscapy/layers/sctp.py:651:89: E501 line too long (95 > 88 characters)\r\nscapy/layers/sctp.py:657:20: E[12](https://github.com/secdev/scapy/actions/runs/3915096627/jobs/6985322324#step:5:13)6 continuation line over-indented for hanging indent\r\nscapy/layers/sctp.py:658:89: E501 line too long (92 > 88 characters)\r\nscapy/layers/sctp.py:8[13](https://github.com/secdev/scapy/actions/runs/3915096627/jobs/6985322324#step:5:14):89: E501 line too long (94 > 88 characters)\r\nscapy/layers/sctp.py:821:89: E501 line too long (95 > 88 characters)\r\nscapy/layers/sctp.py:822:89: E501 line too long (94 > 88 characters)\r\nflake8: exit 1 (22.29 seconds) /home/runner/work/scapy/scapy> flake8 scapy/ pid=[17](https://github.com/secdev/scapy/actions/runs/3915096627/jobs/6985322324#step:5:18)13\r\n  flake8: FAIL code 1 (25.33=setup[3.04]+cmd[[22](https://github.com/secdev/scapy/actions/runs/3915096627/jobs/6985322324#step:5:23).29] seconds)\r\n  evaluation failed :( ([26](https://github.com/secdev/scapy/actions/runs/3915096627/jobs/6985322324#step:5:27).06 seconds)\r\nError: Process completed with exit code 1.\r\n```\r\nflake8 is complaining about your code style, please fix it, something like:\r\n```\r\ndiff --git a/scapy/layers/sctp.py b/scapy/layers/sctp.py\r\nindex 8a453b69..74a909f3 100644\r\n--- a/scapy/layers/sctp.py\r\n+++ b/scapy/layers/sctp.py\r\n@@ -398,11 +398,13 @@ class SCTPChunkParamSupportedAddrTypes(_SCTPChunkParam, Packet):\r\n\r\n class SCTPChunkParamOutSSNResetReq(_SCTPChunkParam, Packet):\r\n     fields_desc = [ShortEnumField(\"type\", 13, sctpchunkparamtypes),\r\n-                   FieldLenField(\"len\", None, length_of=\"stream_num_list\", adjust=lambda pkt, x:x + 16),\r\n+                   FieldLenField(\"len\", None, length_of=\"stream_num_list\",\r\n+                                 adjust=lambda pkt, x:x + 16),\r\n                    XIntField(\"re_conf_req_seq_num\", None),\r\n                    XIntField(\"re_conf_res_seq_num\", None),\r\n                    XIntField(\"tsn\", None),\r\n-                   PadField(FieldListField(\"stream_num_list\", [], XShortField(\"stream_num\", None),\r\n+                   PadField(FieldListField(\"stream_num_list\", [],\r\n+                                           XShortField(\"stream_num\", None),\r\n                                            length_from=lambda pkt: pkt.len - 16),\r\n                             4, padwith=b\"\\x00\"),\r\n                    ]\r\n@@ -410,9 +412,11 @@ class SCTPChunkParamOutSSNResetReq(_SCTPChunkParam, Packet):\r\n\r\n class SCTPChunkParamInSSNResetReq(_SCTPChunkParam, Packet):\r\n     fields_desc = [ShortEnumField(\"type\", 14, sctpchunkparamtypes),\r\n-                   FieldLenField(\"len\", None, length_of=\"stream_num_list\", adjust=lambda pkt, x:x + 8),\r\n+                   FieldLenField(\"len\", None, length_of=\"stream_num_list\",\r\n+                                 adjust=lambda pkt, x:x + 8),\r\n                    XIntField(\"re_conf_req_seq_num\", None),\r\n-                   PadField(FieldListField(\"stream_num_list\", [], XShortField(\"stream_num\", None),\r\n+                   PadField(FieldListField(\"stream_num_list\", [],\r\n+                                           XShortField(\"stream_num\", None),\r\n                                            length_from=lambda pkt: pkt.len - 8),\r\n                             4, padwith=b\"\\x00\"),\r\n                    ]\r\n@@ -641,21 +645,23 @@ class SCTPChunkIData(_SCTPChunkGuessPayload, Packet):\r\n                    BitField(\"unordered\", 0, 1),\r\n                    BitField(\"beginning\", 0, 1),\r\n                    BitField(\"ending\", 0, 1),\r\n-                   FieldLenField(\"len\", None, length_of=\"data\", adjust=lambda pkt, x:x + 20),\r\n+                   FieldLenField(\"len\", None, length_of=\"data\",\r\n+                                 adjust=lambda pkt, x:x + 20),\r\n                    XIntField(\"tsn\", None),\r\n                    XShortField(\"stream_id\", None),\r\n                    XShortField(\"reserved_16\", None),\r\n                    XIntField(\"message_id\", None),\r\n                    MultipleTypeField(\r\n                        [\r\n-                           (IntEnumField(\"ppid_fsn\", None, SCTP_PAYLOAD_PROTOCOL_INDENTIFIERS),\r\n+                           (IntEnumField(\"ppid_fsn\", None,\r\n+                                         SCTP_PAYLOAD_PROTOCOL_INDENTIFIERS),\r\n                             lambda pkt: pkt.beginning == 1),\r\n                            (XIntField(\"ppid_fsn\", None),\r\n                             lambda pkt: pkt.beginning == 0),\r\n                        ],\r\n-                       XIntField(\"ppid_fsn\", None),\r\n-                   ),\r\n-                   PadField(StrLenField(\"data\", None, length_from=lambda pkt: pkt.len - 20),\r\n+                       XIntField(\"ppid_fsn\", None)),\r\n+                   PadField(StrLenField(\"data\", None,\r\n+                                        length_from=lambda pkt: pkt.len - 20),\r\n                             4, padwith=b\"\\x00\"),\r\n                    ]\r\n\r\n@@ -810,7 +816,8 @@ class SCTPChunkAddressConf(_SCTPChunkGuessPayload, Packet):\r\n class SCTPChunkReConfig(_SCTPChunkGuessPayload, Packet):\r\n     fields_desc = [ByteEnumField(\"type\", 130, sctpchunktypes),\r\n                    XByteField(\"flags\", None),\r\n-                   FieldLenField(\"len\", None, length_of=\"params\", adjust=lambda pkt, x:x + 4),\r\n+                   FieldLenField(\"len\", None, length_of=\"params\",\r\n+                                 adjust=lambda pkt, x:x + 4),\r\n                    ChunkParamField(\"params\", None, length_from=lambda pkt: pkt.len - 4),\r\n                    ]\r\n\r\n@@ -818,8 +825,10 @@ class SCTPChunkReConfig(_SCTPChunkGuessPayload, Packet):\r\n class SCTPChunkPad(_SCTPChunkGuessPayload, Packet):\r\n     fields_desc = [ByteEnumField(\"type\", 132, sctpchunktypes),\r\n                    XByteField(\"flags\", None),\r\n-                   FieldLenField(\"len\", None, length_of=\"padding\", adjust=lambda pkt, x:x + 8),\r\n-                   PadField(StrLenField(\"padding\", None, length_from=lambda pkt: pkt.len - 8),\r\n+                   FieldLenField(\"len\", None, length_of=\"padding\",\r\n+                                 adjust=lambda pkt, x:x + 8),\r\n+                   PadField(StrLenField(\"padding\", None,\r\n+                                        length_from=lambda pkt: pkt.len - 8),\r\n                             4, padwith=b\"\\x00\")\r\n                    ]\r\n```\r\nThanks.",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3846](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9ae55f2) into [master](https://codecov.io/gh/secdev/scapy/commit/9473f77d8b548c8e478e52838bdd4c12f5d4f4ff?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9473f77) will **increase** coverage by `2.37%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3846      +/-   ##\n==========================================\n+ Coverage   84.57%   86.94%   +2.37%     \n==========================================\n  Files         296      310      +14     \n  Lines       62214    70625    +8411     \n==========================================\n+ Hits        52616    61408    +8792     \n+ Misses       9598     9217     -381     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/sctp.py](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3NjdHAucHk=) | `95.62% <100.00%> (+0.50%)` | :arrow_up: |\n| [scapy/compat.py](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29tcGF0LnB5) | `59.80% <0.00%> (-33.06%)` | :arrow_down: |\n| [scapy/layers/usb.py](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3VzYi5weQ==) | `39.02% <0.00%> (-32.53%)` | :arrow_down: |\n| [scapy/libs/six.py](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy9zaXgucHk=) | `54.47% <0.00%> (-15.91%)` | :arrow_down: |\n| [scapy/error.py](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZXJyb3IucHk=) | `84.41% <0.00%> (-10.39%)` | :arrow_down: |\n| [scapy/pton\\_ntop.py](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcHRvbl9udG9wLnB5) | `88.88% <0.00%> (-8.38%)` | :arrow_down: |\n| [scapy/contrib/automotive/scanner/configuration.py](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NjYW5uZXIvY29uZmlndXJhdGlvbi5weQ==) | `88.50% <0.00%> (-6.04%)` | :arrow_down: |\n| [scapy/asn1/asn1.py](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMS9hc24xLnB5) | `86.44% <0.00%> (-4.93%)` | :arrow_down: |\n| [scapy/pipetool.py](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGlwZXRvb2wucHk=) | `80.43% <0.00%> (-3.67%)` | :arrow_down: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `92.82% <0.00%> (-2.57%)` | :arrow_down: |\n| ... and [173 more](https://codecov.io/gh/secdev/scapy/pull/3846?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n"
    ],
    "commit_messages": [
      "layers/sctp.py: Add support for multiple new chunk types (#3846)\n\n* SCTP: add support for I-DATA\r\n\r\nAdding support for I-DATA chunk based on RFC8260.\r\n\r\nSigned-off-by: Yuxuan Luo <luoyuxuan.carl@gmail.com>\r\n\r\n* SCTP: add support for PAD chunk\r\n\r\nAdding support to forge PAD chunk based on RFC4820\r\n\r\nSigned-off-by: Yuxuan Luo <luoyuxuan.carl@gmail.com>\r\n\r\n* SCTP: add support for RE-CONFIG chunk\r\n\r\nAdding support to forge RE-CONFIG chunk and corresponding\r\nparameters based on RFC6525.\r\n\r\nSigned-off-by: Yuxuan Luo <luoyuxuan.carl@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Yuxuan Luo <luoyuxuan.carl@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac58a88c0a76e0a51622",
    "number": 3845,
    "body": "This first batch of changes removes the `six` module from some parts of Scapy, and all `__future__` imports.\r\n\r\nThat's only a first step and several other similar PR should arrive soon.\r\n\r\nI think it's best to make & merge those changes ASAP to avoid new conflicts, but I might be wrong.",
    "head_branch": "remove-six",
    "is_a_fork": true,
    "comments": [
      "Thoughts: we could also replace `mock` and the `pip install mock` from all tests with `unittests.mock`"
    ],
    "commit_messages": [
      "Drop six library (first batch)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac59a88c0a76e0a51623",
    "number": 3841,
    "body": "The FEC TLV was malformed for all prefixes with length less or equal 24.\r\n\r\n<img width=\"667\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6083768/210887013-0cf35c32-24ab-4dc8-9321-b8b2a5ae7776.png\">\r\n\r\n\r\nAccording to RFC5036, an address prefix is encoded according to the address family field, whose length, in bits, was specified in the prefix length field, padded to a byte boundary.\r\n\r\nhttps://www.rfc-editor.org/rfc/rfc5036.html#section-3.4.1\r\n\r\nThis was already done correctly in the corresponding decode but wrong in encode function. \r\n\r\nI tested and monkey patched this in one of my open source projects shown here:\r\nhttps://github.com/rtbrick/bngblaster/blob/dev/code/ldpupdate#L31\r\n\r\nWith fix:\r\n<img width=\"670\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6083768/210887200-0c401da9-44e0-494e-9b7d-8578b919f86f.png\">\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi ! Thanks for the PR. Could you add a unit test to https://github.com/secdev/scapy/blob/master/test/contrib/ldp.uts ? Thanks !",
      "Closing for inactivity."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac5aa88c0a76e0a51624",
    "number": 3840,
    "body": "Fix for the issue where calling ```s.connect()``` via ```UDS_DoIPSocket6()``` on a ipv6 link local address will result in the error\r\n```OSError: [Errno 22] Invalid argument```\r\n\r\ntransmission over ipv6 link local addresses cannot be done until their scope ids/zone ids are also mentioned.\r\n\r\nThis can be easily obtained using ```getaddrinfo``` which also works for any ipv4 address.\r\ne.g)\r\n```\r\n>>> addrinfo = socket.getaddrinfo(\"fe80::9480:f529:aa6c:c2ba%enp0s3\", None, proto=socket.IPPROTO_TCP)\r\n>>> print(addrinfo[0][-1])\r\n('fe80::9480:f529:aa6c:c2ba', 0, 0, 2)\r\n```\r\n2 is the scope id for my iface name enp0s3.",
    "head_branch": "bugfix/ipv6-locallink",
    "is_a_fork": true,
    "comments": [
      "LGTM. @guedou what do you think?",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3840](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5efd9fc) into [master](https://codecov.io/gh/secdev/scapy/commit/33d3093e4ff6e4a5a300ca54876fb5d214a020e6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (33d3093) will **increase** coverage by `0.37%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3840      +/-   ##\n==========================================\n+ Coverage   49.95%   50.33%   +0.37%     \n==========================================\n  Files         228      227       -1     \n  Lines       53176    52663     -513     \n==========================================\n- Hits        26566    26508      -58     \n+ Misses      26610    26155     -455     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cansocket\\_python\\_can.py](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `33.12% <0.00%> (-8.29%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `39.89% <0.00%> (-1.87%)` | :arrow_down: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `24.02% <0.00%> (-1.51%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.72% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | | |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3840?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n",
      "is there something left that I have to do for the merge?",
      "@sa-isd Can you make something similar, but for IPv4 as well? @gpotter2 do you agree on this addition of IPv4 in this PR?",
      "No, this is completely irrelevant"
    ],
    "commit_messages": [
      "DoIp: fix socket not handling IPv6 link-local address (#3840)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac5ba88c0a76e0a51625",
    "number": 3838,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@guedou @p-l- What do you think?",
      "This is a good idea. As of today, `test/` only contains Python scripts. I tried the fix with `python setup.py sdist` and the resulting tarball still contains `test/`. I wonder if this fix is complete.",
      "@guedou It is OK for the .tar.gz to still have test/ , but when you install it with e.g. `pip install scapy-2.5.0.tar.gz` you should no longer get a `test` package installed at `.../lib/python3.11/site-packages/test`. It's the `setup.py` within the sdist which says what files to copy into the site packages dir.\r\n\r\nIf you want also test/ to be excluded from the tarball (which I do recommend, so the files are consistent with a .whl) then there is another change for MANIFEST.in.  I'll add a commit for that now.",
      "Thanks for your answer!"
    ],
    "commit_messages": [
      "Don’t distribute test directory into site-packages (#3838)\n\n* Don’t distribute test directory into site-packages\r\n\r\n* exclude test/* from sdist"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac5ba88c0a76e0a51626",
    "number": 3837,
    "body": "This PR moves the stop_event in automotive scanners into the global configuration. This allows all enumerators to react on the stop event as well. ",
    "head_branch": "automotive_cleanup3",
    "is_a_fork": true,
    "comments": [
      "Tests will be fixed after #3836 is merged"
    ],
    "commit_messages": [
      "Refactoring of stop_event in automotive scanners"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac5ca88c0a76e0a51627",
    "number": 3836,
    "body": "…  and set ISOTPSoftSocket to blocking socket\r\n",
    "head_branch": "automotive_cleanup2",
    "is_a_fork": true,
    "comments": [
      "@gpotter2 Ready for merge",
      "Hi, thanks for the pr! Sorry there are conflicts :/ ",
      "@gpotter2 Conflict resolved. "
    ],
    "commit_messages": [
      "Cleanup of automotive scanner debug output (#3836)\n\n* Cleanup of automotive scanner debug output and set ISOTPSoftSocket to blocking socket\r\n\r\n* increase sniff time to stabilize test\r\n\r\n* cleanup typing\r\n\r\n* add logging\r\n\r\n* fix typing\r\n\r\nCo-authored-by: Nils Weiss <nils@dissec.to>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac5da88c0a76e0a51628",
    "number": 3834,
    "body": "This PR removes Python 2.7 from CI.",
    "head_branch": "ci_remove_python2",
    "is_a_fork": true,
    "comments": [
      "Python 2 is dead, long live Python 2 !"
    ],
    "commit_messages": [
      "GitHub Actions - remove Python 2.7 tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac5ea88c0a76e0a51629",
    "number": 3833,
    "body": "3GPP TS 29.274 states in Section 5.5.1:\r\n\"Octets 3 to 4 represent the Message Length field. This field shall indicate the length of the message in octets excluding the mandatory part of the GTP-C header (the first 4 octets). The TEID (if present) and the Sequence Number shall be included in the length count.\"\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3833?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3833](https://codecov.io/gh/secdev/scapy/pull/3833?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f3f4131) into [master](https://codecov.io/gh/secdev/scapy/commit/eba8ce4dcaf8efaebfc27fedb321b41d16cc3923?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (eba8ce4) will **decrease** coverage by `0.02%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3833      +/-   ##\n==========================================\n- Coverage   49.95%   49.94%   -0.02%     \n==========================================\n  Files         228      228              \n  Lines       53176    53176              \n==========================================\n- Hits        26565    26559       -6     \n- Misses      26611    26617       +6     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3833?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/gtp.py](https://codecov.io/gh/secdev/scapy/pull/3833?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ndHAucHk=) | `66.27% <0.00%> (ø)` | |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3833?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3833?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3833?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.72% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3833?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Fix length calculation for GTPv2 header (#3833)\n\n* Fix length calculation for GTPv2 header\n\n3GPP TS 29.274 states in Section 5.5.1:\n\"Octets 3 to 4 represent the Message Length field. This field shall indicate\nthe length of the message in octets excluding the mandatory part of the GTP-C\nheader (the first 4 octets). The TEID (if present) and the Sequence Number\nshall be included in the length count.\"\n\n* Add comment on length in different GTP versions\n\n---------\n\nCo-authored-by: Mike Müller <mmuller@twilio.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac5fa88c0a76e0a5162a",
    "number": 3832,
    "body": "Compute the flowset length *after* padding instead of computing it before.\r\nDetails in #3831 ",
    "head_branch": "fix-NetflowV9-options-template-length",
    "is_a_fork": true,
    "comments": [
      "Thanks for the PR ! Would you mind adding a unit test to https://github.com/secdev/scapy/blob/master/test/scapy/layers/netflow.uts ? thanks",
      "Done, successfully tested locally with `/test/run_tests -t ./test/scapy/layers/netflow.uts`\r\nI tried to keep this unit test minimal, please tell me if I should extend it.",
      "Hello, \r\n\r\nPlease @gpotter2, what should be done to move it forward ?\r\n\r\nOne appveyor job is failing, but it is clearly not related to this patch :\r\n`Build execution time has reached the maximum allowed time for your plan (15 minutes)`\r\n\r\nThanks,",
      "Based on the pull request https://github.com/secdev/scapy/pull/3852 , should I assume that you confirm @gpotter2 that the failure is an \"ok\" one ? \r\n\r\nIf so, then, what is missing to apply this pull request ? I am quite interested in moving forward."
    ],
    "commit_messages": [
      "Fix proposition for #3831 - Options Template length not compliant with RFC 3954 (#3832)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac60a88c0a76e0a5162b",
    "number": 3829,
    "body": "Adds the Control PDUs that were added in spec revision 5.1, 5.2 and 5.3.\r\n\r\nThis changes only support using a scapy as a packet builder.\r\nDissection is not yet implemented.\r\n\r\n",
    "head_branch": "btle_add_53_control_pdus",
    "is_a_fork": true,
    "comments": [
      "@gpotter2 , do you mind taking a look at this PR? It is a natural continuation of https://github.com/secdev/scapy/pull/3037.\r\n\r\nI'm not sure why CI tests are failing on certain configurations. The tests pass on my local setup. My assumption is that there is some minor difference between some python versions that triggers this behavior.",
      "Hi ! Thanks for the PR!\r\nIt seems the tests didn't pass on 2.7. That's alright since we are now dropping support for it (I will update the tests when I find the time).\r\nCould you explain what's missing to support dissection? To make it into Scapy it would be better for it to support it.",
      "Hi! I might be wrong, but I guess that in order to dissect incoming Bluetooth Link Layer packets, you need a device that can input something with the format described here https://github.com/secdev/scapy/blob/master/scapy/layers/bluetooth4LE.py#L74. I'm not sure if scapy currently supports using such a device as input yet, maybe you know that better. So maybe it is already supported!\r\n\r\nI don't have a device that can provide data in the above format, I'm more familiar with the [nRF Sniffer](https://www.nordicsemi.com/Products/Development-tools/nrf-sniffer-for-bluetooth-le). This device provides data in a similar format and can be used as an input to wireshark.\r\n\r\nIt could be an idea to add support for using the nRF Sniffer to scapy. I'm not that familiar with scapy, so I don't know exactly what is needed to support it, but I believe it should be possible with to much effort. But currently I'm satisfied with using wireshark for my use cases. \r\n\r\nThe fact that scapy can be used to _build_ packets was quite useful to me. It made me able to create custom wireshark logs that I could use to test new functionality in wireshark ([for example, see this PR](https://gitlab.com/wireshark/wireshark/-/merge_requests/9233)). Creating such logs using real world devices is not feasible.\r\n\r\nIf you have other questions related to this PR or related things, please don't hesitate to ask.\r\n\r\n ",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3829](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (e105180) into [master](https://codecov.io/gh/secdev/scapy/commit/eba8ce4dcaf8efaebfc27fedb321b41d16cc3923?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (eba8ce4) will **increase** coverage by `0.43%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3829      +/-   ##\n==========================================\n+ Coverage   49.95%   50.39%   +0.43%     \n==========================================\n  Files         228      227       -1     \n  Lines       53176    52727     -449     \n==========================================\n+ Hits        26565    26572       +7     \n+ Misses      26611    26155     -456     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/bluetooth4LE.py](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2JsdWV0b290aDRMRS5weQ==) | `81.56% <100.00%> (+4.60%)` | :arrow_up: |\n| [scapy/contrib/cansocket\\_python\\_can.py](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `33.12% <0.00%> (-8.29%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `39.89% <0.00%> (-1.87%)` | :arrow_down: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `24.02% <0.00%> (-1.21%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.72% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | | |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3829?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n",
      "@gpotter2 , let me know if there is anything else you want to be addressed. I've rebased this PR on master and now it passes the checks.",
      "Thanks for the PR & sorry for the delay !"
    ],
    "commit_messages": [
      "btle: Extend control PDU list with Bluetooth 5.3 PDUs\n\nAdds the Control PDUs that were added in spec revision 5.1, 5.2\nand 5.3.\n\nThis changes only support using a scapy as a packet builder.\nDissection is not yet implemented.\n\nBTLEFeatureField() is extended with 5.1, 5.2, 5.3 features"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac61a88c0a76e0a5162c",
    "number": 3827,
    "body": "This PR will add 802.11 action frame categories (802.11-2016 9.4.1.11), 802.11 WNM frame action fields (802.11-2016 9.6.14.1), and 802.11v BSS transition (BTM) request and response frames (802.11-2016 9.6.14.9-10) to the dot11 layer.\r\n\r\n802.11v BTM frames are part of the WNM protocol, which is a category of action management frames. They are used to steer wireless stations to and from a BSS. This PR includes required fields and optional Neighbor Report element field. Neighbor Report (802.11-2016 9.4.2.37) element can contain various sub elements; only BSS Termination Duration sub element is added, and for the rest, generic `SubelemTLV` is used.\r\n\r\nTests: air-sniffed BTM request and response frames are added. For response, a frame with status code = 6 is used, which contains the Neighbor Report element and will provide more coverage for the test.",
    "head_branch": "dot11_btm",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3827?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3827](https://codecov.io/gh/secdev/scapy/pull/3827?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2dd89d6) into [master](https://codecov.io/gh/secdev/scapy/commit/2fd25240fec92ea3b023aaecf2c048a013367b16?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2fd2524) will **increase** coverage by `0.01%`.\n> The diff coverage is `96.42%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3827      +/-   ##\n==========================================\n+ Coverage   49.97%   49.99%   +0.01%     \n==========================================\n  Files         228      228              \n  Lines       53157    53185      +28     \n==========================================\n+ Hits        26565    26589      +24     \n- Misses      26592    26596       +4     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3827?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/dot11.py](https://codecov.io/gh/secdev/scapy/pull/3827?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2RvdDExLnB5) | `52.06% <96.42%> (+2.34%)` | :arrow_up: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3827?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3827?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3827?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.88% <0.00%> (+0.05%)` | :arrow_up: |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3827?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n",
      "CI error: `Build execution time has reached the maximum allowed time for your plan (15 minutes).` 🤔",
      "@gpotter2 can you help me to figure out this CI error?\r\n> Build execution time has reached the maximum allowed time for your plan (15 minutes).\r\n\r\nPerhaps there is a workaround, or a way to shorten the build time?\r\n\r\nThanks.",
      "Thanks a lot for the PR !"
    ],
    "commit_messages": [
      "Add 802.11v BSS transition management request & response (#3827)\n\n* Add 802.11 action category fields\r\n\r\n- 802.11-2016 9.4.1.11\r\n\r\n* Add 802.11 WNM action fields\r\n\r\n- 802.11-2016 9.6.14.1\r\n\r\n* Add 802.11v BTM request & response frames\r\n\r\n- 802.11-2016 9.6.14.9\r\n- 802.11-2016 9.6.14.10\r\n- BSS transition management (BTM) request & response frames\r\nusually contain neighbor report subelem, which is added.\r\n- Neighbor report can have additional subelems,\r\nfor those generic SubelemTLV is used.\r\n\r\n* Add 802.11v BTM request & response tests\r\n\r\n- 802.11-2016 9.6.14.9\r\n- 802.11-2016 9.6.14.10\r\n\r\n* Add Dot11Ack test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac61a88c0a76e0a5162d",
    "number": 3825,
    "body": "This PR adds:\r\n- typing of `arch/bpf` -> **core fully typed**\r\n\r\nThis will not make it into 2.5.0 but was technically ready before 2.5.0 so the claim that we typed the core is valid 😋",
    "head_branch": "macos",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3825?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3825](https://app.codecov.io/gh/secdev/scapy/pull/3825?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (bc8e58d) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5a2dbf08d76367ef8c392c9ff9c62674c9732d2f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5a2dbf0) will **decrease** coverage by `0.70%`.\n> The diff coverage is `1.69%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3825      +/-   ##\n==========================================\n- Coverage   81.95%   81.25%   -0.70%     \n==========================================\n  Files         331      331              \n  Lines       76647    76654       +7     \n==========================================\n- Hits        62813    62284     -529     \n- Misses      13834    14370     +536     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/3825?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/linux.py](https://app.codecov.io/gh/secdev/scapy/pull/3825?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saW51eC5weQ==) | `85.30% <50.00%> (-1.29%)` | :arrow_down: |\n| [scapy/arch/bpf/consts.py](https://app.codecov.io/gh/secdev/scapy/pull/3825?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9icGYvY29uc3RzLnB5) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [scapy/arch/bpf/core.py](https://app.codecov.io/gh/secdev/scapy/pull/3825?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9icGYvY29yZS5weQ==) | `0.00% <0.00%> (-87.13%)` | :arrow_down: |\n| [scapy/arch/bpf/supersocket.py](https://app.codecov.io/gh/secdev/scapy/pull/3825?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9icGYvc3VwZXJzb2NrZXQucHk=) | `0.00% <0.00%> (-71.22%)` | :arrow_down: |\n\n... and [13 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3825/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "This should have been merged a year ago."
    ],
    "commit_messages": [
      "Type hint arch/bpf (#3825)\n\n* Type hint arch/bpf\r\n\r\n* Enable mypy for more libs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac62a88c0a76e0a5162e",
    "number": 3824,
    "body": "see https://github.com/secdev/scapy/issues/3823",
    "head_branch": "nc-code",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3824?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3824](https://codecov.io/gh/secdev/scapy/pull/3824?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (85253d1) into [master](https://codecov.io/gh/secdev/scapy/commit/ef352bd7fd56219cb01bc16d58cdbd6129824dbe?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ef352bd) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3824      +/-   ##\n==========================================\n- Coverage   84.57%   84.56%   -0.02%     \n==========================================\n  Files         296      296              \n  Lines       62267    62214      -53     \n==========================================\n- Hits        52663    52609      -54     \n- Misses       9604     9605       +1     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3824?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/volatile.py](https://codecov.io/gh/secdev/scapy/pull/3824/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdm9sYXRpbGUucHk=) | `85.27% <ø> (-0.79%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3824/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n| [scapy/pipetool.py](https://codecov.io/gh/secdev/scapy/pull/3824/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGlwZXRvb2wucHk=) | `84.10% <0.00%> (-0.23%)` | :arrow_down: |\n| [scapy/packet.py](https://codecov.io/gh/secdev/scapy/pull/3824/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `82.58% <0.00%> (-0.08%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3824/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `73.84% <0.00%> (+0.21%)` | :arrow_up: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3824/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `56.88% <0.00%> (+0.29%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Remove NC code (#3824)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac63a88c0a76e0a5162f",
    "number": 3822,
    "body": "Reducing length of 'length' field along with 'ietype' and 'CR_flag+instance'\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3822?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3822](https://app.codecov.io/gh/secdev/scapy/pull/3822?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (251ac10) into [master](https://app.codecov.io/gh/secdev/scapy/commit/5fa6428a1843fb851d8c6de1d0c59dad0168df78?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5fa6428) will **increase** coverage by `32.32%`.\n> Report is 5 commits behind head on master.\n> The diff coverage is `96.55%`.\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3822       +/-   ##\n===========================================\n+ Coverage   49.60%   81.93%   +32.32%     \n===========================================\n  Files         341      349        +8     \n  Lines       76081    81786     +5705     \n===========================================\n+ Hits        37742    67009    +29267     \n+ Misses      38339    14777    -23562     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/3822?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cdp.py](https://app.codecov.io/gh/secdev/scapy/pull/3822?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jZHAucHk=) | `95.42% <100.00%> (+23.42%)` | :arrow_up: |\n| [scapy/contrib/rtps/rtps.py](https://app.codecov.io/gh/secdev/scapy/pull/3822?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ydHBzL3J0cHMucHk=) | `98.82% <ø> (+12.94%)` | :arrow_up: |\n| [scapy/layers/inet6.py](https://app.codecov.io/gh/secdev/scapy/pull/3822?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2luZXQ2LnB5) | `88.67% <100.00%> (+47.75%)` | :arrow_up: |\n| [scapy/layers/ipsec.py](https://app.codecov.io/gh/secdev/scapy/pull/3822?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lwc2VjLnB5) | `90.60% <100.00%> (+61.02%)` | :arrow_up: |\n| [scapy/contrib/gtp.py](https://app.codecov.io/gh/secdev/scapy/pull/3822?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ndHAucHk=) | `91.54% <0.00%> (+25.36%)` | :arrow_up: |\n\n... and [260 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3822/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>",
      "Thanks for your interest in Scapy. Can you provide a packet example that exhibits the issue that your are fixing? It will help us implement a unit test.",
      "Hi, not my PR, but I came upon the same issue and can confirm that this change fixes the issue. \r\nThe issue with the mismatch in length can be shown using scapy's show2():\r\n\r\nWithout this change:\r\n\r\n```\r\n>>> (IP(dst=\"10.5.0.2\")/ \\\r\n...:     UDP(dport=2123)/ \\\r\n...:     GTPHeader(seq=12345, version=2, gtp_type=32)/ \\\r\n...:     GTPV2CreateSessionRequest(IE_list=[\r\n...:         IE_IMSI(IMSI=b'001030000000356'),\r\n...:         IE_APN(APN=b'super')\r\n...:         ])).show2()\r\n###[ IP ]###\r\n  version   = 4\r\n  ihl       = 5\r\n  tos       = 0x0\r\n  len       = 62\r\n  id        = 1\r\n  flags     =\r\n  frag      = 0\r\n  ttl       = 64\r\n  proto     = udp\r\n  chksum    = 0xfdd8\r\n  src       = 192.168.178.38\r\n  dst       = 10.5.0.2\r\n  \\options   \\\r\n###[ UDP ]###\r\n     sport     = gtp_control\r\n     dport     = gtp_control\r\n     len       = 42\r\n     chksum    = 0x4f76\r\n###[ GTP v2 Header ]###\r\n        version   = 2\r\n        P         = 1\r\n        T         = 1\r\n        MP        = 0\r\n        SPARE1    = 0\r\n        SPARE2    = 0\r\n        gtp_type  = create_session_req\r\n        length    = 26\r\n        teid      = 0x0\r\n        seq       = 12345\r\n        SPARE3    = 0\r\n###[ GTPv2 Create Session Request ]###\r\n           \\IE_list   \\\r\n            |###[ IE IMSI ]###\r\n            |  ietype    = IMSI\r\n            |  length    = 10\r\n            |  CR_flag   = 0\r\n            |  instance  = 0\r\n            |  IMSI      = '0010300000003567400'\r\n            |###[ Raw ]###\r\n            |  load      = '\\x08\\x00\\x05super'\r\n```\r\n\r\nNotice that the APN IE is not parsed properly. Also wireshark is not able to dissect the resulting package.\r\n\r\nWith this change:\r\n\r\n```\r\n>>> (IP(dst=\"10.5.0.2\")/ \\\r\n...:     UDP(dport=2123)/ \\\r\n...:     GTPHeader(seq=12345, version=2, gtp_type=32)/ \\\r\n...:     GTPV2CreateSessionRequest(IE_list=[\r\n...:         IE_IMSI(IMSI=b'001030000000356'),\r\n...:         IE_APN(APN=b'super')\r\n...:         ])).show2()\r\n###[ IP ]###\r\n  version   = 4\r\n  ihl       = 5\r\n  tos       = 0x0\r\n  len       = 62\r\n  id        = 1\r\n  flags     =\r\n  frag      = 0\r\n  ttl       = 64\r\n  proto     = udp\r\n  chksum    = 0xfdd8\r\n  src       = 192.168.178.38\r\n  dst       = 10.5.0.2\r\n  \\options   \\\r\n###[ UDP ]###\r\n     sport     = gtp_control\r\n     dport     = gtp_control\r\n     len       = 42\r\n     chksum    = 0x5376\r\n###[ GTP v2 Header ]###\r\n        version   = 2\r\n        P         = 1\r\n        T         = 1\r\n        MP        = 0\r\n        SPARE1    = 0\r\n        SPARE2    = 0\r\n        gtp_type  = create_session_req\r\n        length    = 26\r\n        teid      = 0x0\r\n        seq       = 12345\r\n        SPARE3    = 0\r\n###[ GTPv2 Create Session Request ]###\r\n           \\IE_list   \\\r\n            |###[ IE IMSI ]###\r\n            |  ietype    = IMSI\r\n            |  length    = 8\r\n            |  CR_flag   = 0\r\n            |  instance  = 0\r\n            |  IMSI      = '001030000000356'\r\n            |###[ IE APN ]###\r\n            |  ietype    = APN\r\n            |  length    = 6\r\n            |  CR_flag   = 0\r\n            |  instance  = 0\r\n            |  APN       = 'super'\r\n```",
      "Hi @guedou , extremely sorry for not replying to your message. As @muelleme said, the length field should only container the payload length in the IE header. So adjusted length by reducing 2 bytes for the length attribute.",
      "Sorry for the delay, but it would be nice to have a test in https://github.com/secdev/scapy/blob/master/test/contrib/gtp.uts to check this",
      "added a test"
    ],
    "commit_messages": [
      "Fix GTP payload length computation (#3822)\n\nReducing length of 'length' field along with 'ietype' and 'CR_flag+instance'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac64a88c0a76e0a51630",
    "number": 3821,
    "body": "Attempt to fix #2999 \r\n\r\nSome unit tests were fixed. According to the NTP specifications and Wireshark, they were incorrect.",
    "head_branch": "ntp_authenticators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac65a88c0a76e0a51631",
    "number": 3820,
    "body": "Tiny improvements to the ARP utils\r\n- mitm between a machine a subnet\r\n- update some `hwdst` to be closer to real ARPs\r\n- added tests for `arp_mitm`",
    "head_branch": "arp-tests",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3820](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d972630) into [master](https://codecov.io/gh/secdev/scapy/commit/5f0bb6c43530dcb2e1fb21d810cba9297e7ba1ca?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5f0bb6c) will **decrease** coverage by `2.04%`.\n> The diff coverage is `10.52%`.\n\n> :exclamation: Current head d972630 differs from pull request most recent head 2298bcc. Consider uploading reports for the commit 2298bcc to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3820      +/-   ##\n==========================================\n- Coverage   52.08%   50.04%   -2.04%     \n==========================================\n  Files         190      228      +38     \n  Lines       43267    53255    +9988     \n==========================================\n+ Hits        22536    26654    +4118     \n- Misses      20731    26601    +5870     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/l2.py](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `42.97% <10.52%> (-0.35%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/layers/tls/extensions.py](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9leHRlbnNpb25zLnB5) | `61.37% <0.00%> (ø)` | |\n| [scapy/contrib/gtp\\_v2.py](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ndHBfdjIucHk=) | `91.30% <0.00%> (ø)` | |\n| [scapy/layers/tls/cert.py](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jZXJ0LnB5) | `16.98% <0.00%> (ø)` | |\n| [scapy/contrib/igmpv3.py](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pZ21wdjMucHk=) | `57.89% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/prf.py](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vcHJmLnB5) | `29.37% <0.00%> (ø)` | |\n| [scapy/contrib/ppi\\_geotag.py](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9wcGlfZ2VvdGFnLnB5) | `64.97% <0.00%> (ø)` | |\n| [scapy/layers/tls/keyexchange.py](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9rZXlleGNoYW5nZS5weQ==) | `33.83% <0.00%> (ø)` | |\n| ... and [40 more](https://codecov.io/gh/secdev/scapy/pull/3820?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "@p-l- Hi, this is ready for review. Really liked your insight on the first PR",
      "The appveyor crash can be ignored.",
      "Can you rebase this PR?",
      "nit: typo 'poisonning' -> 'poisoning'",
      "Thanks a lot for the feedback @p-l-, you are absolutely right !\r\nI've updated (again) the PR. It's a bit tricky to understand but this looks like it's working during my tests"
    ],
    "commit_messages": [
      "Merge pull request #3820 from gpotter2/arp-tests\n\nSlightly improve ARP poisoning utils"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac66a88c0a76e0a51632",
    "number": 3819,
    "body": "Use the Python Launcher py.exe if it is found and let it handle the -2/-3 argument.\r\n\r\nAlso add a 'setlocal' to prevent the script from messing with the callers variables.\r\n\r\nFixes #3818",
    "head_branch": "run-scapy-prefer-py-exe",
    "is_a_fork": true,
    "comments": [
      "Wow, I really forgot how super ugly and broken the CMD syntax is. In particular, the evaluation of variables in if-blocks really sucks. I took me several iterations to get all variants correct:\r\n\r\nI tested `run_scapy`, `run_scapy -2`, and `run_scapy -3`,  with and without the presence of `py.exe` by echoing the command instead of executing it:\r\n\r\n**With py.exe**\r\n```\r\nC:\\Users\\msp\\src\\scapy>run_scapy\r\npy -m scapy\r\n\r\nC:\\Users\\msp\\src\\scapy>run_scapy -2\r\npy -2 -m scapy\r\n\r\nC:\\Users\\msp\\src\\scapy>run_scapy -3\r\npy -3 -m scapy\r\n```\r\n\r\n**Without py.exe**\r\n```\r\nC:\\Users\\msp\\src\\scapy>run_scapy\r\npython3 -m scapy\r\n\r\nC:\\Users\\msp\\src\\scapy>run_scapy -2\r\npython -m scapy\r\n\r\nC:\\Users\\msp\\src\\scapy>run_scapy -3\r\npython3 -m scapy\r\n```\r\n(the absence of py.exe was simulated by setting PYTHON=pyx in line 6).",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3819](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6321a2c) into [master](https://codecov.io/gh/secdev/scapy/commit/2fd25240fec92ea3b023aaecf2c048a013367b16?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (2fd2524) will **increase** coverage by `0.36%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3819      +/-   ##\n==========================================\n+ Coverage   49.97%   50.34%   +0.36%     \n==========================================\n  Files         228      227       -1     \n  Lines       53157    52644     -513     \n==========================================\n- Hits        26565    26502      -63     \n+ Misses      26592    26142     -450     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cansocket\\_python\\_can.py](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfcHl0aG9uX2Nhbi5weQ==) | `33.12% <0.00%> (-8.29%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `39.23% <0.00%> (-2.53%)` | :arrow_down: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `24.02% <0.00%> (-1.21%)` | :arrow_down: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `51.72% <0.00%> (-0.11%)` | :arrow_down: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | | |\n| [scapy/interfaces.py](https://codecov.io/gh/secdev/scapy/pull/3819?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvaW50ZXJmYWNlcy5weQ==) | `73.84% <0.00%> (+1.53%)` | :arrow_up: |\n",
      "Last force-push was a rebase on master without further changes.",
      "Thanks for the PR !",
      "You're welcome, always a pleasure!"
    ],
    "commit_messages": [
      "run_scapy: prefer the Python Launcher on Windows\n\nUse the Python Launcher py.exe if it is found and let it\nhandle the -2/-3 argument.\n\nAlso add a 'setlocal' to prevent the script from messing\nwith the callers variables.\n\nFixes #3818"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac66a88c0a76e0a51633",
    "number": 3817,
    "body": "This PR Fixes #3816",
    "head_branch": "issue_3816",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3817?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3817](https://codecov.io/gh/secdev/scapy/pull/3817?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (25f4519) into [master](https://codecov.io/gh/secdev/scapy/commit/5370ef2271dba1e06d733ea1d3e3bfadfd3525d4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5370ef2) will **decrease** coverage by `0.02%`.\n> The diff coverage is `100.00%`.\n\n> :exclamation: Current head 25f4519 differs from pull request most recent head 0a571e0. Consider uploading reports for the commit 0a571e0 to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3817      +/-   ##\n==========================================\n- Coverage   84.59%   84.57%   -0.03%     \n==========================================\n  Files         296      296              \n  Lines       62267    62267              \n==========================================\n- Hits        52677    52662      -15     \n- Misses       9590     9605      +15     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3817?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/utils.py](https://codecov.io/gh/secdev/scapy/pull/3817/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHMucHk=) | `77.22% <100.00%> (ø)` | |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3817/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `56.58% <0.00%> (-2.10%)` | :arrow_down: |\n| [scapy/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3817/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvX19pbml0X18ucHk=) | `74.54% <0.00%> (-1.82%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3817/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n| [scapy/contrib/automotive/ecu.py](https://codecov.io/gh/secdev/scapy/pull/3817/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `92.00% <0.00%> (-0.34%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3817/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `73.62% <0.00%> (-0.22%)` | :arrow_down: |\n| [scapy/sendrecv.py](https://codecov.io/gh/secdev/scapy/pull/3817/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `85.25% <0.00%> (-0.16%)` | :arrow_down: |\n"
    ],
    "commit_messages": [
      "hexdiff() - check input length"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac67a88c0a76e0a51634",
    "number": 3815,
    "body": "Following a recent change made by @gpotter2, this PR use the content of $PYTHON or defaults to python.",
    "head_branch": "PYTHON_variable",
    "is_a_fork": true,
    "comments": [
      "That's fair enough ! Sorry I merged that quick, I wanted to have the tests working ASAP",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3815?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3815](https://codecov.io/gh/secdev/scapy/pull/3815?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (78c04b1) into [master](https://codecov.io/gh/secdev/scapy/commit/f4715e63df090fb7121506dd3db1203278bdb1cc?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (f4715e6) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n> :exclamation: Current head 78c04b1 differs from pull request most recent head 692c0c6. Consider uploading reports for the commit 692c0c6 to get more accurate results\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3815   +/-   ##\n=======================================\n  Coverage   84.58%   84.58%           \n=======================================\n  Files         296      296           \n  Lines       62267    62267           \n=======================================\n  Hits        52666    52666           \n  Misses       9601     9601           \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3815?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3815/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3815/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.72% <0.00%> (+0.05%)` | :arrow_up: |\n| [scapy/pipetool.py](https://codecov.io/gh/secdev/scapy/pull/3815/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGlwZXRvb2wucHk=) | `84.32% <0.00%> (+0.22%)` | :arrow_up: |\n| [scapy/layers/ntp.py](https://codecov.io/gh/secdev/scapy/pull/3815/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250cC5weQ==) | `84.82% <0.00%> (+0.27%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Use $PYTHON if it exists"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac68a88c0a76e0a51635",
    "number": 3814,
    "body": "Fix the shitstorm of failing tests\r\n\r\n- tox 4 broke several things:\r\n  - `whitelist_externals` was removed from tox (renamed `allowlist_externals`)\r\n  - lists can't be separated using spaces anymore\r\n  - `changedir` isn't relative to the `tox.ini` directory anymore... >:(\r\n- Openssl 3.0 has changed its config defaults (i.e. we now need a SECLEVEL of 0 to use TLS 1.0 for our testing)\r\n- `$PYTHON` is not defined",
    "head_branch": "ci-tst",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CI fixes: openssl 3.0 config, tox 4.. etc."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac69a88c0a76e0a51636",
    "number": 3813,
    "body": "Fix #3808",
    "head_branch": "dot11-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix 802.11 control frames type 1 addr\n\nFix #3808"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac6aa88c0a76e0a51637",
    "number": 3811,
    "body": "This PR fixes #3647 and adds a corresponding test.",
    "head_branch": "Issue_3647",
    "is_a_fork": false,
    "comments": [
      "This doesn't fix the part of #3647 that says \"When scapy reads loopback pcaps, it reads the header in host byte order whether the header type is 0 or 108.\" Please remove the phrase \"fixes #3647\" from your commit and PR description so that the issue doesn't get auto-closed before it's entirely fixed.",
      "Could you share snippets of broken behaviors? That greatly simplifies our work. Thanks.",
      "## [Codecov](https://app.codecov.io/gh/secdev/scapy/pull/3811?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3811](https://app.codecov.io/gh/secdev/scapy/pull/3811?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (58638b3) into [master](https://app.codecov.io/gh/secdev/scapy/commit/d36f23c2bf1d3afb76e9a6ebfb085c2ef23be6f0?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (d36f23c) will **increase** coverage by `35.07%`.\n> The diff coverage is `100.00%`.\n\n> :exclamation: Current head 58638b3 differs from pull request most recent head a24f339. Consider uploading reports for the commit a24f339 to get more accurate results\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3811       +/-   ##\n===========================================\n+ Coverage   49.51%   84.58%   +35.07%     \n===========================================\n  Files         338      296       -42     \n  Lines       75842    62263    -13579     \n===========================================\n+ Hits        37550    52664    +15114     \n+ Misses      38292     9599    -28693     \n```\n\n| [Files](https://app.codecov.io/gh/secdev/scapy/pull/3811?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/l2.py](https://app.codecov.io/gh/secdev/scapy/pull/3811?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `72.53% <100.00%> (+29.07%)` | :arrow_up: |\n\n... and [296 files with indirect coverage changes](https://app.codecov.io/gh/secdev/scapy/pull/3811/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev)\n\n</details>"
    ],
    "commit_messages": [
      "Fix Loopback Layer: support DLT_LOOP on all plateforms"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac6ba88c0a76e0a51638",
    "number": 3810,
    "body": "This PR adds fixes for FreeBSD, OpenBSD and NetBSD.\r\n\r\nIt fixes #3721.",
    "head_branch": "bsd_fixes",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "*BSD fixes (#3810)\n\n* FreeBSD - /dev/bpf cannot send packets to /dev/tun* and /dev/tap*\r\n\r\n* FreeBSD - unit test fixes\r\n\r\n* OpenBSD - unit test fixes\r\n\r\n* NetBSD - unit test fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac6ca88c0a76e0a51639",
    "number": 3809,
    "body": "Github is [switching `ubuntu-latest` to use 22.04](https://github.blog/changelog/2022-11-09-github-actions-ubuntu-latest-workflows-will-use-ubuntu-22-04/) but [python 2.7 is only supported on <= 20.04](https://github.com/actions/runner-images/issues/6399)\r\n\r\nWe are planning to drop support for 2.7 after 2.5.0, but in the meantime make the tests run.",
    "head_branch": "tests-20.04",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3809?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3809](https://codecov.io/gh/secdev/scapy/pull/3809?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (33e50a0) into [master](https://codecov.io/gh/secdev/scapy/commit/4990c6844b03c822bdbf1de3951e965ae304d8a6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4990c68) will **decrease** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3809      +/-   ##\n==========================================\n- Coverage   84.57%   84.57%   -0.01%     \n==========================================\n  Files         296      296              \n  Lines       62263    62263              \n==========================================\n- Hits        52660    52657       -3     \n- Misses       9603     9606       +3     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3809?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3809/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n",
      "Please do make an announcement before all 2x code is deprecated.  Thank you!",
      "@guedou Feel free to review/merge !",
      "It appears openssl on Ubuntu 22.02 removed some ciphers that we were testing TLS with"
    ],
    "commit_messages": [
      "Run 2.7 tests on <=20.04"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac6da88c0a76e0a5163a",
    "number": 3806,
    "body": "Fixed BGP Update message fields having incorrect types during post_build().\r\nBugs discovered while testing scapy 2.5.0 and Automaton.",
    "head_branch": "bgp-update-errors",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3806?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3806](https://codecov.io/gh/secdev/scapy/pull/3806?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (dab1b3d) into [master](https://codecov.io/gh/secdev/scapy/commit/4990c6844b03c822bdbf1de3951e965ae304d8a6?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (4990c68) will **increase** coverage by `0.00%`.\n> The diff coverage is `50.00%`.\n\n> :exclamation: Current head dab1b3d differs from pull request most recent head 7cdd849. Consider uploading reports for the commit 7cdd849 to get more accurate results\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3806   +/-   ##\n=======================================\n  Coverage   84.57%   84.58%           \n=======================================\n  Files         296      296           \n  Lines       62263    62263           \n=======================================\n+ Hits        52660    52664    +4     \n+ Misses       9603     9599    -4     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3806?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/bgp.py](https://codecov.io/gh/secdev/scapy/pull/3806/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9iZ3AucHk=) | `92.12% <50.00%> (ø)` | |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3806/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n| [scapy/sendrecv.py](https://codecov.io/gh/secdev/scapy/pull/3806/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `85.41% <0.00%> (+0.15%)` | :arrow_up: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3806/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `58.38% <0.00%> (+1.79%)` | :arrow_up: |\n",
      "Thanks for your interest in Scapy. Could you share an example that triggers this issue?",
      "> \r\nHere is an example that triggers the bug.\r\n\r\nI moved from 2.4.5 to 2.5.0 and am having issues with crafting bgp update packets.\r\ne.g.\r\nbgp_update[BGPUpdate].path_attr[2].attribute.next_hop = '1.1.1.3'\r\nself.send(ip/tcp_header/bgp_update)\r\nCauses:\r\nFile /usr/local/lib/python3.10/dist-packages/scapy-2.5.0rc2.dev36-py3.10.egg/scapy/contrib/bgp.py:2132, in BGPPathAttr.post_build(self, p, pay)\r\n2130 packet = packet + p[2:4]\r\n2131 else:\r\n-> 2132 packet = packet + p[2]\r\n2133 else:\r\n2134 if extended_length:\r\nTypeError: While dissecting field 'path_attr': can't concat int to bytes\r\n",
      "i find same problem like this, why you close it, is there any thing i don't know?  @muttiopenbts "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac6da88c0a76e0a5163b",
    "number": 3805,
    "body": "refine CDPMsgPowerRequest and CDPMsgPowerAvailable based on the output from Whireshark\r\n\r\nFor your convenience, a sample of pcap is attached\r\n\r\n[cdp_power.zip](https://github.com/secdev/scapy/files/10124456/cdp_power.zip)\r\n",
    "head_branch": "feat/add_cdp_tlv",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3805](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (21dda5d) into [master](https://codecov.io/gh/secdev/scapy/commit/5f0bb6c43530dcb2e1fb21d810cba9297e7ba1ca?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5f0bb6c) will **decrease** coverage by `2.03%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3805      +/-   ##\n==========================================\n- Coverage   52.08%   50.05%   -2.03%     \n==========================================\n  Files         190      228      +38     \n  Lines       43267    53252    +9985     \n==========================================\n+ Hits        22536    26656    +4120     \n- Misses      20731    26596    +5865     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/cdp.py](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jZHAucHk=) | `72.54% <100.00%> (+0.54%)` | :arrow_up: |\n| [scapy/utils6.py](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvdXRpbHM2LnB5) | `29.25% <0.00%> (-1.00%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `62.21% <0.00%> (-0.57%)` | :arrow_down: |\n| [scapy/contrib/avs.py](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdnMucHk=) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/ppi\\_geotag.py](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9wcGlfZ2VvdGFnLnB5) | `64.97% <0.00%> (ø)` | |\n| [scapy/contrib/bier.py](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9iaWVyLnB5) | `100.00% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/kx\\_algs.py](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8va3hfYWxncy5weQ==) | `100.00% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/common.py](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY29tbW9uLnB5) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/mpls.py](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9tcGxzLnB5) | `59.52% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/hkdf.py](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vaGtkZi5weQ==) | `35.55% <0.00%> (ø)` | |\n| ... and [40 more](https://codecov.io/gh/secdev/scapy/pull/3805?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "fly-by-comment: there are *two* typos in the subject line of your commit (and the PR title):   CDPMsgPowerAavaiable ->  CDPMsgPowerAvailable",
      "@mspncp Thanks, fixed the typos :)",
      "Thanks for the suggestions, I updated them and added an unit test for it.",
      "Very sorry for the delay !"
    ],
    "commit_messages": [
      "CDP: add CDPMsgPowerRequest and CDPMsgPowerAvailable (#3805)\n\n* CDP: add CDPMsgPowerRequest and CDPMsgPowerAvailable\r\n\r\n* add test for CDPMsgPowerRequest and CDPMsgPowerAvailable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac6ea88c0a76e0a5163c",
    "number": 3804,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nFixes wrong doc of `conf.verbose` instead of `conf.verb`.\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n",
    "head_branch": "fix-verbose-doc",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3804?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3804](https://codecov.io/gh/secdev/scapy/pull/3804?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (203a5e8) into [master](https://codecov.io/gh/secdev/scapy/commit/8cd375c69056583d38b7e3629d236253a31c1ebe?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (8cd375c) will **decrease** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3804      +/-   ##\n==========================================\n- Coverage   84.57%   84.57%   -0.01%     \n==========================================\n  Files         296      296              \n  Lines       62263    62263              \n==========================================\n- Hits        52661    52659       -2     \n- Misses       9602     9604       +2     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3804?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/sendrecv.py](https://codecov.io/gh/secdev/scapy/pull/3804/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `85.25% <ø> (ø)` | |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3804/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n| [scapy/layers/ntp.py](https://codecov.io/gh/secdev/scapy/pull/3804/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250cC5weQ==) | `84.55% <0.00%> (-0.28%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3804/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.67% <0.00%> (-0.06%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3804/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `73.84% <0.00%> (+0.21%)` | :arrow_up: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3804/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `56.88% <0.00%> (+0.29%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Fix minor typo in sendrecv doc (#3804)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac6fa88c0a76e0a5163d",
    "number": 3803,
    "body": "Minor bug fixed that prevented certain parameters from being passed. ",
    "head_branch": "staged_test_case_bugfix",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3803?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3803](https://codecov.io/gh/secdev/scapy/pull/3803?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (024eb92) into [master](https://codecov.io/gh/secdev/scapy/commit/0e88e8f6c7fafd8a44d4545ddcf964fd4463e8fa?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0e88e8f) will **decrease** coverage by `0.00%`.\n> The diff coverage is `0.00%`.\n\n> :exclamation: Current head 024eb92 differs from pull request most recent head c7f30cd. Consider uploading reports for the commit c7f30cd to get more accurate results\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3803      +/-   ##\n==========================================\n- Coverage   84.58%   84.57%   -0.01%     \n==========================================\n  Files         296      296              \n  Lines       62267    62267              \n==========================================\n- Hits        52668    52665       -3     \n- Misses       9599     9602       +3     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3803?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [...apy/contrib/automotive/scanner/staged\\_test\\_case.py](https://codecov.io/gh/secdev/scapy/pull/3803/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3NjYW5uZXIvc3RhZ2VkX3Rlc3RfY2FzZS5weQ==) | `84.87% <0.00%> (ø)` | |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3803/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n| [scapy/contrib/automotive/ecu.py](https://codecov.io/gh/secdev/scapy/pull/3803/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `92.00% <0.00%> (-0.34%)` | :arrow_down: |\n| [scapy/pipetool.py](https://codecov.io/gh/secdev/scapy/pull/3803/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGlwZXRvb2wucHk=) | `84.32% <0.00%> (+0.22%)` | :arrow_up: |\n",
      "@gpotter2 Apparently, flake8 doesn't like type hints anymore..",
      "Yeah we're having a breakdown of tests caused by a flake8 update and the migration of Ubuntu to 22.04... we're working on that",
      "@guedou can this PR get into 2.5, please ",
      "Could you also add the `-K` to the matrix default? Thanks",
      "Workflow didn't run\r\n\r\nError when evaluating 'continue-on-error' for job 'utscapy'. .github/workflows/unittests.yml (Line: 67, Col: 24): Unexpected type of value '', expected type: Boolean.\r\n",
      "@gpotter2 is this now as expected?",
      "Can this PR get merged, please?\r\n",
      "Do you why one test is not reporting any result ?",
      "No idea.. I was hoping that this would fix, during the merge. I hope its just a glitch in github actions... anyway. If it introduces a bug on master, I will create a new PR to fix it. ",
      "These default values in the matrix are weird... I've now added the flag explicitly to remove the Scanner tests from all CI-machines that are not allowed to fail. ",
      "@guedou \r\nThese two CI-runs are not part of Actions... so it looks like a problem of github. \r\n\r\n```\r\nubuntu-latest 3.10 root Expected — Waiting for status to be reported \r\nubuntu-latest libpcap 3.10 root Expected — Waiting for status to be reported\r\n```",
      "It's fine, this happens when we change what tests are considered \"required\". Ignore that :p",
      "Do you want me tu squash these 11 commits ?",
      "That would be great 👍\n-- \nViele Grüße\n\nNils Weiß\n\nOn December 22, 2022 4:52:34 PM GMT+01:00, Guillaume Valadon ***@***.***> wrote:\n>Do you want me tu squash these 11 commits ?\n>\n>-- \n>Reply to this email directly or view it on GitHub:\n>https://github.com/secdev/scapy/pull/3803#issuecomment-1362998258\n>You are receiving this because you modified the open/close state.\n>\n>Message ID: ***@***.***>"
    ],
    "commit_messages": [
      "Bugfix in automotive staged enumerators (#3803)\n\n* remove scanner tests from pypy\r\n\r\n* remove scanner tests from pypy\r\n\r\n* Fix minor bug in argument passing of staged_test_cases\r\n\r\n* remove scanner tests from all tests which are not allowed to fail\r\n\r\n* update\r\n\r\n* disable scanner tests for all tests which are not allowed to fail\r\n\r\n* update default values of github CI\r\n\r\n* try to fix ci\r\n\r\n* try to fix ci\r\n\r\n* try to fix ci\r\n\r\n* try to fix ci\r\n\r\nCo-authored-by: Nils Weiss <nils@dissec.to>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac70a88c0a76e0a5163e",
    "number": 3802,
    "body": "Fix bug. GTPDeletePDPContextResponse was unanswered ",
    "head_branch": "bug/GTPDeletePDPContextRequest-without-Response",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3802?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3802](https://codecov.io/gh/secdev/scapy/pull/3802?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1e12311) into [master](https://codecov.io/gh/secdev/scapy/commit/9473f77d8b548c8e478e52838bdd4c12f5d4f4ff?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9473f77) will **decrease** coverage by `0.00%`.\n> The diff coverage is `50.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3802      +/-   ##\n==========================================\n- Coverage   84.57%   84.56%   -0.01%     \n==========================================\n  Files         296      296              \n  Lines       62214    62216       +2     \n==========================================\n- Hits        52616    52613       -3     \n- Misses       9598     9603       +5     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3802?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/gtp.py](https://codecov.io/gh/secdev/scapy/pull/3802/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9ndHAucHk=) | `91.56% <50.00%> (-0.25%)` | :arrow_down: |\n| [scapy/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3802/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvX19pbml0X18ucHk=) | `74.54% <0.00%> (-1.82%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3802/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n"
    ],
    "commit_messages": [
      "Merge pull request #3802 from vladimir1marchenko/bug/GTPDeletePDPContextRequest-without-Response\n\nfix GTPDeletePDPContextResponse"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac71a88c0a76e0a5163f",
    "number": 3801,
    "body": "_(marked as DRAFT pull request, because it is based on #3795, which is not merged yet)_\r\n\r\n\r\n**IKEv2: bind all layers together correctly**\r\n    \r\nThe previous bindings were incomplete: the payloads were only bound to the main IKEv2 layer, but not to the other payloads. For example, the lower binding between KE and Nonce payload is missing here:\r\n\r\n    >>> IKEv2() / IKEv2_KE() / IKEv2_Nonce()\r\n    <IKEv2  next_payload=KE |<IKEv2_KE  |<IKEv2_Nonce  |>>>\r\n\r\nThis commit removes the manually implemented bindings and replaces them with `bind_layers()` calls:\r\n\r\nFor every entry `(np, name)` in the `IKEv2PayloadTypes` dictionary it is now expected that there exists a corresponding `IKEv2_<name>` class, which is derived from `IKEv2_Packet`. The layers get bound as follows:\r\n\r\n    bind_layers(IKEv2_Packet, IKEv2_<name>, next_payload=np)\r\n\r\n\r\n\r\n**IKEv2: improve dissection of the CERT and CERTREQ payload**\r\n    \r\n* CERT payload  [RFC 7296, section 3.6]\r\n\r\n  Previously, the IKEv2_CERT class used a dispatch hook to define three different classes IKEv2_CERT_CRT, IKEv2_CERT_CRL, and IKEv2_CERT_STR.\r\n  \r\n  This commit removes the three subclasses and uses a MultipleTypeField for the `cert_data` instead.\r\n\r\n* CERTREQ payload  [RFC 7296, section 3.7]\r\n\r\n  The field description was apparently copied from the vendor id payload and never updated. This commit adds the correct members, however the size and count of the SPIs are not updated automatically yet.\r\n\r\n",
    "head_branch": "ikev2-refactor-2",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3801](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1346fd4) into [master](https://codecov.io/gh/secdev/scapy/commit/0ea948f2e7651ddfff6019a9d2833f964f8b7cfc?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0ea948f) will **increase** coverage by `32.56%`.\n> The diff coverage is `98.59%`.\n\n> :exclamation: Current head 1346fd4 differs from pull request most recent head f916e0d. Consider uploading reports for the commit f916e0d to get more accurate results\n\n```diff\n@@             Coverage Diff             @@\n##           master    #3801       +/-   ##\n===========================================\n+ Coverage   52.00%   84.56%   +32.56%     \n===========================================\n  Files         190      296      +106     \n  Lines       43355    62219    +18864     \n===========================================\n+ Hits        22545    52615    +30070     \n+ Misses      20810     9604    -11206     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/ikev2.py](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pa2V2Mi5weQ==) | `94.38% <98.59%> (+17.33%)` | :arrow_up: |\n| [scapy/modules/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbW9kdWxlcy9fX2luaXRfXy5weQ==) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/gm/gmlan.py](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2dtL2dtbGFuLnB5) | `98.03% <0.00%> (ø)` | |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `82.91% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/xcp/cto\\_commands\\_slave.py](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3hjcC9jdG9fY29tbWFuZHNfc2xhdmUucHk=) | `94.87% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/xcp/utils.py](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3hjcC91dGlscy5weQ==) | `49.33% <0.00%> (ø)` | |\n| [scapy/contrib/ppi\\_geotag.py](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9wcGlfZ2VvdGFnLnB5) | `95.53% <0.00%> (ø)` | |\n| [scapy/libs/matplot.py](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGlicy9tYXRwbG90LnB5) | `100.00% <0.00%> (ø)` | |\n| [scapy/contrib/automotive/uds\\_ecu\\_states.py](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL3Vkc19lY3Vfc3RhdGVzLnB5) | `85.71% <0.00%> (ø)` | |\n| [scapy/layers/tls/crypto/common.py](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9jcnlwdG8vY29tbW9uLnB5) | `100.00% <0.00%> (ø)` | |\n| ... and [244 more](https://codecov.io/gh/secdev/scapy/pull/3801?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "The [code health check failure](https://github.com/secdev/scapy/actions/runs/3544343562/jobs/5951522423) seems to be unrelated?",
      "Added one commit:\r\n\r\n    IKEv2: replace Str*Fields with XStr*Fields\r\n    \r\n    All the fields contain binary data, so it makes the output\r\n    much more readable to show their value as hexadecimal string.\r\n    It is also more consistent with the ipsec module, see for\r\n    example the spi and data fields of the ESP packet.\r\n\r\nThe diff below shows how the change improves the readability of the output. It was generated by comparing the output of\r\n\r\n```\r\nfrom scapy.contrib.ikev2 import *\r\npcap = rdpcap('test/pcaps/ikev2_nat_t.pcapng')\r\npcap[0].show()\r\n```\r\n\r\nwith and without this commit.\r\n\r\n\r\n```diff\r\n--- strfields.txt\t2022-12-02 00:00:14.867104733 +0100\r\n+++ xstrfields.txt\t2022-12-01 23:58:35.634905036 +0100\r\n@@ -25,8 +25,8 @@\r\n ###[ NON_ESP ]### \r\n            non_esp   = 0x0\r\n ###[ IKEv2 ]### \r\n-              init_SPI  = '\\\\x89\\\\x92,\\\\x91_5W\\x0e'\r\n-              resp_SPI  = ''\r\n+              init_SPI  = 89922c915f35570e\r\n+              resp_SPI  = 0000000000000000\r\n               next_payload= SA\r\n               version   = 0x20\r\n               exch_type = IKE_SA_INIT\r\n@@ -46,7 +46,7 @@\r\n                   |  proto     = IKE\r\n                   |  SPIsize   = 0\r\n                   |  trans_nb  = 3\r\n-                  |  SPI       = ''\r\n+                  |  SPI       = \r\n                   |  \\trans     \\\r\n                   |   |###[ IKEv2 Transform ]### \r\n                   |   |  next_payload= Transform\r\n@@ -76,32 +76,32 @@\r\n                     length    = 72\r\n                     group     = 256randECPgr\r\n                     res2      = 0\r\n-                    load      = '\\\\xdb%1xD\\x0c\\\\xe7v\\\\xa7\\\\x94\\x13<\\\\xb8\\\\xb6\\\\x9e^\\\\xb0ts56W\\x0cd\\u05f60T\\\\x9c\\\\x89\\\\x9c\\x07\\x12\\\\xd8(\\\\xb3qhP\\x08\\\\x85\\\\xe0Q\\x02Ex\\\\xaf\\\\xc7\\\\\\x10\\x1fs\\\\xb8\\\\x94<\\\\xadb\\\\xd7J0\\\\xf2\\\\xbe\\x1f\\\\xca'\r\n+                    load      = db253178440ce776a794133cb8b69e5eb074733536570c64d7b630549c899c0712d828b37168500885e051024578afc75c101f73b8943cad62d74a30f2be1fca\r\n ###[ IKEv2 Nonce ]### \r\n                        next_payload= V\r\n                        flags     = \r\n                        length    = 44\r\n-                       load      = '\\t\\\\xcbS\\\\x8b,=\\\\xbdM\\x0b\\\\xb0\\\\xee\\\\xc8\\\\xd3\\x18ˀ\\x1a\\\\x9bG\\x15\\\\xb2\\x07\\\\x82\\\\x8d\\\\x9b_\\\\xf1\\\\xf4\\\\xecd\\\\xedX\\\\x867\\x07\\\\xbc\\\\xf1L\\\\xcf\\x05'\r\n+                       load      = 09cb538b2c3dbd4d0bb0eec8d318cb801a9b4715b207828d9b5ff1f4ec64ed58863707bcf14ccf05\r\n ###[ IKEv2 Vendor ID ]### \r\n                           next_payload= V\r\n                           flags     = \r\n                           length    = 20\r\n-                          vendorID  = '\\\\xebL\\x1bx\\\\x8a\\\\xfdJ\\\\x9c\\\\xb7s\\nh\\\\xd5lS!'\r\n+                          vendorID  = eb4c1b788afd4a9cb7730a68d56c5321\r\n ###[ IKEv2 Vendor ID ]### \r\n                              next_payload= V\r\n                              flags     = \r\n                              length    = 20\r\n-                             vendorID  = '\\\\xc6\\x1b\\\\xac\\\\xa1\\\\xf1\\\\xa6\\x0c\\\\xc1\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\r\n+                             vendorID  = c61baca1f1a60cc10800000000000000\r\n ###[ IKEv2 Vendor ID ]### \r\n                                 next_payload= V\r\n                                 flags     = \r\n                                 length    = 24\r\n-                                vendorID  = '@H\\\\xb7\\\\xd5n\\\\xbc\\\\xe8\\\\x85%\\\\xe7\\\\xde\\x7f\\x00\\\\xd6\\\\xc2\\\\xd3\\\\xc0\\x00\\x00\\x00'\r\n+                                vendorID  = 4048b7d56ebce88525e7de7f00d6c2d3c0000000\r\n ###[ IKEv2 Vendor ID ]### \r\n                                    next_payload= Notify\r\n                                    flags     = \r\n                                    length    = 20\r\n-                                   vendorID  = '@H\\\\xb7\\\\xd5n\\\\xbc\\\\xe8\\\\x85%\\\\xe7\\\\xde\\x7f\\x00\\\\xd6\\\\xc2\\\\xd3'\r\n+                                   vendorID  = 4048b7d56ebce88525e7de7f00d6c2d3\r\n ###[ IKEv2 Notify ]### \r\n                                       next_payload= Notify\r\n                                       flags     = \r\n@@ -109,8 +109,8 @@\r\n                                       proto     = Reserved\r\n                                       SPIsize   = 0\r\n                                       type      = IKEV2_FRAGMENTATION_SUPPORTED\r\n-                                      SPI       = ''\r\n-                                      load      = ''\r\n+                                      SPI       = \r\n+                                      load      = \r\n ###[ IKEv2 Notify ]### \r\n                                          next_payload= Notify\r\n                                          flags     = \r\n@@ -118,8 +118,8 @@\r\n                                          proto     = Reserved\r\n                                          SPIsize   = 0\r\n                                          type      = REDIRECT_SUPPORTED\r\n-                                         SPI       = ''\r\n-                                         load      = ''\r\n+                                         SPI       = \r\n+                                         load      = \r\n ###[ IKEv2 Notify ]### \r\n                                             next_payload= None\r\n                                             flags     = \r\n@@ -127,5 +127,7 @@\r\n                                             proto     = Reserved\r\n                                             SPIsize   = 0\r\n                                             type      = SIGNATURE_HASH_ALGORITHMS\r\n-                                            SPI       = ''\r\n-                                            load      = '\\x00\\x01\\x00\\x02\\x00\\x03\\x00\\x04'\r\n+                                            SPI       = \r\n+                                            load      = 0001000200030004\r\n```",
      "Last force-push was a simple rebase on the master branch.",
      "Rebased without further changes on master to pick up the flake8 fix.\r\n",
      "Rebased without further changes on master to pick up the recent CI fixes. ",
      "Joined with #3795."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac72a88c0a76e0a51640",
    "number": 3800,
    "body": "As correctly pointed out by #3767, PPPoED padding is completely broken. This fixes it plus added a test.\r\n\r\nfixes #3767",
    "head_branch": "pppoed",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3800?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3800](https://codecov.io/gh/secdev/scapy/pull/3800?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (90c784e) into [master](https://codecov.io/gh/secdev/scapy/commit/6d0d230701ffd4e64e6f976e21bd7a44415a087e?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6d0d230) will **increase** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3800      +/-   ##\n==========================================\n+ Coverage   84.56%   84.57%   +0.01%     \n==========================================\n  Files         296      296              \n  Lines       62266    62263       -3     \n==========================================\n+ Hits        52657    52661       +4     \n+ Misses       9609     9602       -7     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3800?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ppp.py](https://codecov.io/gh/secdev/scapy/pull/3800/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3BwcC5weQ==) | `97.95% <100.00%> (+1.33%)` | :arrow_up: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3800/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3800/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.72% <0.00%> (+0.05%)` | :arrow_up: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3800/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `73.84% <0.00%> (+0.21%)` | :arrow_up: |\n| [scapy/layers/ntp.py](https://codecov.io/gh/secdev/scapy/pull/3800/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250cC5weQ==) | `84.82% <0.00%> (+0.27%)` | :arrow_up: |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3800/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `56.88% <0.00%> (+0.29%)` | :arrow_up: |\n| [scapy/contrib/automotive/ecu.py](https://codecov.io/gh/secdev/scapy/pull/3800/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `92.33% <0.00%> (+0.33%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Fix PPPoED padding calculation\n\nAs correctly pointed out by #3767, PPPoED padding is completely\nbroken. This fixes it plus added a test.\n\nfixes #3767"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac72a88c0a76e0a51641",
    "number": 3798,
    "body": "- various cleanups to ISAKMP (e.g. use post_build for a universal length calculation)\r\n- add notification & delete payloads\r\n- some tests",
    "head_branch": "isakmp-cleanup",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3798?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3798](https://codecov.io/gh/secdev/scapy/pull/3798?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (a76c19b) into [master](https://codecov.io/gh/secdev/scapy/commit/3168515c2c7e6ea723d8d5ba3a553813ee0758fe?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (3168515) will **decrease** coverage by `0.01%`.\n> The diff coverage is `87.65%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3798      +/-   ##\n==========================================\n- Coverage   86.97%   86.96%   -0.01%     \n==========================================\n  Files         310      310              \n  Lines       70564    70582      +18     \n==========================================\n+ Hits        61373    61383      +10     \n- Misses       9191     9199       +8     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3798?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/isakmp.py](https://codecov.io/gh/secdev/scapy/pull/3798?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lzYWttcC5weQ==) | `84.75% <86.84%> (-4.44%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3798?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.68% <100.00%> (+<0.01%)` | :arrow_up: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3798?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `74.31% <0.00%> (-0.22%)` | :arrow_down: |\n| [scapy/layers/l2.py](https://codecov.io/gh/secdev/scapy/pull/3798?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `84.89% <0.00%> (-0.22%)` | :arrow_down: |\n| [scapy/layers/tls/session.py](https://codecov.io/gh/secdev/scapy/pull/3798?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `88.20% <0.00%> (+0.31%)` | :arrow_up: |\n| [scapy/contrib/isotp/isotp\\_soft\\_socket.py](https://codecov.io/gh/secdev/scapy/pull/3798?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pc290cC9pc290cF9zb2Z0X3NvY2tldC5weQ==) | `84.26% <0.00%> (+0.38%)` | :arrow_up: |\n",
      "_(I hope you appreciate unsolicited reviews from outsiders; If not, just let me know and I will stop overtexting you.)_",
      "Thanks for the review. Sorry I've been super busy lately. I'll review this and your PR when I find the time ",
      "Thanks for letting me know. I didn't mean to be impatient, just wasn't sure how to interpret the silence. :-)"
    ],
    "commit_messages": [
      "Various cleanups to ISAKMP (#3798)\n\n* Various cleanups to ISAKMP\r\n\r\n* Minor fixes\r\n\r\n* Handle Attributes from Phase 1 & 2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac73a88c0a76e0a51642",
    "number": 3797,
    "body": "This PR fixes a migration bug.",
    "head_branch": "python3_nzpadding",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3797?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3797](https://codecov.io/gh/secdev/scapy/pull/3797?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (6047843) into [master](https://codecov.io/gh/secdev/scapy/commit/ada91610ad55339bce4d84bc7d5e44ee1cab0c6f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ada9161) will **increase** coverage by `0.25%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3797      +/-   ##\n==========================================\n+ Coverage   84.56%   84.82%   +0.25%     \n==========================================\n  Files         296      296              \n  Lines       62176    63774    +1598     \n==========================================\n+ Hits        52578    54095    +1517     \n- Misses       9598     9679      +81     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3797?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/plist.py](https://codecov.io/gh/secdev/scapy/pull/3797/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGxpc3QucHk=) | `83.70% <100.00%> (+0.25%)` | :arrow_up: |\n| [scapy/contrib/cansocket\\_native.py](https://codecov.io/gh/secdev/scapy/pull/3797/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9jYW5zb2NrZXRfbmF0aXZlLnB5) | `13.88% <0.00%> (-0.40%)` | :arrow_down: |\n| [scapy/contrib/automotive/ecu.py](https://codecov.io/gh/secdev/scapy/pull/3797/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `92.00% <0.00%> (-0.34%)` | :arrow_down: |\n| [scapy/packet.py](https://codecov.io/gh/secdev/scapy/pull/3797/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `82.66% <0.00%> (+0.07%)` | :arrow_up: |\n| [scapy/sendrecv.py](https://codecov.io/gh/secdev/scapy/pull/3797/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `85.41% <0.00%> (+0.15%)` | :arrow_up: |\n| [scapy/layers/l2.py](https://codecov.io/gh/secdev/scapy/pull/3797/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `72.53% <0.00%> (+0.21%)` | :arrow_up: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3797/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.72% <0.00%> (+0.26%)` | :arrow_up: |\n| [scapy/layers/x509.py](https://codecov.io/gh/secdev/scapy/pull/3797/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3g1MDkucHk=) | `92.57% <0.00%> (+0.58%)` | :arrow_up: |\n| [scapy/asn1/mib.py](https://codecov.io/gh/secdev/scapy/pull/3797/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMS9taWIucHk=) | `91.39% <0.00%> (+0.66%)` | :arrow_up: |\n| ... and [8 more](https://codecov.io/gh/secdev/scapy/pull/3797/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n"
    ],
    "commit_messages": [
      "Python3 nzpadding fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac74a88c0a76e0a51643",
    "number": 3796,
    "body": "This 1) handles pcap_create() failing and 2) provides a useful error message if pcap_activate() fails.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks for this PR. Could you provide us a little more context to help us review it? I would like to know more about what this PR is fixing and how it could be tested in CI.",
      "> I would like to know more about what this PR is fixing\r\n\r\nIt fixes two issues:\r\n\r\n1. `pcap_create()` is not guaranteed to succeed, so assuming that it returns a non-null pointer can cause the Python interpreter to crash.  In particular, in macOS, `pcap_create()` on a pktap device such as the \"any\" device involves more than just allocating memory - it attempts to set up pktap plumbing, which requires root privileges, so, if you do `pcap_create(\"any\", errbuf)` when not running as root, `pcap_create()` returns `NULL` and fills in `errbuf` with \"ioctl(SIOCIFCREATE): Operation not permitted\".\r\n2. If an attempt to open an interface in monitor mode fails, the error message just says \"Could not activate the pcap handler\"; it doesn't report why it didn't work.  That makes it difficult to determine what the problem is, making it impossible to figure out what the problem would be in the failure case mentioned in [this StackOverflow answer](https://stackoverflow.com/a/74329936/).  The suggestion they made in that answer was to print out the return value of `pcap_activate()`; unfortunately, they didn't also suggest that, for some return values, the string returned by `pcap_geterr()` is also needed - that's very much the case for `PCAP_ERROR`, which is a generic error returned for a number of \"should not happen\" failures, and that string is necessary to determine which particular failure that was.  That is, in fact, what happened in [a later question](https://stackoverflow.com/questions/74336825/sniffing-network-traffic-with-scapy-get-could-not-activate-the-pcap-handler) asked by the person who asked the first question.  They also filed the-tcpdump-group/libpcap#1136; unfortunately, given that the error they were getting is `PCAP_ERROR`, we have no clue why the error is occurring or if there's anything they can do to fix it.\r\n\r\n> and how it could be tested in CI\r\n\r\nThe fix for the first problem can be tested by running on macOS, *without* root privileges, and trying to open the \"any\" device\".\r\n\r\nThe fix for the second problem can be tested by attempting to open a device in monitor mode on most OSes, *without* root privileges.  The error should report that permission was denied.",
      "WinPcap 4.1.3 has `pcap_statustostr()`, so I'm not sure why [one of the Appveyor builds](https://ci.appveyor.com/project/secdev/scapy/builds/45438417/job/jb9a5icwdvetmat1) is failing.",
      "I'm gonna have a look at what's happening with Winpcap.\r\n\r\nedit: I double-checked, and `pcap_statustostr` is apparently not exported in WinPcap 4.1.3. Also matches with that the [doc says](https://www.winpcap.org/docs/docs_412/html/group__wpcapfunc.html). But we can work around that.",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3796?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3796](https://codecov.io/gh/secdev/scapy/pull/3796?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (9eddd01) into [master](https://codecov.io/gh/secdev/scapy/commit/0945bb5dbfa85fa611d2055423d8c3bf4cbf5756?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0945bb5) will **decrease** coverage by `0.02%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3796      +/-   ##\n==========================================\n- Coverage   84.58%   84.56%   -0.03%     \n==========================================\n  Files         296      296              \n  Lines       62251    62266      +15     \n==========================================\n- Hits        52658    52655       -3     \n- Misses       9593     9611      +18     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3796?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/libpcap.py](https://codecov.io/gh/secdev/scapy/pull/3796/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC9saWJwY2FwLnB5) | `65.06% <0.00%> (-3.29%)` | :arrow_down: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3796/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n"
    ],
    "commit_messages": [
      "Fix error handling for pcap_create() and pcap_activate(). (#3796)\n\n* Fix error handling for pcap_create() and pcap_activate().\r\n\r\npcap_create() is not guaranteed to succeed; check whether it returns a\r\nnull POINTER and, if so, report the error.\r\n\r\npcap_activate() can return\r\n\r\n1) 0, which means it succeeded with no warnings;\r\n2) a netative number, which means it failed, and the number gives an\r\nindication of the type of failure\r\n3) a positive number, which means it succeeded, but with a warning, and\r\nthe number gives an indication of the type of warning.\r\n\r\nFor now, we don't bother with warnings, so we check only for a negative\r\nreturn value.\r\n\r\nIf we get a negative return value, then:\r\n\r\nif the return value is PCAP_ERROR, report an error with the result of\r\npcap_geterr() as the error message;\r\n\r\nif the return value is PCAP_ERROR_NO_SUCH_DEVICE, report an error with\r\nthe interface name, the result of pcap_statustostr() and the result of\r\npcap_geterr() all in the error message\r\n\r\nif the return value is PCAP_ERROR_PERM_DENIED, and the result of\r\npcap_geterr() isn't an empty string, report an error with the interface\r\nname, the result of pcap_statustostr() and the result of pcap_geterr()\r\nall in the error message;\r\n\r\notherwise, report an error with the interface name and the result of\r\npcap_statustostr() in the error message.\r\n\r\n(This is modeled after what tcpdump does.)\r\n\r\n* pep8 fixes.\r\n\r\n* pep8 fixes.\r\n\r\n* pcap_statustostr isn't exported on Winpcap\r\n\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac75a88c0a76e0a51644",
    "number": 3795,
    "body": "_As discussed in previous PRs (#3786, #3787), the current implementation of the ikev2 module is not state-of-the art and not up-to-date with other parts of Scapy. This pull request is the first one of a sequence to refactor and facelift it, with the goal to bring the implementation of the IKEv2 layer to a level where it can be accepted as a first class member (i.e., moved from scapy.contrib to scapy.layers)._\r\n\r\n\r\n**IKEv2: remove the unnecessary 'payload_' infixes**\r\n  \r\nThe IKE messages tend to have a lot of payloads and those unnecessary\r\neight characters per payload add a lot of redundancy and size to the\r\noutput of the dissected packets. Removing them improves readability of\r\nthe output and makes typing less tedious.\r\n\r\nThe removal was automated using the following find+sed script:\r\n\r\n    find * -type f -exec sed -i \\\r\n        -e 's/IKEv2_payload_type/IKEv2_payloax_type/g' \\\r\n        -e 's/IKEv2_payload_/IKEv2_/g' \\\r\n        -e 's/IKEv2_payload/IKEv2_Payload/g' \\\r\n        -e 's/IKEv2_payloax/IKEv2_payload/g' {} +\r\n\r\n**IKEv2: reorganize IKEv2{Attribute,Payload,Exchange}Types dicts**\r\n\r\n* IKEv2AttributeTypes\r\n\r\nSwap names and numbers in the IKEv2AttributeTypes dictionary and its\r\nnested algorithm dictionaries to get rid of the awkward code to invert\r\nthe entries. With this change, the transform types and algorithms can\r\nnow be extracted using a simple dictionary comprehension.\r\n\r\n* IKEv2PayloadTypes and IKEv2ExchangeTypes\r\n\r\nInstead of arrays, use dictionaries like everywhere else in the module.\r\nAlso change their names to make them consistent with the names of the\r\nother dictionaries.\r\n\r\n**IKEv2: use IANA abbreviations for most of the payloads**\r\n\r\nReplace the names of the 'Encrypted', 'Encrypted_Fragement, and\r\n'VendorID' payload with their official IANA abbreviations 'SK',\r\n'SKF, and 'V', to be more consistent with the other payload names.\r\n\r\nThe only remaining exceptions are the 'Nonce' and 'Notify' payloads\r\n('N' resp. 'Ni'/'Nr'), because they would end up with the same\r\nabbreviation (the dissector does not distinguish between the\r\ninitiator's and responder's nonce).\r\n\r\n\r\n_@gpotter2  all commits are squashed as much it makes sense for me and they are all self contained, meaning that for every commit the module loads successfully and the following tests succeed:_\r\n\r\n    ./run_tests -P \"load_contrib('ikev2')\" -t ./contrib/ikev2.uts  -t ./scapy/layers/ipsec.uts -t ./scapy/layers/isakmp.uts -F\r\n\r\n_I'd appreciate if you wouldn't squash the entire PR, but if you you insist, well (sigh) that's your decision and I'll accept it without further complaint. In any case, this will be the last time I'll bug you with my request. :wink:_",
    "head_branch": "ikev2-refactor-1",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3795?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3795](https://codecov.io/gh/secdev/scapy/pull/3795?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (bc52b82) into [master](https://codecov.io/gh/secdev/scapy/commit/c54ca02ccacaee9257e9fd19741391743b543b44?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (c54ca02) will **decrease** coverage by `0.02%`.\n> The diff coverage is `98.91%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3795      +/-   ##\n==========================================\n- Coverage   86.96%   86.94%   -0.02%     \n==========================================\n  Files         310      310              \n  Lines       70606    70579      -27     \n==========================================\n- Hits        61401    61366      -35     \n- Misses       9205     9213       +8     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3795?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/ikev2.py](https://codecov.io/gh/secdev/scapy/pull/3795?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pa2V2Mi5weQ==) | `94.93% <98.91%> (+0.66%)` | :arrow_up: |\n| [scapy/layers/tls/record\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3795?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9yZWNvcmRfc3NsdjIucHk=) | `86.03% <0.00%> (-1.68%)` | :arrow_down: |\n| [scapy/layers/tls/handshake\\_sslv2.py](https://codecov.io/gh/secdev/scapy/pull/3795?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9oYW5kc2hha2Vfc3NsdjIucHk=) | `91.98% <0.00%> (-1.15%)` | :arrow_down: |\n| [scapy/layers/tls/basefields.py](https://codecov.io/gh/secdev/scapy/pull/3795?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9iYXNlZmllbGRzLnB5) | `85.90% <0.00%> (-0.68%)` | :arrow_down: |\n| [scapy/contrib/automotive/ecu.py](https://codecov.io/gh/secdev/scapy/pull/3795?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `93.26% <0.00%> (-0.33%)` | :arrow_down: |\n| [scapy/layers/tls/session.py](https://codecov.io/gh/secdev/scapy/pull/3795?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3Rscy9zZXNzaW9uLnB5) | `87.89% <0.00%> (-0.32%)` | :arrow_down: |\n| [scapy/config.py](https://codecov.io/gh/secdev/scapy/pull/3795?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29uZmlnLnB5) | `81.06% <0.00%> (-0.19%)` | :arrow_down: |\n",
      "@gpotter2 anything still missing from my side? Do you want me to rebase my branch before you continue reviewing?",
      "Last force-push was a simple rebase on the master branch.",
      "@gpotter2 @guedou I don't understand why the [flake8 test](https://github.com/secdev/scapy/actions/runs/3597537588/jobs/6059381937) fails with tons of errors. What is the problem here? The failure also occurs [on the head of the master branch](https://github.com/secdev/scapy/actions/runs/3558329127/jobs/5976920104). ",
      "Rebased without further changes on master to pick up the flake8 fix.\r\n",
      "Rebased without further changes on master to pick up the recent CI fixes. ",
      "@gpotter2 I decided to drop commit 45da0b3ebfa08e7d5f83588811e920fe29310e82 entirely in order to avoid unnecessary changes and unnecessary deviations from isakmp.",
      "@gpotter2 @guedou congratulations to the new 2.5.0 release, it's just in time for Christmas. I'm pleased to see that my little contribution is mentioned in the release notes :-)\r\n\r\n> - IKEv2: fixes, UDP encapsulation\r\n\r\nNow that the release is out, I hope that you - after taking some rest - will find some time in the next weeks to review this PR and my other outstanding pull requests.",
      "Rebased on master without further changes. Pinging for review.\r\n\r\nThe followup pull request #3801 is ready for review as well. If you prefer that I join the followup pull request with this one to make it a single PR, please let me know.",
      "The CI failures seem to be unrelated. ",
      "Last force-push was a rebase on master without further changes.",
      "pinging for review ",
      "Still hoping for a review in a not too distant future...",
      "Sorry for the delay, thanks again for the PR !",
      "Thanks a lot for taking the time to review it!"
    ],
    "commit_messages": [
      "IKEv2: refactor the implementation (#3795)\n\n* IKEv2: remove the unnecessary 'payload_' infixes\r\n\r\nThe IKE messages tend to have a lot of payloads and those unnecessary\r\neight characters per payload add a lot of redundancy and size to the\r\noutput of the dissected packets. Removing them improves readability of\r\nthe output and makes typing less tedious.\r\n\r\nThe removal was automated using the following find+sed script:\r\n\r\n    find * -type f -exec sed -i \\\r\n        -e 's/IKEv2_payload_type/IKEv2_payloax_type/g' \\\r\n        -e 's/IKEv2_payload_/IKEv2_/g' \\\r\n        -e 's/IKEv2_payload/IKEv2_Payload/g' \\\r\n        -e 's/IKEv2_payloax/IKEv2_payload/g' {} +\r\n\r\n* IKEv2: reorganize IKEv2{Attribute,Payload,Exchange}Types dicts\r\n\r\n* IKEv2AttributeTypes\r\n\r\nSwap names and numbers in the IKEv2AttributeTypes dictionary and its\r\nnested algorithm dictionaries to get rid of the awkward code to invert\r\nthe entries. With this change, the transform types and algorithms can\r\nnow be extracted using a simple dictionary comprehension.\r\n\r\n* IKEv2PayloadTypes and IKEv2ExchangeTypes\r\n\r\nInstead of arrays, use dictionaries like everywhere else in the module.\r\nAlso change their names to make them consistent with the names of the\r\nother dictionaries.\r\n\r\n* IKEv2: bind all layers together correctly\r\n\r\nThe previous bindings were incomplete: the payloads were only bound\r\nto the main IKEv2 layer, but not to the other payloads. For example,\r\nthe lower binding between KE and Nonce payload is missing here:\r\n\r\n    >>> IKEv2() / IKEv2_KE() / IKEv2_Nonce()\r\n    <IKEv2  next_payload=KE |<IKEv2_KE  |<IKEv2_Nonce  |>>>\r\n\r\nThis commit removes the manually implemented bindings and replaces them\r\nwith bind_layers() calls:\r\n\r\nFor every entry (np, name) in the IKEv2PayloadTypes dictionary it is\r\nnow expected that there exists a corresponding 'IKEv2_<name>' class,\r\nwhich is derived from IKEv2_Packet. The layers get bound as follows:\r\n\r\n    bind_layers(IKEv2_Packet, IKEv2_<name>, next_payload=np)\r\n\r\n* IKEv2: improve dissection of the CERT and CERTREQ payload\r\n\r\n* CERT payload  [RFC 7296, section 3.6]\r\n\r\nPreviously, the IKEv2_CERT class used a dispatch hook to define three\r\ndifferent classes IKEv2_CERT_CRT, IKEv2_CERT_CRL, and IKEv2_CERT_STR.\r\n\r\nThis commit removes the three subclasses and uses a MultipleTypeField\r\nfor the `cert_data` instead.\r\n\r\n* CERTREQ payload  [RFC 7296, section 3.7]\r\n\r\nThe field description was apparently copied from the vendor id payload\r\nand never updated. This commit adds the correct members, however the\r\nsize and count of the SPIs are not updated automatically yet.\r\n\r\n* IKEv2: replace Str*Fields with XStr*Fields\r\n\r\nAll the fields contain binary data, so it makes the output\r\nmuch more readable to show their value as hexadecimal string.\r\nIt is also more consistent with the ipsec module, see for\r\nexample the spi and data fields of the ESP packet.\r\n\r\nAdditionally, unify naming and formatting of lambda functions and\r\nrename the 'load' field of the Nonce, Notify and KE payloads to\r\n'nonce', 'notify' resp. 'ke'."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac76a88c0a76e0a51645",
    "number": 3791,
    "body": "just a cleanup",
    "head_branch": "isotp_cleanup",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3791?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3791](https://codecov.io/gh/secdev/scapy/pull/3791?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (53b9eda) into [master](https://codecov.io/gh/secdev/scapy/commit/0bcb487ad61d13856d8308d0295e57b553b458a5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0bcb487) will **decrease** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3791      +/-   ##\n==========================================\n- Coverage   84.58%   84.58%   -0.01%     \n==========================================\n  Files         296      296              \n  Lines       62217    62217              \n==========================================\n- Hits        52627    52626       -1     \n- Misses       9590     9591       +1     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3791?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3791/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3791/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.72% <0.00%> (+0.05%)` | :arrow_up: |\n| [scapy/layers/ntp.py](https://codecov.io/gh/secdev/scapy/pull/3791/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250cC5weQ==) | `84.82% <0.00%> (+0.27%)` | :arrow_up: |\n"
    ],
    "commit_messages": [
      "Remove SID and DID from ISOTP and documentation (#3791)\n\n* Remove SID and DID from ISOTP and documentation\r\n\r\n* remove scanner tests from pypy\r\n\r\n* remove scanner tests from pypy\r\n\r\nCo-authored-by: Nils Weiss <nils@dissec.to>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac77a88c0a76e0a51646",
    "number": 3788,
    "body": "We have [until the 01/12/2022](https://github.com/actions/runner-images/issues/5583) to stop using MacOS 10.5 in our test suite. This PR is a proposal to use version 12\r\n\r\n@guedou There appears to be an issue on Python 2.7 with OSX12, where it can't find `libpcap`. Do you think we should:\r\n- fix the issue? (any ideas? ^^'''')\r\n- drop support for OSX 12 on 2.7?\r\n- try to disable that one test on OSX, 2.7...\r\n\r\nI don't have a MacOS machine to debug this ://",
    "head_branch": "macos",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3788?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3788](https://codecov.io/gh/secdev/scapy/pull/3788?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (1b40389) into [master](https://codecov.io/gh/secdev/scapy/commit/0bcb487ad61d13856d8308d0295e57b553b458a5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (0bcb487) will **increase** coverage by `0.00%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3788   +/-   ##\n=======================================\n  Coverage   84.58%   84.58%           \n=======================================\n  Files         296      296           \n  Lines       62217    62217           \n=======================================\n+ Hits        52627    52629    +2     \n+ Misses       9590     9588    -2     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3788?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3788/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3788/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.72% <0.00%> (+0.05%)` | :arrow_up: |\n| [scapy/sendrecv.py](https://codecov.io/gh/secdev/scapy/pull/3788/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc2VuZHJlY3YucHk=) | `85.41% <0.00%> (+0.15%)` | :arrow_up: |\n| [scapy/layers/l2.py](https://codecov.io/gh/secdev/scapy/pull/3788/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2wyLnB5) | `72.53% <0.00%> (+0.21%)` | :arrow_up: |\n| [scapy/layers/ntp.py](https://codecov.io/gh/secdev/scapy/pull/3788/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250cC5weQ==) | `84.82% <0.00%> (+0.27%)` | :arrow_up: |\n| [scapy/contrib/automotive/ecu.py](https://codecov.io/gh/secdev/scapy/pull/3788/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9hdXRvbW90aXZlL2VjdS5weQ==) | `92.33% <0.00%> (+0.33%)` | :arrow_up: |\n",
      "This is a known issue https://stackoverflow.com/a/63609524\r\nI will suggest to only disable the failing tests until we drop Python 2.7 support."
    ],
    "commit_messages": [
      "Use macOS 12 (#3788)\n\n* Use macOS 12\r\n\r\n* Disable libpcap tests on MacOS 12, Python 2.7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac77a88c0a76e0a51647",
    "number": 3787,
    "body": "The **main commit** adds two testcases to the advanced IKEv2 test, which verify dissecting and building for the two decrypted IKE_AUTH messages of the pcap file:\r\n\r\n * IKEv2 keyexchange with NAT-traversal\r\n\r\n   - IKE_SA_INIT request\r\n   - IKE_SA_INIT response\r\n   - IKE_AUTH request\r\n   - IKE_AUTH response\r\n   - IKE_AUTH request, decrypted    (new)\r\n   - IKE_AUTH response, decrypted   (new)\r\n\r\nEffectively, those two testcases combine unit tests for the following payloads transmitted in the Encrypted payload of the IKE_AUTH exchange:\r\n\r\n    AUTH, CERTREQ, CERT_CRT, CP, IDi, IDr, Nonce, Notify, Proposal,\r\n    SA, TSi, TSr, Transform, VendorID\r\n\r\nAlso add a forgotten reference to the origin of the capture file: it is taken from 'Example 2: Dissection of encrypted (and UDP-encapsulated) IKEv2 and ESP messages' on the Wireshark [SampleCaptures] Wiki page.\r\n\r\nNote: The tarfile not only contains the pcap file but also the secrets which enable Wireshark (v3.6+) to decrypt the IKE and ESP traffic. The raw frame data was crafted manually using Wireshark for decrypting the encrypted payload and Scapy for gluing the layers together.\r\n\r\n[SampleCaptures]: https://gitlab.com/wireshark/wireshark/-/wikis/SampleCaptures\r\n\r\n\r\nThe **other two commits** improve dissection of two specific payloads the Configuration (**CP**) payload (RFC 7296, section 3.15) and the **IDi** resp. **IDr** payload (RFC 7296, section 3.5).\r\n\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**My Checklist:**\r\n\r\n-   [x] I added unit tests\r\n-   [x] I executed the regression tests\r\n\r\n",
    "head_branch": "ikev2-decrypted-payloads",
    "is_a_fork": true,
    "comments": [
      "Ready for review. For more information, please see the respective commit messages.",
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3787?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3787](https://codecov.io/gh/secdev/scapy/pull/3787?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (84bee67) into [master](https://codecov.io/gh/secdev/scapy/commit/664f5985c24c2eb7645bf76327bd333fab5f92b4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (664f598) will **increase** coverage by `0.00%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##           master    #3787   +/-   ##\n=======================================\n  Coverage   84.58%   84.59%           \n=======================================\n  Files         296      296           \n  Lines       62240    62251   +11     \n=======================================\n+ Hits        52648    52659   +11     \n  Misses       9592     9592           \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3787?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/contrib/ikev2.py](https://codecov.io/gh/secdev/scapy/pull/3787/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pa2V2Mi5weQ==) | `94.26% <100.00%> (+0.27%)` | :arrow_up: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3787/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (-0.56%)` | :arrow_down: |\n| [scapy/pipetool.py](https://codecov.io/gh/secdev/scapy/pull/3787/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGlwZXRvb2wucHk=) | `84.10% <0.00%> (-0.23%)` | :arrow_down: |\n| [scapy/layers/x509.py](https://codecov.io/gh/secdev/scapy/pull/3787/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL3g1MDkucHk=) | `92.57% <0.00%> (+0.58%)` | :arrow_up: |\n| [scapy/asn1/mib.py](https://codecov.io/gh/secdev/scapy/pull/3787/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXNuMS9taWIucHk=) | `91.39% <0.00%> (+0.66%)` | :arrow_up: |\n",
      "Ready for review.  _(gentle reminder: please don't [squash my commits](https://github.com/secdev/scapy/pull/3787/commits) when merging)_\r\n",
      "Restarting CI…",
      "Rebased on master without changes",
      "ping @gpotter2 @guedou for review",
      "ubunt-latest pypy3.9 is stuck, restarting ",
      "Please don't do that. We can read tests and restart them individually",
      "Sorry for being overzealous, I won't do it again!"
    ],
    "commit_messages": [
      "IKEv2: improve and test dissection of decrypted IKEv2 payloads (#3787)\n\n* IKEv2: improve dissection of the IDi and IDr payload\r\n\r\nSee RFC 7296, section 3.5\r\n\r\n* IKEv2: improve dissection of the Configuration payload\r\n\r\nSee RFC 7296, section 3.15\r\n\r\n* IKEv2: test dissection of some decrypted IKEv2 payloads\r\n\r\nThis commit adds two testcases to the advanced test, which verify\r\ndissecting and building for the two decrypted IKE_AUTH messages\r\nof the pcap file.\r\n\r\n * IKEv2 keyexchange with NAT-traversal\r\n\r\n   - IKE_SA_INIT request\r\n   - IKE_SA_INIT response\r\n   - IKE_AUTH request\r\n   - IKE_AUTH response\r\n   - IKE_AUTH request, decrypted    (new)\r\n   - IKE_AUTH response, decrypted   (new)\r\n\r\nEffectively, those two testcases combine unit tests for the following\r\npayloads transmitted in the Encrypted payload of the IKE_AUTH exchange:\r\n\r\n    AUTH, CERTREQ, CERT_CRT, CP, IDi, IDr, Nonce, Notify, Proposal,\r\n    SA, TSi, TSr, Transform, VendorID\r\n\r\nAlso add a forgotten reference to the origin of the capture file: it is\r\ntaken from 'Example 2: Dissection of encrypted (and UDP-encapsulated)\r\nIKEv2 and ESP messages' on the Wireshark [SampleCaptures] Wiki page.\r\n\r\nNote: The tarfile not only contains the pcap file but also the secrets\r\nwhich enable Wireshark (v3.6+) to decrypt the IKE and ESP traffic.\r\nThe raw frame data was crafted manually using Wireshark for decrypting\r\nthe encrypted payload and Scapy for gluing the layers together.\r\n\r\n[SampleCaptures]: https://gitlab.com/wireshark/wireshark/-/wikis/SampleCaptures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac78a88c0a76e0a51648",
    "number": 3786,
    "body": "This pull request replaces #3766. The main difference is that the IKEv2 protocol remains in 'scapy.contrib' for now, until the implementation is mature enough to be promoted to 'scapy.layers'.\r\n\r\n As a consequence, support for dissecting UDP encapsulated ISAKMP messages on port 4500(ipsec-nat-t) is currently available only after 'scapy.contrib.ikev2' module is loaded. ",
    "head_branch": "improve-ikev2-dissection",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/secdev/scapy/pull/3786?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) Report\n> Merging [#3786](https://codecov.io/gh/secdev/scapy/pull/3786?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (5b2249d) into [master](https://codecov.io/gh/secdev/scapy/commit/ada91610ad55339bce4d84bc7d5e44ee1cab0c6f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) (ada9161) will **increase** coverage by `0.02%`.\n> The diff coverage is `95.55%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master    #3786      +/-   ##\n==========================================\n+ Coverage   84.56%   84.58%   +0.02%     \n==========================================\n  Files         296      296              \n  Lines       62176    62214      +38     \n==========================================\n+ Hits        52578    52624      +46     \n+ Misses       9598     9590       -8     \n```\n\n| [Impacted Files](https://codecov.io/gh/secdev/scapy/pull/3786?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | Coverage Δ | |\n|---|---|---|\n| [scapy/layers/ipsec.py](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lwc2VjLnB5) | `88.75% <ø> (ø)` | |\n| [scapy/contrib/ikev2.py](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvY29udHJpYi9pa2V2Mi5weQ==) | `93.99% <95.34%> (+0.14%)` | :arrow_up: |\n| [scapy/layers/isakmp.py](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL2lzYWttcC5weQ==) | `89.11% <100.00%> (ø)` | |\n| [scapy/supersocket.py](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvc3VwZXJzb2NrZXQucHk=) | `56.58% <0.00%> (-0.30%)` | :arrow_down: |\n| [scapy/layers/ntp.py](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvbGF5ZXJzL250cC5weQ==) | `84.55% <0.00%> (-0.28%)` | :arrow_down: |\n| [scapy/automaton.py](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXV0b21hdG9uLnB5) | `74.04% <0.00%> (-0.12%)` | :arrow_down: |\n| [scapy/packet.py](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGFja2V0LnB5) | `82.66% <0.00%> (+0.07%)` | :arrow_up: |\n| [scapy/fields.py](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvZmllbGRzLnB5) | `91.67% <0.00%> (+0.21%)` | :arrow_up: |\n| [scapy/pipetool.py](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvcGlwZXRvb2wucHk=) | `84.32% <0.00%> (+0.22%)` | :arrow_up: |\n| [scapy/arch/windows/\\_\\_init\\_\\_.py](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev#diff-c2NhcHkvYXJjaC93aW5kb3dzL19faW5pdF9fLnB5) | `67.16% <0.00%> (+0.37%)` | :arrow_up: |\n| ... and [1 more](https://codecov.io/gh/secdev/scapy/pull/3786/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=secdev) | |\n",
      "Great work ! Thanks a lot ",
      "You're welcome, and thank you, too! It's an honour for me and I'm excited to see my work accepted and merged into Scapy!\r\n\r\nScapy such a cool piece of Python code, not only because of what you can do with it but also because of all the fancy plumbing it uses under the hood to implement this awesome domain specific language for describing network packets. :-)",
      "To be continued... :-)"
    ],
    "commit_messages": [
      "Test UDP encapsulation of IPsec ESP packets\n\nSimple tests:\n\n * Build and dissect UDP encapsulated IKEv1 packets\n * Build and dissect UDP encapsulated IKEv2 packets\n * Build and dissect UDP encapsulated ESP packets\n * Build and dissect UDP encapsulated NAT-keepalive packets\n\nAdvanced tests:\n\n * IKEv2 keyexchange with NAT-traversal\n\n   - IKE_SA_INIT request\n   - IKE_SA_INIT response\n   - IKE_AUTH request\n   - IKE_AUTH response\n\nLoads and dissects the four frames of an IKEv2 key exchange\non port 4500(ipsec-nat-t) from a Wireshark capture and compares\nthem with manually built Scapy packets."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac79a88c0a76e0a51649",
    "number": 3785,
    "body": "@superuserx Discovered this bug. Could you please merge this quickly?",
    "head_branch": "cansocketfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bugfix: Add padding of CAN frame for kernel socket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac7aa88c0a76e0a5164a",
    "number": 3784,
    "body": "fixes https://github.com/secdev/scapy/issues/3777",
    "head_branch": "randtcpoptions-fi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix RandTCPOptions for MD5 (#3784)\n\n* Fix RandTCPOptions for MD5\r\n\r\n* Add test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac7ba88c0a76e0a5164b",
    "number": 3783,
    "body": "The `certificateExtension_oids` dictionary contains several oids with duplicate names, one of which has been declared obsolete:\r\n\r\n * [2.5.29.1]   authorityKeyIdentifier\r\n * [2.5.29.3]   certificatePolicies\r\n * [2.5.29.5]   policyMapping\r\n * [2.5.29.7]   subjectAltName\r\n * [2.5.29.8]   issuerAltName\r\n * [2.5.29.10]  basicConstraints\r\n * [2.5.29.25]  cRLDistributionPoints\r\n * [2.5.29.26]  issuingDistributionPoint\r\n * [2.5.29.34]  policyConstraints\r\n\r\nFor example, the oid values [2.5.29.10] and [2.5.29.19] are registered with the name `basicConstraints`. The former is obsolete since 2000 and has been replaced by the latter. Unfortunately, the obsolete oid is chosen by Scapy when the ASN1_OID object is constructed from its name:\r\n\r\n    >>> oid1=ASN1_OID('basicConstraints')\r\n    >>> oid1\r\n    <ASN1_OID['basicConstraints']>\r\n    >>> oid1.val\r\n    '2.5.29.10'\r\n\r\nThis bug caused a one byte discrepancy with an ASN1_ID dissected from an X509 certificate.\r\n\r\n    >>> oid2\r\n    <ASN1_OID['basicConstraints']>\r\n    >>> oid1 == oid2\r\n    False\r\n    >>> oid2.val\r\n    '2.5.29.19'\r\n\r\n*Note*: the duplicate oids have been present in the dictionary for a while, but only after commit 5143eff9 (Reverse MIB storage format, 2018-09-23) the bug became manifest, because previously the obsolete oid value was overwritten by the correct one in the dictionary:\r\n\r\n    ~/src/scapy$ git show 5143eff9 | grep basicConstraints\r\n\r\n    -    \"basicConstraints\": \"2.5.29.10\",\r\n    -    \"basicConstraints\": \"2.5.29.19\",\r\n    +    \"2.5.29.10\": \"basicConstraints\",\r\n    +    \"2.5.29.19\": \"basicConstraints\",\r\n\r\n[2.5.29.1]: http://oid-info.com/get/2.5.29.1\r\n[2.5.29.3]: http://oid-info.com/get/2.5.29.3\r\n[2.5.29.5]: http://oid-info.com/get/2.5.29.5\r\n[2.5.29.7]: http://oid-info.com/get/2.5.29.7\r\n[2.5.29.8]: http://oid-info.com/get/2.5.29.8\r\n[2.5.29.10]: http://oid-info.com/get/2.5.29.10\r\n[2.5.29.19]: http://oid-info.com/get/2.5.29.19\r\n[2.5.29.25]: http://oid-info.com/get/2.5.29.25\r\n[2.5.29.26]: http://oid-info.com/get/2.5.29.26\r\n[2.5.29.34]: http://oid-info.com/get/2.5.29.34\r\n\r\n",
    "head_branch": "fix-asn1-mib-obsolete-duplicates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "asn1.mib: fix (obsolete) duplicate certificate extension oid names\n\nThe `certificateExtension_oids` dictionary contains several oids\nwith duplicate names, one of which has been declared obsolete:\n\n * [2.5.29.1]   authorityKeyIdentifier\n * [2.5.29.3]   certificatePolicies\n * [2.5.29.5]   policyMapping\n * [2.5.29.7]   subjectAltName\n * [2.5.29.8]   issuerAltName\n * [2.5.29.10]  basicConstraints\n * [2.5.29.25]  cRLDistributionPoints\n * [2.5.29.26]  issuingDistributionPoint\n * [2.5.29.34]  policyConstraints\n\nFor example, the oid values [2.5.29.10] and [2.5.29.19] are registered\nwith the name `basicConstraints`. The former is obsolete since 2000 and\nhas been replaced by the latter. Unfortunately, the obsolete oid is\nchosen by Scapy when the ASN1_OID object is constructed from its name:\n\n    >>> oid1=ASN1_OID('basicConstraints')\n    >>> oid1\n    <ASN1_OID['basicConstraints']>\n    >>> oid1.val\n    '2.5.29.10'\n\nThis bug caused a one byte discrepancy with an ASN1_ID dissected from an\nX509 certificate.\n\n    >>> oid2\n    <ASN1_OID['basicConstraints']>\n    >>> oid1 == oid2\n    False\n    >>> oid2.val\n    '2.5.29.19'\n\n*Note*: the duplicate oids have been present in the dictionary for a while,\nbut only after commit 5143eff9 (Reverse MIB storage format, 2018-09-23)\nthe bug became manifest, because previously the obsolete oid value was\noverwritten by the correct one in the dictionary:\n\n    ~/src/scapy$ git show 5143eff9 | grep basicConstraints\n\n    -    \"basicConstraints\": \"2.5.29.10\",\n    -    \"basicConstraints\": \"2.5.29.19\",\n    +    \"2.5.29.10\": \"basicConstraints\",\n    +    \"2.5.29.19\": \"basicConstraints\",\n\n[2.5.29.1]: http://oid-info.com/get/2.5.29.1\n[2.5.29.3]: http://oid-info.com/get/2.5.29.3\n[2.5.29.5]: http://oid-info.com/get/2.5.29.5\n[2.5.29.7]: http://oid-info.com/get/2.5.29.7\n[2.5.29.8]: http://oid-info.com/get/2.5.29.8\n[2.5.29.10]: http://oid-info.com/get/2.5.29.10\n[2.5.29.19]: http://oid-info.com/get/2.5.29.19\n[2.5.29.25]: http://oid-info.com/get/2.5.29.25\n[2.5.29.26]: http://oid-info.com/get/2.5.29.26\n[2.5.29.34]: http://oid-info.com/get/2.5.29.34"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac7ca88c0a76e0a5164c",
    "number": 3782,
    "body": "Co-authored-by: superuserx\r\n\r\nThis PR replaces #3739 ",
    "head_branch": "canfd_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support of CANFD (#3782)\n\n* Add support of CANFD\r\n\r\nCo-authored-by: superuserx\r\n\r\n* fix tests\r\n\r\n* fix flake\r\n\r\n* fix test\r\n\r\n* fix test for python2\r\n\r\n* fix test for python2\r\n\r\n* fix test for python2\r\n\r\nCo-authored-by: superuserx <a@b.com>\r\nCo-authored-by: Nils Weiss <nils@dissec.to>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac7ca88c0a76e0a5164d",
    "number": 3781,
    "body": "The `certificateExtension_oids` dictionary contains two oid values for `basicConstraints`, namely [oid 2.5.29.10] and [oid 2.5.29.19].\r\n\r\nThe former is obsolete since 2000 and has been replaced by the latter. Unfortunately, the obsolete oid is chosen when the ASN1_OID object is constructed from its name:\r\n\r\n    >>> oid1=ASN1_OID('basicConstraints')\r\n    >>> oid1\r\n    <ASN1_OID['basicConstraints']>\r\n    >>> oid1.val\r\n    '2.5.29.10'\r\n\r\nThis bug caused a one byte discrepancy with an ASN1_ID dissected from an X509 certificate.\r\n\r\n    >>> oid2\r\n    <ASN1_OID['basicConstraints']>\r\n    >>> oid1 == oid2\r\n    False\r\n    >>> oid2.val\r\n    '2.5.29.19'\r\n\r\n*Note*: both oids have been present in the dictionary for quite a while, but only after commit 5143eff9 (Reverse MIB storage format, 2018-09-23) the bug became manifest, because previously the obsolete oid value was overwritten by the correct one in the dictionary:\r\n\r\n    ~/src/scapy$ git show 5143eff9 | grep basicConstraints\r\n\r\n    -    \"basicConstraints\": \"2.5.29.10\",\r\n    -    \"basicConstraints\": \"2.5.29.19\",\r\n    +    \"2.5.29.10\": \"basicConstraints\",\r\n    +    \"2.5.29.19\": \"basicConstraints\",\r\n\r\n[oid 2.5.29.10]: http://oid-info.com/get/2.5.29.10\r\n[oid 2.5.29.19]: http://oid-info.com/get/2.5.29.19\r\n",
    "head_branch": "fix-asn1-mib-basic-constraints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac7da88c0a76e0a5164e",
    "number": 3780,
    "body": "_Still a draft, because the pull request is based on the unmerged pull request #3766 and because tests are still missing._\r\n\r\ncommit [2821437c79648ec045914adbf3b9d144314b400c](https://github.com/secdev/scapy/pull/3780/commits/2821437c79648ec045914adbf3b9d144314b400c)\r\n\r\n    IKEv2: improve dissection of Configuration payload\r\n    \r\n    See RFC 7296, section 3.15\r\n\r\ncommit [45465c503b90eedf46fc716bfa6425bfdbc00caf](https://github.com/secdev/scapy/pull/3780/commits/45465c503b90eedf46fc716bfa6425bfdbc00caf)\r\n\r\n    IKEv2: improve dissection of IDi and IDr payload\r\n    \r\n    See RFC 7296, section 3.5\r\n\r\n\r\n_Those payloads are contained in the encrypted payloads of the IKE_AUTH  messages. I will add some tests using the decrypted payloads from `test/pcaps/ikev2_nat_t.pcapng`._\r\n\r\n\r\n\r\n\r\n**Checklist:**\r\n\r\n-   [ ] I added unit tests\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n\r\n",
    "head_branch": "dissect-ikev2-idi-idr-cp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac7ea88c0a76e0a5164f",
    "number": 3779,
    "body": "_Commits in chronological order. ~~The first one is a preparation for the second, main commit.~~(update: squashed into one)_\r\n\r\n_Still a draft, because the pull request is based on the unmerged pull request #3766 and because tests are still missing._\r\n\r\ncommit [733ba89e4ec0f3fd2e0b19d9788afd27a7fdef46](https://github.com/secdev/scapy/pull/3779/commits/733ba89e4ec0f3fd2e0b19d9788afd27a7fdef46)\r\n\r\n    IKEv2: improve dissection of IKEv2 redirect notifications\r\n    \r\n    This commit adds a dispatch hook for the IKEv2_payload_Notify class\r\n    to support adding specialized classes for specific notifications\r\n    for which the payload can be dissected further.\r\n    \r\n    As a first use-case, it adds two new notification classes\r\n    \r\n    - IKEv2_payload_Notify_Redirect\r\n    - IKEv2_payload_Notify_Redirected_from\r\n    \r\n    See RFC 5685, sections 9.2 and 9.3\r\n\r\n**Checklist:**\r\n\r\n-   [ ] I added unit tests\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n",
    "head_branch": "dissect-ikev2-redirect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac7fa88c0a76e0a51650",
    "number": 3776,
    "body": "- minor improvements to dhcpd for more flexibility\r\n  - nameserver param\r\n  - ability to omit a param",
    "head_branch": "dhcpd-imp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "More flexibility in dhcpd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac80a88c0a76e0a51651",
    "number": 3773,
    "body": "LLDPDUChassisID and LLDPDUPortID have a subtype \"network address\" (0x05 and 0x04 respectively) for the \"id\" field that interprets it as having the first octect specifying an address family, and the other octects being interpreted in the specified address family. We were supporting the specific parsing of IPv4 in this field, and that was working fine.\r\n\r\nThe other possible address families were not working because:\r\n- we were not checking the family field when choosing IPField as the class for the id and\r\n- we were not subtracting the the family field from the length of the id in length_from when using StrLenField as the type.\r\n\r\nThese issues prevented the parsing and crafting of packets where the address family is arbitrary or simply different from IPv4.\r\n\r\nBesides fixing and adding tests, this commit also adds support for IPv6 as a specific parser for the network address field, when the address family is 0x02.\r\n",
    "head_branch": "lldp_ids_af_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "LLDP: fix support of non-IPv4 network addresses in chassis/port IDs (#3773)\n\nLLDPDUChassisID and LLDPDUPortID have a subtype \"network\r\naddress\" (0x05 and 0x04 respectively) for the \"id\" field that\r\ninterprets it as having the first octect specifying an address family,\r\nand the other octects being interpreted in the specified address\r\nfamily. We were supporting the specific parsing of IPv4 in this field,\r\nand that was working fine.\r\n\r\nThe other possible address families were not working because:\r\n- we were not checking the family field when choosing IPField as the\r\n  class for the id and\r\n- we were not subtracting the the family field from the length of the\r\n  id in length_from when using StrLenField as the type.\r\n\r\nThese issues prevented the parsing and crafting of packets where the\r\naddress family is arbitrary or simply different from IPv4.\r\n\r\nBesides fixing and adding tests, this commit also adds support for\r\nIPv6 as a specific parser for the network address field, when the\r\naddress family is 0x02."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac81a88c0a76e0a51652",
    "number": 3770,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n## Description\r\n\r\nThis PR adds [OAM](https://www.itu.int/rec/T-REC-G.8013) protocol layer, which includes [APS](https://www.itu.int/rec/T-REC-G.8031) and [RAPS](https://www.itu.int/rec/T-REC-G.8032) protocols.\r\n\r\n## Issues with code:\r\n* This PR defines `PTP_TIMESTAMP` packet type, which probably should be defined elsewhere.\r\n* Some `OAM_LTR_TLV` fields are interpreted a bit differently in Wireshark\r\n* `EXM`, `EXR`, `VSM` and `VSR` have optional fields, which type and length are not specified by the standard, thus were omitted.\r\n* For some reason, Wireshark throws exception on `OAM_TEST_ID_TLV` dissection. But it seems like a Wireshark's bug.\r\n* ~~I couldn't find a way to define `check_tshark` function for all test cases, so there's a lot of code duplication.~~",
    "head_branch": "oam",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add OAM layer (#3770)\n\n* Add OAM layer\r\n\r\n* Fix test\r\n\r\n---------\r\n\r\nCo-authored-by: Sergey Matsievskiy <matsievskiy@fastwel.ru>\r\nCo-authored-by: gpotter2 <10530980+gpotter2@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac81a88c0a76e0a51653",
    "number": 3768,
    "body": "I have observed at runtime when using the `ERSPAN_II` object that the default version field is not set as I expect it. From [the IETF draft](https://datatracker.ietf.org/doc/html/draft-foschiano-erspan-03) section 4.2:\r\n\r\n```\r\n   Ver            [42:0]       4      ERSPAN Encapsulation version.\r\n                                      This indicates the version of\r\n                                      the ERSPAN encapsulation\r\n                                      specification. Set to 0x1 for\r\n                                      Type II.\r\n```\r\n\r\nThis seems to be simply due to an improper default value:\r\n\r\nhttps://github.com/secdev/scapy/blob/139966f37ee4188c676b958260312b1e4ad81be2/scapy/contrib/erspan.py#L40-L43\r\n\r\nBy contrast, the \"Type III\" packets in `scapy.contrib.erspan` already do have the correct (0x2) version for that type (section 4.3):\r\n\r\nhttps://github.com/secdev/scapy/blob/139966f37ee4188c676b958260312b1e4ad81be2/scapy/contrib/erspan.py#L54-L57\r\n\r\nBelieving this to be a self-evidently correct, one-bit change, I have created the current PR in a web page, so I did not run any unit tests. If I do indeed need to update (or write) unit tests, let me know.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac82a88c0a76e0a51654",
    "number": 3766,
    "body": "Considered on its own, the implementation of the IKEv2 protocol is quite mature, however the integration with the other protocols, in particular with the closely related protocols ISAKMP (= IKEv1, its predecessor) and ESP is unfinished and slightly broken.\r\n\r\nThe fact that the IKEv2 support needs to be loaded manually is only a minor flaw compared to the fact that the module essentially only replaces ISAKMP bindings with IKEv2 bindings and does not solve the problem of coexistence of the three protocols.\r\n\r\nIn particular, Scapy's dissector is currently missing the the following features:\r\n\r\n- automatic switching between IKEv2 and ISAKMP based on the protocol version\r\n- UDP Encapsulation of ESP *and* IKE packets on port 4500 for NAT traversal\r\n\r\nAs a consequence, packet captures of VPN traffic are not dissected correctly.\r\n\r\nThis commit fixes the problem by implementing the missing features, Moving the IKEv2 implementation from 'scapy.contrib' to 'scapy.layer' was a natural choice which not only simplified the fix but is also justified by the fact that this fix turns IKEv2 is a full-featured Scapy layer which simply works out-of-the-box.\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I added example packet captures\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n\r\n",
    "head_branch": "scapy-layer-ikev2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac83a88c0a76e0a51655",
    "number": 3764,
    "body": null,
    "head_branch": "uds_rmba_enum_improve",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve scan coverage of UDS_RMBAEnumerator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac84a88c0a76e0a51656",
    "number": 3761,
    "body": "If I'm not mistaken, there is no high-level function to perform an ARP mitm in Scapy, which is kind of a shame considering how common this should be.\r\n\r\nThis PR:\r\n- adds a high-level function to do ARP MiTM\r\n- adds a way for answering machines to run in the background\r\n- adds doc\r\n- fixes arpcachepoison (fun fact: it's likely broken since **scapy 1.0**)\r\n\r\n(Also imho, alternatives (ettercap..) either suck or try to achieve to much)",
    "head_branch": "simple-arp-mitm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support multiple targets in arpcachepoison"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac85a88c0a76e0a51657",
    "number": 3759,
    "body": "this is a part of #2158 (hinty project).\r\n",
    "head_branch": "type_hinting_modules",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add type hinting in `modules/nmap.py`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac86a88c0a76e0a51658",
    "number": 3758,
    "body": "When tcpreplay errors out inside `sendpfast()` for any reason (missing binary, malformed extra args...) the deletion of the temporary capture file happens twice ([while](https://github.com/secdev/scapy/blob/e3e843114c0bcc048290db6d1b94b53329310770/scapy/sendrecv.py#L546) and [after](https://github.com/secdev/scapy/blob/e3e843114c0bcc048290db6d1b94b53329310770/scapy/sendrecv.py#L556) raising the Exception) and generates extra output that shadows the actual error since it gets printed last.\r\n\r\nNo tests seem to be impacted by this small change nor it warrants a new one in my opinion.",
    "head_branch": "nm_sendpfast_unlink",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Skip deleting tcpreplay temp file if already done"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac87a88c0a76e0a51659",
    "number": 3757,
    "body": "- Python 3.11 fixes\r\n\r\nsee https://github.com/secdev/scapy/pull/3686",
    "head_branch": "py311",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Py311 fixes to contrib modules"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac87a88c0a76e0a5165a",
    "number": 3756,
    "body": "Bunch of fixes :\r\n- removes UTscapy from `setup.py`, now that we mostly use the `tox` or `./run_tests` wrapper (it's clutter for the user)\r\n- make doc work offline:\r\n  - local, smaller copy of `pipetool_demo.gif`\r\n  - drop gstatic tables (also, google)\r\n- remove terrible \"Quick demo\" animation\r\n\r\nThis is inspired from https://salsa.debian.org/pkg-security-team/scapy/-/tree/debian/2.4.5+g9420c22-2/debian/patches . Those are very reasonable patches",
    "head_branch": "debian-suggestions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Get rid of gstatic"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac88a88c0a76e0a5165b",
    "number": 3755,
    "body": "This thing was my terrible idea. It's broken, unclear and useless.",
    "head_branch": "ans-machines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove useless junk in Answering machines (#3755)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac89a88c0a76e0a5165c",
    "number": 3754,
    "body": "- DCERPC:\r\n  - better handling of `auth_pad` (it should actually be included in the body...)\r\n  - Better Netlogon SSP support (crypto not included in the PR..)\r\n  - AUTH3 support\r\n- NTLM: add crypto functions, seal, sign... etc\r\n- Tiny SMB fix to be more consistent with <WIN7 behavior",
    "head_branch": "smb-ntlm-more",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor DCERPC/NTLM/SMB improvements (#3754)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac8aa88c0a76e0a5165d",
    "number": 3753,
    "body": "This PR fixes #3751 in a way that I think is better (see https://github.com/secdev/scapy/pull/3751#issuecomment-1268159561) as it avoids mixing `DLT_*` values with `ARPHDR_*` values which looks like a hack to me. It fixes what I understand as being the \"real\" problem / bug here.\r\n\r\n@cscarpitta what do you think?\r\n",
    "head_branch": "fix-3751",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Register ETH_P_ALL to IPv46"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac8ba88c0a76e0a5165e",
    "number": 3752,
    "body": "This is a continuation of commit 7ba7a25fa41e07243ff7af7c693e2d1ad8af6f6a (PR #3692 \"Make RawVal work with all field types (fix for issue #3691)\"). This line was missed in the original fix, and covers the case where a field is set after object initialisation. The unit test has also been modified to cover this case.",
    "head_branch": "fix_issue_3691",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make RawVal work with all field types (continued)\n\nThis is a continuation of commit #7ba7a25fa41e07243ff7af7c693e2d1ad8af6f6a\n(\"Make RawVal work with all field types (fix for issue #3691)\").\nThis line was missed in the original fix, and covers the case where\na field is set after object initialisation. The unit test has also\nbeen modified to cover this case."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac8ca88c0a76e0a5165f",
    "number": 3751,
    "body": "Scapy L2Socket uses a 3-step process to determine the layer to be used for decoding the packets captured on a given interface:\r\n* it checks the Ethernet protocol number (`sa_ll[3]`);\r\n* if no L2 layer is bound to the Ethernet protocol number, it uses the ARP hardware address type (`sa_ll[1]`);\r\n* if no L3 layer is bound to the ARP hardware address type, it fallbacks to using the default L2 layer.\r\n\r\nhttps://github.com/secdev/scapy/blob/a1f999fb1721a64415af75d575cabde19625a6f5/scapy/arch/linux.py#L531-L541\r\n\r\nSome Linux interfaces operate at layer 3. The packets captured on these interfaces have no link-layer header. For these interfaces, the protocol number (`sa_ll[3]`) is `ARPHRD_NONE`.\r\n\r\nIn the current implementation of Scapy, the `ARPHRD_NONE` protocol number is not bound to any layer. This can cause packets captured on interfaces with protocol number `ARPHRD_NONE` to be delivered to the wrong layer and decoded incorrectly.\r\n\r\nFor example, Wireguard interfaces are `ARPHRD_NONE` devices that operate at layer 3. Scapy delivers the IPv4 and IPv6 packets captured on a Wireguard interface to the IPv4 layer.\r\n\r\nThis PR binds the `ARPHRD_NONE` protocol number to the `IPv46` layer. This way, Scapy can deliver the IP packets to the IPv4 or IPv6 layer depending on the `version` field of the IP header.\r\n\r\nSigned-off-by: Carmine Scarpitta <carmine.scarpitta@uniroma2.it>",
    "head_branch": "bind-no-link-layer-header-to-ipv46",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac8ca88c0a76e0a51660",
    "number": 3747,
    "body": "Rationale: Scapy has leaved supporting both Python 2 and Python 3 long enough, I think it is safe now to remove this warning. Moreover, having this warning confuses IDEs (see #3548).\r\n\r\nIn the Python philosophy, where `repr()` returns a formal representation of the object and `str()` an informal representation, I think the output of the existing (maybe one day, to be deprecated?) method `.command()` makes total sense for this.\r\n\r\nfixes #3548",
    "head_branch": "fix-str-packet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Python 3: `Packet.__str__()` returns `.command()`, without a warning message\n\nRationale: Scapy has leaved supporting both Python 2 and Python 3 long\nenough, I think it is safe now to remove this warning. Moreover,\nhaving this warning confuses IDEs (see GH#3548).\n\nIn the Python philosophy, where `repr()` returns a formal\nrepresentation of the object and `str()` an informal representation, I\nthink the output of the existing (maybe one day, to be deprecated?)\nmethod `.command()` makes total sense for this."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac8da88c0a76e0a51661",
    "number": 3746,
    "body": null,
    "head_branch": "system_state_improvement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve automotive system state handling (#3746)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac8ea88c0a76e0a51662",
    "number": 3744,
    "body": "This PR adds the bitfield size arguments to the `BitFieldLenField` class, passing them to the parent class. Should allow users to use this field as the start or end field in a series of bitfields.",
    "head_branch": "bitfield_args",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pass bitfield size keyword arguments to parent class."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac8fa88c0a76e0a51663",
    "number": 3743,
    "body": "This PR:\r\n- improves how automata manage memory\r\n  - add a **`destroy()`** function that cleans up an Automaton (called in `__del__`, but in best case should also be called manually, especially on PyPy)\r\n    - added a bit of doc. As a reminder of how it works: when you start an automaton, it calls `start()` and spawns stuff. An automaton can be restarted using `restart()`, so some stuff is kept open even after it finishes. `stop()` is an invitation for the automaton to close itself gracefully (it switches the automaton to a STOP state), and `forcestop()` forces it to close. There was no function that cleaned up what `start()` spawned, so introducting **`destroy()`**.\r\n  - minor adjustment to how `ObjectPipe` worked on Windows to be closer to the linux behavior, removing the need for some special cases\r\n  - spawn sockets only when necessary + properly close them\r\n- properly decode libpcap errors on Windows (using the locale)\r\n\r\nSide effects:\r\n- fix https://github.com/secdev/scapy/issues/3619\r\n- attempt at fixing https://github.com/secdev/scapy/issues/3706\r\n",
    "head_branch": "atmt-memleak",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Automata: improve memory management (#3743)\n\n* Automata memory improvements (cleanup..)\r\n\r\n* Add docstrings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac90a88c0a76e0a51664",
    "number": 3742,
    "body": "This PR adds the support for the Simple Two-Way Active Measurement Protocol (STAMP) to Scapy. STAMP enables the measurement of both one-way and round-trip performance metrics, like delay, delay variation, and packet loss.\r\n\r\nThis PR implements the main specifications of STAMP described in [RFC 8762](https://www.rfc-editor.org/rfc/rfc8762.html) and the STAMP Test Session Identifier (SSID) defined in Section 3 of [RFC 8972](https://www.rfc-editor.org/rfc/rfc8972.html).\r\n\r\n\r\nSigned-off-by: Carmine Scarpitta <carmine.scarpitta@uniroma2.it>",
    "head_branch": "stamp-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for Simple Two-Way Active Measurement Protocol (STAMP) (#3742)\n\n* Add support for STAMP\r\n* Add regression test for STAMP\r\n\r\nThis commit adds the support for\r\nSimple Two-Way Active Measurement Protocol (STAMP).\r\n\r\nSimple Two-Way Active Measurement Protocol:\r\nhttps://www.rfc-editor.org/rfc/rfc8762.html\r\n\r\nSimple Two-Way Active Measurement Protocol Optional Extensions:\r\nhttps://www.rfc-editor.org/rfc/rfc8972.html\r\n\r\nSigned-off-by: Carmine Scarpitta <carmine.scarpitta@uniroma2.it>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac91a88c0a76e0a51665",
    "number": 3741,
    "body": "Just a minimal change",
    "head_branch": "change_isotp_scan_logging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change log level setting in isotp scan (#3741)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac91a88c0a76e0a51666",
    "number": 3740,
    "body": null,
    "head_branch": "uds_scanner_fix_pickle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve reduce function for Automotive Scanner Enumerators (#3740)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac92a88c0a76e0a51667",
    "number": 3739,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "canfd_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac93a88c0a76e0a51668",
    "number": 3738,
    "body": "- parse & build the PAC from kerberos tickets\r\n- adds an IRL test for our NDR engine (because parts of [MS-PAC] use [MS-RPCE] marshalling)",
    "head_branch": "krb-pac",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Parse PAC from kerberos tickets (#3738)\n\n* Parse & build PAC from kerberos tickets\r\n\r\n* Implement all PAC fields\r\n\r\n* Make FieldListField public"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac94a88c0a76e0a51669",
    "number": 3737,
    "body": "- add a test `cryptography` in tox to use by upstream's `pyca/cryptography` for regressions\r\n- test it in our own unit tests to make sure we don't break theirs",
    "head_branch": "cryptography-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add upstream cryptography test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac95a88c0a76e0a5166a",
    "number": 3736,
    "body": "This PR adds a test config that will be used in pyca/cryptography (see https://github.com/pyca/cryptography/pull/7234#issuecomment-1241966358) to test changes against downstream projects (very nice !)",
    "head_branch": "cryptography-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add unit tests for upstream cryptography"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac95a88c0a76e0a5166b",
    "number": 3735,
    "body": "Hi, I would appreciate having the automotive scanners tests be part of the CI pipeline. However, I understand that some flaky tests cause problems for the overall pipeline. \r\n\r\nWould it be possible, to have some CI-machines for the automotive scanners only, which are allowed to fail?\r\n\r\n",
    "head_branch": "scanner_ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add \"continue-on-error\" on some CI tests (#3735)\n\n* add scanner-ci machines\r\n\r\n* test appveyor\r\n\r\n* test appveyor\r\n\r\n* update\r\n\r\n* Remove scanner tests from appveyor\r\n\r\n* change matrixes\r\n\r\n* change matrixes\r\n\r\n* try to fix\r\n\r\n* try to fix\r\n\r\n* try to fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac96a88c0a76e0a5166c",
    "number": 3732,
    "body": "cryptography removed `register_interface` without changelog nor deperecation notices (quite uncommon from them :/) https://github.com/pyca/cryptography/pull/7234",
    "head_branch": "crypto-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Disable scanner tests in ./run_tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac97a88c0a76e0a5166d",
    "number": 3730,
    "body": "@gpotter2 @guedou \r\nThis PR is a PoC to remove the fake layers in automotive protocols without losing the advantages.\r\n\r\nHere are some examples:\r\n\r\nBefore:\r\n```python\r\npkt = UDS()/UDS_RDBI(identifiers=[3])\r\nprint(repr(pkt))\r\n>>> <UDS  service=ReadDataByIdentifier |<UDS_RDBI  identifiers=[0x3] |>>\r\n```\r\n\r\nNow:\r\n```python\r\npkt = UdsRdbi(identifiers=[3])\r\nprint(repr(pkt))\r\n>>> <UdsRdbi  identifiers=[0x3] |>\r\n```\r\n\r\nBefore:\r\n```python\r\npkt = UDS()/UDS_RDBIPR()/Payload3(ip=\"127.0.0.1\")\r\nprint(repr(pkt))\r\n>>> <UDS  service=ReadDataByIdentifierPositiveResponse |<UDS_RDBIPR  |<Payload3  ip=127.0.0.1 |>>>\r\n```\r\n\r\nNow:\r\n```python\r\nclass Payload3(Packet):\r\n    fields_desc = [\r\n        IPField(\"ip\", 0),\r\n        IPField(\"mask\", 1)\r\n    ]\r\n\r\nUdsRdbiPr.bind_data_record(Payload3, 0x3)\r\n\r\npkt = UdsRdbiPr(dataRecord=Payload3(ip=\"127.0.0.1\")\r\nprint(repr(pkt))\r\n>>> <UdsRdbiPr  dataIdentifier=0x3 dataRecord=<Payload3  ip=127.0.0.1 |> |>\r\n```\r\n\r\nBefore:\r\n```python\r\n>>> pkt = UDS(bytes.fromhex(\"620003c0a8b201fffffc00\"))\r\n>>> print(repr(pkt))\r\n<UDS  service=ReadDataByIdentifierPositiveResponse |<UDS_RDBIPR  dataIdentifier=0x3 |<Raw  load='\\\\xc0\\\\xa8\\\\xb2\\x01\\\\xff\\\\xff\\\\xfc\\x00' |>>>\r\n```\r\n\r\nNow:\r\n```python\r\n>>> pkt = Uds(bytes.fromhex(\"620003c0a8b201fffffc00\"))\r\n>>> print(repr(pkt))\r\n<UdsRdbiPr  service=ReadDataByIdentifierPositiveResponse dataIdentifier=0x3 dataRecord=<Payload3  ip=192.168.178.1 mask=255.255.252.0 |> |>\r\n```\r\n\r\nIn my opinion, the new implementation is more handy, faster to type and implements the standard in a more accurate way.\r\n\r\nNow the big question is, how could this change (once it's ready) be integrated in Scapy. Currently (in development), I use a different class name (Uds... instead of UDS) for the new layer, but to follow the general patterns of Scapy, the long term goal should be to keep the layer name uppercase. \r\n\r\nWhat do you suggest for getting this new layer implementation into Scapy? \r\nIt will break the existing way of creating UDS packets, which means, some users may need to update their code.\r\n\r\n",
    "head_branch": "uds_new_gen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac98a88c0a76e0a5166e",
    "number": 3729,
    "body": "This PR adds explicit [permissions section](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions) to workflows. This is a security best practice because by default workflows run with [extended set of permissions](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token) (except from `on: pull_request` [from external forks](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/)). By specifying any permission explicitly all others are set to none. By using the principle of least privilege the damage a compromised workflow can do (because of an [injection](https://securitylab.github.com/research/github-actions-untrusted-input/) or compromised third party tool or action) is restricted.\r\nIt is recommended to have [most strict permissions on the top level](https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions) and grant write permissions on [job level](https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs) case by case.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update unittests.yml\n\nSigned-off-by: sashashura <93376818+sashashura@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac99a88c0a76e0a5166f",
    "number": 3728,
    "body": null,
    "head_branch": "disable_isotp_log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Disable isotp_log during unit-tests to reduce CI-load"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac9aa88c0a76e0a51670",
    "number": 3726,
    "body": "- Minor DCE/RPC fixes to support enums on NDR64\r\n- Fix NDRUnion's alignment & length\r\n- fix Utf16 length calculation on DCERPC\r\n- Small fix: `StrLenUtf16` badly calculated the size on NDR, because on NDR unlike everywhere else you store the decoded size != encoded size.\r\n- Add 2 FileFs support for SMB2\r\n\r\nAs a note, NDR is still unused in Scapy (but is in an unreleased project), so unit tests will come later. NDR is slowly starting to work reliably.",
    "head_branch": "buncha-stuff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor DCE/RPC fixes (#3726)\n\n* Support enums on NDR64\r\n\r\n* Add 2 FileFs formats\r\n\r\n* Minor improvements for conformant strings\r\n\r\n* Add DCE/RPC Fault\r\n\r\n* Fix NDRUnionField tag length computation\r\n\r\n* Allow overriding of SMB server auth\r\n\r\n* Add show2() to NDRPacket\r\n\r\n* NTLM: allow stub of BaseKey"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac9ba88c0a76e0a51671",
    "number": 3725,
    "body": "Added CANFD support to CAN and native ISOTP socket.\r\n",
    "head_branch": "CANFD_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac9ba88c0a76e0a51672",
    "number": 3723,
    "body": "Bunch of more SMB2 stuff:\r\n- Tree disconnect req/res\r\n- Minor bug fix in `FileIdBothDirectoryInformation` next's field\r\n- Support for a bunch more FSCC query packets",
    "head_branch": "smb2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow debug param"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac9ca88c0a76e0a51673",
    "number": 3720,
    "body": "It appears I didn't commit this file's deletion :p \r\nThis is replaced by https://github.com/secdev/scapy/blob/master/scapy/layers/dcerpc.py",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove legacy file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac9da88c0a76e0a51674",
    "number": 3719,
    "body": null,
    "head_branch": "fix_spell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix spellcheck"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac9ea88c0a76e0a51675",
    "number": 3718,
    "body": null,
    "head_branch": "isotp_scan_stop_event",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add stop event to isotp scanner to trigger async stop"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fac9fa88c0a76e0a51676",
    "number": 3717,
    "body": null,
    "head_branch": "bugfix_uds_scanner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix division by zero bug in automotive scanners"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca0a88c0a76e0a51677",
    "number": 3716,
    "body": "This PR is an attempt at automatically testing Scapy on *BSD. These unit tests will only be triggered when a PR is labelled with specific labels (i.e `ci/bsd`, `ci/freebsd`...)",
    "head_branch": "ga_bsd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca0a88c0a76e0a51678",
    "number": 3715,
    "body": "This fixes two major usability issues with the existing code:\r\n1) Parsing of Bind messages\r\n2) Proper reassembly of multi-packet message groups\r\n\r\nAdditionally, it makes minor changes to some of the existing code\r\nthat was causing bad parsing on real server traffic mostly focused\r\non length/count calculations.\r\n\r\nKnown bugs:\r\n\r\n- This may error out on asynchronous server-generated messages\r\n    (e.g. NoticeResponse & NotificationResponse) because of the\r\n    simplified logic in `tcp_reassemble`.  I did not have any examples\r\n    of this happening in real traces, so did not address at this time.\r\n\r\n- Does not handle FunctionCall messages.  This was not implemented\r\n    in the original code (commented out as a \"TODO\") but now it is\r\n    replaced with a \"_Todo\" packet that allows parsing to continue for\r\n    other messages in the stream (message packets follow a consistent\r\n    TLV format).\r\n",
    "head_branch": "dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve parsing for scapy.contrib.postgres (#3715)\n\n* Improve parsing for scapy.contrib.postgres\r\n\r\nThis fixes two major usability issues with the existing code:\r\n1) Parsing of Bind messages\r\n2) Proper reassembly of multi-packet message groups\r\n\r\nAdditionally, it makes minor changes to some of the existing code\r\nthat was causing bad parsing on real server traffic mostly focused\r\non length/count calculations.\r\n\r\nKnown bugs:\r\n- This may error out on asynchronous server-generated messages\r\n    (e.g. NoticeResponse & NotificationResponse) because of the\r\n    simplified logic in `tcp_reassemble`.\r\n- Does not handle FunctionCall messages.  This was not implemented\r\n    in the original code but now it is replaced with a \"_Todo\"\r\n    packet that allows parsing to continue for other messages in\r\n    the stream (message packets follow a consistent TLV format).\r\n\r\n* Address code review feedback\r\n\r\n- Update conditional in `tcp_reassemble` functions\r\n- Add test that covers `Bind` and `Parse` classes\r\n\r\nCo-authored-by: John E. Rollinson <john.rollinson@westpoint.edu>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca1a88c0a76e0a51679",
    "number": 3714,
    "body": "This PR adds:\r\n- an async stop function for automotive scanners\r\n- cleans up warning and scapy logs in automotive / isotp layers",
    "head_branch": "uds_scanner_stop_event",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add stop event to automotive scanners to trigger async stop (#3714)\n\n* Minor cleanups of Automotive Scanner\r\n\r\n* fix flake\r\n\r\n* Add stop event to automotive scanners to trigger async stop\r\n\r\n* Add stop event to automotive scanners to trigger async stop\r\n\r\n* Fix ChainCC in isotpScan\r\n\r\n* Add stop event to automotive scanners to trigger async stop\r\n\r\n* isotp_log cleanup\r\n\r\n* Further logging cleanups\r\n\r\n* fix log_isotp\r\n\r\n* fix log_isotp\r\n\r\n* debug gmlan scanner errors on windows\r\n\r\n* fix stupid change"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca2a88c0a76e0a5167a",
    "number": 3711,
    "body": null,
    "head_branch": "fix_flake8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "E275 - Missing whitespace after keyword (#3711)\n\nCo-authored-by: Alexander Aring <alex.aring@gmail.com>\r\nCo-authored-by: Anmol Sarma <me@anmolsarma.in>\r\nCo-authored-by: antoine.torre <torreantoine1@gmail.com>\r\nCo-authored-by: Antoine Vacher <devel@tigre-bleu.net>\r\nCo-authored-by: Arnaud Ebalard <arno@natisbad.org>\r\nCo-authored-by: atlowl <86038305+atlowl@users.noreply.github.com>\r\nCo-authored-by: Brian Bienvenu <brian@bienvenu.id.au>\r\nCo-authored-by: Chris Packham <chris.packham@alliedtelesis.co.nz>\r\nCo-authored-by: CQ <cq674350529@163.com>\r\nCo-authored-by: Daniel Collins <kinap@users.noreply.github.com>\r\nCo-authored-by: Federico Maggi <federico.maggi@gmail.com>\r\nCo-authored-by: Florian Maury <florian.maury@ssi.gouv.fr>\r\nCo-authored-by: _Frky <3105926+Frky@users.noreply.github.com>\r\nCo-authored-by: g-mahieux <37588339+g-mahieux@users.noreply.github.com>\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>\r\nCo-authored-by: Guillaume Valadon <guillaume@valadon.net>\r\nCo-authored-by: Hao Zheng <haozheng10@gmail.com>\r\nCo-authored-by: Haresh Khandelwal <hareshkhandelwal@gmail.com>\r\nCo-authored-by: Harri Hämäläinen <hhamalai@iki.fi>\r\nCo-authored-by: hecke <hecke@naberius.de>\r\nCo-authored-by: Jan Romann <jan.romann@gmail.com>\r\nCo-authored-by: Jan Sebechlebsky <sebechlebskyjan@gmail.com>\r\nCo-authored-by: jdiog0 <43411724+jdiog0@users.noreply.github.com>\r\nCo-authored-by: jockque <38525640+jockque@users.noreply.github.com>\r\nCo-authored-by: Julien Bedel <30991560+JulienBedel@users.noreply.github.com>\r\nCo-authored-by: Keith Scott <kscott@mitre.org>\r\nCo-authored-by: Kfir Gollan <kfir@drivenets.com>\r\nCo-authored-by: Lars Munch <lars@segv.dk>\r\nCo-authored-by: ldp77 <52221370+ldp77@users.noreply.github.com>\r\nCo-authored-by: Leonard Crestez <cdleonard@gmail.com>\r\nCo-authored-by: Marcel Patzlaff <mpatzlaff@benocs.com>\r\nCo-authored-by: Martijn Thé <martijnthe@users.noreply.github.com>\r\nCo-authored-by: Martine Lenders <authmillenon@gmail.com>\r\nCo-authored-by: Michael Farrell <micolous+git@gmail.com>\r\nCo-authored-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>\r\nCo-authored-by: mkaliszan <mkaliszan@benocs.com>\r\nCo-authored-by: mtury <maxence.tury@ssi.gouv.fr>\r\nCo-authored-by: Neale Ranns <nranns@cisco.com>\r\nCo-authored-by: Octavian Toader <Octavian.Toader@belden.com>\r\nCo-authored-by: Peter Eisenlohr <peter@eisenlohr.org>\r\nCo-authored-by: Phil <phil@secdev.org>\r\nCo-authored-by: Pierre Lalet <pierre@droids-corp.org>\r\nCo-authored-by: Pierre Lorinquer <pierre.lorinquer@ssi.gouv.fr>\r\nCo-authored-by: piersoh <42040737+piersoh@users.noreply.github.com>\r\nCo-authored-by: plorinquer <pierre.lorinquer@ssi.gouv.fr>\r\nCo-authored-by: pvinci <pvinci@users.noreply.github.com>\r\nCo-authored-by: Rahul Jadhav <nyrahul@gmail.com>\r\nCo-authored-by: Robin Jarry <robin.jarry@6wind.com>\r\nCo-authored-by: romain-perez <51962832+romain-perez@users.noreply.github.com>\r\nCo-authored-by: rperez <rperez@debian>\r\nCo-authored-by: Sabrina Dubroca <sd@queasysnail.net>\r\nCo-authored-by: Sebastian Baar <sebastian.baar@gmx.de>\r\nCo-authored-by: sebastien mainand <sebastien.mainand@ssi.gouv.fr>\r\nCo-authored-by: smehner1 <smehner1@gmail.com>\r\nCo-authored-by: speakinghedge <hecke@naberius.de>\r\nCo-authored-by: Steven Van Acker <steven@singularity.be>\r\nCo-authored-by: Thomas Faivre <thomas.faivre@6wind.com>\r\nCo-authored-by: Tran Tien Dat <peter.trantiendat@gmail.com>\r\nCo-authored-by: Wael Mahlous <wael.mahlous@gmail.com>\r\nCo-authored-by: waeva <74464394+waeva@users.noreply.github.com>\r\n\r\nCo-authored-by: Alexander Aring <alex.aring@gmail.com>\r\nCo-authored-by: Anmol Sarma <me@anmolsarma.in>\r\nCo-authored-by: antoine.torre <torreantoine1@gmail.com>\r\nCo-authored-by: Antoine Vacher <devel@tigre-bleu.net>\r\nCo-authored-by: Arnaud Ebalard <arno@natisbad.org>\r\nCo-authored-by: atlowl <86038305+atlowl@users.noreply.github.com>\r\nCo-authored-by: Brian Bienvenu <brian@bienvenu.id.au>\r\nCo-authored-by: Chris Packham <chris.packham@alliedtelesis.co.nz>\r\nCo-authored-by: CQ <cq674350529@163.com>\r\nCo-authored-by: Daniel Collins <kinap@users.noreply.github.com>\r\nCo-authored-by: Federico Maggi <federico.maggi@gmail.com>\r\nCo-authored-by: Florian Maury <florian.maury@ssi.gouv.fr>\r\nCo-authored-by: _Frky <3105926+Frky@users.noreply.github.com>\r\nCo-authored-by: g-mahieux <37588339+g-mahieux@users.noreply.github.com>\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>\r\nCo-authored-by: Guillaume Valadon <guillaume@valadon.net>\r\nCo-authored-by: Hao Zheng <haozheng10@gmail.com>\r\nCo-authored-by: Haresh Khandelwal <hareshkhandelwal@gmail.com>\r\nCo-authored-by: Harri Hämäläinen <hhamalai@iki.fi>\r\nCo-authored-by: hecke <hecke@naberius.de>\r\nCo-authored-by: Jan Romann <jan.romann@gmail.com>\r\nCo-authored-by: Jan Sebechlebsky <sebechlebskyjan@gmail.com>\r\nCo-authored-by: jdiog0 <43411724+jdiog0@users.noreply.github.com>\r\nCo-authored-by: jockque <38525640+jockque@users.noreply.github.com>\r\nCo-authored-by: Julien Bedel <30991560+JulienBedel@users.noreply.github.com>\r\nCo-authored-by: Keith Scott <kscott@mitre.org>\r\nCo-authored-by: Kfir Gollan <kfir@drivenets.com>\r\nCo-authored-by: Lars Munch <lars@segv.dk>\r\nCo-authored-by: ldp77 <52221370+ldp77@users.noreply.github.com>\r\nCo-authored-by: Leonard Crestez <cdleonard@gmail.com>\r\nCo-authored-by: Marcel Patzlaff <mpatzlaff@benocs.com>\r\nCo-authored-by: Martijn Thé <martijnthe@users.noreply.github.com>\r\nCo-authored-by: Martine Lenders <authmillenon@gmail.com>\r\nCo-authored-by: Michael Farrell <micolous+git@gmail.com>\r\nCo-authored-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>\r\nCo-authored-by: mkaliszan <mkaliszan@benocs.com>\r\nCo-authored-by: mtury <maxence.tury@ssi.gouv.fr>\r\nCo-authored-by: Neale Ranns <nranns@cisco.com>\r\nCo-authored-by: Octavian Toader <Octavian.Toader@belden.com>\r\nCo-authored-by: Peter Eisenlohr <peter@eisenlohr.org>\r\nCo-authored-by: Phil <phil@secdev.org>\r\nCo-authored-by: Pierre Lalet <pierre@droids-corp.org>\r\nCo-authored-by: Pierre Lorinquer <pierre.lorinquer@ssi.gouv.fr>\r\nCo-authored-by: piersoh <42040737+piersoh@users.noreply.github.com>\r\nCo-authored-by: pvinci <pvinci@users.noreply.github.com>\r\nCo-authored-by: Rahul Jadhav <nyrahul@gmail.com>\r\nCo-authored-by: Robin Jarry <robin.jarry@6wind.com>\r\nCo-authored-by: romain-perez <51962832+romain-perez@users.noreply.github.com>\r\nCo-authored-by: rperez <rperez@debian>\r\nCo-authored-by: Sabrina Dubroca <sd@queasysnail.net>\r\nCo-authored-by: Sebastian Baar <sebastian.baar@gmx.de>\r\nCo-authored-by: sebastien mainand <sebastien.mainand@ssi.gouv.fr>\r\nCo-authored-by: smehner1 <smehner1@gmail.com>\r\nCo-authored-by: Steven Van Acker <steven@singularity.be>\r\nCo-authored-by: Thomas Faivre <thomas.faivre@6wind.com>\r\nCo-authored-by: Tran Tien Dat <peter.trantiendat@gmail.com>\r\nCo-authored-by: Wael Mahlous <wael.mahlous@gmail.com>\r\nCo-authored-by: waeva <74464394+waeva@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca3a88c0a76e0a5167b",
    "number": 3710,
    "body": "The added test should make the reason of this change clear: for now, the `.qname` returned values differ between crafted and captured packets.\r\n\r\nNow the `.qname` attribute always shows the final empty label (or final \".\").\r\n\r\nReported by @Frky\r\n",
    "head_branch": "fix-dns-labels",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a final empty label (.) on DNS strings (#3710)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca4a88c0a76e0a5167c",
    "number": 3709,
    "body": "- Added basic support for `Binding` method of STUN ([RFC 8489](https://www.rfc-editor.org/rfc/rfc8489.html#section-14.7)).\r\n- Added attributes:\r\n  - `USERNAME`\r\n  - `MESSAGE-INTEGRITY`\r\n  - `XOR-MAPPED-ADDRESS`\r\n  - `USE-CANDIDATE`\r\n  - `PRIORITY`\r\n  - `FINGERPRINT`\r\n  - `ICE-CONTROLLING`\r\n  - `GOOG-NETWORK-INFO`",
    "head_branch": "STUN",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add STUN Support (#3709)\n\n* STUN Binding method packets\r\n\r\n* STUN: XOR'ed ip:port in XOR-MAPPED-ADDRESS\r\n\r\n* Cleanup && MAGIC_COOKIE added && Other minor fixes\r\n\r\n* Added review suggestions\r\n\r\n    - use `cls` in `dispatch_hook` instead of string.\r\n\r\n* Fix linter errors\r\n\r\n* Remove f-string for python2.7 compatibility. Fix E501\r\n\r\n* replaced (from|to)_bytes with struct for python2\r\n\r\n* Proper RFC number"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca5a88c0a76e0a5167d",
    "number": 3704,
    "body": "Simply updated `dnstypes` with the current list at https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4. 63, 64, 65, 259 and 260 are added. I happened to come across one of these when parsing packets with scapy.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add new DNS resource record types"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca6a88c0a76e0a5167e",
    "number": 3703,
    "body": "Just a refactoring of the debug outputs in the automotive layer.\r\nThis gives better control over logging and doesn't influence the loggers of scapy like log_interactive",
    "head_branch": "uds_scan_log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Automotive Logger for all debug outputs of the automotive layer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca6a88c0a76e0a5167f",
    "number": 3702,
    "body": "This PR aims to simplify GMLAN Scanner unit-tests, since the problem with opening huge amounts of ObjectPipes should be fixed.",
    "head_branch": "gmlan_scanner_simplify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplify GMLAN Scanner tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca7a88c0a76e0a51680",
    "number": 3701,
    "body": "Add individual logger for the isotp layer",
    "head_branch": "log_isotp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add ISOTP logger"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca8a88c0a76e0a51681",
    "number": 3700,
    "body": "added CAN FD option for CAN Socket and ISOTP Socket.",
    "head_branch": "CANFD_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faca9a88c0a76e0a51682",
    "number": 3699,
    "body": "- few doc examples\r\n- fix NBNS node request/response\r\n- add LLMNR answering machine based on the DNS one, therefore slightly modified",
    "head_branch": "nbns",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Answering machines improvements (NBNS/DNS/LLMNR) (#3699)\n\n* Minor NBNS improvements\r\n\r\n* Improve Netbios/LLMNR/DNS answering machines\r\n\r\n* DNS_am: support IPv6\r\n\r\n* More customization of some answering machines"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facaaa88c0a76e0a51683",
    "number": 3698,
    "body": "This PR fixes issues for #3677 ",
    "head_branch": "gmlan_open_pipes_error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add assert to GMLAN Scanner to enforce fast fail on to many open TestSockets\n\nFix bugs in TestSocket\nFix bugs in the AutomotiveScanner execution_time handling\nSimplify test code for UDS_Scanner and reuse ObjectPipes to avoid mass\ncreation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facaba88c0a76e0a51684",
    "number": 3697,
    "body": null,
    "head_branch": "uds_scan_progress",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add progress estimation to Automotive_Scanners (#3697)\n\n* Add progress estimation to Automotive_Scanners\r\n\r\n* fix python2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facaba88c0a76e0a51685",
    "number": 3695,
    "body": null,
    "head_branch": "uds_scanner_type_validation_bugfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix debug output of RMBAEnumerator Unit-Test and lower threshold"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facaca88c0a76e0a51686",
    "number": 3693,
    "body": "Few touches thanks to feedback regarding previous Kerberos work:\r\n- Added much needed documentation\r\n- Added a small AS-REQ/REP client\r\n- Added dissection of PAC in Kerberos tickets\r\n- Added fallback to `crypto` if `Cryptodome` isn't found to ease compatibility\r\n\r\nOther bugs fixes:\r\n- properly add `.parent` on build too\r\n- fix ASN.1 build for implicit_tag with a hidden_tag\r\n- fix `.command()` for lists, especially in ASN.1 packets",
    "head_branch": "krb-tcp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Kerberos: documentation + various fixes + demo (#3693)\n\n* MS-PAC, more key usage numbers\r\n\r\n* Properly document Kerberos\r\n\r\n* Fix command() for lists\r\n\r\n* More doc, examples, Kerberos AS client\r\n\r\n* Python 2.7 fix\r\n\r\n* Add great schema"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facada88c0a76e0a51687",
    "number": 3692,
    "body": "Using RawVal with certain field types, e.g. FixedPointField,\r\nfails with a TypeError like the one below:\r\n\r\n```\r\n>>> NTP(orig=RawVal(b\"\\xe6}gt\\x00\\x00\\x00\\x00\"))\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nFile /home/user/.local/lib/python3.8/site-packages/IPython/core/formatters.py:707, in PlainTextFormatter.__call__(self, obj)\r\n    700 stream = StringIO()\r\n    701 printer = pretty.RepresentationPrinter(stream, self.verbose,\r\n    702     self.max_width, self.newline,\r\n    703     max_seq_length=self.max_seq_length,\r\n    704     singleton_pprinters=self.singleton_printers,\r\n    705     type_pprinters=self.type_printers,\r\n    706     deferred_pprinters=self.deferred_printers)\r\n--> 707 printer.pretty(obj)\r\n    708 printer.flush()\r\n    709 return stream.getvalue()\r\n\r\nFile /home/user/.local/lib/python3.8/site-packages/IPython/lib/pretty.py:410, in RepresentationPrinter.pretty(self, obj)\r\n    407                         return meth(obj, self, cycle)\r\n    408                 if cls is not object \\\r\n    409                         and callable(cls.__dict__.get('__repr__')):\r\n--> 410                     return _repr_pprint(obj, self, cycle)\r\n    412     return _default_pprint(obj, self, cycle)\r\n    413 finally:\r\n\r\nFile /home/user/.local/lib/python3.8/site-packages/IPython/lib/pretty.py:778, in _repr_pprint(obj, p, cycle)\r\n    776 \"\"\"A pprint that just redirects to the normal repr function.\"\"\"\r\n    777 # Find newlines and replace them with p.break_()\r\n--> 778 output = repr(obj)\r\n    779 lines = output.splitlines()\r\n    780 with p.group():\r\n\r\nFile /home/user/.local/lib/python3.8/site-packages/scapy/packet.py:533, in Packet.__repr__(self)\r\n    531     if isinstance(fval, (list, dict, set)) and len(fval) == 0:\r\n    532         continue\r\n--> 533     val = f.i2repr(self, fval)\r\n    534 elif f.name in self.overloaded_fields:\r\n    535     fover = self.overloaded_fields[f.name]\r\n\r\nFile /home/user/.local/lib/python3.8/site-packages/scapy/layers/ntp.py:80, in TimeStampField.i2repr(self, pkt, val)\r\n     78 if val is None:\r\n     79     return \"--\"\r\n---> 80 val = self.i2h(pkt, val)\r\n     81 if val < _NTP_BASETIME:\r\n     82     return val\r\n\r\nFile /home/user/.local/lib/python3.8/site-packages/scapy/fields.py:3044, in FixedPointField.i2h(self, pkt, val)\r\n   3041 def i2h(self, pkt, val):\r\n   3042     # type: (Optional[Packet], int) -> EDecimal\r\n   3043     # A bit of trickery to get precise floats\r\n-> 3044     int_part = val >> self.frac_bits\r\n   3045     pw = 2.0**self.frac_bits\r\n   3046     frac_part = EDecimal(val & (1 << self.frac_bits) - 1)\r\n\r\nTypeError: unsupported operand type(s) for >>: 'RawVal' and 'int'\r\n```\r\n\r\nThe root cause is that the field's `any2i()` or `i2h()` methods\r\nmay be expecting a certain value type instead of RawVal. To fix\r\nthis, we check if the value is a RawVal before calling either of\r\nthose methods. Doing this in packet.py saves us from having to do\r\nit in ALL `any2i()` and `i2h()` methods (at least the ones which\r\nfail when given a RawVal).\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests (using `cd test && ./run_tests` or `tox`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nfixes #3691\r\n",
    "head_branch": "fix_issue_3691",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make RawVal work with all field types (fix for issue #3691)\n\nUsing RawVal with certain field types, e.g. FixedPointField,\nfails with a TypeError like the one below:\n\n>>> NTP(orig=RawVal(b\"\\xe6}gt\\x00\\x00\\x00\\x00\"))\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nFile /home/user/.local/lib/python3.8/site-packages/IPython/core/formatters.py:707, in PlainTextFormatter.__call__(self, obj)\n    700 stream = StringIO()\n    701 printer = pretty.RepresentationPrinter(stream, self.verbose,\n    702     self.max_width, self.newline,\n    703     max_seq_length=self.max_seq_length,\n    704     singleton_pprinters=self.singleton_printers,\n    705     type_pprinters=self.type_printers,\n    706     deferred_pprinters=self.deferred_printers)\n--> 707 printer.pretty(obj)\n    708 printer.flush()\n    709 return stream.getvalue()\n\nFile /home/user/.local/lib/python3.8/site-packages/IPython/lib/pretty.py:410, in RepresentationPrinter.pretty(self, obj)\n    407                         return meth(obj, self, cycle)\n    408                 if cls is not object \\\n    409                         and callable(cls.__dict__.get('__repr__')):\n--> 410                     return _repr_pprint(obj, self, cycle)\n    412     return _default_pprint(obj, self, cycle)\n    413 finally:\n\nFile /home/user/.local/lib/python3.8/site-packages/IPython/lib/pretty.py:778, in _repr_pprint(obj, p, cycle)\n    776 \"\"\"A pprint that just redirects to the normal repr function.\"\"\"\n    777 # Find newlines and replace them with p.break_()\n--> 778 output = repr(obj)\n    779 lines = output.splitlines()\n    780 with p.group():\n\nFile /home/user/.local/lib/python3.8/site-packages/scapy/packet.py:533, in Packet.__repr__(self)\n    531     if isinstance(fval, (list, dict, set)) and len(fval) == 0:\n    532         continue\n--> 533     val = f.i2repr(self, fval)\n    534 elif f.name in self.overloaded_fields:\n    535     fover = self.overloaded_fields[f.name]\n\nFile /home/user/.local/lib/python3.8/site-packages/scapy/layers/ntp.py:80, in TimeStampField.i2repr(self, pkt, val)\n     78 if val is None:\n     79     return \"--\"\n---> 80 val = self.i2h(pkt, val)\n     81 if val < _NTP_BASETIME:\n     82     return val\n\nFile /home/user/.local/lib/python3.8/site-packages/scapy/fields.py:3044, in FixedPointField.i2h(self, pkt, val)\n   3041 def i2h(self, pkt, val):\n   3042     # type: (Optional[Packet], int) -> EDecimal\n   3043     # A bit of trickery to get precise floats\n-> 3044     int_part = val >> self.frac_bits\n   3045     pw = 2.0**self.frac_bits\n   3046     frac_part = EDecimal(val & (1 << self.frac_bits) - 1)\n\nTypeError: unsupported operand type(s) for >>: 'RawVal' and 'int'\n\nThe root cause is that the field's `any2i()` or `i2h()` methods\nmay be expecting a certain value type instead of RawVal. To fix\nthis, we check if the value is a RawVal before calling either of\nthose methods. Doing this in packet.py saves us from having to do\nit in ALL `any2i()` and `i2h()` methods (at least the ones which\nfail when given a RawVal)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facaea88c0a76e0a51688",
    "number": 3690,
    "body": "As a child class of TCP_client, new TCP_server automatically completes a TCP handshake when a client connects and is integrated with supersocket. Inspiration was taken from #2409 \r\n\r\nAnything that could be removed due to parent class was removed. States were required to stay due to Automaton design.\r\n\r\nWhile working on this, I found/fixed a bug within TCP_client that would cause the ACK number of a response from data to be wrong when a small amount of data was sent. Padding was being considered in the length for the ack number when it is not in the protocol.\r\n\r\nPart of #399 ",
    "head_branch": "tcp_server",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facafa88c0a76e0a51689",
    "number": 3688,
    "body": "Important kerberos update:\r\n- kerberos over TCP, reassembly\r\n- add cryptographic utils from RFC3961, based on a modified version of a *previous* impacket's file, that itself a modified version of another implementation (i.e. BSD-2-Clause, compatible with GPL2)\r\n- kerberos FAST (RFC6113)\r\n- handle ancient RFC1964 APPLICATION0 tag\r\n- handle KRB-ERROR with KDC_ERR_PREAUTH_REQUIRED\r\n- add proper PADATA support\r\n- tons of user-friendly improvements (enums...)",
    "head_branch": "krb-tcp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Kerberos update (#3688)\n\n* Kerberos over TCP\r\n\r\n* Kerberos: add FAST & PKCA\r\n\r\n* Many user-friendly improvements\r\n\r\n* RFC3961 crypto\r\n\r\n* Summary, Sessions, Examples, Bugs\r\n\r\n* More tests, _n_fold edge case\r\n\r\n* Ignore potatoe (kerberos tests) from codespell"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb0a88c0a76e0a5168a",
    "number": 3687,
    "body": null,
    "head_branch": "test_sockets_bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve UDS tests stability (#3687)\n\n* Add debug code to investigate #3677\r\n\r\n* fix bug\r\n\r\n* add stronger cleanup\r\n\r\n* speedup unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb1a88c0a76e0a5168b",
    "number": 3686,
    "body": "- Python 3.11 fixes",
    "head_branch": "py311",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not use reserved names as attributes (Python 3.11) (#3686)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb1a88c0a76e0a5168c",
    "number": 3685,
    "body": "Since the package is being test (and works on ) 3.10, it should also have this classifier.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Python 3.10 classifier"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb2a88c0a76e0a5168d",
    "number": 3684,
    "body": "It's been a long time since I've done one of those.\r\n\r\n- Core typing of Windows\r\n- Change the mypy CI to test Linux AND Windows independently\r\n- bunch of fixes everywhere, especially inconsistencies with the use of `NetworkInterface` or `str` in routes, that were sometimes messed up (but it worked because `NetworkInterface` can act as a string for backward compatibility)",
    "head_branch": "mypy-windows",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Hinty] Core typing: windows (#3684)\n\n* Core typing: windows\r\n\r\nCo-authored-by: Pierre <pierre@droids-corp.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb3a88c0a76e0a5168e",
    "number": 3683,
    "body": "Continue the work started by https://github.com/secdev/scapy/pull/3674:\r\n- **Major NDR(64) work**: pointer deferal, proper conformant handling in structures... dissection and build should now work in almost all cases. (I added barebone unit tests and will add more in a future PR: those fields aren't used anywhere in this PR)\r\n- Continue work on DCE/RPC\r\n  - **Sessions** that resolve RPC interfaces / opnums live. I also added tweaked a bit `TCPSession` so that it can work on just a pcap capture with multiple flows.\r\n  - Fix build\r\n  - Cleanups\r\n  - Some more default DCE packets (NAK, More security providers...)\r\n- slight change to `PadField`: `padlen()` now has a `pkt` argument. This was very, very rarely overriden in Scapy\r\n- A few SMB changes:\r\n  - Splits on SMB server and clients\r\n  - few other tweaks, more commands \r\n\r\n\r\nI have pretty cool PoCs that uses this (servers, clients..) among some other (for now) unreleased code.",
    "head_branch": "dcerpc-next",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MS-RPCE] and [MS-SMB] major update (#3683)\n\n* Various fixes regarding DCE/RPC build\r\n\r\n* DCE/RPC sessions\r\n\r\n* Cleanup unused code\r\n\r\n* Add missing GSS_WRAP algo names\r\n\r\n* Add find_dcerpc_interface\r\n\r\n* Split SMB client and server\r\n\r\n* Missing StrFixedLenFieldUtf16\r\n\r\n* Remove unfinished smbserver feature\r\n\r\n* Friendlier getter for SMB2\r\n\r\n* DceRpcNak\r\n\r\n* Improve NDR parsing (a lot)\r\n\r\n* Minor SMB2 improvements\r\n\r\n* BIG NDR refactor + Dissect pointer deferal\r\n\r\n* Build with pointer deferral\r\n\r\n* Small build bugs\r\n\r\n* SMB2 logoff, fix rawToken in SMB standalone\r\n\r\n* Add security providers from MS-RPCE to DCERPC\r\n\r\n* Cleanup ptr_pack of NDRPacketListField\r\n\r\n* Clearer exception in find_dcerpc_interface\r\n\r\n* Add minor_version attribute\r\n\r\n* Fix computation of auth_pad in sec_trailer\r\n\r\n* Fix a WTF bug\r\n\r\n* Compute length for NDR arrays\r\n\r\n* Pass enum to EnumField\r\n\r\n* Match union attributes from response with request\r\n\r\n* Improve SMB server\r\n\r\n* Small bug in pointer deferal dissection\r\n\r\n* Add user-friendly utils\r\n\r\n* Add a few NDR tests\r\n\r\n* More user-friendly improvements\r\n\r\n* Bug: parent not copied in clone_with\r\n\r\n* Build: propagate NDR64 and bug fix\r\n\r\n* Default close response parameters\r\n\r\n* Fix Python 2.7\r\n\r\n* Fix SMB2_Create_Context offset\r\n\r\n* Fix SMB2 create context\r\n\r\n* SMB2: support chain, improvements\r\n\r\n* Fix ioctl error\r\n\r\n* SMB: check computeNTProofStr\r\n\r\n* Fix UTCField default\r\n\r\n* Improve FileId capabilities\r\n\r\n* SMB2: contexts\r\n\r\n* Typos\r\n\r\n* Minor NDRUnion fixes\r\n\r\n* Py2 fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb4a88c0a76e0a5168f",
    "number": 3682,
    "body": null,
    "head_branch": "scanner_type_validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add value validation to automotive scanners (#3682)\n\n* Add value validation to automotive scanners\r\n\r\n* fix mypy,flake\r\n\r\n* fix unit tests\r\n\r\n* fix unit tests\r\n\r\n* fix unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb5a88c0a76e0a51690",
    "number": 3681,
    "body": null,
    "head_branch": "stabilize_testsocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Further stabilizations for automotive scanner tests (#3681)\n\n* Further stabilizations for automotive scanner tests\r\n\r\n* add no error count from the beginning onward\r\n\r\n* close Testsockets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb6a88c0a76e0a51691",
    "number": 3680,
    "body": "MD4 has been marked as \"legacy\" starting from Openssl 3.0, and is therefore inaccessible without some openssl config changes, but we use it to compute NTHashes.\r\n\r\n- add a python implementation\r\n\r\n",
    "head_branch": "md4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add MD4 implementation\n\nWe need this because md4 is gone starting from OpenSSL 3.. yet used in\nNTLM"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb7a88c0a76e0a51692",
    "number": 3679,
    "body": "Continue work on MS-RPCE\r\n\r\n- **MS-RPCE** sessions -> bind DCE/RPC requests and responses together and to their RPC interface\r\n- various improvements to `TCPSession` and `tcp_reassemble` to support passing session data\r\n- detect GSS_Wrap over RPC requests. Encryption/Decryption will come later\r\n- several fixes in DceRpc build\r\n- split SMB client and server",
    "head_branch": "dcerpc-next",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb7a88c0a76e0a51693",
    "number": 3678,
    "body": "I'm actually keeping track of all opened TestSockets during the test. \r\n\r\nThis PR adds an intermediate cleanup (close) of all TestSockets after each testcase.",
    "head_branch": "fix_3667",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix for #3667"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb8a88c0a76e0a51694",
    "number": 3676,
    "body": "Fixes #3673",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix defragmented packet time (#3673) (#3676)\n\nCo-authored-by: Shen Mintao <cx330.shen@autocore.ai>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facb9a88c0a76e0a51695",
    "number": 3675,
    "body": "- RTPS was secretlely not being tested on Python 2\r\n\r\n>:(",
    "head_branch": "rtps2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix RTPS on Python2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facbaa88c0a76e0a51696",
    "number": 3674,
    "body": "This PR adds support for:\r\n- connection oriented DCE/RPC v5 support [(C706)](https://pubs.opengroup.org/onlinepubs/9629399/toc.pdf)\r\n- (basic) [[MS-RPCE]](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rpce/290c38b1-92fe-4229-91e6-4fc376610c15) extensions to C706\r\n- KRB5_GSS ([RFC1964](https://datatracker.ietf.org/doc/html/rfc1964), [RFC4121](https://datatracker.ietf.org/doc/html/rfc4121))\r\n- KRB AP-REQ and AP-REP in Kerberos5\r\n- [NDR/NDR64 fields](https://docs.microsoft.com/en-us/windows/win32/rpc/rpc-ndr-engine) (for RPC). I have unpublished work that uses those\r\n\r\nOther stuff:\r\n- Minor ASN.1 parsing issues\r\n- Re-use `EField` where possible - slight cleanup of existing PNIO_RPC\r\n- Use the names in the spec for dcerpc v4 (not really this PR but whatever)\r\n- begin work of a SMB/DCERPC/NDR with GSSAPI/KERBEROS auth, client (it's all coming together !). Mostly commented out, this will come soon™",
    "head_branch": "dcerpc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MS-RPCE support (#3674)\n\n* Add DCE/RPC\r\n* Add tests to DCERPC5 / PNIO_RPC fixes\r\n* Support for NDR fields in DCERPC\r\n* Fully implement KRB5_GSS\r\n* Support also RFC4121"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facbba88c0a76e0a51697",
    "number": 3672,
    "body": "This PR fixes #3671 ",
    "head_branch": "lsc_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve command help extraction from docstring (#3672)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facbba88c0a76e0a51698",
    "number": 3669,
    "body": "For consistency with black, the other main linter, let's slightly increase the max line length to something that makes more sense (79 is pain)",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Set flake's max-line-length to 88 (black) (#3669)\n\n* Set flake's max-line-length to 88 (black)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facbca88c0a76e0a51699",
    "number": 3668,
    "body": "Quick fix of API-Docs example",
    "head_branch": "docs_fix_uds_scan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix documentation in uds_scan.py (#3668)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facbda88c0a76e0a5169a",
    "number": 3666,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant - I have added a permissively-licensed pcap file from an another project, I hope it is enough.\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`) - haven't. And these instructions are just incorrect.\r\n\r\nAdds USBMon support. It may look somehow alien since I have compiled it from my Kaitai Struct spec into Construct target, then rewritten it into primitives used in Scapy and then there was a long way of fighting with it because Scapy spec DSL is somehow inferior to the one provided by KS. I think that Scapy needs a major version upgrade reducing the gap, and maybe even allowing to use KS-compiled specs by just adding them into a certain dir.\r\n\r\n",
    "head_branch": "usbmon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facbea88c0a76e0a5169b",
    "number": 3665,
    "body": "That's a nice thing to have\r\n\r\n```python\r\nfrom enum import Enum\r\n\r\nclass JUICE(Enum):\r\n    APPLE = 0\r\n    ORANGE = 1\r\n    PINEAPPLE = 2\r\n\r\n\r\nclass Breakfast(Packet):\r\n    fields_desc = [EnumField(\"juice\", 1, JUICE, fmt=\"H\")]\r\n```",
    "head_branch": "py3-enums",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support Python34 Enums in EnumField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facbfa88c0a76e0a5169c",
    "number": 3664,
    "body": "Added `pyproject.toml`\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant - just package building\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`) - not needed\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nMoves the metadata into the declarative config according to `PEP 621`, which is more editable and readable with automatic tools and somewhen in future will allow to forbid `setup.py` as an unjustified potential security threat.\r\n",
    "head_branch": "pyproject.toml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc0a88c0a76e0a5169d",
    "number": 3663,
    "body": "fix https://github.com/secdev/scapy/issues/3631\r\n\r\nI tried to put this code in the place the if would be called the least often, yet work.",
    "head_branch": "sniff-close",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Properly discard close_pipe on socket failure (#3663)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc1a88c0a76e0a5169e",
    "number": 3662,
    "body": "fixes https://github.com/secdev/scapy/issues/3613\r\nfixes https://github.com/secdev/scapy/issues/3609\r\ncloses https://github.com/secdev/scapy/pull/3611",
    "head_branch": "dot11-rsn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix length calculation in Dot11EltRSN (#3662)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc1a88c0a76e0a5169f",
    "number": 3661,
    "body": null,
    "head_branch": "scanner_bugfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor bugfixes in Automotive Scanners (#3661)\n\n* Automotive Scanner minor bugfix\r\n\r\n* remove private property"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc2a88c0a76e0a516a0",
    "number": 3660,
    "body": "@gpotter2 \r\nCould you please merge this PR ASAP, I forgot one line of code. Sorry.",
    "head_branch": "fix_scanner_count",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix count parameter for enumerator (#3660)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc3a88c0a76e0a516a1",
    "number": 3658,
    "body": "Just a minor addition",
    "head_branch": "scanner_count",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add count parameter to enumerators in automotive scanners (#3658)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc4a88c0a76e0a516a2",
    "number": 3657,
    "body": "- Base Kerberos 5 layer (Ticket, AS-REQ, AS-REP, TGS-REQ, TGS-REP, ERROR)\r\n- Support for fields in `ASN1F_SEQUENCE_OF` + better logging to debug ASN.1",
    "head_branch": "kerberos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add basic Kerberos (#3657)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc5a88c0a76e0a516a3",
    "number": 3656,
    "body": null,
    "head_branch": "enh-sctp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support SCTP service names (#3656)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc6a88c0a76e0a516a4",
    "number": 3655,
    "body": "- Adds SPDX License identifiers as discussed in https://github.com/secdev/scapy/issues/3321\r\n- removes all of the repeated GPLv2 headers\r\n\r\n**Now that the format is standard, we can easily tweak it / change it were we to change our minds**\r\n\r\nNotes:\r\n- Quite a bunch of files were licensed under `GPL-2.0-or-later`. Of course we aren't changing that\r\n- Relicensing ldp.py according to https://github.com/secdev/scapy/issues/3478\r\n\r\n**If any of you would like to change one of their old email addresses, now is the time ! Feel free to just tell me and I'll update them**\r\n\r\nfixes https://github.com/secdev/scapy/issues/3321\r\nfixes https://github.com/secdev/scapy/issues/3478\r\n\r\n```bash\r\n$ grep -R GPL-2.0-only | wc -l\r\n264\r\n$ grep -R GPL-2.0-or-later | wc -l\r\n70\r\n$ grep -R GPL-3.0 | wc -l\r\n1\r\n```",
    "head_branch": "spdx-license",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add SPDX License identifiers (#3655)\n\n* Add SPDX License identifiers\r\n\r\n* Relicense `ldp.py` with author consent\r\n\r\nSee https://github.com/secdev/scapy/issues/3478\r\n\r\n* Apply guedou suggestions\r\n\r\n* Relicense someim under GPL2\r\n\r\n* DCE/RPC licensing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc7a88c0a76e0a516a5",
    "number": 3654,
    "body": null,
    "head_branch": "importfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make cryptography import more generic"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc8a88c0a76e0a516a6",
    "number": 3653,
    "body": "- fixed a small bug that lead some rfc-like formats to be wrong:\r\n```\r\n 0                   1                   2                   3\r\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|      CODE     |       ID      |              LEN              |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|      TYPE     |L|M|S|RES|VERSI|          MESSAGE LEN          |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                               |              DATA             |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n\r\n                          Fig. EAP_TTLS        \r\n```",
    "head_branch": "fix-rfc-gen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor fix in rfc-format gen (#3653)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc9a88c0a76e0a516a7",
    "number": 3652,
    "body": "Fixes #3549",
    "head_branch": "fix-3549",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Accept bytearray() instances to create packets (#3652)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facc9a88c0a76e0a516a8",
    "number": 3651,
    "body": "Minor change and cleanup",
    "head_branch": "ecu_state_strings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support strings in EcuState values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faccaa88c0a76e0a516a9",
    "number": 3650,
    "body": "Various fixes to modules with crypto:\r\n- enables **~crypto-advanced** in the tests on all platforms (previously not enabled because of `cryptography` availability):\r\n  - TLS 1.3 had regressed\r\n  - ipsec AES-CCM had regressed\r\n- fix various bugs in IPsec triggered by this change + add support for variable icv_size + ChaCha20Poly1305\r\n- **finally fix the TLS 1.3 notebook** -> new TLS 1.3 data provided by https://tls13.ulfheim.net/\r\n- fix a small bug in the `TLS.dispatch_hook` (-> `TLS13`), that would not be triggered if `rcs` was not commited (but the commit happens in `TLS13`). This was missed because we typically call `TLS13(...)` directly\r\n\r\nfix https://github.com/secdev/scapy/pull/3418\r\nfix https://github.com/secdev/scapy/issues/3416\r\nfix https://github.com/secdev/scapy/issues/3073",
    "head_branch": "tls13-notebook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix IPsec bugs & tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faccba88c0a76e0a516aa",
    "number": 3649,
    "body": "- missing tshark flags (from https://github.com/secdev/scapy/pull/3618)",
    "head_branch": "test-tshark-flag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Missing tshark flag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faccca88c0a76e0a516ab",
    "number": 3648,
    "body": "- use python 3.10 for main tests\r\n\r\nUpdate github workflows:\r\n- `codeql` action is deprecated\r\n- `codecov-action` action was out of support\r\n- update `actions/checkout` and `actions/setup-python` to their latest version\r\n\r\nTests will never finish since this is a workflow update.",
    "head_branch": "workflow-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update python versions in unittests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faccda88c0a76e0a516ac",
    "number": 3646,
    "body": "- fixes OSX tests\r\n- slightly improves startup in released versions of Scapy, by first checking the archived ID",
    "head_branch": "osx-git",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Reorder version detection\n\nFirst check if we are in a git archive, THEN try to call git THEN use\nVERSION"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faccea88c0a76e0a516ad",
    "number": 3645,
    "body": "Since last cryptography's version:\r\n```\r\n/home/gpotter/git/scapy/scapy/layers/ipsec.py:473: CryptographyDeprecationWarning: Blowfish has been deprecated\r\n  cipher=algorithms.Blowfish,\r\n/home/gpotter/git/scapy/scapy/layers/ipsec.py:487: CryptographyDeprecationWarning: CAST5 has been deprecated\r\n  cipher=algorithms.CAST5,\r\n```\r\n\r\nLet's make something future-proof + backward compatible.",
    "head_branch": "crypto-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Also hide cryptography warnings to TLS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faccfa88c0a76e0a516ae",
    "number": 3644,
    "body": "fixes https://github.com/secdev/scapy/issues/3638 by making sure DHCP's random fields stay in-bound",
    "head_branch": "dhcp-rand",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "dhcp: fix some random values (#3644)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faccfa88c0a76e0a516af",
    "number": 3643,
    "body": "This will make Scapy consider ICMP error messages a reply to the packet that caused the error, same as for other protocols (see the corresponding test).",
    "head_branch": "fix-sctp-in-icmp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support SCTP messages in ICMP (#3643)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd0a88c0a76e0a516b0",
    "number": 3642,
    "body": "This PR adds support for multiple listening and sending interfaces for `Automaton`. Its syntax is similar to `sniff`'s syntax:\r\n* when creating new `Automaton` instance, `iface` argument accepts an interface name or a list of interface names;\r\n* `Automaton.my_send` has an optional argument `iface` that specifies an interface or a list of interfaces to send a packet to;\r\n* `ATMT.receive_condition` can access packet's `sniffed_on` field to learn on which interface it was received.\r\n\r\n### Rationale:\r\nSome protocols like ERPS require PDUs to be sent and received on more than one interface. Their state machine logic requires information about the port from which the packet was received.\r\n\r\nThis PR adds support for multiple interface state machines.\r\n\r\nThis PR is related to #3636.\r\n",
    "head_branch": "automation_ifaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd1a88c0a76e0a516b1",
    "number": 3641,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nMakes sendpfast recognize 0 as a valid loop value\r\n\r\nDidn't add unit tests since I didn't find any relevant existing unit tests for sendpfast\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #3640  <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "sendpfast_loop_0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support loop=0 in sendpfast (#3641)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd2a88c0a76e0a516b2",
    "number": 3639,
    "body": "**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nAdds new layer for EAPOL-Key according to IEEE 802.11-2016 standard. \r\nAdditionally, the layer provides helper function for guessing 4-way handshake key number.\r\n\r\nTODO: add key number detection for group as well. Add group tests\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge tests and tweaks with existing EAPOL_KEY class\n\nAdded EAPOL-Key layer according to IEEE 802.11-2016 standard. Layer\nincludes helper function for guessing 4-way handshake key number."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd3a88c0a76e0a516b3",
    "number": 3636,
    "body": "This PR adds two features:\r\n* Add `ATMT.timer` decorator for timers with autoreset\r\n* Add `timer_by_name` method to retrieve timer object by function name. It could be used to reconfigure state machine.\r\n\r\n#### Rationale\r\n\r\n1. Some protocols like ERPS require PDUs to be retransmitted at specified periodicity while waiting for an event or a timer.\r\nCurrent implementation does not allow creating such state machines:\r\n* if trying to use `ATMT.timeout` without `raise`, PDU gets retransmitted only once;\r\n* if trying to use `ATMT.timeout` with `raise` in the same state, other timers get reset.\r\n2. Many protocols have configurable timeouts. If two state machines are running, their instances may require different timeout values. Currently, there's no good way to set timeout values.\r\n\r\nThis PR rewrites timeout logic to allow timers to be reset and to configured in `__init__`.\r\n\r\n#### Note\r\n\r\n`ATMT.timer` and `ATMT.timeout` internally are identical and could be merged together, but leaving them separated makes state machine code clearer.\r\n\r\nfixes #3624\r\n",
    "head_branch": "automaton_timer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ATMT: Add timer with autoreset (#3636)\n\n* Add ATMT.timer decorator for timers with autoreset\n* Allow passing Timer objects to ATMT.timer and ATMT.timeout in order to modify timeouts at runtime\n\nCo-authored-by: Matsievskiy S.V <matsievskiysv@ya.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd4a88c0a76e0a516b4",
    "number": 3635,
    "body": "- just a bit of grep, this should be all the remaining Python2 prints left",
    "head_branch": "doc-print",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Python2 prints in doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd5a88c0a76e0a516b5",
    "number": 3634,
    "body": null,
    "head_branch": "fix_docs_build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix docs CI-build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd6a88c0a76e0a516b6",
    "number": 3633,
    "body": "fix TypeError while building _OptionsField for the HBHOptUnknown of IPv6ExtHdrHopByHop and IPv6ExtHdrDestOpt with autopad=0\r\n\r\nin Python 3.8.10\r\n```\r\nv6Opt = HBHOptUnknown(otype=3, optlen=16, optdata=\"... ...\")\r\npkt = Ether()/IPv6(... ...)/IPv6ExtHdrHopByHop(autopad=0, options=[v6Opt, ])\r\nsendp(pkt, iface=\"eno1\", count=3)\r\n```\r\n\r\nDebug output:\r\n```\r\n  File \"/root/mao/ipv6_detect/scapy/layers/inet6.py\", line 809, in i2m\r\n    return b\"\".join(map(str, x))\r\nTypeError: sequence item 0: expected a bytes-like object, str found\r\n```\r\n\r\nSigned-off-by: Jianwei Mao <maojianwei2012@126.com>\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix TypeError while building _OptionsField in HBHOptUnknown (#3633)\n\n* fix TypeError while building _OptionsField for the HBHOptUnknown of\r\nIPv6ExtHdrHopByHop and IPv6ExtHdrDestOpt with autopad=0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd6a88c0a76e0a516b7",
    "number": 3632,
    "body": null,
    "head_branch": "git_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd7a88c0a76e0a516b8",
    "number": 3628,
    "body": "ipsec.py incorrectly uses the cipher block size to pad ESP for CCM,\r\nCTR and GCM algorithms. These algorithms do not require this\r\npadding, and it can result in packets not being delivered (e.g., MTU\r\nviolations).\r\n\r\nfixes #2322\r\n\r\nReferences:\r\n  CCM: https://datatracker.ietf.org/doc/html/rfc4309#section-3.2\r\n  CTR: https://datatracker.ietf.org/doc/html/rfc3686#section-2.3\r\n  GCM: https://datatracker.ietf.org/doc/html/rfc4106#section-3.2\r\n\r\nSigned-off-by: Christian Hopps <chopps@labn.net>\r\n",
    "head_branch": "chopps/fixblocksize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix required block size for CCM, CTR and GCM\n\nipsec.py incorrectly uses the cipher block size to pad ESP for CCM,\nCTR and GCM algorithms. These algorithms do not require this\npadding, and it can result in packets not being delivered (e.g., MTU\nviolations).\n\nfixes #2322\n\nReferences:\n  CCM: https://datatracker.ietf.org/doc/html/rfc4309#section-3.2\n  CTR: https://datatracker.ietf.org/doc/html/rfc3686#section-2.3\n  GCM: https://datatracker.ietf.org/doc/html/rfc4106#section-3.2\n\nSigned-off-by: Christian Hopps <chopps@labn.net>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd8a88c0a76e0a516b9",
    "number": 3622,
    "body": "Add `RadiusAttr_Acct_Status_Type`, `RadiusAttr_Acct_Authentic` and\r\n`RadiusAttr_Acct_Terminate_Cause` to scapy/layers/radius.py. The field\r\nvalues are already in `_radius_attrs_values`, only the the corresponding\r\nclasses were missing.\r\n",
    "head_branch": "radiusattrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add classes for the missing RFC 2866 RADIUS attributes\n\nAdd RadiusAttr_Acct_Status_Type, RadiusAttr_Acct_Authentic and\nRadiusAttr_Acct_Terminate_Cause to scapy/layers/radius.py. The field\nvalues are already in _radius_attrs_values, only the the corresponding\nclasses were missing."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facd9a88c0a76e0a516ba",
    "number": 3621,
    "body": "The current IKEv2 implementation in contrib is working fine but lacking some constants.\r\n\r\nI have added some IKEv2 attributes for algorithms that are unkown in this implementation. All algorithms are registered with [IANA](https://www.iana.org/assignments/ikev2-parameters/ikev2-parameters.xhtml) so they should probably be here. I presume the IDs have been assigned after this was written which is why it's missing.\r\n\r\nI tried to follow the current naming convention where it differs from the IANA assigned names.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add new IKEv2 parameters (#3621)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facdaa88c0a76e0a516bb",
    "number": 3620,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nDo not attempt to create sockets from `None` in `Automaton`. This allows to run [automaton example](https://scapy.readthedocs.io/en/latest/advanced_usage.html#first-example) without errors.\r\n\r\nfixes #3619",
    "head_branch": "auto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facdba88c0a76e0a516bc",
    "number": 3618,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThis PR adds Generic Attribute Registration Protocol (GARP) and two of its payloads: GARP VLAN Registration Protocol (GVRP) and GARP Multiple Registration Protocol (GMRP).\r\n\r\nThis PR depends on #3614.",
    "head_branch": "gxrp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3618 from matsievskiysv/gxrp\n\nAdd GARP, GVRP and GMRP protocols"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facdba88c0a76e0a516bd",
    "number": 3616,
    "body": "This PR fixes #3572 ",
    "head_branch": "issue_3572",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adjust MQTTPublish when underlayer is QOS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facdca88c0a76e0a516be",
    "number": 3615,
    "body": "The UDS-Scanner unit tests sometimes fail because of an internal error in the underlying `ObjectPipe`. \r\nApparently, Windows is silently closing the notification file used in `ObjectPipe` during the unit test. \r\n\r\nThis PR is a patch to recreate a new `TestSocket` aka. `ObjectPipe` once this error appears. \r\n\r\nThis PR should stabilize the UDS and GMLAN Scanner unit tests. \r\n\r\n\r\n\r\n```\r\n[i] Start execution of enumerator: Wed May 18 17:47:48 2022\r\nException in thread Thread-2777:\r\nTraceback (most recent call last):\r\n  File \"C:\\Python37-x64\\lib\\threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Python37-x64\\lib\\threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\projects\\scapy\\scapy\\ansmachine.py\", line 202, in __call__\r\n    self.sniff()\r\n  File \"C:\\projects\\scapy\\scapy\\ansmachine.py\", line 208, in sniff\r\n    sniff(**self.optsniff)\r\n  File \"C:\\projects\\scapy\\scapy\\sendrecv.py\", line 1310, in sniff\r\n    sniffer._run(*args, **kwargs)\r\n  File \"C:\\projects\\scapy\\scapy\\sendrecv.py\", line 1257, in _run\r\n    session.on_packet_received(p)\r\n  File \"C:\\projects\\scapy\\scapy\\sessions.py\", line 106, in on_packet_received\r\n    result = self.prn(pkt)\r\n  File \"C:\\projects\\scapy\\scapy\\ansmachine.py\", line 181, in reply\r\n    self.send_reply(reply)\r\n  File \"C:\\projects\\scapy\\scapy\\contrib\\automotive\\ecu.py\", line 712, in send_reply\r\n    self._main_socket.send(p)\r\n  File \"C:\\projects\\scapy\\test\\testsocket.py\", line 69, in send\r\n    super(TestSocket, r).send(sx)  # type: ignore\r\n  File \"C:\\projects\\scapy\\scapy\\automaton.py\", line 183, in send\r\n    os.write(self.__wr, b\"X\")\r\nOSError: [Errno 9] Bad file descriptor\r\n```",
    "head_branch": "appveyor_scanner_stabilize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Stabilize UDS_Scanner unit tests for appveyor (#3615)\n\n* Different approach\n\n* add event\n\n* fix test\n\n* cleanup\n\n* cleanup\n\n* lower timeout of GMLAN Scanner\n\n* apply feedback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facdda88c0a76e0a516bf",
    "number": 3614,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThis is a continuation of #3607. This PR moves parent initialization earlier, so that `parent` would be available in `guess_payload_class` function, and adds tests for `PacketListField` and `_PacketField` cases.\r\n\r\n",
    "head_branch": "underlayer_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make parent available in guess_payload_class (#3614)\n\nCo-authored-by: Sergey Matsievskiy <matsievskiy@fastwel.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facdea88c0a76e0a516c0",
    "number": 3612,
    "body": "- Type `arch/libpcap.py`\r\n- bunch of fixes: inconsistencies in `promisc` default parameters, use of `pcap_inject` instead of `pcap_sendpacket`...",
    "head_branch": "mypy-libpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Core typing: arch/libpcap.py (#3612)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facdfa88c0a76e0a516c1",
    "number": 3611,
    "body": "Issue-3609 , Rename Deauthentification to Deauthentication. ",
    "head_branch": "scapy-3609_typo_issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face0a88c0a76e0a516c2",
    "number": 3610,
    "body": "- add missing `_interface_selection` to `sr()`\r\n- Re-use `sr()` in `sr1()`\r\n\r\nfixes https://github.com/secdev/scapy/issues/3583",
    "head_branch": "cln-sr1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup sr1() (#3610)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face1a88c0a76e0a516c3",
    "number": 3608,
    "body": "fixes https://github.com/secdev/scapy/issues/3582",
    "head_branch": "doclean",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor doc cleanups (#3608)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face1a88c0a76e0a516c4",
    "number": 3607,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThis trivial PR adds the current packet as an underlayer to all packets in PacketListField, providing a way to reference lower protocol layers from the packet object. This is particularly useful for implementation of guess_payload_class method for the elements of PacketListField.\r\n",
    "head_branch": "underlayer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add parent field to Packet (#3607)\n\nCo-authored-by: Sergey Matsievskiy <matsievskiy@fastwel.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face2a88c0a76e0a516c5",
    "number": 3606,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nThis trivial PR adds the current packet as an `underlayer` to all packets in `PacketListField`, providing a way to reference lower protocol layers from the packet object. This is particularly useful for implementation of `guess_payload_class` method for the elements of `PacketListField`.\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n<!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "underlayer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face3a88c0a76e0a516c6",
    "number": 3604,
    "body": null,
    "head_branch": "fix_uds_scan_config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix a minor issue in uds_scan.py on configuration access"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face4a88c0a76e0a516c7",
    "number": 3602,
    "body": "This PR aims to fix `SMB_Server` and `NTLM_Server` classes to be able to run in *standalone* mode. Before this fix, only relay mode is supported.\r\n\r\nThere must be a better way to know the state of the NTLM state machine, but I am not familiar with Automatons in scapy.\r\nI would take any inputs to improve the code.",
    "head_branch": "smbsrv-standalone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SMB Server Standalone (#3602)\n\n* Fix NTLM Server to be able to run in standalone (no relay)\r\n* Fix SMB Server to be able to run in standalone (no relay)\r\n* SMB2 signing\r\n* Continue SMB2 spec & automaton\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face5a88c0a76e0a516c8",
    "number": 3601,
    "body": "\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together (will do once review completed)\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "postgres",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement Postgres line protocol 3.0 (#3601)\n\n* Start on a postgres protocol layer\r\n\r\n* Add more enumerations\r\n\r\n* accept multiple messages in packet\r\n\r\n* Update gitignore\r\n\r\n* Start a data row and description packet desc\r\n\r\n* DataRow\r\n\r\n* rename ready packet. test a pcap\r\n\r\n* data row packet\r\n\r\n* More payload implementations. Added layer bindings\r\n\r\n* Format the file with black\r\n\r\n* Implements DataRow correctly, PasswordMessage and Execute\r\n\r\n* Implement more of the stack and refactor tests into UTS format\r\n\r\n* Remove saved pcap file\r\n\r\n* Make the tag field a constant and change the field len field to have None to correctly assert the field size\r\n\r\n* Correct the padding of queries, correct the error and notice response packets. Formatting\r\n\r\n* Update some of the length fields\r\n\r\n* Fix dynamic packet lengths. Implement CancelRequest, Parse\r\n\r\n* Remove an internal testing script\r\n\r\n* Add imports for test script\r\n\r\n* Python type hints as comments\r\n\r\n* Python 2 compatibility\r\n\r\n* Code quality updates\r\n\r\n* Simpler Python 2/3 compatible byte slicing\r\n\r\n* Implement copy protocol and add tests\r\n\r\n* Format the main module\r\n\r\n* Write a special field for options as dictionary to make it easier to test\r\n\r\n* File formatting\r\n\r\n* Patch flake8 violations\r\n\r\n* SPDX license\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face6a88c0a76e0a516c9",
    "number": 3600,
    "body": "This PR adds the ability to read and write pcapng comments.",
    "head_branch": "pcapng-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pcapng comment option #3600\n\n* Read pcapng comment option\r\n\r\n* Write pcapng comment option\r\n\r\n* Fix bytes comment issue\r\n\r\n* Applying gpotter2 comments\r\n\r\nCo-authored-by: Laurent Laubin <llaubin@quarkslab.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face6a88c0a76e0a516ca",
    "number": 3599,
    "body": "Minor bugfix",
    "head_branch": "fix_nodes_graph",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix bug in computation of nodes inside Graph"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face7a88c0a76e0a516cb",
    "number": 3597,
    "body": "`Pcapreader()` works fine even if the provided `filename` is in PosixPath or WindowsPath type. Fix #3596\r\n\r\nI don't know if this PR requires unit tests. If it does, then please guide me where they can be added.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face8a88c0a76e0a516cc",
    "number": 3595,
    "body": "Just a little bit more test coverage",
    "head_branch": "scanner_testcoverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Increase test-coverage of UDS-Scanner (#3595)\n\n* Increase test-coverage of UDS-Scanner\r\n\r\n* fix python2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661face9a88c0a76e0a516cd",
    "number": 3594,
    "body": "The first patch splits out SlowProtocol from lacp.py to make it available for ESMC.\r\nThe second patch adds the ESMC protocol according to ITU-T G.8264/Y.1364 including unit tests.\r\n",
    "head_branch": "esmc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added ESMC protocol\n\nAdded ESMC protocol accorting to ITU-T G.8264/Y.1364"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faceaa88c0a76e0a516ce",
    "number": 3593,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Changed the hyperlink of Vpython-jupyter (#3593)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faceba88c0a76e0a516cf",
    "number": 3592,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThis PR adds support for CookedLinux v2 format ([DLT_LINUX_SLL2](https://www.tcpdump.org/linktypes/LINKTYPE_LINUX_SLL2.html)).\r\n\r\nFixes #3591\r\ncloses https://github.com/secdev/scapy/pull/3479",
    "head_branch": "cookedlinux-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for DLT_LINUX_SLL2 capture format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faceca88c0a76e0a516d0",
    "number": 3589,
    "body": "Fixes #3585.",
    "head_branch": "fix-3585",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Str*Field().i2repr() with random / fuzzed values (#3589)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faceda88c0a76e0a516d1",
    "number": 3588,
    "body": "This PR adds a basic pcapng writing support to Scapy.",
    "head_branch": "pcapng_writer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Basic pcapng writing support (#3588)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faceda88c0a76e0a516d2",
    "number": 3587,
    "body": null,
    "head_branch": "gmlan_logging_codecov",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Enhance code coverage of GMLAN logging unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faceea88c0a76e0a516d3",
    "number": 3586,
    "body": "Github doesn't support unauthenticated clones anymore, making the original command for installing scapy using git fail. This commit changes the URL to the HTTPS version.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3586 from Tijs-B/patch-1\n\nIssue template: change pip install url to https"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facefa88c0a76e0a516d4",
    "number": 3580,
    "body": "Hey there!\r\nI'm improving  #3460 with correct dissection of stacked packets and new RTCP types.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf0a88c0a76e0a516d5",
    "number": 3579,
    "body": "Similar to how `cartopy` and `geoip2` are handled, defer import of matplotlib until needed.  \r\n\r\nTesting with `import scapy.packet` \r\n\r\nBefore:\r\n`bdraco           52845   0.0  0.2 409457040  61264 s004  T    10:00AM   0:00.22 /opt/homebrew/Cellar/python@3.9/3.9.10/Frameworks/Python.framework/Versions/3.9/Resources/Python.app/Contents/MacOS/Python`\r\n\r\nAfter:\r\n`bdraco           52900   0.0  0.1 409195664  46368 s004  T    10:01AM   0:00.17 /opt/homebrew/Cellar/python@3.9/3.9.10/Frameworks/Python.framework/Versions/3.9/Resources/Python.app/Contents/MacOS/Python`\r\n\r\nfixes #3578\r\n\r\nmatplotlib has a heavy dep chain\r\n\r\nI did manual testing to make sure I could still generate images when `matplotlib` installed, and verified the warning at `-H` startup still works when its not",
    "head_branch": "matplotlib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Defer import of matplotlib until needed (#3579)\n\n* Defer import of matplotlib until needed\r\n\r\nmatplotlib has a heavy dep chain\r\n\r\nFixes #3578\r\n\r\n* relocate\r\n\r\n* pyx relo\r\n\r\n* update docstrings\r\n\r\n* git add file\r\n\r\n* fix typo\r\n\r\n* fix typo\r\n\r\n* naming\r\n\r\n* missed one\r\n\r\n* adjust logging to try to figure out why it fails on py27 windows\r\n\r\n* fix py27 windows\r\n\r\n* unguarded raise\r\n\r\n* try to make py27 happy\r\n\r\n* name collision?\r\n\r\n* tweak\r\n\r\n* rename to avoid name collision"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf1a88c0a76e0a516d6",
    "number": 3576,
    "body": "Fixes #3567\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed issue #3567"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf2a88c0a76e0a516d7",
    "number": 3575,
    "body": "This parameter allows disabling a verification scan. ",
    "head_branch": "isotp_scan_improvement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add additional parameter to isotp-scan (#3575)\n\n* Add additional parameter to isotp-scan\r\n\r\n* fix flake"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf2a88c0a76e0a516d8",
    "number": 3574,
    "body": "- Correct length for UDPPORT Extension header length\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "GTP_UDPPort_ExtensionHeader_wrong_default_length",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[GTP_UDPPort_ExtensionHeader_wrong_default_length]\n\n- Correct length for UDPPORT Extension header length"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf3a88c0a76e0a516d9",
    "number": 3571,
    "body": "This PR disables UDS_RMBAEnumerator unit tests on pypy which take too long to execute\r\n\r\n#3569 This should fix it.\r\n\r\nWe can probably revert #3560 after merging this PR.",
    "head_branch": "fix_pypy2_timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix pypy2 ci-test\n\nThis PR disables UDS_RMBAEnumerator unit tests on pypy which take to long to execute"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf4a88c0a76e0a516da",
    "number": 3570,
    "body": null,
    "head_branch": "arch_typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Typing of arch/solaris.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf5a88c0a76e0a516db",
    "number": 3565,
    "body": "Mirroring Scapy on gitlab to test gitlab-ci: https://gitlab.com/polybassa/scapy_gitlab_ci/-/tree/gitlabci\r\n",
    "head_branch": "gitlabci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor cleanups in CI setup (#3565)\n\n* Add Gitlab-ci.yml\r\n\r\n* cleanup\r\n\r\n* remove gitlab-ci.yml file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf6a88c0a76e0a516dc",
    "number": 3563,
    "body": "- create a `no_debug_dissector` shortcut for tests\r\n- stabilize nmap tests",
    "head_branch": "no-dbg-dissector",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "No-debug-dissector in UTscapy - stabilize (#3563)\n\n* No-debug-dissector in UTScapy - stabilize nmap\r\n\r\n* Disable tox --paralell on windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf6a88c0a76e0a516dd",
    "number": 3562,
    "body": "I wanted to use the compute_icrc function as a part of a task in my job. \r\nI have added the the IPv6 implementation after it was marked under TODO.\r\nI have read the manual on how to implement it and tested.",
    "head_branch": "icrc-support-ipv6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf7a88c0a76e0a516de",
    "number": 3561,
    "body": "Just a few more checks",
    "head_branch": "ecu_state_test_coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Increase test-coverage of EcuState"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf8a88c0a76e0a516df",
    "number": 3560,
    "body": "Sometimes, pypy2 unit tests are failing without an error message. I propose to temporarily disable `tox --parallel` to get the debug log from Github Actions. ",
    "head_branch": "serial_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove tox --parallel to debug pypy2 failing tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facf9a88c0a76e0a516e0",
    "number": 3559,
    "body": "Unfortunately, I can not debug the installation of the OEM version. Therefore, I made a fallback option in the npcap installation file.",
    "head_branch": "appveyor_npcap_fallback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3559 from polybassa/appveyor_npcap_fallback\n\nAdd fallback path for npcap installation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facfaa88c0a76e0a516e1",
    "number": 3558,
    "body": "Unit-tests couldn't be provided since I don't have an environment to simulate HSFZ Socket, yet. This code was tested on real hardware. ",
    "head_branch": "HSFZ_Scan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add utility function to scan for HSFZ endpoints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facfba88c0a76e0a516e2",
    "number": 3557,
    "body": "- debug issue with version check",
    "head_branch": "vercheck",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facfca88c0a76e0a516e3",
    "number": 3556,
    "body": "* Create an mle layer\r\n* Improve the dissection of secured MAC Data packets\r\n* Improve the dissection of secured MAC Beacon packets\r\n* Enable the dissection of Thread beacons\r\n* Improve the dissection of secured MAC Command packets\r\n* Improve the dissection of 6LoWPAN Mesh header fields\r\n* Fix bug in the extraction of the source address of 6LoWPAN packets\r\n* Improve the dissection of 6LoWPAN IPHC header fields\r\n* Fix bug in the 6LoWPAN dispatcher\r\n* Add unit tests",
    "head_branch": "lowpan-enhancements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facfda88c0a76e0a516e4",
    "number": 3552,
    "body": "- Updates `six` to support `Python 3.10` & `Python 3.11`\r\n- moves `six` to `libs/`. It made no sense for it to be in `modules`\r\n- remove some six imports when not needed\r\n\r\nfixes https://github.com/secdev/scapy/issues/3502",
    "head_branch": "update-six",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update six to support Python 3.11"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facfda88c0a76e0a516e5",
    "number": 3551,
    "body": "Just a cleanup",
    "head_branch": "Automotive_Scanner_little_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor refactoring of Automotive-Scanner show functions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facfea88c0a76e0a516e6",
    "number": 3550,
    "body": "`L2Socket` implementation for `arch/linux` uses `self.ins` within `close` method. Which might lead to throwing exception in `SuperSocket.__del__` when `ins` was not setup properly (e.g. when call to `socket.socket` failed). Note that `SuperSocket`'s implementation is quite careful: attributes are only accessed using `getattr`. The PR uses the same approach for overloaded `close` in `L2Socket` class.",
    "head_branch": "fix-l2-socket-close-ins",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "linux/L2Socket close method to check if ins attr exists before using it"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661facffa88c0a76e0a516e7",
    "number": 3546,
    "body": "- attempt at fixing https://github.com/secdev/scapy/issues/3540 and #3121\r\n\r\nUsing `%(describe)` instead of `%d` allows to get the tag version while avoiding the `HEAD` or `refs/...` tags which *should* help this being more consistent, and help us avoid checksum inconsistencies.",
    "head_branch": "gitlog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad00a88c0a76e0a516e8",
    "number": 3544,
    "body": "According to [the TLS Parameters page @ IANA](https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-6), several alert types are missing from `_tls_alert_description` in `tls/record.py`.",
    "head_branch": "missing_alert_types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing alerts in _tls_alert_description."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad01a88c0a76e0a516e9",
    "number": 3542,
    "body": "This PR fixes a typo discovered while experimenting with Scapy.",
    "head_branch": "typo_fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo in \"answser\"."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad01a88c0a76e0a516ea",
    "number": 3541,
    "body": "Fix for Mac computers with Apple silicon (M1). The BPF filter wasn't working, because the definition of the third argument of ioctl was wrong.\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nThis fix is useful for m1 mac users.\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\nThe definition of ioctl in the C library is as follows:\r\n\r\n  int ioctl(int fildes, unsigned long request, ...);\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update core.py\n\nFix for Mac computers with Apple silicon (M1). The BPF filter wasn't working, because the definition of the third argument of ioctl was wrong."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad02a88c0a76e0a516eb",
    "number": 3539,
    "body": "While implementing an option to dump TLSv1.3 keys in NSS Keylog Format from scapy (are you interested in this feature and should I create a PR?), I realized that in the random_bytes field is wrongly parsed.\r\n\r\nI assume this is a copy-paste issue from TLSv1.2, where 4 bytes of the client_random were gmt_unix_time.",
    "head_branch": "bugfix-random-bytes-clienthello",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "TLS1.3: wrong parsing size of random_bytes (#3539)\n\nCo-authored-by: dim0x69 <github@3or.de>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad03a88c0a76e0a516ec",
    "number": 3538,
    "body": "**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nallow custom binding to usb sublayers fixed #3534\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n#3534 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow custom binding to USB (win) #3534 (#3538)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad04a88c0a76e0a516ed",
    "number": 3537,
    "body": "Just a minor fix",
    "head_branch": "bmw_def_cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix BMW specific packet definitions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad05a88c0a76e0a516ee",
    "number": 3536,
    "body": "## Description\r\nThis PR adds functionality to provide support for DHCP option 121 Classless Static Routes as defined in [rfc3442](https://tools.ietf.org/html/rfc3442). I ran into situation that required manipulating this DHCP option and found converting raw binary was tiresome for packets with many routes, so this creates a simpler human usable design.\r\n\r\nThis is done by using a FieldListField, and since rfc3442 defines routes as dynamic length I added a little work to be done to calculate correct number of octets for each route based on prefix. The formatting of the raw bytes is exact to the RFC definition. Also this has been tested in both python2.7 and python3.\r\n\r\n## Usage\r\n```\r\n>>> d = DHCP(options=[('classless_static_routes', [\"1.2.3.4/31:10.11.12.13\", \"169.0.0.0/8:10.0.0.1\"])])\r\n>>> d\r\n<DHCP  options=[classless_static_routes=['1.2.3.4/31:10.11.12.13', '169.0.0.0/8:10.0.0.1']] |>\r\n>>> d.show2()\r\n###[ DHCP options ]### \r\n  options= [classless_static_routes=['1.2.3.0/31:10.11.12.13', '169.0.0.0/8:10.0.0.1']]\r\n\r\n>>> raw(d)\r\n'y\\x0e\\x1f\\x01\\x02\\x03\\n\\x0b\\x0c\\r\\x08\\xa9\\n\\x00\\x00\\x01'\r\n```\r\n\r\n## Regression Test Results\r\n```\r\n% ./run_tests -t scapy/layers/dhcp.uts -F                   \r\n━ UTScapy - Scapy 2.4.5rc1.dev199 - 3.7.10                                               \r\n └ Non-root mode                                                                         \r\n └ Booting scapy...                                                                      \r\n └ Discovering tests files...                                                            \r\n━ Loading: scapy/layers/dhcp.uts                                                         \r\npassed E40548DD 000.00s BOOTP - misc                                                     \r\npassed E3D749AC 000.00s DHCPOptionsField                                                 \r\npassed 17B5E536 000.01s DHCP - build                                                     \r\npassed 09E80597 000.00s DHCP - dissection                                                \r\npassed B1A86CEC 000.00s DHCPOptions                                                      \r\npassed 6694DB0D 000.21s Check that the dhcpd alias is properly defined and documented    \r\nCampaign CRC=A21E97B0 in 000.23s SHA=EB7F6F8E95FA48D5197924BA77403ECDE5C04EA6            \r\nPASSED=6 FAILED=0                                                                        \r\n✓ All campaigns executed. Writing output...                                              \r\n                                                                                         \r\nDHCP regression tests for Scapy                                                          \r\n━ Run at 19:49:43 from [scapy/layers/dhcp.uts] by UTscapy in 0.2255096435546875          \r\n └ Passed=6                                                                              \r\n └ Failed=0                                                                              \r\n                                                                                         \r\n                                                                                         \r\nUTscapy ended successfully                                                               \r\n```\r\n",
    "head_branch": "CSR",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add DHCP option 121: Classless Static Routes (#3536)\n\n* Add DHCP option 121: Classless Static Routes with regression test\r\n\r\n* add type hinting and prevent route_len from being 0\r\n\r\n* use orb instead of struct.unpack\r\n\r\n* prevent bad prefix values, use orb() instead of PY version check\r\n\r\n* print decimal and hex of invalid prefix\r\n\r\n* Cleanup the field\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad06a88c0a76e0a516ef",
    "number": 3535,
    "body": "<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nadd support for BGP protocol's LARGE_COMMUNITY Path Attribute, introduced with RFC 8092 and RFC 8195\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add BGP LARGE_COMMUNITY Path Attribute (#3535)\n\n* add bgp LARGE_COMMUNITY\r\n\r\n* add BGP LARGE_COMMUNITY class tests\r\n\r\n* fix dissecting a whole BGP layer\r\n\r\n* 1. Move and rename class\r\n2. flake8 style fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad06a88c0a76e0a516f0",
    "number": 3533,
    "body": "<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n## Brief description\r\nI detected an \"out-of-order\" TCP segment in the trace, could make the TCPSession stop inmediatly.\r\n\r\n![out_of_order_segment](https://user-images.githubusercontent.com/444620/154520481-07c565d1-0767-4946-82fd-072551042b31.png)\r\n\r\nThe fix is pretty simple, some out of order segments could generate a sequence number < 0, that make the StringBuffer used to collect all the data from the segments raises an error. To prevent it, we just check the seq number is > 0 before to continue with the append of the data.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad07a88c0a76e0a516f1",
    "number": 3532,
    "body": "This provides a convenience function to get security access",
    "head_branch": "uds_sa_standalone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "UDS: add standalone 'get_security_access' function (UDS_SA enumerators)\n\n* Add standalone 'get_security_access' function for UDS_SA enumerators\r\n\r\n* minor enhancment to fix IndexError"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad08a88c0a76e0a516f2",
    "number": 3531,
    "body": "and a minor cleanup of SndRcvHandler documentation\r\n\r\nFixes #3430 ",
    "head_branch": "fix_3430",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "This PR proposes a solution for #3430"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad09a88c0a76e0a516f3",
    "number": 3530,
    "body": "This PR adds an optional field to Diag Message ACK & NACK, called previous message, in code called previous_msg. In Wireshark it looks like this:\r\n![Screenshot from 2022-02-10 22-29-27](https://user-images.githubusercontent.com/12693890/153499647-10612dc7-548c-4397-b48a-8acb56864f77.png)\r\n![Screenshot from 2022-02-10 22-29-52](https://user-images.githubusercontent.com/12693890/153499680-924704cf-5125-4c22-b484-e7d390faca7b.png)\r\nBut in scapy, before this PR, it looks like that:\r\n![Screenshot from 2022-02-10 22-30-24](https://user-images.githubusercontent.com/12693890/153499763-37080c56-6cd7-4141-9c7c-d35323dd66a9.png)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "DoIP: Add previous_msg field to ACK & NACK + expand tests (#3530)\n\n* Add previous_msg field to ACK & NACK + expand tests\r\n\r\n* Add dissection with pcap and raw creation based tests\r\n\r\n* Fix typo in test\r\n\r\nCo-authored-by: Damian Zaręba <damianzrb@zohomail.eu>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad0aa88c0a76e0a516f4",
    "number": 3529,
    "body": "Minor bug fix and increase of test coverage ",
    "head_branch": "isotp_soft_socket_test_coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Increase test-coverage of ISOTPSockets (#3529)\n\n* Increase test-coverage of ISOTPSockets\r\n\r\n* fix flake\r\n\r\n* fix minor bug and improve unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad0ba88c0a76e0a516f5",
    "number": 3528,
    "body": null,
    "head_branch": "gmlan_utils_speedup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Speedup GMLANUtils unit tests (#3528)\n\n* speedup unit tests\r\n\r\n* Speedup GMLAN utils tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad0ba88c0a76e0a516f6",
    "number": 3527,
    "body": "Just a experiment with github actions",
    "head_branch": "test_parallel_tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad0ca88c0a76e0a516f7",
    "number": 3526,
    "body": "Just some minor speedups of unit tests",
    "head_branch": "speedup_scanner_unit_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Speedup GMLAN Scanner tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad0da88c0a76e0a516f8",
    "number": 3525,
    "body": "* Fix choice of hash function when resigning cert\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3525 from bezvan/patch-1\n\nUse current signature hash when resigning cert"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad0ea88c0a76e0a516f9",
    "number": 3524,
    "body": "- updates mypy to 0.931 (from 0.790)\r\n- updates the code / ignores accordingly\r\n- fix tiny mypy issue\r\n\r\ncloses https://github.com/secdev/scapy/pull/3523",
    "head_branch": "mypy-ne",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Mypy version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad0fa88c0a76e0a516fa",
    "number": 3523,
    "body": null,
    "head_branch": "fix_tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad10a88c0a76e0a516fb",
    "number": 3522,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "imports_debug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad10a88c0a76e0a516fc",
    "number": 3521,
    "body": "Still experimenting with imports.uts\r\n",
    "head_branch": "imports_uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactoring imports.uts to remove multiprocessing library"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad11a88c0a76e0a516fd",
    "number": 3520,
    "body": "This PR increases the test-coverage of the UDSScanner and speeds up the execution.\r\n",
    "head_branch": "increase_uds_scanner_coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Increase test-coverage of uds_scanner (#3520)\n\n* Increase test-coverage of uds_scanner"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad12a88c0a76e0a516fe",
    "number": 3517,
    "body": "This PR \r\n- fixes appveyor\r\n- speeds up some automotive tests by removing `send_delay` from EcuAnsweringmachine\r\n- ~Speeds up and stabilizes imports.uts by limiting the files to test the import on to 40 randomly selected files~\r\n- disable imports.uts since I don't know how to fix it",
    "head_branch": "appveyor_debug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Win: fix appveyor tests (#3517)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad13a88c0a76e0a516ff",
    "number": 3513,
    "body": "This reverts commit 65089071da1acf54622df0b4fa7fc7673d47d3cd.\r\n\r\nApparently, this commit broke appveyor. I inspected the error a little bit, and select_objects is broken after this commit.",
    "head_branch": "appveyor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad14a88c0a76e0a51700",
    "number": 3512,
    "body": "Small refactoring and stability improvements of scanner-related CI-Tests",
    "head_branch": "ecu_state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactoring of EcuState (#3512)\n\n* Refactoring of EcuState __contains__ method\n\n* remove parallel tox for debug\n\n* temporary disable imports test\n\n* revert changes\n\n* revert changes\n\n* cleanup\n\n* fix unit test\n\n* only allow one recv error at a time in UnstableSocket\n\n* remove send_delay to speed up unit tests\n\n* fix test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad15a88c0a76e0a51701",
    "number": 3511,
    "body": "fixes #3507",
    "head_branch": "fix_3507",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix #3507 (#3511)\n\n* Fix #3507\n\n* Extended activation type enum\n\n* minor enhancment\n\n* fix unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad16a88c0a76e0a51702",
    "number": 3508,
    "body": "I think its useful to have such a cyclic pattern.",
    "head_branch": "cyclic_pattern",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add CyclicPattern class for generation of payload data (#3508)\n\n* Add CyclicPattern class for generation of payload data\r\n\r\n* minor enhancment\r\n\r\n* fix python2\r\n\r\n* fix python2\r\n\r\n* use six\r\n\r\n* fix flake"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad17a88c0a76e0a51703",
    "number": 3505,
    "body": "These changes fixes below issues:\r\n\r\n- Scapy shows wrong ts_position value and lacks field named \"timestamp unit\" of RadioTap.\r\n- Scapy shows inverted he_data values\r\n- Scapy can't process 802.11ax frames when Radiotap Layer has HE_MU field #3501 \r\n\r\n\r\nfixes #3501",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "RadioTap fixes: ts/HE/RU/lsig + 802.11 subtypes\n\nFixes to some RadioTap fields:\n- timestamp\n- HE\n- RU\n- L-SIG\n\n802.11 new tubtypes:\n- 802.11-2020 Table 9-1\n- 802.11ax-2021 Table 9-1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad17a88c0a76e0a51704",
    "number": 3503,
    "body": "- fixes https://github.com/secdev/scapy/issues/3482\r\n\r\nThis is a dumb issue, for some reason it slipped under my radar that on Windows, INFINITE was 0xFFFFFFFF instead of None like on linux.",
    "head_branch": "fix-high-win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix High CPU Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad18a88c0a76e0a51705",
    "number": 3500,
    "body": "Renamed vendor from ADLINK to Eclipse in the RTPS contribution layer.\r\n",
    "head_branch": "rtps-vendor-name-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad1aa88c0a76e0a51706",
    "number": 3499,
    "body": "This may be my dyslexic moment, but I believe it should read `mbps`, not `mpbs`.\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nThis fixes a minor typo in the documentation (to `mbps` from `mpbs`, for MB per seconds).\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix a typo in the documentation\n\nThis may be my dyslexic moment, but I believe it should read \"mbps\", not \"mpbs\"."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad1ba88c0a76e0a51707",
    "number": 3498,
    "body": null,
    "head_branch": "doip_log_cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup of DoIPSocket. Remove print()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad1ca88c0a76e0a51708",
    "number": 3497,
    "body": "Addition to #3496 \r\n\r\n@guedou I forgot to update the unit test case. The bug was fixed in #3496, but the testcase was not updated. This PR updates the just the testcase.",
    "head_branch": "uds_scanner_minor_cleanup_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor cleanup and stabilization of UDS_Scanner / UDS_SA_XOR_Enumerator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad1ca88c0a76e0a51709",
    "number": 3496,
    "body": "I discovered a unit-test instability of the `UDS_SA_XOR_Enumerator` which let's the unit tests fail with a probability of 0.22%.\r\n\r\nThis PR fixes this instability and cleans up the code a little bit.",
    "head_branch": "uds_scanner_minor_cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix mypy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad1da88c0a76e0a5170a",
    "number": 3495,
    "body": "- uses the new readthedocs config file format\r\n- uses Python 3.9",
    "head_branch": "rtd-conf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update readthedocs config"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad1ea88c0a76e0a5170b",
    "number": 3494,
    "body": "- Greatly improve readability of DHCP fields while retaining backward compatibility\r\n- Improve `dhcp_request` to support both Discovery and Request packets",
    "head_branch": "fancy-dhcp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make DHCP more user-friendly (#3494)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad1fa88c0a76e0a5170c",
    "number": 3492,
    "body": "Add random trailer to filename to avoid permission errors on macOS\r\n",
    "head_branch": "nmap_test_improve",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CI stabilization (#3492)\n\n* nmap test stabilization. Add random trailer to filename to avoid permission errors on macOS\r\n\r\n* add retry_test to 'Test sniffing on multiple sockets'\r\n\r\n* Modify mib regex to please CodeQL"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad20a88c0a76e0a5170d",
    "number": 3491,
    "body": "This PR fixes #3438 ",
    "head_branch": "Issue_#3438",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make IPv6 route checks more flexible"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad21a88c0a76e0a5170e",
    "number": 3490,
    "body": "Fix failing because os.system returns 0, this means success for a shell\r\nprocess but failure for utsscapy.\r\n\r\nAlso check if editcap tool is present first.\r\n\r\nFixes #3489\r\n\r\nSigned-off-by: Leonard Crestez <cdleonard@gmail.com>",
    "head_branch": "fix-issue-3489",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix #3489: test failure on \"pcapng file with a Decryption Secrets Block\"\n\nFix failing because os.system returns 0, this means success for a shell\nprocess but failure for utsscapy.\n\nAlso check if editcap tool is present first.\n\nFixes #3489\n\nSigned-off-by: Leonard Crestez <cdleonard@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad22a88c0a76e0a5170f",
    "number": 3488,
    "body": "In the beginning of the `ISOTPSocket` and `ISOTP(Packet)` development I didn't followed the address naming scheme of the Linux kernel. Therefore I ended up with different names describing the same address.\r\nFor example:\r\n\r\nA socket used `sid`, the packet used `src` and the kernel uses `tx_id` to describe the source (transmit) identifier of an ISOTP message.\r\n\r\nThis PR cleans up these names and adapts the naming scheme of the Linux Kernel Module for both, the ISOTPNativeSocket and the ISOTPSoftSocket.",
    "head_branch": "isotp_param_uniq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Unify ISOTP naming (#3488)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad22a88c0a76e0a51710",
    "number": 3487,
    "body": "This should hopefully fix the past issues with ISOTPSoftSockets. This PR removes a lot of threading in ISOTPSoftSockets. In the past, every socket opened one thread. This code makes use of the TimeoutScheduler to poll for TX and RX. Therefore only one background thread is necessary anymore. \r\n\r\nLook mom, no threads ;-D",
    "head_branch": "isotp_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactoring of ISOTPSoftSockets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad23a88c0a76e0a51711",
    "number": 3485,
    "body": "This PR implements some *basic* NTLM relaying functions & attacks, around the SMB and LDAP protocols\r\n\r\n- `ntlm_relay` function and automatons: highly customizable Automatons\r\n- SMB1/SMB2 relay\r\n  - Support for Signature downgrade\r\n  - Support for SMB2->SMB1 downgrade\r\n  - Support for SMB1Extended->SMB1 downgrade\r\n  - Support for SMB2<->SMB2\r\n- Support for SMB2->LDAP(S) channel binding\r\n\r\n**You'll find a few samples below, please note a fuller version of the doc with more examples is available in `doc/scapy/layers/ntlm.rst`**\r\n\r\n(for all the examples below, we have a `netbios_announce(iface=\"virbr0\")` running in the background to answer all netbios requests, allowing us to access `\\\\SCAPYWASHERE` freely)\r\n\r\n### SMB2 downgrade to SMB1 - relay\r\n```python\r\nntlm_relay(NTLM_SMB_Server, \"192.168.122.4\", NTLM_SMB_Client, iface=\"virbr0\", ALLOW_SMB2=False, server_kwargs={\"REAL_HOSTNAME\":\"WIN1\"})\r\n```\r\n![image](https://user-images.githubusercontent.com/10530980/145581612-897d3d39-b166-46ad-816c-628cf2201300.png)\r\n![image](https://user-images.githubusercontent.com/10530980/145581663-2ab9f541-c8c3-4eb2-ae33-1eeee334cc97.png)\r\n![image](https://user-images.githubusercontent.com/10530980/145581823-d86742f2-44e3-4842-93fb-9c9a68245b9e.png)\r\n![image](https://user-images.githubusercontent.com/10530980/145581859-41119c65-c2e7-4835-8eec-88c9cddea1ce.png)\r\n\r\n### SMB2 <-> SMB2 relay\r\n\r\nWe close the legitimate client as soon as we are authenticated, and run a custom script:\r\n\r\n```python\r\n    ntlm_relay(NTLM_SMB_Server, \"192.168.122.156\", NTLM_SMB_Client, iface=\"virbr0\", server_kwargs={\"ECHO\": False}, client_kwargs={\"REAL_HOSTNAME\": \"WIN1\", \"RUN_SCRIPT\": True})\r\n```\r\n![image](https://user-images.githubusercontent.com/10530980/145584776-a0fa875a-79b4-4e6f-9fe8-7bc648cd8a37.png)\r\n\r\n### SMB2 <-> LDAP channel binding\r\n```python\r\nload_layer(\"ldap\")\r\nntlm_relay(NTLM_SMB_Server, \"192.168.122.156\", NTLM_LDAP_Client, iface=\"virbr0\")\r\n```\r\n![image](https://user-images.githubusercontent.com/10530980/145581017-0fb15a13-8d3f-475d-874d-901503b8b6e8.png)\r\n",
    "head_branch": "ntlmrelay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "NTLM relaying - SMB / LDAP (#3485)\n\n* SMB relay\r\n\r\n* OPC_DA: use new NTLM\r\n\r\n* Rework of NTLM automatas\r\n\r\n* SMB2 implementation\r\n\r\n* LDAP client relay\r\n\r\n* Fix SMB1 share name\r\n\r\n* Document SMB2 IOCTL failure & add RUN_SCRIPT\r\n\r\n* Minor formatting fixes\r\n\r\n* Update NTLM doc\r\n\r\n* Support for LDAPS client\r\n\r\n* Improve NegoEX handling\r\n\r\n* SMB2 close request\r\n\r\n* Reverse engineer NEGOEX-NTLM metadata\r\n\r\n* Implement the two DROP-THE-MIC vulns"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad24a88c0a76e0a51712",
    "number": 3483,
    "body": null,
    "head_branch": "ldapfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix LDAP test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad25a88c0a76e0a51713",
    "number": 3479,
    "body": "see http://www.tcpdump.org/linktypes/LINKTYPE_LINUX_SLL2.html for reference\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad26a88c0a76e0a51714",
    "number": 3477,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes the same problem  as #3365 <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix do_copy() of class ASN1F_field (#3477)\n\n* Fix do_copy() of class ASN1F_field\r\n\r\n* fix mypy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad27a88c0a76e0a51715",
    "number": 3475,
    "body": "Added new proprietary fields that are specific to RTI RTPS implementation. Revised tests accordingly.\r\n\r\nSigned-off-by: Federico Maggi <federico.maggi@gmail.com>",
    "head_branch": "rti-rtps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[RTPS contrib] New RTI proprietary PIDs (#3475)\n\n* [RTPS contrib] New RTI proprietary PIDs\r\n\r\nSigned-off-by: Federico Maggi <federico.maggi@gmail.com>\r\n\r\n* Added GurumNetworks\r\n\r\nSigned-off-by: Federico Maggi <federico.maggi@gmail.com>\r\n\r\n* Sentinel is needed in InlineQoS\r\n\r\nSigned-off-by: Federico Maggi <federico.maggi@gmail.com>\r\n\r\n* This is the right way to implement InlineQoS\r\n\r\nSigned-off-by: Federico Maggi <federico.maggi@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad27a88c0a76e0a51716",
    "number": 3473,
    "body": " Initialize to None instead of 0 so that post_build will set the length\r\n\r\nfixes #3471\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor fix to L2TP length (#3473)\n\nFix length initialization"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad28a88c0a76e0a51717",
    "number": 3470,
    "body": null,
    "head_branch": "uds_scanner_unit_test_speedup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Speedup and fixes for UDS_Scanner unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad29a88c0a76e0a51718",
    "number": 3464,
    "body": "- pretty big cleanup of SMB2 - dissect NTLM requests/responses\r\n- support for SMB2 Support Request/Response",
    "head_branch": "smb2-improve",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3464 from gpotter2/smb2-improve\n\nCleanup SMB2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad2aa88c0a76e0a51719",
    "number": 3463,
    "body": "- attempt at fixing the current CodeQL job failures",
    "head_branch": "codeql-fi",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add required permission to CodeQL action"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad2ba88c0a76e0a5171a",
    "number": 3462,
    "body": "TCPROS is a transport layer for ROS Messages and Services. It uses standard TCP/IP sockets for transporting message data. Inbound connections are received via a TCP Server Socket with a header containing message data type and routing information. This class focuses on capturing the ROS Slave API.\r\n\r\nAn example package is presented below:\r\n\r\n```\r\n    B0 00 00 00 26 00 00 00 63 61 6C 6C 65 72 69 64  ....&...callerid\r\n    3D 2F 72 6F 73 74 6F 70 69 63 5F 38 38 33 30 35  =/rostopic_88305\r\n    5F 31 35 39 31 35 33 38 37 38 37 35 30 31 0A 00  _1591538787501..\r\n    00 00 6C 61 74 63 68 69 6E 67 3D 31 27 00 00 00  ..latching=1'...\r\n    6D 64 35 73 75 6D 3D 39 39 32 63 65 38 61 31 36  md5sum=992ce8a16\r\n    38 37 63 65 63 38 63 38 62 64 38 38 33 65 63 37  87cec8c8bd883ec7\r\n    33 63 61 34 31 64 31 1F 00 00 00 6D 65 73 73 61  3ca41d1....messa\r\n    67 65 5F 64 65 66 69 6E 69 74 69 6F 6E 3D 73 74  ge_definition=st\r\n    72 69 6E 67 20 64 61 74 61 0A 0E 00 00 00 74 6F  ring data.....to\r\n    70 69 63 3D 2F 63 68 61 74 74 65 72 14 00 00 00  pic=/chatter....\r\n    74 79 70 65 3D 73 74 64 5F 6D 73 67 73 2F 53 74  type=std_msgs/St\r\n    72 69 6E 67                                      ring\r\n```",
    "head_branch": "tcpros",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add TCPROS layer to contrib (#3462)\n\n* Add TCPROS layer to contrib\r\n\r\nThe Robot Operating System (ROS) is a framework for robot\r\napplication development which provides modular distributed\r\nsoftware for building a variety of robot applications.\r\n\r\nThis layer allows to dissect ROS's (ROS 1) TCP-based communication\r\nmiddleware.\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Flake8 adjustments\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Fix spell checking\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Remove debug leftovers, group them under conf.debug_dissector\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Remove global nfields, use __slots__\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Remove globals also from TCPROSBody\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Fix global var. leftovers, transform to __slots__\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Simplify license\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Bind TCPROS tests to 11311\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Deal with flake8 issues\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Address codacy issues\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad2ca88c0a76e0a5171b",
    "number": 3461,
    "body": "<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nAdd support for RTCP packets\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #3460 <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "RTCP Support (#3461)\n\n* RTCP Support\r\n\r\n* Moved rtcp.py to scapy/contrib && Added dummy test\r\n\r\n* Added real RTCP Sender report parsing to tests\r\n\r\n* Added SDES parsing\r\n\r\n* Flake8 fixes\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad2da88c0a76e0a5171c",
    "number": 3459,
    "body": "Just an improvement of `fuzz`.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "avoid repeated update of some fields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad2da88c0a76e0a5171d",
    "number": 3457,
    "body": null,
    "head_branch": "dev_job",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add BMW DevJob Enumerator for UDS_Scanner (#3457)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad2ea88c0a76e0a5171e",
    "number": 3456,
    "body": "This is the last non-arch, core file to type.\r\n\r\n- ~~requires https://github.com/secdev/scapy/pull/3443~~",
    "head_branch": "mypy-volatile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Type volatile.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad2fa88c0a76e0a5171f",
    "number": 3454,
    "body": null,
    "head_branch": "remove_left_over_file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove leftover file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad30a88c0a76e0a51720",
    "number": 3453,
    "body": "…achine\r\n\r\nThese changes are necessary for modifications of EcuAnsweringMachines in the near future. ",
    "head_branch": "ecu_answering_machine_private_variables",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change some private variables to protected variables in EcuAnsweringMachine (#3453)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad31a88c0a76e0a51721",
    "number": 3452,
    "body": "…tions. Additionally, fix some minor bugs and add an UnstableTestSocket for deeper testing.\r\n",
    "head_branch": "scanner_doc_improvement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add more documentation for UDS_, GMLAN_, and OBD_Scanner\n\n... execute functions. Additionally, fix some minor bugs and add an UnstableTestSocket for deeper testing."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad32a88c0a76e0a51722",
    "number": 3451,
    "body": "In the docs @ [this page](https://scapy.readthedocs.io/en/latest/layers/http.html), there is a typo in the word answer, spelt incorrectly as \"answser\".",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad32a88c0a76e0a51723",
    "number": 3449,
    "body": "This PR fixes #3433.",
    "head_branch": "Issue_#3433",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make ICMP types with ID & SEQ fiels consistent (#3449)\n\n* Make ICMP types with ID & SEQ fiels consistent\r\n\r\n* Add test\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad33a88c0a76e0a51724",
    "number": 3448,
    "body": "Fix description of `PacketListField`",
    "head_branch": "fouzhe-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update comment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad34a88c0a76e0a51725",
    "number": 3447,
    "body": "This PR implements the request made in #3231. It is a nice example to write generic packets with an easy to use interface.",
    "head_branch": "edns_clientsubnet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "EDNS0 clientsubnet (#3447)\n\n* EDN0 ClientSubnet support\n\n* Fix dispatcher\n\n* EDNS0ClientSubnet unit tests\n\n* Python2 fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad35a88c0a76e0a51726",
    "number": 3446,
    "body": "This PR fixes #3445. It turns out that Scapy currently injects raw BPF filter that are not optimized by libpcap. That is why the filter used by @janus1345 hits the memory limit while tcpcpdump does not.",
    "head_branch": "Issue_#3445",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Retrieve the optimized BPF filter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad36a88c0a76e0a51727",
    "number": 3444,
    "body": "This PR fixes an issue with IDB padding computation.\r\n\r\n@gpotter2 if you are OK with the fix, can we merge it today? I need it for a workshop.",
    "head_branch": "idb_padding_fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix IDB padding computation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad37a88c0a76e0a51728",
    "number": 3443,
    "body": "Types:\r\n- autorun\r\n- as_resolvers",
    "head_branch": "mypy-autorun",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Type as_resolvers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad38a88c0a76e0a51729",
    "number": 3440,
    "body": "[UDS] ADD: more details to SecuredDataTransmission\r\n[UDS] ADD: Authentication Service\r\n[TEST] Add: Basic unit tests for Auth and SDT\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "uds.py: add basic AuthenticationService and more details to SecuredDataTransmission from ISO 14229-1:2020 (#3440)\n\n* [UDS] add AuthenticationService and more details to SecuredDataTransmission from ISO 14229-1:2020\r\n\r\n* UDS: test and fix build with FieldLenField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad38a88c0a76e0a5172a",
    "number": 3436,
    "body": "- show the output of UTscapy",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Display the output of UTscapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad39a88c0a76e0a5172b",
    "number": 3435,
    "body": "Add support for decoding the PDPortDataAdjust, and it's collective\r\nsub-block types.\r\n\r\n",
    "head_branch": "PDPortDataAdjust_change",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add PDPortDataAdjust block support (#3435)\n\nAdd support for decoding the PDPortDataAdjust, and it's collective\r\nsub-block types."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad3aa88c0a76e0a5172c",
    "number": 3432,
    "body": "This is dependent on https://github.com/secdev/scapy/pull/3431 in order to actually run the tests. I've included that commit in this PR but if the latter is merged first this PR will need rebasing.",
    "head_branch": "pnio_iod_read",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pnio iod read (#3432)\n\n* contrib/pnio: Fix tests for PNIO Alarms\r\n\r\nThe PNIO Alarms tests use ProfinetIO but this is defined in\r\nscapy.contrib.pnio which wasn't being imported. Import it now\r\nso the test run instead of erroring out.\r\n\r\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>\r\n\r\n* contrib/pnio: Add IODReadReq and IODReadRes\r\n\r\nSimilar to IODWriteRe{q,s}. Add support for the IODRead.\r\n\r\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad3ba88c0a76e0a5172d",
    "number": 3431,
    "body": "The PNIO Alarms tests use ProfinetIO but this is defined in\r\nscapy.contrib.pnio which wasn't being imported. Import it now\r\nso the test run instead of erroring out.\r\n\r\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>\r\n\r\n",
    "head_branch": "pnio_alarm_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad3ca88c0a76e0a5172e",
    "number": 3429,
    "body": "**requires https://github.com/secdev/scapy/pull/3391**\r\n\r\nThis PR:\r\n- adds typing of `pipetools.py` and `scapypipes.py`\r\n- removes the `convert_to` mechanism. It's not implemented in A SINGLE scapy packet and is super confusing IMHO. No one ever used this in its lifespan so I don't think it will be missed.... I often think we should not have merged https://github.com/secdev/scapy/pull/1913",
    "head_branch": "mypy-pipetool",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Hinty] Core typing: scapy/pipetools.py & scapy/scapypipes.py (#3429)\n\n* Type pipetool & undo cleanup convert_to\r\n\r\n* Type forgotten file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad3da88c0a76e0a5172f",
    "number": 3428,
    "body": "This pr fixes the following warning when using python 3.10.\r\n```\r\nxxx/scapy/volatile.py:215: DeprecationWarning: non-integer arguments to randrange() have been deprecated since Python 3.10 and will be removed in a subsequent version\r\n  return random.randrange(self.min, self.max + 1)\r\n```\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad3da88c0a76e0a51730",
    "number": 3427,
    "body": "According to RFC2460 the payload length in the ipv6 pseudoheader is 32bits. Nobody noticed so far likely because this is only used for computing 16-bit checksum. When computing alternative checksums this makes a difference.\r\n\r\nThis was found while working on TCP-MD5 and TCP-AO support, see #3358",
    "head_branch": "ipv6-pseudoheader-length",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "inet6: Fix PseudoIPv6 uplen being only 16 bits (#3427)\n\n* Add test for PseudoIPv6 specifically\r\n\r\nSigned-off-by: Leonard Crestez <cdleonard@gmail.com>\r\n\r\n* Add test for in6_chksum via build/parse of UDP\r\n\r\nSigned-off-by: Leonard Crestez <cdleonard@gmail.com>\r\n\r\n* inet6: Fix PseudoIPv6 uplen being only 16 bits\r\n\r\nAccording to RFC2460 the payload length in the ipv6 pseudoheader is\r\n32bits. Nobody noticed so far likely because this is only used for\r\ncomputing 16-bit checksum.\r\n\r\nSigned-off-by: Leonard Crestez <cdleonard@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad3ea88c0a76e0a51731",
    "number": 3424,
    "body": "Just a minor documentation fix",
    "head_branch": "isotp_scan_doc_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix name of isotp_scan function in documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad3fa88c0a76e0a51732",
    "number": 3418,
    "body": "Hello\r\n\r\nAdd AEAD algo support for IPSec:\r\n* ChaCha20Poly1305\r\n* AES-GCM\r\n* AES-CCM\r\n\r\nI have done my best to:\r\n- Fix pep8 errors\r\n- Run no regression\r\n- Run ipsec no regression.\r\n\r\nRegards,\r\n",
    "head_branch": "aead_ipsec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad40a88c0a76e0a51733",
    "number": 3417,
    "body": "This PR:\r\n- adds support for LDAP with the following messages:\r\n  - bind/unbind requests & response\r\n  - search request & response",
    "head_branch": "ldap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3417 from gpotter2/ldap\n\nAdd LDAP support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad41a88c0a76e0a51734",
    "number": 3413,
    "body": null,
    "head_branch": "disable-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Dumb: disable tests that failed once"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad42a88c0a76e0a51735",
    "number": 3412,
    "body": "This PR:\r\n- fixes NBNS to properly build and dissect the different packets\r\n- adds a netbios answering machine: ability to registers a network name such as `\\\\COMPUTER` and make it point to any IP",
    "head_branch": "netbios-rework",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "NBNS rework"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad43a88c0a76e0a51736",
    "number": 3410,
    "body": "This PR adds type hints for the `scapy/layers/all.py` and `scapy/layers/clns.py` files. These are pretty common-sense, except for one issue:\r\n\r\nThe type of `_create_cln_pdu` is pretty definitively `Callable[[bytes, Any], Packet]`, being a method that takes in bytes and kwargs and constructs a Packet from them. In most cases, you could feasibly pass this around and pretend it's a `Type[Packet]`, which `bind_bottom_up` requires. However, `bind_bottom_up` accesses a [`payload_guess`](https://github.com/secdev/scapy/blob/master/scapy/packet.py#L1993) property that isn't possible to put on the `_create_cln_pdu` function. I attempted to work around this by writing a subclass of `Packet` that would supply the proper `Type[Packet]` needed, but this proved to be infeasible. I don't know what the best solution for this would be, so I added a TODO about it. I may come back to experiment with alternate solutions in a separate PR.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad44a88c0a76e0a51737",
    "number": 3409,
    "body": "This PR adds support for the pcapng Decryption Secrets Block. It contains TLS keys in the NSS Key Log format.\r\n\r\nIt simplifies decrypting TLS traffic with Scapy:\r\n```python\r\nload_layer(\"tls\")\r\nl = rdpcap(\"test.pcapng\")\r\nl[11]\r\n<Ether  dst=00:00:00:00:00:00 src=00:00:00:00:00:00 type=IPv6 |<IPv6  version=6 tc=0 fl=516520 plen=86 nh=TCP hlim=64 src=::1 dst=::1 |<TCP  sport=58092 dport=https seq=709926787 ack=2260826225 dataofs=8 reserved=0 flags=PA window=512 chksum=0x5e urgptr=0 options=[('NOP', None), ('NOP', None), ('Timestamp', (3708758846, 3708757976))] |<TLS  type=application_data version=TLS 1.2 len=49    [deciphered_len= 25] iv=b'\\xff\\x7fi\\x87\\xe9\\x1f\\x05\\x90' msg=[<TLSApplicationData  data='GET /secret.txt HTTP/1.0\\n' |>] mac=b\"\\xd1\\x01\\xb3t8\\xca;'\\xfcB\\xa3\\x96\\x85\\x15\\xe2\\xd6\" padlen=None |>>>>\r\n```",
    "head_branch": "pcapng_dsb_tls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Close file descriptor\n\nDate:      Sat Oct 16 20:59:26 2021 +0200"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad44a88c0a76e0a51738",
    "number": 3408,
    "body": "Allow parsing unreliable datagram headers. The code adds guess_payload_class\r\nfunctions to find the correct sub-header according to BTH.opcode, and also\r\nautomatic selection of the opcode when possible.\r\n",
    "head_branch": "contrib-roce-deth",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad45a88c0a76e0a51739",
    "number": 3406,
    "body": "- more signature injection\r\n  - inject signatures in Automatons\r\n  - inject fields signatures in Packet classes \r\n- this led to all already invalid field names (containing a space, starting with a number...) in scapy's contrib files to raise an error on build, so I had to fix them\r\n\r\nThis currently works in `help(...)`, ~~but there is sadly a tiny IPython bug preventing the following autocompletions from happening. I have made a PR (over https://github.com/ipython/ipython/pull/13187) . Feel free to upvote it~~. **Works in IPython >= 7.29**\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/137351788-5e617134-c02b-4a4a-91b1-07d5b1cc9ed9.png)\r\n![image](https://user-images.githubusercontent.com/10530980/137352011-121eeca8-5a0d-4057-a091-533d0d2e2669.png)\r\n\r\n",
    "head_branch": "more-injection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "More injection of signatures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad46a88c0a76e0a5173a",
    "number": 3404,
    "body": "@gpotter2 This should finally fix isotp_soft_socket.uts. \r\n\r\nI executed these changes more than 1000 times on my system, without an error. Hope the CI machines behave similar. ",
    "head_branch": "furtherisotpcleanup2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove more buggy tests from isotp_soft_socket.uts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad47a88c0a76e0a5173b",
    "number": 3403,
    "body": "Check this branch for detailed history of this change: https://github.com/phretor/scapy/commits/rtps\r\n\r\n**Disclaimer:** I'm not sure this is the right way to bind layers that are not restricted to a non-fixed port range, so I put a comment. Let me or @vmayoral know if you prefer to enable the \"ugly hack\". All dissection tests pass even now.\r\n\r\n```\r\n# layer binding\r\n# for port in range(7400, 7500):  # very ugly hack :-)\r\n#     bind_layers(UDP, RTPS, dport=port)\r\n#     bind_layers(TCP, RTPS, dport=port)\r\n\r\nbind_layers(UDP, RTPS)\r\nbind_layers(RTPS, RTPSMessage, magic=b\"RTPS\")\r\nbind_layers(RTPS, RTPSMessage, magic=b\"RTPX\")\r\n```\r\n\r\nCo-authored-by: Federico Maggi <fede@maggi.cc>\r\nCo-authored-by:  Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\nSigned-off-by: Federico Maggi <fede@maggi.cc>\r\n",
    "head_branch": "rtps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "RTPS contrib layer (#3403)\n\n* RTPS contrib layer\r\n\r\nCheck this branch for detailed history of this change: https://github.com/phretor/scapy/commits/rtps\r\n\r\nCo-authored-by: Federico Maggi <fede@maggi.cc>\r\nCo-authored-by:  Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\nSigned-off-by: Federico Maggi <fede@maggi.cc>\r\n\r\n* Update scapy/contrib/rtps/pid_types.py\r\n\r\nCo-authored-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Update scapy/contrib/rtps/rtps.py\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>\r\n\r\n* Fixing various flake8 and docs build issues\r\n\r\nSigned-off-by: Federico Maggi <federico@maggi.cc>\r\n\r\n* codespell: endianess ==> endianness\r\n\r\nSigned-off-by: Federico Maggi <federico@maggi.cc>\r\n\r\n* Turn multiple duplicated 'reserved' bit fields into one\r\n\r\nPrevious EndpointFlagsPacket definition led to the following\r\nsyntax warning:\r\n\r\nSyntaxWarning: Packet 'EndpointFlagsPacket' has a duplicated\r\n'reserved' field ! If you are using several ConditionalFields,\r\nhave a look at MultipleTypeField instead! This will become a\r\nSyntaxError in a future version of Scapy.\r\n\r\nThis patch turns the various 'reserved' fields into a single\r\none with length 4 bits.\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Remove duplicated scapy metadata, into __init__.py\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Add RTPS PID type definitions to RTPS default imports\r\n\r\nThis way, scripts don't need to manually import this file\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Define endianness of PIDPacketBase class\r\n\r\nThis leads to packages like PID_BUILTIN_ENDPOINT_QOS\r\nbuilding upon PIDPacketBase to have a proper alignment.\r\n\r\nAdditions to rtps.uts RTPS layer test campaign to test\r\nthis type of bit alignment issues\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Handle else in e_flags to avoid None errors\r\n\r\nCrafting packages directly from raw hex data led to\r\n'contrib/rtps/common_types.py, line 151, in set_endianness\r\nassert self.endianness is not None' type errors.\r\n\r\nBy providing an else and returning FORMAT_BE, we mitigate it\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Fix endianness of parameterId and parameterLength in RTPSParameterIdTypes\r\n\r\nVarious packages inheriting from PIDPacketBase and part of\r\nRTPSParameterIdTypes were using Big Endian incorrectly, when\r\nLittle Endian is what's used by DDS implementations.\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Add Alias's credit in files modified\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* - Replaced `ByteField` with `StrField`\r\n- `_next_cls_cb` is now a plain function\r\n- Test cases updated accordingly\r\n- Removed `types.py`\r\n\r\nSigned-off-by: Federico Maggi <fede@maggi.cc>\r\n\r\n* Fixing flake8 failures + contrib line\r\n\r\nSigned-off-by: Federico Maggi <fede@maggi.cc>\r\n\r\n* Polishing and formatting fixes\r\n\r\nSigned-off-by: Federico Maggi <fede@maggi.cc>\r\n\r\n* - Removed unused classes\r\n- Changed asserts into warnings + defaults\r\n\r\nSigned-off-by: Federico Maggi <fede@maggi.cc>\r\n\r\n* Re-work scapy's preamble\r\n\r\nSigned-off-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\n\r\n* Using longs where applicable\r\n\r\nSigned-off-by: Federico Maggi <federico.maggi@gmail.com>\r\n\r\n* Minor code health fixes\r\n\r\nCo-authored-by: Víctor Mayoral Vilches <v.mayoralv@gmail.com>\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad48a88c0a76e0a5173c",
    "number": 3401,
    "body": "This PR aims to remove more buggy tests from isotp_soft_socket unit tests, to further increase the stability. ",
    "head_branch": "furtherisotpcleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove buggy tests from isotp_soft_socket.uts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad49a88c0a76e0a5173d",
    "number": 3400,
    "body": "Minimal change",
    "head_branch": "xcp_doc_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix code block in automotive documentation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad49a88c0a76e0a5173e",
    "number": 3399,
    "body": "This PR contains several CI improvements. Two are interesting:\r\n- tox parallel mode\r\n- Github actions fail-fast set to False. This will prevent all tests environment to fail when only one does.",
    "head_branch": "ga_fail_libpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Several CI related fixes (#3399)\n\n* Fix UTscapy timeout logs\r\n\r\n* Add doc\r\n\r\n* Set fail-fast to false\r\n\r\n* Linting\r\n\r\n* Use bash substring\r\n\r\n* Install libpcap\r\n\r\n* Run tox in parallel mode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad4aa88c0a76e0a5173f",
    "number": 3397,
    "body": "UTscapy's timeout feature had an issue: `sys.stdout` would be mocked within `scapy.autorun` when the timeout would occur.\r\nThis PR:\r\n- moves the timeout from UTscapy to autorun, so that the `sys.stdout` mock ends when timing out\r\n\r\nfixes https://github.com/secdev/scapy/issues/3376",
    "head_branch": "timeout-utscapy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad4ba88c0a76e0a51740",
    "number": 3396,
    "body": "- a failure during Npcap's installation will now cancel the Appveyor job\r\n- properly detect the error codes during install\r\n- update npcap OEM version",
    "head_branch": "npcap-install-script",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor updates to npcap install script"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad4ca88c0a76e0a51741",
    "number": 3395,
    "body": "This should now be ready for merge.\r\n\r\n**This PR adds**:\r\n- proper timestamps support on BPF (instead of `time.time()`)\r\n- BIOC values are now calculated to make sure they always remain correct whatever the platform\r\n- structures of `bpf_hdr`: use structures instead of hardcoded offsets\r\n- nanosecond precision on FREEBSD (among the various BSDs, it is sadly only available on freebsd)\r\n- various cleanups (promisc values with wrong default...)\r\n\r\n## Tested on the following configurations\r\n\r\n- [x] Test on OSX (CI)\r\n- [x] Test on FreeBSD (VM on HyperV)\r\n- [x] Test on NetBSD (VM on HyperV)\r\n- [ ] Test on OpenBSD\r\n\r\nBy checking that the timestamps are now properly computed:\r\n```python\r\na = sr(IP(dst=\"www.google.com\")/ICMP())[0][0]\r\nprint(a.answer.time - a.query.sent_time)\r\n```",
    "head_branch": "cleanup-bpf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Major BPF improvements\n\nThis adds:\n- timestamps support\n- structures of bpf_hdr\n- nanosecond precision on FREEBSD\n- cleanups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad4da88c0a76e0a51742",
    "number": 3394,
    "body": "- https://github.com/secdev/scapy/pull/3190 but typed + rebased\r\n\r\ncloses https://github.com/secdev/scapy/pull/3190",
    "head_branch": "asn1-generalized-time",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "improved ASN1_{GENERALIZED,UTC}_TIME implementations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad4da88c0a76e0a51743",
    "number": 3393,
    "body": "- same than https://github.com/secdev/scapy/pull/3388 but with a value that exists\r\n\r\n\r\ncloses https://github.com/secdev/scapy/pull/3388",
    "head_branch": "macos-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use macos 10.15"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad4ea88c0a76e0a51744",
    "number": 3392,
    "body": "This PR implements basic functionality for the following:\r\n- SMB 1 (follow the updated spec)\r\n- GSSAPI blobs (ASN.1) with its SPNEGO mechanism\r\n- the 3 basic NTLM packets\r\n\r\nNot really splitable because each layer depends on another. Implementing NTLM on its own would make little sense.\r\nIn order to create an SMB 1 packet that uses NTLM auth.\r\n\r\nOther changes:\r\n- Changes to ASN.1 to bring some parity with common packets (add `underlayer` and `next_cls_cb` to `ASN1F_PACKET`)\r\n- Various changes to some fields (timestamp...)\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/136582128-a48a8598-d376-4962-b108-2a0b7ada7cc9.png)",
    "head_branch": "ntlm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove dumb & broken tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad4fa88c0a76e0a51745",
    "number": 3391,
    "body": "Used ansmachine.py as initial reference, Looked at some other files that I grepped into along the way.\r\n\r\nSome notes taken while adding the hints:\r\nadd_breakpoints() returns None\r\nUnsure of object type that could have fileno() on 609\r\n645 assumed from rd and wr from the above class\r\n\r\nPart of the long series of commits to work towards completion of #2158\r\n\r\nTests fail on my branch, but the error message seems unrelated to the file I changed, and I tried committing just a copy of master and that fails too so I guess it's just some teething issue in master",
    "head_branch": "automaton",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Hinty] Type hinting automaton.py (#3391)\n\n* Type hinting automaton.py\r\n\r\nUsed ansmachine.py as initial reference, grepped into some other files along the way.\r\n\r\nSome notes taken while adding the hints:\r\nadd_breakpoints returns None\r\nUnsure of object type that could have fileno() on 609\r\n645 assumed from rd and wr from the above class\r\n\r\n* Various typing fixes\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad50a88c0a76e0a51746",
    "number": 3388,
    "body": "This PR tries to identify why the current tests fail.",
    "head_branch": "ga_fail_libpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad51a88c0a76e0a51747",
    "number": 3387,
    "body": "Fixes the last open checkbox of #2862 - the contrib.scada.iec104 part.\r\n\r\nThere were some places where multiple information elements (thus fields) were concatenated, e.g. the fields of the `IEC104_IE_SIQ` and the `IEC104_IE_CP56TIME2A` classes. The first one is a SIQ (single point information with quality descriptor) and the second one is a CP56Time2a (basically a timestamp), so the concatenated result could be called a `single-point information with quality descriptor and with time tag cp56time2a`. Both of which contain a field called `iv` leading to the (in this case very correct) warning as this results in multiple fields in a packet to have the same name.\r\n\r\nIn short: There are multiple classes / data types in the standard that include a time tag cp56time2a, thus leading to this warning in many places.\r\n\r\nSo there were two possibilites: Changing all of the classes that use `iv` as their field name or simply rename this field in the cp56time2a time tag field. I chose the latter as this has a smaller impact on existing code. Obviously, code addressing exactly that field will now have to be adjusted accordingly. However, I'm not sure how and if the old code worked anyways as they had exactly the name. So I guess, this change is not too destructive.\r\n\r\nThe same applies for the `reserved` field in the `IEC104_IE_QDP` class that gets concatenated to a number of classes - though, in this case probably noone ever used / addressed the `reserved` field anyways.\r\n\r\nThis MR gets rid of all the syntax warnings (and my code using this part of scapy continues to work - however, I don't use any of the types that make use of these fields). It tries to introduce as few breaking changes as possible (after a thorough investigation, I found that only two of the field names needed to be changed, even though there were dozens of warnings).\r\n\r\nWould be great if this MR would be merged (or if there is some feedback for changes first, I'm happy to hear about it!), because currently using the `scada.iec104` protocol in scapy spams the output with lots of syntax warnings and this reduces them to zero.\r\n\r\n---\r\n\r\nAs a workaround in the meantime, I currently suppress the warnings until this is fixed - if someone is interested:\r\n\r\n```python\r\n# ignore SyntaxWarnings from iec104 modules as they spam the complete log and it's not under our control anyways\r\nimport warnings\r\nwarnings.simplefilter('ignore', SyntaxWarning)\r\nimport scapy.contrib.scada.iec104 as iec104\r\nwarnings.simplefilter('default', SyntaxWarning)  # reset to default behaviour to not miss possible future helpful SyntaxWarnings\r\n```\r\n\r\nfixes #2862",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename duplicate fields for contrib.scada.iec104\n\nFixes the last open checkbox of #2862 - the contrib.scada.iec104 part.\r\n\r\nThere were some places where multiple information elements (thus fields) were concatenated, e.g. the fields of the `IEC104_IE_SIQ` and the `IEC104_IE_CP56TIME2A` classes. The first one is a SIQ (single point information with quality descriptor) and the second one is a CP56Time2a (basically a timestamp), so the concatenated result could be called a `single-point information with quality descriptor and with time tag cp56time2a`. Both of which contain a field called `iv` leading to the (in this case very correct) warning as this results in multiple fields in a packet to have the same name.\r\n\r\nIn short: There are multiple classes / data types in the standard that include a time tag cp56time2a, thus leading to this warning in many places.\r\n\r\nSo there were two possibilites: Changing all of the classes that use `iv` as their field name or simply rename this field in the cp56time2a time tag field. I chose the latter as this has a smaller impact on existing code. Obviously, code addressing exactly that field will now have to be adjusted accordingly. However, I'm not sure how and if the old code worked anyways as they had exactly the name. So I guess, this change is not too destructive.\r\n\r\nThe same applies for the `reserved` field in the `IEC104_IE_QDP` class that gets concatenated to a number of classes - though, in this case probably noone ever used / addressed the `reserved` field anyways.\r\n\r\nThis MR gets rid of all the syntax warnings (and my code using this part of scapy continues to work - however, I don't use any of the types that make use of these fields). It tries to introduce as few breaking changes as possible (after a thorough investigation, I found that only two of the field names needed to be changed, even though there were dozens of warnings).\r\n\r\nWould be great if this MR would be merged (or if there is some feedback for changes first, I'm happy to hear about it!), because currently using the `scada.iec104` protocol in scapy spams the output with lots of syntax warnings and this reduces them to zero.\r\n\r\n---\r\n\r\nAs a workaround in the meantime, I currently suppress the warnings until this is fixed:\r\n\r\n```python\r\n# ignore SyntaxWarnings from iec104 modules as they spam the complete log and it's not under our control anyways\r\nimport warnings\r\nwarnings.simplefilter('ignore', SyntaxWarning)\r\nimport scapy.contrib.scada.iec104 as iec104\r\nwarnings.simplefilter('default', SyntaxWarning)  # reset to default behaviour to not miss possible future helpful SyntaxWarnings\r\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad52a88c0a76e0a51748",
    "number": 3386,
    "body": "Two things in this PR:\r\n- commands generated from answering machines (e.g. `dhcpd`) were not generated because of a misplaced metaclass\r\n- I took that opportunity to inject the signature of the parent's `parse_options` class. See the difference below in IPython\r\n\r\n  - **v2.4.5:**\r\n  ```\r\n  >>> dhcpd\r\n  <function scapy.ansmachine.ReferenceAM.__new__.<locals>.<lambda>(obj=<class 'scapy.layers.dhcp.DHCP_am'>, *args, **kargs)>\r\n  ```\r\n  \r\n  - This PR:\r\n  \r\n  ```\r\n  >>> dhcpd\r\n  <function scapy.ansmachine.dhcpd(self, pool=Net(\"192.168.1.128/25\"), network='192.168.1.0/24', gw='192.168.1.1', domain='localnet', renewal_time=60, lease_time=1800)>\r\n  ```",
    "head_branch": "ansname",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Inject signature in answeringmachine commands"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad53a88c0a76e0a51749",
    "number": 3385,
    "body": "This PR fixes a bug reported on gitter by @brifordwylie that makes Scapy crash when calling:\r\n```\r\nsniff(offline=\"test.pcapng\", prn=lambda x: x.summary(), store=0, filter='ip6')\r\n```\r\n\r\nThe crash is triggered as the `tcpdump()` function does not support getting the linktype from a PcapNg file.",
    "head_branch": "sniff_offline_pcapng_filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Get linktype fron PcapNg"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad53a88c0a76e0a5174a",
    "number": 3384,
    "body": "as discussed in #3380 ",
    "head_branch": "__iterlen__remove",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove __iterlen__ and improve how sent_time is shared (#3384)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad54a88c0a76e0a5174b",
    "number": 3383,
    "body": "Fixes #3380 ",
    "head_branch": "__iterlen__range",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad55a88c0a76e0a5174c",
    "number": 3382,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nI added scapy on [github explore](https://github.com/github/explore) with a logo as mentioned in #399 - easy.\r\nI also added a link to the scapy topic in README.md.\r\n\r\nhere is the PR adding scapy topic to github/explore [PR 2652](https://github.com/github/explore/pull/2652)\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad56a88c0a76e0a5174d",
    "number": 3381,
    "body": "Fixes #3380 \r\nThis PR would fix the behavior of __iterlen__ to be identical on python2 and python3. Also this PR adds support for generator functions for field values which would provide more flexibility for future use-cases. \r\n\r\nI marked this PR as PoC. So if you don't like the idea of having generators for field values, feel free to ignore this PR and #3380. ",
    "head_branch": "__iterlen__fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad57a88c0a76e0a5174e",
    "number": 3379,
    "body": "And remove the execution of interface_mockup from various unit tests\r\nThis makes the tests cleaner and excludes any interference's because of the code previously executed in interface_mockup. Also the TestSocket is typed. \r\n\r\n",
    "head_branch": "add-testsocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add TestSocket as individual file  (#3379)\n\n* Add TestSocket as individual file and remove the execution of interface_mockup from various unit tests\r\n\r\n* add contrib module description\r\n\r\n* add import to isotp_soft_socket.uts\r\n\r\n* add testsocket unit test\r\n\r\n* increase timeouts\r\n\r\n* add print\r\n\r\n* execute testsocket tests first\r\n\r\n* add debug code\r\n\r\n* add further test\r\n\r\n* simplify test\r\n\r\n* Bugfix in sendrecv\r\n\r\n* debug CAN layer unit test\r\n\r\n* try fix of can.uts\r\n\r\n* cleanup\r\n\r\n* increase timeouts\r\n\r\n* increase timeouts\r\n\r\n* cleanup\r\n\r\n* fix test\r\n\r\n* moved testsocket into /test/\r\n\r\n* fix tox\r\n\r\n* add __init__.py\r\n\r\n* fix gmlanutils\r\n\r\n* applied feedback\r\n\r\n* fix testsocket\r\n\r\n* add timeout to join()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad57a88c0a76e0a5174f",
    "number": 3378,
    "body": "In the TimeoutScheduler object of ISOTPSoftSockets, `time.clock()` was used to get a monotonic time value in seconds. I discovered a wrong behavior of this function on Linux with python 2 (my system). This lead to completely wrong timeouts. \r\nFor now, I've changed this function to use time.time(), which is not monotonic, but at least, it behaves as intended. \r\n\r\nSome exception raises were removed inside functions which are called from background tasks, to avoid misbehavior. \r\n\r\nAlso, this PR introduces with to the TestSocket object and simplifies some ISOTPSoftSocket unit tests.  ",
    "head_branch": "isotp-soft-socket-timer-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bugfix in ISOTPSoftSocket timers (#3378)\n\n* add with to TestSocket\r\n\r\n* Bugfix of ISOTPSoftSocket timers on Python 2\r\n\r\n* Cleanup of some ISOTPSoftSocket unit tests\r\n\r\n* applied feedback\r\n\r\n* use join\r\n\r\n* remove blocking recv() calls\r\n\r\n* try to fix test\r\n\r\n* increase timeouts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad58a88c0a76e0a51750",
    "number": 3375,
    "body": "Scapy seams to have some issues with OpenBSD PFLogs.\r\n\r\nThe first one deals with IPv6 packets logged in pflogs packets.\r\nLooking at the source code, I see that \"addrfamily\" is determined calling the socket.AF_INET and socket.AF_INET6 functions.\r\nHowever, if you run socket.AF_INET6 on Linux, the result will be 10, and on OpenBSD, the result will be 24 (just take a look at socket.h on both systems to confirm the difference).\r\nThe first goal of this PR is to fix this issue.\r\n\r\nThe second one deals with the data stored in pflogs packets.\r\nI realized that the \"struct pfloghdr\" changed in OpenBSD source code (cf. if_pflog.h) since Scapy supported it.\r\nSo, I would like to suggest you some improvements in the handling of pflogs packets.\r\nThis is the second goal of this PR.\r\n\r\nFinally, I'm trying to add some meaningful tests for the pflog layer.\r\n",
    "head_branch": "OpenBSD_PFLog_Fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix OpenBSD PFLog Layer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad59a88c0a76e0a51751",
    "number": 3374,
    "body": "This PR adds support for the [NSS Key Log](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Key_Log_Format).\r\n\r\nIt allows Scapy to reuse the keys to decrypt TLS sessions.\r\n\r\nCurrently, it only supports TLS 1.2, but TLS 1.3 is on the road map (it will fix #3073).\r\n\r\nA possible usage is:\r\n```\r\nfrom scapy.all import *\r\n\r\nload_layer(\"tls\")\r\nconf.tls_session_enable = True\r\nconf.tls_nss_filename = \"tls12/s_client.tls12.keys.txt\"\r\nl = rdpcap(\"tls12/s_client.tls12.pcap\")\r\nprint(l.nsummary())\r\n```",
    "head_branch": "tls_nss_log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use a NSS Key Log file to decrypt a TLS session (#3374)\n\n* Use a NSS Key Log file to decrypt a TLS session\r\n\r\n* Decrypting TLS 1.2 using a known master secret\r\n\r\n* Test TLS 1.2 decryption using a NSS Key Log"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad5aa88c0a76e0a51752",
    "number": 3373,
    "body": null,
    "head_branch": "fixISOTPScanDocs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix outdated documentation (#3373)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad5ba88c0a76e0a51753",
    "number": 3372,
    "body": "This PR fixes #2870. Unfortunately, there is currently no other alternative =/",
    "head_branch": "Issue_#2870",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not activate 802.11 monitoring on macOS Catalina and upper"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad5ca88c0a76e0a51754",
    "number": 3371,
    "body": "This PR fixes #3369.",
    "head_branch": "Issue_#3369",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Check if the network interface still exists"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad5da88c0a76e0a51755",
    "number": 3370,
    "body": null,
    "head_branch": "unit_test_cleanup_ISOTPSoftSocket_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor cleanup to stabilize ISOTPSoftSocket unit tests (#3370)\n\n* Minor cleanup to stabilize ISOTPSoftSocket unit tests\r\n\r\n* Fix ISOTPSoftSocket unit tests\r\n\r\n* try to fix test for pypy\r\n\r\n* try to fix test\r\n\r\n* try to fix test\r\n\r\n* try to fix test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad5ea88c0a76e0a51756",
    "number": 3368,
    "body": "fixes https://github.com/secdev/scapy/issues/3291",
    "head_branch": "tls-oscp-pay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix OSCP payload length"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad5ea88c0a76e0a51757",
    "number": 3367,
    "body": "This should help busting out which tests hang.",
    "head_branch": "uts-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add timeout to UTscapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad5fa88c0a76e0a51758",
    "number": 3366,
    "body": "The issue was that `p0f_impersonation` could set a MSS value too low (<100) that would afterwards get rejected\r\n\r\nfixes https://github.com/secdev/scapy/issues/3353\r\ncloses https://github.com/secdev/scapy/pull/3364",
    "head_branch": "p0f-mssfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Casual reminder that needs_root!=netaccess"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad60a88c0a76e0a51759",
    "number": 3365,
    "body": "\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- Fix PacketListField's copy() method runs differently in python2 and python3 -->\r\n\r\nfixes #3347 <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix do_copy() of class Field (#3365)\n\n* Fix do_copy() of class Field\r\n\r\nFix PacketListField's copy() method runs differently in python2 and python3.\r\n\r\n* add test\r\n\r\n* fix mypy error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad61a88c0a76e0a5175a",
    "number": 3364,
    "body": "This PR tests the CI to understand the current p0f failure.",
    "head_branch": "p0f_failure",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad62a88c0a76e0a5175b",
    "number": 3363,
    "body": "This PR fixes injecting IPv6 packets to the Windows loopback interface (#3357), and improves the documentation.",
    "head_branch": "loopback",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Loopback: fix & documentation (#3363)\n\n* Use the correct type value to inject IPv6 packets on the loopback interface\n\n* Documenting loopback packets injection\n\n* Document AF_INET6 specificity"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad63a88c0a76e0a5175c",
    "number": 3362,
    "body": "Fixes #3346 ",
    "head_branch": "doc_field_name",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "name is a reserved Field name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad63a88c0a76e0a5175d",
    "number": 3361,
    "body": "Fix PacketListField's copy() method runs differently in python2 and python3.\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #3347\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad64a88c0a76e0a5175e",
    "number": 3360,
    "body": "Fix LaTeX output generation.\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nThis PR fixes LaTeX output for UTscapy\r\n\r\nNote: the added function is trivial - just to unbreak the LaTeX support. Feel free to expand with fancier formatting and so on.\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #3359 <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Unbreak LaTeX output (#3360)\n\n* Unbreak LaTeX output\r\n\r\nSigned-off-by: Max <max.suraev@emnify.com>\r\n\r\n* Fix LaTeX theme typo\r\n\r\nSigned-off-by: Max <max.suraev@emnify.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad65a88c0a76e0a5175f",
    "number": 3358,
    "body": "Includes parsing, building and signature calculation.\r\n\r\nThe signature calculation code is mostly \"procedural\", the fiddly crypto bits are implemented but nothing at a higher \"connection\" level. Signature computation is tested using Test Vector from an IETF draft: https://datatracker.ietf.org/doc/html/draft-touch-tcpm-ao-test-vectors-02 so it's very likely correct.\r\n\r\nAdvice would be welcome for how to implement a \"signature validator\" that fits in with the rest of scapy.\r\n\r\nThis originates from here: https://github.com/cdleonard/tcp-authopt-test/tree/main/tcp_authopt_test\r\n\r\nI had more trouble than expected getting python2 to work.\r\n\r\nI removed the assertion for random options because it seems like it's always going to break and simply computing \"some\" random options should be enough to ensure code coverage.\r\n\r\nMany other option-like fields have a Packet derivative for each option but not TCP. Any particular reason?",
    "head_branch": "tcpao",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support TCP-MD5 and TCP-AO (#3358)\n\nSupport TCP-MD5 and TCP-AO"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad66a88c0a76e0a51760",
    "number": 3356,
    "body": "Another cleanup PR for automotive unit tests.",
    "head_branch": "unit_test_cleanup_OBDScanner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup unit test for OBDScanner (#3356)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad67a88c0a76e0a51761",
    "number": 3355,
    "body": null,
    "head_branch": "unit_test_cleanup_EcuAnsweringMachine",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup unit test for EcuAnswerwingMachine"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad68a88c0a76e0a51762",
    "number": 3354,
    "body": "Another cleanup. This removes the use of ISOTPSoftSockets within the unit tests. ",
    "head_branch": "unit_test_cleanup_GMLANUTILS",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup unit test for gmlanutils.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad69a88c0a76e0a51763",
    "number": 3352,
    "body": null,
    "head_branch": "split_3054_uds_scanner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Split #3054: Refactoring of UDS Scanner (#3352)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad69a88c0a76e0a51764",
    "number": 3351,
    "body": "Prevents scapy from crashing on load if having a non-48-bit link layer address such as Firewire's 64-bit addresses per IEEE 1394. Resolves issue #3350.\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support dynamic link layer addresses\n\nPrevents scapy from crashing on load if having a non-48-bit link layer address such as Firewire's 64-bit addresses per IEEE 1394."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad6aa88c0a76e0a51765",
    "number": 3349,
    "body": "- fix https://github.com/secdev/scapy/issues/3345\r\n  - dissection loop (could cause DoS but it's not that critical considering BGP is NOT enabled by default)\r\n  - support for BGP's \"additional path\" extension. This was implemented using Wireshark's heuristic\r\n- fix a minor `sprintf` bug: it actually didn't call `i2repr(i)` but `i2repr(i2h(i))`. This is not an non-issue in almost every case except a few (BGP field)",
    "head_branch": "bgp-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "BGP: support additional path & fix dissection bug"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad6ba88c0a76e0a51766",
    "number": 3348,
    "body": "- This PR is https://github.com/secdev/scapy/pull/3343 but better. I had actually started working on this a while back, notably:\r\n  - supports Python 2\r\n  - supports building\r\n  - add test\r\n- closes https://github.com/secdev/scapy/pull/3343\r\n- fixes https://github.com/secdev/scapy/issues/3324",
    "head_branch": "tls-ffdh",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix FFDH for scapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad6ca88c0a76e0a51767",
    "number": 3344,
    "body": "* Fix the dissection of a few ZCL fields\r\n\r\n* Dissect more ZCL fields\r\n\r\n* Dissect ZDP Active_EP_req commands\r\n\r\n* Dissect ZDP Device_annce commands\r\n\r\n* Dissect ZCL General Write Attributes commands\r\n\r\n* Dissect ZCL General Write Attributes Response commands\r\n\r\n* Dissect ZCL General Configure Reporting commands\r\n\r\n* Dissect ZCL General Configure Reporting Response commands\r\n\r\n* Dissect ZCL General Report Attributes commands\r\n\r\n* Dissect ZCL General Default Response commands\r\n\r\n* Dissect ZCL IAS Zone Zone Enroll Response commands\r\n\r\n* Dissect ZCL IAS Zone Zone Status Change Notification commands\r\n\r\n* Dissect ZCL IAS Zone Zone Enroll Request commands\r\n\r\n* Add unit tests",
    "head_branch": "zdp-zcl-enhancements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add ZDP and ZCL enhancements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad6da88c0a76e0a51768",
    "number": 3343,
    "body": "Fixes [#3324](https://github.com/secdev/scapy/issues/3324)\r\n\r\nFrom what I have understood, Scapy is correctly parsing the data but encounters 2 problems:\r\n- in `scapy/layers/tls/crypto/groups.py` line 448, `pubbytes` is given to `dh.DHPublicNumbers` without bytes to int conversion (in `DHPublicNumbers` init, an error is then raised).\r\n- in `scapy/layers/tls/keyexchange_tls13.py` lines 128 & 132, `_tls_named_curves` is used instead of `_tls_named_groups`, this last having `_tls_named_curves` AND `_tls_named_ffdh_groups` (in `groups.py`). Usage of `_tls_named_curves` leads to the ffdh group not being found.\r\n\r\n",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad6da88c0a76e0a51769",
    "number": 3342,
    "body": "Hi,\r\nTo help the fuzz method to generate more usable results I've added a max_length parameter to StrField, XStrfield, StrStopField etc. In addition the character set can now be specified.\r\nbest Jan",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad6ea88c0a76e0a5176a",
    "number": 3340,
    "body": "`traceroute6()` output was broken by 9a9853f39f091e781321c92b574ec612e1f62ddb\r\n\r\nI wonder if this should be tested in the CI.",
    "head_branch": "traceroute6_dislay_bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix traceroute6() output"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad6fa88c0a76e0a5176b",
    "number": 3339,
    "body": "just a minor cleanup",
    "head_branch": "cleanup_interface_mockup_import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup of interface_mockup import in automotive unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad70a88c0a76e0a5176c",
    "number": 3338,
    "body": "The ProfinetIO contrib layer underwent a fairly major re-write but the\r\ndocumentation still reflected the old code. Update it to reflect the\r\ncurrent code and provide examples that are actually valid.\r\n\r\nSome of the features for packet dissection were removed so the last\r\nsection of the documentation has been removed.\r\n\r\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>\r\n\r\n",
    "head_branch": "pnio-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: layers/pnio: Update ProfinetIO documentation\n\nThe ProfinetIO contrib layer underwent a fairly major re-write but the\ndocumentation still reflected the old code. Update it to reflect the\ncurrent code and provide examples that are actually valid.\n\nSome of the features for packet dissection were removed so the last\nsection of the documentation has been removed.\n\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad71a88c0a76e0a5176d",
    "number": 3337,
    "body": "The ProfinetIO contrib layer underwent a fairly major re-write but the\r\ndocumentation still reflected the old code. Update it to reflect the\r\ncurrent code and provide examples that are actually valid.\r\n\r\nSome of the features for packet dissection were removed so the last\r\nsection of the documentation has been removed.\r\n\r\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>\r\n\r\n",
    "head_branch": "pnio-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad72a88c0a76e0a5176e",
    "number": 3336,
    "body": "Add support for building and decoding Profinet Real Time Acyclic packets\r\nused for Alarm notifications.\r\n\r\nI wasn't sure whether this should go into `pnio.py`, `pnio_rpc.py` or somewhere else. I ended up putting most of my additions in `pnio_rpc.py` as I needed the `BlockHeader` in a few places. I'm happy to move it elsewhere (possibly a new `pnio_rta.py`) if that preferred.",
    "head_branch": "pnio-rta-alarm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "contrib/pnio: Add support for Profinet RTA Alarms\n\nAdd support for building and decoding Profinet Real Time Acyclic packets\nused for Alarm notifications.\n\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad72a88c0a76e0a5176f",
    "number": 3335,
    "body": "According to table 514 of IEC 61158-6-10 the correct BlockType for\r\nAlarmNotification_High is 0x0001 and AlarmNotification_Low is 0x0002.\r\n\r\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>",
    "head_branch": "pnio-block-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "contrib/pnio: Use correct block types for AlarmNotification_High/Low\n\nAccording to table 514 of IEC 61158-6-10 the correct BlockType for\nAlarmNotification_High is 0x0001 and AlarmNotification_Low is 0x0002.\n\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad73a88c0a76e0a51770",
    "number": 3334,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #3333 <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "mptcp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad74a88c0a76e0a51771",
    "number": 3331,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nDocument xUnit output support in UTscapy. Make sure it actually works with python 3.\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #3330 <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "UTscapy: document xUnit format support\n\nSigned-off-by: Max <max.suraev@emnify.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad75a88c0a76e0a51772",
    "number": 3329,
    "body": "currently, we dont have geneve options working.\r\nThis patch aims to fix them.\r\n\r\nUnit test cases:\r\n\r\nWith Options:\r\n```\r\nsendp(Ether(dst='0c:42:a1:d1:da:98',src='40:a6:b7:0b:e9:b1')/Dot1Q(vlan=304,type='IPv4')/IP(proto=17,src='172.17.2.161',dst='172.17.2.32')/UDP(sport=57025,dport=6081)/GENEVE(proto=0x6558,vni=4,options=GeneveOptions(classid=0x0102,type=0x80,data=b'\\x00\\x01\\x00\\x02'))/Ether(dst='fa:16:3e:81:fa:0f',src='fa:16:3e:e7:a9:8a',type=0x0800)/IP(proto=1,dst='192.168.2.181',src='192.168.2.92')/ICMP(type=8),iface=\"wlp0s20f3\")\r\n\r\n\r\n16:19:54.952429 40:a6:b7:0b:e9:b1 > 0c:42:a1:d1:da:98, ethertype 802.1Q (0x8100), length 104: vlan 304, p 0, ethertype IPv4, (tos 0x0, ttl 64, id 1, offset 0, flags [none], proto UDP (17), length 86)\r\n    172.17.2.161.57025 > 172.17.2.32.6081: [udp sum ok] Geneve, Flags [none], vni 0x4, proto TEB (0x6558), options [class Open Virtual Networking (OVN) (0x102) type 0x80(C) len 8 data 00010002]\r\n\tfa:16:3e:e7:a9:8a > fa:16:3e:81:fa:0f, ethertype IPv4 (0x0800), length 42: (tos 0x0, ttl 64, id 1, offset 0, flags [none], proto ICMP (1), length 28)\r\n    192.168.2.92 > 192.168.2.181: ICMP echo request, id 0, seq 0, length 8\r\n```\r\n\r\nWithout options:\r\n```\r\nsendp(Ether(dst='0c:42:a1:d1:da:98',src='40:a6:b7:0b:e9:b1')/Dot1Q(vlan=304,type='IPv4')/IP(proto=17,src='172.17.2.161',dst='172.17.2.32')/UDP(sport=57025,dport=6081)/GENEVE(proto=0x6558,vni=4)/Ether(dst='fa:16:3e:81:fa:0f',src='fa:16:3e:e7:a9:8a',type=0x0800)/IP(proto=1,dst='192.168.2.181',src='192.168.2.92')/ICMP(type=8),iface=\"wlp0s20f3\")\r\n\r\n16:21:08.305638 40:a6:b7:0b:e9:b1 > 0c:42:a1:d1:da:98, ethertype 802.1Q (0x8100), length 96: vlan 304, p 0, ethertype IPv4, (tos 0x0, ttl 64, id 1, offset 0, flags [none], proto UDP (17), length 78)\r\n    172.17.2.161.57025 > 172.17.2.32.6081: [udp sum ok] Geneve, Flags [none], vni 0x4, proto TEB (0x6558)\r\n\tfa:16:3e:e7:a9:8a > fa:16:3e:81:fa:0f, ethertype IPv4 (0x0800), length 42: (tos 0x0, ttl 64, id 1, offset 0, flags [none], proto ICMP (1), length 28)\r\n    192.168.2.92 > 192.168.2.181: ICMP echo request, id 0, seq 0, length 8\r\n\r\n>>> packet = GeneveOptions(classid=0x0102,type=0x80,data=b'\\x00\\x01\\x00\\x02')\r\n>>> packet.show()\r\n###[ Geneve Options ]### \r\n  classid   = Open Virtual Networking (OVN)\r\n  type      = 0x80\r\n  reserved  = 0\r\n  length    = None\r\n  data      = '\\x00\\x01\\x00\\x02'\r\n\r\n>>> packet.show2()\r\n###[ Geneve Options ]### \r\n  classid   = Open Virtual Networking (OVN)\r\n  type      = 0x80\r\n  reserved  = 0\r\n  length    = 1\r\n  data      = '\\x00\\x01\\x00\\x02'\r\n\r\n>>> \r\n\r\n>>> packet = GENEVE(proto=0x6558,vni=4,options=GeneveOptions(classid=0x0102,type=0x80,data=b'\\x00\\x04\\x00\\x05'))\r\n>>> packet.show()\r\n###[ GENEVE ]### \r\n  version   = 0\r\n  optionlen = None\r\n  oam       = 0\r\n  critical  = 0\r\n  reserved  = 0\r\n  proto     = TEB\r\n  vni       = 0x4\r\n  reserved2 = 0x0\r\n  \\options   \\\r\n   |###[ Geneve Options ]### \r\n   |  classid   = Open Virtual Networking (OVN)\r\n   |  type      = 0x80\r\n   |  reserved  = 0\r\n   |  length    = None\r\n   |  data      = '\\x00\\x04\\x00\\x05'\r\n\r\n>>> packet.show2()\r\n###[ GENEVE ]### \r\n  version   = 0\r\n  optionlen = 2\r\n  oam       = 0\r\n  critical  = 0\r\n  reserved  = 0\r\n  proto     = TEB\r\n  vni       = 0x4\r\n  reserved2 = 0x0\r\n  \\options   \\\r\n   |###[ Geneve Options ]### \r\n   |  classid   = Open Virtual Networking (OVN)\r\n   |  type      = 0x80\r\n   |  reserved  = 0\r\n   |  length    = 1\r\n   |  data      = '\\x00\\x04\\x00\\x05'\r\n\r\n>>> \r\n```\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "geneve_options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added geneve header options\n\ncurrently, we dont have geneve options working.\nThis patch aims to fix them."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad76a88c0a76e0a51773",
    "number": 3328,
    "body": null,
    "head_branch": "unit_test_cleanup_ISOTPScan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup ISOTPScan unit tests #3328\n\nCleanup ISOTPScan unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad77a88c0a76e0a51774",
    "number": 3325,
    "body": "as discussed in #3293 ",
    "head_branch": "unit_test_cleanup_CANSocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup unit tests for CANSockets (#3325)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad78a88c0a76e0a51775",
    "number": 3323,
    "body": "As this PR is not fully done, I'd greatly appreciate suggestions for improvements!\r\n\r\nThis PR does two things:\r\n1. It changes the way IKEv2 Proposals and Transforms are handled in scapy. Currently, `IKEv2_payload_Proposal` models Proposals and `IKEv2_payload_Transform` models Transforms similar to how IKEv2 payloads such as SA or KE are modeled in scapy.\r\n2. It changes the `key_length` field of `IKEv2_payload_Transform` so that the `length` field can be automatically computed\r\n\r\nBoth changes are explained in more detail in the following\r\n\r\n#### 1: Fundamental changes to IKEv2 Proposal and Transform Handling\r\n\r\nAccording to [sect. 3.3.1 and 3.3.2 of RFC 7296](https://datatracker.ietf.org/doc/html/rfc7296#section-3.3.1), Proposals and Transforms in IKEv2 are not actually payloads (emphasis added):\r\n\r\n> This field has a value of 0 if this was the last Proposal Substructure, and a value of 2 if there are more Proposal Substructures.  This syntax is inherited from ISAKMP, but is unnecessary because the last Proposal could be identified from the length of the SA.  The value (2) corresponds to a payload type of Proposal in IKEv1, and the first four octets of the Proposal structure are designed to **look somewhat like the header of a payload.**\r\n\r\nThe limitations of the current IKEv2 implementation in scapy with respect to Proposals and Transforms are:\r\n\r\n* The field `trans_nb` of `IKEv2_payload_Proposal` cannot be auto-computed because the Transforms are encoded as nested payloads rather than a simple list\r\n* Working with multiple Proposals and multiple Transforms in a single packet is somewhat awkward, as you have to  recursively search for all proposals and for each proposal, recursively search for transforms in it. It would be much simpler to simply represent both Proposals and Transforms as lists, as this PR does.\r\n\r\nHowever, the current PR uses the somewhat hacky workaround (see the new class `PseudoPayloadListField`) to solve the following problem:\r\n* the last Proposal should have the `next_payload` field set to `last` (and vice versa for Transforms)\r\n* all preceding Proposals should have their `next_payload` field set to `Proposal` (and vice versa for Proposals)\r\n\r\nRegarding this workaround: is there a better way to do this? Would it perhaps make sense for scapy to add a generic `pre_build` callback to account for situations like these, where default fields of elements of a list need to be updated before building?\r\n\r\n*Note*: This is a breaking change. I don't know if the current `ikev2` implementation in scapy is designed to be compatible with IKEv1 too, but if it is, this would probably break this compatibility and therefore might not be wanted. \r\n\r\n#### 2. Automatic length calculation of `IKEv2_payload_Transforms`\r\n\r\nCurrently, setting the (optional) `key_length` field of a Transform does not result in the `length` field being modified. However, it would make sense for this to happen, as\r\n* transforms without the `key_length` field have length `8` and\r\n* transforms with the `key_length` field have length `12`\r\n\r\nIt is my understanding that this cannot be implemented using `ConditionalField`s and so I'm using a custom type for this. This is again not a particularly \"clean\" solution, so please let me know if there is a better way to handle such optional parameters that should automatically influence packet lengths if set.\r\n",
    "head_branch": "ikev2-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad78a88c0a76e0a51776",
    "number": 3322,
    "body": "Corrects dissecting of packets containing multiple TrafficSelectors\r\n\r\nPreviously, dissecting IKEv2_payload_IDi and IKEv2_payload_IDr with\r\nmore than one TrafficSelector would incorrectly result in just one of\r\nthe TrafficSelectors being properly identified.\r\n\r\nAdds automatic calculation of the number_of_TSs field for TSi and TSr\r\nIKEv2 payloads.\r\n\r\nAdds corresponding unit tests\r\n",
    "head_branch": "ikev2-ts-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes and improves TrafficSelector handling in IKEv2 (#3322)\n\n* Fixes and improves TrafficSelector handling in IKEv2\r\n\r\nCorrects dissecting of packets containing multiple TrafficSelectors\r\n\r\nPreviously, dissecting IKEv2_payload_IDi and IKEv2_payload_IDr with\r\nmore than one TrafficSelector would incorrectly result in just one of\r\nthe TrafficSelectors being properly identified.\r\n\r\nAdds automatic calculation of the number_of_TSs field for TSi and TSr\r\nIKEv2 payloads.\r\n\r\nAdds corresponding unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad79a88c0a76e0a51777",
    "number": 3320,
    "body": "- ensures the p0f test passes under all p0f versions",
    "head_branch": "fixtest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make p0f test work with all p0f versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad7aa88c0a76e0a51778",
    "number": 3318,
    "body": "As discussed in #3293. This PR introduces ObjectPipe in ISOTPSoftSockets and removes some threads from the unit tests",
    "head_branch": "unit_test_cleanup_ISOTPSoftSocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactoring of ISOTPSoftSockets (#3318)\n\n* Refactoring of ISOTPSoftSockets\r\n\r\nSplit up isotp.uts and applied refactorings\r\n\r\ncleanup threads\r\n\r\nfix tox\r\n\r\nChange blocking type\r\n\r\ncleanup\r\n\r\ncleanup\r\n\r\n* update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad7ba88c0a76e0a51779",
    "number": 3317,
    "body": "@gpotter2 As discussed in #3293 \r\n\r\nThis PR refactors PythonCANSockets to use ObjectPipes internally and removes a bunch of threads from the unit tests",
    "head_branch": "unit_test_cleanup_PythonCANSocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactoring of PythonCANSockets tests (#3317)\n\n* Refactoring of PythonCANSockets\r\n\r\n* apply feedback\r\n\r\n* minor changes\r\n\r\n* revert PythonCAN refactoring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad7ca88c0a76e0a5177a",
    "number": 3316,
    "body": "@gpotter2 This removes almost all threads from NativeCANSocket unit tests, as discussed in #3293 ",
    "head_branch": "unit_test_cleanup_NativeCANSocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup unit tests for NativeCANSocket (#3316)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad7da88c0a76e0a5177b",
    "number": 3314,
    "body": "- fix https://github.com/secdev/scapy/issues/3251\r\n- create a generic trailerfield like mentioned in https://github.com/secdev/scapy/pull/2360 (but contrary to https://github.com/secdev/scapy/pull/2360, also support build)\r\n- rewrite how `FCSField` (now `TrailerField`) adds its field by re-purposing `post_transform` (undocumented) into `build_dones`. This is much cleaner than the previous hack and allows for further similar special fields",
    "head_branch": "fcs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad7da88c0a76e0a5177c",
    "number": 3313,
    "body": "- fix https://github.com/secdev/scapy/issues/3289\r\n- fix https://github.com/secdev/scapy/issues/3256\r\n- `RawPcapReader.read_all()` is unsupported. Forbid that",
    "head_branch": "rawpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix RawPcap[Writer/Reader]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad7ea88c0a76e0a5177d",
    "number": 3312,
    "body": "Corrects incorrect length calculations for IKEv2_payload_CERT_CRT and IKEv2_payload_CERT_CRL\r\n\r\nfixes #3311 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes incorrect IKEv2 length calculations (fixes #3311) (#3312)\n\n* Fixes incorrect IKEv2 length calculations\r\n\r\n* Adds unit test for IKEv2 incorrect length calculations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad7fa88c0a76e0a5177e",
    "number": 3310,
    "body": "Just a minor modification to solve an issue on a test system",
    "head_branch": "isotp_native_socket_stmin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add stmin argument to ISOTPNativeSocket (#3310)\n\n* Add stmin argument to ISOTPNativeSocket\r\n\r\n* update\r\n\r\n* fix codacy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad80a88c0a76e0a5177f",
    "number": 3309,
    "body": "Minor fixes to the current code. Could this PR please get merged previously to #3283 and #3054 ",
    "head_branch": "split_3054_minor_changes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Split 3054 minor changes (#3309)\n\n* Add __delitem__ function for EcuState class\n\n* Improve configuration class function\n\n* Improve retry_pkt handling to support different states\n\n* Improve detection of closed sockets during a scan\n\n* Increase verbosity of a log message in StagedAutomotiveTestCases\n\n* Introduce a TestSocket class and add typing to the interface_mockup.py\nhelper file\n\n* cleanup paths of capture files\n\n* apply feedback\n\n* apply feedback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad81a88c0a76e0a51780",
    "number": 3308,
    "body": "Add definitions and tests for I&M 0-4. I&M5 is more complicated so that\r\nhasn't been included for now.\r\n\r\nThis PR touches the same files as https://github.com/secdev/scapy/pull/3296 If there is a conflict it should be trivial.",
    "head_branch": "pnio_im",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "contrib/pnio: Add Identification and Maintenance (I&M) blocks\n\nAdd definitions and tests for I&M 0-4. I&M5 is more complicated so that\nhasn't been included for now.\n\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad82a88c0a76e0a51781",
    "number": 3307,
    "body": "- fix https://github.com/secdev/scapy/issues/3306\r\n- stabilize various networking test\r\n- stabilize import tests\r\n- fix BPF being loaded on linux during a mock test which caused `ioctl` to fail. Loading BPF on linux is now impossible",
    "head_branch": "fixtest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Stabilize loop test, fix 3306, disable unstable tests (#3307)\n\n* Stabilize loop test, fix 3306\r\n\r\n* Disable unstable tests: CAN/ISOTP\r\n\r\n* Add warning on non-IPv4 ARP\r\n\r\n* Remove debug prints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad83a88c0a76e0a51782",
    "number": 3305,
    "body": "Just added some packages for parsing purposes. \r\nTested them with a profinet device. I don't see any way to add tests for these packages. ",
    "head_branch": "pnio_dcp_extension",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added test for DCPOEMIDBlock and DCPDeviceInitiativeBlock."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad83a88c0a76e0a51783",
    "number": 3303,
    "body": "We had a temporary failure of the test suite that lead all tests to pass. https://github.com/secdev/scapy/issues/3298 This was thankfully caught fast by polybassa. This PR fixes the bugs introduced during that time.\r\n\r\n- https://github.com/secdev/scapy/pull/3295 caused a crash (TLS extensions are wrongly dissected) that wasn't discovered due to the temporary test suite failure. This PR re-introduces a check that should hopefully still fix what that PR aimed at fixing (although a reproducible example would have been nice), while fixing the extensions computation.\r\n- https://github.com/secdev/scapy/pull/3286 caused a failure in an unrelated pipetools test and a few failures in checks that tested the length of compressed packets.\r\n- https://github.com/secdev/scapy/pull/3271 dropped the check to make sure builtins were not imported. Re introduce that\r\n\r\nAlso took that opportunity to merge a tiny fix for some bad types I had as leftover.",
    "head_branch": "fixtest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Repair unit tests (#3303)\n\n* Fix TLS extensions\r\n\r\n* Fix minor DNS test failure\r\n\r\n* Add qd=None to some DNS tests\r\n\r\n* Increase import timeout\r\n\r\n* Fix import.uts on Windows\r\n\r\n* Stabilize nmap test\r\n\r\n* Improve loading of nmap os fingerprints\r\n\r\n* Use reraise in retry_test\r\n\r\n* Disable some imports\r\n\r\n* Re-use _scapy_builtins\r\n\r\n* Do not use __file__ in regression.uts\r\n\r\n* Fix appveyor build\r\n\r\n* Simplify send() and sniff() by a lot...\r\n\r\n* Add test for issue 3295\r\n\r\n* Reduce flooding delay\r\n\r\n* Show unfinished processes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad84a88c0a76e0a51784",
    "number": 3302,
    "body": "Came across \"indefinetly\" and quickly fixed some others as well.",
    "head_branch": "typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typos in documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad85a88c0a76e0a51785",
    "number": 3300,
    "body": "This PR partially resolves #3269. It makes sure that `rdlen` is not set to None when `rdata` is not compressed.",
    "head_branch": "dns_compression_enhanced",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "preserve rdlen when rdata is not a compressed DNS string"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad86a88c0a76e0a51786",
    "number": 3299,
    "body": "fix https://github.com/secdev/scapy/pull/3297\r\ncloses https://github.com/secdev/scapy/issues/3298",
    "head_branch": "utfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3299 from gpotter2/utfix\n\nUTscapy: hotfix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad87a88c0a76e0a51787",
    "number": 3297,
    "body": "This doesn't fail on my local system!!!!\r\nLets try on CI machines.",
    "head_branch": "UTscapy_bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad88a88c0a76e0a51788",
    "number": 3296,
    "body": "Add AlarmCRBlockReq and it's response AlarmCRBlockRes. These are\r\nrequired to successfully create an application relationship to a\r\nPROFINET IO device.\r\n",
    "head_branch": "pnio_alarm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "contrib/pnio: Add AlarmCRBlockReq and AlarmCRBlockRes\n\nAdd AlarmCRBlockReq and it's response AlarmCRBlockRes. These are\nrequired to successfully create an application relationship to a\nPROFINET IO device."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad88a88c0a76e0a51789",
    "number": 3295,
    "body": "The removed comment suggests that RFC 5246 forbids explicitly empty\r\nextensions. However, RFC5246 describes the field, when present, to\r\nbe of the following type:\r\n\r\n    Extension extensions<0..2^16-1>;\r\n\r\nWhich means that the variable length can be 0.\r\n\r\nWhen scapy/tls speaks to some stacks (such as the Erlang one), we\r\ncan encounter a case where the ServerHello emitted by such stacks\r\nwill contain an extensions field with just 00 00, which can lead to\r\na handshake failure or strange behaviour from the automaton.\r\n\r\nIt stills seems to be a good idea not to emit the length field in\r\nthe build phase, when the actual extension list is empty.",
    "head_branch": "relax-constraint-tls-extensions-length",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Relax a constraint in TLS Hello Extension handling.\n\nThe removed comment suggests that RFC 5246 forbids explicitly empty\nextensions. However, RFC5246 describes the field, when present, to\nbe of the following type:\n\n    Extension extensions<0..2^16-1>;\n\nWhich means that the variable length can be 0.\n\nWhen scapy/tls speaks to some stacks (such as the Erlang one), we\ncan encounter a case where the ServerHello emitted by such stacks\nwill contain an extensions field with just 00 00, which can lead to\na handshake failure or strange behaviour from the automaton.\n\nIt stills seems to be a good idea not to emit the length field in\nthe build phase, when the actual extension list is empty."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad89a88c0a76e0a5178a",
    "number": 3294,
    "body": "The current version of the TLS layer leads to handshake failure, due to a discrepancy in the key derivation logic in scapy implementation. The problem happens for Diffie Hellman key exchange (only the Finite Field DHE, not the ECDHE variant).\r\n\r\nIndeed, the RFC states that the leading zero bytes must be stripped when storing the Pre Master Secret. This is bad practice, since it leads to exploitable timing attacks such as the Raccoon Attack (https://blog.min.io/raccoonattack/, which is CVE-2020-1968 for OpenSSL).",
    "head_branch": "fix-tls-dhe-pms-derivation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix an error in the PMS derivation for DHE key exchange in TLS.\n\nThe RFC states that the leading zero bytes must be stripped when storing the\nPre Master Secret. This is bad practice, since it leads to exploitable timing\nattacks such as the Raccoon Attack (https://blog.min.io/raccoonattack/, which\nis CVE-2020-1968 for OpenSSL). However, this is the standard and the current\nimplementation leads to handshake failure with a probability of 1/256.\n\nThe leading zero injunction does NOT apply to ECDHE."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad8aa88c0a76e0a5178b",
    "number": 3292,
    "body": "Currently the MQTT module of Scapy (contrib/mqtt.py) only supports version 3.1.1 of the MQTT protocol. Thus, a new module was developed (contrib/mqtt5.py) that supports version 5.0. Version 5.0 contains many changes compared to Version 3.1.1, and thus we had to develop a library specifically for MQTT 5.\r\n\r\nIt is worth noting that we worked on top of the MQTT 3.1.1 module (contrib/mqtt.py), thus many fields, classes or dictionaries are still roughly the same in this new version. Main differences compared to the MQTT 3.1.1 (contrib/mqtt.py) are :\r\n\r\n1. Added Class MQTTProperty : New to version 5.0, most MQTT packets allow users to define properties. Depending on the property, the fields may be either ShortField, IntField, or StrLenField. This is the reason why we defined a MultipleTypeField in the class.\r\n\r\n2. Added a dictionary called Property that contains the values and names of the MQTT properties.\r\n\r\n3. Class UTF8EncodedString and UTF8String Pair were defined since some properties may have more than 1 field. \r\n\r\n4. Each MQTT Packet has fields for users to define these MQTT Properties. We've highlighted where these fields are located (example: \"#CONNECT Properties\"). This is one of the reasons why we had to develop  a module specifically for MQTT 5, since we had to modify fields_desc for each packet.\r\n\r\n5. Added reason/return/retain codes for the following packets : Disconnect, Connack, Puback, Pubrec, Pubrel, Pubcomp, Subscribe, Suback, and Unsuback (feature specific to MQTT 5.0).\r\n\r\n6. Added Bitfields (reserved, retainhandle, RAP, NL, QoS) for topics in MQTT subscribe packets (feature specific to MQTT 5.0). Version 3.1.1 of the MQTT protocol only had 1 field (QoS).\r\n\r\n7. Added class MQTTAuth, to support the new MQTT Auth Packet in MQTT 5.0.\r\n\r\n8. Added authenticate reason codes for MQTT Auth packets.\r\n\r\n9. Added unit tests. The unit tests evaluate when packets have or do not have properties.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad8ba88c0a76e0a5178c",
    "number": 3290,
    "body": "`conf.use_pcap` is set to `True` later on windows so this test would fail",
    "head_branch": "utscapy-win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor UTscapy tweak (conf.use_pcap is set later on windows)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad8ca88c0a76e0a5178d",
    "number": 3287,
    "body": "This patch aims to fix it.\r\n\r\n>>> load_contrib(\"geneve\")\r\n>>> packet = GENEVE(proto=0x6558,vni=4,options=GeneveOptions(options_class=0x0102,options_type=0x80,options_data=b'\\x00\\x01\\x00\\x02'))\r\n>>> packet.show()\r\n  version   = 0\r\n  optionlen = None\r\n  oam       = 0\r\n  critical  = 0\r\n  reserved  = 0\r\n  proto     = TEB\r\n  vni       = 0x4\r\n  reserved2 = 0x0\r\n  \\options   \\\r\n   |###[ Geneve Options ]###\r\n   |  options_class= Open Virtual Networking (OVN)\r\n   |  options_type= 0x80\r\n   |  options_r1= 0\r\n   |  options_r2= 0\r\n   |  options_r3= 0\r\n   |  options_len= None\r\n   |  options_data= '\\x00\\x01\\x00\\x02'\r\n\r\n>>> packet.show2()\r\n  version   = 0\r\n  optionlen = 2\r\n  oam       = 0\r\n  critical  = 0\r\n  reserved  = 0\r\n  proto     = TEB\r\n  vni       = 0x4\r\n  reserved2 = 0x0\r\n  \\options   \\\r\n   |###[ Geneve Options ]###\r\n   |  options_class= Open Virtual Networking (OVN)\r\n   |  options_type= 0x80\r\n   |  options_r1= 0\r\n   |  options_r2= 0\r\n   |  options_r3= 0\r\n   |  options_len= 1\r\n   |  options_data= '\\x00\\x01\\x00\\x02'\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "geneve_options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad8ca88c0a76e0a5178e",
    "number": 3286,
    "body": "This PR simplifies sending DNS packets with Scapy by using a better default value for the `qr` field.\r\n\r\nBefore this PR:\r\n```\r\nsr1(IP(dst=\"1.1.1.1\")/UDP()/DNS(qd=DNSQR()))\r\n```\r\n\r\nAfter this PR:\r\n```\r\nsr1(IP(dst=\"1.1.1.1\")/UDP()/DNS())\r\n```",
    "head_branch": "dns_default_dnsqr",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Test a simple DNS request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad8da88c0a76e0a5178f",
    "number": 3284,
    "body": "This PR adds:\r\n* ERF Ethernet Reader\r\n* ERF Ethernet Writer\r\n* Unit tests for Ethernet Reader and Writer \r\n\r\nCo-authored-by: \r\n- Daniel Widjaja <dwidjaja@drwholdings.com>\r\n- Tuan Le <tle@drwholdings.com>\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nPreviously when we want to read an ERF capture file, we convert the ERF file to pcap using wireshark or tshark and pass the pcap to scapy. This PR enables to read and write ERF Ethernet files directly. We only support ERF files of Type 2 which is used for the ethernet captures. \r\n\r\nWe create ERFEthernetReader and ERFEthernetWriter which behave similarly to PcapReader and PcapWriter. The main 2 functions that will be used are `rderf(filename, count)` and `wrerf(filename, pkt, *args, **kargs)` which similar to `rdpcap(filename, count)` and `wrpcap(filename, pkt, *args, **kargs)` but it receive ERF Capture File. \r\n\r\nHowever, `PcapWriter.write(pkt)` accepts both `Packet` and `bytes` type for `pkt`. But `ERFEthernetWriter.write(pkt)` only accepts `Packet` type for `pkt`. We feel that this feature isn't frequently used to be implemented and we would like to hear your opinion about this. \r\n\r\n### ERF Reader Example usage\r\n```\r\nscapy_erf = rderf(\"sample.erf\") # scapy_erf is a array of Packets\r\nwrerf(\"output_sample.erf\", scapy_erf) # scapy_erf will be written to output_sample.erf file as a ERF Capture file.\r\n```\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nFix #3276 <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add ERF Ethernet Support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad8ea88c0a76e0a51790",
    "number": 3283,
    "body": "",
    "head_branch": "split_3054_gmlan_scanner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Split #3054 gmlan scanner (#3283)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad8fa88c0a76e0a51791",
    "number": 3279,
    "body": "<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nFixed display issues with TCP defragmentation on Wireshark\r\n\r\nfixes #3277\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "TCP defragmentation minor fixes (#3279)\n\n* TCP defragmentation fixed\r\n\r\n* apply suggestions for comments\r\n\r\n* Add test\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad90a88c0a76e0a51792",
    "number": 3275,
    "body": "Note: This is a proof-of-concept only, handling just IPv6 routes at the moment (although it would be almost exactly same code for IPv4 too), and only tested on Arch (iproute2 v5.13, python v3.9). The intent is to check whether this approach would be suitable for scapy.\r\n\r\nThe legacy /proc/net interface has several disadvantages:\r\n\r\n 1. It is very slow, taking about 2-3 ms per route (about 60 times slower than netlink).\r\n 2. It doesn't support filtering by table, making it even slower *and* potentially confusing scapy when it sees multiple routes for the same destination.\r\n 3. It does not include many parameters that Linux routes have (such as routing table IDs or multiple nexthops).\r\n\r\nFor example, my system has ~60 routes in the 'main' table and ~120K routes in the 'inet' table. It is useless for scapy to scan routes from non-default tables because it does not process policy rules anyway; it would be better if it only looked at the 'main' table.\r\n\r\nWith netlink it is possible to request a filtered dump (even though getting the complete dump is already reasonably fast), but /proc/net does not even have an indication of which table a route belongs to.)\r\n\r\nOf course, it would be *much* better to use a native Python netlink module instead of shelling out to `ip` (especially considering that the `-json` option only became available last year), but I honestly don't know which one to use, and even the current approach shows quite an improvement:\r\n\r\n - /proc (all tables): 115690 routes in 304.03 seconds\r\n - iproute2 (all tables): 115651 routes in 5.26 seconds\r\n - iproute2 (main table): 32 routes in 0.08 seconds\r\n\r\n(The small differences in route count come mostly from BGP announcements and withdrawals happening between dumps.)\r\n\r\nRef: secdev/scapy#2133",
    "head_branch": "route6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad91a88c0a76e0a51793",
    "number": 3274,
    "body": "This PR adds support for the Full IP Suite suboption. This suboption allows configuration of up to 4 DNS servers in addition to the ip, netmask and gateway supported by the IP Parameter suboption. It is an optional part of the PROFINET standards.\r\n\r\n\r\n",
    "head_branch": "pnio_scp-full-ip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "contrib/pnio_dcp: Add Full IP Suite sub option\n\nThe Full IP Suite suboption allows configuration of up to 4 DNS servers\nin addition to the ip, netmask and gateway. It is an optional part of the\nPROFINET standards.\n\nSigned-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad92a88c0a76e0a51794",
    "number": 3272,
    "body": "This PR adds support for KNXNet/IP communications over UDP, according to KNX specifications v2.1 / ISO-IEC 14543-3.\r\n\r\nKNX specifications can be downloaded from the official website for free : https://my.knx.org/en/shop/knx-specifications.\r\n\r\nCurrently, the module (partially) supports the following services :\r\n- SEARCH REQUEST/RESPONSE\r\n- DESCRIPTION REQUEST/RESPONSE\r\n- CONNECT, DISCONNECT, CONNECTION_STATE REQUEST/RESPONSE\r\n- CONFIGURATION REQUEST/RESPONSE\r\n- TUNNELING REQUEST/RESPONSE\r\n\r\nBasic unit tests (packet creation, layer bindings) are written but some are still required, as we discover new tests case by using the module. In fact, the following tests would probably be relevant and added in a near future : \r\n- Verification of computed packet lengths\r\n- Validation of PacketListField's conditions\r\n\r\nAs indicated in the code, some implementations choices are open to discussion, including the use of binded layers vs. PacketFields.\r\n\r\nAny remark that would allow better code quality / better fit with KNX specifications / better respect to Scapy's conventions is always appreciated :)\r\n",
    "head_branch": "knx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for KNXnet/IP (#3272)\n\n* Add support for KNXnet/IP protocol\r\n\r\nProvides Scapy layers for KNXNet/IP communications over UDP, according to ISO-IEC 14543-3\r\n\r\nCurrently, the module (partially) supports the following services :\r\n- SEARCH REQUEST/RESPONSE\r\n- DESCRIPTION REQUEST/RESPONSE\r\n- CONNECT, DISCONNECT, CONNECTION_STATE REQUEST/RESPONSE\r\n- CONFIGURATION REQUEST/RESPONSE\r\n- TUNNELING REQUEST/RESPONSE\r\n\r\n* Add a test campaign for KNXnet/IP\r\n\r\nAdd basic tests for KNXnet/IP implementation, including :\r\n- packet creation\r\n- header length and payload guess\r\n\r\n* Add initial fixes for https://github.com/secdev/scapy/pull/3272\r\n\r\nReplace type() by isinstance() in KNX module\r\n\r\nAs pointed out by gpotter2 in https://github.com/secdev/scapy/pull/3272 :\r\n- https://github.com/secdev/scapy/pull/3272#discussion_r662643254\r\n- https://github.com/secdev/scapy/pull/3272#discussion_r662643481\r\n\r\nAdd condition before length computations in KNX\r\n\r\nWe only change structure lengths if they are not specified by the user,\r\nas it is scapy's philosophy to always allow the user to overwrite everything.\r\n\r\nPointed out by gpotter2 in https://github.com/secdev/scapy/pull/3272 :\r\n- https://github.com/secdev/scapy/pull/3272\r\n\r\nReplace to_bytes by struct.pack() in KNX module\r\n\r\nAs pointed out by gpotter2 in https://github.com/secdev/scapy/pull/3272 :\r\n- https://github.com/secdev/scapy/pull/3272#discussion_r662643743\r\n\r\nFix layer bindings to avoid conflicts in KNX\r\n\r\nAs pointed out by gpotter2 in https://github.com/secdev/scapy/pull/3272 :\r\n- https://github.com/secdev/scapy/pull/3272#discussion_r662645071\r\n\r\nFix KNX module to be PEP8 compliant\r\n\r\nPointed out by guedou in https://github.com/secdev/scapy/pull/3272 :\r\n- https://github.com/secdev/scapy/pull/3272#issuecomment-873396056\r\n- https://github.com/secdev/scapy/pull/3272/checks?check_run_id=2942182592\r\n\r\n* Edit condition before length computations in KNX\r\n\r\nWe only change structure lengths if they are not specified by the user,\r\nas it is scapy's philosophy to always allow the user to overwrite everything.\r\n\r\nReplaces p[x] == 0x00 check to self.structure_length is None:\r\n\r\n* flake8 errors fix for KNX module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad93a88c0a76e0a51795",
    "number": 3271,
    "body": "This PR should have little impact, and is mostly code cleanups.\r\n\r\n- remove global variables in `interact()`. I suspect this could lead to issues\r\n- cleanup `autorun` code to handle better multiple session overlap\r\n- simplify how we handle sessions. less environment polution when using `interact()`",
    "head_branch": "importmain",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Replace GLOBKEYS by session (#3271)\n\n* Replace GLOBKEYS by smarter session\r\n\r\n* Make autorun work with sessions\r\n\r\n* Apply small suggestions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad93a88c0a76e0a51796",
    "number": 3270,
    "body": "Trying out [github issue forms](https://github.blog/changelog/2021-06-23-issues-forms-beta-for-public-repositories/).\r\n\r\n**New issue button:**\r\n![image](https://user-images.githubusercontent.com/10530980/123459340-74944300-d5e6-11eb-83fb-89b499bc8cea.png)\r\n\r\n**Bugs:**\r\n![image](https://user-images.githubusercontent.com/10530980/123459395-87a71300-d5e6-11eb-890c-aee5e18a52e8.png)\r\n",
    "head_branch": "forms",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Apply minor fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad94a88c0a76e0a51797",
    "number": 3268,
    "body": "",
    "head_branch": "reenable_isotp_uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Re-enable ISOTP unit tests for MAC OSX, BSD, Windows and PyPy machines (#3268)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad95a88c0a76e0a51798",
    "number": 3267,
    "body": "Simple typo fix, shouldn't have implications for other code.\r\n\r\nSpent longer than I would like to admit trying to use SCTPChunkParamHeartbeatInfo before I spotted the typo.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SCTPChunkParamHearbeatInfo corrected to SCTPChunkParamHeartbeatInfo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad96a88c0a76e0a51799",
    "number": 3263,
    "body": "",
    "head_branch": "hsfz_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change default basecls for HSFZ convenience sockets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad97a88c0a76e0a5179a",
    "number": 3262,
    "body": "Apparently, codespell fails on some files. This PR fixes codespell.",
    "head_branch": "fix_codespell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix codespell"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad98a88c0a76e0a5179b",
    "number": 3261,
    "body": "",
    "head_branch": "split_3054_obd_scanner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Split #3054: Refactoring of OBDScanner (#3261)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad99a88c0a76e0a5179c",
    "number": 3259,
    "body": "This adds support to `p0fv3`\r\n\r\nSome of the new features and changes:\r\n* Parsing of p0f.fp using the p0fv3 formatting\r\n* Complete IPv4/IPv6/TCP/HTTP parsing\r\n*  TCP/HTTP/MTU passive fingerprinting\r\n* Changed the name of the old `p0f` module to `p0fv2` to allow support for v2\r\n\r\n",
    "head_branch": "p0fv3-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "p0fv3 support - tcp/http/mtu passive fingerprinting (#3259)\n\n* p0fv3 support - tcp/http/mtu passive fingerprinting\r\n\r\n* Changed the kb structure, added parsing for 'sys' lines and more detailed signature structure.\r\n\r\n* Added p0fv3 tests and modified the p0fv2 tests to fit new module name\r\n\r\n* Added prnp0f function and sig2str to convert a tuple signature to str\r\n\r\n* Added MTU fingerprinting in prnp0f on SYN/SYN+ACK packets\r\n\r\n* Fixed HTTP headers_correl function and reverted mtu changes\r\n\r\n* Fixed IP ECN parsing\r\n\r\n* Fixed TCP ECN parsing\r\n\r\n* Fixed tests\r\n\r\n* Changed signature & record tuples to organized classes\r\n\r\n* Added p0f_impersonate + tests\r\n\r\n* Fix typo\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad99a88c0a76e0a5179d",
    "number": 3258,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThis adds support for `utun` devices in `TunTapInterface` on Darwin (macOS).  This is allegedly available since macOS 10.6.4, but I don't have a machine with an install _that_ old to properly verify.\r\n\r\nThe main reasons for adding it are:\r\n\r\n* `utun` is part of the OS, and doesn't require installing a third-party kernel extension. This should let it work in CI environments (which typically have SIP enabled).\r\n* `tuntaposx` is no longer maintained as of 2015. [Tunnelblick's author is also looking at dropping support for it too](https://tunnelblick.net/cTunTapConnections.html).\r\n* Running even a _notarised_ build of `tuntaposx` on macOS 10.15.4 and later [complains about the use of deprecated APIs](https://developer.apple.com/support/kernel-extensions/), so will break in the future.\r\n* `tuntaposx` broke in macOS 11.0.1 when System Integrity Protection was enabled (default), but was fixed in macOS 11.1.0.\r\n* `tuntaposx` won't work _at all_ on Apple Silicon (M1) machines.\r\n\r\nThis PR requires #3257 to fix `send()` on `utun` devices, and adds tests which use this.  I've been testing this with macOS 11.4.\r\n\r\nCaveats:\r\n\r\n* This requires Python 3.3 or later, because earlier versions do not support `PF_SYSTEM` `SYSPROTO_CONTROL`. Adding support earlier versions would make this much more complicated (and those versions are EOL).\r\n* I haven't tested this on Apple Silicon – I don't own such a machine.\r\n\r\n",
    "head_branch": "macos-utun",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad9aa88c0a76e0a5179e",
    "number": 3257,
    "body": "This pull request fixes the `send()` function on `loX` (`if_lo`) and Darwin `utunX` (`if_utun`), by including the `Loopback` header unless on Darwin/macOS with a device that looks like tuntaposx's TUN device.\r\n\r\nMy previous change (#2584) of mine operated under the assumption that a `DLT_NULL` (`Loopback`) device doesn't need any headers on BSD, because `tuntaposx` on Darwin didn't work with it.  At the time, I hadn't tested this on BSD, but the true story seems to be a bit more complicated:\r\n\r\n* [Prior to FreeBSD 10.0, `bpf` couldn't send packets to `if_lo` interfaces due to a kernel bug](https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=198211).\r\n* FreeBSD 13.0's `if_lo` needs the `Loopback` header.\r\n* [FreeBSD 13.0's `if_tuntap` is broken due to a kernel bug](https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=256587), but _should_ need the `Loopback` header once that's fixed.\r\n* Darwin's `if_lo` and `if_utun` need the `Loopback` header.\r\n* tuntaposx's `tun` interface needs _no_ headers (per #2584), because they seem to interpret `NULL` as \"no headers\".\r\n\r\nWithout this change:\r\n\r\n* running Wireshark against a `utun` has missing headers, and the first 4 bytes of the packet are swapped between network and host byte order, and reports an \"Unknown\" packet type of `0x001c`.\r\n* an application on the far side of the `utun` device gets bad packets (because it's missing the `DLT_NULL` header)\r\n\r\nLong term it looks like Apple is pushing userspace applications towards `utun` and away from third-party kernel extensions like `tuntaposx`.  I'm working on another PR which adds `utun` support for `TunTapInterface`, but that's not quite ready yet (#3258).\r\n\r\n**Tests:** I've added a test to `bpf.uts` which sends an ICMP ping packet to localhost on IPv4, and tries to sniff for that packet being sent _and_ a response from the kernel.  This seems to work on FreeBSD 13.0-RELEASE and macOS 11.4.\r\n",
    "head_branch": "macos-utun-sendfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "BSD/Darwin: fix send() on lo and utun devices\n\nThe Loopback work-around is only needed for tuntaposx (on Darwin)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad9ba88c0a76e0a5179f",
    "number": 3250,
    "body": "Hello, I'm Haram Park.\r\nAnd I'm a Bluetooth security researcher at Computer & Communication Laboratory in Korea University(https://ccs.korea.ac.kr/).\r\nIt was really useful for me to use scapy on my personal research.\r\nI really appreciate that. And I want to contribute to scapy.\r\n\r\nDuring on my research, I need some Bluetooth L2CAP packets that were not embodied in scapy.\r\nSo I modify bluetooth.py. I add some Bluetooth L2CAP packets in /scapy/scapy/layers/bluetooth.py.\r\nI refer to bluetooth core specification 5.2. (https://www.bluetooth.com/specifications/specs/core-specification/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n**Add more Bluetooth L2CAP packets**\r\n1. modify code list in L2CAP_CmdHdr() \r\n2. modify psm list in L2CAP_ConnReq()\r\n3. add Bluetooth L2CAP packets \r\n (1). L2CAP_EchoReq()\r\n (2). L2CAP_EchoResp()\r\n (3). L2CAP_Create_Channel_Request()\r\n (4). L2CAP_Create_Channel_Response()\r\n (5). L2CAP_Move_Channel_Request()\r\n (6). L2CAP_Move_Channel_Response()\r\n (7). L2CAP_Move_Channel_Confirmation_Request()\r\n (8). L2CAP_Move_Channel_Confirmation_Response()\r\n (9). L2CAP_LE_Credit_Based_Connection_Request()\r\n (10). L2CAP_LE_Credit_Based_Connection_Response()\r\n (11). L2CAP_Flow_Control_Credit_Ind()\r\n (12). L2CAP_Credit_Based_Connection_Request()\r\n (13). L2CAP_Credit_Based_Connection_Response()\r\n (14). L2CAP_Credit_Based_Reconfigure_Request()\r\n (15). L2CAP_Credit_Based_Reconfigure_Response()\r\n4. bind new packet with layers.\r\n\r\nThanks.\r\n\r\nHaram Park\r\n\r\n![scapy_full_req](https://user-images.githubusercontent.com/55234517/121008922-7b414e80-c7ce-11eb-98b0-35f7ca6f7984.png)\r\n",
    "head_branch": "haramel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bluetooth: Add more L2CAP commands"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad9ca88c0a76e0a517a0",
    "number": 3247,
    "body": "This PR adds a test that imports every file in a new Python session, just to make sure we stop having those dumb circular issues.\r\n\r\n**The issue was triggered by the test**\r\n\r\nfix https://github.com/secdev/scapy/issues/3246",
    "head_branch": "importloops",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Consistently test all of Scapy's imports (#3247)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad9da88c0a76e0a517a1",
    "number": 3244,
    "body": "**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nFixes #3243 ",
    "head_branch": "fix-threading",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix threading related deprecations in Python 3.10."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad9ea88c0a76e0a517a2",
    "number": 3242,
    "body": "- fixes https://github.com/secdev/scapy/issues/3226\r\n\r\nThe spec has been updated. Let's use the new format",
    "head_branch": "btle-adv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix BTLE ADV length"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad9ea88c0a76e0a517a3",
    "number": 3241,
    "body": "- See https://github.com/secdev/scapy/issues/3217 (super well researched)\r\n\r\nThis can't be reasonably tested. This is when we're happy to have mypy",
    "head_branch": "auxdata-supp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Better tpacket_auxdata support (#3241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fad9fa88c0a76e0a517a4",
    "number": 3240,
    "body": "- mostly like https://github.com/secdev/scapy/pull/3209 but with a test. (closes https://github.com/secdev/scapy/pull/3209)\r\n- fixes https://github.com/secdev/scapy/issues/3191\r\n\r\nSee also https://github.com/secdev/scapy/pull/3234",
    "head_branch": "l2sock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not resolve the interface name globally"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada0a88c0a76e0a517a5",
    "number": 3234,
    "body": "This PR fixes #3191",
    "head_branch": "fix-3191",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada1a88c0a76e0a517a6",
    "number": 3227,
    "body": "Minor cleanups in various files:\r\n- base_clases typing\r\n- a few contrib layers that had a duplicated field name\r\n- vqp tests",
    "head_branch": "dupli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor cleanups (contrib, typing) (#3227)\n\n* Various tests cleanup\r\n\r\n* UTscapy requires windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada2a88c0a76e0a517a7",
    "number": 3225,
    "body": "- Core typing of the following:\r\n  - asn1/*\r\n  - asn1fields.py\r\n  - asn1packet.py\r\n- Several bugs fixed. Mostly in `asn1/asn1.py` and `asn1fields.py`.\r\n- This uses Generics for the fields and ASN1 types (as in `fields.py`) to try to make the cleanest possible thing.",
    "head_branch": "typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Apply suggestion\n\nCo-authored-by: Pierre Lalet <pierre@droids-corp.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada3a88c0a76e0a517a8",
    "number": 3224,
    "body": "`L3RawSocket6` objects are firing a ResourceWarning on allocation:\r\n\r\n```\r\nL3RawSocket6(iface=\"eth0\")\r\n/.../secdev_scapy/scapy/layers/inet6.py:3369: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_RAW, proto=255, laddr=('0.0.0.0', 255)>\r\n  self.outs = socket.socket(socket.AF_INET6, socket.SOCK_RAW, socket.IPPROTO_RAW)  # noqa: E501\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/.../secdev_scapy/scapy/layers/inet6.py:3370: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_PACKET, type=SocketKind.SOCK_RAW, proto=56710, laddr=('eth0', 34525, 0, 1, b'T\\xe1\\xadk\\xac\\x15')>\r\n  self.ins = socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.htons(type))  # noqa: E501\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n```",
    "head_branch": "L3RawSocket6_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix ResourceWarning in L3RawSocket6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada3a88c0a76e0a517a9",
    "number": 3223,
    "body": "",
    "head_branch": "DoIP6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add IPv6 support for DoIP (#3223)\n\n* Add IPv6 support for DoIP\r\n\r\n* fix codacy\r\n\r\n* add typing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada4a88c0a76e0a517aa",
    "number": 3220,
    "body": "- Improve the Mypy detection script\r\n- Enable typing for some modules that could but hadn't been already\r\n- fix and restore partially existing typing in `scapy/themes.py`",
    "head_branch": "typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Enable typing when available"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada5a88c0a76e0a517ab",
    "number": 3219,
    "body": "closes https://github.com/secdev/scapy/pull/3211 ",
    "head_branch": "sphinxdoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix sphinx doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada6a88c0a76e0a517ac",
    "number": 3218,
    "body": "fixes https://github.com/secdev/scapy/issues/3200",
    "head_branch": "keyenum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix regression: KeyError on EnumField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada7a88c0a76e0a517ad",
    "number": 3214,
    "body": "The default constructs for Issuer, Subject and Directory Name in the X.509 layer were missing the proper set of the OID elements and instead used plain strings for the OID.\r\n\r\nBefore the PR:\r\n```\r\nIn [1]: from scapy.layers.x509 import *\r\n\r\nIn [2]: X509_DirectoryName\r\nOut[2]: scapy.layers.x509.X509_DirectoryName\r\n\r\nIn [3]: dn = X509_DirectoryName()\r\n\r\nIn [4]: dn\r\nOut[4]: <X509_DirectoryName  directoryName=[<X509_RDN  rdn=[<X509_AttributeTypeAndValue  |>] |>, <X509_RDN  rdn=[<X509_AttributeTypeAndValue  type='2.5.4.10' value=<ASN1_PRINTABLE_STRING['Scapy, Inc.']> |>] |>, <X509_RDN  rdn=[<X509_AttributeTypeAndValue  type='2.5.4.3' value=<ASN1_PRINTABLE_STRING['Scapy Default Name']> |>] |>] |>\r\n\r\nIn [5]: dn.show()\r\n###[ X509_DirectoryName ]### \r\n  \\directoryName\\\r\n   |###[ X509_RDN ]### \r\n   |  \\rdn       \\\r\n   |   |###[ X509_AttributeTypeAndValue ]### \r\n   |   |  type      = <ASN1_OID['countryName']>\r\n   |   |  value     = <ASN1_PRINTABLE_STRING['FR']>\r\n   |###[ X509_RDN ]### \r\n   |  \\rdn       \\\r\n   |   |###[ X509_AttributeTypeAndValue ]### \r\n   |   |  type      = '2.5.4.10'\r\n   |   |  value     = <ASN1_PRINTABLE_STRING['Scapy, Inc.']>\r\n   |###[ X509_RDN ]### \r\n   |  \\rdn       \\\r\n   |   |###[ X509_AttributeTypeAndValue ]### \r\n   |   |  type      = '2.5.4.3'\r\n   |   |  value     = <ASN1_PRINTABLE_STRING['Scapy Default Name']>\r\n```\r\n\r\nAfter the PR:\r\n```\r\nIn [1]: from scapy.layers.x509 import *\r\n\r\nIn [2]: dn = X509_DirectoryName()\r\n\r\nIn [3]: dn.show()\r\n###[ X509_DirectoryName ]### \r\n  \\directoryName\\\r\n   |###[ X509_RDN ]### \r\n   |  \\rdn       \\\r\n   |   |###[ X509_AttributeTypeAndValue ]### \r\n   |   |  type      = <ASN1_OID['countryName']>\r\n   |   |  value     = <ASN1_PRINTABLE_STRING['FR']>\r\n   |###[ X509_RDN ]### \r\n   |  \\rdn       \\\r\n   |   |###[ X509_AttributeTypeAndValue ]### \r\n   |   |  type      = <ASN1_OID['organizationName']>\r\n   |   |  value     = <ASN1_PRINTABLE_STRING['Scapy, Inc.']>\r\n   |###[ X509_RDN ]### \r\n   |  \\rdn       \\\r\n   |   |###[ X509_AttributeTypeAndValue ]### \r\n   |   |  type      = <ASN1_OID['commonName']>\r\n   |   |  value     = <ASN1_PRINTABLE_STRING['Scapy Default Name']>\r\n```",
    "head_branch": "x509_dn_default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added proper OIDs in defaul issuer, subject and directory name classes\n\nThe defaul constructs were missing the proper set of the OID elements and instead used plain strings for the OID."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada8a88c0a76e0a517ae",
    "number": 3213,
    "body": "```\r\nRegression tests for the XCP_CAN\r\n-- Run at 13:42:55 from [test/tools/xcpscanner.uts] by UTscapy in 5.74445080757\r\n -> Passed=4\r\n -> Failed=1\r\n\r\n######\r\n## Tests XCPonCAN Scanner\r\n######\r\n\r\n\r\n###(002)=[failed] xcp can scanner broadcast ID-Range\r\n\r\n>>> id_range = range(50, 53)\r\n>>> slave_id_1 = 10\r\n>>> response_id_1 = 11\r\n>>> slave_id_2 = 20\r\n>>> response_id_2 = 21\r\n>>> \r\n>>> slave_1_response = XCPOnCAN(identifier=response_id_1) / CTOResponse(packet_code=0xFF) / TransportLayerCmdGetSlaveIdResponse(can_identifier=slave_id_1)\r\n>>> slave_2_response = XCPOnCAN(identifier=response_id_2) / CTOResponse(packet_code=0xFF) / TransportLayerCmdGetSlaveIdResponse(can_identifier=slave_id_2)\r\n>>> \r\n>>> random_xcp_response_1 = XCPOnCAN(identifier=30) / CTOResponse(packet_code=0xFF) / GenericResponse(b\"\\x00\\x00\")\r\n>>> random_xcp_response_2 = XCPOnCAN(identifier=40) / CTOResponse(packet_code=0xFF) / GenericResponse(b\"\\x00\\x00\")\r\n>>> \r\n>>> sock1 = new_can_socket0()\r\n>>> sock1.basecls = XCPOnCAN\r\n>>> \r\n>>> sock2 = new_can_socket0()\r\n>>> sock2.basecls = XCPOnCAN\r\n>>> \r\n>>> \r\n>>> def ecu():\r\n...     for i in range(50, 53):\r\n...         sock1.sniff(count=1, store=False, timeout=2)\r\n...         if i == 50:\r\n...             sock1.send(CAN(identifier=0x90, data=b'\\x01\\x02\\x03'))\r\n...             sock1.send(CAN(identifier=0x90, data=b'\\x05\\x02\\x03'))\r\n...             sock1.send(CAN(identifier=0x90, data=b'\\xff\\x05\\x03'))\r\n...         if i == 51:\r\n...             sock1.send(random_xcp_response_1)\r\n...             sock1.send(random_xcp_response_2)\r\n...         if i == 52:\r\n...             sock1.send(slave_1_response)\r\n...             sock1.send(slave_2_response)\r\n... \r\n>>> \r\n>>> thread = threading.Thread(target=ecu)\r\n>>> thread.start()\r\n>>> \r\n>>> scanner = XCPOnCANScanner(sock2, id_range=id_range, sniff_time=0.5)\r\n>>> result = scanner.scan_with_get_slave_id()\r\n>>> thread.join(timeout=3)\r\n>>> sock1.close()\r\n>>> sock2.close()\r\n>>> assert len(result) == 2\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\nAssertionError\r\n\r\n\r\n\r\nUTscapy ended with error code 1\r\nERROR: InvocationError for command /usr/bin/sudo -E .tox/pypy2-linux_root/bin/python -m coverage run -m scapy.tools.UTscapy -c ./test/configs/linux.utsc -K tshark -K icmp_firewall -K not_pypy (exited with code 1)\r\n```",
    "head_branch": "stabilizer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Disable xcpscanner tests on PyPy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fada9a88c0a76e0a517af",
    "number": 3212,
    "body": "This PR performs some additional cleanups to `select_objects` on windows:\r\n- remove `SelectableObject`. Merge it into `ObjectPipe`. It was complicated to use + unless people were using it with `ObjectPipe`, it wouldn't use the fancy new system. This will force us to use the new elegant system implemented in `ObjectPipe`.\r\n- fix https://github.com/secdev/scapy/issues/3206 and other various bugs in the implementation",
    "head_branch": "winselect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Overhaul select_object"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadaaa88c0a76e0a517b0",
    "number": 3211,
    "body": "This fixes an error cause by utils.py",
    "head_branch": "fix_docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadaaa88c0a76e0a517b1",
    "number": 3210,
    "body": "Otherwise, if select() is blocking, with a control socket (close_pipe) remaining in sniff_sockets, the loop will never terminate.\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nIf select() is blocking, with a control socket (close_pipe) remaining in sniff_sockets, the loop will never terminate. This change fixes that.\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadaba88c0a76e0a517b2",
    "number": 3209,
    "body": "This PR fixes #3191. I do not know how to test it =/",
    "head_branch": "Issue_#3191",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadaca88c0a76e0a517b3",
    "number": 3207,
    "body": "This PR fixes #3205.",
    "head_branch": "Issue_#3205",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure that the MAC address is 6 bytes long (#3207)\n\n* Ensure that the return MAC address is 6 bytes long\r\n\r\n* Mock get_if_raw_hwaddr with a long layer address"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadada88c0a76e0a517b4",
    "number": 3203,
    "body": "This PR fixes an implementation error in Modbus contrib module, described in issue #3202.\r\n\r\nBefore :\r\n```python\r\n>>> from scapy.contrib.modbus import ModbusADUResponse\r\n>>> pkt = ModbusADUResponse(b\"\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x88\\x01\")\r\n>>> pkt.show2()\r\n###[ ModbusADU ]### \r\n  transId   = 0x0\r\n  protoId   = 0x0\r\n  len       = 3\r\n  unitId    = 0x0\r\n###[ Raw ]### \r\n     load      = '\\x88\\x01'\r\n```\r\n\r\nAfter :\r\n```python\r\n>>> from scapy.contrib.modbus import ModbusADUResponse\r\n>>> pkt = ModbusADUResponse(b\"\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x88\\x01\")\r\n>>> pkt.show2()\r\n###[ ModbusADU ]### \r\n  transId   = 0x0\r\n  protoId   = 0x0\r\n  len       = 3\r\n  unitId    = 0x0\r\n###[ Diagnostics Exception ]### \r\n     funcCode  = 0x88\r\n     exceptionCode= Illegal Function Code\r\n```\r\n",
    "head_branch": "fix_modbus_response_classes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix wrong Modbus response code / class match (#3202) (#3203)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadaea88c0a76e0a517b5",
    "number": 3201,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed typo (#3201)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadafa88c0a76e0a517b6",
    "number": 3199,
    "body": "",
    "head_branch": "fix_3197",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadafa88c0a76e0a517b7",
    "number": 3198,
    "body": "fixes #3197 \r\n",
    "head_branch": "fix_3197",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix 100% CPU with Pipetools #3197 (#3198)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb0a88c0a76e0a517b8",
    "number": 3196,
    "body": "A pretty trivial patch, relevant if a user is both setting $PYTHON and supplying command line arguments, as I've had occasion to do.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure command line arguments are passed through run_tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb1a88c0a76e0a517b9",
    "number": 3195,
    "body": "Fixes #3186, discussed in #3172",
    "head_branch": "disable_pypy_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Disable some automotive tests on PyPy (#3195)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb2a88c0a76e0a517ba",
    "number": 3193,
    "body": "",
    "head_branch": "debug_gmlanutils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb3a88c0a76e0a517bb",
    "number": 3192,
    "body": "Fixes #3172 \r\n\r\nSomehow the imports got messed during the ISOTP unit tests.\r\n\r\n#3188 should improve the situation as well. \r\n",
    "head_branch": "fix_travis_ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Trying to improve isotp.uts stability (#3192)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb3a88c0a76e0a517bc",
    "number": 3190,
    "body": "This PR improves the ASN.1 implementations of GENERALIZED TIME and UTC TIME. The current one supports only a subset of the supported formats and doesn't help in converting to/from datetime. This implementation parses into to \"datetime\" objects and set tzinfo if included in the string.\r\n\r\nA minor incompatibility might arise from this when existing implementations rely on the 'pretty_time' format of this field. It used to be hardcoded to \"GMT\", but that is not appropriate for a full implementation. Instead, iso-style \"1999-12-31 23:59:59 UTC\" or \"1999-12-31 23:59:59.999 +1000\" is printed. Two tests in cert.uts had to be adapted to this. On the upper hand, tls/cert.py does no longer need the date's format string.\r\n\r\nFor python27 compatiblity, a mini implemenation of datetime.timezone is included.",
    "head_branch": "date-pr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb4a88c0a76e0a517bd",
    "number": 3189,
    "body": "Another split of #3054.\r\nThis PR introduces new classes, Enumerator and Executor. Both classes will be used for UDS, OBD and GMLAN scanner in a following PR. ",
    "head_branch": "split_3054_enumerators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Split of #3054: Implementation of Enumerator and Executor base classes (#3189)\n\n* Split of #3054: Implementation of Enumerator and Executor base classes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb5a88c0a76e0a517be",
    "number": 3188,
    "body": "Replacement for #3079 ",
    "head_branch": "isotp_split2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Split of isotp.py (#3188)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb6a88c0a76e0a517bf",
    "number": 3187,
    "body": "fix https://github.com/secdev/scapy/issues/3131",
    "head_branch": "dot11-mcs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "RadioTap MCS - fix padding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb7a88c0a76e0a517c0",
    "number": 3183,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb8a88c0a76e0a517c1",
    "number": 3182,
    "body": "- Cleanup travis tests\r\n- fix the tuntap tests\r\n- run Mypy tests on Python 3.9 (5 changes required)\r\n- fix bad format in get_if_raw_hwaddr leading to negative address families being detected\r\n\r\nfixes https://github.com/secdev/scapy/issues/3172",
    "head_branch": "mypy3.9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Travis cleanup / TunTap fixes / Mypy 3.9 (#3182)\n\n* Use 3.9 for Mypy\r\n\r\n* Improve tuntap tests - Fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb8a88c0a76e0a517c2",
    "number": 3181,
    "body": "I randomly came across this function that had tiny code issues.",
    "head_branch": "fix-lhex",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "utils.lhex(): fix unnecessary else after return, use isinstance()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadb9a88c0a76e0a517c3",
    "number": 3180,
    "body": "fixes https://github.com/secdev/scapy/issues/3179",
    "head_branch": "hotfi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Hotfix: fix bad typing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadbaa88c0a76e0a517c4",
    "number": 3178,
    "body": "This are the last commits before releasing v2.4.5 (see #3158). Please do not merge anything else before the release =)\r\n\r\n8b63d73a17266bae2a61513ea97ded5283a7ccd3 is the only important commit. On OpenBSD, `tcpdump` does not recognize `subtype prob-req` as a valid filter.",
    "head_branch": "v245_bsd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "OpenBSD tcpdump does not support 'subtype prob-req'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadbba88c0a76e0a517c5",
    "number": 3168,
    "body": "- minor changes",
    "head_branch": "headerless",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add -H to scapy.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadbca88c0a76e0a517c6",
    "number": 3167,
    "body": "The second issue in #3141 could not be reproduced by myself.\r\n\r\n> Mentioned by @WebLabInt via gitter:\r\n> Hi, I m having a problem creating a basic SOME IP service discovery following the example provided https://scapy.readthedocs.io/en/latest/layers/automotive.html?highlight=some%20ip#creating-a-some-ip-sd-message. The SOME IP package is working perfectly, however, the SD packet is not formed correctly thus not recognized as a SD packet by Wireshark and the SOME IP version is not correct. I did a capture with Wireshark reporting those issues http://fuiing.com/share/SD%20prob.png . I will be great if you can support me on this issue, thank you for making Scapy open source, it's really a great tool, have a great day  \r\n",
    "head_branch": "automotive_doc_refactoring_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Automotive-specific documentation (#3167)\n\n* Update Automotive-specific documentation. Fixes #3141\r\n\r\n* apply feedback\r\n\r\n* add myself to Credits"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadbda88c0a76e0a517c7",
    "number": 3163,
    "body": "The NegociateContexts fields of SMB2_Negociate_Protocol_Request_Header and SMB2_Negociate_Protocol_Response_Header are now a FieldListField of ReversePadFields, so that each element starts on an 8-byte aligned offset from the beginning of the packet.\r\nThe whole NegociateContexts field becomes a ConditionalField, which only exists if Dialects contains the value 0x0311, as specified in MS-SMB2 2.2.3 and 2.2.4.\r\nAdds 2 tests ensuring that the field doesn't exist when Dialects doesn't contain 0x0311, and a series of tests checking that a SMB2_Negociate_Protocol_Request_Header crafted without manually adding padding can be correctly dissected.",
    "head_branch": "improve_padding_smb2_negociate_contexts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use ReversePadFields for each element of NegociateContexts\nNegociateContexts becomes ConditionalField depending on dialect value"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadbda88c0a76e0a517c8",
    "number": 3161,
    "body": "Set DialectCount's default value to None so that it is automatically deduced from Dialects' length when crafting a packet, and doesn't conflict with Dialects' default value anymore",
    "head_branch": "fix_smb2_default_dialect_count",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set SMB2 Negociate Request Header default DialectCount value to None\nAnd add corresponding test case"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadbea88c0a76e0a517c9",
    "number": 3160,
    "body": "They've both been EOL for a year and, unlike 2.7, no one really use them.",
    "head_branch": "cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadbfa88c0a76e0a517ca",
    "number": 3159,
    "body": "fixes https://github.com/secdev/scapy/issues/3052\r\n\r\nThis PR uses `Decimal` to be able to compute very precise timestamps",
    "head_branch": "ntp-precision",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix NTP timestamp precision"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc0a88c0a76e0a517cb",
    "number": 3157,
    "body": "The NegociateContexts field of the SMB2_Negociate_Protocol_Request_Header must start on an 8-byte aligned offset, which is currently not implemented correctly, as shown by added test case",
    "head_branch": "fix_smb2_negociate_context_alignment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use a ReversePadField for NegociateContexts in SMB2 Negotiate Request\nAnd not a PadField for Dialects anymore"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc1a88c0a76e0a517cc",
    "number": 3155,
    "body": "This PR fixes Scapy on OpenBSD, FreeBSD and NetBSD. This PR must be merged to address #3100.\r\n\r\nThe commits are currently applied to 4bec6eeb9ca65f5d21b0779a8d9e85e03979c8d6. All tests works fine on NetBSD 9.1, OpenBSD 6.8 (with cryptography 3.3.2), and FreeBSD 12.1.",
    "head_branch": "v245_bsd_fixes",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "On NetBSD, a BPF filter must be attached to the interface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc2a88c0a76e0a517cd",
    "number": 3154,
    "body": "fixes https://github.com/secdev/scapy/issues/3101",
    "head_branch": "netflowdissect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve Netflow padding detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc2a88c0a76e0a517ce",
    "number": 3153,
    "body": "fixes https://github.com/secdev/scapy/issues/3117",
    "head_branch": "ipv6extsegrtlv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update IPv6ExtHdrSegmentRoutingTLV"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc3a88c0a76e0a517cf",
    "number": 3152,
    "body": "fixes https://github.com/secdev/scapy/issues/3115\r\ncloses https://github.com/secdev/scapy/pull/3114",
    "head_branch": "fix-80211",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve GroupManagementCipherSuite detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc4a88c0a76e0a517d0",
    "number": 3150,
    "body": "Fix scapy.contrib.lldp. Add to XStrLenFields argument's length_from lambda if statement so in case that other referenced field is None lambda will not try to perform unhandeled operation on None eg. + integer.\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\nI'm new to the scapy and I have read the CONTRIBUTING.md. If I've missed something I apologize and I would be grateful for guidance on how to improve.\r\nI've not created any new unit tests as I don't add new functionality, but simply fix existing one. If maintainers still would like me to add some I would be happy to do so, but I will need a little bit of a help to make sure that they're resiliant to other changes in scapy.\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nXStrLenField calls lambda from argument 'length_from' when running i2repr. It may happen as it is in the scapy.contrib.lldp that lambda consist of taking value from other field and adjusting it by addition/substraction. In such case if the referenced field has value 'None' it will raise exception TypeError.  This change is adding if statement to simply put '0' as the return of lambda in case the referenced field is None, so we won't try to perform unhandled operation like substracting integer from 'None'.\r\n\r\nfixes #3107\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix for scapy.contrib.lldp. Add to XStrLenField's length_from lambda if statement to avoid performing substraction on None. (#3150)\n\n* Fix scapy.contrib.lldp. Add to XStrLenFields argument's length_from lambda if statement so in case that other referenced field is None lambda will not try to perform unhandeled operation on None eg. + integer.\r\n\r\n* Add tests\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc5a88c0a76e0a517d1",
    "number": 3148,
    "body": "This PR fixes #3133 by returning bytes instead of string.\r\n\r\nFor the maintainers: I checked `hashret()` methods and they return bytes.",
    "head_branch": "Issue_#3133",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure that hashret() returns bytes (#3148)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc6a88c0a76e0a517d2",
    "number": 3144,
    "body": "Started with typing of answeringmachine.\r\n\r\nI'm not so happy, yet. \r\nIn EcuAnsweringMachines I use PacketLists as reply. If I consider this in the base class, the code gets a little messy. \r\n\r\n@gpotter2 Do you have an idea to fix that?\r\n\r\nUnfortunately, I can not overwrite the types of derived classes. \r\nI tried to apply `_T = TypeVar(\"_T\", Packet, PacketList)` to\r\n```\r\n    def make_reply(self, req):\r\n        # type: (Packet) -> _T\r\n        ...\r\n\r\n    def send_reply(self, reply):\r\n        # type: (_T) -> None\r\n        ...\r\n\r\n    def print_reply(self, req, reply):\r\n        # type: (Packet, _T) -> None\r\n```\r\nin order to allow both cases, but I couldn't overwrite make_reply in EcuAnsweringMachine.\r\n\r\nMaybe you have a idea to improve that.",
    "head_branch": "answeringmachine_typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Typing of Answeringmachine (#3144)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc7a88c0a76e0a517d3",
    "number": 3143,
    "body": "- Move libpcap tests to Github actions since our travis suite is pretty much dead\r\n- Only test root with PyPy (the only differences we're testing with PyPy are the `attach_filter` functions.. root only + pypy tests already are super long due to the build-on-install)\r\n- Small Github Actions tweaks\r\n\r\nIt appears that 880d0487c6885a5ddd0c5f747f6a9e0461a35278 has broken libpcap on Linux. This fixes it",
    "head_branch": "libpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move libpcap tests to Github Actions (#3143)\n\n* Enable libpcap tests on GHCI\r\n\r\n* Remove libpcap tests from travis\r\n\r\n* Reduce GHCI timeout accordingly\r\n\r\n* Fix libpcap tests\r\n\r\n* Fix libpcap packet timeout\r\n\r\n* Remove useless export"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc7a88c0a76e0a517d4",
    "number": 3140,
    "body": "Add base classes for a new and clean implementation of automotive scanners and enumerators\r\n",
    "head_branch": "split_3054_scanner_preparation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add base classes of automotive scanners and enumerators (#3140)\n\n* Split #3054: Add base classes for a new and clean implementation of automotive scanners and enumerators"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc8a88c0a76e0a517d5",
    "number": 3139,
    "body": "Just a small PR with independent changes",
    "head_branch": "split_3054_ecu_state_minor_mods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Split #3054: Minor additions to EcuState modifications"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadc9a88c0a76e0a517d6",
    "number": 3137,
    "body": "Reverts secdev/scapy#3136",
    "head_branch": "revert-3136-libpcap",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"Move libpcap tests to Github Actions (#3136)\" (#3137)\n\nThis reverts commit e3de1a2d957c7b0c71acaa3c4a064176bbc51dbf."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadcaa88c0a76e0a517d7",
    "number": 3136,
    "body": "- Move libpcap tests to Github actions since our travis suite is pretty much dead\r\n- Only test root with PyPy (the only differences we're testing with PyPy are the `attach_filter` functions.. root only + pypy tests already are super long due to the build-on-install)\r\n- Small Github Actions tweaks",
    "head_branch": "libpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move libpcap tests to Github Actions (#3136)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadcba88c0a76e0a517d8",
    "number": 3135,
    "body": "- re-enable gmlan tests\r\n- show the duration of each campaign with colors",
    "head_branch": "utscapyi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3135 from gpotter2/utscapyi\n\nDetect long tests UTscapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadcca88c0a76e0a517d9",
    "number": 3134,
    "body": "- disable gmlan tests.\r\n\r\nThey tend to freeze on PyPy2.",
    "head_branch": "disablegmlan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3134 from gpotter2/disablegmlan\n\nDisable GMLAN tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadcda88c0a76e0a517da",
    "number": 3130,
    "body": "This reflects the rfc 38415-f20 with the following\r\nexample frame format:\r\n\r\nBits\t                Number of Octets\r\n7  6  5  4  3  2  1  0\r\n Field 1  |  Field 2          1          Octet 1\r\n Field 3  |  Field 4          2          Octet 2\r\n Field 4 Cont | Spare\t                 Octet 3\r\n          Field 6             2          Octet 4\r\n Field 6 Cont | Padding bits             Octet 5\r\n      Future Extension        0-m\r\n      Padding                 0-3\r\n\r\nSigned-off-by: Raslan Darawsheh <rasland@nvidia.com>\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "gtp_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "GTP: update GTPPDUSessionContainer (#3130)\n\n* gtp: fix GTPPDUSessionContainer layer implementation\n\nSigned-off-by: Raslan Darawsheh <rasland@nvidia.com>\n\n* Improve PR, add test\n\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadcda88c0a76e0a517db",
    "number": 3128,
    "body": "Another split of #3054. ",
    "head_branch": "graph_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Split #3054: Add independant Graph file, including typing and unit tests (#3128)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadcea88c0a76e0a517dc",
    "number": 3127,
    "body": "This PR removes all `x.__class__ == Y` comparisons and replaces them with `isinstance(x, Y)`",
    "head_branch": "cleanup_class_compare",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup __class__ comparisons (#3127)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadcfa88c0a76e0a517dd",
    "number": 3120,
    "body": "",
    "head_branch": "kwp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implementation of KWP2000 (#3120)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd0a88c0a76e0a517de",
    "number": 3118,
    "body": "Just documentation.",
    "head_branch": "doip_api_docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "API documentation for DoIP (#3118)\n\n* API documentation for DoIP\r\n\r\n* disable gmlanutils for non-root tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd1a88c0a76e0a517df",
    "number": 3116,
    "body": "BFD: handle more variants (micro-BFD, seamless BFD), which have the same wire format but are on different UDP ports.\r\n\r\nThe flags field was listed in the wrong order, FlagsField expect the flags in LSB first order.\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together (only one commit)\r\n-   [x] I added unit tests or explained why they are not relevant: No new UT, as this is only refining a existing dissector.\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox`)\r\n-> looks like last second change messed something up.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "BFD: handle more variant\n\nThe flags field was listed in the wrong order, FlagsField expect\nthe flags in LSB first order"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd2a88c0a76e0a517e0",
    "number": 3114,
    "body": "In all my captures, the RSN tag corrupts the following tags because it uses too many bytes. The culprit is the group_management_cipher_suite, which does not appear in Wireshark. \r\nI don't have the full 802.11 spec, but a search in internet revealed that, possibly, both these bits must be set for the descriptor to be present.\r\n",
    "head_branch": "fix-dot11-rsne",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd2a88c0a76e0a517e1",
    "number": 3113,
    "body": "**edited by gpotter2**\r\n\r\nThis PR:\r\n- fix `NamedTuple` (and `PacketList`) pickling on Python < 3.7",
    "head_branch": "pickle_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix PacketList pickling on Python <3.6 (#3113)\n\n* Add pickle test for PacketList\r\n\r\n* test different NamedTuple for pickle\r\n\r\n* Improve pickling\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd3a88c0a76e0a517e2",
    "number": 3112,
    "body": "",
    "head_branch": "gmlan_stable_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve stability of gmlan utils tests (#3112)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd4a88c0a76e0a517e3",
    "number": 3111,
    "body": "## Description\r\n\r\nHi 👋 I ran the [DeepSource](https://deepsource.io/) static analyzer on the forked copy of this repo and found some [interesting code quality issues](https://deepsource.io/gh/ankitdobhal/scapy/issues/). This PR fixes a few of them.\r\n\r\n## Summary of Fixes\r\n\r\n- Remove unnecessary use of comprehension\r\n- Merge `isinstance` calls\r\n- Replace ternary syntax with if expression\r\n- Use `sys.exit()` calls\r\n- Added .deepsource.toml to fix bug risk\r\n\r\n## Type of change\r\n\r\n- [✔] Antipattern\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n## Checklist:\r\n\r\n- [✔] My code follows the style guidelines of this project\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation",
    "head_branch": "fix-bug-risk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Chore : fixed code quality issues (#3111)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd5a88c0a76e0a517e4",
    "number": 3110,
    "body": "## Description\r\n\r\nHi 👋 I ran the [DeepSource](https://deepsource.io/) static analyzer on the forked copy of this repo and found some [interesting code quality issues](https://deepsource.io/gh/ankitdobhal/scapy/issues/). This PR fixes a few of them.\r\n\r\n## Summary of Fixes\r\n\r\n- Remove unnecessary use of comprehension\r\n- Merge `isinstance` calls\r\n- Replace ternary syntax with if expression\r\n- Use `sys.exit()` calls\r\n- Consider merging these comparisons with in\r\n- Added .deepsource.toml to fix bug risk\r\n\r\n## Type of change\r\n\r\n- [✔] Antipattern\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n## Checklist:\r\n\r\n- [✔] My code follows the style guidelines of this project\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation",
    "head_branch": "bug-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd6a88c0a76e0a517e5",
    "number": 3109,
    "body": "- fix https://github.com/secdev/scapy/issues/3093\r\n- use libpcap utils when guessing tcpdump linktype (it will be installed since tcpdump uses libpcap..)",
    "head_branch": "bpf-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve BPF validation with tcpdump"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd7a88c0a76e0a517e6",
    "number": 3105,
    "body": "This PR fixes #3051.",
    "head_branch": "Issue_#3051",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3105 from guedou/Issue_#3051\n\nTest get_if_addr() errors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd8a88c0a76e0a517e7",
    "number": 3103,
    "body": "This PR fixes an issue discovered by the OSS-Fuzz project, and another discovered will reading the code.\r\n",
    "head_branch": "oss-fuzz_31016",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure that there is enough data to parse a SPB  (#3103)\n\n* Ensure that there is enough data to parse a SPB\r\n\r\n* Ensure that there is enough data to parse a packet\r\n\r\n* Explicit warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd9a88c0a76e0a517e8",
    "number": 3099,
    "body": "This PR uses the new EcuState for further utility objects. This includes refactoring of multiple unit tests, which are based on a AnsweringMachine.\r\n\r\nFurthermore, this PR introduces decorators to dynamically extend the protocols UDS and GMLAN with ecu_state and logging functionalities through separated files. This aims to keep the basic protocol description clean, but allows to extend the functionally for certain use cases.",
    "head_branch": "EcuRefactorings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      " Split #3054: Update of Ecu, EcuResponse, EcuSession and EcuAnsweringMachine. Including typing (#3099)\n\n* Split #3054: Update of Ecu, EcuResponse, EcuSession and EcuAnsweringMachine. Including typing\r\n\r\n* Update documentation\r\n\r\n* fix obdscanner tests\r\n\r\n* Update documentation\r\n\r\n* update test\r\n\r\n* update test and docs\r\n\r\n* make api-doc more nice\r\n\r\n* update codespell\r\n\r\n* major cleanup\r\n\r\n* fix code spell\r\n\r\n* fix docs build\r\n\r\n* apply feedback\r\n\r\n* cleanup\r\n\r\n* fix typing\r\n\r\n* fix typing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadd9a88c0a76e0a517e9",
    "number": 3098,
    "body": "**Checklist:**\r\n\r\n-   [Y] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [Y] I squashed commits belonging together\r\n-   [Y] I added unit tests or explained why they are not relevant\r\n-   [Y] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [N/A] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nAdds RPCSEC_GSS as a auth flavor to ONC-RPC RPC_Call based off [rfc2203](https://tools.ietf.org/html/rfc2203)\r\n\r\nTests ran and successfully completed.\r\n```\r\nTests for oncrpc module\r\n━ Run Tue Feb 16 15:22:45 2021 from [test/contrib/oncrpc.uts] by UTscapy\r\n └ Passed=4\r\n └ Failed=0\r\n```\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n",
    "head_branch": "ONCRPC_RPCSEC_GSS",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add RPCSEC_GSS for RPC_Call\n\nupdates add tests\n\nTests for oncrpc module\n━ Run Tue Feb 16 15:22:45 2021 from [test/contrib/oncrpc.uts] by UTscapy\n └ Passed=4\n └ Failed=0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faddaa88c0a76e0a517ea",
    "number": 3097,
    "body": "This PR fixes an issue discovered by the [OSS-Fuzz project](https://google.github.io/oss-fuzz/).",
    "head_branch": "oss-fuzz_30735",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure that the PcapNG interface identifier is valid"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faddba88c0a76e0a517eb",
    "number": 3096,
    "body": "Codecov is displaying this warning. Fix it\r\n\r\n```\r\n==> GitHub Actions detected.\r\n->  Issue detecting commit SHA. Please run actions/checkout with fetch-depth > 1 or set to 0\r\n    project root: .\r\n    Yaml found at: .github/codecov.yml\r\n    -> Found 1 reports\r\n```",
    "head_branch": "codecov",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "GHCI: set fetch-depth=2 for codecov"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faddca88c0a76e0a517ec",
    "number": 3095,
    "body": "- stabilize `sendsniff.uts` tests\r\n  - remove all `time.sleep` and use events instead.\r\n- stabilize `TCP_client` tests\r\n- stabilize tests that use openssl\r\n- update `run_tests.bat`",
    "head_branch": "stabilize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Various stabilizations (#3095)\n\n* Upgrade run_tests.bat\r\n\r\n* Make TCP_client slightly more stable\r\n\r\n* Order TESTFILES in UTscapy\r\n\r\n* Stabilize various tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faddda88c0a76e0a517ed",
    "number": 3094,
    "body": "fix https://github.com/secdev/scapy/issues/2989",
    "head_branch": "dnsfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3094 from gpotter2/dnsfix\n\nFix DNS compression"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faddea88c0a76e0a517ee",
    "number": 3092,
    "body": "Net() & Net6() are really not efficient. This commit implements them using simple data structures, similar to range() objects.\r\n\r\nFor example, it makes it possible to run `'::' in Net6('::/0')`.\r\n",
    "head_branch": "enh-net",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3092 from p-l-/enh-net\n\nEnhance Net() & Net6()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faddfa88c0a76e0a517ef",
    "number": 3091,
    "body": "This PR splits up XCP unit tests in two individual files. One test file (xcp.uts) only contains build and dissect tests. The other test file (xcp_comm.uts) contains a communication test which involves CANSockets. \r\nFurthermore, this PR cleans the CCP unit test file and enables GMLAN utils tests on all machines. These tests should be way more stable through the latest changes on PythonCANSockets, which I want to evaluate through this activation. ",
    "head_branch": "automotive_unit_test_cleanup_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup CCP and XCP tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faddfa88c0a76e0a517f0",
    "number": 3090,
    "body": "When I made the `automaton.py` windows alternative, I re-invented the wheel. I knew there was the `WaitForMultipleObjects` but didn't manage to make it work (freezes). With more experience with python C bindings, here's another take at that.\r\n\r\n- removes our custom `automaton.py` windows implementation and use a much cleaner `WaitForMultipleObjects` approach\r\n- use this function on Windows to receive packets => **We can now select on windows socket.**\r\n- **make windows socket blocking as on Linux**\r\n- with this, the second parameter of the static `select()` function is unused everywhere. Remove it\r\n- Re-use the `ObjectPipe` (automaton.py) implementation in `Pipetools.AutoSource`. They were extremly similar",
    "head_branch": "windows-waitobjs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement proper `select()` on Windows (#3090)\n\n* Implement a proper select.select() on windows\r\n\r\n* Apply p-l- suggestion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade0a88c0a76e0a517f1",
    "number": 3089,
    "body": "This PR is an attempt at fixing the unit tests. We need openssl to support <TLS1.2 because we use it to test our TLS 1.0 and 1.1 implementations",
    "head_branch": "tls-unit-openssl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Unit tests: allow TLS<1.1 in openssl config"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade1a88c0a76e0a517f2",
    "number": 3088,
    "body": "- it's clearer to use the string alias instead of the int values",
    "head_branch": "netflow-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup netflow doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade2a88c0a76e0a517f3",
    "number": 3086,
    "body": "In `scapy.contrib.ikev2` the packet type `IKEv2 Encrypted Fragment`  was wrongly listed as `Encrypted Fragment` where as the class name is `IKEv2_payload_Encrypted_Fragment` (with underscore).\r\n\r\nThis bug results in not detecting any `IKEv2_payload_Encrypted_Fragment` when parsing `IKEv2` packets.\r\n\r\nExample:\r\n```python\r\n>>> from scapy.contrib.ikev2 import *\r\n>>> p = IKEv2() / IKEv2_payload_Encrypted_Fragment()\r\n>>> p.show()\r\n###[ IKEv2 ]### \r\n  init_SPI  = ''\r\n  resp_SPI  = ''\r\n  next_payload= Encrypted Fragment\r\n  version   = 0x20\r\n  exch_type = \r\n  flags     = \r\n  id        = 0\r\n  length    = None\r\n###[ IKEv2 Encrypted Fragment ]### \r\n     next_payload= None\r\n     res       = 0\r\n     length    = None\r\n     frag_number= 1\r\n     frag_total= 1\r\n     load      = ''\r\n\r\n>>> IKEv2(bytes(p)).show()\r\n###[ IKEv2 ]### \r\n  init_SPI  = ''\r\n  resp_SPI  = ''\r\n  next_payload= Encrypted Fragment\r\n  version   = 0x20\r\n  exch_type = \r\n  flags     = \r\n  id        = 0\r\n  length    = 36\r\n###[ IKEv2 Payload ]### \r\n     next_payload= None\r\n     flags     = \r\n     length    = 8\r\n     load      = '\\x00\\x01\\x00\\x01'\r\n```",
    "head_branch": "ikev2-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3086 from peckto/ikev2-fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade3a88c0a76e0a517f4",
    "number": 3083,
    "body": "Another PR to split up #3054 \r\n\r\nThis introduces a much more flexible EcuState object. Later, EcuState objects will be stored in a graph to explore all possible system states of an Ecu. This is why this comparison functions are necessary.",
    "head_branch": "scanner_refactoring_ecu_state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactoring of EcuState object (#3083)\n\n* Refactoring of EcuState object\r\n\r\n* applied feedback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade4a88c0a76e0a517f5",
    "number": 3082,
    "body": "I've seeing pypy and pypy3 CI builds often failing. I couldn't debug this errors, but it looks like something is blocking in the background. \r\nThis PR adds timeouts to blocking functions to ensure they get canceled on errors.",
    "head_branch": "ci_pypy_debug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup some automaton tests (timeouts in join, wait...) (#3082)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade4a88c0a76e0a517f6",
    "number": 3079,
    "body": "",
    "head_branch": "isotp_split",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade5a88c0a76e0a517f7",
    "number": 3078,
    "body": "",
    "head_branch": "isotp_typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Isotp typing (#3078)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade6a88c0a76e0a517f8",
    "number": 3077,
    "body": "Just a minor cleanup",
    "head_branch": "can_constants_cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3077 from polybassa/can_constants_cleanup\n\nCleanup constants of CAN"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade7a88c0a76e0a517f9",
    "number": 3076,
    "body": "This PR fixes #3074.",
    "head_branch": "Issue_#3074",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Compute the IPv4 checksum using  the IP address from a Source Routing… (#3076)\n\n* Compute the IPv4 checksum using  the IP address from a Source Routing Option if any\r\n\r\n* Change the raw representation\r\n\r\n* Filter IPOption_LSRR & IPOption_SSRR instances\r\n\r\n* Use DNS on top of UDP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade8a88c0a76e0a517fa",
    "number": 3075,
    "body": "I've started a new series of documentation improvements. \r\nThis PR improves the API documentation of CAN and PythonCANSockets and adds typing to CAN, PythonCANSockets and NativeCANSockets",
    "head_branch": "Automotive_documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Automotive documentation and Typing [ready] (#3075)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fade9a88c0a76e0a517fb",
    "number": 3072,
    "body": "fix https://github.com/secdev/scapy/issues/3065",
    "head_branch": "destruct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set default self.ins on BPF socket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadeaa88c0a76e0a517fc",
    "number": 3071,
    "body": "* Fix bug in the dissection of Network Reports (introduced in commit cfe00d5c952e9048a40150390e0025b5ceff7228)\r\n* Rename the ZCL direction subfield\r\n* Add unit tests",
    "head_branch": "zigbee-bug-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Zigbee regression (#3071)\n\n* Fix bug in the dissection of Network Reports\n\n* Rename the ZCL direction subfield\n\n* Add a deprecated_fields dictionary"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadeaa88c0a76e0a517fd",
    "number": 3070,
    "body": "This override is not necessary. \r\n\r\nThis PR removes changes from #3054 ",
    "head_branch": "isotp_eq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3070 from polybassa/isotp_eq\n\nRemove custom __eq__ from ISOTP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadeba88c0a76e0a517fe",
    "number": 3069,
    "body": "Another PR to remove changes from #3054 ",
    "head_branch": "iterable_compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadeca88c0a76e0a517ff",
    "number": 3068,
    "body": "This PR tries to remove changes from #3054 ",
    "head_branch": "ecu_renaming",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ecu style maintenance (#3068)\n\n* Rename ECU to Ecu\r\n\r\n* Rename ECUSession to EcuSession\r\n\r\n* Rename ECUResponse to EcuResponse\r\n\r\n* Rename ECU_am to EcuAnsweringMachine\r\n\r\n* Rename ECUSession to EcuSession\r\n\r\n* Rename ECUResponse to EcuResponse\r\n\r\n* Rename ECU_am to EcuAnsweringMachine\r\n\r\n* Renaming ECU to Ecu\r\n\r\n* Rename ECU_State to EcuState"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadeda88c0a76e0a51800",
    "number": 3067,
    "body": "- fix outdated Python2 only example\r\n- fix wrong `StrLenField` example",
    "head_branch": "outdateddoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix outdated doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadeea88c0a76e0a51801",
    "number": 3061,
    "body": " This PR adds a priority queue on python-can sockets to ensure the right order of packets.\r\n\r\nIncorrect order of CAN packets in PythonCANSockets are a long existing\r\nbug in Scapy and probably the reason for most instability in Unit Tests.\r\n\r\nThis PR consists of the following changes:\r\n\t* Use PriorityQueue in python_can Socket Multiplexers\r\n\t* Introduce prio counter to not have message inversion on identical time stamps\r\n\t* enable isotp.uts on non root CI systems to check stability of change\r\n\t* add additional unit test\r\n",
    "head_branch": "python_can_prio_queue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use PriorityQueue internally in PythonCANSockets (#3061)\n\n* This PR adds a priority queue on python-can sockets to ensure the right order of packets.\r\nIncorrect order of CAN packets in PythonCANSockets are a long existing\r\nbug in Scapy and probably the reason for most instability in Unit Tests.\r\n\r\nThis PR consists of the following changes:\r\n\t* Use PriorityQueue in python_can Socket Multiplexers\r\n\t* Introduce prio counter to not have message inversion on identical time stamps\r\n\t* enable isotp.uts on non root CI systems to check stability of change\r\n\t* add additional unit test\r\n\r\n* Enable unstable isotpscan tests to see if this PR has an effect on them\r\n\r\n* Validate if PriorityQueue is causing the stability I'm seeing in the tests\r\n\r\n* Validate again. This time remove prio code which shouldn't had any effect\r\n\r\n* Revert \"Validate again. This time remove prio code which shouldn't had any effect\"\r\n\r\nThis reverts commit bd1d868d0277b7ae43a785c23ebd6e27b3d1b753.\r\n\r\n* Revert \"Validate if PriorityQueue is causing the stability I'm seeing in the tests\"\r\n\r\nThis reverts commit a25c579d0d6b6d99b53a3670ca8d0d8a07f13fbf.\r\n\r\n* disable some long tests\r\n\r\n* fix rebase bug\r\n\r\n* minor addition to __lt__ operator\r\n\r\n* Add a comment why priority is necessary\r\n\r\n* fix unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadefa88c0a76e0a51802",
    "number": 3059,
    "body": "This PR:\r\n- adds core typing to `sendrecv.py`\r\n\r\n~~**Needs: https://github.com/secdev/scapy/pull/3055**~~\r\n\r\nThis is one of the last extremly big & annoying PRs of this kind. There are several parts left but none this central.",
    "head_branch": "mypy-sendrecv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3059 from gpotter2/mypy-sendrecv\n\nCore typing: sendrecv.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf0a88c0a76e0a51803",
    "number": 3058,
    "body": "This PR adds a capability to store `pkt_list` for each session packet which controlled via the `store` parameter to `sniff()`. When Scapy is run in session mode it parses the provided pcap/packetlist into \"session\" packets which have len=None. This PR allows for the storage of the original packets that make up the \"session\" packets in an attached `PacketList` as a class variable `pkt_list`. It is something I have found useful when parsing TCP/HTTP flows.\r\n\r\nIt was done fairly quickly so happy to be advised on how best to update/modify for better compliance. e.g. I wasn't sure if one should add a field to the `Packet` type for this or somewhere else? ",
    "head_branch": "session-pkt_list",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf0a88c0a76e0a51804",
    "number": 3057,
    "body": "- HTTP answers don't necessarily have the same version than the request.",
    "head_branch": "http-ans",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix HTTP hashret"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf1a88c0a76e0a51805",
    "number": 3056,
    "body": "",
    "head_branch": "automotive_unit_test_cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove redundant code in automotive unit tests (#3056)\n\n* Remove redundant code in automotive unit tests\r\n\r\n* Reorder code, add comments and further cleanup\r\n\r\n* Fix Windows builds\r\n\r\n* make headlines in comments\r\n\r\n* update after rebase"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf2a88c0a76e0a51806",
    "number": 3055,
    "body": "This PR contains optimizations to sniff's offline regarding:\r\n- iterables with filters  (we now do not write them down to a temporary file just to read them again) but instead directly write them to tcpdump\r\n- detection of packet lists (we now do not iterate through the whole packet list to check that it is indeed a packet list)\r\n\r\nIt introduces in this regard the `IterSocket` util which acts like a `SuperSocket` over an iterator.\r\n\r\nfixes https://github.com/secdev/scapy/pull/3053",
    "head_branch": "sndrcv-opti",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3055 from gpotter2/sndrcv-opti\n\nOptimize sniff's offline"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf3a88c0a76e0a51807",
    "number": 3054,
    "body": "This PR:\r\n  - changes variable names of automotive utilities to be more compliant\r\n    with python\r\n  - adds typing for various automotive utilities\r\n  - refactors the core of automotive scanners which involve:\r\n\t- Ecu objects\r\n\t- EcuState objects\r\n\t- EcuAnsweringMachines\r\n\t- AutomotiveTestCases\r\n\t- AutomotiveTestCaseExecutors\r\n  - cleans up UDS Scanner, OBD Scanner and GMLAN Scanner\r\n\r\n\r\nSorry that this PR became that big. I hope it is merge-able in some way.",
    "head_branch": "scanner_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf4a88c0a76e0a51808",
    "number": 3053,
    "body": "Minor correction so that the internal `_write_to_pcap` function uses its argument `packet_list` when calling `wrpcap(filename, packets_list)` as opposed to the outer scope `offline` variable.",
    "head_branch": "write_to_pcap-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf5a88c0a76e0a51809",
    "number": 3048,
    "body": "- MatchVariableField is not a list so `count_of` doesn't work, `length_of` is the way to go\r\n- And explicit define byte order, based on homeplugav",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3048 from jessekerkhoven/master\n\nFix HomeplugGP MatchVariableFieldLen"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf6a88c0a76e0a5180a",
    "number": 3047,
    "body": "The issue was reported via oss-fuzz.",
    "head_branch": "oss-fuzz_29099",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf6a88c0a76e0a5180b",
    "number": 3046,
    "body": "- fix #2832",
    "head_branch": "eap-frag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Radius EAP Fragmentation (2832)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf7a88c0a76e0a5180c",
    "number": 3045,
    "body": "This commit fixes a few issues while parsing UpLink and DownLink data payload fields.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "LoRaPHY to LoRaWAN: fixing data payload field issues  (#3045)\n\nCo-authored-by: Sebastien Dudek <sebastien_dudek@trendmicro.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf8a88c0a76e0a5180d",
    "number": 3044,
    "body": "This adds:\r\n- timestamps support on BPF\r\n- structures of `bpf_hdr`\r\n- nanosecond precision on FREEBSD (only on freebsd is it available)\r\n- cleanups\r\n\r\nThis removes:\r\n- native OSX monitor mode support and advises to use `conf.use_pcap = True` instead [TO CHECK]\r\n\r\n## TODO (please help):\r\n\r\n- [x] Test on OSX (CI)\r\n- [x] Test on FreeBSD (VM on HyperV)\r\n- [ ] Test on OpenBSD\r\n- [ ] Test on NetBSD\r\n\r\nAny `sniff()` call will be enough for testing. **Please also check that the timestamps are correctly computed**",
    "head_branch": "cleanup-bpf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadf9a88c0a76e0a5180e",
    "number": 3043,
    "body": " This PR does two things.\r\n\r\nFirst: It enforces that every test with an execution time longer than 10s need to be marked with the keyword long_test.\r\nSecond: Tests with the keyword long_test are only executed with a probability of 10% to save CI credits",
    "head_branch": "UTscapy_long_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadfaa88c0a76e0a5180f",
    "number": 3042,
    "body": "- use `linkcode` instead of `viewcode` in sphinx to point to the Github links\r\n- we need to provide a function inspector for that. We'll use a modified one from `numpy` because it's working extremly well",
    "head_branch": "linkcode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use linkcode instead of viewcode in doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadfba88c0a76e0a51810",
    "number": 3041,
    "body": "- Use the same output stream in UTscapy.\r\n\r\nI realized that we were using two separate stream outputs for UTscapy, which was the reason for the logs to be messed up.",
    "head_branch": "utscapy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3041 from gpotter2/utscapy\n\nFix UTscapy logs sync"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadfca88c0a76e0a51811",
    "number": 3037,
    "body": "The changes only support using scapy as a packet builder.\r\nDissection is not yet implemented.\r\n\r\nI've used https://github.com/secdev/scapy/pull/2215 by @Matheus-Garbelini  as a starting point.\r\n\r\ncloses #2215",
    "head_branch": "add_ble_control_procs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "btle: Add definitions for Bluetooth 5.0 control PDUs (#3037)\n\n* btle: Add definitions for Bluetooth 5.0 control PDUs\r\n\r\nThe changes only support using scapy as a packet builder.\r\nDissection is not yet implemented.\r\n\r\nCo-authored-by: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>\r\n\r\n* Minor cosmetics changes\r\n\r\nCo-authored-by: Matheus Garbelini <mgarbelix@gmail.com>\r\nCo-authored-by: Gabriel <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadfca88c0a76e0a51812",
    "number": 3036,
    "body": "",
    "head_branch": "gmlan_dc_packet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadfda88c0a76e0a51813",
    "number": 3035,
    "body": "",
    "head_branch": "uds_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix default values in UDS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadfea88c0a76e0a51814",
    "number": 3034,
    "body": "",
    "head_branch": "utils_improvement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update PeriodicSenderThread utility to send a list of packets (#3034)\n\n* Update PeriodicSenderThread utility to send a list of packets\r\n\r\n* fix bug"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fadffa88c0a76e0a51815",
    "number": 3033,
    "body": "Minimal additions to catch exceptions in SignalPackets",
    "head_branch": "improve_can_signals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Catch exceptions in CAN signal packets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae00a88c0a76e0a51816",
    "number": 3030,
    "body": "Fix #3018",
    "head_branch": "guedou/issue_3018",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3030 from secdev/guedou/issue_3018\n\nMissing Python3 compatible conversion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae00a88c0a76e0a51817",
    "number": 3029,
    "body": "",
    "head_branch": "import_typing_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove imports of typing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae01a88c0a76e0a51818",
    "number": 3028,
    "body": "Here are the last commits that split layer unit tests out of regression.uts.",
    "head_branch": "uts_split",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Import mock explicitly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae02a88c0a76e0a51819",
    "number": 3027,
    "body": "These flags are used to provide more context for the current PDU.\r\nWireshark can use these to determine the direction of the PDU, the location in an advertising chain etc.\r\nThe additional context can be used by the Wireshark dissector to improve the expect info and provide easier-to-read logs.\r\n\r\nNotes:\r\n * This PR imports `LEBitField` and `LEBitEnumField` defined in the Ethercat layer. This PR has the same use case: There a multibit fields that range over byte boundaries. Those fields where not moved to the common `fields.py` as a result from a discussion in https://github.com/secdev/scapy/pull/569. I'm fine with moving them to `fields.py` as part of this PR. \r\n * This PR breaks the API of `class BTLE_RF` as `flags` is no longer available. This was necessary as some of the fields are multibit fields. I'm not too familiar with Scapy, so I was not able to find a way to preserve the API. Let me know if you have some suggestion on how to preserve it.\r\n\r\nBelow is a code snippet creating a Bluetooth LE Wireshark log demonstrating how the logs become easier to read with the additional provided context:\r\n\r\n```\r\naccess_addr = 0x11111111\r\nadv_addr    = bytes([0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA])\r\nmaster_addr = bytes([0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE])\r\n\r\nadv_ind = BTLE_RF()/BTLE()/BTLE_ADV()/ \\\r\n          BTLE_ADV_IND(AdvA=adv_addr, data=EIR_Hdr(type='complete_local_name')/b'MyAdv')\r\nconnect_ind = BTLE_RF()/BTLE()/BTLE_ADV(PDU_type='CONNECT_REQ')/ \\\r\n              BTLE_CONNECT_REQ(InitA=master_addr, AdvA=adv_addr, AA=access_addr)\r\nm_to_s = BTLE_RF(type=2, rf_channel=1)/BTLE(access_addr=access_addr)/ \\\r\n         BTLE_DATA(SN=0, NESN=0, LLID=1)\r\ns_to_m = BTLE_RF(type=3, rf_channel=1)/BTLE(access_addr=access_addr)/ \\\r\n         BTLE_DATA(SN=0, NESN=0, LLID=1)\r\n\r\npackets = []\r\npackets += adv_ind\r\npackets += connect_ind\r\npackets += m_to_s\r\npackets += s_to_m\r\n\r\nscapy.utils.wrpcap(\"my_log.pcap\", packets)\r\n```\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/23234783/102872308-d3161400-443f-11eb-9714-34e41f824bcf.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/23234783/102871897-49664680-443f-11eb-9781-aeaafad0921f.png)\r\n\r\n",
    "head_branch": "define_btle_rf_rfu_flags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "btle-rf: rfu flags are now defined\n\nThese flags are used to provide more context for the current PDU.\nWireshark can use this to determine the direction of the PDU,\nthe location in an advertising chain etc.\n\nSigned-off-by: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae03a88c0a76e0a5181a",
    "number": 3026,
    "body": "This minor patch allows for providing a `PacketList` to`sniff(offline=my_packet_list)`. The existing behaviour is to fail (\"AttributeError: 'list' object has no attribute 'read'\") when provided with a PacketList.\r\n\r\nThe test suit runs against it ok.\r\n",
    "head_branch": "offline-packetlist-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update to enable offline sniff() to use a PacketList (#3026)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae04a88c0a76e0a5181b",
    "number": 3025,
    "body": "Providing values to Packet.fields, prevents the ability to provide\r\noverloaded_fields using the standard bind_layers() operation.\r\n\r\nWhen using cached fields for Packet setup (do_init_cached_fields()),\r\nensure that the deep-copy initializes the lower priority\r\nself.default_fields and not self.fields.\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\nfixes #3024\r\n\r\n**Test Code**\r\n```\r\n#!/usr/bin/env python3\r\n\r\nfrom scapy.all import *\r\n\r\nclass TestPacket(Packet):\r\n  name = 'TestPacket'\r\n  fields_desc = [\r\n      ByteField('dummy', 1),\r\n  ]\r\n\r\nbind_layers(IP, TestPacket,\r\n            options=[IPOption_Router_Alert()],\r\n)\r\n\r\nether = Ether(dst='00:00:00:11:22:33',\r\n              src='00:00:00:11:11:11')\r\nip = IP(src='192.168.0.1',\r\n        dst='192.168.0.2')\r\ntest = TestPacket()\r\n\r\n# There should be no 'options', just 'src' and 'dst'\r\nprint(ip.fields)\r\nassert('options' not in ip.fields)\r\n\r\nframe = ether / ip / test\r\nassert(len(frame[IP].options) == 1)\r\nassert(isinstance(frame[IP].options[0], IPOption_Router_Alert))\r\nframe.show()\r\n```",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae04a88c0a76e0a5181c",
    "number": 3023,
    "body": "Support all python builtin objects that are interchangeable with bytes (bytearray and memoryview) in payloads.  Ensure that mutable bytearrays are cast to bytes at the same time to prevent unexpected issues.  This applies to `Packet.__div__`, `Packet.__rdiv__`, and `Packet.add_payload()`.\r\n\r\nMore complete fix for #3015.",
    "head_branch": "bytearray",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support bytearray and memoryview as raw payload"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae05a88c0a76e0a5181d",
    "number": 3022,
    "body": "Implement duck typing for raw payloads by unconditionally passing anything that isn't a `Packet` instance through `bytes_encode`.  This means anything that can be converted to `bytes` can be used as a payload without explicitly converting to `bytes` first, not limited to `bytearray`s.  This applies to `Packet.__div__`, `Packet.__rdiv__`, and `Packet.add_payload()`.\r\n\r\nMore complete fix for #3015.",
    "head_branch": "bytearray",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae06a88c0a76e0a5181e",
    "number": 3021,
    "body": "This is very simple change that just adds mapping entry for option 77 for DHCPv4.\r\nWhen it is added then packets with this option are generated correctly.",
    "head_branch": "dhcp-opt-77",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "commented out trace of RandDHCPOptions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae07a88c0a76e0a5181f",
    "number": 3019,
    "body": "@polybassa ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Doc: Fix range for ISOTPScan, second parameter is exclusive"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae08a88c0a76e0a51820",
    "number": 3017,
    "body": "- fix #3015",
    "head_branch": "bytearr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support bytearray in payload"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae09a88c0a76e0a51821",
    "number": 3016,
    "body": "fixes #3008\r\n",
    "head_branch": "bugfix/tp_message_type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix SOME/IP transport protocol message types"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae0aa88c0a76e0a51822",
    "number": 3014,
    "body": "",
    "head_branch": "stab-pipetools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Stabilize pipetool test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae0aa88c0a76e0a51823",
    "number": 3013,
    "body": "- massive cleanup of OPC-DA\r\n- remove duplicated fields. closes https://github.com/secdev/scapy/pull/3011\r\n- document the changes using links to the sections of the rfc.\r\n\r\n***PLEASE, someone explain me the differences between OPC-DA, RPC, DCOM... This entire file is called \"OPC-DA\" but almost only contains stuff from the RPC-DCE spec and from the DCOM spec. HOWEVER, we have another 'dce_rpc' module in scapy. This module defines Conection based RPC whereas the otherone defines conectionless things. What goes where? Should we merge them? Should there be something OPC-DA specific in this file? Last but not least, the DCOM part isn't bound to anything.'***",
    "head_branch": "opcda",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup this nonsense"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae0ba88c0a76e0a51824",
    "number": 3012,
    "body": "- very minor fix so that `TLSClientAutomaton` supports `.stop()` gracefully.",
    "head_branch": "tls-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "TLS client: support STOP event"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae0ca88c0a76e0a51825",
    "number": 3011,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nThis PR contributes to #2862 by removing duplicate packet fields in opc_da.py. \r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is -->\r\nChanges were tested by using 'load_contrib(\"opc_da.py\")' and no syntax errors were thrown. No new functionality was introduced so no new unit tests are required.\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae0da88c0a76e0a51826",
    "number": 3009,
    "body": "fixes #3008\r\n",
    "head_branch": "bugfix/tp_message_type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae0ea88c0a76e0a51827",
    "number": 3007,
    "body": "\r\nFixes #3006\r\n",
    "head_branch": "sendp_busyloop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prevent L2socket from busy spinning reading from the socket on busy hosts\n\nFixes #3006"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae0fa88c0a76e0a51828",
    "number": 3005,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nHello.\r\n \r\nWhile experimenting with Scapy I attempted to perform some HSRP attack on Cisco routers, running the version 2 of the protocol.\r\nIt failed since it looks like only the version 1 is currentlty supported, so I needed to do some changes.\r\nHSRP v2 has not only the version field set to '2' but also has a slightly different header (e.g IPv6 is supported, some fields have not the same size and order...). \r\n\r\nThis PR add support for HSRP version 2.\r\n\r\nThere is a limitation though, about automatically filling the UDP ports when using HSRP v2, according to the version of IP used:\r\n\r\nbind_layers(UDP, HSRPv2, dport=1985, sport=1985) # HSRP v2 with IPv4\r\nbind_layers(UDP, HSRPv2, dport=2029, sport=2029) # HSRP v2 with IPv6\r\n\r\nIf dport / sport are not specified explicitly, 2029 will always be used by default. Since scapy has no way to know which port to chose, the port from the last line will be used. Is there a way to make scapy default to 2029 only if IPv6 is used ?\r\n",
    "head_branch": "hsrp_v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae0fa88c0a76e0a51829",
    "number": 3003,
    "body": "Reverts secdev/scapy#2986",
    "head_branch": "revert-2986-speedup_automotive_tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"Improve runtime of obdscanner.uts\"\n\nThis reverts commit af9537bf5c99f6a2ba646eb170816c259f735ed2."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae10a88c0a76e0a5182a",
    "number": 3002,
    "body": "Update outdated code example in the automotive doc (discussed with @polybassa) + some minor doc fixes\r\n",
    "head_branch": "automotive-doc-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add load_layer to CCP example"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae11a88c0a76e0a5182b",
    "number": 3001,
    "body": "Fix docs issue pointed out by @kylma \r\nThanks a lot!",
    "head_branch": "automotive_doc_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix outdated code example in Automotive documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae12a88c0a76e0a5182c",
    "number": 3000,
    "body": "There is a regression in Python 3.9 with the `find_library()`\r\nfunction:\r\n\r\n    >>> import ctypes.util\r\n    >>> ctypes.util.find_library(\"libc\")\r\n     Traceback (most recent call last):\r\n       File \"<stdin>\", line 1, in <module>\r\n       File \"/usr/lib/python3.9/ctypes/util.py\", line 341, in find_library\r\n         _get_soname(_findLib_gcc(name)) or _get_soname(_findLib_ld(name))\r\n       File \"/usr/lib/python3.9/ctypes/util.py\", line 147, in _findLib_gcc\r\n         if not _is_elf(file):\r\n       File \"/usr/lib/python3.9/ctypes/util.py\", line 99, in _is_elf\r\n         with open(filename, 'br') as thefile:\r\n     FileNotFoundError: [Errno 2] No such file or directory: b'liblibc.a'\r\n\r\nA workaround is to use `find_library(\"c\")` instead. It also works in\r\nolder versions of Python and that's already what's used in\r\n`contrib/isotp.py`.\r\n\r\nPython issue reported here:\r\n https://bugs.python.org/issue42580\r\n\r\nSigned-off-by: Vincent Bernat <vincent@bernat.ch>",
    "head_branch": "fix/ctypes-python3.9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix ctypes usage with Python 3.9\n\nThere is a regression in Python 3.9 with the `find_library()`\nfunction:\n\n    >>> import ctypes.util\n    >>> ctypes.util.find_library(\"libc\")\n     Traceback (most recent call last):\n       File \"<stdin>\", line 1, in <module>\n       File \"/usr/lib/python3.9/ctypes/util.py\", line 341, in find_library\n         _get_soname(_findLib_gcc(name)) or _get_soname(_findLib_ld(name))\n       File \"/usr/lib/python3.9/ctypes/util.py\", line 147, in _findLib_gcc\n         if not _is_elf(file):\n       File \"/usr/lib/python3.9/ctypes/util.py\", line 99, in _is_elf\n         with open(filename, 'br') as thefile:\n     FileNotFoundError: [Errno 2] No such file or directory: b'liblibc.a'\n\nA workaround is to use `find_library(\"c\")` instead. It also works in\nolder versions of Python and that's already what's used in\n`contrib/isotp.py`.\n\nPython issue reported here:\n https://bugs.python.org/issue42580\n\nSigned-off-by: Vincent Bernat <vincent@bernat.ch>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae13a88c0a76e0a5182d",
    "number": 2998,
    "body": "Before:\r\n```\r\nPython 3.6.8 (default, Aug  7 2019, 17:28:10)\r\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-39)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from scapy.all import *\r\n>>> from scapy.contrib.gtp_v2 import *\r\n/usr/local/lib/python3.6/site-packages/scapy/base_classes.py:279: SyntaxWarning: Packet 'GTPHeader' has a duplicated 'SPARE3' field ! If you are using several ConditionalFields, have a look at MultipleTypeField instead ! This will become a SyntaxError in a future version of Scapy !\r\n  warnings.warn(war_msg, SyntaxWarning)\r\n/usr/local/lib/python3.6/site-packages/scapy/base_classes.py:279: SyntaxWarning: Packet 'IE_UCI' has a duplicated 'SPARE' field ! If you are using several ConditionalFields, have a look at MultipleTypeField instead ! This will become a SyntaxError in a future version of Scapy !\r\n  warnings.warn(war_msg, SyntaxWarning)\r\n/usr/local/lib/python3.6/site-packages/scapy/base_classes.py:279: SyntaxWarning: Packet 'IE_Indication' has a duplicated 'Spare' field ! If you are using several ConditionalFields, have a look at MultipleTypeField instead ! This will become a SyntaxError in a future version of Scapy !\r\n  warnings.warn(war_msg, SyntaxWarning)\r\n/usr/local/lib/python3.6/site-packages/scapy/base_classes.py:279: SyntaxWarning: Packet 'IE_Bearer_QoS' has a duplicated 'SPARE' field ! If you are using several ConditionalFields, have a look at MultipleTypeField instead ! This will become a SyntaxError in a future version of Scapy !\r\n  warnings.warn(war_msg, SyntaxWarning)\r\n```\r\n\r\n\r\nAfter:\r\n```\r\nPython 3.6.8 (default, Aug  7 2019, 17:28:10)\r\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-39)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from scapy.all import *\r\n>>> from scapy.contrib.gtp_v2 import *\r\n>>> from scapy.contrib.gtp import *\r\n>>>\r\n```",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove duplicate field warnings from gtpv2 modules (#2998)\n\n* Remove duplicate field warning\n\n* Fix gtpv2 tests to remove duplicate field warning\n\n* Update gtp_v2.py\n\n* Update gtp_v2.py\n\n* Update gtp_v2.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae14a88c0a76e0a5182e",
    "number": 2997,
    "body": "ICMP is blocked by a firewall policy on the Azure runners they use for Github Actions. We can't change that, so we need to work around it.\r\n\r\nThis PR:\r\n- changes ICMP for TCP/Syn in tests that use those packets to test the send/receive features (rather than ICMP itself)\r\n- move default (not libpcap, isotp or warnings) root jobs over to Github Actions\r\n- disable the now single that test ICMP send/receive on Github CI. This test is still enabled on Windows (AppVeyor), Travis builds, and MacOS builds on GithubCI.\r\n- minor fix in `sendrecv` discovered while trying to fix the tests for Github CI.\r\n\r\n**Notes**\r\n- I do not want to encourage triggering too much builds, not only to show respect to the providers that freely give us builds but also to try being future-proof and not run out of credits again. In this regard, I have purposely not enabled root builds for Python 3.6, 3.7 and 3.8 (we had already dropped those on Travis but I don't want to enable them on Github), because it is simply not necessary. We already test 2.7 and 3.9 (and the two pypys) as root. Root builds take more than double the time, I don't want to have too many.\r\n- I am going to restrict the isotp build on Travis to ONLY isotp tests (vcan?...) in a future PR. The full list of tests that will be executed still needs to be established. Indeed, apart from a few tests, it executes the same way as a normal 3.8 root build;\r\n- I am looking into migrating the libpcap test. Will be for a future PR",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Comply to Standard_DS2_v2 ICMP firewall policy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae14a88c0a76e0a5182f",
    "number": 2996,
    "body": "",
    "head_branch": "fix_sendsniff.uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix sendsniff.uts indentation (#2996)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae15a88c0a76e0a51830",
    "number": 2995,
    "body": "Attempt to fix #2994",
    "head_branch": "fix_six_imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Unify six imports in multiple contrib layers (#2995)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae16a88c0a76e0a51831",
    "number": 2993,
    "body": "",
    "head_branch": "minor_gmlan_improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2993 from polybassa/minor_gmlan_improvements\n\nMinor improvements to the gmlan utilities"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae17a88c0a76e0a51832",
    "number": 2991,
    "body": "This commit updates an outdated documentation link in a doc string, and a grammar nit in the documentation itself.\r\n\r\n**Checklist:**\r\n\r\n-   [x] I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n\r\n",
    "head_branch": "fix-new-protocols-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix grammatical typo. (#2991)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae18a88c0a76e0a51833",
    "number": 2986,
    "body": "This PR aims to improve the runtime of one automotive test.",
    "head_branch": "speedup_automotive_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve runtime of obdscanner.uts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae19a88c0a76e0a51834",
    "number": 2985,
    "body": "- move OSX tests to GHCI.\r\n- merge CodeQL tests in our main workflow (cleaner)\r\n\r\nfix https://github.com/secdev/scapy/issues/2971",
    "head_branch": "ghci-osx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "GHCI: OSX & merge CodeQL"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae1aa88c0a76e0a51835",
    "number": 2983,
    "body": "fix https://github.com/secdev/scapy/issues/2974\r\ncloses https://github.com/secdev/scapy/pull/2975",
    "head_branch": "dBm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix dBm computation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae1aa88c0a76e0a51836",
    "number": 2982,
    "body": "Fixes a typo in the example showing how to create a SOME/IP-SD message\r\n```\r\n>>> oa = SDOption_IP4_Endpoint()                                                                                                                                                                                                                               \r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-10-def2c2508e1c> in <module>\r\n----> 1 oa = SDOption_IP4_Endpoint()\r\n\r\nNameError: name 'SDOption_IP4_Endpoint' is not defined\r\n>>> oa = SDOption_IP4_EndPoint()                                                                                                                                                                                                                               \r\n>>>  \r\n```",
    "head_branch": "doc-typo-someipsd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo in the documentation of SOME/IP SD (#2982)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae1ba88c0a76e0a51837",
    "number": 2981,
    "body": "",
    "head_branch": "fix_codespell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Ether and ether to codespell ignore and fixed other codespell issues (#2981)\n\n* Add Ether and ether to codespell ignore\r\n\r\n* Fix codespell"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae1ca88c0a76e0a51838",
    "number": 2979,
    "body": "",
    "head_branch": "DoIP",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implementation of DoIP (ISO 13400) for Scapy [ready for merge] (#2979)\n\n* Implementation of DoIP (ISO 13400) for Scapy\n\n* typing\n\n* remove casts\n\n* minor addition\n\n* minor fixes\n\n* fix padding in DoIP\n\n* fix minor issue in UDS_TesterpresentSender\n\n* fix mypy\n\n* Rebase and fix of comments\n\n* Change pkt[1] to pkt.payload\n\n* Fixed binding\n\n* fixflake\n\n* zip pcaps"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae1da88c0a76e0a51839",
    "number": 2977,
    "body": "@polybassa ",
    "head_branch": "uds_service",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add service RequestFileTransfer to UDS implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae1ea88c0a76e0a5183a",
    "number": 2975,
    "body": "fixes #2974",
    "head_branch": "v2.4.7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae1fa88c0a76e0a5183b",
    "number": 2970,
    "body": "- enable sphinx viewcode module",
    "head_branch": "viewsource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Enable viewsource on RTD"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae20a88c0a76e0a5183c",
    "number": 2969,
    "body": "This PR attempts to move test/contrib into test/scapy/contrib ",
    "head_branch": "move_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae20a88c0a76e0a5183d",
    "number": 2968,
    "body": "some threads are not being closed. Let's find them\r\n\r\n- adds a name to all threads within `scapy/scapy`\r\n- adds a name to all threads in `test/*` except automotive (they use a gazillion threads)",
    "head_branch": "thread-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Name all threads in tests (except automaton)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae21a88c0a76e0a5183e",
    "number": 2967,
    "body": "- minor fix to make sure we don't try to load `tuntap` on windows.\r\n- also took that occasion to reformat `conf.load_layers` so that we don't have to update all 4 lines each time we do a change",
    "head_branch": "tuntap-load",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Only import tuntap layer on platforms that support it"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae22a88c0a76e0a5183f",
    "number": 2966,
    "body": "super minor fixes. I'll self merge those\r\n- unnecesseary `pass`\r\n- missing coma",
    "head_branch": "minor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae23a88c0a76e0a51840",
    "number": 2965,
    "body": "Another approach: keep `RawVal`\r\n\r\n- cleanup `RawVal` and where it's used.\r\n- add documentation about it\r\n- remove unused/broken `field_pos_list`\r\n- make struct type errors display an advice to use `RawVal` \r\n\r\n```python\r\n>>> raw(IP(len=b\"wrong\"))\r\n~/scapy/scapy/fields.py in addfield(self, pkt, s, val)\r\n    203             return s + self.struct.pack(self.i2m(pkt, val))\r\n    204         except struct.error as ex:\r\n--> 205             raise ValueError(\r\n    206                 \"Incorrect type of value for field %s:\\n\" % self.name +\r\n    207                 \"struct.error('%s')\\n\" % ex +\r\n\r\nValueError: Incorrect type of value for field len:\r\nstruct.error('required argument is not an integer')\r\nTo inject bytes into the field regardless of the type, use RawVal. See help(RawVal)\r\n```\r\n\r\ncloses https://github.com/secdev/scapy/issues/2917",
    "head_branch": "fix-rawval",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "RawVal: fix, document, cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae24a88c0a76e0a51841",
    "number": 2964,
    "body": "This PR adds support for the MUD URL Option as specified in [RFC 8520](https://tools.ietf.org/html/rfc8520#section-10). The PR contains an implementation for DHCPv4 and DHCPv6 as well as unit tests for both versions of the protocol.\r\n\r\nAfter reading the documentation and writing the test cases I wasn't entirely sure if the tests actually pass when using the `tox` command and if that is the right place to look for in the first place. Feedback on the test cases in particular is therefore highly appreciated!\r\n\r\n",
    "head_branch": "dhcp-mud-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixup! Add MUD URL option to DHCPv6 layer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae25a88c0a76e0a51842",
    "number": 2963,
    "body": "@polybassa ",
    "head_branch": "isotp_padding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2963 from akorb/isotp_padding\n\nChange padding value to 0xCC to reduce bit stuffing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae26a88c0a76e0a51843",
    "number": 2962,
    "body": "- adds a warning on wrong usage in MultipleTypeField. This technically doesn't break anything but is ugly",
    "head_branch": "mtf-warn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MultipleTypeField: warn on wrong usage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae26a88c0a76e0a51844",
    "number": 2960,
    "body": "This PR adds basic support for IS-IS extensions for Segment Routing, [RFC 8667](https://www.rfc-editor.org/rfc/rfc8667.pdf)\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ]  ~~If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)~~\r\n",
    "head_branch": "tomzhu1/add_sr_isis_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for segment routing IS-IS (#2960)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae27a88c0a76e0a51845",
    "number": 2959,
    "body": "Somehow new enumerator values were not loaded into EnumFields because\r\nthis `if` statement failed.\r\n",
    "head_branch": "fix_observable_dict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix bug introduced by commit f04b0ae1a\n\nSomehow new enumerator values were not loaded into EnumFields because\nthis `if` statement failed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae28a88c0a76e0a51846",
    "number": 2957,
    "body": "I'm trying to find a good typing compromise.\r\n\r\nFor **layers** or **contribs** files, because the type of Packet fields are unknown (doing `src = IP().src` is typed \"Any\"), we are going to need lighter rules if we don't want the entire codebase to become a mess of `cast()` calls.\r\n\r\nThis is a first step towards this balance. I might tweak it more later",
    "head_branch": "mypy-layers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2957 from gpotter2/mypy-layers\n\nLighter MyPy rules for layers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae29a88c0a76e0a51847",
    "number": 2956,
    "body": "",
    "head_branch": "crypto_warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ignore cryptography warnings on python 2.7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae2aa88c0a76e0a51848",
    "number": 2955,
    "body": "Added typing to gmlanutils and cleaned up api documentation. ",
    "head_branch": "gmlan_utils_improvement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanups and typing of gmlanutils (#2955)\n\n* Cleanups and typing of gmlanutils\r\n\r\n* add print statement to debug issue on travis\r\n\r\n* lets see if reordering the test calls influences this bug\r\n\r\n* Remove mypy casts & config\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae2ba88c0a76e0a51849",
    "number": 2954,
    "body": "- as pointed out in https://github.com/secdev/scapy/pull/2863, we are going to need a general type of field to also include the special fields. This PR adds `AnyField` to achieve that.",
    "head_branch": "anyfield",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Introduce AnyField type"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae2ba88c0a76e0a5184a",
    "number": 2953,
    "body": "This PR aligns the folder structure of `test` with the structure of `scapy`.\r\n\r\n(Let's see how bad this fails on CI ;-) )",
    "head_branch": "test_dir_restructure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae2ca88c0a76e0a5184b",
    "number": 2952,
    "body": "- use sphinx 3.0.0+ to have type hints displayed\r\n- replace `sphinx_apidoc_postprocess.py` by sphinx templates\r\n- fix extra quotes being displayed in Packet representation\r\n- ignore `Packet` class attributes when documenting\r\n- improve readability of the API reference index by only displaying the direct submodules",
    "head_branch": "docgen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sphinx: use templates & improve generation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae2da88c0a76e0a5184c",
    "number": 2951,
    "body": "- core typing of:\r\n  - `arch/__init__.py`\r\n  - `arch/common.py`\r\n  - `arch/linux.py`\r\n  - `arch/unix.py`\r\n  - `supersocket.py`\r\n\r\ncloses https://github.com/secdev/scapy/pull/2886",
    "head_branch": "mypy-arch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2951 from gpotter2/mypy-arch\n\nCore typing: arch(linux/unix)/supersocket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae2ea88c0a76e0a5184d",
    "number": 2950,
    "body": "Changed `readpcap` method to `rdpcap` as the `readpcap` is no longer available.\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo in installation.rst (#2950)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae2fa88c0a76e0a5184e",
    "number": 2949,
    "body": "This PR implements the idea from #2746.",
    "head_branch": "SndRcvList_namedtuples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2949 from guedou/SndRcvList_namedtuples\n\nUse namedtuples in SndRcvList() to simplify packets manipulation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae30a88c0a76e0a5184f",
    "number": 2947,
    "body": "This PR adds standalone IPv6 unit tests.",
    "head_branch": "uts_ipv6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone IPv6 unit tests (#2947)\n\n* Standalone IPv6 unit tests\r\n\r\nCo-authored-by: Phil <phil@secdev.org>\r\nCo-authored-by: Gabriel <gabriel@potter.fr>\r\nCo-authored-by: Pierre LALET <pierre.lalet@cea.fr>\r\nCo-authored-by: Harald Albrecht <hidden@hidden.org>\r\nCo-authored-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>\r\nCo-authored-by: Mathieu Xhonneux <m.xhonneux@gmail.com>\r\n\r\n* IPv6 unit tests updated\r\n\r\nCo-authored-by: Phil <phil@secdev.org>\r\nCo-authored-by: Gabriel <gabriel@potter.fr>\r\nCo-authored-by: Pierre LALET <pierre.lalet@cea.fr>\r\nCo-authored-by: Harald Albrecht <hidden@hidden.org>\r\nCo-authored-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>\r\nCo-authored-by: Mathieu Xhonneux <m.xhonneux@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae30a88c0a76e0a51850",
    "number": 2946,
    "body": "I realized that if a DNS packet was dissected its compressed form, then recompressed, `dns_compress` could crash because the raw form it would be using was the cached one. The fix is trivial",
    "head_branch": "dns_clear_cache",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Clear cache in dns_compress"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae31a88c0a76e0a51851",
    "number": 2945,
    "body": "I realized that if a DNS packet was dissected its compressed form, then recompressed, `dns_compress` could crash because the raw form it would be using was the cached one. The fix is trivial",
    "head_branch": "dns_clear_cache",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae32a88c0a76e0a51852",
    "number": 2944,
    "body": "This PR fixes formatting of an exception message.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing space in a message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae33a88c0a76e0a51853",
    "number": 2943,
    "body": "This PR adds standalone units tests for the Radius protocol.",
    "head_branch": "uts_radius",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone Radius unit tests\n\nCo-authored-by: Pierre Lorinquer <pierre.lorinquer@ssi.gouv.fr>\nCo-authored-by: Gabriel <gabriel@potter.fr>\nCo-authored-by: Adam Karpierz <akarpie@ra.rockwell.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae34a88c0a76e0a51854",
    "number": 2941,
    "body": "@guedou Here you go. I made individual files.",
    "head_branch": "netbios_uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone Skinny unit tests\n\nCo-authored-by: Gabriel Potter <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae35a88c0a76e0a51855",
    "number": 2940,
    "body": "Co-authored-by: Guillaume Valadon <guillaume.valadon@ssi.gouv.fr>\r\nCo-authored-by: Gabriel Potter <gabriel@potter.fr>\r\nCo-authored-by: Lucas Pascal <lpascal@quarkslab.com>\r\nCo-authored-by: Pierre LALET <pierre.lalet@cea.fr>\r\n",
    "head_branch": "sctp_uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone sctp unit tests\n\nCo-authored-by: Guillaume Valadon <guillaume.valadon@ssi.gouv.fr>\nCo-authored-by: Gabriel Potter <gabriel@potter.fr>\nCo-authored-by: Lucas Pascal <lpascal@quarkslab.com>\nCo-authored-by: Pierre LALET <pierre.lalet@cea.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae35a88c0a76e0a51856",
    "number": 2939,
    "body": "This PR adds standalone PPP unit tests.",
    "head_branch": "uts_ppp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone PPP unit tests\n\nCo-authored-by: Phil <phil@secdev.org>\nCo-authored-by: Gabriel <gabriel@potter.fr>\nCo-authored-by: Guillaume Valadon <guillaume@valadon.net>\nCo-authored-by: Pierre LALET <pierre.lalet@cea.fr>\nCo-authored-by: Trong-Vu Tran <trong-vu.tran@student.uclouvain.be>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae36a88c0a76e0a51857",
    "number": 2937,
    "body": "Quick fix of bfd.BFD.mysummary as it displayed twice \"my_discrimator\".\r\nAlso added BFD state as it is a useful info to know the state of the BFD session.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2937 from christophefontaine/master\n\nFix contrib.bfd.BFD summary"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae37a88c0a76e0a51858",
    "number": 2936,
    "body": "- add support for `MultipleTypeField` to `_pkt_ls` -> `ls()` + the online doc will now display extra info for `MultipleTypeField`",
    "head_branch": "special_fields",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add MultipleTypeField support to ls()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae38a88c0a76e0a51859",
    "number": 2935,
    "body": "sock_fprog is different from bpf_program in that its length field is\r\nushort instead of int. This results in a different layout on big-endian\r\nmachines.\r\n\r\nFix by defining sock_fprog and copying field values from bpf_program.\r\n\r\nIn theory sock_filter and bpf_insn could be affected too, but in\r\npractice they are the same.\r\n\r\nSigned-off-by: Ilya Leoshkevich <iii@linux.ibm.com>",
    "head_branch": "sock_fprog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2935 from iii-i/sock_fprog\n\nUse sock_fprog instead of bpf_program on Linux"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae39a88c0a76e0a5185a",
    "number": 2934,
    "body": "Co-authored-by: Gabriel Potter <gabriel@potter.fr>\r\nCo-authored-by: Phil <phil@secdev.org>\r\n",
    "head_branch": "tftp_unittests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2934 from polybassa/tftp_unittests\n\nStandalone TFTP unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae3aa88c0a76e0a5185b",
    "number": 2933,
    "body": "While investigating how to reduce unit tests running times, I discovered that LLDP and BGP ones are failing.",
    "head_branch": "uts_fixe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2933 from guedou/uts_fixe\n\nUnit tests fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae3aa88c0a76e0a5185c",
    "number": 2932,
    "body": "This PR moves NetFlow unit tests to a dedicated uts file.",
    "head_branch": "uts_netflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2932 from guedou/uts_netflow\n\nStandalone NetFlow unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae3ba88c0a76e0a5185d",
    "number": 2931,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n**Description**\r\nJust changes the \"Type\" field for the 1.3 SignatureAlgorithmsCert extension to the right type\r\nIt's a super small change, but I was playing around with TLS extensions when I noticed it.\r\n\r\nfixes #2930 <!-- (add issue number here if appropriate, else remove this line) -->",
    "head_branch": "Fix_Signature_Algs_Cert_Type_Mismatch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2931 from GSBhub/Fix_Signature_Algs_Cert_Type_Mismatch\n\nTLS1.3 SignatureAlgorithmsCert Fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae3ca88c0a76e0a5185e",
    "number": 2929,
    "body": "- fix https://github.com/secdev/scapy/issues/2752",
    "head_branch": "tls-x25519-ecdh",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support x25519 curve in ECDH"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae3da88c0a76e0a5185f",
    "number": 2928,
    "body": "Co-authored-by: Gabriel Potter <gabriel@potter.fr>\r\nCo-authored-by: Guillaume Valadon <guillaume@valadon.net>\r\nCo-authored-by: Pierre LALET <pierre.lalet@cea.fr>\r\nCo-authored-by: Phil <phil@secdev.org>\r\nCo-authored-by: Robin Jarry <robin.jarry@6wind.com>\r\n",
    "head_branch": "automation_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2928 from polybassa/automation_tests\n\nStandalone Automaton tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae3ea88c0a76e0a51860",
    "number": 2927,
    "body": "",
    "head_branch": "SNMP-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae3fa88c0a76e0a51861",
    "number": 2926,
    "body": "Co-authored-by: Guillaume Valadon <guillaume.valadon@ssi.gouv.fr>\r\nCo-authored-by: Gabriel Potter <gabriel@potter.fr>\r\nCo-authored-by: Matthew Smith <mgsmith@netgate.com>",
    "head_branch": "VRRP_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone VRRP tests\n\nCo-authored-by: Guillaume Valadon <guillaume.valadon@ssi.gouv.fr>\nCo-authored-by: Gabriel Potter <gabriel@potter.fr>\nCo-authored-by: Matthew Smith <mgsmith@netgate.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae3fa88c0a76e0a51862",
    "number": 2925,
    "body": "I resolved the syntax warnings in the VQP contrib file by merging two conditional fields with the same value and combining their lambda evaluation functions. No unit tests were added since I didn't add any functionality.\r\n\r\nPartly fixes #2862\r\n",
    "head_branch": "vqp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae40a88c0a76e0a51863",
    "number": 2924,
    "body": "I just changed the name for the name_of_station field in DCP Identify and Set Requests.\r\n\r\nI thought I might be able to combine the two duplicates but they differ in their length_from lambda function and I didn't see a way for me to combine the two into one conditional field. I had a look at some Profinet resources and I think it makes sense just to just specify this name_of_station field is for DCP identify and set requests. I didn't add any unit tests since I didn't add any functionality.\r\n\r\nPartly fixes #2862\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae41a88c0a76e0a51864",
    "number": 2923,
    "body": "- upgrade to mypy 0.790",
    "head_branch": "mypy-0790",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade to mypy 0.790"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae42a88c0a76e0a51865",
    "number": 2922,
    "body": "This PR moves ipsec.uts to the new location, and splits ISAKMP tests from regression.uts.",
    "head_branch": "uts_ipsec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2922 from guedou/uts_ipsec\n\nStandalone IPsec and ISAKMP unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae43a88c0a76e0a51866",
    "number": 2921,
    "body": "This is just a inconsistency I suggest to be fixed. The remain value is only applicable to the StrField itself but not to the PacketField. This becomes visible as one checks where remain is used inside StrField. It's used only in the method getfield(), which is overwritten by PacketField(). In the overwritten method, the remain is unused. The present remain is a local variable! \r\n\r\nI have to ask for help! The last commit I did modified the class BGPRouteRefresh. Originally, there was given a lambda where actually the remain (int) parameter was expected. The remain is treated by StrField and remains unused in PacketField. Handing over the lambda will not harm, but whom is expected to call the lambda? Also function call executed through the lambda is invoked at no other place.\r\n\r\nI kept it for now, but now the design is really broken. I am unsure on how to continue as this is beyond my understanding.\r\n\r\nfixes #2902 \r\n",
    "head_branch": "Remove_remain_from_PacketField_init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove Remain parameter from PacketField.__init__() (#2921)\n\n* Remove Remain parameter from PacketField.__init__()\r\n\r\n* Fix BGP safi/afi\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae44a88c0a76e0a51867",
    "number": 2920,
    "body": "See https://github.com/secdev/scapy/issues/2919\r\n\r\nBuilds are failing https://ci.appveyor.com/project/secdev/scapy/builds/35988133",
    "head_branch": "crypto-openssl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae45a88c0a76e0a51868",
    "number": 2918,
    "body": "**Rationale: https://github.com/secdev/scapy/issues/2917**\r\nThose things are clearly legacy leftovers. They have no use in scapy.\r\n\r\nfixes https://github.com/secdev/scapy/issues/2917\r\n",
    "head_branch": "remove-rawval",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae45a88c0a76e0a51869",
    "number": 2916,
    "body": "This PR moves HTTP test to a dedicated file.",
    "head_branch": "uts_http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae46a88c0a76e0a5186a",
    "number": 2915,
    "body": "Co-authored-by: Pierre Lalet <pierre@droids-corp.org>, <pierre.lalet@cea.fr>\r\nCo-authored-by: Pierre Lorinquer <pierre.lorinquer@ssi.gouv.fr>\r\nCo-authored-by: Neurocinetics <0901653@student.hr.nl>\r\nCo-authored-by: Gabriel Potter <gabriel@potter.fr>\r\nCo-authored-by: Guillaume Valadon <guillaume.valadon@netatmo.com>\r\n",
    "head_branch": "ntp_uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone NTP unit tests (#2915)\n\n\r\nCo-authored-by: Phil <phil@secdev.org>\r\nCo-authored-by: Pierre Lalet <pierre@droids-corp.org>, <pierre.lalet@cea.fr>\r\nCo-authored-by: Pierre Lorinquer <pierre.lorinquer@ssi.gouv.fr>\r\nCo-authored-by: Neurocinetics <0901653@student.hr.nl>\r\nCo-authored-by: Gabriel Potter <gabriel@potter.fr>\r\nCo-authored-by: Guillaume Valadon <guillaume.valadon@netatmo.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae47a88c0a76e0a5186b",
    "number": 2914,
    "body": "Co-authored-by: Gabriel Potter <gabriel@potter.fr>\r\nCo-authored-by: Pierre Lalet <pierre.lalet@cea.fr>\r\nCo-authored-by: Guillaume Valadon <guillaume@valadon.net>\r\nCo-authored-by: Michael Farrell <micolous+git@gmail.com>\r\nCo-authored-by: Thomas Faivre <thomas.faivre@6wind.com>\r\n",
    "head_branch": "random_uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalon random objects unit tests\n\nCo-authored-by: Gabriel Potter <gabriel@potter.fr>\nCo-authored-by: Pierre Lalet <pierre.lalet@cea.fr>\nCo-authored-by: Guillaume Valadon <guillaume@valadon.net>\nCo-authored-by: Michael Farrell <micolous+git@gmail.com>\nCo-authored-by: Thomas Faivre <thomas.faivre@6wind.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae48a88c0a76e0a5186c",
    "number": 2913,
    "body": "Co-authored-by: Allain Legacy <allain.legacy@windriver.com>\r\nCo-authored-by: Florian Maury <florian.maury@ssi.gouv.fr>\r\nCo-authored-by: Gabriel Potter <gabriel@potter.fr>\r\nCo-authored-by: StrydeAlpha <fofo.piedra@gmail.com>\r\nCo-authored-by: Robin Jarry <robin-jarry@users.noreply.github.com>\r\nCo-authored-by: Pierre Lalet <pierre@droids-corp.org>, <pierre.lalet@cea.fr>",
    "head_branch": "vxlan_uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2913 from polybassa/vxlan_uts\n\nStandalone VXLAN unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae49a88c0a76e0a5186d",
    "number": 2912,
    "body": "I often find myself running `./run_tests` because finding the correct tox environment is annoying, and because I often need too many `-K` options to make sure it runs properly on my machine. This PR fixes that\r\n\r\n- Calling `./run_tests` with no arguments will now automatically call `tox -e ... -K manufdb -K wireshark...` with the correct environment. (NON ROOT tests only because we want it to be fast-ish). We re-use the `./config/ci/test.sh` script for that.\r\n- this should also be the recommanded way to test scapy for package maintainers, as it's very quick and still gives a good idea of whether scapy works or not.\r\n\r\n**Moved to https://github.com/secdev/scapy/pull/2933**\r\n- ~~Bug fix: UTscapy would exit on 0 (success) if an invalid line was found in a `.uts` file.~~\r\n- ~~Bug fix: two misplaced leftovers in the uts files~~\r\n- ~~Bug fix: BGP metaclasses were called in the wrong order~~",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Unit tests: support for plain ./run_tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae4aa88c0a76e0a5186e",
    "number": 2911,
    "body": "- typing of `scapy/utils.py`\r\n- fix `in6_getRandomizedIfaceId` which was pretty broken.\r\n- ~~requires https://github.com/secdev/scapy/pull/2908~~",
    "head_branch": "mypy-utils6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Core typing: utils6.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae4aa88c0a76e0a5186f",
    "number": 2910,
    "body": "The HTTP unit tests are the big part of this PR.",
    "head_branch": "uts_standalone_http_mip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2910 from guedou/uts_standalone_http_mip\n\nStandalone HTTP & RIP unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae4ba88c0a76e0a51870",
    "number": 2909,
    "body": "The length of the invisible characters used for coloring was taken into account when padding the fields in `show()`. This PR fixes that. This bug is probably as old as scapy itself\r\n\r\nOn master:\r\n![image](https://user-images.githubusercontent.com/10530980/97093607-b3d05580-164d-11eb-83fa-3f0e8323eda7.png)\r\n\r\nThis PR:\r\n![image](https://user-images.githubusercontent.com/10530980/97093585-88e60180-164d-11eb-8d0f-0473989af133.png)",
    "head_branch": "color_padding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix show() padding on colored themes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae4ca88c0a76e0a51871",
    "number": 2908,
    "body": "- Core typing: `scapy/interfaces.py` and `scapy/sessions.py`\r\n- ~~**requires https://github.com/secdev/scapy/pull/2903**~~",
    "head_branch": "mypy-interfaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Core typing: scapy/sessions.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae4da88c0a76e0a51872",
    "number": 2907,
    "body": "This PR fixes two very small issues I found while fixing some type hints:\r\n- `plain_str` could be used instead of a weird hack in some cases\r\n- an OPENBSD patch could likely be made cleaner. See https://github.com/secdev/scapy/pull/2137 to remember the reasons for this patch (to discuss?)",
    "head_branch": "cleanups",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve OPENBSD DLT_RAW/IP fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae4ea88c0a76e0a51873",
    "number": 2906,
    "body": "This PR removes a vim swap file added in #2851 ",
    "head_branch": "remove_swp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove a swp file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae4fa88c0a76e0a51874",
    "number": 2905,
    "body": "This PR moves and renames DNS related uts files.",
    "head_branch": "uts_dns_split",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2905 from guedou/uts_dns_split\n\nRenaming DNS related unit tests files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae4fa88c0a76e0a51875",
    "number": 2904,
    "body": "Change flags for the `GetAdapterAdresses` adding `GAA_FLAG_INCLUDE_ALL_INTERFACES` so that it is possible to get and work with all interfaces on Windows.\r\n\r\nfixes #2900\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2904 from DuzaBF/patch-1\n\nAdd GAA_FLAG_INCLUDE_ALL_INTERFACES"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae50a88c0a76e0a51876",
    "number": 2903,
    "body": "I realize now that we should have done this one MUCH earlier.\r\n\r\n- add typing to `base_classes`. **Disclaimer:** metaclasses are really poorly supported in Mypy. They have been heavily ignored. Especially for instance when accessing fields that have not been defined yet `dct[..]`, where they simply cannot be typed yet.\r\n- `Packet_metaclass` shouldn't be used as the type for `Packet` (as it was done) because even though `Type[Packet]` inherits `Packet_metaclass`, `Packet_metaclass` doesn't provide `name` and `fields_desc` attributes. So this PR leads to changing all `Packet_metaclass` to `Type[Packet]` where it made sense. Same for `Field_metaclass`\r\n- add typing to `extlib` and `error`\r\n- there are quite a lot of small bugs fixed but I didn't note them down.\r\n- ~~**requires https://github.com/secdev/scapy/pull/2865**~~",
    "head_branch": "mypy-base_classes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Type: base_classes/extlib/error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae51a88c0a76e0a51877",
    "number": 2901,
    "body": "As discussed in #2897 \r\n\r\nfix https://github.com/secdev/scapy/issues/2897",
    "head_branch": "fix_uds_conditionalField",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2901 from polybassa/fix_uds_conditionalField\n\nFix ConditionalField in UDS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae52a88c0a76e0a51878",
    "number": 2899,
    "body": "This PR removes the duplicated fields of the PFCP protocol as described in #2862.\r\n\r\nTested via the CLI and no warnings seen when load_contrib(\"pfcp\") is run.",
    "head_branch": "pfcp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Renaming duplicate spare field for pfcp (#2899)\n\n* Renaming duplicate spare field for pfcp\r\n\r\n* Fixing pep8 error with line length\r\n\r\nCo-authored-by: Geoff Newson <geoff.newson@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae53a88c0a76e0a51879",
    "number": 2898,
    "body": "LLTD, MGCP & Mobile IP standalone unit tests.",
    "head_branch": "uts_standalone_lltd_mgcp_mobileip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2898 from guedou/uts_standalone_lltd_mgcp_mobileip\n\nStandalone unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae54a88c0a76e0a5187a",
    "number": 2895,
    "body": "- add support for multiple SHB blocks in PCAPNG\r\n- add tail processing for the first SHB block (checking the double length equality) by reusing existing code.\r\n- Bug: the first SHB blocklen was only parsed as big-endian.\r\n\r\nfixes https://github.com/secdev/scapy/issues/2894",
    "head_branch": "2894-blocklen-incorrect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "PCAPNG dissection improvements (#2895)\n\n- Fix blocklen computation\r\n- Improve SHB read\r\n- Improve error managment\r\n\r\nCo-authored-by: Michael Brandeis <michael.brandeis@gmail.com>\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae55a88c0a76e0a5187b",
    "number": 2893,
    "body": "This PR adds standalone HSRP, LLMNR & L2TP tests.",
    "head_branch": "uts_standalone_hsrp_l2tp_mip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2893 from guedou/uts_standalone_hsrp_l2tp_mip\n\nStandalone unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae55a88c0a76e0a5187c",
    "number": 2892,
    "body": "- make UTscapy raise an error if a unit test file contains malformed content.\r\n\r\nJust to make sure we don't miss anything while migrating the tests",
    "head_branch": "utscapy-inv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "UTscapy: raise an error if a UTS file is invalid"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae56a88c0a76e0a5187d",
    "number": 2891,
    "body": "This PR move the 802.11 unit tests to a standalone file.",
    "head_branch": "uts_dot11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone Dot11 unit tests\n\nCo-authored-by: Phil <phil@secdev.org>\nCo-authored-by: Pierre Lorinquer <pierre.lorinquer@ssi.gouv.fr>\nCo-authored-by: Gabriel <gabriel@potter.fr>\nCo-authored-by: alexandre.tanem@orange.fr <alexandre.tanem@orange.fr>\nCo-authored-by: Pierre LALET <pierre.lalet@cea.fr>\nCo-authored-by: hennadii.demchenko <hennadii.demchenko@globallogic.com>\nCo-authored-by: Adrian Granados <adriangranados@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae57a88c0a76e0a5187e",
    "number": 2890,
    "body": "Although DHCP6OptIA_PD.iapdopt is defined as PacketListField, scapy is\r\nparsing one DHCP6OptIAPrefix option as the payload of the previous\r\nprefix option. This patch fixes that by telling scapy that there is no\r\npayload to DHCP6OptIAPrefix option. This is similar to how the same\r\nproblem is handled with DHCP6OptIAAddress options.\r\n\r\nTesting:\r\nAdded unit tests.\r\n\r\nWithout this patch:\r\n```\r\n    \\iapdopt   \\\r\n     |###[ DHCP6 Option - IA_PD Prefix option ]###\r\n     |  optcode   = OPTION_IAPREFIX\r\n     |  optlen    = 25\r\n     |  preflft   = 150\r\n     |  validlft  = 450\r\n     |  plen      = 80\r\n     |  prefix    = ::1:0:0:0\r\n     |  iaprefopts= ''\r\n     |###[ DHCP6 Option - IA_PD Prefix option ]###\r\n     |     optcode   = OPTION_IAPREFIX\r\n     |     optlen    = 25\r\n     |     preflft   = 0\r\n     |     validlft  = 0\r\n     |     plen      = 80\r\n     |     prefix    = ::2:0:0:0\r\n     |     iaprefopts= ''\r\n```\r\nWith this patch:\r\n```\r\n    \\iapdopt   \\\r\n     |###[ DHCP6 Option - IA_PD Prefix option ]###\r\n     |  optcode   = OPTION_IAPREFIX\r\n     |  optlen    = 25\r\n     |  preflft   = 150\r\n     |  validlft  = 450\r\n     |  plen      = 80\r\n     |  prefix    = ::1:0:0:0\r\n     |  iaprefopts= ''\r\n     |###[ DHCP6 Option - IA_PD Prefix option ]###\r\n     |  optcode   = OPTION_IAPREFIX\r\n     |  optlen    = 25\r\n     |  preflft   = 0\r\n     |  validlft  = 0\r\n     |  plen      = 80\r\n     |  prefix    = ::2:0:0:0\r\n     |  iaprefopts= ''\r\n```\r\n\r\nIssue: https://github.com/secdev/scapy/issues/2880\r\nSigned-off-by: Bharadwaj Avva <vv.bharadwaj@gmail.com>\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "dhcp6: Make prefixes in DHCP6OptIA_PD.iapdopt get parsed as list\n\nAlthough DHCP6OptIA_PD.iapdopt is defined as PacketListField, scapy is\nparsing one DHCP6OptIAPrefix option as the payload of the previous\nprefix option. This patch fixes that by telling scapy that there is no\npayload to DHCP6OptIAPrefix option. This is similar to how the same\nproblem is handled with DHCP6OptIAAddress options.\n\nTesting:\nAdded unit tests.\n\nWithout this patch:\n    \\iapdopt   \\\n     |###[ DHCP6 Option - IA_PD Prefix option ]###\n     |  optcode   = OPTION_IAPREFIX\n     |  optlen    = 25\n     |  preflft   = 150\n     |  validlft  = 450\n     |  plen      = 80\n     |  prefix    = ::1:0:0:0\n     |  iaprefopts= ''\n     |###[ DHCP6 Option - IA_PD Prefix option ]###\n     |     optcode   = OPTION_IAPREFIX\n     |     optlen    = 25\n     |     preflft   = 0\n     |     validlft  = 0\n     |     plen      = 80\n     |     prefix    = ::2:0:0:0\n     |     iaprefopts= ''\nWith this patch:\n    \\iapdopt   \\\n     |###[ DHCP6 Option - IA_PD Prefix option ]###\n     |  optcode   = OPTION_IAPREFIX\n     |  optlen    = 25\n     |  preflft   = 150\n     |  validlft  = 450\n     |  plen      = 80\n     |  prefix    = ::1:0:0:0\n     |  iaprefopts= ''\n     |###[ DHCP6 Option - IA_PD Prefix option ]###\n     |  optcode   = OPTION_IAPREFIX\n     |  optlen    = 25\n     |  preflft   = 0\n     |  validlft  = 0\n     |  plen      = 80\n     |  prefix    = ::2:0:0:0\n     |  iaprefopts= ''\n\nSigned-off-by: Bharadwaj Avva <vv.bharadwaj@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae58a88c0a76e0a5187f",
    "number": 2889,
    "body": "See https://stackoverflow.com/q/34619790/2050020",
    "head_branch": "lazy_logging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use lazy formatting in logging functions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae59a88c0a76e0a51880",
    "number": 2888,
    "body": "- adds support for the TLV field in RadioTap: https://www.radiotap.org/fields/TLV.html\r\n- moves `OUIField` to `fields.py` because it could be used elsewhere (and was used extensively)",
    "head_branch": "radiotap-tlvs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2888 from gpotter2/radiotap-tlvs\n\nAdd support for Radiotap TLVs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae5aa88c0a76e0a51881",
    "number": 2887,
    "body": "This PR moves EAP unit tests to a dedicated file.",
    "head_branch": "uts_eap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone EAP unit tests\n\nCo-authored-by: Pierre Lorinquer <pierre.lorinquer@ssi.gouv.fr>\nCo-authored-by: gpotter2 <gabriel@potter.fr>\nCo-authored-by: Pierre LALET <pierre.lalet@cea.fr>\nCo-authored-by: Adam Karpierz <akarpie@ra.rockwell.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae5ba88c0a76e0a51882",
    "number": 2886,
    "body": "",
    "head_branch": "supersocket_typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae5ba88c0a76e0a51883",
    "number": 2885,
    "body": "",
    "head_branch": "can_typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2885 from polybassa/can_typing\n\nadd typing for CAN"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae5ca88c0a76e0a51884",
    "number": 2884,
    "body": "",
    "head_branch": "hsfz-typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add typing for HSFZ (#2884)\n\n* Add typing for HSFZ\n\n* change import from typing to scapy.compat\n\n* fix Packet_metaclass import"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae5da88c0a76e0a51885",
    "number": 2883,
    "body": "",
    "head_branch": "gmlan_cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae5ea88c0a76e0a51886",
    "number": 2881,
    "body": "Some existing `.uts` files are moved to `test/scapy/layers/` when relevant.",
    "head_branch": "uts_organization",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Unit tests housekeeping"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae5fa88c0a76e0a51887",
    "number": 2878,
    "body": "- I feel like I've merged those PRs too quick, so to do those layers justice I've improved them a bit & added the RFC references.",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve GTP & RPL metrics packets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae5fa88c0a76e0a51888",
    "number": 2877,
    "body": "This PR removes the duplicated fields of the GTP v2 protocol as described in #2862.\r\n\r\nTested via the CLI and no warnings seen when load_contrib(\"gtp_v2\") is run.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae60a88c0a76e0a51889",
    "number": 2875,
    "body": "This PR removes the duplicated fields of the GTP protocol as described in https://github.com/secdev/scapy/issues/2862.\r\n\r\nTested via the CLI and no warnings seen when `load_contrib(\"gtp\")` is run.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2875 from gnewson/master\n\nRemove duplicated fields from GTP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae61a88c0a76e0a5188a",
    "number": 2874,
    "body": "This PR moves DHCP and DNS unit tests to dedicated files.",
    "head_branch": "uts_dhcp_dns",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone DNS unit tests\n\nCo-authored-by: Phil <phil@secdev.org>\nCo-authored-by: Gabiel <gabriel@potter.fr>\nCo-authored-by: Pierre Lalet <pierre@droids-corp.org>\nCo-authored-by: Louis Granboulan <Louis.Granboulan@airbus.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae62a88c0a76e0a5188b",
    "number": 2873,
    "body": "ENET was actually the wrong name for this protocol. The protocol itself is called HSFZ. The interface inside a car is called ENET. Therefor I confound them. \r\n",
    "head_branch": "BMW_ENET_renaming",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "This PR changes the protocol name of a BMW proprietary protocol.\n\nENET was actually the wrong name for this protocol. The protocol itself is called HSFZ. The interface inside a car is called ENET."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae63a88c0a76e0a5188c",
    "number": 2872,
    "body": "-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md]\r\n\r\nFixed duplicates names for the rpl_metrics.py file. #2862 \r\n\r\nI followed the steps outlined in the issues to find the duplicates and changed the names to follow the res1, res2 format.  One note, rather than renaming A1, A2, and O1, O2 - I simply renamed the second A - A2 and the second O - O2, because when reading the code it looked much cleaner like that.  Please advise if additional changes are needed or wanted!  Glad to help out!\r\n\r\nfixes #2862 for rpl_metrics.py\r\n",
    "head_branch": "dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2872 from digitalvirtuoso/dev\n\nrpl_metrics.py - resolved duplicates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae64a88c0a76e0a5188d",
    "number": 2871,
    "body": "I fixed the SyntaxWarnings described in #2862 in the Bundle Protocol. I didn't add any unit tests, since I'm not changing any functionality.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove duplicated fields from LTP (#2871)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae65a88c0a76e0a5188e",
    "number": 2868,
    "body": "Minimal change of the ISOTP_ENETSocket",
    "head_branch": "bmw_enet_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2868 from polybassa/bmw_enet_fix\n\nSet sent_time in ISOTP_ENETSocket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae65a88c0a76e0a5188f",
    "number": 2867,
    "body": "This PR adds some more BMW-specific definitions.",
    "head_branch": "bmw_update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improvements and cleanups of BMW specific definitions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae66a88c0a76e0a51890",
    "number": 2866,
    "body": "This PR should remove duplicated fields of the gmlan protocol. I hope I did it right. I couldn't get any SyntaxWarning as described in #2862.",
    "head_branch": "remove_duplicated_fields_gmlan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2866 from polybassa/remove_duplicated_fields_gmlan\n\nRemove duplicated fields for GMLAN"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae67a88c0a76e0a51891",
    "number": 2865,
    "body": "- add typing to `data.py`, `dadict.py`, `pton_ntop.py`, `asn1/mib.py`\r\n- Stop abusing `__dict__` of `DADict` to store data that simply shouldn't be there (`__dict__` are `Dict[str, Any]` and we used it wildly), and messes with mypy.\r\n- ~~**requires https://github.com/secdev/scapy/pull/2864 (route & route6)**~~",
    "head_branch": "mypy-data",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Core typing: dadict/data/mib/pton_ntop"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae68a88c0a76e0a51892",
    "number": 2864,
    "body": "- adds typing to `scapy.route` and `scapy.route6`\r\n- **requires https://github.com/secdev/scapy/pull/2859 (utils.py typing)**\r\n\r\n(note: I will add support for `utils6` much much later because unlike `utils` it depends on a lot of other files...)",
    "head_branch": "mypy-route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Apply suggestion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae69a88c0a76e0a51893",
    "number": 2863,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nI tried adding type hints as suggested in #2158 for the l2 layer this time. \r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is -->\r\n\r\nI didn't squash everything together as I thought it would be easier to review this way. Let me know if you prefer otherwise.\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\nTo make mypy happy, I had to make a few changes to the config, packet, and field modules:\r\n\r\n1. Avoiding adding attributes to Conf and NetCache after they were declared.\r\n1. Modifying some of the type hints in Packet and Fields.\r\n1. Using super() in some places instead of accessing unbound methods of the superclass directly.",
    "head_branch": "l2-layer-typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "L2 layer typing (#2863)\n\n* Change type of Packet.fields_desc to a Sequence\r\n\r\nSequences in mypy allow variance, so we can assign lists\r\nof Field subtypes to fields_desc.\r\n\r\nThis is needed for the scapy.layers.l2.Loopback class, which\r\nattempts to assign fields_desc twice with different types. Without this change,\r\nwe get the following mypy errors:\r\n\r\n    scapy/layers/l2.py:620: error: Incompatible types in assignment (expression has type \"List[IntEnumField]\", base class \"Packet\" defined the type as \"List[Union[Field[Any, Any], _FieldContainer]]\")\r\n    scapy/layers/l2.py:620: note: \"List\" is invariant -- see http://mypy.readthedocs.io/en/latest/common_issues.html#variance\r\n    scapy/layers/l2.py:620: note: Consider using \"Sequence\" instead, which is covariant\r\n\r\n* Store just the hw address in the ARP cache in arping\r\n\r\nThe current code stores a pair of the address and the current time,\r\nbut this does not seem to match the cache's code where the time is\r\nstored in a different field.\r\n\r\n* Fix GRErouting.routing_info length\r\n\r\nrouting_info is a StrLenField, and accepts a lambda (now\r\nthat the fld argument was removed).\r\n\r\n* Add type annotations to scapy.layers.l2\r\n\r\n- Add typed attribute for Conf.neighbor in scapy.config.\r\n\r\n  This allows mypy to acknowledge the existence of this attribute\r\n  even though it is not initialized until the scapy.layers.l2\r\n  module is loaded.\r\n\r\n- Name the arp cache as a private global in layers.l2\r\n\r\n  To avoid mypy warnings about arp_cache not being\r\n  a member of the NetCache class, store it in its\r\n  own variable.\r\n\r\n- Do not accept None in ConditionalField's condition callback\r\n\r\n  The callback is always called with a packet.\r\n\r\n- The MACField internal representation may be None\r\n\r\n  Modify the types and the i2repr implementation accordingly.\r\n\r\n- Allow StrFixedLenField default argument to be None\r\n\r\n  A None default is passed in scapy.layers.l2 for example.\r\n\r\n- Explicitly return None in Neighbor.resolve()\r\n\r\n- Use super() to access MACField.i2h\r\n\r\n  When accessing the i2h method using an unbound method, mypy\r\n  fails matching the types correctly.\r\n\r\n- Convert a few string literals to bytes literals in scapy.layers.l2\r\n\r\n- ShortEnumField accepts Dict[str, int] as well as Dict[int, str]\r\n\r\n- Do not accept None in StrFixedLenField length_from callback\r\n\r\n  The callback is almost always called with a packet, and\r\n  most of its usage is with a lambda function that does not\r\n  handle None. Add `type: ignore` comment to the randval method\r\n  that does pass None to this callback (inside a try-except clause)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae6aa88c0a76e0a51894",
    "number": 2861,
    "body": "- remove http duplicated fields",
    "head_branch": "http-duplicated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix HTTP duplicated fields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae6aa88c0a76e0a51895",
    "number": 2860,
    "body": "MyPy released 0.790 and it's buggy https://github.com/python/mypy/issues/9122#issuecomment-656918736. Pin 0.782\r\n\r\nwtf\r\n```\r\nscapy/main.py:284: error: Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[Dict[str, Optional[str]]], Optional[str]]\"; expected \"Callable[[Dict[str, Optional[str]]], _SupportsLessThan]\"\r\nscapy/main.py:284: error: Incompatible return value type (got \"Optional[str]\", expected \"_SupportsLessThan\")\r\n```",
    "head_branch": "mypy-pin-0782",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pin MyPy v0.782"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae6ba88c0a76e0a51896",
    "number": 2859,
    "body": "- adds typing to `scapy/utils.py`\r\n- minor improvements to `scapy/compat.py`\r\n- various fixes detected by type hints (especially regarding pcap writer/reader classes)\r\n- use line count instead of file count in Mypy stats",
    "head_branch": "mypy-utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Core typing: utils.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae6ca88c0a76e0a51897",
    "number": 2858,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nI tried following the instructions for the Hinty project (#2158).\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->",
    "head_branch": "contrib-roce-module-typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add typing to the RoCE module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae6da88c0a76e0a51898",
    "number": 2857,
    "body": "This PR:\r\n- displays a warning when trying to create a packet with duplicated field names\r\n- fixes all field's names duplication in Scapy",
    "head_branch": "duplicated-names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix all duplicated fields in layers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae6ea88c0a76e0a51899",
    "number": 2856,
    "body": "As suggested in https://github.com/secdev/scapy/issues/399, this PR adds support for detecting Unique Local Addresses.\r\n",
    "head_branch": "ipv6_ula_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae6fa88c0a76e0a5189a",
    "number": 2855,
    "body": "This PR discards invalid interfaces from a use_pcap test.\r\n\r\nOn a Docker image, I have the following interfaces:\r\n```\r\nip link\r\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\r\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\r\n2: tunl0@NONE: <NOARP> mtu 1480 qdisc noop state DOWN mode DEFAULT group default qlen 1000\r\n    link/ipip 0.0.0.0 brd 0.0.0.0\r\n3: ip6tnl0@NONE: <NOARP> mtu 1452 qdisc noop state DOWN mode DEFAULT group default qlen 1000\r\n    link/tunnel6 :: brd ::\r\n6: eth0@if7: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default \r\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\r\n```\r\n\r\n`tunl0` and `ip6tnl0` are not usable which cause the test to fail.",
    "head_branch": "test_interface_libpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not test invalid interfaces"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae70a88c0a76e0a5189b",
    "number": 2854,
    "body": "- fixes https://github.com/secdev/scapy/issues/1661\r\n\r\nSee this comment: https://github.com/secdev/scapy/issues/1661#issuecomment-694515723",
    "head_branch": "oddities-fieldlistfield",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove FieldListField's i2m"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae70a88c0a76e0a5189c",
    "number": 2853,
    "body": "- minor cosmetic changes to PPPoED while trying to solve https://github.com/secdev/scapy/issues/2850",
    "head_branch": "pppoed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "PPPoED: mysummary & padding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae71a88c0a76e0a5189d",
    "number": 2852,
    "body": "Notice that it may occur in the Content-Encoding field but not (yet) in Transfer-Encoding, according to the IANA registry: https://www.iana.org/assignments/http-parameters/http-parameters.xhtml\r\n\r\nCreating this draft PR for now for review and comments, despite the fact that it has NOT yet passed the tests.\r\n\r\nThe test failure seems to be a rather weird one, as it parses no packet at all from the added pcap file at this line: `pkts = sniff(offline=filename, session=TCPSession)`. Example from a local execution of the UTscapy tool:\r\n```\r\n$ python -m scapy.tools.UTscapy -c ./test/configs/linux.utsc\r\n\r\n>>> print(pkts)\r\n<Sniffed: TCP:0 UDP:0 ICMP:0 Other:0>\r\n>>> pkts[0].show()\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"***/scapy/scapy/plist.py\", line 133, in __getitem__\r\n    return self.res.__getitem__(item)\r\nIndexError: list index out of range\r\n```\r\n\r\nWhile the expected result is to at least parse the TCP and HTTP packets. Example from a local installation of this branch (`pip install .`):\r\n```\r\n$ scapy\r\n>>> load_layer('http')\r\n>>> sniff(offline='./test/pcaps/http_compressed-zstd.pcap')\r\n<Sniffed: TCP:1 UDP:0 ICMP:0 Other:0>\r\n>>> _.show()\r\n0000 Ether / IP / TCP / HTTP / 'HTTP/1.1' '200' 'OK' / Raw\r\n```\r\n\r\nI'm afraid that the observations above might suggest some further issue, possibly related to the tests.",
    "head_branch": "supporting-http-content-encoding-zstd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Supporting zstd for HTTP compression.\n\nNotice that it may occur in the Content-Encoding field but not\n(yet) in Transfer-Encoding, according to the IANA registry:\nhttps://www.iana.org/assignments/http-parameters/http-parameters.xhtml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae72a88c0a76e0a5189e",
    "number": 2851,
    "body": "This PR adds Python 3.9 support for Github Actions.\r\n\r\nNote: for Travis, the latest version is 3.8, and AppVeyor is 3.7.",
    "head_branch": "ci_python3.9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Python 3.9 support (#2851)\n\n* Unit tests linting for Python 3.9\r\n\r\n* Python 3.9 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae73a88c0a76e0a5189f",
    "number": 2849,
    "body": "The [LCS (wikipedia)](https://en.wikipedia.org/wiki/Longest_common_subsequence_problem) solving algorithm that we are using ([same than on wikipedia](https://en.wikipedia.org/wiki/Longest_common_subsequence_problem#Computing_the_length_of_the_LCS)) is actually also implemented in C in the builtin `difflib` library. See [`difflib.SequenceMatcher`](https://docs.python.org/3.8/library/difflib.html#difflib.SequenceMatcher).\r\n\r\nThis PR:\r\n- use `difflib` instead our own algorithm\r\n    - For small-sized byte strings, this has little effect. However it REALLY makes a difference for long byte strings.\r\n- provides `autojunk` option that is bundled in `difflib`. It marks some lines as junk to detect the most important changes must faster but will in most cases return a partially wrong diff (for instance, insertions missed and seen as replacements). While it is True by default in `difflib`, we'll therefore use `False` as a default.\r\n\r\n### Performance: O(n^2)\r\n```python\r\nimport time\r\ndef test(n):\r\n    x = time.time()\r\n    a = \"A\" * n + \"findme\" + \"B\" * n\r\n    b = \"A\" * n + \"B\" * n\r\n    hexdiff(a, b)\r\n    return \"%.3gms\" % ((time.time() - x) * 1000)\r\n```\r\n\r\n| n   | 10      | 100    | 200    | 500    | 1000  | 10000       |\r\n|-----|---------|--------|--------|--------|-------|-------------|\r\n| OLD | 0.842ms | 42.6ms | 175ms  | 1.1s   | 5.56s | MemoryError |\r\n| NEW | 0.446ms | 4.77ms | 19.6ms | 94.7ms | 355ms | 37s         |\r\n\r\nWhen passing `autojunk=True`, it goes crazy fast (`60ms` for n=10000), but has slightly wrong results. For instance in this example, it shows:\r\n![image](https://user-images.githubusercontent.com/10530980/95030046-f20cd180-06ac-11eb-9ed9-8e01a4bf3936.png)\r\ninstead of the proper\r\n![image](https://user-images.githubusercontent.com/10530980/95030066-26808d80-06ad-11eb-9335-62b190b49b1b.png)\r\n\r\n",
    "head_branch": "hexdiff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use difflib in hexdiff (#2849)\n\n* Use difflib in hexdiff\r\n\r\n* More hexdiff tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae74a88c0a76e0a518a0",
    "number": 2848,
    "body": "As discussed in #2550, this PR splits RTP unit tests from `regression.uts`.",
    "head_branch": "uts_rtp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standalone RTP unit tests\n\nCo-authored-by: Pierre Lalet <pierre@droids-corp.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae75a88c0a76e0a518a1",
    "number": 2847,
    "body": "- This PR adds support for a new `STOP` state which is called when ``atmt.stop()`` is called on an automaton. This allows to gracefully close sockets, or things like our `TCP_client` (updated to now send the FIN/ACK). Previously the `TCP_client` would only close gracefully when the FIN/ACK was sent by the server.\r\n- Add a bit of documentation about `Automaton`s, knowingly `STOP` states but also `action_parameter`. There are still some useful undocumented features (that have existed forever) in Automatons (such as `ioevent` or `as_supersocket`) that would need to be documented. I've added a TODO\r\n- Updates `TCP_client` and `TLSServerAutomaton` to properly answer a `stop` event. `TLSClientAutomaton` would require extra work (chose which `CLOSE_NOTIFY` to call based on the TLS version), so I left it as-is and added a TODO.",
    "head_branch": "automaton-stop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Enable sphinx.ext.todo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae75a88c0a76e0a518a2",
    "number": 2846,
    "body": "Implement proposal of using namedtuple instead of tuple in SndRcvList.\r\nUsing PacketList's \\_\\_getitem\\_\\_() method in order to preserve slicing and filtering behaviors.\r\n\r\nfixes #2746 ",
    "head_branch": "2746_proposal_namedtuples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae76a88c0a76e0a518a3",
    "number": 2845,
    "body": "- change the pinned brotli version to allow any version except 1.0.8/1.0.9\r\n\r\nI've made a patch in the brotli repo: https://github.com/google/brotli/pull/843 but they still haven't released a version including it, and I don't want to have to check regularly.",
    "head_branch": "brotli-pin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use any brotli version except 1.0.8/1.0.9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae77a88c0a76e0a518a4",
    "number": 2844,
    "body": "- add color to UTscapy, because we can and we aren't migrating just yet, and also because [Github actions finally supports ANSII](https://github.blog/2020-09-23-a-better-logs-experience-with-github-actions/) colors.\r\n- enable it everywhere",
    "head_branch": "utscapy-color",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add colors to UTscapy (#2844)\n\n* Add colors to UTscapy\r\n\r\n* UTscapy: fix Python 2 unicode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae78a88c0a76e0a518a5",
    "number": 2843,
    "body": "- small improvement in `http_request` to use a native socket when possible. This has the advantage to work without sudo\r\n- change test domain from kame to secdev, because the former was unstable at times.\r\n\r\nI'm getting stability issues on Windows, which should get fixed by https://github.com/secdev/scapy/pull/2847 ",
    "head_branch": "http-req-improve",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use actions in TCP_client to be a better doc example"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae79a88c0a76e0a518a6",
    "number": 2842,
    "body": "- drops the old chart and use the same one as on `scapy.net`",
    "head_branch": "doc-versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2842 from gpotter2/doc-versions\n\ndoc: version chart update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae7aa88c0a76e0a518a7",
    "number": 2840,
    "body": "",
    "head_branch": "dhcp_pytest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae7aa88c0a76e0a518a8",
    "number": 2839,
    "body": "When a VolatileValue subclass is used inside a Packet, the command()\r\nmethod returns a string that get a Syntax Error when evaluated, e.g.:\r\n\r\n> ICMPv6NIQueryNOOP(nonce=<RandBin>)\r\n\r\nAdd a command() method to the VolatileValue class so that it can be\r\nhandled properly. The _command_args() method is used to defined the\r\nstring used as argument for a given VolatileValue subclass.\r\n\r\nDefault values are not displayed.\r\n\r\nFixes #2828.\r\n\r\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>",
    "head_branch": "volatile_command",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2839 from 6WIND/volatile_command\n\nvolatile: add command method to be used in Packet.command()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae7ba88c0a76e0a518a9",
    "number": 2838,
    "body": "Tests currently returns (using UTscapy which means \"prints\" just like a\r\nnormal console) True/False instead of raising an exception. Therefore,\r\nerrors cannot be detected.\r\n\r\nAdd missing 'assert' statements in RandUUID section.\r\n\r\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>",
    "head_branch": "missing_assert_randuuid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2838 from 6WIND/missing_assert_randuuid\n\ntest: add missing assert statements in RandUUID tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae7ca88c0a76e0a518aa",
    "number": 2837,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n<!--\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n-->\r\n\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\nFixes typo in comments, inet6.py (`\"octest\"` to `\"octets\"`).\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2837 from nonylene/patch-1\n\nFix typo in inet6.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae7da88c0a76e0a518ab",
    "number": 2835,
    "body": "- small PR to add basic coloring of the UTscapy output. Very useful to spot the failing error quickly.\r\n\r\nThis was added because [Github logs now support ANSII colors](https://github.blog/2020-09-23-a-better-logs-experience-with-github-actions/)",
    "head_branch": "utscapy-color",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae7ea88c0a76e0a518ac",
    "number": 2833,
    "body": "Small PR:\r\n- Catches logging outputs within the autorun logs",
    "head_branch": "autorun-log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2833 from gpotter2/autorun-log\n\nCatch logging in autorun"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae7ea88c0a76e0a518ad",
    "number": 2829,
    "body": "The `naddr` filed is the count of how many `CDPAddrRecord` contained in the `addr` field, not its total length. So use `count_of` instead.\r\n",
    "head_branch": "fix/fix_cdp_msg_addr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix naddr field of CDPMsgAddr (#2829)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae7fa88c0a76e0a518ae",
    "number": 2822,
    "body": "Scapy's coverage is a bit too random because of network and automotive tests. We have two options:\r\n\r\n- Option 1: Mark codecov tests as \"informational\" => everything as normal but the output of codecov is only for maintainers: even if codecov tests fail (e.g. regress by 0.1%), the Github tests still pass (currently, we as maintainers just ignore codecov failures for the most part)\r\n\r\n- Option 2: allow a small threshold of regression (e.g. 0.5%?) but this is hard to quantify. ==> **This PR*",
    "head_branch": "codecovconfig",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2822 from gpotter2/codecovconfig\n\nLighten up codecov rules"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae80a88c0a76e0a518af",
    "number": 2821,
    "body": "Disable tests that have been making tests fail consistently on both GHCI and Travis\r\n\r\nBecause a lot of tests are identical, they are likely to be able to fail equally. Disable everything",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2821 from gpotter2/tests\n\nDisable ISOTPSCAN tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae81a88c0a76e0a518b0",
    "number": 2820,
    "body": "- small improvement to detect `ZigbeeNWKStub` while dissecting\r\n\r\ncloses https://github.com/secdev/scapy/issues/1841",
    "head_branch": "zigbee",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2820 from gpotter2/zigbee\n\nZigbeeNWKStub dissection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae82a88c0a76e0a518b1",
    "number": 2819,
    "body": "This PR:\r\n- regularizes logging calls and adds a spec in CONTRIBUTING\r\n- fix how the default stream handler is loaded to not override a logging level set by the user before Scapy's load.\r\n- turns some warnings logs in DeprecationWarnings",
    "head_branch": "logging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Regularize logging (#2819)\n\n* Improvements to Scapy's logging\r\n\r\n* Throw deprecation warnings when necessary\r\n\r\n* Regularize logging in Scapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae83a88c0a76e0a518b2",
    "number": 2816,
    "body": "fix https://github.com/secdev/scapy/issues/2801",
    "head_branch": "multi-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2816 from gpotter2/multi-default\n\nFix MultipleTypeField's defaults"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae83a88c0a76e0a518b3",
    "number": 2815,
    "body": "fix https://github.com/secdev/scapy/issues/2814",
    "head_branch": "pypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae84a88c0a76e0a518b4",
    "number": 2813,
    "body": "The TLS automatons are built (ab)using the `immediate conditions`.\r\nWhile this allows to bypass the Automaton's socket to use a custom one, it prevents the CommandMessage from reaching the loop, making it impossible to stop an automaton using `stop()`.\r\nThis PR adds a check for those messages.\r\n\r\nThis allows us to close properly the TLS client and fix https://github.com/secdev/scapy/issues/2812",
    "head_branch": "automata-skip-immediateconditions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2813 from gpotter2/automata-skip-immediateconditions\n\nAutomaton: Skip immediate tests for CommandMessage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae85a88c0a76e0a518b5",
    "number": 2811,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n#### Description\r\n\r\nAdded support Encrypt-then-MAC extension for TLS protocol ([RFC 7366](https://tools.ietf.org/html/rfc7366)).\r\n\r\nRequired **and contains** #2797 because openssl don't have command line options to disable `Extended-Master-Secred`, so test suite contains example with both extensions setted.\r\n\r\n- fixed second part of #2784 (first part fixed by #2797)\r\n\r\n#### Implementation only for block ciphers\r\n`Encrypt-Then-Mac` not supported by AEAD ciphers (according to RFC).\r\n\r\nFor `TLS_PSK_WITH_CHACHA20_POLY1305_SHA256` (0xccab) and `TLS_RSA_WITH_RC4_128_SHA` (0x0005) openssl 1.1.1g does not support `Encrypt-Then-Mac` (presents in `ClientHello`, but missed in `ServerHello` response).\r\n\r\nSame behaviour for GnuTLS 3.6.13 with `TLS_RSA_WITH_RC4_128_SHA` (0x0005) and `TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256` (0xcca8).\r\n\r\nSo it is looks like currently `Encrypt-Then-Mac` implemented only for block ciphers.\r\n",
    "head_branch": "tls_encrypt_then_mac",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added Encrypt-then-MAC support for TLS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae86a88c0a76e0a518b6",
    "number": 2810,
    "body": "- `sendto` connects to the addr/port (which was here already done in `connect`), and shouldn't be used here\r\n\r\nplease watch out all unit tests before merging",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2810 from gpotter2/test\n\nFix UDPServer pipe"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae87a88c0a76e0a518b7",
    "number": 2809,
    "body": "Reverts secdev/scapy#2473\r\n\r\nIt's broken on OSX and other Travis builds",
    "head_branch": "revert-2473-udppipetool",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae88a88c0a76e0a518b8",
    "number": 2808,
    "body": "- fix issue in split_pem which could result in an infinite loop when parsing a PEM file with a missing final carriage return.\r\n\r\nRepro:\r\n```python\r\nload_layer(\"tls\")\r\nks = split_pem(b\"\"\"\r\n-----BEGIN EC PRIVATE KEY-----\r\nMHQCAQEEIMiRlFoy6046m1NXu911ukXyjDLVgmOXWCKWdQMd8gCRoAcGBSuBBAAK\r\noUQDQgAE55WjbZjS/88K1kYagsO9wtKifw0IKLp4Jd5qtmDF2Zu+xrwrBRT0HBnP\r\nweDU+RsFxcyU/QxD9WYORzYarqxbcA==\r\n-----END EC PRIVATE KEY-----\r\n-----BEGIN EC PRIVATE KEY-----\r\nMHQCAQEEIMiRlFoy6046m1NXu911ukXyjDLVgmOXWCKWdQMd8gCRoAcGBSuBBAAK\r\noUQDQgAE55WjbZjS/88K1kYagsO9wtKifw0IKLp4Jd5qtmDF2Zu+xrwrBRT0HBnP\r\nweDU+RsFxcyU/QxD9WYORzYarqxbcA==\r\n-----END EC PRIVATE KEY-----\"\"\")\r\n```\r\n\r\nThis function is called during any `PubKey()`, `PrivKey()`. The only call that is done while dissecting a packet is through `Cert()` in `handshake.py`. This SHOULD not be critical considering it's only for PEM and that DER is used on the network, but who knows if it's not possible to craft a packet which certificate looks just like PEM.\r\n\r\nIn any case, the TLS module is not loaded by default so it should be fine.",
    "head_branch": "tls-local-dos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2808 from gpotter2/tls-local-dos\n\nFix TLS split_pem"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae88a88c0a76e0a518b9",
    "number": 2805,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae89a88c0a76e0a518ba",
    "number": 2799,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "feature/action_frame",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae8aa88c0a76e0a518bb",
    "number": 2798,
    "body": "fixes https://github.com/secdev/scapy/issues/2786",
    "head_branch": "dhcp-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2798 from gpotter2/dhcp-typo\n\nFix DHCP typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae8ba88c0a76e0a518bc",
    "number": 2797,
    "body": "- rebase of https://github.com/secdev/scapy/pull/2403\r\n- adds a test provided by https://github.com/secdev/scapy/issues/2784\r\n- fixes part of https://github.com/secdev/scapy/issues/2784\r\n- fix https://github.com/secdev/scapy/pull/2403",
    "head_branch": "2403-improvement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use Hash from PRF for TLS 1.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae8ca88c0a76e0a518bd",
    "number": 2796,
    "body": "This PR is an attempt to test the new GitHub code scanning feature.",
    "head_branch": "codeql-analysis",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2796 from secdev/codeql-analysis\n\nCodeQL support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae8da88c0a76e0a518be",
    "number": 2795,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Enhancements to GTP headers (#2795)\n\n* Enhancements to GTP headers\r\n\r\n- Add EPC specific GTP-C header\r\n- Fix duplicate attributes in Gtpv2 header\r\n- UL & DL PDU Session container\r\n\r\n3gpp specs 38 415, Figure 5.5.2.2-1\r\n5.2.2.7 PDU Session Container\r\n\r\n* Fix gtp.py\r\n\r\n* Update gtp.py\r\n\r\n* Update gtp.py\r\n\r\n* Update gtp.py\r\n\r\n* Update gtp.uts\r\n\r\n* Update gtp.py\r\n\r\n* Update gtp.py\r\n\r\n* Add tests for conditional parameters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae8da88c0a76e0a518bf",
    "number": 2794,
    "body": "This PR adds the GRH packet header used in the version 1 of the RoCE protocol, and the AETH packet header as well.",
    "head_branch": "roce_grh",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2794 from 6WIND/roce_grh\n\nAdd GRH and AETH header support in RoCE dissector"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae8ea88c0a76e0a518c0",
    "number": 2792,
    "body": "- fix #2778",
    "head_branch": "tls13-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2792 from gpotter2/tls13-fixes\n\nSupport TLS 1.3 server downgrade"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae8fa88c0a76e0a518c1",
    "number": 2790,
    "body": "Try pinning brotli 1.0.7 to fix the build install on Windows Py2.7",
    "head_branch": "brotli-a",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2790 from gpotter2/brotli-a\n\nPin brotli version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae90a88c0a76e0a518c2",
    "number": 2789,
    "body": "This PR fixes #2787 ",
    "head_branch": "Issue_#2787",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2789 from guedou/Issue_#2787\n\nStop processing a pcapng file when a block is malformed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae91a88c0a76e0a518c3",
    "number": 2783,
    "body": "This PR adds a unit test for #2782 ",
    "head_branch": "ut_PR#2782",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2783 from guedou/ut_PR#2782\n\nMock read_routes() on FreeBSD 13.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae92a88c0a76e0a518c4",
    "number": 2782,
    "body": "- Read ipv4 table in read_routes() instead of all, fixing IPv6-only setups.\r\n- Address FreeBSD 13 netstat -rnW output change by skipping \"nhop\" column.\r\n\r\nBefore (IPv6 only, FreeBSD):\r\n```\r\n17:57 [1] m@devel2 s jexec qqq netstat -rn\r\nRouting tables\r\n\r\nInternet6:\r\nDestination                       Gateway                       Flags     Netif Expire\r\nfe80::%epair0a/64                 link#2                        U       epair0a\r\nfe80::ab:6aff:fede:e30a%epair0a   link#1                        UHS         lo0\r\n..\r\n17:58 [1] m@devel2 s jexec qqq /usr/home/melifaro/scapy/run_scapy\r\nINFO: Can't import matplotlib. Won't be able to plot.\r\nINFO: Can't import PyX. Won't be able to use psdump() or pdfdump().\r\nTraceback (most recent call last):\r\n  File \"/usr/home/melifaro/scapy/scapy/utils.py\", line 534, in atol\r\n    ip = inet_aton(x)\r\nOSError: illegal IP address string passed to inet_aton\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/local/lib/python3.7/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/usr/home/melifaro/scapy/scapy/__main__.py\", line 15, in <module>\r\n    interact()\r\n  File \"/usr/home/melifaro/scapy/scapy/main.py\", line 560, in interact\r\n    SESSION, GLOBKEYS = init_session(session_name, mydict)\r\n  File \"/usr/home/melifaro/scapy/scapy/main.py\", line 401, in init_session\r\n    importlib.import_module(\".all\", \"scapy\").__dict__\r\n  File \"/usr/local/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/usr/home/melifaro/scapy/scapy/all.py\", line 25, in <module>\r\n    from scapy.route import *\r\n  File \"/usr/home/melifaro/scapy/scapy/route.py\", line 199, in <module>\r\n    conf.route = Route()\r\n  File \"/usr/home/melifaro/scapy/scapy/route.py\", line 27, in __init__\r\n    self.resync()\r\n  File \"/usr/home/melifaro/scapy/scapy/route.py\", line 35, in resync\r\n    self.routes = read_routes()\r\n  File \"/usr/home/melifaro/scapy/scapy/arch/unix.py\", line 103, in read_routes\r\n    dest = scapy.utils.atol(dest)\r\n  File \"/usr/home/melifaro/scapy/scapy/utils.py\", line 536, in atol\r\n    ip = inet_aton(socket.gethostbyname(x))\r\nsocket.gaierror: [Errno 8] Name does not resolve\r\n```\r\n\r\nAfter:\r\n```\r\n17:59 [1] m@devel2 s jexec qqq /usr/home/melifaro/scapy/run_scapy\r\nINFO: Can't import matplotlib. Won't be able to plot.\r\nINFO: Can't import PyX. Won't be able to use psdump() or pdfdump().\r\nINFO: Can't import python-cryptography v1.7+. Disabled WEP decryption/encryption. (Dot11)\r\nINFO: Can't import python-cryptography v1.7+. Disabled IPsec encryption/authentication.\r\nWARNING: IPython not available. Using standard Python shell instead.\r\nAutoCompletion, History are disabled.\r\n```\r\n\r\nBefore (nhop change, FreeBSD 13):\r\n```\r\n18:00 [1] m@devel2 (cd test && ./run_tests)\r\n### Non-root mode ###\r\n### Booting scapy...\r\nFailed to execute ifconfig: (ifconfig: interface 1500 does not exist\r\n)\r\nFailed to execute ifconfig: (ifconfig: interface 1500 does not exist\r\n)\r\nmore Failed to execute ifconfig: (ifconfig: interface 16384 does not exist\r\n)\r\n### Starting tests...\r\n### Writing output...\r\n```\r\n\r\nAfter:\r\n```\r\n18:01 [1] m@devel2 (cd test && ./run_tests)\r\n### Non-root mode ###\r\n### Booting scapy...\r\n### Starting tests...\r\n### Writing output...\r\n```\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix scapy init on FreeBSD.\n\n- Read ipv4 table in read_routes() instead of all, fixing IPv6-only setups.\n- Address FreeBSD 13 netstat -rnW output change by skipping \"nhop\" column."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae92a88c0a76e0a518c5",
    "number": 2781,
    "body": "This PR prevents sniff from blocking when handed a file-like object and a pcap filter. Instead of attempting to pipe the entire input file into tcpdump, we just pass the file through to the stdin of the subprocess.\r\n\r\nfixes #2780\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pass pcap file objects through to tcpdump's stdin (#2781)\n\n* Pass pcap file objects through to tcpdump's stdin\r\n\r\n* Don't use pipe argument\r\n\r\nCo-authored-by: Rob 15443 <rob15443@gchq.gov.uk>\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae93a88c0a76e0a518c6",
    "number": 2779,
    "body": "As discussed in #2550 and #2755, this PR shows how `regression.uts` could be split prior to the `pytest` conversion.",
    "head_branch": "uts_dhp6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Load *.uts from test/scapy/layers/"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae94a88c0a76e0a518c7",
    "number": 2777,
    "body": "This PR changes the internal behavior of the ISOTPScan functions.\r\n\r\nThe captured noise before a scan is executed is now used to suppress probe packets.\r\nOn some cars these probe packets caused errors. This change ensures that no packets\r\nwhich could interfere with the cars internal communication are sent during an ISOTP\r\nscan.\r\n\r\nCleanup of function comments and added type information",
    "head_branch": "isotpscan_noise_improve",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ISOTPScan improvement (#2777)\n\n* This PR changes the internal behaviour of the ISOTPScan functions.\r\n\r\nThe captured noise before a scan is executed is now used to suppress probe packets.\r\nOn some cars these probe packets caused errors. This change ensures that no packets\r\nwhich could interfeer with the cars internal communication are sent during an ISOTP\r\nscan.\r\n\r\nCleanup of function comments and added type informations\r\n\r\n* Add unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae95a88c0a76e0a518c8",
    "number": 2775,
    "body": "Added MQTTDisconnect packet\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added MQTTDisconnect packet (#2775)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae96a88c0a76e0a518c9",
    "number": 2773,
    "body": "- add 802.11 ERP\r\n- add 802.11 DSSSet\r\n- provide the meaning of the address fields dynamically: this is cool because it's pretty hard to know what \"addr1, addr2..\" refers to, and it depends on many things.\r\n- format the OUI in 802.11 packets\r\n- add some nicer default build bindings",
    "head_branch": "dot11-br",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Several improvements to 802.11\n\n- add 802.11 ERP\n- add 802.11 DSSSet\n- provide the meaning of the address fields dynamically\n- add some nicer default build bindings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae97a88c0a76e0a518ca",
    "number": 2772,
    "body": "- remove unused socket parameter (used to be for Windows but we got rid of it thanks to EOFError catching). It's going to be a source of weird bugs because it dismisses `IOError`s by default",
    "head_branch": "outdated-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2772 from gpotter2/outdated-cleanup\n\nRemove unused read_allowed_exceptions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae98a88c0a76e0a518cb",
    "number": 2771,
    "body": "- fix https://github.com/secdev/scapy/issues/2758\r\n\r\nI dropped `_RadiotapReversePadField` for a simpler `ReversePadField` because it was ugly and not that useful. We now follow precisely the \"Required Alignment\" rules specified on each Radiotap field's page.",
    "head_branch": "radiotap-alignment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2771 from gpotter2/radiotap-alignment\n\nFix MCS alignment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae98a88c0a76e0a518cc",
    "number": 2770,
    "body": "XCP layer implementation for CAN, UDP and TCP.\r\nReference: https://assets.vector.com/cms/content/application-areas/ecu-calibration/xcp/XCP_ReferenceBook_V3.0_EN.pdf\r\n\r\nIncludes a scanner for CAN identifiers that support XCP.\r\n\r\n@akorb \r\n@polybassa ",
    "head_branch": "xcp-layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "XCP Layer (#2770)\n\n* Core typing: utils.py\r\n\r\n* Added XCP-layer and xcp scanner for issue #2374\r\n\r\n* Removed CI and PEP8 Errors\r\n\r\nFixed CI and Code quality check errors\r\n\r\nRemoved spell errors\r\n\r\nRemoved spell errors\r\n\r\nFixed Codacy errors\r\n\r\nRemoved Coacy error\r\n\r\nRemoved Coacy error\r\n\r\nCode cleanup for travis-ci\r\n\r\n* Start XCP Implementation:\r\n- Added positive DTO\r\n- Added Error codes\r\n- Prepared implementation of negative responses\r\n- Added Fields for all CTOs\r\n\r\n* - extend CTO and DTO messages\r\n- add xcp docu\r\n- add xcp layer for CAN, UDP and TCP\r\n- add scanner for XCPonCAN\r\n\r\n* - Add sniff_time argument to XCPscanner\r\n- Simplify/Fix tests and reduce time usage on failure\r\n- Simplify XCP implementation\r\n- Simplify doc\r\n- Enable xcpscanner.uts tests for more configurations (non-root, non-linux)\r\n- Improve usage output of xcpscanner\r\n\r\n* Add connect_scan\r\n\r\n* Fix potential issues\r\nadd some comments\r\nAllow scanning only one id with a range\r\n\r\n* add root rights to tests and fix typing\r\n\r\n* cleanup flags(xcp layer)\r\n\r\n* change can_interface\r\n\r\n* add padding to can xcp\r\n\r\n* add setdefault to config\r\n\r\n* add test for padding (xcp)\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>\r\nCo-authored-by: Fabian-Wiche <fabian.wiche@edag-bfft.com>\r\nCo-authored-by: Ita1pu <f.wiche@gmx.de>\r\nCo-authored-by: Andreas Korb <Andreas.D.Korb@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae99a88c0a76e0a518cd",
    "number": 2769,
    "body": "- use `sent_time` as time when storing a packet in a pcap or when iterating over `SndRcvList`\r\n- fix https://github.com/secdev/scapy/issues/2427",
    "head_branch": "time-iter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2769 from gpotter2/time-iter\n\nProperly save sent_time in pcaps"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae9aa88c0a76e0a518ce",
    "number": 2768,
    "body": "- keep packet metadata (time, sent_time...) when using `pickle`\r\n- fix https://github.com/secdev/scapy/issues/2648",
    "head_branch": "pickle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2768 from gpotter2/pickle\n\nImprove packet pickling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae9ba88c0a76e0a518cf",
    "number": 2767,
    "body": "- fix https://github.com/secdev/scapy/issues/2763\r\n- fix https://github.com/secdev/scapy/pull/2527\r\n- minor improvements (TCP TLS session)\r\n- several doc improvements",
    "head_branch": "tls-minor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor TLS fixes (#2767)\n\n* Improve doc\r\n\r\n* TLS TCP decompression & small bugs\r\n\r\n* Add TLS tests\r\n\r\n* Fix issue #2767 2527"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae9ca88c0a76e0a518d0",
    "number": 2765,
    "body": "fix [2747](https://github.com/secdev/scapy/issues/2747)\r\n\r\nadding tftp options in DHCP layer:\r\nscapy/scapy/layers/dhcp.py\r\n\r\n    66: \"tftp_server_name\"\r\n    150: IPField(\"tftp_server_address\", \"0.0.0.0\"),\r\n",
    "head_branch": "add_dhcp_layer_tftp_options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add TFTP options to DHCP (#2765)\n\n* Add TFTP options to DHCP\r\n\r\n- fix issue 2747\r\n- also update random tests\r\n\r\n* Update dhcp.py\r\n\r\n* Update dhcp.py\r\n\r\n\"-\" > \"_\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae9da88c0a76e0a518d1",
    "number": 2762,
    "body": "This parameter limits the lookahead width to search for a answer packet in the remaining list.\r\nWith this parameter, the sr() function can be speed up drastically on long PacketLists\r\n",
    "head_branch": "speedup_packetlist_sr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2762 from polybassa/speedup_packetlist_sr\n\nAdd new parameter to PacketList.sr() [ready for merge]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae9da88c0a76e0a518d2",
    "number": 2761,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "APCO, PrivateExtension & ULI-Timestamp IE (#2761)\n\n* APCO IE; PrivateExtension IE\n\n* Add tests for APCO\n\n* Add ULI TImestamp\n\n* Fix flake8 error\n\n* fix flake8 error-2\n\n* Change extension and timestamp to lowercase\n\n* Update gtp_v2.uts\n\n* Fix apco test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae9ea88c0a76e0a518d3",
    "number": 2760,
    "body": "- compatibility fixes to make sure old code still works after https://github.com/secdev/scapy/pull/2733",
    "head_branch": "dot11-br",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Backward compatibility of 802.11 elements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fae9fa88c0a76e0a518d4",
    "number": 2759,
    "body": "Fixes issue where multiple topic subscriptions were not recognized using MQTTSubscribe.\r\nAlthough a previous pull request addressed the issue in which multiple topics were not recognized in MQTTUnsubscribe packets, the problem still remained for MQTTSubscribe.\r\n\r\nNow, MQTTSubscribe allows users to create a packet with single or multiple topics for subscriptions. \r\n\r\nThe specification states that the SUBSCRIBE packet must have the Topic Length, Topic Name, and the QoS for each topic. Thus, a class was written that inherits attributes of the class MQTTTopic, while adding the QoS for each topic.\r\n\r\nAny suggestions to improve the changes are welcome.\r\n\r\n",
    "head_branch": "fix_multiple_topic_subscription_issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MQTTSubscribe now supports multiple topic subscriptions in the payload. (#2759)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea0a88c0a76e0a518d5",
    "number": 2757,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [X] I added unit tests or explained why they are not relevant\r\n-   [X] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-  [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n\r\n\r\nThis Pull Request will add PIM protocol.\r\nThere are various layers, but I made two layers.\r\n  - PIMv2 Hello \r\n  - PIMv2 Join/Prune\r\n\r\n\r\nMy heart tremble. because this is my first open source pull request. :)\r\nPlease advise as necessary.\r\n\r\n",
    "head_branch": "pim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2757 from engineer-km/pim\n\nAdd  PIMv2 Hello, Join/Prune"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea1a88c0a76e0a518d6",
    "number": 2756,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea2a88c0a76e0a518d7",
    "number": 2755,
    "body": "As discussed in #2550. This PR splits the regression.uts file into multiple smaller parts.",
    "head_branch": "split_regression.uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea2a88c0a76e0a518d8",
    "number": 2754,
    "body": "The new sphinx update made this break.",
    "head_branch": "fix-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2754 from gpotter2/fix-doc\n\nFix doc for sphinx 3.2.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea3a88c0a76e0a518d9",
    "number": 2751,
    "body": "Seriously cleanups up the 6lowpan layer:\r\n- it has been the ugliest layer we've had for quite some time\r\n- some bindings were all wrong: fix https://github.com/secdev/scapy/issues/2748\r\n- many weird functions can be reimplemented using things like `MultipleTypeField`\r\n- many fields have funky names (\"Destiny address\" (?!!! what does it have to do with destiny..), underscores everywhere...)\r\n- add full LOWPAN_HC1 support\r\n- support for LoWPAN_NHC IPv6 extensions, proper support for the UDP one (it was a mess)\r\n- finish some decompression that was left unimplemented\r\n- add links to the doc for each layer because this layer isn't easy to catch on\r\n\r\nTest based on the following file:\r\n[6lowpan_nhc.pcap.zip](https://github.com/secdev/scapy/files/5047627/6lowpan_nhc.pcap.zip)\r\n",
    "head_branch": "sixlowpan-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "6LoWPAN cleanup (#2751)\n\n* Major rework of SixLoWPAN\r\n\r\n* Tiny travis fix\r\n\r\n* guedou suggestion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea4a88c0a76e0a518da",
    "number": 2750,
    "body": "This pull request adds a  badge to the . This will allow users to easily run this repository in their browser, without having to set up an environment. You can learn more about Repl.it [here](https://repl.it).\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "replit-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea5a88c0a76e0a518db",
    "number": 2749,
    "body": "See https://github.com/secdev/scapy/pull/2743",
    "head_branch": "quick",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2749 from gpotter2/quick\n\nBetter fix & explanation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea6a88c0a76e0a518dc",
    "number": 2745,
    "body": "- fix https://github.com/secdev/scapy/issues/2744\r\n- supress brotli warning when not encountered: it's rarely used and the warning is annoying\r\n\r\nI won't add unit tests because we have too many HTTP ones already, and they always end up being giant :/",
    "head_branch": "minor-http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor HTTP improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea7a88c0a76e0a518dd",
    "number": 2743,
    "body": "fix #2742",
    "head_branch": "fix-2742",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2743 from gpotter2/fix-2742\n\nFix #2742"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea7a88c0a76e0a518de",
    "number": 2741,
    "body": "The original len calculation uses a constant value `9`, for it only considers `CDPAddrRecordIPv4`. For `CDPAddrRecordIPv6`, it has a length `28`. So update the len calculation using the `plen` and `addrlen` field in `CDPAddrRecord`.\r\n\r\nhttps://github.com/secdev/scapy/blob/c68ee2bc05a0cd3cd2341ad915590260e33487fd/scapy/contrib/cdp.py#L188-L202\r\n",
    "head_branch": "fix/fix_cdp_msg_addr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2741 from cq674350529/fix/fix_cdp_msg_addr\n\nfix len calculation for CDPMsgAddr"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea8a88c0a76e0a518df",
    "number": 2737,
    "body": "Try to catch issue #2736 ",
    "head_branch": "catch_#2736",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2737 from polybassa/catch_#2736\n\nTry to catch issue #2736"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faea9a88c0a76e0a518e0",
    "number": 2735,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #2729 \r\ncorrect doc ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2735 from roumy/master\n\nCorrect Can Doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeaaa88c0a76e0a518e1",
    "number": 2734,
    "body": "This patch is part of my proposal to add a new bit to the Tx flags of the radiotap header. I consider the patch itself ready, but the code should only be merged if/once this addition has gone through [radiotap's standardization process](https://www.radiotap.org/Standardisation).",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "radiotap: add support for fixed order Tx flag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeaba88c0a76e0a518e2",
    "number": 2733,
    "body": "I got my hands on the 802.11-2016 spec so I was able to add references to it in `dot11.py`, and add/fix a few major layers:\r\n\r\n- add support for any Low Endian (previously only low endian short and int were supported) in `BitField` using two new optional arguments: `tot_len` and `end_tot_len`. Also updated the `BitField` doc and the only place where this could have been used (`bluetooth.py`)\r\n- add `BitScalingField`, a mix of `BitField` and `ScalingField`...\r\n- add support for HT capabilities in 802.11 (which uses this new LE functionality)\r\n- fix rates computation in 802.11\r\n- Small cleanup: reorder `dot11.py` a bit to be much more readable",
    "head_branch": "dot11-ie",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2733 from gpotter2/dot11-ie\n\n802.11 IEs + BitField complex LE support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeaca88c0a76e0a518e3",
    "number": 2732,
    "body": "This PR fixes #2731 ",
    "head_branch": "Issue_#2731",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2732 from guedou/Issue_#2731\n\nSupport SHA* based authenticators"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeada88c0a76e0a518e4",
    "number": 2730,
    "body": "An alternative to #2205. To discuss\r\n\r\nfix #2205 \r\nfix #2172",
    "head_branch": "alternative-2205",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2730 from gpotter2/alternative-2205\n\nCatch invalid filter: tcpdump()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeada88c0a76e0a518e5",
    "number": 2728,
    "body": "This fixes failing tests on OpenBSD.",
    "head_branch": "bsd_fixes_resync",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2728 from guedou/bsd_fixes_resync\n\nBackup & restore conf.route.routes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeaea88c0a76e0a518e6",
    "number": 2727,
    "body": "Fix test for cryptography 3.0\r\n\r\n```\r\n###(011)=[failed] PubKeyRSA class : Generate without modulus\r\n1966\r\n\r\n1967\r\n>>> t = PubKeyRSA()\r\n1968\r\n>>> t.fill_and_store(modulus=None, pubExp=32769, modulusLen=1024)\r\n1969\r\nTraceback (most recent call last):\r\n1970\r\n  File \"<input>\", line 2, in <module>\r\n1971\r\n  File \"scapy/config.py\", line 719, in func_in\r\n1972\r\n    return func(*args, **kwargs)\r\n1973\r\n  File \"scapy/layers/tls/cert.py\", line 266, in fill_and_store\r\n1974\r\n    backend=default_backend())\r\n1975\r\n  File \"/home/runner/work/scapy/scapy/.tox/py27-linux_non_root/lib/python2.7/site-packages/cryptography/hazmat/primitives/asymmetric/rsa.py\", line 119, in generate_private_key\r\n1976\r\n    _verify_rsa_parameters(public_exponent, key_size)\r\n1977\r\n  File \"/home/runner/work/scapy/scapy/.tox/py27-linux_non_root/lib/python2.7/site-packages/cryptography/hazmat/primitives/asymmetric/rsa.py\", line 126, in _verify_rsa_parameters\r\n1978\r\n    \"public_exponent must be either 3 (for legacy compatibility) or \"\r\n1979\r\nValueError: public_exponent must be either 3 (for legacy compatibility) or 65537. Almost everyone should choose 65537 here!\r\n```",
    "head_branch": "crypto3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2727 from gpotter2/crypto3\n\nFix cryptography 3.0 test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeafa88c0a76e0a518e7",
    "number": 2725,
    "body": "This PR contains a first set of commits that fixes the tox runs on *BSD.",
    "head_branch": "bsd_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2725 from guedou/bsd_fixes\n\nFreeBSD 11.2 fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb0a88c0a76e0a518e8",
    "number": 2724,
    "body": "",
    "head_branch": "pep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2724 from gpotter2/pep\n\nMinor flake8 fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb1a88c0a76e0a518e9",
    "number": 2723,
    "body": "fixes #2721\r\n\r\nDocuments a corner case for `utils.corrupt_bits()` and `utils.corrupt_bytes()`. Both functions will corrupt at least one bit or byte on a given percentage even when the percentage implies a much lower corruption rate.\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2723 from Chamaeleon-/patch-1\n\nUpdate utils.corrupt_bits() and corrupt_bytes() docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb2a88c0a76e0a518ea",
    "number": 2719,
    "body": "fix https://github.com/secdev/scapy/issues/2716",
    "head_branch": "issue-2716",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2719 from gpotter2/issue-2716\n\nAdd support for RFC7973"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb2a88c0a76e0a518eb",
    "number": 2718,
    "body": "Some modifications to bump the Vagrant based BSD CI to newer versions.",
    "head_branch": "vagrant_ci_updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2718 from guedou/vagrant_ci_updates\n\nVagrant ci updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb3a88c0a76e0a518ec",
    "number": 2715,
    "body": "Revert a small part of https://github.com/secdev/scapy/pull/2629\r\n\r\n~~I really don't like this addition: it slows `guess_payload_class` for a marginal use case. `bind_layers` should NOT allow callables.\r\nThe proper way has always been to add a custom `guess_payload_class` function when the bindings don't fit a `bind_layers` call.~~\r\n\r\nIt also seems that SMB2 is currently completly broken, mostly because of how it uses the FlagsFields. This fixes it",
    "head_branch": "revert-fields",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2715 from gpotter2/revert-fields\n\nRevert part of 2629"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb4a88c0a76e0a518ed",
    "number": 2714,
    "body": "fix https://github.com/secdev/scapy/issues/2680\r\nfix https://github.com/secdev/scapy/pull/2681",
    "head_branch": "globals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2714 from gpotter2/globals\n\nAvoid mutating globals - rework"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb5a88c0a76e0a518ee",
    "number": 2713,
    "body": "fix https://github.com/secdev/scapy/issues/1721\r\nplease discuss if the fix is correct.",
    "head_branch": "fix-1721",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb6a88c0a76e0a518ef",
    "number": 2712,
    "body": "Fix grammatical error\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2712 from cpsnell/patch-3\n\nUpdate Scapy in 15 minutes.ipynb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb7a88c0a76e0a518f0",
    "number": 2711,
    "body": "Fix grammatical error\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb7a88c0a76e0a518f1",
    "number": 2709,
    "body": "**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nNew functionality for network monitoring. It uses the sniff function and generates a visualization of the packages in HTML.\r\n\r\n",
    "head_branch": "network_sniffer_html",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb8a88c0a76e0a518f2",
    "number": 2707,
    "body": "A pretty major refactor based on a [very old PR](https://github.com/secdev/scapy/pull/2264), but pretty cool. This:\r\n\r\n- unifies how interfaces work on all platforms using a `scapy/interfaces.py` file and introducing `conf.ifaces`\r\n- makes the switch to libpcap work in all cases\r\n- drops the last places where \"dnet\" was used to make it clear we stopped supporting it (env var, \"pcapdnet\" file)\r\n- merges `get_if_list` on all platforms\r\n- improves how interfaces are detected on OSX\r\n- gives extra detail about the status of the interfaces using interfaces flags and lists all interfaces in a human friendly way\r\n- allows multiple interfaces providers to cohabitate, in a [wireshark extcap](https://www.wireshark.org/docs/man-pages/extcap.html) style, and for each one to provide it's own sockets. This is very useful for USB sockets for instance, or if the user wants to add its own interfaces/providers to scapy.\r\n\r\nIt brings the \"interfaces\" objects to other platforms. Those are cool because they give you the content of the flags and avoid having to re-read the /etc/ files each time you need them.\r\n\r\n### Screenshots\r\n\r\ne.g.: Linux\r\n![image](https://user-images.githubusercontent.com/10530980/87220442-08341b80-c364-11ea-8e7e-20d044bc70be.png)\r\n\r\n\r\ne.g.: Usbpcap AND libpcap\r\n![image](https://user-images.githubusercontent.com/10530980/87220411-b55a6400-c363-11ea-90eb-e80556a0083d.png)\r\n\r\nThis is fully backward compatible: the interfaces objects implement the same functions as strings: `conf.iface + \"test\" == \"eth0test\"` so that it doesn't break anything, and all functions use a `network_name` function to get the network name from the object or a string (instead of the current `if WINDOWS:` .... checks)\r\n\r\n## Tested\r\n\r\n- [x] Windows & Linux (manual + unit tests)\r\n- [x] OS x (manual + unit tests)\r\n- [x] *BSD (manual)\r\n\r\n## How to test this\r\n\r\n**Mainteners, please test the changes (there are unit tests, but I'd like you all to give some feedback on the features)**: try playing around with `conf.ifaces` and `conf.iface`, then with `conf.use_pcap` to understand what it does.",
    "head_branch": "interfaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement global & extensible interfaces (#2707)\n\n* Implement global & extensible interfaces\r\n\r\n* Simplify detection of valid interfaces\r\n\r\n* Linux: handle interfaces with no IPv4\r\n\r\n* Reimplement get_working_ifaces\r\n\r\n* Remove 'main' IPv6 in interfaces\r\n\r\n* Don't show invalid interfaces by default\r\n\r\n* Update error message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeb9a88c0a76e0a518f3",
    "number": 2706,
    "body": "Some old PR I forgot\r\n\r\n- cleanup some obsolete warnings\r\n- fix some DHCP6 incomplete functions based on the revision of the RFC + specify in inline comments which RFC is used if it wasn't already the case.",
    "head_branch": "cleanups",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2706 from gpotter2/cleanups\n\nSeveral small & easy cleanups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faebaa88c0a76e0a518f4",
    "number": 2705,
    "body": "x25519 and x448 cryptography calls were present in some parts of the code, but not everywhere. This unifies how we access cryptography to make sure it always works.\r\n\r\nfix https://github.com/secdev/scapy/issues/2698",
    "head_branch": "tls-cleanups",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2705 from gpotter2/tls-cleanups\n\nRe-use cryptography code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faebba88c0a76e0a518f5",
    "number": 2703,
    "body": "-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThis Pull Request will add LF2 protocol.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faebca88c0a76e0a518f6",
    "number": 2701,
    "body": "The previous code examples in the documentation resolves in: \"TypeError: <lambda>() missing 1 required positional argument: 'r'\".\r\n\r\nThis is because \"PEP 3113 -- Removal of Tuple Parameter Unpacking\". for more info see [https://www.python.org/dev/peps/pep-3113/](https://www.python.org/dev/peps/pep-3113/).\r\n\r\nThis pull request updates the docs to resolve this issue.\r\n\r\nAdditionally, it fixes a minor mistake found at line 387.\r\n\r\nAlso, I didn't understand if the \"Removal of Tuple Parameter Unpacking\" affects the rule in CONTRIBUTING.md:\r\n\r\n> \"lambdas must be written using a single argument when using tuples: use lambda x, y: x + f(y) instead of lambda (x, y): x + f(y)\".\r\n\r\nSo I didn't change CONTRIBUTING.md file, but I'll be happy for more explanation :)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faebda88c0a76e0a518f7",
    "number": 2696,
    "body": "Previous reference - 3gpp Rel16 GTP Messages & IEs #2692",
    "head_branch": "pathch_clean3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "GTP changes w.r.t 3gpp Rel16  (#2696)\n\n* GTP changes w.r.t 3gpp Rel16\r\n\r\n* Cleanup length computation of GTPv2\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faebea88c0a76e0a518f8",
    "number": 2694,
    "body": "- fix https://github.com/secdev/scapy/issues/2683\r\n- fix https://github.com/secdev/scapy/pull/2600",
    "head_branch": "dot11-rsn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2694 from gpotter2/dot11-rsn\n\nCleanup 802.11 RSN and MicrosoftWPA"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faebfa88c0a76e0a518f9",
    "number": 2692,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faebfa88c0a76e0a518fa",
    "number": 2691,
    "body": "Two unrelated changes:\r\n1. Fix for non-multiple-of-8 fragsize passed to IPv4 fragment()\r\n2. Added missing field initialization in SecurityAssociation for NULL cipher",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2691 from osctobe/master\n\nIPv4 fragmentation fix + IPsec fixup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec0a88c0a76e0a518fb",
    "number": 2690,
    "body": "This fixes #2676.",
    "head_branch": "fix-win-noip6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Windows w/o IPv6 (wrong exception expected)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec1a88c0a76e0a518fc",
    "number": 2688,
    "body": "- Default value of LEFieldLenField fields set to None in order to calculate the value automatically\r\n- Fix bad reference of count_of",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2688 from alexandretanem/master\n\nDefault LEFieldLenField value set to None in Dot11 and fix bad count_…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec2a88c0a76e0a518fd",
    "number": 2687,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec3a88c0a76e0a518fe",
    "number": 2686,
    "body": "Set default value to None for LEFieldLenField fields in Dot11, allowing automatic computation of the field",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec4a88c0a76e0a518ff",
    "number": 2685,
    "body": "don't override SSID values after the SSID was already set, in order to overcome parsing bugs in other elements that override the SSID, see https://github.com/secdev/scapy/issues/2683.  \r\n\r\nfixes #2684 \r\n",
    "head_branch": "fix-ssid-overriding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2685 from giladbeeri/fix-ssid-overriding\n\ndon't override SSID values after the SSID was set"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec4a88c0a76e0a51900",
    "number": 2681,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #2680 <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec5a88c0a76e0a51901",
    "number": 2679,
    "body": "Fixes issue #2678 (Typo  \"paylod\")\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes #2678 (#2679)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec6a88c0a76e0a51902",
    "number": 2674,
    "body": "- `DADict` has a major design flaw: it uses the string representations as key for the data. This makes it impossible to store duplicated values for different keys (impossible to fix https://github.com/secdev/scapy/issues/2573), in addition of making the fields reverse the data before trying to use it. This behavior was likely chosen so that the user access to those dicts is very easy (I assume that's where the \"Direct Access\" name comes from): `ETHER_TYPES.IPv4`.\r\n\r\n**This PR**:\r\n- changes how `DADict` store the data: now using the keys -> values, as you would expect. You can still access `ETHER_TYPES.IPv4` thanks to reverse lookup, and `__dir__` is populated properly to make it GUI-friendly.\r\n- This however means that we need to change how the data is registered. To do so:\r\n  - changes how the dicts are populated in `data.py`\r\n  - add a compatibility layer to be backward compatible in the case of `ETHER_TYPES[\"IPv4\"] = 2048`, which was the only dictionary populated by layers/modules. Using this will however trigger a DeprecationWarning.\r\n- fix https://github.com/secdev/scapy/issues/2573\r\n- **REMOVE** unused functions: we have a bunch of `_recurs_find_all` and cie functions that are not used anywhere. I'm now sure what they do but they will likely be broken by this PR. Because those functions are private, I think it's safe to remove them (why are there here in the first place?). The tests were dummys for coverage\r\n\r\n@guedou You might want to start releasing the first RCs for 2.4.4 afterwards..",
    "head_branch": "dadict_redesign",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix DADict (#2674)\n\n* DADict full refactor\r\n\r\n* Fix load_services to handle ranges\r\n\r\n* suggestion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec7a88c0a76e0a51903",
    "number": 2672,
    "body": "fix https://github.com/secdev/scapy/issues/2542\r\n\r\nThe fix in itself is very small (addition of `alias`). But I also added some comments to make this function less cryptic",
    "head_branch": "load_mib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2672 from gpotter2/load_mib\n\nFix load_mib on duplicated OIDs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec8a88c0a76e0a51904",
    "number": 2671,
    "body": "Kick off Hinty (https://github.com/secdev/scapy/issues/2158):\r\n- turn on Mypy strict mode (see [this](https://github.com/secdev/scapy/blob/2a914cf2e29e98adea88ed447e524a9970b2e451/.config/mypy/mypy_check.py#L39))\r\n- add typings to \r\n  - packet.py\r\n  - fields.py\r\n  - config.py\r\n  - main.py (strict)\r\n  - \\_\\_init\\_\\_.py (strict)\r\n\r\n**Implementations notes:**\r\n- this tries to be as clean and extensible as possible: we use `Generic` classes to make clean `Field`s. This means any other field that inherits from `Field` will be able to mark what `Internal` and `Machine` types it uses.\r\n- this PR fixes a few type errors that mypy triggered. For instance a function that would crash in `SndRcvList` and was moved to a parent class.\r\n- I refactored `TimeSignedField` because it was easier than cleaning it up.\r\n- This is fully compatible except one single thing: the use of `Generic` makes it impossible to use the keyword `cls=` as a key parameter. This keyword was only used in `PacketListField` (in other places, it was only used as an argument which is fine). Therefore I had to rename it to `pkt_cls`, but it's use was not that widespread because you would typically use it as an argument instead of a key argument.\r\n\r\nTo reproduce the issue with `Generic`:\r\n```python\r\nfrom typing import Generic, TypeVar\r\nI = TypeVar(\"I\")\r\nclass A(Generic[I]):\r\n    def __init__(self, cls=1):\r\n        pass\r\n\r\nA(cls=1)  # Error\r\n```\r\n\r\n- **This is a big PR, but had to be done in one go because those files just keep referring to each other.** Making them one by one would mean adding a gazillion temporary `# type: ignore`. I hesitated to also do `utils.py`, but it's honnestly to big on its own and will need a separate PR.\r\n- python 2 compatibility was added, but it's quite a nightmare. See the code. I sometimes wish we had drop it. In any case, when will want to drop it (likely in a few years), we'll have the great [`com2ann`](https://github.com/ilevkivskyi/com2ann) module to do it for us.",
    "head_branch": "mypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2671 from gpotter2/mypy\n\nCore typing: compat/config/fields/main/packet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faec9a88c0a76e0a51905",
    "number": 2669,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2669 from scottwedge/master\n\nFixes #2668"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faecaa88c0a76e0a51906",
    "number": 2667,
    "body": "This series fixes few small shortcomings of IPv6 fragment handling.\r\n\r\nFirst patch makes non-first packets have always Raw payload (as you can't correctly represent the data).\r\nSecond patch makes defragment6() work correctly for packets with L2 headers present (uses first packet's structure instead of forcing it into L3-only).\r\nThird fixes fragment6() to add fragment extension header automatically.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2667 from osctobe/master\n\nFix IPv6 fragmentation support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faecaa88c0a76e0a51907",
    "number": 2665,
    "body": "This PR fixes codecov on github actions. Currently, the codecov action output `==> Python coveragepy not found`",
    "head_branch": "github_action_codecov",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2665 from guedou/github_action_codecov\n\nFix codecov on github actions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faecba88c0a76e0a51908",
    "number": 2664,
    "body": "Just a cleanup",
    "head_branch": "remove_random_weird_py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2664 from polybassa/remove_random_weird_py3\n\nRemove tag random_weird_py3 since it's not used in any *.uts file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faecca88c0a76e0a51909",
    "number": 2663,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests \r\n-   [x] I executed the regression tests (using `cd test && ./run_tests`)\r\n-   [x] The PR is complete.\r\n\r\n## Description\r\nSupport for RPL routing protocol used in Low power and lossy networks (RFC 6550/RFC 6551). Also supports [draft-ietf-roll-efficient-npdao](https://datatracker.ietf.org/doc/draft-ietf-roll-efficient-npdao/).\r\n\r\n## Examples\r\n1. RPL DIS message with Solicited Information Option\r\n```\r\nmsg=IPv6() / ICMPv6RPL() / RPLDIS() / RPLOptSolInfo()\r\n```\r\n2. RPL DAO message with multiple target, multiple transit options\r\n```\r\nmsg=IPv6(src=\"fe80::1\", dst=\"fe80::2\") / ICMPv6RPL() / RPLDAO()/\\\r\n        RPLOptTgt(plen=128,prefix=\"aaaa::1\") / RPLOptTIO(pathseq=11)/\\\r\n        RPLOptTgt(plen=128,prefix=\"bbbb::1\") / RPLOptTIO(pathseq=22)/\\\r\n        RPLOptTgt(plen=128,prefix=\"cccc::1\") / RPLOptTIO(pathseq=33)\r\n```\r\n3. RPL DIO message with DAG Metric Container containing Link ETX metric\r\n```\r\nmsg=ICMPv6RPL() / RPLDIO() / RPLOptDAGMC() / RPLLinkETX()\r\n```\r\n\r\nAll the produced messages are tested/dissected fine with Wireshark.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2663 from nyrahul/master\n\nRPL (RFC 6550, RFC 6551) support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faecda88c0a76e0a5190a",
    "number": 2662,
    "body": "Very light PR with slighly better error handling.\r\n- rename `remote_name` into `server_name` because that's the SNI\r\n- display the TLSAlert also in the TLS client\r\n- check before running the client that the host is joinable",
    "head_branch": "tls-cleanups",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2662 from gpotter2/tls-cleanups\n\nSlightly better error handling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faecea88c0a76e0a5190b",
    "number": 2661,
    "body": "This PR fixes #2510.",
    "head_branch": "Issue_#2510",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2661 from guedou/Issue_#2510\n\nExtend the missfrag list instead of appending"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faecfa88c0a76e0a5190c",
    "number": 2660,
    "body": "From [RFC 7540 par3.5](https://tools.ietf.org/html/rfc7540#section-3.5)\r\n\r\nHTTP/2 Connection Preface is \"PRI * HTTP/2.0\\r\\n\\r\\nSM\\r\\n\\r\\n\"\r\nIn hex notation is 0x505249202a20485454502f322e300d0a0d0a534d0d0a0d0a\r\nBut the opposite function is used here.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix http2 PREFACE"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed0a88c0a76e0a5190d",
    "number": 2658,
    "body": "",
    "head_branch": "Stabilize_automotive_unit_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Try to make automotive unit tests more stable [ready for merge] (#2658)\n\n* Try to make OBDScanner unit tests more stable\r\n\r\n* cleanup isotpscanner tests\r\n\r\n* increase response time of ECU_am to test if this stabilizes the unit tests\r\n\r\n* Add send_delay to ECU_am to lower utilization on CI-Machines"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed0a88c0a76e0a5190e",
    "number": 2657,
    "body": "Errors in #2488 (and probably others) are not related to the changes in the PR but are caused by a new version of codespell.",
    "head_branch": "fix-codespell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2657 from p-l-/fix-codespell\n\nFix codespell errors (new version)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed1a88c0a76e0a5190f",
    "number": 2656,
    "body": "Small fix to `generate_ethertypes.py` to make it run seamlessly",
    "head_branch": "genether",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2656 from gpotter2/genether\n\nSmall generate_ethertypes.py fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed2a88c0a76e0a51910",
    "number": 2653,
    "body": "",
    "head_branch": "ISOTPSoftSocket_debug_print_cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2653 from polybassa/ISOTPSoftSocket_debug_print_cleanup\n\nCleanup debug prints in ISOTPSoftSocket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed3a88c0a76e0a51911",
    "number": 2651,
    "body": "fix https://github.com/secdev/scapy/issues/2511",
    "head_branch": "wpa3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2651 from gpotter2/wpa3\n\nWPA3 detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed4a88c0a76e0a51912",
    "number": 2650,
    "body": "fix https://github.com/secdev/scapy/issues/2634",
    "head_branch": "http-iface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2650 from gpotter2/http-iface\n\nAdd iface support http_request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed5a88c0a76e0a51913",
    "number": 2649,
    "body": "- fix #2626",
    "head_branch": "usage-python3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2649 from gpotter2/usage-python3\n\nFix #2626 lambdas on Python3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed5a88c0a76e0a51914",
    "number": 2647,
    "body": "* Dissect End Device Timeout Request commands\r\n* Dissect End Device Timeout Response commands\r\n* Fix bug in the dissection of Link Status commands\r\n* Fix conditions and add fields to ZigbeeAppDataPayload\r\n* Fix the fields of the Transport-Key command\r\n* Add the optional Partner Address field of the Request-Key command\r\n* Dissect Tunnel commands\r\n* Dissect Verify-Key commands\r\n* Dissect Confirm-Key commands\r\n* Define the ZigbeeDeviceProfile class\r\n* Fix bug in the Pending Address Specification field\r\n* Dissect short and extended pending addresses in beacons\r\n* Dissect the Channel Page field of Coordinator Realignment commands",
    "head_branch": "zigbee-dot15d4-enhancements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Enhancements for the zigbee and dot15d4 layers (#2647)\n\n* Enhance the dot15d4 layer\r\n\r\n* Enhance the zigbee layer\r\n\r\n* Delete a conditional field from the zigbee layer\r\n\r\n* Add unit tests for the zigbee and dot15d4 layers\r\n\r\n* Fix flake8 tests and update the header of the zigbee layer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed6a88c0a76e0a51915",
    "number": 2646,
    "body": "- slightly better monitor mode doc\r\n- remove functions that confusing on linux. `monitor=True` shouldn't run iwconfig without telling the user.",
    "head_branch": "monitordoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2646 from gpotter2/monitordoc\n\nSlightly better doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed7a88c0a76e0a51916",
    "number": 2645,
    "body": "",
    "head_branch": "fix_lgtm_issues",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix LGTM issues for isotp.py and ccp.py (#2645)\n\n* Fix some issues found by lgtm\r\n\r\n* add exception on double cancel of handle\r\n\r\n* update cancel of Handle"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed8a88c0a76e0a51917",
    "number": 2644,
    "body": "This PR should fix all flake8 issues which appeared from the version change ",
    "head_branch": "fix_flake_issues",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2644 from polybassa/fix_flake_issues\n\nFix flake8 errors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faed9a88c0a76e0a51918",
    "number": 2642,
    "body": "- Inspired by https://github.com/secdev/scapy/issues/253#issuecomment-237552580 but probably easier to use (while being less efficient)\r\n\r\nUsage:\r\n\r\n```\r\nconf.layers.filter([Ether, IP, ICMP])\r\nconf.layers.unfilter()\r\n```\r\n\r\nI should probably add unit tests/doc first",
    "head_branch": "filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2642 from gpotter2/filter\n\nFiltering"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faedaa88c0a76e0a51919",
    "number": 2641,
    "body": "My last tls pr\r\n\r\n- Add proper handling of peer socket closed in `TLSClientAutomaton`\r\n- Add support for socket in the `TLSClientAutomaton`, in the same way it was implemented in `TCP_client`:\r\n\r\n```python\r\na = TLSClientAutomaton.tlslink(HTTP, server=\"www.google.com\", dport=443)\r\npkt = a.sr1(HTTP()/HTTPRequest(), session=TCPSession(app=True), timeout=2, retry=3)\r\n```\r\n- doc",
    "head_branch": "tls-socket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2641 from gpotter2/tls-socket\n\nAdd TLSClientAutomaton socket support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faedba88c0a76e0a5191a",
    "number": 2639,
    "body": "Fairly obvious PR",
    "head_branch": "tls-module-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2639 from gpotter2/tls-module-doc\n\nUpdate tls module doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faedba88c0a76e0a5191b",
    "number": 2637,
    "body": "This identifies [Apple/Google BLE Exposure Notification Service](https://www.apple.com/covid19/contacttracing/) (aka: \"COVID-19 Contact Tracing\") Bluetooth Low Energy beacons.\r\n\r\nI don't work on this project – this is based on the [publicly accessible specification docs](https://covid19-static.cdn-apple.com/applications/covid19/current/static/contact-tracing/pdf/ExposureNotification-BluetoothSpecificationv1.2.pdf), and observed traffic.\r\n\r\nThis does not implement _any_ of the cryptography specification.\r\n\r\n**TODO:**\r\n\r\n* [x] Wait for iOS 13.5 public launch\r\n* [x] Check against some genuine payloads\r\n* [x] Add tests\r\n* [x] Fix docs",
    "head_branch": "ble-contact-tracing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2637 from micolous/ble-contact-tracing\n\nApple/Google BLE Exposure Notification Service"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faedca88c0a76e0a5191c",
    "number": 2636,
    "body": "This is used by CoreBluetooth framework on iOS and macOS when an application is advertising a Peripheral, but there's not enough space in regular advertisements to include it.\r\n\r\nOverflow area beacons omit the Apple-specific length field, and are always 16 bytes.  The OS hashes each application's UUIDs and produces a 7-bit value; this is used to pick which bit to set high in the resulting 128-bit mask.  I've left this as `Raw` for now as that's easiest to work with.\r\n\r\nTest data based on beacons observed from real devices.\r\n\r\nReferences:\r\n\r\n* [Apple: CBPeripheralManager.startAdvertising](https://developer.apple.com/documentation/corebluetooth/cbperipheralmanager/1393252-startadvertising)\r\n* [Hacking the overflow area](http://www.davidgyoungtech.com/2020/05/07/hacking-the-overflow-area)",
    "head_branch": "apple-overflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2636 from micolous/apple-overflow\n\nAdd IDs for Apple BTLE overflow area"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faedda88c0a76e0a5191d",
    "number": 2635,
    "body": "**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [X] I added unit tests or explained why they are not relevant\r\n-   [X] I executed the regression tests for Python2 and Python3 (using `tox` and `cd test && ./run_tests`)\r\n-   [X] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nSkips past any route that is 0.0.0.0 or included in 127.0.0.0/8 (loopback), 224.0.0.0/4 (multicast) or 169.254.0.0/16 (link local).\r\n\r\nI don't believe additional unit tests are appropriate but I'm happy to be corrected on that.\r\n\r\nfixes #2615\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2635 from michthom/master\n\nconf.route.get_if_bcast(iface) should return all valid broadcast addresses"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faedea88c0a76e0a5191e",
    "number": 2633,
    "body": "- rebase of https://github.com/romain-perez/scapy/tree/add-tls13-x448 (last commit only)\r\n- add tests\r\n- credits\r\n\r\nThis was the TLS 1.3 last PR made by romain-perez 🎉 The x448 branch also contained an attempt to add early data support, but it seems it's unfinished so it's not included here. I've rebased it [here](https://github.com/gpotter2/scapy/tree/romain-perez-add-tls13-early-data)",
    "head_branch": "romain-perez-add-tls13-x448",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[TLS 1.3] x448 support (#2633)\n\n* Add support for curve x448\r\n* Add x448 tests\r\n* Credit Romain Perez\r\n\r\nCo-authored-by: rperez <rperez@debian>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faedfa88c0a76e0a5191f",
    "number": 2632,
    "body": "Tested:\r\n\r\nBefore:\r\n```\r\n$ cat filter.py\r\n\\#!/usr/bin/env python3\r\n\r\nimport sys\r\n\r\nfrom scapy.utils import PcapReader, PcapWriter\r\nfrom scapy.all import wrpcap, Ether, IP, ICMP\r\n\r\n\\# assume `./filter.py in.pcap out.pcap`\r\ninfile = sys.argv[1]\r\noutfile = sys.argv[2]\r\n\r\nreader = PcapReader(infile)\r\n\\# TODO: keep snaplen for filters\r\nwriter = PcapWriter(outfile, linktype=reader.linktype, sync=True)\r\n\r\nfor packet in reader:\r\n  writer.write(packet)\r\n\r\nreader.close()\r\nwriter.close()\r\n```\r\n\r\n```\r\n$ ./filter.py /tmp/oneb.pcap /tmp/bar.pcap\r\n$ xxd /tmp/oneb.pcap > /tmp/oneb.pcap.txt\r\n$ xxd /tmp/bar.pcap > /tmp/bar.pcap.txt\r\n$ diff /tmp/oneb.pcap.txt /tmp/bar.pcap.txt\r\n2c2\r\n< 00000010: 0000 0400 0100 0000 eda3 7e5e 3042 0500  ..........~^0B..\r\n---\r\n> 00000010: ffff 0000 0100 0000 eda3 7e5e 3042 0500  ..........~^0B..\r\n```\r\n\r\nAfter:\r\n\r\n```\r\n$ cat filter2.py\r\n\\#!/usr/bin/env python3\r\n\r\nimport sys\r\n\r\nfrom scapy.utils import PcapReader, PcapWriter\r\nfrom scapy.all import wrpcap, Ether, IP, ICMP\r\n\r\n\\# assume `./filter.py in.pcap out.pcap`\r\ninfile = sys.argv[1]\r\noutfile = sys.argv[2]\r\n\r\nreader = PcapReader(infile)\r\nwriter = PcapWriter(outfile, linktype=reader.linktype, sync=True, snaplen=reader.snaplen)\r\n\r\nfor packet in reader:\r\n  writer.write(packet)\r\n\r\nreader.close()\r\nwriter.close()\r\n```\r\n\r\n```\r\n$ ./filter2.py /tmp/oneb.pcap /tmp/bar2.pcap\r\n$ xxd /tmp/bar2.pcap > /tmp/bar2.pcap.txt\r\n$ diff /tmp/oneb.pcap.txt /tmp/bar2.pcap.txt\r\n$\r\n```\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2632 from chemag/master\n\nadd snaplen to both PcapReader and PcapWriter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faedfa88c0a76e0a51920",
    "number": 2631,
    "body": "Fixes #2466 by fixing the broken test.",
    "head_branch": "greatbn-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2631 from p-l-/greatbn-master\n\nFix field name in NSH"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee0a88c0a76e0a51921",
    "number": 2630,
    "body": "A custom PR in between romain-perez ones. This allows to do more practical tests against real world things..\r\n- add support for RFC 8701: TLS GREASE (the server now works with chrome as a client)\r\n- add support for SNI in the TLS client (server now works with www.google.com)\r\n- add debug options to the TLS client and server\r\n- fix RSA on TLS 1.0, 1.1, 1.2. If you use the client on www.google.com with those versions enforced, there was a dumb crash on EncryptedPreMasterSecret.",
    "head_branch": "romain-perez-add-tls13-resume-session-extras",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2630 from gpotter2/romain-perez-add-tls13-resume-session-extras\n\n[TLS 1.3] Extra"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee1a88c0a76e0a51922",
    "number": 2629,
    "body": "Proposal implementation for SMB2 headers dissection.\r\nThis implementation is based on the official documentation of SMB2, available [here](https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SMB2/%5bMS-SMB2%5d.pdf).\r\n\r\n\r\n**Note that** implementation is minimalistic and does not handle every part of the protocol.\r\nFor instance, some fields have been implemented as bytes, but would deserve a specific `Field` class, such as the field `SystemTime` in `SMB2_Negociate_Protocol_Response_Header` that should be parsing the date format: \r\n\r\n```\r\nclass SMB2_Negociate_Protocol_Response_Header(Packet):\r\n    name = \"SMB2 Negociate Protocol Response Header\"\r\n    fields_desc = [\r\n        XLEShortField(\"StructureSize\", 0),\r\n        ...\r\n        # TODO FIXME\r\n        XLongField(\"SystemTime\", 0),\r\n        ...\r\n```",
    "head_branch": "SMB2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2629 from Frky/SMB2\n\nImplementation of SMB2 headers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee2a88c0a76e0a51923",
    "number": 2627,
    "body": "- less organic pipetools tests to make sure they work",
    "head_branch": "pipetoolsdoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2627 from gpotter2/pipetoolsdoc\n\nWiresharksink tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee3a88c0a76e0a51924",
    "number": 2626,
    "body": "Tuple unpacking was removed in python3 ([PEP 3113](https://www.python.org/dev/peps/pep-3113/)) so this example will throw `SyntaxError: invalid syntax`.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee4a88c0a76e0a51925",
    "number": 2625,
    "body": "- rebase of https://github.com/romain-perez/scapy/tree/add-tls13-resume-session\r\n- add tls unit tests",
    "head_branch": "romain-perez-add-tls13-resume-session",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2625 from gpotter2/romain-perez-add-tls13-resume-session\n\n[TLS13] Add tls13 resume session"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee4a88c0a76e0a51926",
    "number": 2624,
    "body": "",
    "head_branch": "pipetoolsdoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee5a88c0a76e0a51927",
    "number": 2622,
    "body": "- also move `run_tests` to new technique\r\n- remove default html output (It only used regression.uts anyways)",
    "head_branch": "run_scapy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2622 from gpotter2/run_scapy\n\nUpgrade run_tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee6a88c0a76e0a51928",
    "number": 2620,
    "body": "Because the section is general and not only dedicated to security, we thought it's a good idea to clarify this with a rename.\r\n\r\n@polybassa ",
    "head_branch": "rename_automotive_security",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2620 from akorb/rename_automotive_security\n\nRename Automotive section in documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee7a88c0a76e0a51929",
    "number": 2619,
    "body": "This PR fixes #2398 ",
    "head_branch": "crypto_advanced_notes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2619 from guedou/crypto_advanced_notes\n\nAdvanced cryptogaphy comment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee8a88c0a76e0a5192a",
    "number": 2614,
    "body": "- merge the pipetools doc in \"Advanced usage\" with the one in the docstrings\r\n- add fancy example on what to do with Pipetools (watch out the size of the gif: any ideas on how to reduce it, or is it fine?)\r\n- add class cross references to \"Advanced usage\"\r\n- https://github.com/secdev/secdev.github.io/pull/29",
    "head_branch": "pipetoolsdoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2614 from gpotter2/pipetoolsdoc\n\nRefactor pipetools doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee9a88c0a76e0a5192b",
    "number": 2613,
    "body": "- remove broken automaton closeups\r\n- improve coverage in multiple files\r\n- fix TFTP automatons blksize with python 3",
    "head_branch": "tftp_coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2613 from gpotter2/tftp_coverage\n\nCoverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faee9a88c0a76e0a5192c",
    "number": 2612,
    "body": "This PR is a cosmetic change that will display \"Checkout Scapy\" instead of the cryptic \"Run actions/checkout@v2\" message.",
    "head_branch": "gha_names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2612 from guedou/gha_names\n\nName the checkout steps"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeeaa88c0a76e0a5192d",
    "number": 2611,
    "body": "",
    "head_branch": "fixwhois",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix whois tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeeba88c0a76e0a5192e",
    "number": 2610,
    "body": "fix #2493\r\n\r\nThe pcap size is very hard to reduce because the interesting packet has a payload that takes roughly the whole pcap size. It's small enough that I ignore it",
    "head_branch": "2493-rebase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "2493 rebase (#2610)\n\n* Fixed HTTP Request parsing issue and http response with TCP PSH flag issue\r\n\r\n* Fixed a bug with upgrade to HTTP2.0\r\n\r\n* Added UT, revised notes according to PEP8\r\n\r\n* Fixed minor bug in scapy sessions\r\n\r\n* Minor fixes\r\n\r\n* Gzip file\r\n\r\nCo-authored-by: nivh-sam <nivh@securingsam.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeeca88c0a76e0a5192f",
    "number": 2605,
    "body": "Bug description\r\n1. set an ip address 10.0.0.1/24 on windows net adapter.\r\n2. read route from scapy(read_route()), results like dst:10.0.0.0 mask: 255.0.0.0 blabla...\r\n3. read route from windows(route print), results like dst:10.0.0.0 mask: 255.255.255.0 blabla...\r\n\r\n",
    "head_branch": "winfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix read_route bug for windows (#2605)\n\n* fix read_route bug for windows\r\n\r\nBug description\r\n1. set an ip address 10.0.0.1/24 on windows net adapter.\r\n2. read route from scapy(read_route()), results like dst:10.0.0.0 mask: 255.0.0.0 blabla...\r\n3. read route from windows(route print), results like dst:10.0.0.0 mask: 255.255.255.0 blabla...\r\n\r\n* fix flake8 errors \r\n\r\nfix flake8 errors and merge master changes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeeda88c0a76e0a51930",
    "number": 2604,
    "body": "This PR fixes #2263 by trying to fix incompatible L3 types. This fix makes sure that the answer will be decoded as the same protocol as the query.",
    "head_branch": "Issue_#2263",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2604 from guedou/Issue_#2263\n\nTry to recover from incompatible L3 types"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeeea88c0a76e0a51931",
    "number": 2603,
    "body": "@TabeaSpahn \r\n@polybassa \r\n\r\nWe would be interested in the opinions of the maintainers.\r\nIt took some time but we think it's finally stable enough to be shown in a PR.\r\n\r\nPython 2 and Python 3 supported.\r\n\r\nThings that probably have to be changed:\r\n\r\n- [x] Merge tests\r\n- [x] Add urwid as an optional dependency to scapy and maybe output a nice error message if the packet viewer is imported even though urwid is not installed\r\n- [x] Add urwid to Travis server\r\n- [x] Fix flake8 errors\r\n- [x] Remove debugging scripts\r\n- [x] Improve documentation (for example add a screenshot of the viewer)\r\n- [x] Show time relative to first packet\r\n\r\nRequirements:\r\n`pip3 install urwid`\r\n\r\nCool feature I want to highlight:\r\nIt's a TUI working fully over ssh which means also mouse interaction is possible over ssh.",
    "head_branch": "packet_viewer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeeea88c0a76e0a51932",
    "number": 2602,
    "body": "Will automerge as soon as it passes",
    "head_branch": "coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Stabilize coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeefa88c0a76e0a51933",
    "number": 2601,
    "body": "Fixes https://github.com/secdev/scapy/issues/2549#issuecomment-609675022",
    "head_branch": "fix_plain_str",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "#2549 Improve consistency for plain_str"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef0a88c0a76e0a51934",
    "number": 2600,
    "body": "\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef1a88c0a76e0a51935",
    "number": 2598,
    "body": "A rebase of an old thing.\r\n\r\nThis PR is pretty cool because TLS sessions can now be automatically matched while sniffing. This will allow to always know the correct TLS version while sniffing a client-server exchange for instance. I actually used a piece of code that was already there (courtesy of mtury) but never used elsewhere (`conf.tls_sessions`).\r\n\r\n```python3\r\nfrom scapy.layers.tls import *\r\ntshark(session=TLSSession)\r\n```\r\n\r\n### Notes\r\n\r\n- Improve SSL2 detection by a lot. This copies how wireshark does it. Previously, any continuation data packet in a TLS stream would have been dissected as SSLv2 before failing.\r\n- There was a `conf.tls_sessions` util that was implemented but never got used. This enables it and create the `TLSSession` util. See the tests\r\n- adds a test",
    "head_branch": "tlssessions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2598 from gpotter2/tlssessions\n\nSniffing with TLS sessions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef2a88c0a76e0a51936",
    "number": 2596,
    "body": "Correct spelling of colletctor_reserved to collector_reserved and numer to number in actor_port_numer & partner_port_numer within the LACP handler.\r\n\r\nPrior PR was autoclosed due to branch deletion: https://github.com/secdev/scapy/pull/2595",
    "head_branch": "fix-lacp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2596 from bmbenson/fix-lacp\n\nMinor spelling corrections in LACP module."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef3a88c0a76e0a51937",
    "number": 2595,
    "body": "Correct spelling of colletctor_reserved to collector_reserved and numer to number in actor_port_numer & partner_port_numer within the LACP handler.",
    "head_branch": "fix-lacp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef3a88c0a76e0a51938",
    "number": 2594,
    "body": "Correct spelling of colletctor_reserved to collector_reserved and numer to number in actor_port_numer & partner_port_numer within the LACP handler.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef4a88c0a76e0a51939",
    "number": 2593,
    "body": "Currently, the usb layer can only parse USBpcap headers and is thus windows only. The goal of this PR is to bring USBmon parsing capabilities so scapy\r\n\r\nIt's far from done, but I need some help along the way, which is why I'm opening the PR now.\r\n\r\nTODO:\r\n - [ ] implement sniffing\r\n - [ ] Add auto recognition of packet in stream/pcap\r\n - [ ] create tests\r\n - [ ] resolve issues described in comments",
    "head_branch": "usbmon_header",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef5a88c0a76e0a5193a",
    "number": 2592,
    "body": "fix https://github.com/secdev/scapy/issues/2579\r\n\r\nShould we release 2.4.4 soon?",
    "head_branch": "dot11fcschksum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix checksum"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef6a88c0a76e0a5193b",
    "number": 2588,
    "body": "This PR fixes #2543.",
    "head_branch": "session_error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2588 from guedou/session_error\n\nWarn if a Python3 session cannot be opened on Python2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef7a88c0a76e0a5193c",
    "number": 2586,
    "body": "~~**Requires #2585**~~\r\n\r\n- rebase of https://github.com/romain-perez/scapy/tree/add-tls13-psk\r\n- includes key update & psk changes\r\n- added tests for both\r\n- refactored unit tests\r\n- cleanup server CCS that ended up duplicated",
    "head_branch": "romain-perez-add-tls13-client-key-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2586 from gpotter2/romain-perez-add-tls13-client-key-update\n\n[TLS13] Client key update & PSK"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef8a88c0a76e0a5193d",
    "number": 2585,
    "body": "- rebase of https://github.com/romain-perez/scapy/tree/add-tls13-client-auth\r\n- PR finished\r\n- unit tests added",
    "head_branch": "romain-perez-add-tls13-client-auth",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Instantiate logger in UTscapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faef9a88c0a76e0a5193e",
    "number": 2584,
    "body": "(draft so I can run this through CI)\r\n\r\nThis a rework of `TunTapInterface` to fix many issues, and generally improve its tests and documentation.\r\n\r\n* New: `ICMPEcho_am`, an `AnsweringMachine` that responds to ICMP Echo requests (IPv4 only).\r\n* New: `BitField`'s `size` parameter to be `callable`.\r\n* Move: `TunTapInterface` from `scapy.supersocket` to `scapy.layers.tuntap`.\r\n* Fix: `tun` on macOS (properly guarded some Linux-specific code), including IPv6 support.\r\n* Fix: `tun` on BSD too (untested).\r\n* Fix/cleanup: endian handling for Linux.\r\n* New: `tun` interfaces on Linux (optionally) expose platform-specific headers (`LinuxTapPacketInfo`) if `strip_packet_info=False`. Other platforms will ignore this setting and emit a warning. By default, `strip_packet_info=True` – packet headers are _stripped_ (for compatibility with existing code, and non-Linux systems).\r\n* New: documentation for TunTap with worked examples.\r\n* New: tests that use `TunTapInterface`'s `recv` / `send` methods (`sendrecv.uts` used packet capture APIs) and IPv6.\r\n* Change: `TunTapInterface` test tags from `linux` to `tun` or `tap`. These tags are disabled on Windows and Solaris by default.\r\n* Change: `scapy.layers.inet6._IPv46` renamed to `IPv46` (ie: it is now public), needed to support IPv6 on BSD/Darwin `tun` devices.\r\n* Change: macOS tests on Travis CI now _include_ `tcpdump` ([these worked fine](https://travis-ci.org/github/micolous/scapy/jobs/567751277)), but now _exclude_ `tun` and `tap` tags (because [Travis CI doesn't let you install third-party kexts](https://travis-ci.community/t/issue-xcode-10-10-13-kernel-extension-user-consent/1287), even when [properly notarised](https://developer.apple.com/documentation/security/notarizing_your_app_before_distribution?language=objc)).\r\n\r\nTested on Linux and macOS 10.15.  Unfortunately macOS on Travis CI doesn't let you load your own kexts, so I had to disable `tap` and `tun` tests there.\r\n\r\nThis is some of the preliminary work I mentioned in #2185, I've cleaned it up a little and rebased on current master.\r\n\r\n**TODO:**\r\n\r\n* use `TUNSIFHEAD` on macOS and BSD\r\n* get tests passing on FreeBSD\r\n\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n\r\n",
    "head_branch": "tuntap-icmp2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Python 2 and the dark age of mystical bugs - Vol 1\n\nBoromir: \"What is this new devilry?\"\n[Gandalf does not respond for a moment. He closes his eyes,\nconcentrating. The rumble is heard again.]\n[Gandalf opens his eyes.]\nGandalf: \"Python 2 — a demon of the ancient world.\"\n[The thing growls, still hidden around a corner of the vast codebase,\nthrowing indescribable bugs. gpotter2's eyes show fear.]\nGandalf: \"This foe is beyond any of you... Run!\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faefaa88c0a76e0a5193f",
    "number": 2582,
    "body": "Hey,\r\nScapy's generated temp files are never get deleted.\r\nI've noticed that after playing with the `offline` sniff feature.\r\nit seems that the function `scapy_delete_temp_files` is used only in the regression test, but not when exit the program.\r\n\r\nI'm not sure why but I seems that `scapy_delete_temp_files` was registered with `atexit`, and was removed in `887a967`. I can't see any reason why it was removed. Anyway, right now temporary files aren't get deleted, and it's bad.\r\n\r\nThanks",
    "head_branch": "scapy-invoke-temp-files-deletion-routine",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2582 from roykuper13/scapy-invoke-temp-files-deletion-routine\n\nInvoke temporary files deletion routine when terminating"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faefaa88c0a76e0a51940",
    "number": 2580,
    "body": "This PR fixes a CI error.",
    "head_branch": "spell_negotiate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2580 from guedou/spell_negotiate\n\nNegociate exception added"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faefba88c0a76e0a51941",
    "number": 2578,
    "body": "This PR aims to:\r\n\r\n* bind `SMB `on the `NBTSession` layer if `TCP` port is `445`,\r\n* add a generic header for `SMB` to dispatch `SMBv1` and `SMBv2` (when the later would be implemented),\r\n* add some tests for `SMB Negociation Protocol Header Request` (dissect and assemble).",
    "head_branch": "smb-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2578 from Frky/smb-test\n\nA few SMB improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faefca88c0a76e0a51942",
    "number": 2577,
    "body": "- fixes issue with sphinx 3.0.0\r\n- remove unused file",
    "head_branch": "docfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2577 from gpotter2/docfix\n\nFix Conf to support Sphinx 3.0.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faefda88c0a76e0a51943",
    "number": 2576,
    "body": "An ancient branch used to make the stats in https://github.com/secdev/scapy/issues/2158",
    "head_branch": "mypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Typo fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faefea88c0a76e0a51944",
    "number": 2574,
    "body": "Tested:\r\n\r\nBefore:\r\n```\r\n$ cat filter.py\r\n\\#!/usr/bin/env python3\r\n\r\nimport sys\r\n\r\nfrom scapy.utils import PcapReader, PcapWriter\r\nfrom scapy.all import wrpcap, Ether, IP, ICMP\r\n\r\n\\# assume `./filter.py in.pcap out.pcap`\r\ninfile = sys.argv[1]\r\noutfile = sys.argv[2]\r\n\r\nreader = PcapReader(infile)\r\n\\# TODO: keep snaplen for filters\r\nwriter = PcapWriter(outfile, linktype=reader.linktype, sync=True)\r\n\r\nfor packet in reader:\r\n  writer.write(packet)\r\n\r\nreader.close()\r\nwriter.close()\r\n```\r\n\r\n```\r\n$ ./filter.py /tmp/oneb.pcap /tmp/bar.pcap\r\n$ xxd /tmp/oneb.pcap > /tmp/oneb.pcap.txt\r\n$ xxd /tmp/bar.pcap > /tmp/bar.pcap.txt\r\n$ diff /tmp/oneb.pcap.txt /tmp/bar.pcap.txt\r\n2c2\r\n< 00000010: 0000 0400 0100 0000 eda3 7e5e 3042 0500  ..........~^0B..\r\n---\r\n> 00000010: ffff 0000 0100 0000 eda3 7e5e 3042 0500  ..........~^0B..\r\n```\r\n\r\nAfter:\r\n\r\n```\r\n$ cat filter2.py\r\n\\#!/usr/bin/env python3\r\n\r\nimport sys\r\n\r\nfrom scapy.utils import PcapReader, PcapWriter\r\nfrom scapy.all import wrpcap, Ether, IP, ICMP\r\n\r\n\\# assume `./filter.py in.pcap out.pcap`\r\ninfile = sys.argv[1]\r\noutfile = sys.argv[2]\r\n\r\nreader = PcapReader(infile)\r\nwriter = PcapWriter(outfile, linktype=reader.linktype, sync=True, snaplen=reader.snaplen)\r\n\r\nfor packet in reader:\r\n  writer.write(packet)\r\n\r\nreader.close()\r\nwriter.close()\r\n```\r\n\r\n```\r\n$ ./filter2.py /tmp/oneb.pcap /tmp/bar2.pcap\r\n$ xxd /tmp/bar2.pcap > /tmp/bar2.pcap.txt\r\n$ diff /tmp/oneb.pcap.txt /tmp/bar2.pcap.txt\r\n$\r\n```\r\n\r\n<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faefea88c0a76e0a51945",
    "number": 2572,
    "body": "## New Features ## \r\nWe added a new socket class - SOCKS5Client which enables scapy to send and receive thorugh SOCKS 5 proxy servers. We also added 2 new packet classes - SOCKS5ClientGreating, SOCKS5ServerChoice, which are the first and second packets in the SOCKS 5 communication process.\r\n\r\n## Why Did We Add This Feature? ##\r\nWe think that this feature will help a lot of people use scapy in a more convenient way when using it in an environment with proxy server (SOCKS5 for now).\r\n\r\n## Why The Missing SOCKS 5 Features? ##\r\nIt's true that we need to add more features to the SOCKS5Client, like more authentication methods.\r\nWe are planning to do so in the future.\r\n\r\n## Why Only SOCKS 5? ##\r\nWe are also planning to add implementation for SOCKS 4.",
    "head_branch": "socks_client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faeffa88c0a76e0a51946",
    "number": 2571,
    "body": "The CM_SLAC_MATCH_CNF second RSVD has 1 byte, replaced ShortField (2 bytes) with ByteField",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2571 from jessekerkhoven/patch-1\n\nFix CM_SLAC_MATCH_CNF second RSVD"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf00a88c0a76e0a51947",
    "number": 2570,
    "body": "- Move `scapy.consts.LOOPBACK_NAME` to `conf.loopback_name` since its not a constant and was changed by Windows multiple times\r\n- Fix loopback for Npcap: they changed the way they handled the loopback interface entirely\r\n- rename `routes_add_loopback` to `_routes_add_loopback` to avoid confusion \r\n- codecov wasn't called on GHCI",
    "head_branch": "loopback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Windows routes mock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf01a88c0a76e0a51948",
    "number": 2568,
    "body": "`seq` has been moved up to `GTPHeader` but `GTPEchoRequest` and others still reference it by `self.seq` which results in `AttributeError`.\r\n\r\nNot sure if this is the best fix, I suppose it would be best not to duplicate the code but not sure how to make scapy understand this logic by implementing it in `GTPHeader`, did not work for me.",
    "head_branch": "bugfix-gtp-seq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix hashret/answers for contrib/gtp.py (#2568)\n\n* fix hashret/answers for contrib/gtp.py\r\n\r\n* Improve GTPv1 answers/hashret\r\n\r\nCo-authored-by: gpotter2 <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf02a88c0a76e0a51949",
    "number": 2567,
    "body": "",
    "head_branch": "coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Stabilize coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf03a88c0a76e0a5194a",
    "number": 2565,
    "body": "@akorb mentioned this bug.\r\nAfter my last refactoring of Python-can Sockets, I forgot to remove the non_blocking flag. The intention of this last refactoring was to make Python-can Sockets behave identical to NativeCANSockets. Therefore, this flag has to be removed. \r\n\r\nDuring the work on this PR, I also mentioned, that NativeCANSockets were treated wrong. These sockets are actually blocking sockets, too. \r\n\r\nThis PR aims to standardize the runtime behaviour of NativeCANSockets and PythonCANSockets.",
    "head_branch": "modify_pythoncan_socket_select",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2565 from polybassa/modify_pythoncan_socket_select\n\nMake NativeCANSockets blocking [ready for merge]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf04a88c0a76e0a5194b",
    "number": 2562,
    "body": "",
    "head_branch": "fix_isotp_exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Catch an uncatched exception which show up in some corner cases"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf04a88c0a76e0a5194c",
    "number": 2561,
    "body": "and preparations for further protocol scanners.\r\n\r\nThis is an improvement of the existing OBD scanner.",
    "head_branch": "obd_scanner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2561 from polybassa/obd_scanner\n\nImplementation of OBD scanner"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf05a88c0a76e0a5194d",
    "number": 2560,
    "body": "This PR investigates the issue from #2554 ",
    "head_branch": "run_scapy_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2560 from guedou/run_scapy_test\n\nFix ./run_scapy unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf06a88c0a76e0a5194e",
    "number": 2559,
    "body": "Few fixes:\r\n\r\n1. _write_to_pcap:\r\n- should use `packets_list`, but instead uses the \"global\"\r\noffline variable. So changed it to `packets_list`.\r\n- Returns `filename` twice. Changed it so it returns just once.\r\n\r\n2. in the  `isinstance` checks part:\r\n- _write_to_pcap doesn't return `offline`. it returns the temp pcap file.\r\n- We do not check `isinstance(offline, PacketList)`, which works as well,\r\nand should be exposed as an option for the user. Now it is.\r\n\r\n3. In case `offline` is a handle/path to a pcap file, the usage of the variable\r\n`offline` is misleading. Now it is more clearified.\r\n\r\n4. Update the comment of `offline` - this attribute\r\ncan recieve also Packet, A list of Packets and a PacketList (not only pcap files).\r\nThis should be mentioned as this feature is very usefull for these cases too (for example,\r\nfilter packets that were sniffed using a raw socket).\r\n\r\nIn addition, I've noticed that when invalid bpf filter is passed to `filter`, wrong/misleading exception message is being raised (`Not a supported capture file`), so i've added the addition of (`or invalid filter`), so the user won't get confused.",
    "head_branch": "refactor-offline-sniff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf07a88c0a76e0a5194f",
    "number": 2558,
    "body": "I'm opening this PR, because in my project i'm doing a lot of offline sniffing (mostly for filtering purposes). each time i'm using `offline` feature of `sniff` I get tcpdump's stderr, which is very very annoying to me, and for the user who uses my project.\r\n\r\nI didn't make `quiet` an option in `sniff` for two reasons:\r\n1. I don't think anyone would want to see this `reading from file -, link-type EN10MB (Ethernet)` message from tcpdump. it's not indicative and tells the user nothing. it's just very disturbing.\r\n2. this PR affects only the offline `sniff` outputs, not other features of `sniff`, so putting `quiet` flag in sniff just doesn't make sense.\r\n\r\ni'll be glad if you'll merge this, or to get suggestion for other solutions!\r\nThanks",
    "head_branch": "offline-sniff-quiet-stderr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2558 from roykuper13/offline-sniff-quiet-stderr\n\nDiscard stderr messages when using offline `sniff`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf08a88c0a76e0a51950",
    "number": 2557,
    "body": "fix https://github.com/secdev/scapy/issues/2530",
    "head_branch": "pptp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2557 from gpotter2/pptp\n\nBetter default protocol version PPTP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf08a88c0a76e0a51951",
    "number": 2556,
    "body": "fix https://github.com/secdev/scapy/issues/2549",
    "head_branch": "plainstr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix #2549"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf09a88c0a76e0a51952",
    "number": 2555,
    "body": "from https://github.com/p4lang/scapy-vxlan. authors are credited.\r\nI had this requested by email\r\n\r\nfix #2228",
    "head_branch": "vxlan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2555 from gpotter2/vxlan\n\nMerge files from scapy-vxlan"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf0aa88c0a76e0a51953",
    "number": 2552,
    "body": "Fixes #2551 \r\n",
    "head_branch": "revert_isotp_skip_print",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert changes to skip print for ISOTP_KERNEL_MODUL unit tests (#2552)\n\n* Change warning of skip print for ISOTP_KERNEL_MODUL unit tests\r\n\r\n* skip unstable obdscanner tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf0ba88c0a76e0a51954",
    "number": 2550,
    "body": "This is just a PoC. A *.uts file will be transformed to a pytest like file. The exported file usually needs manual modifications, but this exporter can be a first step towards pytest",
    "head_branch": "UTScapy_pytest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf0ca88c0a76e0a51955",
    "number": 2548,
    "body": "Appart from what was discussed in the #2544, I've added similar computations for NetflowHeaderV1/NetflowHeaderV5 \"count\" field.\r\n",
    "head_branch": "Issue_#2544",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Issue_#2544 Unit tests for Netflow headers count/length computations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf0da88c0a76e0a51956",
    "number": 2547,
    "body": "- https://github.com/secdev/scapy/pull/2520 but for Windows\r\n- get rid of global keys in `main.py`",
    "head_branch": "console",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Disable jedi on IPython"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf0ea88c0a76e0a51957",
    "number": 2546,
    "body": "- move non root tests to GithubCI: they take ~ 8 minutes in total. Speeds up the travis builds by a lot & give instant feedback to PRs\r\n- fix tests failures after guedou's tests: https://github.com/secdev/scapy/pull/2541 (tox would fail silently)\r\n- pin sphinx >= 2.4.2 (contains fix to https://github.com/secdev/scapy/issues/2475)\r\n- Update Github workflow for better names\r\n- add non root keyword to UTscapy: `-N`\r\n- work around https://github.com/secdev/scapy/issues/2542 (still needs to be fixed !)",
    "head_branch": "ghci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2546 from gpotter2/ghci\n\nFaster tests / Github CI / Fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf0ea88c0a76e0a51958",
    "number": 2545,
    "body": "This changes will give the same globals to every campaign. The context is set back to default before a new campaign is started\r\n\r\nThis was previously discussed in #2535 \r\nFixes  #2535 ",
    "head_branch": "Utscapy_uniq_globals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2545 from polybassa/Utscapy_uniq_globals\n\nDefault globals in Scapy session for every campaign [Ready for merge]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf0fa88c0a76e0a51959",
    "number": 2541,
    "body": "This PR fixes #2540 and adds a unit test for the interactive mode.",
    "head_branch": "fix_run_scapy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix run scapy (#2541)\n\n* Useless shift\r\n\r\n* Test Scapy in interactive mode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf10a88c0a76e0a5195a",
    "number": 2539,
    "body": "When building an IPv6 Router Advertisement, a prefix must be added with the prefix information option. This PR change the default prefixlen value from None to 64. A default value that works in most cases.",
    "head_branch": "ipv6_ra_prefixlen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use 64 bits for the default prefix length"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf11a88c0a76e0a5195b",
    "number": 2538,
    "body": "fix https://github.com/secdev/scapy/issues/2526",
    "head_branch": "tcpdmp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not crash on libpcap missing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf12a88c0a76e0a5195c",
    "number": 2537,
    "body": "This is marked as a draft because I'm having trouble adding tests. When I run test/run_tests it doens't seem to run any of the contrib tests. Is that by design? Can I turn those on?\r\n\r\nAlso, the guidelines say no unnecessary lists. I think `value in [item1, item2, item3, item4]` is a whole lot more readable / maintainable / etc than `value == item1 or value == item2 or value == item3 or value == item4` but I can change it if that's really better.\r\n\r\nThis PR allows you to run `.igmpize()` on IGMPv3 packets that are a type that didn't exist in IGMP. It shouldn't affect too much. I think there may still be some issues in IGMPv3 that I'll have to fix in a separate pull request.\r\n\r\nfixes #2536 \r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "allow .igmpize() on IGMPv3 packet types"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf13a88c0a76e0a5195d",
    "number": 2534,
    "body": "Just adding the assignment so `p` is defined when calling `p.show()`\r\n\r\nDidn't see guidelines for docs in the contributing guide, so let me know if I need anything else. \r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2534 from turing-complet/master\n\nFix bluetooth example"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf14a88c0a76e0a5195e",
    "number": 2531,
    "body": "@serpilliere noticed that the Python 3.6 tests do not work. They last 1 minute, and the logs indicate that the python3.6 interpreter is not detected. It seems that this is broken since 3 to 4 months.\r\n\r\nAccording to Travis documentation (https://blog.travis-ci.com/2019-08-07-extensive-python-testing-on-travis-ci), we must select the xcode version to change the python interpreter. This PR attempts to fix this.",
    "head_branch": "travis_checkout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2531 from guedou/travis_checkout\n\nUse osx_image to change the Python interpreter version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf15a88c0a76e0a5195f",
    "number": 2529,
    "body": "- closes a bunch of files\r\n- closes properly the PcapReader used during `sniff(offline=)`",
    "head_branch": "ghci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2529 from gpotter2/ghci\n\nClose unclosed things"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf15a88c0a76e0a51960",
    "number": 2528,
    "body": "Implemented in #2285 but missing in documentation.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2528 from johnthagen/patch-1\n\nDocument Python 3.8 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf16a88c0a76e0a51961",
    "number": 2527,
    "body": "According to RFC 5246, the size of ServerHello structure is:\r\n\r\n- Version: 2 bytes\r\n- Random: 32 bytes\r\n- Session ID length: 1 bytes\r\n- Cipher: 2 bytes\r\n- Compression: 1 byte\r\n- Extensions Len: 2 bytes\r\n\r\nTotal: 40 bytes.\r\n\r\nPreviously is was set to 38 which parse incorrectly the two next bytes of the following record.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf17a88c0a76e0a51962",
    "number": 2525,
    "body": "Another attempt at reducing the number of files at the root of the project. `setup.cfg` can be used to host the code coverage configuration.",
    "head_branch": "coveragerc_merged",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2525 from guedou/coveragerc_merged\n\n.coveragerc content moved to setup.cfg"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf18a88c0a76e0a51963",
    "number": 2524,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\nThis commit adds support for OSPF Opaque LSAs. Without this commit OSPF LSA dissection breaks when encountering type- 9,10 or 11 LSAs. \r\n\r\nThe capture file at (https://wiki.wireshark.org/SampleCaptures?action=AttachFile&do=get&target=mpls-te.cap) has type-10 LSAs. I have used one of the packets from this file in the OSPF unit test file.\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\n",
    "head_branch": "add_ospf_opaque_lsas",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added OSPF Opaque LSAs (#2524)\n\n* Added OSPF Opaque LSAs\r\n\r\n* Apply reviewer changes as requested\r\n\r\nCo-authored-by: Shaun <smv.1000@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf19a88c0a76e0a51964",
    "number": 2522,
    "body": "This PR adds BTH headers and CNP sub-headers, with a few basic tests. We can add other headers (RDMA, acks, or datagrams) later on.\r\n\r\nI've added a way to read hexdumps from a string to make it easier to write the test. If there's a better way to do that I'd be happy to learn.\r\n\r\nI also wasn't sure whether this belongs in layers or contrib.",
    "head_branch": "roce",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2522 from haggaie/roce\n\nAdd initial support for RoCE packets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf1aa88c0a76e0a51965",
    "number": 2521,
    "body": "fix https://github.com/secdev/scapy/issues/2496",
    "head_branch": "winl2tcpdump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2521 from gpotter2/winl2tcpdump\n\nL2ListenTcpdump windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf1ba88c0a76e0a51966",
    "number": 2520,
    "body": "Another attempt at reducing the number of files at the root of the project. I do not think that three shell scripts are needed to start Scapy =)",
    "head_branch": "less_shell_scripts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2520 from guedou/less_shell_scripts\n\nLess shell scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf1ba88c0a76e0a51967",
    "number": 2519,
    "body": "This PR is an attempt at reducing the number of files at the root of the project. According to codecov documentation, the yaml file can be located anywhere.",
    "head_branch": "codecov_config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "codecov configuration file moved to .github/ (#2519)\n\n* codecov configuration file moved to .github/"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf1ca88c0a76e0a51968",
    "number": 2517,
    "body": "This is a pretty small PR.\r\n\r\nAdded functions for serializing ISOTPSockets into dicts. Currently I am working on a project where I need to store those sockets in JSON format. Well not really the sockets, but the information that is necessary to create those sockets from the stored JSON.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf1da88c0a76e0a51969",
    "number": 2516,
    "body": "This adds support for [Packet Forwarding Control Protocol (PFCP)](https://en.wikipedia.org/wiki/PFCP) as described in [3GPP TS 29.244](https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=3111).\r\nSome of the testing is done using pcap file generated using [pfcplib](https://github.com/travelping/pfcplib).\r\n15.x version of spec is more or less completely implemented, with some of 16.x fields being supported, too.\r\n\r\n",
    "head_branch": "pfcp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2516 from ivan4th/pfcp\n\nAdd PFCP module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf1ea88c0a76e0a5196a",
    "number": 2514,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf1fa88c0a76e0a5196b",
    "number": 2512,
    "body": "- run the 3 health tests on Github CI to reduce Travis workload\r\n- fix version detection for Read the docs\r\n- cache tox in travis",
    "head_branch": "ghci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2512 from gpotter2/ghci\n\nTest suite"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf20a88c0a76e0a5196c",
    "number": 2509,
    "body": "This Pull Request adds `scapy.contrib.tf_agent` module which can be used for pcaps captured on pkt0 interface (it is used to punt packets from Tungsten Fabric VRouter to user-space agent, but has special encapsulation header)\r\n\r\nMore info on how pkt0 works is here:\r\nhttps://tungstenfabric.github.io/website/Tungsten-Fabric-Architecture.html#packet-processing\r\n\r\nUsage example:\r\n```\r\n#!/usr/bin/python3\r\nfrom scapy.all import rdpcap\r\nimport scapy.contrib.tf_agent\r\n\r\npcap = rdpcap(\"pkt0.pcap\")\r\nfor pkt in pcap:\r\n    print(pkt[1].mysummary(), \"|\", pkt[2].summary())\r\n```\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf20a88c0a76e0a5196d",
    "number": 2508,
    "body": "This PR explicitly states that the examples are made for Python 2.",
    "head_branch": "Issue_#2494",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2508 from guedou/Issue_#2494\n\nIndicates that the tutorial is Python 2 based"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf21a88c0a76e0a5196e",
    "number": 2507,
    "body": "",
    "head_branch": "ecu_am_improve",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Aim to improve ECU_am unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf22a88c0a76e0a5196f",
    "number": 2503,
    "body": "Improvement of `obdscanner.uts`, `isotp.uts` and `isotp_scan.uts`. Some bugs in `obdscanner.py` and a bug in `isotpscan` will be fixed.",
    "head_branch": "obdscanner_speedup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2503 from polybassa/obdscanner_speedup\n\nOBD_Scanner and ISOTP improvements and speedup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf23a88c0a76e0a51970",
    "number": 2502,
    "body": "This PR fixes two instabilities in automotive unit tests, recently discussed in #2478. Besides that, this PR speeds up the execution of isotpscanner unit tests. ",
    "head_branch": "speedup_isotpscan_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix pypy3 unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf24a88c0a76e0a51971",
    "number": 2501,
    "body": "This should fix some test for PR #2478 \r\nI'm still investigation the error on pypy3",
    "head_branch": "isotpfix_2476",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf25a88c0a76e0a51972",
    "number": 2500,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n<!-- brief description what this PR will do, e.g. fixes broken dissection of XXX -->\r\n\r\n---\r\n\r\nI think checking C `errno` will prevent hard-to-debug crashes such like #2422.\r\n\r\nIf you maintainers are positive on it, I'll work on TODOs below:\r\n\r\n- Tests\r\n- Apply to all files where `ctypes.CDLL` is used\r\n  - Move this patch from winpcapy.py to a new file\r\n- Try wrapping `ctypes.CDLL` rather than wrapping all C functions\r\n- Take the responsibility of checking and dumping `errbuf` in winpcapy.py\r\n\r\n---\r\n\r\n<!-- if required - short explanation why you fixed something in a way that may look more complicated as it actually is ->>\r\n\r\n<!-- if required - outline impacts on other parts of the library -->\r\n\r\nfixes #xxx <!-- (add issue number here if appropriate, else remove this line) -->\r\n",
    "head_branch": "check-c-errno",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf25a88c0a76e0a51973",
    "number": 2498,
    "body": "The GSN Address Information Element in GTP can include either an IPv4 or an IPv6 address.\r\nPackets with IPv6 address were wrongly parsed and treated as IPv4 resulting even in a broken IE list.",
    "head_branch": "gtp-ipv6-gsn-address-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2498 from EMnify/gtp-ipv6-gsn-address-fix\n\nGTP: fix IPv6 in GSN Address IE"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf26a88c0a76e0a51974",
    "number": 2497,
    "body": "Very basic implemenation for xcp layer an can. Implemented xcpscanner. An implementaion of all xcp commands is still required.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf27a88c0a76e0a51975",
    "number": 2495,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2495 from kjivan/patch-1\n\nFixing small typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf28a88c0a76e0a51976",
    "number": 2493,
    "body": "<!-- This is just a checklist to guide you. You can remove it safely. -->\r\n\r\n**Checklist:**\r\n\r\n-   [X ] If you are new to Scapy: I have checked [CONTRIBUTING.md](https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md) (esp. section submitting-pull-requests)\r\n-   [ X] I squashed commits belonging together\r\n-   [ X] I added unit tests or explained why they are not relevant\r\n-   [ X] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\nThis PR fixes broken reassembly of HTTP messages in case a TCP PSH flag exists. Currently when reassembling HTTP messages - if content-length is not yet supplied and a TCP PSH message appears, the HTTP message will be considered complete, even though it may not be the case. An example of such communication exists in the pcap I added in test\\pcaps\\http_tcp_psh.pcap\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf29a88c0a76e0a51977",
    "number": 2491,
    "body": "fix https://github.com/secdev/scapy/issues/2485",
    "head_branch": "gtpv2fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2491 from gpotter2/gtpv2fix\n\nFix GTP for Python 3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf2aa88c0a76e0a51978",
    "number": 2490,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixing some issues on packets decoding, especially piggyback MAC commands + feedbacks from Guillaume"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf2ba88c0a76e0a51979",
    "number": 2489,
    "body": "…e there Information Disclosure policy\r\n\r\nCould you please merge this PR as soon as possible.",
    "head_branch": "remove_daimler_files",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2489 from polybassa/remove_daimler_files\n\nDaimler AG kindly asked for removal of these files, since they violat…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf2ba88c0a76e0a5197a",
    "number": 2488,
    "body": "Added new IEs and fields for GTPv2 message as per 3GPP TS 29.274   V16.2.0 (2019-12) - http://www.3gpp.org/ftp//Specs/archive/29_series/29.274/29274-g20.zip\r\n\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2488 from UmakantKulkarni/master\n\nNew IEs and fields for GTPv2 message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf2ca88c0a76e0a5197b",
    "number": 2487,
    "body": "And added some more definitions\r\n\r\nThis PR implements a directed socket which allows UDS communication over a StreamSocket\r\n",
    "head_branch": "bmw_enet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2487 from polybassa/bmw_enet\n\nImprove BMW ENET Socket implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf2da88c0a76e0a5197c",
    "number": 2486,
    "body": "Just try to increase the test coverage",
    "head_branch": "isotpCoverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2486 from polybassa/isotpCoverage\n\nIsotp coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf2ea88c0a76e0a5197d",
    "number": 2484,
    "body": "This PR tries to improve the ecu_am unit tests",
    "head_branch": "improve_ECU_am_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2484 from polybassa/improve_ECU_am_tests\n\nImprove ecu_am tests [ready for merge]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf2fa88c0a76e0a5197e",
    "number": 2483,
    "body": "Try to fix #2481 #2482 \r\n@gpotter2 Thanks for your advice. ",
    "head_branch": "fix_#2482",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2483 from polybassa/fix_#2482\n\nTry to fix ISOTPNativeSocket bug [ready for merge]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf30a88c0a76e0a5197f",
    "number": 2480,
    "body": "This PR installs `ifconfig` in Travis, and tests if it exists in `test/linux.uts`.",
    "head_branch": "check_ifconfig",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Discard test when ifconfig is not present"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf30a88c0a76e0a51980",
    "number": 2478,
    "body": "- drop deprecated dnet support (2years)\r\n- finish grouping sudo/non-sudo travis tests (some where already)\r\n- cleanup tox\r\n- update travis ci config format\r\n- fix linux_warning test\r\n- automatically disable tests that require root when running non root within UTscapy\r\n- fix cryptography deprecations\r\n- fix some python3-only buggy tests\r\n\r\nThis should speed up travis builds a lot",
    "head_branch": "dnetdrop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2478 from gpotter2/dnetdrop\n\nDrop DNET & cleanup travis/tox"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf31a88c0a76e0a51981",
    "number": 2477,
    "body": "",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf32a88c0a76e0a51982",
    "number": 2476,
    "body": "Add support for \"new\" brotli  compression in HTTP. Tested with a pcap from wireshark repo.\r\n\r\nRequires the package https://github.com/google/brotli (not added as dependencie).",
    "head_branch": "http-brotli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for HTTP Brotli compression\n\nFix brotli CI test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf33a88c0a76e0a51983",
    "number": 2473,
    "body": "Hi!\r\n\r\nThis PR adds new classes to scapypipes, that are similar to TCPListenPipe and TCPConnectPipe.",
    "head_branch": "udppipetool",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add UDPClientPipe and UDPServerPipe to scapypipes (#2473)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf34a88c0a76e0a51984",
    "number": 2472,
    "body": "Hi!\r\n\r\nThis PR fixes a small bug in ConsoleSink.\r\n\r\nNow, we call repr(msg) instead of using \"%r\" % msg, as the latter triggers a\r\nTypeError Exception when msg is a tuple (\"not all arguments converted\r\nduring string formatting\"). This happens when connecting the high\r\noutput of a TCPListenPipe to a ConsoleSink.\r\n\r\nNo unit tests added: there are already unit tests covering ConsoleSink.",
    "head_branch": "consolesink",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2472 from Lastpixl/consolesink\n\nAdd support for tuples in pipetool.ConsoleSink."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf35a88c0a76e0a51985",
    "number": 2471,
    "body": "This PR fixes #2470 ",
    "head_branch": "Issue_#2470",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2471 from guedou/Issue_#2470\n\nCatch OSError on del()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf36a88c0a76e0a51986",
    "number": 2469,
    "body": "Very basic implemenation for xcp layer an can. Implemented xcpscanner.\r\n\r\nAn implementaion of all xcp commands is still required. \r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf37a88c0a76e0a51987",
    "number": 2468,
    "body": "This PR adds tests for the ARM64 architecture.",
    "head_branch": "travis_arm64",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf37a88c0a76e0a51988",
    "number": 2467,
    "body": "- Hide comments in markdown",
    "head_branch": "template-fix1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2467 from secdev/template-fix1\n\nHide markdown comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf38a88c0a76e0a51989",
    "number": 2466,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [x ] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n-   [ ] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\nFix wrong property in `bind_layers` function of NSH protocol. In the NSH class, it defines `nextproto` for next protocol property. \r\n\r\nI changed from `nextprotocol` to `nextproto` in `bind_layers`  functions.\r\n\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\n\r\n> if required - outline impacts on other parts of the library\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf39a88c0a76e0a5198a",
    "number": 2465,
    "body": "- Add basic routing doc",
    "head_branch": "routing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2465 from gpotter2/routing\n\nRouting doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf3aa88c0a76e0a5198b",
    "number": 2464,
    "body": "fix #2257",
    "head_branch": "netflowv9fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2464 from gpotter2/netflowv9fix\n\nFix NetflowOptionsFlowsetV9 padding #2257"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf3ba88c0a76e0a5198c",
    "number": 2463,
    "body": "**edited by gpotter2: squashed & rebased**",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2463 from IrinaPopa/master\n\nadd IPOption_Timestamp from rfc791"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf3ca88c0a76e0a5198d",
    "number": 2462,
    "body": "Fix for https://github.com/secdev/scapy/issues/2461",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2462 from willfroning/master\n\nPort 80 is hard-coded in the tcp_client"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf3ca88c0a76e0a5198e",
    "number": 2460,
    "body": "This PR fixes #2447 and makes Scapy works on Linux kernel < 2.6.21 with Python3.\r\n\r\nThere are two issues:\r\n1.  no auxdata support before Linux 2.6.21\r\n2.  Python3 recvmsg() returns data when auxdata are not supported\r\n\r\n",
    "head_branch": "auxdata_old_kernel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Switch from warning to info message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf3da88c0a76e0a5198f",
    "number": 2459,
    "body": "@TabeaSpahn \r\n@polybassa \r\n\r\nMainly visual refactoring but also:\r\n\r\n- Do not set `ISOTPSocket` hardcoded before testing it. This would check the hardcoded set instead of the former import.\r\n- Only check if ISOTPNativeSocket has been imported if Python3 is used. Python2 can never import the native version.",
    "head_branch": "obd_test_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactoring automotive tests (#2459)\n\n* Refactoring automotive tests\n\nTest 'Test wrong socket for Python2 or Windows' has never actually been executed in isotpscanner.uts and obdscanner.uts because the return code was not 0.\nTest 'Test show help' in obdscanner.uts also has never been executed since the return code was 0 and it checked for 1 in an if\nprint usage only on stderr if it is actually an error, otherwise on stdout\nRemoval of 'shell=True'\nDo not use sys.exit(-1), since the actual exit code will be platform dependent if using negative value\n\n* Remove more shell=True\n\n* Use communicate where applicable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf3ea88c0a76e0a51990",
    "number": 2458,
    "body": "Following a discussion on gitter, this PR removes commented broken AH & ESP implementations. The IPsec implementation works fine with IPv6, see https://github.com/secdev/scapy/blob/master/test/ipsec.uts#L3705",
    "head_branch": "ipv6_ipsec_cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Commented broken AH & ESP implementations removed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf3fa88c0a76e0a51991",
    "number": 2457,
    "body": "@polybassa ",
    "head_branch": "doc_corrections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "corrected automotive documentation (#2457)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf40a88c0a76e0a51992",
    "number": 2456,
    "body": "This PR adds a dynamic test execution for `ISOTPScan` tests. These tests are dependant on the system load of the CI-machines and fail more likely on higher load conditions. If the scan-tests fail, the test will be executed again, with higher internal timeout values. This dynamically increases of the `sniff_time` parameter should ensure that the whole campaign doesn't fail.",
    "head_branch": "speedup_isotpscan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Decrease test run time for isotpscan [ready for merge] (#2456)\n\n* Decrease test run time for isotpscan\r\n\r\n* change send behaviour of isotp scan\r\n\r\n* Revert \"change send behaviour of isotp scan\"\r\n\r\nThis reverts commit accee62dbc26aadf01abce01add8fe3265828bc4.\r\n\r\n* increase timings\r\n\r\n* change isotpscan behavior\r\n\r\n* Add dynamic sniff_time manipulation to make isotpscan unit tests faster and more stable\r\n\r\n* searching for bug on online CI\r\n\r\n* change dynamic behaviour\r\n\r\n* hunting bug\r\n\r\n* cleanup isotpscan.uts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf41a88c0a76e0a51993",
    "number": 2455,
    "body": "This PR fixes #2450 ",
    "head_branch": "Issue_#2450",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Check that tls_version is not None"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf42a88c0a76e0a51994",
    "number": 2453,
    "body": "This allows the investigation of a failed unit-test right away. All\r\nlocals are preserved and passed to an interpreter for manual retesting.",
    "head_branch": "UTScapy_drop_interactive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2453 from polybassa/UTScapy_drop_interactive\n\nAdd 'drop to interpreter' option for UTScapy."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf42a88c0a76e0a51995",
    "number": 2452,
    "body": "",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update usage.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf43a88c0a76e0a51996",
    "number": 2451,
    "body": "Rewrite of SOME/IP SDEntry and SDOption classes to remove unnecessary complexity, adding unittests for both\r\n\r\nfixes #2348 ",
    "head_branch": "someip-rewrite2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SOME/IP Service Discovery (SD) Entry and Option fixes (#2451)\n\n* make fields more readable\r\n\r\n* removing unnecessary complexity, fixes #2348\r\n\r\n* rewrite SDOption handling, fixing some bugs, added unittests\r\n\r\n* bundle common fields in a function for consistency\r\n\r\n* cleanup whitespace, use generators instead of lists, remove pointless assert, make codacy happy\r\n\r\n* increase testcase coverage by forcing parsing of a SDEntry_EventGroup\r\n\r\n* fix sphinx warning"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf44a88c0a76e0a51997",
    "number": 2448,
    "body": "Add a new Format option to UTScapy in order to be able to get the output of the tests still to stdout, while the tests are running. This helps me during debugging of long running jobs.\r\nIn my laboratory I use UTScapy to run hardware in the loop tests against ECUs. Such tests can take multiple days, sometimes.",
    "head_branch": "UTScapy_live",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a unit test format to get the output directly (live)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf45a88c0a76e0a51998",
    "number": 2444,
    "body": "I've added a time trace functionality to UTScapy. \r\nI will investigate the time consumption of my unit-tests in order to find long-running tests. \r\nMaybe this chances are interesting for UTScapy in general. What's your opinion?",
    "head_branch": "UTScapy_timetrace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add time trace function for UTScapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf46a88c0a76e0a51999",
    "number": 2443,
    "body": "This PR does away with some unnecessary complexity through PacketFields which breaks bind_layers() functionality. It also combines SOME/IP and SOME/IP+SD into a single contrib module. In essence, this PR picks up where (abandoned?) PR #2347 left off, fixing Issue #2343 as well. Documentation and tests have been updated.\r\n\r\nfixes #2343 \r\n",
    "head_branch": "someip-rewrite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "removing whitespaces"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf47a88c0a76e0a5199a",
    "number": 2442,
    "body": "",
    "head_branch": "doc-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update send & receive documentation (#2442)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf47a88c0a76e0a5199b",
    "number": 2441,
    "body": "- binds the SOMEIP layer to UDP and TCP also when dport, and not just sport) is in the correct range\r\n- corrects the displaying of certain fields as hex where it makes sense\r\n",
    "head_branch": "someip-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2441 from StevenVanAcker/someip-fixes\n\nSOME/IP bind_layers() fix + esthetics"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf48a88c0a76e0a5199c",
    "number": 2440,
    "body": "There exists a bug in LLDP where invalid MAC\r\naddresses throw an exception instead of allow\r\nthe value, as was the behavior in previous versions\r\n\r\nIncluded in this commit is an LLDP unit test that\r\nshould cover this condition.\r\n\r\nThis is just a checklist to guide you. You can remove it safely.\r\n\r\nThis is being submitted as a draft to solicit feedback from maintainers.\r\n",
    "head_branch": "mac2str-changes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2440 from nstarke/mac2str-changes\n\nFixing LLDP MAC Address Bug"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf49a88c0a76e0a5199d",
    "number": 2439,
    "body": "Bunch of edits I for some reason never published\r\n- close http automatons properly\r\n- include the iptables code directly in the request handler",
    "head_branch": "httpautomaton",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2439 from gpotter2/httpautomaton\n\nHttp automatons fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf4aa88c0a76e0a5199e",
    "number": 2438,
    "body": "- since winpcapy.py is pretty much ours (heavily modified nowadays), let's include it in flake8 (autopep8)\r\n- remove flake8 ignore tags: those don't exist and allowed some files to bypass rules 😠 \r\n\r\nThis will require the files in question to be fixed. Mostly automotive files",
    "head_branch": "flake8f",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "flake8 rules (#2438)\n\n* Flake8 winpcapy.py\r\n\r\n* Remove \"flake8: noqa: XXXX\"\r\n\r\nThose are ineffective as noted by\r\nhttps://stackoverflow.com/a/54454433\r\n\r\n* Reflak8ify all, http2 and UTscapy\r\n\r\n* Flake8 automotive/daimler/definitions.py\r\n\r\n* Flake8 automaton/obd/scanner.py\r\n\r\n* obd scanner E501 exception"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf4ba88c0a76e0a5199f",
    "number": 2437,
    "body": "This PR requires #2428 to be merged.\r\n\r\nComplete refactoring of the usage of `python-can` inside Scapy.\r\n\r\nIn the past, `NativeCANSockets` and `PythonCANSockets` showed a different runtime behaviour. \r\nThis PR aims to imitate the behaviour of Linux SocketCAN for `BusABC` objects of `python-can`. This includes the functionality of `select` which is no possible on `python-can` `Bus` objects.\r\nAdditionally to that, in the past it was not possible to create multiple `CANSocket()` objects with the same `BusABC` object as interface. `BusABC` implements a abstraction for all kind of drivers for CAN-interfaces. Some of these drives can only be used once. The new middle layer introduced in this PR resolves this problem. It's now possible to create as many `PythonCANSockets()` as you want, identically to the behaviour of `NativeCANSockets`. \r\n\r\nThis PR removes `srcan`.",
    "head_branch": "python-can-refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2437 from polybassa/python-can-refactoring\n\nRefactoring of python-can CANSockets [ready for merge]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf4ca88c0a76e0a519a0",
    "number": 2435,
    "body": "Removing 2 timer threads from each ISOTPSoftSocket\r\n\r\nISOTPSoftSocket needs timers to handle RX and TX timeouts, which were previously\r\nimplemented in a way similar to what is done in the threading.Timer object in\r\npython: spawning a thread for each timer.\r\n\r\nThis PR removes the two timer threads from each ISOTPSoftSocket, and replaces\r\nthem with one global static thread, implemented in the TimeoutScheduler class.\r\n\r\nThis should make the ISOTPSoftSocket more performant and fix some\r\nISOTPSoftSocket tests that sometimes fail due to timeouts.\r\n\r\nPS: The ISOTPScan tests are currently failing due to an unrelated issue\r\nfixed in PR 2428. The ISOTPSoftSocket code is not used in ISOTPScan.",
    "head_branch": "unify-isotp-timeout-threads",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removing 2 timer threads from each ISOTPSoftSocket (#2435)\n\n* Removing 2 timer threads from each ISOTPSoftSocket\r\n\r\nISOTPSoftSocket needs timers to handle RX and TX timeouts, which were previously\r\nimplemented in a way similar to what is done in the threading.Timer object in\r\npython: spawning a thread for each timer.\r\n\r\nThis PR removes the two timer threads from each ISOTPSoftSocket, and replaces\r\nthem with one global static thread, implemented in the TimeoutScheduler class.\r\n\r\nThis should make the ISOTPSoftSocket more performant and fix some\r\nISOTPSoftSocket tests that sometimes fail due to timeouts.\r\n\r\n* Adding timeouts to wait() to debug appveyor deadlock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf4ca88c0a76e0a519a1",
    "number": 2434,
    "body": "### Fix broken arithmetic with Packet.time due to the introduction of `EDecimal` in b3bfc9b (#2352)\r\n\r\nThis pull request fixes arithmetic involving `Packet.time` and `float` values, that broke as a result of #2352, which introduced the class `EDecimal`.\r\nTo fix the problems any other value is converted to `Decimal` before calling the corresponding operator function of `Decimal`. In addition the appropriate functions for right values have been inserted.\r\n\r\n`run_tests_py2` and `run_tests_py3` show the same number of passes/fails as for the commit before (dcfb63d0).\r\n\r\nfixes #2433\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix EDecimal<->float arithmetic (#2434)\n\n* Fix EDecimal<->float arithmetic\r\n\r\nFix broken arithmetic with Packet.time due to the introduction\r\nof EDecimal in b3bfc9b (#2352)\r\n\r\n* Break comment line to comply to max length of 79 characters\r\n\r\nCo-Authored-By: Gabriel <gabriel@potter.fr>\r\n\r\nCo-authored-by: Gabriel <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf4da88c0a76e0a519a2",
    "number": 2431,
    "body": "Add VRRPv3 support for IPv6 address list. The addrlist field only\r\nsupports IPv4 addresses. Make it conditional on IP as the underlayer\r\nand add another conditional addrlist6 which is conditional on IPv6\r\nas the underlayer.\r\n\r\nfixes #2430 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add VRRPv3 support for IPv6 address list (#2430)\n\nAdd VRRPv3 support for IPv6 address list. The addrlist field only\nsupported IPv4 addresses. Convert it to a MultipleTypeField to\nallow IPv6 addresses or IPv4 depending on the underlayer.\n\nAdd three unit tests for VRRPv3 with IPv6 underlayer."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf4ea88c0a76e0a519a3",
    "number": 2428,
    "body": "This PR\r\n\r\n* refactors the `drain_bus` function\r\n* ensures that all blocking calls like `wait()` or `join()` have a timeout set,\r\n* ensures that all sockets will be closed after a test (using with)\r\n* changes some timings in the hope that this will make some tests more reliable\r\n* adds a minor improvement to ISOTPScan",
    "head_branch": "automotive_unit_test_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "revert flake8 related changes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf4fa88c0a76e0a519a4",
    "number": 2426,
    "body": "Credits for the timestamp bug to Ron Henderson\r\n\r\nfix #2423\r\nfix #2425 \r\nfix #2277\r\nfix #2429",
    "head_branch": "tmstps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2426 from gpotter2/tmstps\n\nFix L3 timestamps"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf50a88c0a76e0a519a5",
    "number": 2422,
    "body": "**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n    - WIP\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n    - WIP\r\n-   [x] If the PR is still not finished, please create a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\n\r\n`errno` set by pcap_open_live(3) (typically `EPERM` or `ENXIO`) was not checked, eventually causing a segmentation violation at `pcap_get_selectable_fd()`:\r\n\r\n```sh\r\n$ python3 -c 'from scapy.all import *; conf.use_pcap = True; sendp(\"\", iface=\"eth0\")'\r\nfish: “python3 -c 'from scapy.all impo…” terminated by signal SIGSEGV (Address boundary error)\r\n```\r\n\r\nbecause pcap_get_selectable_fd(3) refered to `NULL`:\r\n\r\n```hs\r\n(gdb) bt\r\n#0  pcap_get_selectable_fd (p=0x0) at ./pcap.c:1419\r\n#1  0x00007f963a72781e in ffi_call_unix64 () from /lib/x86_64-linux-gnu/libffi.so.6\r\n#2  0x00007f963a7271ef in ffi_call () from /lib/x86_64-linux-gnu/libffi.so.6\r\n#3  0x00007f963b17cf49 in _call_function_pointer (flags=flags@entry=4353, pProc=pProc@entry=0x7f96382d1300 <pcap_get_selectable_fd>, avalues=0x7ffd96028bd0,\r\natypes=<optimized out>, restype=<optimized out>, resmem=resmem@entry=0x7ffd96028be0, argcount=1) at ./Modules/_ctypes/callproc.c:827\r\n#4  0x00007f963b17d965 in _ctypes_callproc (pProc=pProc@entry=0x7f96382d1300 <pcap_get_selectable_fd>, argtuple=argtuple@entry=0x7f963b263608, flags=4353,\r\nargtypes=argtypes@entry=0x7f9638360d58, restype=restype@entry=0x18d7628, checker=checker@entry=0x0) at ./Modules/_ctypes/callproc.c:1184\r\n#5  0x00007f963b176401 in PyCFuncPtr_call (self=0x7f963836bcf0, inargs=<optimized out>, kwds=<optimized out>) at ./Modules/_ctypes/_ctypes.c:3969\r\n#6  0x000000000043730f in ?? ()\r\n#7  0x00007f96382823b8 in ?? ()\r\n#8  0x0000000000000000 in ?? ()\r\n\r\n(gdb) l\r\n1414\r\n1415    #if !defined(_WIN32) && !defined(MSDOS)\r\n1416    int\r\n1417    pcap_get_selectable_fd(pcap_t *p)\r\n1418    {\r\n1419        return (p->selectable_fd);\r\n1420    }\r\n1421    #endif\r\n1422\r\n1423    void\r\n\r\n(gdb) p p\r\n$1 = (pcap_t *) 0x0\r\n```\r\n\r\nFor `EPERM` and `ENXIO`, I added user-friendly error messages:\r\n\r\n```\r\nOSError: Could not open iface eth0: Operation not permitted (needs sudo?)\r\nOSError: Could not open iface nonexist0: Device not configured (nonexist0 not exist?)\r\n```\r\n\r\nc.f. usage of `use_errno=True` in `ctypes.CDLL`: https://github.com/python/cpython/blob/v3.8.1/Lib/ctypes/test/test_errno.py\r\n\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\n\r\n> if required - outline impacts on other parts of the library\r\n\r\nfixes #xxx (add issue number here if appropriate, else remove this line)\r\n",
    "head_branch": "pcap-open-segv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf51a88c0a76e0a519a6",
    "number": 2420,
    "body": "fixes https://github.com/secdev/scapy/issues/2397\r\n\r\n- first one is already tested in the nonblock tests above\r\n- second one literally duplicates a few lines below\r\n\r\nhttps://github.com/gpotter2/scapy/blob/f89e5399cf4cf242d04ea55a3b38d5fc1ae9985a/test/regression.uts#L12580",
    "head_branch": "testsstable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2420 from gpotter2/testsstable\n\nRemove unstable tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf52a88c0a76e0a519a7",
    "number": 2419,
    "body": "fixes https://github.com/secdev/scapy/issues/2412",
    "head_branch": "netflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2419 from gpotter2/netflow\n\nNetflow documentation & helper"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf52a88c0a76e0a519a8",
    "number": 2418,
    "body": "- a few doc fixes / improvements of build process\r\n- add RFC-like templates in the autodoc. They are expandable and minimized by default\r\n![99C8F617-BFE8-4182-AB95-B2317E17EA02](https://user-images.githubusercontent.com/10530980/72662926-fc871e00-39ec-11ea-8a40-26e635e07bc8.jpeg)",
    "head_branch": "docupdate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2418 from gpotter2/docupdate\n\nDoc update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf53a88c0a76e0a519a9",
    "number": 2415,
    "body": "Big refactoring of automotive related unit tests.\r\nRemoved almost all calls to time.sleep()\r\nChanged unit tests to be event-driven\r\nEnsured that every socket is closed after a test",
    "head_branch": "automotive_unit_test_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2415 from polybassa/automotive_unit_test_refactoring\n\nAutomotive unit test refactoring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf54a88c0a76e0a519aa",
    "number": 2414,
    "body": "This PR fixes #2413.",
    "head_branch": "Issue_#2413",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CDP & VTP - Missing Python3 conversion (#2414)\n\nMissing Python3 conversion & unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf55a88c0a76e0a519ab",
    "number": 2411,
    "body": "This PR is the second fix for PR 2406. This patch makes it possible the malformed DNS packets that crashed Scapy.\r\n\r\nI did not find a way to easily reproduce the issue, and I am reluctant do add the 1.3KB malformed packet to the repository.",
    "head_branch": "Issue_#2406",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf56a88c0a76e0a519ac",
    "number": 2409,
    "body": "Add a TCP server as requested in #2083.\r\n\r\nThe server completes the 3way handshake by sending the SA and checking the receive of the resulting ack.\r\n\r\nFor unit testing, I thought adding it in the same file that the ones for the TCP_client but it did not find them.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf57a88c0a76e0a519ad",
    "number": 2408,
    "body": "This PR partially fixes 2406. It is the root cause of the issue that triggers the recursion loop.",
    "head_branch": "dnstcp_check_length",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make sure that a valid TCP over DNS message can be decoded (#2408)\n\nMake sure that a valid TCP over DNS message can be decoded, warn that the DNS message is too small."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf57a88c0a76e0a519ae",
    "number": 2405,
    "body": "",
    "head_branch": "fix_isotp_time_sleep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2405 from polybassa/fix_isotp_time_sleep\n\nRemove multiple time.sleep() calls in isotp unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf58a88c0a76e0a519af",
    "number": 2404,
    "body": "This PR changes the random-function of two isotpscan unit tests. It seems that the test is sometimes failing, if socket ids are to close together. ",
    "head_branch": "fix_isotpscan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2404 from polybassa/fix_isotpscan\n\nTry to fix sporadically failing tests for isotpscan"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf59a88c0a76e0a519b0",
    "number": 2403,
    "body": "This PR fixes conflict in #1574 and PEP-08 errors.\r\n\r\nIt still lacks unit tests.",
    "head_branch": "PR#1574_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf5aa88c0a76e0a519b1",
    "number": 2401,
    "body": "This was an attempt to solve https://github.com/secdev/scapy/issues/2277. I forgot to push it.\r\nThere are still issues to be solved, but this currently helps a lot when it comes to very fast answers.\r\n\r\n- threaded mode is now optional in `sndrcv`\r\n- use ancillary data by default to get a more accurate timestamp. This allowed to drastically reduce the timestamp during a localhost ping (now ~1e-5)",
    "head_branch": "cleanups",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2401 from gpotter2/cleanups\n\nRework timestamp detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf5ba88c0a76e0a519b2",
    "number": 2399,
    "body": "This PR makes some modifications to our guidelines:\r\n- ask to open a Draft PR when the work is incomplete\r\n- remove the paragraph on related to legacy non-PEP08 code",
    "head_branch": "guidelines_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Contributing guidelines improved (#2399)\n\n* Paragraph on legacy Scapy code removed\r\n\r\n* flake8 checks with tox added\r\n\r\n* Favor Draft for an incomplete PR\r\n\r\n* References to github labels removed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf5ba88c0a76e0a519b3",
    "number": 2396,
    "body": "fixes #2097",
    "head_branch": "2097-rebase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2396 from gpotter2/2097-rebase\n\nRebase of #2097"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf5ca88c0a76e0a519b4",
    "number": 2395,
    "body": "- fix https://github.com/secdev/scapy/issues/2393. There might still be other issues with ARP\r\n- if using PyPy 7.3.0+, disable the PyPy workaround",
    "head_branch": "arp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2395 from gpotter2/arp\n\n2 minor issues"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf5da88c0a76e0a519b5",
    "number": 2392,
    "body": "This PR adds a missing lambda in ISOTPSoftSocket, spotted by\r\ngpotter/LGMT\r\n\r\nFailing tests in gmlanutils are enable, now.\r\n\r\nUnit tests are fixed and another thread for asynchronos packet handling\r\nin ISOTPSoftSocket was added to CANReceiverThread\r\n",
    "head_branch": "isotpfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf5ea88c0a76e0a519b6",
    "number": 2391,
    "body": "",
    "head_branch": "quotes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "New quote & remove noqas from scapy/main"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf5fa88c0a76e0a519b7",
    "number": 2390,
    "body": "fixes #2389 \r\nSee issue description",
    "head_branch": "ah-esn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for Extended Sequence Number (ESN) to IPSec's Authentication Header (AH) (#2390)\n\n* Add support for Extended Sequence Number (ESN) to IPSec's Authentication Header (AH) - fix #2389\r\n\r\n* Add tests\r\n\r\n* Fix test typos\r\n\r\n* fix flake8 errors\r\n\r\n* Remove #noqa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf60a88c0a76e0a519b8",
    "number": 2388,
    "body": "This PR adds a commit to #2386 in order to merge it faster. \r\n\r\n@polybassa I made the requested changes in a new commit.",
    "head_branch": "PR#2386_fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2388 from guedou/PR#2386_fixed\n\nPR#2386 fixed - Refactoring and improvement of automotive documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf61a88c0a76e0a519b9",
    "number": 2387,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [O] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [O] I squashed commits belonging together\r\n-   [O] I added unit tests or explained why they are not relevant\r\n-   [O] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\nFor 5G service, PDU session container can be added on not only regular User Data but also End Marker message. PDU Session Container can be displayed on only User Data packet. This PR can allow to display PDU Session Container on any GTP-U message.\r\n\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\n\r\n> if required - outline impacts on other parts of the library\r\nNone\r\n\r\nfixes #xxx (add issue number here if appropriate, else remove this line)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Display PDU Session Container on any GTP-U message. (#2387)\n\n* Support GTP PDU Session Container\r\n\r\n* add PPT, Spare, padding only if P is 1\r\n\r\nCo-authored-by: Tetsuya Murakami <51135768+tetsuya-arrcus@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf62a88c0a76e0a519ba",
    "number": 2386,
    "body": "I started to refactor automotive related documentation. This is just the start. I will do more refactoring in 2020. ",
    "head_branch": "automotive_doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf63a88c0a76e0a519bb",
    "number": 2384,
    "body": "The padding length of Dot11EltCountry was wrongly calculated causing all the misinterpretation of all the following Dot11Elt\r\n\r\nThis patch fix:\r\n- Padding length calculation is now correct\r\n- country_string is 2 bytes length not 3\r\n- Add field environment (replacing the 3rd byte of the old country)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf63a88c0a76e0a519bc",
    "number": 2383,
    "body": "",
    "head_branch": "bier",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf64a88c0a76e0a519bd",
    "number": 2382,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf65a88c0a76e0a519be",
    "number": 2381,
    "body": "",
    "head_branch": "v2.4.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf66a88c0a76e0a519bf",
    "number": 2380,
    "body": "Fix a typo in GRE and GRE_PPTP where \"sequence\" was spelled \"seqence\".",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo: seqence -> sequence"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf67a88c0a76e0a519c0",
    "number": 2379,
    "body": "This is either a bug with `coverage.py` (https://github.com/nedbat/coveragepy/issues/880) or simply a breaking change.",
    "head_branch": "coveragepy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2379 from gpotter2/coveragepy\n\nRemove use of --append with coveragepy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf68a88c0a76e0a519c1",
    "number": 2378,
    "body": "This PR improves #2135 and includes changes requested by @gpotter2.",
    "head_branch": "PR#2135_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2378 from guedou/PR#2135_improved\n\nPR#2135 improved - NSH contrib"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf68a88c0a76e0a519c2",
    "number": 2377,
    "body": "",
    "head_branch": "lgtm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "2nd LGTM.com batch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf69a88c0a76e0a519c3",
    "number": 2376,
    "body": "This PR:\r\n- removes `_tmp_dissect_pos`\r\n- switch unecessary deepcopy to copy\r\n- store a struct object within the field to avoid recompiling it\r\n- previously, `do_dissect` would convert any -> bytes.  This was implemented as safety workaround at the very beggining of Python 3 support. Some protocols / tests (DPE_RPC, ISOTP, others..) abused this behavior to pass wrongly built strings. Remove this behavior\r\n\r\nPerf: using `test/benchmark/dissection_and_build.py` - `N=10000`\r\n\r\n| Type | Before - 2.7|  Before - 3.6 | After - 2.7 | After - 3.6 |\r\n| --- | --- | --- | --- | --- |\r\n| Build | 6.15s | 4.48s | 6.12s (~) | 4.46s (~) |\r\n| Dissect | 1.94s | 1.59s | 1.72s (-11%) | 1.40s (-11%) |\r\n| Build & dissect | 8.62s | 6.26s | 8.19s (-4%) | 5.97s (-4%) |\r\n\r\nNote: build times are slightly less consistent than dissection times.",
    "head_branch": "cleanups",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2376 from gpotter2/cleanups\n\nCleanups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf6aa88c0a76e0a519c4",
    "number": 2374,
    "body": "Added Portscanner for XCP #2372 \r\n\r\ncurrently it works under python3 and python2 but unit tests are just on python3 since they are not using python-can.\r\n\r\nThere are no impacts on other packages\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf6ba88c0a76e0a519c5",
    "number": 2373,
    "body": "This PR improves #2107 and includes changes requested by @gpotter2.",
    "head_branch": "PR#2107_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Concox CRX1 GPS Tracker Protocol\n\nCo-authored-by: Juciano Cardoso <cjuciano@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf6ca88c0a76e0a519c6",
    "number": 2371,
    "body": "This PR improves #1898 and includes fixes requested by @gpotter2.",
    "head_branch": "PR#1898_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "PR#1898 improved - PCOM contrib (#2371)\n\n* Add a new layer for PCOM SCADA protocol\r\n\r\n* Simplifications and linting\r\n\r\n* Module and unit tests moved to the correct location\r\n\r\n* Wrong type binding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf6da88c0a76e0a519c7",
    "number": 2367,
    "body": "- automatically regenerate the API tree with each read the docs build = remove the `scapy/doc/api` folder\r\n- do not generate the API reference in the PDF version of the doc\r\n- remove scada from autodoc (too noisy)",
    "head_branch": "docsu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Doc update (#2367)\n\nSome contrib modules (scada, automotive) have too many packets that feel generated, and fill the doc.\r\n\r\nThis PR removes those contrib modules from Autodoc."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf6da88c0a76e0a519c8",
    "number": 2366,
    "body": "fixes #2351",
    "head_branch": "fix/obdscanner-unit-tests-refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2366 from TabeaSpahn/fix/obdscanner-unit-tests-refactoring\n\nFix #2351"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf6ea88c0a76e0a519c9",
    "number": 2365,
    "body": "This PR fixes #2095 by improving #2219.",
    "head_branch": "PR#2095_updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2365 from guedou/PR#2095_updated\n\nPR#2095 updated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf6fa88c0a76e0a519ca",
    "number": 2364,
    "body": "This PR fixes #2363.",
    "head_branch": "issue_#2363",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2364 from guedou/issue_#2363\n\nDo not add an unused conditional field in packet fields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf70a88c0a76e0a519cb",
    "number": 2362,
    "body": "",
    "head_branch": "vcan_socket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup `vcan_socket` tag on all unit tests (#2362)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf71a88c0a76e0a519cc",
    "number": 2361,
    "body": "This PR fixes #2344 ",
    "head_branch": "Issue_#2344",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2361 from guedou/Issue_#2344\n\nCDP IP Prefix support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf72a88c0a76e0a519cd",
    "number": 2360,
    "body": "This PR improves PR #2271 ",
    "head_branch": "arista_metawatch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Arista Metawatch rewritten -again-\n\n* Arista Metawatch\n* new unit tests\n* TrailerField merged with FCSField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf72a88c0a76e0a519ce",
    "number": 2359,
    "body": "",
    "head_branch": "revert_isotp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert \"change print to warning\"\n\nThis reverts commit 9bf51c2858b804a6a1626181d0c1313851a675b4."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf73a88c0a76e0a519cf",
    "number": 2358,
    "body": "Not all functions were covered due to mypy issues\r\n\r\nCannot determine type after isInstance check - PacketList.init()\r\nhttps://github.com/python/mypy/issues/6846\r\n\r\nIssue when a None method is recasted using an inner def - PacketList.conversations()\r\nhttps://github.com/python/mypy/issues/2608\r\n\r\npart of #2158\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "#2158 - Add Hinty for plist.py - Adds mypy from Issue #2158 (#2358)\n\n* #2158 - Add Hinty for plist.py\r\n\r\n* Import MATPLOTLIB from extlib.py\r\n\r\n* Add Line2D and update for review comments\r\n\r\n* Add regression test changes for new matplotlib.lines import\r\n\r\n* Remove unnecessary space\r\n\r\n* Add new line to restart appveyer build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf74a88c0a76e0a519d0",
    "number": 2357,
    "body": "- six.moves is treated as a separate package\r\n- update winpcapy path",
    "head_branch": "mypycheck",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2357 from gpotter2/mypycheck\n\nFix MyPy import issues"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf75a88c0a76e0a519d1",
    "number": 2356,
    "body": "This PR fixes #2355.",
    "head_branch": "issue_#2355",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2356 from guedou/issue_#2355\n\nSelect the network interface in send()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf76a88c0a76e0a519d2",
    "number": 2353,
    "body": "Fixes some issues disclosed by LGTM.com",
    "head_branch": "lgtm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "LGTM.com (#2353)\n\n* Code cleanups spotted by LGTM\r\n\r\n* More LGTM cleanups - Dead code\r\n\r\n* Apply suggestion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf77a88c0a76e0a519d3",
    "number": 2352,
    "body": "fixed #2342 ",
    "head_branch": "2342",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix #2342 (#2352)\n\n* Fix #2342\r\n\r\n* Fix PcapNG read\r\n\r\n* Typos fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf78a88c0a76e0a519d4",
    "number": 2349,
    "body": "Seems like LESignedShortField was forgotten about - there was LESignedIntField and LESignedLongField already, but nothing for Short.\r\n\r\nPretty trivial change.",
    "head_branch": "Add-LESignedShortField",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add LESignedShortField (#2349)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf78a88c0a76e0a519d5",
    "number": 2347,
    "body": "Solve the issue #2343\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf79a88c0a76e0a519d6",
    "number": 2345,
    "body": "As described in the rfc5176, the CoA uses the port 3799\r\n",
    "head_branch": "fix1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix missing RADIUS/CoA binding layer\n\nAs described in the rfc5176, the CoA uses the port 3799"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf7aa88c0a76e0a519d7",
    "number": 2341,
    "body": "This PR became bigger than expected.\r\n\r\n1. I've added support for python-can virtual interfaces in many unit tests. This allows unit test to run on Windows and OSX. During this, some minor bugs had to be fixed. The whole unit-test configuration was rewritten in order to have a know system state during a test (maybe this setup part can be moved to a helper file, since it's identical on all test files)\r\n\r\n2. I figured out, that all machines on travis moved to XENIAL. This lines https://github.com/secdev/scapy/blob/d31378c886be2b831f80d29df4b5974c2921bf42/.config/travis/test.sh#L28-L32 excluded all my unit test from travis. Therefore, I fixed some machines on travis to TRUSTY. After this switch, some more test where failing, since they weren't executed for a long time. Most of them I fixed already. `OBDScanner` related tests need a bigger rework. This will be done in a independent PR. `GMLANutils` has also two tests failing which have to be investigated in detail, later.",
    "head_branch": "python-can-vcan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup unit tests which use vcan_socket. Add tests with python-can\nvirtual socket."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf7ba88c0a76e0a519d8",
    "number": 2340,
    "body": "Just some definitions for daimler and volkswagen cars\r\n",
    "head_branch": "volkswagen_definitions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Volkswagen and daimler definitions (#2340)\n\n* add volkswagen specific definitions\r\n\r\n* add daimler definitions\r\n\r\n* skip spell check for daimler definitions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf7ca88c0a76e0a519d9",
    "number": 2339,
    "body": "This PR changes the default behaviour of ISOTPScan. If there is no explicit specification of a `can_interface` for the creation of ISOTPSockets, ISOTPScan tries to clone the socket on which the scan was executed.",
    "head_branch": "isotpscan_improve",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2339 from polybassa/isotpscan_improve\n\nMinor improvements to the default behaviour of isotpscan"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf7da88c0a76e0a519da",
    "number": 2338,
    "body": "This PR changes all  calls to print from an error situation to warning. ",
    "head_branch": "print_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "change print to warning"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf7da88c0a76e0a519db",
    "number": 2336,
    "body": "This PR follows https://github.com/secdev/scapy/pull/2261#issuecomment-544914955\r\n\r\nThis PR:\r\n- reworks https://github.com/secdev/scapy/pull/2261 to use libpcap rather than tcpdump\r\n- **tcpdump is no longer a runtime dependency (still required `tcpdump()`)**\r\n- cleans up how a missing `tcpdump` is handled in `sniff()`\r\n- cleans up `ContextManagerSubprocess`\r\n\r\nDue to a bug within PyPy, a modified version of the workaround still exists in the code. [I've reported this to PyPy for them to fix the issue.](https://bitbucket.org/pypy/pypy/issues/3114/so_attach_filter)",
    "head_branch": "tcpdump-libpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2336 from gpotter2/tcpdump-libpcap\n\nUse libpcap instead of TCPDUMP (filters)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf7ea88c0a76e0a519dc",
    "number": 2334,
    "body": "fixes https://github.com/secdev/scapy/issues/2331",
    "head_branch": "OO",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2334 from gpotter2/OO\n\nFix -OO"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf7fa88c0a76e0a519dd",
    "number": 2332,
    "body": "Hello,\r\nthis patch is removing unnecessary shebangs as used in the python module.\r\nFiles not having executable bit do not need shebang.\r\nThis was reported by the rpmlint tool when building package for Fedora.\r\n\r\nBest regards\r\nMichal Ambroz\r\n",
    "head_branch": "shebangs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2332 from xambroz/shebangs\n\nRemove the unnecessary shebangs."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf80a88c0a76e0a519de",
    "number": 2329,
    "body": "For BPF handling on FreeBSD fix:\r\n(1) the alignment on (32bit) platforms where sizeof(long) == 4 and\r\n(2) for i386 the timestamp size (offset to the fields later) within the\r\n    bpf_hdr struct as time_t still is 32bit.\r\n    Scapy does not set any more specific BPF_T_* time option, so we\r\n    are not switching to bpf_xhdr (which would probably be the better\r\n    long-term solution).\r\n\r\nThe problem made scapy use a broadcast Ethernet destination MAC address\r\nfor certain packets as neighbour resolution failed.  This in turn led\r\nto certain error/reply messages which must not be send to a broadcast address\r\nnot being sent by at least a FreeBSD kernel in response to a scapy packet\r\nand with that test cases were failing.\r\n\r\nSubmitted by:\tbz@FreeBSD.org\r\nTested by:\tlwhsu@FreeBSD.org, kp@FreeBSD.org, CI infrastructure\r\nProblem Report:\thttps://bugs.freebsd.org/bugzilla/show_bug.cgi?id=239380\r\nScapy test case: https://svnweb.freebsd.org/changeset/base/354395\r\nFreeBSD Port Update: https://svnweb.freebsd.org/changeset/ports/516910\r\nSponsored by:\tNetflix\r\n\r\n🐛 ",
    "head_branch": "bzfbd_scapy_bpf_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "FreeBSD:  fix bpf alignment on 32bit and timestamp size on i386. (#2329)\n\n* FreeBSD:  fix bpf alignment on 32bit and timestamp size on i386.\r\n\r\nFor BPF handling on FreeBSD fix:\r\n(1) the alignment on (32bit) platforms where sizeof(long) == 4 and\r\n(2) for i386 the timestamp size (offset to the fields later) within the\r\n    bpf_hdr struct as time_t still is 32bit.\r\n    Scapy does not set any more specific BPF_T_* time option, so we\r\n    are not switching to bpf_xhdr (which would probably be the better\r\n    long-term solution).\r\n\r\nThe problem made scapy use a broadcast Ethernet destination MAC address\r\nfor certain packets as neighbour resolution failed.  This in turn led\r\nto certain error/reply messages which must not be send to a broadcast address\r\nnot being sent by at least a FreeBSD kernel in response to a scapy packet\r\nand with that test cases were failing.\r\n\r\nSubmitted by:\tbz@FreeBSD.org\r\nTested by:\tlwhsu@FreeBSD, kp@FreeBSD.org, CI infrastructure\r\nProblem Report:\thttps://bugs.freebsd.org/bugzilla/show_bug.cgi?id=239380\r\nScapy test case: https://svnweb.freebsd.org/changeset/base/354395\r\nFreeBSD Port Update: https://svnweb.freebsd.org/changeset/ports/516910\r\nSponsored by:\tNetflix\r\n\r\n* Fix PEP8 tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf81a88c0a76e0a519df",
    "number": 2326,
    "body": "Just some small changes to the command line interface of isotpscanner",
    "head_branch": "print_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2326 from polybassa/print_refactoring\n\nMinor changes in isotpscanner command line application"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf82a88c0a76e0a519e0",
    "number": 2325,
    "body": "The main objective of this PR is to reduce duplication.  Currently,\r\nInformation Elements (IEs) type codes are duplicated in three places: in\r\nthe `IEType` dict, in defaults of `ietype` fields of each IE class, and\r\nin `ietypecls` dict.  This change removes the numbers from the latter\r\ntwo.\r\n\r\n(And fixes one mismatch, `IE_MMBR.ietype` default was not correct.)\r\n\r\nThere's still duplication of IE names, but now it will raise `KeyError`\r\non module load time if there's mismatch.\r\n\r\nThis is just a checklist to guide you. You can remove it safely.",
    "head_branch": "gtpv2-ie-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf82a88c0a76e0a519e1",
    "number": 2324,
    "body": "This PR fixes on error reported in #2323",
    "head_branch": "issue_#2323",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2324 from guedou/issue_#2323\n\nDo not rely on IP_PROTOS[tcp]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf83a88c0a76e0a519e2",
    "number": 2320,
    "body": "This PR fixes new issues described in PR #2255 ",
    "head_branch": "centos_check_tcpdump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2320 from guedou/centos_check_tcpdump\n\n_check_tcpdump() simpler check and unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf84a88c0a76e0a519e3",
    "number": 2319,
    "body": "Fixes #2318.",
    "head_branch": "fix-realtime-decimal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2319 from p-l-/fix-realtime-decimal\n\nFix sendp(..., realtime=True) with Decimal() timestamps"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf85a88c0a76e0a519e4",
    "number": 2317,
    "body": "Fixes #2288 ",
    "head_branch": "safe_krack_import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2317 from ria4/safe_krack_import\n\nCheck for cryptography package before Krack module import"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf86a88c0a76e0a519e5",
    "number": 2316,
    "body": "Fixes #2288 ",
    "head_branch": "safe_krack_import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf87a88c0a76e0a519e6",
    "number": 2315,
    "body": "https://github.com/secdev/scapy/pull/2313\r\nWe'll wait for p-l- to get approved before merging. Otherwise GitHub raises errors",
    "head_branch": "sponsors-badge",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2315 from secdev/sponsors-badge\n\nAdd sponsors badge to Scapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf87a88c0a76e0a519e7",
    "number": 2314,
    "body": "Reverts secdev/scapy#2313",
    "head_branch": "revert-2313-sponsors-badge",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"Add sponsors badge to Scapy (#2313)\"\n\nThis reverts commit e599c00ed0b202274580e53e3f077d92e88a8c49."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf88a88c0a76e0a519e8",
    "number": 2313,
    "body": "**Do you think it would be right for us to promote ourselves this way ?**\r\nI know @guedou already is a GitHub sponsors-enables (so am I), but apparently @p-l- isn't.\r\n\r\nWaiting for your input",
    "head_branch": "sponsors-badge",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add sponsors badge to Scapy (#2313)\n\n* Add sponsors badge to Scapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf89a88c0a76e0a519e9",
    "number": 2312,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2312 from dhgutteridge/master\n\nwinpcapy.py: fix minor typo in error message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf8aa88c0a76e0a519ea",
    "number": 2311,
    "body": "This PR has:\r\n- Fix a test name of WriteSingleRegisterRequest.\r\n- Add a test for ModbusPDU07ReadExceptionStatusRequest.\r\n\r\n-   [x] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)",
    "head_branch": "fix-modbus-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2311 from kazukiigeta/fix-modbus-test\n\nFix modbus test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf8ba88c0a76e0a519eb",
    "number": 2310,
    "body": "* Added `ULI_CGI` and `ULI_LAI` classes.  I believe in current\r\n  implementation, with `ULI_CGI` field present in the raw packet\r\n  but without a field for `ULI_CGI`, `ULI_CGI`'s bytes can be\r\n  erroneously interpreted as belonging to the next ULI field.\r\n* Added a `ULI_Field` superclass for all ULI fields to inherit from.\r\n  It's functionally exactly the same as `gtp.IE_Base`, but given the the\r\n  ULI fields are not Information Elements, semantically it seems to be\r\n  right to give them their own base class.\r\n* Made formatting a bit more consistent.",
    "head_branch": "gtpv2-uli-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2310 from x746e/gtpv2-uli-refactor\n\nRefactor GTPv2 User Location Information IE."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf8ba88c0a76e0a519ec",
    "number": 2309,
    "body": "ISOTP messages can be sent with extended can IDs now\r\n    1. Added --extended_can_id option for isotpscanner\r\n    2. Added --wide(-w) option for scanning ranges greater than 0x7FF\r\n    3. Maxmim CAN ID can be `0x1FFF FFFF` now. for isotpscanner\r\n    4. Added extended_can_id argument for functions : get_isotp_packet, scan and scan extended\r\n    5. Added untitests for extended can ids\r\n\r\nfixes #2298 \r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2309 from Ita1pu/master\n\nAdded functionality for ISOTP with extended frames"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf8ca88c0a76e0a519ed",
    "number": 2308,
    "body": "Rebase of https://github.com/secdev/scapy/pull/2251\r\n\r\n- fixes https://github.com/secdev/scapy/issues/2248\r\n- fixes https://github.com/secdev/scapy/pull/2251\r\n- fixes https://github.com/secdev/scapy/issues/2268\r\n\r\nIncludes test by @hennadiy-demchenko",
    "head_branch": "country",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Dot11EltCountry pad test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf8da88c0a76e0a519ee",
    "number": 2307,
    "body": "This PR:\r\n- adds H2C support (HTTP 2.0 over TCP). This consist in bindings between HTTP 1.0 and 2.0\r\n- tests this behavior",
    "head_branch": "h2c",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2307 from gpotter2/h2c\n\nAdd H2C (HTTP 2.0 over TCP) support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf8ea88c0a76e0a519ef",
    "number": 2306,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2306 from x746e/patch-4\n\nFix minor issue in example code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf8fa88c0a76e0a519f0",
    "number": 2305,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2305 from x746e/patch-3\n\nA minor formatting fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf90a88c0a76e0a519f1",
    "number": 2304,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2304 from x746e/patch-2\n\nFix the displayed name of IE_Indication"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf90a88c0a76e0a519f2",
    "number": 2303,
    "body": "Requires Sphinx >= 2.2.0",
    "head_branch": "autodoc-plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2303 from gpotter2/autodoc-plugin\n\nReadthedocs config"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf91a88c0a76e0a519f3",
    "number": 2301,
    "body": "",
    "head_branch": "gtpv2-private-extension",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2301 from x746e/gtpv2-private-extension\n\nAdd \"Private Extension\" GTPv2 IE."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf92a88c0a76e0a519f4",
    "number": 2300,
    "body": "- a bunch of doc fixes\r\n- a small GTP fix\r\n- a small PPP dissection improvement",
    "head_branch": "minorfixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Small doc cleanups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf93a88c0a76e0a519f5",
    "number": 2299,
    "body": "As discussed in https://github.com/secdev/scapy/issues/2112\r\nThis PR:\r\n- removes non sudo tests for 3.4, 3.5, 3.6, 3.7\r\n- separates the Mypy, docs, formatting tests",
    "head_branch": "fix-2112",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2299 from gpotter2/fix-2112\n\nFix 2112"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf94a88c0a76e0a519f6",
    "number": 2296,
    "body": "We don't actually want to have the Travis & Appveyor badges displayed on the PyPI page.\r\nProbably nor the Codacy & codecov ones",
    "head_branch": "readmeopt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2296 from gpotter2/readmeopt\n\nFilter out some badges from PyPI description"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf95a88c0a76e0a519f7",
    "number": 2295,
    "body": "All information elements are required to have standard 4 byte header (3GPP TS 29.274 section 8.2.1).",
    "head_branch": "gtpv2-not-implemented-ie",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add mandatory fields to IE_NotImplementedTLV. (#2295)\n\nAll information elements are required to have standard 4 byte header (3GPP TS 29.274 section 8.2.1)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf95a88c0a76e0a519f8",
    "number": 2294,
    "body": "",
    "head_branch": "gtpv2-cause-values",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add all possible cause values from the GTPv2 spec. (#2294)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf96a88c0a76e0a519f9",
    "number": 2291,
    "body": "",
    "head_branch": "obdscn-param-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add files via upload (#2291)\n\nFixed OBD input param set"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf97a88c0a76e0a519fa",
    "number": 2290,
    "body": "- caches `pcap_datalink`\r\n- stores sent time after being sent to avoid negative timestamps",
    "head_branch": "pcapdnetopt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2290 from gpotter2/pcapdnetopt\n\nMinor pcapdnet optimizations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf98a88c0a76e0a519fb",
    "number": 2289,
    "body": "-   [x] I added unit tests or explained why they are not relevant\r\nIMHO it is not needed because it is single `if`. I can add tests if you think differently.\r\n\r\n> brief description what this PR will do:   \r\n\r\nIn current behavior if MAC can not be found/resolved for dst ip, scapy is broadcasting:\r\n```python\r\n>>> send(IP(dst='10.36.1.77')/TCP(), count=3)\r\nWARNING: Mac address to reach destination not found. Using broadcast.\r\n.WARNING: Mac address to reach destination not found. Using broadcast.\r\n.WARNING: more Mac address to reach destination not found. Using broadcast.\r\n.\r\nSent 3 packets.\r\n```\r\nIt is ok when you use scapy via python shell as you can stop it by CTRL+C etc.\r\n\r\nBut it is become inconvenient when you use scapy in programmatic way(e.g. as traffic generator in pytest tests)     \r\n`send(...., count=5000, inter=0.001)` - will be executed long time(despite of `inter` value).\r\n\r\nI think in such use-case/scenario is very convenient to raise exception(because there is no sense to continue).   \r\nSo with my fix:\r\n```python\r\n>>> conf.raise_no_dst_mac = True\r\n>>> send(IP(dst='10.36.1.77')/TCP(), count=3)\r\n/usr/lib/python3/dist-packages/apport/report.py:13: PendingDeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n  import fnmatch, glob, traceback, errno, sys, atexit, locale, imp\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/code.py\", line 91, in runcode\r\n    exec(code, self.locals)\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/home/mityagin/github/scapy/scapy/sendrecv.py\", line 331, in send\r\n    realtime=realtime, return_packets=return_packets)\r\n  File \"/home/mityagin/github/scapy/scapy/sendrecv.py\", line 291, in __gen_send\r\n    s.send(p)\r\n  File \"/home/mityagin/github/scapy/scapy/arch/linux.py\", line 598, in send\r\n    sx = raw(ll(x))\r\n  File \"/home/mityagin/github/scapy/scapy/compat.py\", line 52, in raw\r\n    return bytes(x)\r\n  File \"/home/mityagin/github/scapy/scapy/packet.py\", line 487, in __bytes__\r\n    return self.build()\r\n  File \"/home/mityagin/github/scapy/scapy/packet.py\", line 607, in build\r\n    p = self.do_build()\r\n  File \"/home/mityagin/github/scapy/scapy/packet.py\", line 589, in do_build\r\n    pkt = self.self_build()\r\n  File \"/home/mityagin/github/scapy/scapy/packet.py\", line 570, in self_build\r\n    p = f.addfield(self, p, val)\r\n  File \"/home/mityagin/github/scapy/scapy/fields.py\", line 142, in addfield\r\n    return s + struct.pack(self.fmt, self.i2m(pkt, val))\r\n  File \"/home/mityagin/github/scapy/scapy/layers/l2.py\", line 127, in i2m\r\n    return MACField.i2m(self, pkt, self.i2h(pkt, x))\r\n  File \"/home/mityagin/github/scapy/scapy/layers/l2.py\", line 120, in i2h\r\n    raise ScapyNoDstMacException()\r\nscapy.error.ScapyNoDstMacException\r\n>>>\r\n```\r\n\r\n",
    "head_branch": "no_mac_dst",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2289 from ymity/no_mac_dst\n\nAdd option to raise exception if no dst MAC found"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf99a88c0a76e0a519fc",
    "number": 2287,
    "body": "",
    "head_branch": "uds_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix undesired behavior of ECU_am (#2287)\n\nSee https://github.com/secdev/scapy/pull/2287#issuecomment-544969829"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf99a88c0a76e0a519fd",
    "number": 2286,
    "body": "- Add supporting protocol version to MQTT CONNECT packet. \r\n- Add a new control packet type which was implemented in MQTT v5.0.\r\n- Change shape of dictionaries to add comment on right side of a value '#Added in v5.0'.\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)",
    "head_branch": "Support_MQTT_version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add an enum of protocol  level for MQTT CONNECT (#2286)\n\n* Support protocol version\r\n\r\n* Fix pep8\r\n\r\n* Fix pep8_again"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf9aa88c0a76e0a519fe",
    "number": 2285,
    "body": "This PR _adds_ support for Python3.8.",
    "head_branch": "py38",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2285 from guedou/py38\n\nPython 3.8 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf9ba88c0a76e0a519ff",
    "number": 2284,
    "body": "**Edited by gpotter2: refactored to use GTPv1 methods, and add the correct answers() calls**\r\n\r\nBefore this commit, `GTPHeader.answers` was calling to its payload's\r\n`answers` method, which is not implemented for any of the possible\r\npayloads for `GTPHeader`.  Thus, the default implementation from\r\n`Packet.answers` was used, which returns `False` if packet subclasses\r\ndon't match, as is the case with e.g. `GTPV2EchoRequest` and\r\n`GTPV2EchoResponse` classes.\r\n\r\nThat, in particular, was preventing `sr*` functions from matching GTPv2\r\nrequests and responses.\r\n\r\nThis commit changes the `GTPHeader.answers` method to consider messages\r\nwith the same sequence number to be a request/response pair.  This is\r\ntrue most of the time, but can be wrong in these cases:\r\n\r\n* Ideally `GTPHeader.answers` should check that the packet on which\r\n  `answers` was called is a \"*Request\" or a \"*Command\", and that the\r\n  other packet is of the corresponding response message type.\r\n* In the case of \"triggered response\" messages there can be three\r\n  messages with the same sequence number: a command, a request message\r\n  triggered by the command, and a response to the triggered message.\r\n* The case of piggybacked messages seems to be different: if I'm reading\r\n  the spec correctly, a response to a piggybacked message will have the\r\n  sequence number of the piggybacked request, not the message the\r\n  request was piggybacked to.",
    "head_branch": "gtpv2-answers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2284 from x746e/gtpv2-answers\n\nImprove request/response matching for GTPv2 packets."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf9ca88c0a76e0a51a00",
    "number": 2283,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move \"Releasing Scapy\" out of \"Testing with UTScapy\" section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf9da88c0a76e0a51a01",
    "number": 2282,
    "body": "This PR contains some BMW specific definitions and descriptions. \r\nI didn't created any unit-tests for this file. It mainly consists out of enums for BMW proprietary identifiers and some simple BMW specific packets.  ",
    "head_branch": "bmw_defs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add BMW specific definitions (#2282)\n\n* add definitions\r\n\r\nupdate uds layer\r\n\r\ncleanup definitiosn\r\n\r\n* fix unit test\r\n\r\n* add service names"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf9ea88c0a76e0a51a02",
    "number": 2281,
    "body": "IGMP \"Multicas\" Router Advertisement\r\n\r\nThis is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\n\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\n\r\n> if required - outline impacts on other parts of the library\r\n\r\nfixes #xxx (add issue number here if appropriate, else remove this line)\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update igmpv3.py\n\nIGMP \"Multicas\" Router Advertisement"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf9ea88c0a76e0a51a03",
    "number": 2280,
    "body": "",
    "head_branch": "fix-modbus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2280 from p-l-/fix-modbus\n\nClean-up Modbus contrib"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faf9fa88c0a76e0a51a04",
    "number": 2279,
    "body": "**Leftovers from the Autodoc PR. #hacktoberfest**\r\n\r\nThis PR:\r\n- removes some of the non_root Travis tests: they are currently ran as root anyways, and mostly duplicate the others. I left 1 for good measure, and the specific ones (no-cryptography...)\r\n- separate mypy test from others\r\n- adds a sphinx extension that automatically renders `fields_desc` and `payload_fields` into ReST tables\r\n- implements post processing of the apidocs .rst files to clear up the doc tree.\r\n- fixes some small rendering bugs: some Packet classes could not be rendered (`repr()` crashes. There was a type misdeclaration of a VolatileValue)\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/66703442-037a0280-ed13-11e9-816e-d405431f8902.png)\r\n",
    "head_branch": "autodoc-plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2279 from gpotter2/autodoc-plugin\n\nAutodoc PR leftovers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa0a88c0a76e0a51a05",
    "number": 2278,
    "body": "This PR adds Modbus serial functions.\r\n\r\n-   [x] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)",
    "head_branch": "Add_serial_func",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add serial function (#2278)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa1a88c0a76e0a51a06",
    "number": 2276,
    "body": "The PR adds:\r\n* all GTPv2 message types to contrib/gtp_v2.py.\r\n* all interface types, and changes packet representation to show interface name, not number.\r\n* changes TEID to be shown in hex.\r\n\r\n**Checklist:**\r\n\r\n-   [✓] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [✗] I squashed commits belonging together\r\n    - That's sort of a matter of taste; I prefer smaller commits; please tell me if I should squash those.\r\n-   [✓] I added unit tests or explained why they are not relevant\r\n    - Those commits don't really change any functionality.\r\n-   [✓] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n    - As stated before, this shouldn't really change much; though I did run ./run_tests, and made sure the number of failed tests stayed the same.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "A few improvements to GTPv2 (#2276)\n\n* Add all GTPv2 message types from the spec.\r\n\r\n* Add all GTPv2 interface types from the spec.\r\n\r\n* Show GTPv2 `teid` field in hex.\r\n\r\nThat way it would match the representation of `GRE_Key` field of \"FTEID\"\r\ninformation element; also that the way it's displayed in Wireshark."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa2a88c0a76e0a51a07",
    "number": 2275,
    "body": "fixes broken dissection of ipfix when template defines enterprise-specific information elements.\r\n\r\nAccording to IPFIX RFC, the first bit of Information Element id indicates whether it is IANA-assigned or enterprise-specific Information Elements.\r\n\r\n```\r\n     |0| Information Element id. 1.2 |        Field Length 1.2       |\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n     |             ...               |              ...              |\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n     |1| Information Element id. 1.N |        Field Length 1.N       |\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n     |                    Enterprise Number  1.N                     |\r\n```\r\n\r\nThis PR added BitField and ConditionalField to NetflowTemplateFieldV9. It adds a test case as well. I can provide a pcap file if needed.\r\n\r\nfixes #2236\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix dissection of ipfix template with enterprise-specific Information Elements. (#2275)\n\n* fix dissection for ipfix template with enterprise-specific Information Elements.\r\n\r\n* fix lint error\r\n\r\n* test another travis build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa3a88c0a76e0a51a08",
    "number": 2272,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [X] I added unit tests or explained why they are not relevant\r\n-   [X] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\nThis PR can support GTP-U PDU Session Container in contrib/gtp.py which is used for 5G service.\r\n\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\nNo fix. This is for the new feature support for GTP-U.\r\n\r\n> if required - outline impacts on other parts of the library\r\nNope.\r\n\r\nfixes #xxx (add issue number here if appropriate, else remove this line)\r\nNone",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove noqa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa4a88c0a76e0a51a09",
    "number": 2271,
    "body": "",
    "head_branch": "metawatch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa4a88c0a76e0a51a0a",
    "number": 2270,
    "body": "This PR adds Module Operation that could be found in new PLC QCA chipsets and a HomePlug GREENPHY layer to play with cars, charging stations and other devices using this technology. ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Module Operation commands for newest PLC chipsets for HomePlug AV + HomePlug GREENPHY and Smart Cities (SG) layers (#2270)\n\n* Add Module Operation commands for newest PLC chipsets\r\n\r\n* Add HomePlug GREENPHY layer to play with car and charging stations and other domotic things\r\n\r\n* Fixing PEP08 errors and adding SG layer to the PR\r\n\r\n* Including Scapy Unit tests + fixing an import for the SG layer\r\n\r\n* Fixing unit tests\r\n\r\n* Fixing HPGP unit tests file\r\n\r\n* Fixing a VendreMME field for new HomePlug specs + taking into considerations the suggestions on unit tests and format to use in the code\r\n\r\n* Cleaning some code checks errors\r\n\r\n* Fixing VendorMME generation + unit tests for each layers\r\n\r\n* Cleaning print function from unit tests\r\n\r\n* Including a default context for PacketField for generation cases\r\n\r\n* Including some more tests for the HPGP layer\r\n\r\n* Cleaning PEP08 errors\r\n\r\n* Updating unit tests format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa5a88c0a76e0a51a0b",
    "number": 2269,
    "body": "This PR solves the new `mypy` error.",
    "head_branch": "mypy_issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2269 from guedou/mypy_issue\n\nWider string type #Hacktoberfest"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa6a88c0a76e0a51a0c",
    "number": 2267,
    "body": "This PR adds a Module Operation for newest PLC chipsets and adds two more layers to play with HomePlug GREENPHY mostly used in the automotive industry + a HomePlug SG layer to play with SmartCities power meter sending UART commands.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa7a88c0a76e0a51a0d",
    "number": 2266,
    "body": "Add handling of flow control frames to be able to extract the ISOTP src address out of a communication\r\n",
    "head_branch": "isotp_message_builder_src",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve ISOTPMessageBuilder #Hacktoberfest\n\nAdd handling of flow control frames to be able to extract the ISOTP src address out of a communication"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa8a88c0a76e0a51a0e",
    "number": 2265,
    "body": "This PR:\r\n- fixes the way `scapy.contrib.scada` protocols are registered in `list_contribs()`\r\n- adds support for subfolders handling in `explore()`:\r\n![image](https://user-images.githubusercontent.com/10530980/61897045-8363ae00-af16-11e9-9599-7927bda0ef74.png)\r\n\r\nThe ultimate goal of `explore()` is to implement a search feature\r\n",
    "head_branch": "explore-improve",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Clarify code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafa9a88c0a76e0a51a0f",
    "number": 2264,
    "body": "**Still a lot of work to do**\r\n\r\nThis is an attempt of unifying how interfaces work between the various architectures.\r\nIt implements a `NetworkInterface`, similar to what we already have on Windows, but for the other systems. Note that it remains fully backward compatible.\r\n\r\nThe purpose of this change is that:\r\n- interfaces will now have a \"type\", linked to a specific kind of SuperSockets. This allows to make `sniff()`, `sr1()`... choose the correct socket for interfaces like Bluetooth or USB. This will allow to have unified functions instead of things like `sniffbt()`\r\n- all interfaces of all kinds will be listed under the same `conf.ifaces` utilitary class.\r\n- people will be able to hook in their own interfaces/sockets, using this new mechanism, like wireshark [extcap](https://wiki.wireshark.org/Development/Extcap)\r\n\r\nIt also makes the `conf.ifaces = IFACES` utilitary class usable on non-windows systems\r\n\r\n**Demo:**\r\n\r\nWindows: Scapy handles both USBpcap & normal interfaces through the default commands.\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/60389357-409dea00-9ac0-11e9-97b2-2c55b054dacc.png)\r\n",
    "head_branch": "interfaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafaaa88c0a76e0a51a10",
    "number": 2261,
    "body": "Running tcpdump to generate BPF bytecode requires the NET_ADMIN capability on the tcpdump binary to attach to the interface in promiscuous mode.  Instead, we can map the Linux ARPHD value to a pcap DLT value, and generate the appropriate PCAP file to pass through stdin. \r\n\r\nThis approach can be useful when running scripts as a non-root, normal user.",
    "head_branch": "fakepcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafaba88c0a76e0a51a11",
    "number": 2260,
    "body": "This pull request adds : \r\n- Support for HelloRetryRequest message in automaton (client and server)\r\n- Tests from RFC8448 for HelloRetryRequest\r\n\r\n**Edits by gpotter2**:\r\n- Drops support for cryptography < 2.0.0 (2017)\r\n- fix PR according to review\r\n- rebase",
    "head_branch": "add-tls13-hrr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add TLS 1.3 HelloRetryRequest (#2260)\n\n* Add HelloRetryRequest\r\n\r\n* Use conf.crypto_valid\r\n\r\n* Drop cryptography<2.0.0 (2017)\r\n\r\nCo-authored-by: Gabriel <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafaba88c0a76e0a51a12",
    "number": 2258,
    "body": "As per IEEE 802.1AB-2016 section 8.2 LLDPDU format:\r\n```\r\nIf the End Of LLDPDU TLV is present, it shall be the last TLV in the LLDPDU.\r\n```\r\n\r\nand 9.1.2.1 Normal LLDPDUs:\r\n```\r\nconstructs an LLDPDU as defined in 9.1, containing the following:\r\na) The mandatory TLVs as specified in 8.2:\r\n   1) Chassis ID TLV (see 8.5.2).\r\n   2) Port ID TLV (see 8.5.3).\r\n   3) Time To Live TLV, with the TTL value set equal to txTTL (see 8.5.4).\r\nb) Additional optional TLVs, from the basic management set or from one or more organizationally\r\nspecific sets, as allowed by LLDPDU length restrictions and as selected in the LLDP local system\r\nMIB by network management (see Table 8-1).\r\nc) Optionally, an End Of LLDPDU TLV.\r\n```\r\n\r\nin both cases End Of LLDPDU TLV is optional",
    "head_branch": "optionalLLDPDUEndOfLLDPDU",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make LLDPDUEndOfLLDPDU optional (#2258)\n\nAs per IEEE 802.1AB-2016 section 8.2 LLDPDU format:\r\n\r\nIf the End Of LLDPDU TLV is present, it shall be the last TLV in the LLDPDU.\r\n\r\nand 9.1.2.1 Normal LLDPDUs:\r\n\r\nconstructs an LLDPDU as defined in 9.1, containing the following:\r\na) The mandatory TLVs as specified in 8.2:\r\n   1) Chassis ID TLV (see 8.5.2).\r\n   2) Port ID TLV (see 8.5.3).\r\n   3) Time To Live TLV, with the TTL value set equal to txTTL (see 8.5.4).\r\nb) Additional optional TLVs, from the basic management set or from one or more organizationally\r\nspecific sets, as allowed by LLDPDU length restrictions and as selected in the LLDP local system\r\nMIB by network management (see Table 8-1).\r\nc) Optionally, an End Of LLDPDU TLV.\r\n\r\nin both cases End Of LLDPDU TLV is optional"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafaca88c0a76e0a51a13",
    "number": 2256,
    "body": "Changed default value for timeout of `ECU_am` to `None`. The previous default value led to a not intuitive behaviour.\r\n",
    "head_branch": "ECU_am_default_value_change",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ECU_am default value change.\n\nChanged default value for timeout of AnsweringMachine to `None`. The previous default value led to a not intuitive behaviour."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafada88c0a76e0a51a14",
    "number": 2255,
    "body": "Improve the method to recognize tcpdump existence, covering more output cases in which tcpdump does not support '--version' option\r\nIssue link:\r\nhttps://github.com/secdev/scapy/issues/1862#issuecomment-532684551\r\n\r\nfixes #1862 with new posts today.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix bug for issue #1862, that is with new posts today. (#2255)\n\nImprove the method to recognize tcpdump existence, covering more output cases in which tcpdump does not support '--version' option\r\nIssue link:\r\nhttps://github.com/secdev/scapy/issues/1862#issuecomment-532684551"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafaea88c0a76e0a51a15",
    "number": 2254,
    "body": "When forging a packet with no `Ether` source address and `conf.iface` holds an interface that does not exist on the system, we get a pertinent warning:\r\n\r\n```\r\nWARNING: Could not get the source MAC: [Errno 19] No such device\r\n```\r\n\r\nHowever, it is followed by a resource warning:\r\n\r\n```\r\nscapy/layers/l2.py:143: ResourceWarning: unclosed <socket.socket fd=8, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 0)>\r\n```\r\n\r\nIndeed, when the ioctl call fails, the socket is not closed. Make sure to close it in all cases.",
    "head_branch": "resourcewarning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2254 from rjarry/resourcewarning\n\narch: fix unclosed socket warning"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafafa88c0a76e0a51a16",
    "number": 2253,
    "body": "ConditionalFields can be used now. Provide SignalHeader Packet for CAN-Header. Add documentation and tests\r\n",
    "head_branch": "CANSignalFix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix build error in SignalFields. (#2253)\n\nConditionalFields can be used now. Provide SignalHeader Packet for CAN-Header. Add documentation and tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb0a88c0a76e0a51a17",
    "number": 2251,
    "body": "More info : #2248\r\nbased on the standard, the length of the field should be an even number, so a pad byte should be included if the length of element is not an even number, but it seems that `pkt.len` is referred from header, `pkt.len` includes the pad byte already.\r\nThis change calculates the length of body and compare it to the `pkt.len` so that the pad will be correctly applied.",
    "head_branch": "yananet-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb1a88c0a76e0a51a18",
    "number": 2250,
    "body": "",
    "head_branch": "fix-tls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "TLS: cosmetic fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb1a88c0a76e0a51a19",
    "number": 2249,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2249 from MartinSohn/patch-1\n\nAdded missing variable assignment 'p'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb2a88c0a76e0a51a1a",
    "number": 2247,
    "body": "`codespell` was updated. New errors need to be fixed.",
    "head_branch": "codespell_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "codespell errors fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb3a88c0a76e0a51a1b",
    "number": 2246,
    "body": "This PR attempts to fix #2176 ",
    "head_branch": "Issue_#2176",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2246 from guedou/Issue_#2176\n\nRace condition fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb4a88c0a76e0a51a1c",
    "number": 2244,
    "body": "This PR adds TLS 1.3 automaton for 1-RTT handshake (both client and server) and their associated tests.\r\n",
    "head_branch": "add-tls13-automaton",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2244 from romain-perez/add-tls13-automaton\n\nAdd basic TLS 1.3 client and server automaton and tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb5a88c0a76e0a51a1d",
    "number": 2243,
    "body": "This PR fixes #2188 ",
    "head_branch": "Issue_#2188",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2243 from guedou/Issue_#2188\n\nDecode MQTT topics after an unsubscribe message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb6a88c0a76e0a51a1e",
    "number": 2242,
    "body": "This PR fixes #2241 ",
    "head_branch": "Issue_#2241",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2242 from guedou/Issue_#2241\n\nMissing text type conversions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb6a88c0a76e0a51a1f",
    "number": 2240,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [x] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\n\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\n\r\n> if required - outline impacts on other parts of the library\r\n\r\nfixes #xxx (add issue number here if appropriate, else remove this line)\r\n",
    "head_branch": "obdscan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb7a88c0a76e0a51a20",
    "number": 2239,
    "body": "Small badge fixes.\r\n\r\nPrior to this PR, the AppVeyor badge was displaying information related to the latest tested PR.\r\n\r\nThe other badges are related to master.",
    "head_branch": "readme_ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "AppVeyor link to master branch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb8a88c0a76e0a51a21",
    "number": 2238,
    "body": "Just a minor cleanup for loading messages",
    "head_branch": "can_load_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2238 from polybassa/can_load_fix\n\nCleanup loading messages for CANSockets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafb9a88c0a76e0a51a22",
    "number": 2237,
    "body": "# Bluetooth Error Codes \r\n\r\n- change and add Bluetooth error codes to match BLUETOOTH CORE SPECIFICATION Version 5.1 Vol 2, Part D Pages 671-674\r\n",
    "head_branch": "bluetooth_error_codes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix line too long"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafbaa88c0a76e0a51a23",
    "number": 2234,
    "body": "Just documentation",
    "head_branch": "isotp_scan_documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "change animation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafbba88c0a76e0a51a24",
    "number": 2233,
    "body": "All automotive unit tests were not included into the test configurations. ",
    "head_branch": "automotive_unit_test_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add automotive tests to unit test configurations [Ready for merge] (#2233)\n\n* add automotive tests to unit test configurations\r\n\r\n* try to fix ccp.uts and gm.uts\r\n\r\n* improve automotive unit tests cleanup\r\n\r\n* fix ccp.uts timeout check\r\n\r\n* fix obd scanner.uts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafbba88c0a76e0a51a25",
    "number": 2232,
    "body": "New UDS functions for session and service enumerating and printing a result table.",
    "head_branch": "uds_utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "new UDS utils (#2232)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafbca88c0a76e0a51a26",
    "number": 2231,
    "body": "",
    "head_branch": "stab-fuzz",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafbda88c0a76e0a51a27",
    "number": 2228,
    "body": "Multiple network devices vendors (even Cisco on Nexus 3000) use a faked ERSPAN header that contain no fields at all. Adding it so scapy can sniff those packet types. ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafbea88c0a76e0a51a28",
    "number": 2227,
    "body": "This commit introduces the ECU utility.\r\n\r\nThis utility can be used to analyze and emulate entire ECUs.\r\n\r\nThis commit modifies the following core objects\r\n\r\n~~PacketList:~~\r\n          ~~Some helper functions were added to emulate a socket.~~\r\n          ~~I found this might be a useful feature.~~\r\n\r\nsniff:\r\n      A instance of a DefaultSession can be provided to sniff.\r\n      This allows me to access a Session object after sniff\r\n      modified its internal state. In this way, I can implement\r\n      a ECUSession which holds the internal state of an ECU.\r\n      After sniffing some packets, I can still access this\r\n      ECUSession to ask for modifications made to it.\r\n\r\n",
    "head_branch": "uds_ecu_simulator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ECU utility (#2227)\n\nThe ECU utility can be used to analyze and emulate entire ECUs.\r\n\r\nThis commit changes the following core objects:\r\n\r\nPacketList:\r\n           Some helper functions were added to emulate a socket.\r\n           I found this might be a useful feature.\r\n\r\nsniff:\r\n      A instance of a DefaultSession can be provided to sniff.\r\n      This allows me to access a Session object after sniff\r\n      modified its internal state. In this way, I can implement\r\n      a ECUSession which holds the internal state of an ECU.\r\n      After sniffing some packets, I can still access this\r\n      ECUSession to ask for modifications made to it."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafbfa88c0a76e0a51a29",
    "number": 2225,
    "body": "fixes https://github.com/secdev/scapy/issues/2223",
    "head_branch": "tcpdump-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2225 from gpotter2/tcpdump-fix\n\nFix tcpdump detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc0a88c0a76e0a51a2a",
    "number": 2224,
    "body": "This PR:\r\n- fixes the doc of `FieldListField`\r\n- adds some autodoc config to improve the render",
    "head_branch": "autodoc-conf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Autodoc configuration improvements (#2224)\n\n* Add autodoc configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc0a88c0a76e0a51a2b",
    "number": 2219,
    "body": "This commit is to fix the problem related to issue #2095 \r\nSince @lidllohntsich is not responding, I'm just passing on the commit.\r\n\r\nThanks.",
    "head_branch": "radius_fields_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc1a88c0a76e0a51a2c",
    "number": 2217,
    "body": "This should improve the render.",
    "head_branch": "autodoc-conf",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc2a88c0a76e0a51a2d",
    "number": 2216,
    "body": "- Added SM_Public_Key and SM_DHKey_Check layers for scapy to be able to dissect Secure Connection packets from the new BLE 4.2 Standard;\r\n- Added _att_error_codes structure containing the ATT error codes for layer `ATT_Error_Response`\r\n\r\nThis PR is relatively very simple, so I'm not sure if a new tests needs to be added for this PR.\r\nLet me know your feedback.",
    "head_branch": "smp_public_key",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SM_Public_Key() & SM_DHKey_Check() unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc3a88c0a76e0a51a2e",
    "number": 2215,
    "body": "Hello @gpotter2 and @guedou I'm doing this preliminary PR to add more PDUs for BTLE layer and fix some problems I've found for CRC and BTLE_CONNECT_REQ. Keep in mind that this is a way preliminary PR just to sync what changes needs to be done, that's why I didn't even run flake8 and the tests will probably fail as of now.\r\nHere's the summary of new additions, fixes and observations for this PR:\r\n\r\n- Added most data PDUs up to BLE 4.2;\r\n- Fixed connection request endianness. AA and crc_init should be little endian;\r\n- Fixed the CtrlPDU layer For some reason it was the same as LL_VERSION_IND layer;\r\n-  Added more BTLE_Versions\r\n- LL_FEATURE_RSP is not ready, somewhat I had to brak the bitfield in 16 bits as it was no working well with an odd bit field number;\r\n- The CRC only corresponds to wireshark, if it's in little endian. The bits reversed is fine though. \r\n- The Data channel PDUs name was bases on the BLE standard, but let me know if you'd prefer different and simpler names.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc4a88c0a76e0a51a2f",
    "number": 2214,
    "body": "",
    "head_branch": "fix-dot3-src",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2214 from p-l-/fix-dot3-src\n\nDot3: use SourceMACField for src field"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc5a88c0a76e0a51a30",
    "number": 2213,
    "body": "Implements these Layers under `scapy/contrib`:\r\n[ONC RPC v2](https://tools.ietf.org/html/rfc5531)\r\n[NFS v3](https://tools.ietf.org/html/rfc1813) - Also Describes Mount and NLM\r\n[Portmapper v2](https://tools.ietf.org/html/rfc1833)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[New Layers] Added oncrpc v2, nfs v3, mount v3, nlm v4, portmap v2 to contrib (#2213)\n\n* Added oncrpc, nfs, mount, nlm, portmap to contrib\r\n\r\n* fix pep8\r\n\r\n* Capital packet names\r\n\r\n* Add Raw String tests to unit tests\r\n\r\n* fix operator whitespace pep8 errors\r\n\r\n* Redo post_builds in oncrpc with struct.pack\r\n\r\n* changed check to unhexlify filehandles\r\n\r\n* replace \"\\x00\" string with b\"\\x00\" bytes object\r\n\r\n* change rpc imports to avoid static access\r\n\r\n* renamed duplicate \"Filehandle\" object\r\n\r\n* Removed File_Object and Object_Name duplication\r\n\r\n* remove unnecessary unhexlify imports\r\n\r\n* remove attribute change from post_build\r\n\r\n* replace type() with isinstance() in loct"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc5a88c0a76e0a51a31",
    "number": 2212,
    "body": "fixes https://github.com/secdev/scapy/issues/2209\r\n\r\n>  Data Offset:  4 bits\r\n>\r\n>    The number of 32 bit words in the TCP Header.  This indicates where\r\n>    the data begins.  The TCP header (even one including options) is an\r\n>    integral number of 32 bits long.\r\n>\r\n>  Reserved:  6 bits\r\n>\r\n>    Reserved for future use.  Must be zero.\r\n\r\nThis PR basically checks that the size doesn't exceeds 255.",
    "head_branch": "tcpoffset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2212 from gpotter2/tcpoffset\n\nFix TCP dataofset computation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc6a88c0a76e0a51a32",
    "number": 2210,
    "body": "This PR adds a missing feature to `arping`: display the manufacturer name.\r\n\r\nFor example:\r\n```\r\n>>> ar = ARPingResult([(None, Ether(src='70:ee:50:5f:4e:ee')/ARP(psrc='192.168.0.1'))])                  \r\n>>> ar.show()             \r\n  70:ee:50:5f:4e:ee Netatmo 192.168.0.1\r\n```",
    "head_branch": "arping_manuf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2210 from guedou/arping_manuf\n\nDisplay the manufacturer name in arping results"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc7a88c0a76e0a51a33",
    "number": 2207,
    "body": "A tool, that analyzes packages based on the OnBoardDiagnostics-Protocol on the CAN-Bus.\r\nIt offers the output of current DiagnosticTroubleCodes,\r\nscanning for supported Parameter IDentifiers and\r\nunsupported(hidden) PIDs",
    "head_branch": "obdscan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Obdscan (#2207)\n\n* Added OBD scanner\r\n- integrated OBD-scanner with command line interface\r\n- Refactoring of scanner.py and obdscanner.py to include verbose mode\r\n- Exchanging subprocess.Popen() with os.system() in order to support the 'unsupported PIDs scan', which crashes otherwise\r\n- Changed the responder threads for the UTS-Files to daemons and minor refactoring to support --verbose in 'scanner.uts'\r\n- PEP 8 fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc8a88c0a76e0a51a34",
    "number": 2206,
    "body": "This PR adds the `SignedLongField` and `LESignedLongField`. Doc changes and unit tests added.",
    "head_branch": "LESignedLongField",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2206 from martingalloar/LESignedLongField\n\nAdded SignedLongField and LESignedLongField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafc9a88c0a76e0a51a35",
    "number": 2205,
    "body": "Fixes #2172",
    "head_branch": "issue_#2172",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafcaa88c0a76e0a51a36",
    "number": 2204,
    "body": "Fix #2193 ",
    "head_branch": "issue_#2193",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2204 from guedou/issue_#2193\n\nWarn when different packet types are written to a PCAP file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafcaa88c0a76e0a51a37",
    "number": 2202,
    "body": "snapcraft.yaml to build a [snap](https://snapcraft.io/). This is the basic snap layout. I still to make a few configurations for networking.\r\n\r\nThis is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\nA snap package that will install and setup the scapy shell on Debian/Ubuntu systems.\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\n\r\n> if required - outline impacts on other parts of the library\r\n\r\nfixes #xxx (add issue number here if appropriate, else remove this line)\r\n",
    "head_branch": "snap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafcba88c0a76e0a51a38",
    "number": 2198,
    "body": "This PR:\r\n- registers `autodoc` in sphinx to generate the reference API automatically. **THIS:**\r\n  - Will automatically check that the docstring are correctly built (whether Numpy/Google/restructed text style)\r\n  - Builds the reference in the docs\r\n- adds a `tox -e generate_docs` util used to regenerate the reference API tree.\r\n- fixes (many) doc issues to make the tests pass.\r\n- removes `NewDefaultValues`\r\n\r\n## Do NOT review the second commit: those are automatically generated files. We need to include them because ReadTheDocs won't generate them.",
    "head_branch": "autodoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2198 from gpotter2/autodoc\n\n[Autodoc] Setup automated documentation for the Scapy codebase"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafcca88c0a76e0a51a39",
    "number": 2195,
    "body": "Minor typos",
    "head_branch": "vagrant_typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2195 from guedou/vagrant_typo\n\nVagrant provisioning fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafcda88c0a76e0a51a3a",
    "number": 2191,
    "body": "- regularize lineation\r\n- cleanup trailing whitespace\r\n- fix typo (hanging parentheses after \"tshark\")",
    "head_branch": "docs-edit-introduction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo in introduction.rst\n\nRemove extra parenthesis after \"tshark\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafcea88c0a76e0a51a3b",
    "number": 2190,
    "body": "fixes https://github.com/secdev/scapy/issues/2189",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "RawPcapReader iterator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafcfa88c0a76e0a51a3c",
    "number": 2187,
    "body": "Simple notebook formatting.",
    "head_branch": "notebook_formatting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Notebook formatting"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd0a88c0a76e0a51a3d",
    "number": 2186,
    "body": "This PR fixes #2183 \r\n\r\nThe unit test does nothing more than accessing the branch that triggered the initial bug.",
    "head_branch": "Issue_#2183",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove useless self"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd1a88c0a76e0a51a3e",
    "number": 2185,
    "body": "This adds a new `Packetizer` construct, used for splitting a stream of bytes into packets (ie: MAC sublayer of the data link layer).  This is useful for bringing serial connections into Scapy.\r\n\r\nI implemented RFC 1055 Serial Line IP and made it a core layer.  The protocol itself is very simple, and it's useful for implementing both very similar protocols (such as nRF Sniffer's serial interface) and vaguely similar protocols (such as HDLC/PPP on serial).\r\n\r\nThe SLIP implementation includes enough glue and examples that are enough to work with `slattach` (Linux) and `slip2tun` (OSX).\r\n\r\nI also added some functionality to the existing HDLC implementation to use it, but getting enough of the \"glue\" to make `pppd` work is very complex (as there are multiple negotiation steps).\r\n\r\nThere's a couple of more things I want to split out of this PR, so this is a slight work-in-progress:\r\n\r\n* To make experimenting with interfaces in userspace friendlier, I implemented a `ICMPEcho_am` `AnsweringMachine`.  I use this in the examples here, but it is otherwise independent from the rest of the code.\r\n\r\n* `SuperSocket` is hard coded to a single value for `recv` and `raw_recv` default calls, which is the default Ethernet MTU.  This is problematic for the packets I'm working with, so I have added `default_recv_size` as a constructor param for this.\r\n\r\n* Adds a `SuperSocket.am()` convenience method.",
    "head_branch": "slip2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd1a88c0a76e0a51a3f",
    "number": 2184,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [ x ] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [ x ] I squashed commits belonging together\r\n-   [ x ] I added unit tests or explained why they are not relevant\r\n-   [ x ] I executed the regression tests for Python2 and Python3 - haven't notice any regressions\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\nextend list of standard options available in DHCP v4 \r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\nn/a\r\n> if required - outline impacts on other parts of the library\r\nn/a\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2184 from wwencel/master\n\nset of new dhcp options"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd2a88c0a76e0a51a40",
    "number": 2182,
    "body": "This PR:\r\n- fixes the way `scapy.contrib.scada` protocols are registered in `list_contribs()`\r\n- adds support for subfolders handling in `explore()`:\r\n![image](https://user-images.githubusercontent.com/10530980/61897045-8363ae00-af16-11e9-9599-7927bda0ef74.png)\r\n",
    "head_branch": "explore-improve",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd3a88c0a76e0a51a41",
    "number": 2181,
    "body": "An issue was triggered in rare cases",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd4a88c0a76e0a51a42",
    "number": 2180,
    "body": "Another blocker for the BlackHat demonstration, please merge fast.",
    "head_branch": "traceroute_help",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Better traceroute help"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd5a88c0a76e0a51a43",
    "number": 2179,
    "body": "Fix a regression introduced since v2.4.0.\r\n\r\nPlease merge it quickly as it blocks my BlackHat demonstration.",
    "head_branch": "wrpcap_SndRcvList",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow SndRcvList to be written to a PCAP file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd6a88c0a76e0a51a44",
    "number": 2178,
    "body": "Discovered when experimenting with #2162 ",
    "head_branch": "manufdb_none",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prevent the manufacturer database from being None"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd7a88c0a76e0a51a45",
    "number": 2177,
    "body": "",
    "head_branch": "fix_2170",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix issue #2170 (#2177)\n\n* Fix issue #2170\r\n\r\n* add swap bytes option to python-can socket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd7a88c0a76e0a51a46",
    "number": 2175,
    "body": "This PR adds additional getters to `Packet`. \r\nThe idea behind this: I would like to have a string comparison for `EnumFields`. \r\n\r\nWith this modification, the following use case will be possible:\r\n```python\r\nclass Test(Packet):\r\n     fields_desc = [EnumField(\"field\", 0, {1: \"state1\", 2: \"state2\"})]\r\n\r\npkt = Test(field=1)\r\npkt.field == 1\r\npkt.field_repr == \"state1\"\r\n\r\npkt.field = \"state2\"\r\npkt.field_repr == \"state2\"\r\n```\r\n\r\nI thought a lot about other approaches to achieve this feature. This approach was the nicest I found.\r\n\r\nI truly understand that this modification is very deep in the core of Scapy and might change the user experience. Therefore, feel free to drop this PR. If you accept such a change, I will add additional unit tests for that.     ",
    "head_branch": "enum_repr_packet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd8a88c0a76e0a51a47",
    "number": 2174,
    "body": "Very obvious fix",
    "head_branch": "nonclosed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Close file in list_contrib()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafd9a88c0a76e0a51a48",
    "number": 2173,
    "body": "Simple PR that fixes a doctring for a nicer `lsc()` output.\r\n\r\nHere is the output on `master`:\r\n```\r\n>>> lsc()                                                                                                                     \r\n[..]                                                 \r\nbind_layers         : Bind 2 layers on some specific fields' values. It makes the packet being built  # noqa: E501\r\n[..]          \r\n```",
    "head_branch": "docstring_fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2173 from guedou/docstring_fixed\n\ndocstring fixed to please lsc()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafdaa88c0a76e0a51a49",
    "number": 2171,
    "body": "No functional changes. Must minor code refactoring.\r\n\r\n@polybassa \r\n@AlexAshs ",
    "head_branch": "isotpscanner_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor refactoring of ISOTPScanner"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafdba88c0a76e0a51a4a",
    "number": 2169,
    "body": "This fixes https://github.com/secdev/scapy/issues/2166\r\n\r\nCurrently:\r\n```\r\n>>> fuzz(ARP(pdst=\"127.0.0.1\"))\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-1-dc0d41f97613> in <module>\r\n----> 1 fuzz(ARP(pdst=\"127.0.0.1\"))\r\n\r\n~\\Documents\\Gabriel\\secdev\\scapy\\scapy\\packet.py in fuzz(p, _inplace)\r\n   2029                     print(\"fuzzing\", repr(r))\r\n   2030                     fuzz(r, _inplace=1)\r\n-> 2031             elif f.default is not None:\r\n   2032                 if not isinstance(f, ConditionalField) or f._evalcond(q):\r\n   2033                     rnd = f.randval()\r\n\r\n~\\Documents\\Gabriel\\secdev\\scapy\\scapy\\fields.py in __getattr__(self, attr)\r\n    382\r\n    383     def __getattr__(self, attr):\r\n--> 384         return getattr(self._find_fld(), attr)\r\n    385\r\n    386\r\n\r\n~\\Documents\\Gabriel\\secdev\\scapy\\scapy\\fields.py in _find_fld(self)\r\n    337                 pass\r\n    338             else:\r\n--> 339                 if not pkt.default_fields:\r\n    340                     # Packet not initialized\r\n    341                     return self.dflt\r\n\r\nAttributeError: 'TerminalInteractiveShell' object has no attribute 'default_fields'\r\n```",
    "head_branch": "tinypatch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix fuzzing on MultipleTypeField & ARP routing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafdca88c0a76e0a51a4b",
    "number": 2168,
    "body": "Very small patch to remove the second exception when launching a socket in non sudo mode.\r\n\r\nIt appears people are too lazy to read the exception entirely 😄 ",
    "head_branch": "tinypatch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Error management on non-sudo sockets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafdda88c0a76e0a51a4c",
    "number": 2164,
    "body": "# Note: after some experiments, Mypy will require so many changes that the files should be done one by one\r\n\r\nRequires https://github.com/secdev/scapy/pull/2162\r\n\r\nThis PR:\r\n- adds type hinting for scapy's layers\r\n\r\n**This was automatically generated, ~~then reviewed manually.~~** (STILL TODO) I may have missed some big mistakes, please review carefully. Note that the automatic detector tends to use specific Packet classes rather than the general \"Packet\" class.\r\n\r\n*Reviewers:* it's a good idea to use the new \"File viewed\" feature :smile:",
    "head_branch": "mypy-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafdea88c0a76e0a51a4d",
    "number": 2163,
    "body": "# Note: after some experiments, Mypy will require so many changes that the files should be done one by one\r\n\r\nRequires #https://github.com/secdev/scapy/pull/2162\r\n\r\nThis PR:\r\n- adds type hinting for Scapy's core.\r\n- adds type hinting for arch/\r\n\r\n**This was automatically generated, then reviewed manually.** I may have missed some big mistakes, please review carefully. Note that the automatic detector tends to use specific Packet classes rather than the general \"Packet\" class.\r\n\r\n*Reviewers:* it's a good idea to use the new \"File viewed\" feature :smile:",
    "head_branch": "mypy-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafdea88c0a76e0a51a4e",
    "number": 2162,
    "body": "This PR provides the tools, scripts and tests required to start \"Project Hinty\" = adding type hinting into Scapy.\r\n\r\n- provides UTscapy util to use `pyannotate` to generate type hinting\r\n- add Mypy tests to check regressions\r\n- relocate test configs\r\n- some various fixes that were failing on my test machine\r\n- two files were used (processed) as a trial: `main.py` and `__init__.py`. Because `http2.py` had also been done previously, it was also included.",
    "head_branch": "mypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Apply guedou's suggestion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafdfa88c0a76e0a51a4f",
    "number": 2161,
    "body": "Tools to simulate basic OBD communication and scan can-bus for OBD messages and check for supported OBD Services",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe0a88c0a76e0a51a50",
    "number": 2160,
    "body": "Provides commonly used functionality as functions for using the GMLAN protocol. This should save time when working with this protocol.\r\n\r\nTest are also included.\r\n\r\n\r\n",
    "head_branch": "gmlanutils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "flake8, enjoy yourself!"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe1a88c0a76e0a51a51",
    "number": 2159,
    "body": "Reverts @polybassa 'a changes.\r\n\r\nIt actually broke things like\r\n`sniff(filter=\"tcp port 80\")`\r\n`sniff(monitor=True)`\r\n\r\nWhat do you think of the new changes ?",
    "head_branch": "patch-m",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2159 from gpotter2/patch-m\n\nFix *args/**kwargs on Sessions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe2a88c0a76e0a51a52",
    "number": 2157,
    "body": "Hi, this is a proof of concept to create a reStructuredText output from a `*.uts` file. The idea behind this is to generate some simple usage examples semi-automatically with the possibility to always verify the examples against the latest version of Scapy.\r\n\r\nI added a example `docs.uts` file for a first test. \r\nWhat do you think about that?\r\nDo you have any comments or ideas for improvements?\r\n\r\nHere is the example output. \r\n```\r\nHow to use Scapy's CAN layer\r\n============================\r\n\r\nRUN ``./test/run_tests_py3 -t test/docs.uts -k docs -R -q`` to get the docs\r\n\r\nBasic operations\r\n----------------\r\n\r\nThis testset is for preparation of the campaign\r\n\r\nLoad CAN layer\r\n^^^^^^^^^^^^^^\r\n\r\nThis imports the CAN protocol into the current Scapy session\r\n\r\nUsage example::\r\n        \r\n        load_layer(\"can\")\r\n        \r\n        \r\nBuild a CAN packet\r\n^^^^^^^^^^^^^^^^^^\r\n\r\nA simple CAN packet can be build like this. The length field is set during the build.\r\n\r\nUsage example::\r\n        \r\n        pkt = CAN(identifier=0x133, data=b\"\\xde\\xad\\xbe\\xef\")\r\n        bytes(pkt) == b\"\\x00\\x00\\x013\\x04\\x00\\x00\\x00\\xde\\xad\\xbe\\xef\"\r\n        \r\n        \r\n        \r\nBuild a CAN packet with extended addressing\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nA CAN packet with extended addressing can be build like this.\r\n\r\nUsage example::\r\n        \r\n        pkt = CAN(flags=\"extended\", identifier=0x133, data=b\"\\xde\\xad\\xbe\\xef\")\r\n        bytes(pkt) == b\"\\x80\\x00\\x01\\x33\\x04\\x00\\x00\\x00\\xde\\xad\\xbe\\xef\"\r\n        pkt.flags == \"extended\"\r\n        \r\n        pkt = CAN(flags=\"extended\", identifier=0x1234567, data=b\"\\xde\\xad\\xbe\\xef\")\r\n        bytes(pkt) == b\"\\x81\\x23\\x45\\x67\\x04\\x00\\x00\\x00\\xde\\xad\\xbe\\xef\"\r\n        pkt.flags == \"extended\"\r\n        \r\n        \r\nOperations on candump files\r\n---------------------------\r\n\r\nInterpreting candump output\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\ncandump is a very useful utility and part of the Linux can-utils packet\r\n\r\nUsage example::\r\n        \r\n        b'''  vcan0  1F334455   [8]  11 22 33 44 55 66 77 88\r\n          vcan0       1F3   [8]  11 22 33 44 55 66 77 88\r\n          vcan0       1F3   [8]  11 22 33 44 55 66 77 88\r\n          vcan0  1F334455   [8]  11 22 33 44 55 66 77 88\r\n          vcan0       1F3   [8]  11 22 33 44 55 66 77 88\r\n          vcan0  1F334455   [8]  11 22 33 44 55 66 77 88\r\n          vcan0  1F334455   [4]  11 22 33 44\r\n          vcan0       1F3   [4]  11 22 33 44'''\r\n        \r\n        candump_fd = BytesIO(_)\r\n        packets = rdcandump(candump_fd)\r\n        assert len(packets) == 8\r\n        \r\n        \r\n\r\n```",
    "head_branch": "utscapy_rst",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add docs output for UTScapy\n\nadd testfile\n\nadd postfix to exclude line from documentation.\n\nfix unit test\n\nremove test/docs.uts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe3a88c0a76e0a51a53",
    "number": 2152,
    "body": "While installing scapy on a fresh system, I discovered that pdflatex was missing.\r\n\r\nWhile extlib._text_pyx() tests if PyX is installed correctly, it does not take into account pdflatex might not be installed on the system.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe3a88c0a76e0a51a54",
    "number": 2151,
    "body": "This PR fixes an issue reported on gitter. Scapy routes IPv6 packets to link-local address to `conf.iface`. This is problematic when IPv6 is not enabled on this interface.",
    "head_branch": "ipv6_disabled",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Route IPv6 link-local addresses unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe4a88c0a76e0a51a55",
    "number": 2149,
    "body": "This is a proposal of support for using Extended Sequence Number in Scapy's IPsec for AEAD algorithm such as AES-GCM (see RFC 4303 & RFC 4106).\r\n\r\nESN adds support for 64 bit packet numbers instead of 32 bit. While only the 32 LSB are sent in the packet (in the ESP header), the 32 MSB can be included in the computation of the ICV for AEAD algorithms.\r\n\r\nTherefore, for such algorithms, the additional authenticated data (AAD) has the following organization : \r\nSPI & ESN (96-bits) instead of SPI & SN (64-bits).\r\n\r\nIn order to do that, I have added two arguments in the encrypt & decrypt functions : esn_en & esn.\r\n- esn_en : ESN Enable\r\n- esn : ESN 32 MSB\r\nIf those two arguments are not specified, then the esn_en & esn values are taken from the SA parameters.\r\nBy default, sa.esn_en is False and sa.esn is 0.\r\n\r\nI added a few tests in ipsec.uts to test this new feature.\r\n\r\nThank you for your feedback.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for ESN (#2149)\n\n* Update ipsec.py\r\n\r\nUpdate of ipsec.py to support Extended Sequence number when using an AEAD algorithm.\r\n\r\n* Update ipsec_uts\r\n\r\nAddition of 4 new tests to test the ESN feature for AEAD algorithms.\r\n\r\n* Update ipsec.py\r\n\r\nUpdate ipsec.py  to be in line with PEP8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe5a88c0a76e0a51a56",
    "number": 2147,
    "body": "While reading some IPv6 related functions, it discovered that `conf.iface6` is not necessary.",
    "head_branch": "deprecate_iface6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removing conf.iface6 (#2147)\n\n* Removing conf.iface6\r\n\r\n* conf.iface6 deprecation warning"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe6a88c0a76e0a51a57",
    "number": 2146,
    "body": "This PR adds new TLS 1.3 messages and extensions and support only basic 1-RTT handshake :\r\n- Update the key schedule\r\n- Update the parsing of TLS 1.3 extensions\r\n- Add authentication and verification of additional data\r\n- tls13.uts is test vectors for Simple 1-RTT Handshake (section 3, RFC8448)\r\n\r\nTODO (next PRs) : \r\n- Client and server TLS 1.3 automatons\r\n- Support for 0-RTT \r\n- Support HelloRetryRequest\r\n- Support for client authentication\r\n\r\n\r\n",
    "head_branch": "add-tls13-basic",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove small duplication"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe7a88c0a76e0a51a58",
    "number": 2145,
    "body": "This PR:\r\n- fixes Solaris support: tested on a VM with Solaris 11.1\r\n- cleanup un-required stuff\r\n- **Solaris will only work WITH Libpcap**: it's much easier for us than implement `DLPI`, which is required for Solaris. In fact, according to [this page](https://www.oracle.com/technetwork/server-storage/solaris/solaris-linux-app-139382.html) Solaris doesn't support `AF_PACKET` but rather uses `DLPI`.\r\n\r\nfixes https://github.com/secdev/scapy/pull/2141",
    "head_branch": "solaris",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add docstring on get_if_raw_hwaddr"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe8a88c0a76e0a51a59",
    "number": 2144,
    "body": "This PR fixes some logic errors, anonymously reported.",
    "head_branch": "logic_errors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Logic errors reported by benevolent friends"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe9a88c0a76e0a51a5a",
    "number": 2143,
    "body": "",
    "head_branch": "rdcandump_iterable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add CandumpReader for rdcandump (#2143)\n\n* Add iterable version of rdcandump\r\n* remove debug prints\r\n* remove ISOTPSniffer\r\n* fix unit test\r\n* add count property to DefaultSession"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafe9a88c0a76e0a51a5b",
    "number": 2142,
    "body": "Some minor improvements for the ISOTPMessageBuilder class",
    "head_branch": "isotp_message_builder_improvement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve ISOTPMessageBuilder implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafeaa88c0a76e0a51a5c",
    "number": 2141,
    "body": "Resolves a failure triggered by \"make test\" on NetBSD.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafeba88c0a76e0a51a5d",
    "number": 2140,
    "body": "This PR fixes https://bitbucket.org/secdev/scapy/issues/5089\r\n\r\nThe second commit adds missing UTScapy flags.",
    "head_branch": "net6_format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Missing tcpdump flags"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafeca88c0a76e0a51a5e",
    "number": 2139,
    "body": "This fixes #2134 and adds mocked test for read_routes on 10.13.",
    "head_branch": "macos_catalina",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "macOS catalina support (#2139)\n\n* read_routes() mocked on macOS 10.13\r\n\r\n* read_routes() fixes for macOS 10.15"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafeda88c0a76e0a51a5f",
    "number": 2138,
    "body": "This PR simplifies the setup of *BSD VMs to launch Scapy unit tests with tox.",
    "head_branch": "bsd_ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Vagrant based *BSD CI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafeea88c0a76e0a51a60",
    "number": 2137,
    "body": "This PR makes all unit tests working on OpenBSD 6.4.",
    "head_branch": "openbsd_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure that the return value is coherent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafefa88c0a76e0a51a61",
    "number": 2135,
    "body": "I am using NSH protocol form my dissertation tasks. NSH 8300 RFC was updated, In scapy, nsh packet structure and name of field revised. I have updated nsh.py.\r\n\r\n \r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafefa88c0a76e0a51a62",
    "number": 2132,
    "body": "**Edits by gpotter2:** This PR has been split !\r\n\r\n- [x] https://github.com/secdev/scapy/pull/2146 - Basic support\r\n- [x] https://github.com/secdev/scapy/pull/2244 - Automatons\r\n- [x] https://github.com/secdev/scapy/pull/2260 - RetryRequests\r\n- [x] https://github.com/secdev/scapy/pull/2585 Client Auth\r\n- [x] https://github.com/secdev/scapy/pull/2586 Client Key update\r\n- [x] https://github.com/secdev/scapy/pull/2586 External PSK\r\n- [x] https://github.com/secdev/scapy/pull/2625 Session resumption\r\n- [x] https://github.com/secdev/scapy/pull/2633 Curve x448 support\r\n- [ ] Early data capatibilies: XXX unfinished. See [this rebase](https://github.com/gpotter2/scapy/tree/romain-perez-add-tls13-early-data) of romain-perez's work\r\n\r\n**Original PR:**\r\n\r\nThis PR adds support of TLS 1.3 :\r\n- Add new TLS 1.3 messages and extensions from RFC8446\r\n- Update the key schedule\r\n- Support of 0-RTT\r\n- New test vectors based from RFC8448\r\n- Basic automaton for TLS 1.3 client and server\r\n\r\nTODO:\r\n- fix error management in automaton\r\n- middleblox compatibility\r\n\r\nfixes https://github.com/secdev/scapy/issues/1668",
    "head_branch": "add-tls13",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff0a88c0a76e0a51a63",
    "number": 2131,
    "body": "MQTT-SN is a sister protocol to MQTT that allows for MQTT-like traffic over UDP. It was designed to be as close as possible to MQTT but has some differences in its header format, so the MQTT layer of `scapy` can't be used to handle MQTT-SN packets.",
    "head_branch": "mqttsn_layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "contrib: provide support for MQTT-SN (#2131)\n\n* contrib: provide support for MQTT-SN\r\n\r\nMQTT-SN is a sister protocol to MQTT that allows for MQTT-like traffic\r\nover UDP. It was designed to be as close as possible to MQTT but has\r\nsome differences in its header format, so the MQTT layer of `scapy`\r\ncan't be used to handle MQTT-SN packets.\r\n\r\n* test/contrib: provide tests for MQTT-SN layer\r\n\r\n* fixup! contrib: provide support for MQTT-SN\r\n\r\nAmend test to show that payload is parsed wrongly\r\n\r\n* fixup! contrib: provide support for MQTT-SN\r\n\r\nAdd 2 extra byte for >0xff length fields on adjust\r\n\r\n* fixup! test/contrib: provide tests for MQTT-SN layer\r\n\r\nFix test for fixed length field calculation\r\n\r\n* fixup! contrib: provide support for MQTT-SN\r\n\r\n* fixup! test/contrib: provide tests for MQTT-SN layer\r\n\r\n* fixup! contrib: provide support for MQTT-SN"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff1a88c0a76e0a51a64",
    "number": 2130,
    "body": "When something goes wrong in the TLS server automaton, it may start\r\nthe next connection with a non-empty buffer_in, leading to an immediate\r\nerror (see #2129).\r\n\r\nThis commit empties buffer_in and buffer_out on restart.",
    "head_branch": "buffer_cleanup_tls_automaton",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bugfix in TLS automaton restart.\n\nWhen something goes wrong in the TLS server automaton, it may start\nthe next connection with a non-empty buffer_in, leading to an immediate\nerror.\n\nThis commit empties buffer_in and buffer_out on restart."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff2a88c0a76e0a51a65",
    "number": 2128,
    "body": "This PR:\r\n- adds support for MX records in DNS\r\n- we already had the SOA records but they were not used for dissection. Fix that\r\n- add a few one-liners + a `iterpayloads()` utilitary method to ease the process of DNS results\r\n\r\nfixes https://github.com/secdev/scapy/issues/2127",
    "head_branch": "dnsfixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix DNS MX & SOA records | Add more DNS one-liners (#2128)\n\n* Fix DNS MX & SOA records | Add more DNS one-liners\r\n\r\n* Fix doc indentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff3a88c0a76e0a51a66",
    "number": 2126,
    "body": "More duplicated code removed.",
    "head_branch": "remove_duplicated_code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Duplicated code remove"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff4a88c0a76e0a51a67",
    "number": 2125,
    "body": "During pen-test of ECUs, I usually have to send this specific packets periodically. This is a small utility to save time.\r\n\r\nAre unit-tests required here? The code is pretty trivial. ",
    "head_branch": "periodic_sender",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "UDS and GMLAN TesterPresent utility (#2125)\n\n* Implemented a utility class to send packets periodically\r\n\r\n* add UDS and GMLAN TesterPresent sender\r\n\r\n* restore scapy/utils\r\n\r\n* change variable name\r\n\r\n* fix flake"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff4a88c0a76e0a51a68",
    "number": 2124,
    "body": "Fixes #1616.",
    "head_branch": "pkt-hash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2124 from p-l-/pkt-hash\n\nMake Packet() subclasses unhahsable (Python 2)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff5a88c0a76e0a51a69",
    "number": 2123,
    "body": "Generic fix for #1616 ",
    "head_branch": "Issue_#1616",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff6a88c0a76e0a51a6a",
    "number": 2120,
    "body": "This PR adds a quick checklist that maintainers can use to release a stable version of Scapy.",
    "head_branch": "scapy_release_doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Scapy release description"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff7a88c0a76e0a51a6b",
    "number": 2119,
    "body": "This fix an error with `twine check` using while releasing Scapy.",
    "head_branch": "README_twine_fixes",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix markdown list"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff8a88c0a76e0a51a6c",
    "number": 2117,
    "body": "This fixes #2116\r\n\r\n",
    "head_branch": "fix/timestamp-precsiion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2117 from sergey-platonov/fix/timestamp-precsiion\n\nfix double precision for timestamp"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff9a88c0a76e0a51a6d",
    "number": 2114,
    "body": "This fixes #2112",
    "head_branch": "Issue_#2112",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2114 from guedou/Issue_#2112\n\nRemove a deprecated Travis feature"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faff9a88c0a76e0a51a6e",
    "number": 2113,
    "body": "[rebased]",
    "head_branch": "interfaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faffaa88c0a76e0a51a6f",
    "number": 2111,
    "body": "After having I had another look (especially with additional work on https://github.com/secdev/scapy/pull/1726), this part of https://github.com/secdev/scapy/pull/1986 was wrong, as @guedou guessed.",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faffba88c0a76e0a51a70",
    "number": 2110,
    "body": "Add configuration for UDS Negative Response handling of a requestCorrectlyReceived-ResponsePending message\r\n",
    "head_branch": "uds_response_pending",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2110 from polybassa/uds_response_pending\n\nAdd configuration for UDS Negative Response"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faffca88c0a76e0a51a71",
    "number": 2109,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\n\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\n\r\n> if required - outline impacts on other parts of the library\r\n\r\nfixes #xxx (add issue number here if appropriate, else remove this line)\r\n",
    "head_branch": "l2f_protocol",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faffda88c0a76e0a51a72",
    "number": 2108,
    "body": "This PR fixes #1975.\r\n\r\n`sr()` and `srloop()` are not candidates for this fix as they could be used to send packets to destinations available from different network interfaces. I do not think that it is a good idea to iterate over packets to select the interface, then to iterate again to send them.",
    "head_branch": "issue_#1975",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2108 from guedou/issue_#1975\n\nSmarter interface selection when sending one packet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faffea88c0a76e0a51a73",
    "number": 2107,
    "body": "Add Concox CRX1-New Protocol\r\nReference: https://drive.google.com/file/d/0B7dIYsEOmrGASEtmT2FPWnk5U3c/view?usp=sharing",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661faffea88c0a76e0a51a74",
    "number": 2106,
    "body": "Attempt at fixing #1696 \r\n\r\nIf not successful, I will close the issue.",
    "head_branch": "travis_xenial_vcan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fafffa88c0a76e0a51a75",
    "number": 2105,
    "body": "Attempt at removing useless code and increasing the coverage.",
    "head_branch": "codacy_duplicated_code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove duplicated code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb000a88c0a76e0a51a76",
    "number": 2104,
    "body": "This PR removes unused code shown by codacy.",
    "head_branch": "codacy_unused_code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unused code (#2104)\n\n* Remove unused code\r\n\r\n* warn user instead of throwing an Exeption"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb001a88c0a76e0a51a77",
    "number": 2102,
    "body": "fixes https://github.com/secdev/scapy/issues/1966",
    "head_branch": "racepatch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix initialization of MultipleTypeField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb002a88c0a76e0a51a78",
    "number": 2101,
    "body": "This PR fixes #1929.\r\n\r\nThe original `sniff()` was not supposed  to work this way. However, I find it quite useful to be able to build packets with Scapy and filter them with `tcpdump`. This a great way to test BPF filters.\r\n\r\nI am no 100% happy with the current implementation but it seems to work fine.",
    "head_branch": "issue_1929_packets",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Accept Scapy Packets as offline inputs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb003a88c0a76e0a51a79",
    "number": 2100,
    "body": "I renamed a duplicate unused field in ICMP().\r\n\r\nAdditionally, I think it would be useful with some sort of warning when this happens. Here I made the __init__() in Packet raise an exception,  but I don't know if that is too drastic.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb003a88c0a76e0a51a7a",
    "number": 2099,
    "body": "",
    "head_branch": "esni-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb004a88c0a76e0a51a7b",
    "number": 2097,
    "body": "Added ability to dissect and use [TLS ESNI](https://datatracker.ietf.org/doc/draft-ietf-tls-esni/)\r\nfixes #2096\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb005a88c0a76e0a51a7c",
    "number": 2094,
    "body": "Fix #1985",
    "head_branch": "issue_1985",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2094 from guedou/issue_1985\n\nDo not crash on incomplete TLS extension"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb006a88c0a76e0a51a7d",
    "number": 2092,
    "body": "This fix #1177 ",
    "head_branch": "contrib_uts_moved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2092 from guedou/contrib_uts_moved\n\n*.uts moved to test/"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb007a88c0a76e0a51a7e",
    "number": 2091,
    "body": "See https://github.com/secdev/scapy/issues/969\r\n\r\n**This only works with Python 3**\r\n\r\nIMH we shouldn't bother supporting Python 2.7. I'm against implementing the whole shabang of `ctypes` calls to support something which EOL is so soon.",
    "head_branch": "vlan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Only run test on Python 3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb008a88c0a76e0a51a7f",
    "number": 2090,
    "body": "This PR fixes #1803 ",
    "head_branch": "ut_bsds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2090 from guedou/ut_bsds\n\nFix failing unit tests on *BSD"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb008a88c0a76e0a51a80",
    "number": 2089,
    "body": "I don't expect the effects to be impressive, but that'll help\r\n- register more accurate timestamps\r\n- reduce default socket buffer size to 65536 (configurable in `conf.bufsize`)\r\n- use `started_callback` to start sending packets more accurately. IMH this will be useful mostly for BPF",
    "head_branch": "perfsndrcv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2089 from gpotter2/perfsndrcv\n\nA few latency improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb009a88c0a76e0a51a81",
    "number": 2088,
    "body": "- fixes https://github.com/secdev/scapy/issues/2085\r\n- cleanup: use `MultipleTypeField`",
    "head_branch": "lldpcleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2088 from gpotter2/lldpcleanup\n\nLLDP cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb00aa88c0a76e0a51a82",
    "number": 2087,
    "body": "Attempt at improving the coverage of the TLS module.",
    "head_branch": "coverage_tls_cert",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2087 from guedou/coverage_tls_cert\n\nCoverage TLS certificate"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb00ba88c0a76e0a51a83",
    "number": 2084,
    "body": "fixes https://github.com/secdev/scapy/issues/2080\r\n\r\nI retrieved the original commit, though it got  squashed in the cherry-pick",
    "head_branch": "tcpclient",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2084 from gpotter2/tcpclient\n\nTcpclient Doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb00ca88c0a76e0a51a84",
    "number": 2082,
    "body": "Some description",
    "head_branch": "test-branch-for-yana",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb00da88c0a76e0a51a85",
    "number": 2079,
    "body": "As discussed in #2075\r\n",
    "head_branch": "uts_syntax",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2079 from polybassa/uts_syntax\n\nAdd vim syntax highlighting for *uts files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb00da88c0a76e0a51a86",
    "number": 2078,
    "body": "This module should probably be tested (I never use it, and have no idea if it works at all).\r\n\r\nThis PR simply replaces `os.popen2()` calls using `subprocess.Popen()`, since `os.popen2()` has simply been dropped from Python.\r\n\r\nFixes #2077.",
    "head_branch": "fix-voip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2078 from p-l-/fix-voip\n\nPython3: fix voip module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb00ea88c0a76e0a51a87",
    "number": 2074,
    "body": "Only refactoring. No functional changes\r\n\r\n@polybassa ",
    "head_branch": "signalfield_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2074 from akorb/signalfield_refactoring\n\nRefactoring of SignalField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb00fa88c0a76e0a51a88",
    "number": 2073,
    "body": "fixes https://github.com/secdev/scapy/issues/2071",
    "head_branch": "tinycountryfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2073 from gpotter2/tinycountryfix\n\nSmall padding fix in dot11"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb010a88c0a76e0a51a89",
    "number": 2072,
    "body": "This PR:\r\n* Remove doc about installing the wrappers\r\n* De-reference libdnet: dnet support will eventually be dropped\r\n",
    "head_branch": "drop_pcapy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2072 from gpotter2/drop_pcapy\n\nDoc Update following libpcap-wrappers drop."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb011a88c0a76e0a51a8a",
    "number": 2070,
    "body": "This PR removes an old `.coveragerc` file that was used before the complete transition to `tox`.",
    "head_branch": "update_coveragerc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removing useless .coveragerc file (#2070)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb012a88c0a76e0a51a8b",
    "number": 2069,
    "body": "The original Wifitap website is back online. This PR removes the link to archive.org.",
    "head_branch": "wifitap_link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2069 from guedou/wifitap_link\n\nRestore original Wifitap link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb012a88c0a76e0a51a8c",
    "number": 2068,
    "body": "Fixes #2063 by removing the `crypto_validator` decorator.",
    "head_branch": "issue_2063",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2068 from guedou/issue_2063\n\nParse WEP frames when cryptography is not available"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb013a88c0a76e0a51a8d",
    "number": 2066,
    "body": "This should ignore the failures on Python 3.4 and install tox anyway",
    "head_branch": "pipignoreinstalled",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2066 from gpotter2/pipignoreinstalled\n\nUpdate install.sh"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb014a88c0a76e0a51a8e",
    "number": 2065,
    "body": "This PR adds missing unit tests for the TFTP automaton.",
    "head_branch": "coverage_tftp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2065 from guedou/coverage_tftp\n\nTFTP fixes & automaton tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb015a88c0a76e0a51a8f",
    "number": 2064,
    "body": "> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\n\r\n### Improve Documentation\r\n\r\nReading over the docs, the link to [Wifitap](http://sid.rstack.org/static/articles/w/i/f/Wifitap_EN_9613.html) is dead. I found Wifitap's GitHub [repo](https://github.com/gdssecurity/wifitap/) and replaced the link with it. \r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update dead link in extending.rst (#2064)\n\n* Update dead link extending.rst\r\n\r\nWifitap project maintainers website replaced with GitHub repo link.\r\n\r\n* Update extending.rst\r\n\r\nDo you want it to read something like this?\r\n\r\n* Update doc/scapy/extending.rst\r\n\r\nCo-Authored-By: Gabriel <gabriel@potter.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb016a88c0a76e0a51a90",
    "number": 2062,
    "body": "This fixes the unit-tests, hopefully.\r\n\r\nhttps://ci.appveyor.com/project/secdev/scapy/builds/25096483/job/btoh71rf5hdbrx8f",
    "head_branch": "CANSignalsFix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix unit-test of CANSignals, add documentation and minor improvements. (#2062)\n\n* Fix unit-test of CANSignals, add documentation and minor improvements.\r\n\r\n* add seed call"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb017a88c0a76e0a51a91",
    "number": 2060,
    "body": "Test more volatiles.",
    "head_branch": "coverage_more",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2060 from guedou/coverage_more\n\nMore volatile unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb017a88c0a76e0a51a92",
    "number": 2059,
    "body": "Commands created by sub-classing `AnsweringMachine` with a non-empty `function_name` class attribute currently do not exist in Scapy shell (or in Python after `from scapy.all import *` statements).\r\n\r\nThis can be fixed by changing the imports order in `scapy/all.py`.",
    "head_branch": "fix-am-commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2059 from p-l-/fix-am-commands\n\nFix imports order to make sure AM commands work"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb018a88c0a76e0a51a93",
    "number": 2058,
    "body": "This PR adds a functionality to scan for ISOTP-Sockets in CAN-networks. The function `ISOTPScan` can be used from a interpreter session. A command-line utility allows the access to this scanner from a terminal. ",
    "head_branch": "isotpscan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implemented ISOTPScan function and commandline utility\n\n* Implemented ISOTPScanner function and commandline utility\r\n\r\n* add init file\r\n\r\n* add ctrl-c handler to stop scan\r\n\r\n* add docstrings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb019a88c0a76e0a51a94",
    "number": 2057,
    "body": "### Edit: if you have more questions, have a look at https://github.com/secdev/scapy/pull/2057#issuecomment-507574980\r\n\r\nWith a few little tricks, it's actually very possible to re-use the `Windows` integration that uses `winpcapy.py` to call `Npcap`, to call `libpcap` on non-Windows platforms. Indeed, the original `winpcapy.py` also had plain libpcap support\r\n\r\nThis PR:\r\n- **removes `pcapy`, `pypcap`, `pylibpcap` integrations, and use `winpcapy.py` instead**\r\n- updates the docs\r\n\r\n#### Why\r\n\r\n- https://github.com/secdev/scapy/pull/1350#issuecomment-382433837 there's a general very low activity / support for low-level Python networking bindings\r\n- It removes some dependencies\r\n- It removes code\r\n- Those libraries are not maintained a lot:\r\n    - `pypcap`: low activity. See [this](https://github.com/secdev/scapy/pull/1350#issuecomment-382433837)\r\n    - `pcapy`: the project maintainers have been replaced during an organization-level restructuring (https://github.com/helpsystems/pcapy/pull/60). The last PR I did there took months (monitor mode). It'll probably be even worse. **Update**: this https://github.com/helpsystems/pcapy/pull/61 is a very bad PR. It'll probably break a few things in Scapy.\r\n    - `python-libpcap`: against all odds, it's probably the less known but the most maintained option (https://github.com/karpierz/libpcap). But it doesn't seem to support Linux (https://github.com/karpierz/libpcap/issues/1)\r\n\r\nTested on:\r\n- Windows 10\r\n- FreeBSD 12\r\n- Ubuntu 18.04\r\n\r\nNotes:\r\n- even though winpcapy is used on non-winpcap systems, it's still the original name. I'd rather keep it like so for an historical purpose",
    "head_branch": "drop_pcapy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2057 from gpotter2/drop_pcapy\n\nDrop Python-libpcap integrations in favor of winpcapy.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb01aa88c0a76e0a51a95",
    "number": 2056,
    "body": "This PR aims to improve code coverage.",
    "head_branch": "coverage_root_directory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve code coverage (#2056)\n\n* scapy.extlib unit tests\r\n\r\n* Typos fixed\r\n\r\n* fragleaks*() cleaning & unit tests\r\n\r\n* scapy.utils refactoring & unit tests\r\n\r\n* scapy.arch.linux typo & unit tests\r\n\r\n* Useless function removed\r\n\r\n* Automaton test graph generation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb01ba88c0a76e0a51a96",
    "number": 2053,
    "body": "fixes https://github.com/secdev/scapy/issues/2052\r\n**cc @akorb**",
    "head_branch": "importloop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2053 from gpotter2/importloop\n\nResolve import loop"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb01ba88c0a76e0a51a97",
    "number": 2051,
    "body": "2nd attempt to fix https://github.com/secdev/scapy/issues/2049.\r\n\r\n**There is an extra commit not included in this PR: https://github.com/secdev/scapy/commit/4f59c1bf6816310fe9c1384da105db5bc533986e**",
    "head_branch": "travis3.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2051 from gpotter2/travis3.4\n\nUpdate pip and setuptools"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb01ca88c0a76e0a51a98",
    "number": 2050,
    "body": "first attempt to fix https://github.com/secdev/scapy/issues/2049",
    "head_branch": "travis3.4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb01da88c0a76e0a51a99",
    "number": 2047,
    "body": "I forgot this was windows-specific.\r\nThe colored logger wouldn't enable on non-windows platforms.",
    "head_branch": "improvestartup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2047 from gpotter2/improvestartup\n\nColorama isn't required on non-windows platforms"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb01ea88c0a76e0a51a9a",
    "number": 2046,
    "body": "This PR fixes #2045.",
    "head_branch": "Issue_#2045",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change IPv4 RADIUS attributes types"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb01fa88c0a76e0a51a9b",
    "number": 2043,
    "body": "Fixes #1861\r\n\r\nFixes the problem of the behavior of `randval` in `PacketField`.\r\nIt applies the proposed fix in the mentioned issue and I added unit tests which check whether the correct `Rand*` object has been applied to all fields.",
    "head_branch": "randval-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2043 from AlexAshs/randval-fix\n\nrandval() for PacketField, to ensure correct length of byte values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb020a88c0a76e0a51a9c",
    "number": 2042,
    "body": "This commit https://github.com/secdev/scapy/commit/5065917bb5f74161d650a765ae8b58c4b5127130#diff-cd215f0a012e58174f75a8fc054e35ceR2308 introduced a new bug.\r\n\r\nI produced an independent test:\r\n```python\r\nScalingField('data', 0, scaling=1.01).randval()._fix()\r\n```\r\nIt fails after the linked commit. `RandNum` can only generate values for integers, not for floating values. And the linked commit removes the converting from float to integer.\r\n\r\n### More examples:\r\n\r\n#### Working\r\n```python\r\nScalingField('data', 0, scaling=1).randval()._fix()\r\nScalingField('data', 0, scaling=1.0).randval()._fix()\r\nScalingField('data', 0, scaling=2.0).randval()._fix()\r\nScalingField('data', 0, scaling=3.0).randval()._fix()\r\nScalingField('data', 0, scaling=4.0).randval()._fix()\r\nScalingField('data', 0, scaling=4.8).randval()._fix()\r\nScalingField('data', 0, scaling=3.6).randval()._fix()\r\nScalingField('data', 0, scaling=2.4).randval()._fix()\r\n```\r\n\r\n#### Not Working\r\n```python\r\nScalingField('data', 0, scaling=1.1).randval()._fix()\r\nScalingField('data', 0, scaling=2.5).randval()._fix()\r\nScalingField('data', 0, scaling=3.9).randval()._fix()\r\n```\r\n\r\nIt works if the number behind the comma is even at the moment: (1.0, 1.2, 1.4, 1.6, 1.8)\r\nBut of course it should work for all numbers.\r\n\r\nI added calls to `_fix()` to detect this error since the unit tests had not detected it before.\r\n\r\nInstead of converting the values from integer to floats, I added the class `RandFloat` which can generate values for floating ranges with `random.uniform(min, max)`. Works with py2 and 3.\r\n\r\n@polybassa ",
    "head_branch": "scalingfield-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2042 from akorb/scalingfield-fix\n\nFixed random generation for ScalingField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb020a88c0a76e0a51a9d",
    "number": 2041,
    "body": "This might be useful to dissect CAN communication which is\r\ndescribed by DBC files.\r\n\r\nI've implemented SignalFields in a way that the can only used in a SignalPacket. This is because SignalFields can be described unordered and the Packet has to discard the correct amount of bytes after dissection.\r\n\r\nHere are examples how this fields behave:\r\n\r\n![](https://user-images.githubusercontent.com/4096406/57210659-c11efd80-6fdd-11e9-911a-a83a01420268.png)\r\n\r\n![](https://user-images.githubusercontent.com/4096406/57210668-ca0fcf00-6fdd-11e9-8026-72942a0bee1b.png)\r\n\r\n![](https://user-images.githubusercontent.com/4096406/57210704-e7449d80-6fdd-11e9-8dfc-e0a6c68a877b.png)\r\n\r\nHere is the DBC file which described these fields: https://github.com/ebroecker/canmatrix/blob/development/src/canmatrix/tests/test_frame_decoding.dbc\r\n\r\n\r\n\r\n",
    "head_branch": "CANSignals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implementation of SignalField and SignalPacket (#2041)\n\n* Implementation of SignalField and SignalPacket.\r\n\r\nThis might be useful to dissect CAN communication which is\r\ndescribed by DBC files.\r\n\r\n* apply review"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb021a88c0a76e0a51a9e",
    "number": 2040,
    "body": "This PR:\r\n- removes \"Hands on\" from the README. IMH it's better to link to the doc introduction instead\r\n- simplify it. We want to be direct: it's a README\r\n- links in https\r\n\r\nDemo: https://github.com/gpotter2/scapy/blob/gallery/README.md\r\n\r\n**Requires https://github.com/secdev/secdev.github.io/pull/20**",
    "head_branch": "gallery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2040 from gpotter2/gallery\n\nRefactor README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb022a88c0a76e0a51a9f",
    "number": 2039,
    "body": "fixes https://github.com/secdev/scapy/issues/2034",
    "head_branch": "tcpoffset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2039 from gpotter2/tcpoffset\n\nFail check on TCPoptions dissection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb023a88c0a76e0a51aa0",
    "number": 2038,
    "body": "fixes https://github.com/secdev/scapy/issues/2037",
    "head_branch": "DNS-type",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2038 from secdev/DNS-type\n\nUpdate dns.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb024a88c0a76e0a51aa1",
    "number": 2035,
    "body": "This is a part of https://github.com/secdev/scapy/pull/1999 that can be fast tracked.\r\nThis PR:\r\n- **Small performances boost: consistent 5-10% on dissection (caching improvements & guess_payload_class)**\r\n\r\n```\r\n>>> a = raw(Ether()/IP()/UDP())\r\n>>> %timeit Ether(a)\r\n```\r\n\r\n- Fixes `FlagsField` very weird behavior:\r\n\r\n**before (?!?!)**\r\n```python\r\n>>> EIR_Hdr() / EIR_Flags(flags=[\"general_disc_mode\", \"br_edr_not_supported\"])\r\n<EIR_Hdr  type=flags |<EIR_Flags  flags=['general_disc_mode', 'br_edr_not_supported'] |>>\r\n+ when raw(), flags was wrongly built\r\n```\r\n**after**\r\n```python\r\n>>> EIR_Hdr() / EIR_Flags(flags=[\"general_disc_mode\", \"br_edr_not_supported\"])\r\n<EIR_Hdr  type=flags |<EIR_Flags  flags=general_disc_mode+br_edr_not_supported |>>\r\n```\r\n\r\n- Improve dissection speed by reducing number of calls to `hasattr`\r\n- Makes `clear_cache()` work on subpackets",
    "head_branch": "perffix2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2035 from gpotter2/perffix2\n\nFix FlagsField & dissection improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb025a88c0a76e0a51aa2",
    "number": 2033,
    "body": "New codespell update, new fixes",
    "head_branch": "plainstrfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2033 from gpotter2/plainstrfix\n\nFix typos detected by Codespell"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb025a88c0a76e0a51aa3",
    "number": 2032,
    "body": "- fixes bug discussed in https://github.com/secdev/scapy/pull/2029\r\n- fixes https://github.com/secdev/scapy/issues/2031",
    "head_branch": "plainstrfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2032 from gpotter2/plainstrfix\n\n2 minor bugs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb026a88c0a76e0a51aa4",
    "number": 2029,
    "body": "L2CAP Connection Responses were not detected as answers if the DCID field of\r\nthe Request differed from the Response's SCID field. According to the\r\nBluetooth Core specifications, only the SCID fields are identical in Request\r\nand Response.\r\n\r\nFixes #2012.\r\n",
    "head_branch": "fix-l2cap-connresp-answers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix L2CAP_ConnResp comparing incorrect CID fields\n\nL2CAP Connection Responses were not detected as answers if the DCID field of\nthe Request differed from the Response's SCID field. According to the\nBluetooth Core specifications, only the SCID fields are identical in Request\nand Response.\n\nThe corresponding unit test has been changed accordingly.\n\nFixes #2012."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb027a88c0a76e0a51aa5",
    "number": 2028,
    "body": "This PR:\r\n- removes automatic setter of monitor mode on Linux, as it resets the networking card without any warning. The utiles remain, but it should have been a user decision.\r\n- Add troubleshooting doc for monitor mode",
    "head_branch": "monitorlinux",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2028 from gpotter2/monitorlinux\n\nMonitor mode docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb028a88c0a76e0a51aa6",
    "number": 2025,
    "body": "Should fix current failing builds.",
    "head_branch": "fix-AppVeyor-tox",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2025 from secdev/fix-AppVeyor-tox\n\nFix the pip version used in tox"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb029a88c0a76e0a51aa7",
    "number": 2024,
    "body": "I added a layer for Wireguard.\r\n\r\nWireguard is very minimalistic by design, so the layer is pretty simple.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add layer for wireguard (#2024)\n\n* Add layer for wireguard\r\n\r\n* Replace guess_payload_class and overload_fields with bind_layers in wireguard\r\n\r\n* Rename wireguard fields to match official docs\r\n\r\n* Set wireguard integer fields to little endian\r\n\r\n* Import fields one by one in wireguard\r\n\r\n* Make pep8 happy by splitting import in wireguard"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb02aa88c0a76e0a51aa8",
    "number": 2023,
    "body": "- removes some `overloaded_fields` for cleaner `bind_top_down`\r\n- remove a failing `_` usage in the tests (win)\r\n- adds `close()` to `MockSocket`\r\n- skip install on codespell",
    "head_branch": "cleanupbindings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2023 from gpotter2/cleanupbindings\n\nCleanup various TCP bindings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb02ba88c0a76e0a51aa9",
    "number": 2022,
    "body": "\tPN DCP is used to setup/bootstrap Profinet IO systems\r\n\tDCP contains several so called DCP Blocks with infomration about e.g. , the name of the station, IP, and so on\r\n\tthe single blocks can be concatenated with '/' like it is usually done in scapy\r\n\twith this implementation one can craft an dissect common DCP requests and responses\r\n\tthe enums are taken from the wireshark PN DCP disscectors, so if one is familiar with wireshark, he or she should have no problems here\r\n\r\nmodified contrib/pnio\r\n\tadded code to correctly guess PN DCP packets if the frame IDs match\r\n",
    "head_branch": "profinet_dcp_layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added contrib/pnio_dcp (#2022)\n\n* added contrib/pnio_dcp\r\n\tPN DCP is used to setup/bootstrap Profinet IO systems\r\n\tDCP contains several so called DCP Blocks with infomration about e.g. , the name of the station, IP, and so on\r\n\tthe single blocks can be concatenated with '/' like it is usually done in scapy\r\n\twith this implementation one can craft an dissect common DCP requests and responses\r\n\tthe enums are taken from the wireshark PN DCP disscectors, so if one is familiar with wireshark, he or she should have no problems here\r\n\r\nmodified contrib/pnio\r\n\tadded code to correctly guess PN DCP packets if the frame IDs match\r\n\r\n* addressed the requested changes from the reviewer\r\n\r\n* added some unit tests in test/contrib/pnio_dcp.uts\r\ndetected some minor bugs -> will be fixed in next commit\r\n\r\n* fixed bugs that were found while creating the unit tests\r\n\r\n* fixed a bug that causes that the guess_dcp_block_class method did not work properly in python 2.x\r\n\r\n* exchanged bare except statement with an instance check statement\r\n\r\n* removed one comment\r\n\r\n* exchanged ord() method with orb() from scapy.compat\r\n\r\n* updated 'reserved' elements into several dictionaries without an extra dict\r\n\r\n* added contrib/pnio_dcp\r\n\tPN DCP is used to setup/bootstrap Profinet IO systems\r\n\tDCP contains several so called DCP Blocks with infomration about e.g. , the name of the station, IP, and so on\r\n\tthe single blocks can be concatenated with '/' like it is usually done in scapy\r\n\twith this implementation one can craft an dissect common DCP requests and responses\r\n\tthe enums are taken from the wireshark PN DCP disscectors, so if one is familiar with wireshark, he or she should have no problems here\r\n\r\nmodified contrib/pnio\r\n\tadded code to correctly guess PN DCP packets if the frame IDs match\r\n\r\n* addressed the requested changes from the reviewer\r\n\r\n* added some unit tests in test/contrib/pnio_dcp.uts\r\ndetected some minor bugs -> will be fixed in next commit\r\n\r\n* fixed bugs that were found while creating the unit tests\r\n\r\n* fixed a bug that causes that the guess_dcp_block_class method did not work properly in python 2.x\r\n\r\n* exchanged bare except statement with an instance check statement\r\n\r\n* removed one comment\r\n\r\n* exchanged ord() method with orb() from scapy.compat\r\n\r\n* updated 'reserved' elements into several dictionaries without an extra dict\r\n\r\n* removed obsolete TODO comments\r\n\r\n* removed trailing whitespace in line 275 of pnio_dcp.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb02ba88c0a76e0a51aaa",
    "number": 2021,
    "body": "Document/ clarify return values of RawPcapReader\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Documentation Update of RawPcapReader in utils.py (#2021)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb02ca88c0a76e0a51aab",
    "number": 2018,
    "body": "…v6 Header Chain\"\r\n\r\nAs defined in section 6 of RFC7112\r\n\r\nThis is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\n\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\n\r\n> if required - outline impacts on other parts of the library\r\n\r\nfixes #xxx (add issue number here if appropriate, else remove this line)\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add ICMPv6 Paramater Problem type 3 \"First Fragment has incomplete IP… (#2018)\n\n* Add ICMPv6 Paramater Problem type 3 \"First Fragment has incomplete IPv6 Header Chain\"\r\n\r\nAs defined in section 6 of RFC7112\r\n\r\n* Fix pep8 failures\r\n\r\n* Satisfy the style checker"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb02da88c0a76e0a51aac",
    "number": 2016,
    "body": "",
    "head_branch": "randval_cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2016 from polybassa/randval_cleanup\n\nRefactoring of randval()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb02ea88c0a76e0a51aad",
    "number": 2015,
    "body": "fixes https://github.com/secdev/scapy/issues/1995",
    "head_branch": "attbt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2015 from gpotter2/attbt\n\nImplement some more BT ATT fields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb02fa88c0a76e0a51aae",
    "number": 2011,
    "body": "This PR:\r\n- fixes https://github.com/secdev/scapy/pull/1839\r\n- adds a backup version of `/etc/ethertypes` as it's not available by default on most platforms, and hasn't been for a long time. The warning is currently hidden because of a loading issue (it is uncovered by https://github.com/secdev/scapy/pull/1996)\r\n\r\n#### Where to get /etc/ethertypes?\r\n\r\nThe file's official sources are all down, therefore we have to find an alternative. But the mirrors of the file have outdated versions.\r\n\r\nTherefore this PR uses OpenBSD's version of the file (a C header) converted to the legacy format. I've added the generation script to the `tools` folder.\r\n\r\nThis allow us to keep full compatibility with all platforms, and use the installed file when available.",
    "head_branch": "ethertypes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2011 from gpotter2/ethertypes\n\nImprove path detection & Add backup ethertypes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb030a88c0a76e0a51aaf",
    "number": 2010,
    "body": "This PR:\r\n- fixes https://github.com/secdev/scapy/issues/2008",
    "head_branch": "gtpbind",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2010 from gpotter2/gtpbind\n\nFix GTP_U_Header binds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb031a88c0a76e0a51ab0",
    "number": 2009,
    "body": "type 16 usage is a bit confusing: https://github.com/secdev/scapy/issues/1895, as it requires an array of strings.\r\n\r\nThis PR:\r\n- allows a single string to be passed and converts it to an array\r\n- adds a test",
    "head_branch": "dnstxttype",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2009 from gpotter2/dnstxttype\n\nDNSRR type 16: handle bad usage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb032a88c0a76e0a51ab1",
    "number": 2006,
    "body": "This PR:\r\n- autogenerates the doc according to Scapy's version\r\n\r\nI'll self merge this one",
    "head_branch": "docfuture",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2006 from gpotter2/docfuture\n\nMake documentation configuration future-proof"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb032a88c0a76e0a51ab2",
    "number": 2005,
    "body": "This PR:\r\n- implements a workaround for https://github.com/the-tcpdump-group/tcpdump/issues/758 as discussed in https://github.com/secdev/scapy/pull/1959",
    "head_branch": "tcpdump-y-workaround",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2005 from gpotter2/tcpdump-y-workaround\n\nWorkaround tcpdump lack of -y <integer> support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb033a88c0a76e0a51ab3",
    "number": 2002,
    "body": "This PR:\r\n- removes \"#noqa: E501\" from `scapy -h`\r\n- fixes invalid escaping in `scapy.1`\r\n- very minor bugs that happened when running the scapy.1 commands",
    "head_branch": "docf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2002 from gpotter2/docf\n\nFix scapy.1 and scapy -h"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb034a88c0a76e0a51ab4",
    "number": 1999,
    "body": "This PR:\r\n- ✔️ ~~**REQUIRES https://github.com/secdev/scapy/pull/2035**~~ \r\n- **contains an alternative fix for #1199**, that binds the `sent_time` in `__iter__` rather than requiring extra memory space to store the timestamps. This brings a **small performance boost, see below**.\r\n- **Implements `AsyncSniff`**, removes tons of duplications, and allow us to use `Sessions` everywhere\r\n    - `sniff` uses `AsyncSniff`\r\n    - `sndrcv` uses `AsyncSniff`\r\n    - `sndrcvflood` uses `sndrcv`.\r\n- use classes to handle sniffing and sndrcv: they allow greater flexibility when sharing properties than the previous method.\r\n- drops `Event` usage: not required anymore if we use a class.\r\n- removes `process` from sndrcv: no one uses it, and it's extremly messy. (My bad). We could reimplement it much easily now that we use `AsyncSniffer` within `sndrcv`\r\n- fixes *heavy* memory leaks in `scapy/automaton.py`\r\n- Add docs about `AsyncSniffer`\r\n- ❕ **Change of behavior: packets that are `None` are ignored on all platforms (previously only Windows/BPF), instead of closing the socket (and using the very unclear `TimeoutElapsed`). `EOFError` will now be the default exception to close a socket (this behavior is only used in `*PcapReader`)**\r\n- **fixed BSD bug: `conf.use_bpf` would always enable itself even if `conf.use_pcap` was True. (Missing parenthesis)**\r\n- migrates `scapy.arch.bpf.supersocket` sockets to use the `recv_raw` mechanic\r\n\r\n![](http://vmg.potter.fr/termtosvg_7ioz6drh.svg)\r\n\r\nIt's a bit harder to implement than it looks, because it must be able to get out of a frozen `select()`, on sockets that don't get any more packets.\r\n\r\n#### Perfs:\r\n\r\nUsing the benchmarking of https://github.com/secdev/scapy/pull/1259\r\n\r\n**Note: the following stats should only be read relatively speaking. The test is performed using a short packet (`Ether()/IP()`) on loopback. It isn't intended to match a real usage by any mean.**\r\n\r\n|            | secdev/master | gpotter2/perfsndrcv |\r\n|------------|---------------|---------------------|\r\n| Python 2.7 | ~ 5700/s      | ~ 5900/s            |\r\n| Python 3.7 | ~ 6800/s      | ~ 7300/s            |\r\n\r\n#### Notes:\r\n\r\n`async_select_unrequired=False` means that the `select` function is blocking, therefore a control socket (fake) should be passed. It should be set to `True` otherwise (Windows/OSX/Pcapdnet)... We could potentially rename it `is_blocking_socket=False` if it's clearer (but I only thought of that later 😄)\r\n\r\n#### Hopes for the future:\r\n\r\nThanks to the use of *sniff within the sndrcv suite, we have less code to maintain + it will allow us to enable:\r\n- `Sessions` in `sndrcv*`: match a chunked HTTP response to its answer ?\r\n- multi-thread dissection (I have great hopes for this. I plan to use [`multiprocessing.dummy`](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.dummy) and try to paralellize packet dissections in pools). **Edit: to anyone still reading this, note AsyncSniffer does NOT improve performances (or barely). Splitting the work load in multiple threads is useless. We could try to split it across processes, but that makes it much harder to implement. Eventually, the best option to optimize your code is to disable dissection of packets you don't use. We should make an util to make that easier someday**\r\n\r\n#### Related:\r\n\r\nfixes https://github.com/secdev/scapy/pull/1523\r\nfixes https://github.com/secdev/scapy/issues/1505\r\nfixes https://github.com/secdev/scapy/pull/1937",
    "head_branch": "perfsndrcv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1999 from gpotter2/perfsndrcv\n\nSendrecv overhaul: async sniffing & major cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb035a88c0a76e0a51ab5",
    "number": 1997,
    "body": "This PR:\r\n- implements `QueryServiceStatus` to speed up the booting time (way faster & more reliable than starting a shell + `sc query npcap | findstr...`)\r\n\r\nThat's implemented directly for `pcap_service_status()`. I won't implement it in `pcap_service_start/stop` as they both require Admin rights, which easier to get through a `cmd` with `runas` arguments.",
    "head_branch": "winstatus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1997 from gpotter2/winstatus\n\nImplement QueryServiceStatus to speedup boot on Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb036a88c0a76e0a51ab6",
    "number": 1996,
    "body": "This PR:\r\n- Fixes the `conf` imports that were too early (before the logger is setup) in `main.py`\r\n- Makes some `conf` values read-only.\r\n- Replaces some `conf` default values that are used as booleans by booleans rather than 0/1. Much clearer\r\n- **Implements a colored formatter for the logging (interactive mode only)**: it makes the startup much more readable\r\n![image](https://user-images.githubusercontent.com/10530980/56472760-f9153500-6462-11e9-986f-ffcf9860d5ab.png)\r\n- fixes some log levels (`warning` -> `info` for unimportant issues, and `error` -> `critical` for some major ones)\r\n- load some values on runtime in config (values from Scapy.data) to avoid duplication of the values + import loops",
    "head_branch": "improvestartup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1996 from gpotter2/improvestartup\n\nConsole & Config improvement"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb037a88c0a76e0a51ab7",
    "number": 1994,
    "body": "This PR:\r\n- fixes https://github.com/secdev/scapy/issues/1955\r\n- this PR led to the discovery of a small ARP bug when using IPv6 addresses (the routing would try to perform IPv4 routing with an IPv6 address)\r\n- merges the two `_find_field` functions together\r\n- add tests",
    "head_branch": "multipletypefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1994 from gpotter2/multipletypefix\n\nFix MultipleTypeField default values handling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb037a88c0a76e0a51ab8",
    "number": 1993,
    "body": "The previous code didn't handle interface matching properly in the\r\nfollowing cases:\r\n1. It only truly worked with single-digit suffixed interfaces, e.g.,\r\n   `igb0`. It didn't handle sorting `igb1` vs `igb11`, for instance.\r\n2. Handle logical interfaces like `epair0a` on FreeBSD.\r\n3. Handle renamed interfaces on FreeBSD, e.g., `bridge`.\r\n\r\nCases 2. and 3. caused tracebacks on FreeBSD, as the last digit wasn't a\r\nparsable integer.\r\n\r\nRequires #1992.\r\n\r\nSigned-off-by: Enji Cooper <yaneurabeya@gmail.com>",
    "head_branch": "fix-epair-and-logical-interfaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb038a88c0a76e0a51ab9",
    "number": 1992,
    "body": "### Leak fixes:\r\nFix leaks by closing file descriptors opened via `os.open` after use by\r\nusing context suites and adding necessary `finally` blocks where needed.\r\nChange `.readlines()` calls to use an iterator, per the style guide.\r\n\r\n### pylint fixes:\r\nRename `fd` to `file_desc` to match the naming scheme requested by pylint,\r\nwhile providing the reader with a better idea of what the code does.\r\n\r\n### Style fixes:\r\nThe style guide says, \"don't use os.popen()\", and in order to fix other\r\nissues (leak fixes and pylint fixes), the simplest way to resolve the\r\nissue was to convert the code to use `subprocess.Popen()` and its\r\ncorresponding methods for interacting with the data.\r\n\r\nSigned-off-by: Enji Cooper <yaneurabeya@gmail.com>",
    "head_branch": "fix-pylint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix pylint warnings, leaks, and style issues (#1992)\n\n* Fix pylint warnings, leaks, and style issues\r\n\r\nLeak fixes:\r\nFix leaks by closing file descriptors opened via `os.open` after use by\r\nadding a necessary `finally` block where needed.\r\n\r\npylint fixes:\r\nRename `fd` to `file_desc` to match the naming scheme requested by pylint,\r\nwhile providing the reader with a better idea of what the code does.\r\n\r\nStyle fixes:\r\nThe style guide says, \"don't use os.popen()\", and in order to fix other\r\nissues (leak fixes and pylint fixes), the simplest way to resolve the\r\nissue was to convert the code to use `subprocess.Popen()` and its\r\ncorresponding methods for interacting with the data.\r\n\r\nSigned-off-by: Enji Cooper <yaneurabeya@gmail.com>\r\n\r\n* Remove unecessary changes to preserve history"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb039a88c0a76e0a51aba",
    "number": 1991,
    "body": "It was broken when an interface name did not end by a digit.\r\n\r\nIt was also incorrect when an interface name ended by more than one digit.\r\n\r\nFixes #1990 reported by @lwhsu.",
    "head_branch": "fix-1990",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1991 from p-l-/fix-1990\n\nBPF: fix get_working_ifaces()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb03aa88c0a76e0a51abb",
    "number": 1990,
    "body": "Remove the step to convert to integer as it doesn't affect the result.",
    "head_branch": "non-digit-ifname-suffix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb03ba88c0a76e0a51abc",
    "number": 1989,
    "body": "This PR:\r\n- cleans up Scapy's installation doc:\r\n    - Removes OpenBSD-specific dependencies page: it is outdated, since they can all be installed with pip nowadays.\r\n    - Merges very similar platform-specific installation pages\r\n    - Fixes some grammar odities (e.g. \"Optional software for special features\" -> \"Optional dependencies\")\r\n    - Add documentation about Scapy's bundles (`basic`, `complete`), available since 2.4.3. (for now they are specified with `--pre`, but that will be updated once 2.4.3 comes out)\r\n    - Fix missing quotes & a few weird spacing that would slightly mess up the indentation\r\n- Since Pip > 9, it will automatically handle the versioning of dependencies. Therefore, as advised by https://github.com/pypa/setuptools/pull/1743#issuecomment-482994157, let Pip handle this.\r\n- mark Scapy as not `zip_safe`. This slightly speeds up the install, as pip/setuptools don't have to guess it\r\n- makes the Code Quality test run on Python 3.6, to remove the Python 2.7 deprecation warnings",
    "head_branch": "verboselogs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve Scapy's installation doc (#1989)\n\n* Let pip handle the dependencies' versioning\r\n\r\n* Refresh Scapy's installation page\r\n\r\n* Rather use Python 3.7 for the code-quality test\r\n\r\n* VPython-Jupyter typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb03ca88c0a76e0a51abd",
    "number": 1988,
    "body": "That will make the first Travis test much more readable.\r\n\r\nNotes:\r\n- `set` was moved to `install.sh`, as its logs are not expanded by default (there is a drop-down to expand it)\r\n- `-q` in Sphinx reduces verbosity (errors will still be shown)\r\n- `--quiet` to `python setup.py sdist` will reduce the verbosity. We don't really care about what it said, as we only focus on what `twine` will report afterwards\r\n\r\nThis allowed me to notice & fix the following:\r\n- `recursive-include bin *` remains even after the `setuptools` migration",
    "head_branch": "verboselogs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1988 from gpotter2/verboselogs\n\nDecrease verbosity of the Flake8/Twine/Sphinx docs for readibility"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb03ca88c0a76e0a51abe",
    "number": 1987,
    "body": "In response to #1971 and #1973 \r\n\r\n* Fragmented EAP-Messages are now correctly handled by using \"length_from\" property from PacketLenField class\r\n\r\n* When digesting Radius packets with message-authenticator attribute already there, compute_message_authenticator now forces this field to be zero filled. Method `prepare_packed_data` is updated to receive one more argument `clear_message_authenticator` which ensure this check in the attribute loop.\r\n\r\n* Regression test for `compute_message_authenticator` was updated for this changes as the test was being compared to an incorrect expected result. A more precise test could be achieved if we knew the shared secret of this radius server, so the output of this function would be the exact same value from the message-authenticator attribute in the `radius_packet`.\r\n\r\n`./run_tests` was runned to verify if nothing more was affected by this changes.\r\n\r\nPlease, feel free to edit anything as Quality Review has failed due to the use of `type()` function",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1987 from Matheus-Garbelini/master\n\nRadius EAP-Message fix + message_authentication forced zero filling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb03da88c0a76e0a51abf",
    "number": 1986,
    "body": "Due to invalid handling of TLS record length, fields (MSG and MAC) were\r\nincorrectly interpreted in packets encrypted with NULL Cipher.\r\n\r\nfixes #1976",
    "head_branch": "fix/tls/null_cipher_dissect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1986 from wasilukm/fix/tls/null_cipher_dissect\n\nFix dissection of TLS communication with NULL Cipher."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb03ea88c0a76e0a51ac0",
    "number": 1984,
    "body": "This PR:\r\n- adds `info` to all `Dot11Elt` tags, so that we can introduce new tags without breaking existing implementations that would parse `info` manually (as a lot do today)\r\n- fix `Dot11EltCountry` length handling: fixes https://github.com/secdev/scapy/issues/1981",
    "head_branch": "dot11backwd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1984 from gpotter2/dot11backwd\n\nImprove Dot11 backward compatibility"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb03fa88c0a76e0a51ac1",
    "number": 1983,
    "body": "Rationale: Scapy is pretty bad at keeping things backward compatible. Fields are renamed often for consistency, therefore breaking older stuff. Moreover, because the release schedule is so slow, people aren't warned of changes.\r\n\r\nThis PR is an attempt to improve this by:\r\n- implementing `alias_fields` that redirects to another field with an optional`DeprecationWarning`. We already have use cases for that: https://github.com/secdev/scapy/issues/1979 https://github.com/secdev/scapy/pull/1855. This would allow to migrate old scapy fields to newer names, without breaking too much stuff too quickly\r\n- fixes https://github.com/secdev/scapy/issues/1979\r\n\r\nNot sure how this affects performance. Adding stuff to `get_field` & co never is great",
    "head_branch": "aliasbranch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1983 from gpotter2/aliasbranch\n\nBackward compatibility: Add Deprecated fields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb040a88c0a76e0a51ac2",
    "number": 1980,
    "body": "Just adding an extra 802.11 element ID.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding HTInfo dot11 id"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb041a88c0a76e0a51ac3",
    "number": 1977,
    "body": "Both the example in the docs as well as the implementation in layers/tftp were missing the byte-string declaration.",
    "head_branch": "tftp-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make TFTP_read Py3 compatible (#1977)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb041a88c0a76e0a51ac4",
    "number": 1974,
    "body": "…ython-can\r\n",
    "head_branch": "python-can_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add unit tests with different object than CAN as send parameter for python-can (#1974)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb042a88c0a76e0a51ac5",
    "number": 1970,
    "body": "- fixes https://github.com/secdev/scapy/issues/1969",
    "head_branch": "fcsfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1970 from gpotter2/fcsfix\n\nFix FCSField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb043a88c0a76e0a51ac6",
    "number": 1968,
    "body": "This PR:\r\n- cleanup DNSStrField calls by moving the encoding function to `dns_encode`\r\n- cleanup RDataField to be split into several fields, using MultipleTypeField\r\n- remove fields that have obvious replacements (TimeField -> UTCTimeField, RDLen -> FieldLenField+i2len)\r\n- make UTscapy work with both lower and upper case keywords (there are `DNS` and `dns` tags, that were annoying)\r\n- make UTscapy import `Bunch` and `retry_test` on all test campaigns => remove the imports in the tests\r\n\r\n*Edit*:\r\n**The Unicode/UTF8 fix was removed from the PR, awaiting for a proper fix to be found**",
    "head_branch": "dnsfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1968 from gpotter2/dnsfix\n\nDNS cleanup & various cleanups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb044a88c0a76e0a51ac7",
    "number": 1965,
    "body": "I was trying to fix https://github.com/secdev/scapy/issues/1963, and bumped into the fact that with some very small tweaks, it could support IPfix.\r\nThis PR:\r\n- adds support for IPFix (NetflowV10)\r\n- adds the full list as keywords (NOTE: the type of fields for keywords not in the RFC are not defined by default (they are hundreds). Therefore, all keywords whose ID are greater than 79 (RFC) will be parsed as Bytes. We can probably accept PRs on those)\r\n- adds support for a few extra fields\r\n- reduces the size of the NetflowV9 pcap by removing unused packets\r\n- adds IPFix tests & pcap\r\n\r\nIt seems that many people use scapy to handle Netflow stuff. That'll be useful to them\r\n\r\nfixes https://github.com/secdev/scapy/issues/1963",
    "head_branch": "netflowbig",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "IPFix support (& NetflowV9 improvements) (#1965)\n\n* Add all wiredhark's Netflow entry list\r\n\r\n* NetflowV10 (IPFix) support\r\n\r\n* Add crashed_on support for rdpcap()\r\n\r\n* Minor fixes (names, doc, tests)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb045a88c0a76e0a51ac8",
    "number": 1964,
    "body": "At the moment the project BLESuite (http://github.com/nccgroup/BLESuite) uses an old forked version of scapy.\r\nThis PR brings the few needed modifications back to the main scapy repository to use the tools without having 2 competing versions of scapy.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix PEP8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb046a88c0a76e0a51ac9",
    "number": 1961,
    "body": "**Never merge this**\r\n\r\nTrying to help https://github.com/mkevenaar/chocolatey-packages/issues/16 to get the install debugged. I don't want to setup AppVeyor on my account (lazy) so I'll try it in here",
    "head_branch": "helpdebug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb047a88c0a76e0a51aca",
    "number": 1960,
    "body": "PR #1706 rewritten.",
    "head_branch": "spbm_bind_layers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Missing bind_layers()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb047a88c0a76e0a51acb",
    "number": 1959,
    "body": "New:\r\n\r\n* `WiresharkSink`, a PipeTools Sink for streaming packets to Wireshark\r\n* `utils.get_temp_dir`: creates a temporary directory\r\n\r\nExtensions:\r\n\r\n* `tcpdump()`: Adds `use_tempfile`, to explicitly control use of a tempfile for packets.\r\n* `tcpdump()`: Adds `read_stdin_opts` parameter, which allows callers to control the options used for reading packets over `stdin` (previously hard-coded to `-r -`).  This auto-detects `wireshark` to use `-ki -` instead.\r\n* `tcpdump()`, `WrpcapSink`: Adds `linktype` parameter.\r\n* `get_temp_file()`: Adds `fd` parameter, which allows a temporary file to be used without closing and re-opening it.\r\n* Expands `wireshark()`, `Source` and `Pipe` documentation.\r\n* `tdecode()`: Add `args` parameter (defaults to `-V`, as before), pass kwargs to `tcpdump()`.\r\n* `QueueSink.recv`: add `block` and `timeout` parameters.\r\n\r\nFixes:\r\n\r\n* `tcpdump()` now only uses a temporary file by default for calling tcpdump on OSX (to work around Apple's broken version of `tcpdump`). `stdin` is now used with other tools which are not impacted by this bug (eg: `tshark`).\r\n* `wireshark()` now uses a pipe rather than a temporary file. Wireshark itself has options to save this file to disk if desired.\r\n* `SniffSource` now only opens a socket on calling `start`.\r\n* `WrpcapSink` only opens a `PcapWriter` on calling `start`.\r\n* `RawPcapWriter` no longer writes a header on `write` calls with no packets specified.\r\n* `RawPcapWriter` writes a header on `close` if no header has been written.\r\n* `QueueSink.recv()` no longer busy-loops.\r\n* `PcapWriter`, `wrpcap()`: support packets as bytes\r\n* PEP-8 fixups and docstring revisions to touched methods.\r\n\r\nDocumentation fixes:\r\n\r\n* Documentation wordsmithing for `wireshark()` and `Pipes`\r\n* Use `py:function` / `py:class` for Sinks and `wireshark()` to allow easy cross-referencing, and expand this documentation.\r\n* `wireshark()`: Remove references to `google.com`, and use RFC 5737 IP addresses instead\r\n* `wireshark()`: Set a source IP address (to avoid looking up host's IP address).\r\n* `wireshark()`: Remove `Ether` layer, as Wireshark works fine with `DLT_RAW` for `IP` packets, which removes the need to lookup MAC addresses\r\n* Add `manpages_url` to configuration, to support `:manpage:` directives. This is pointing at Debian's server, which should have a good spread of versions of tools, and Debian generally adds manpages for tools that don't have them.\r\n\r\nTest fixes:\r\n\r\n* Removes `os.remove(\"test.png\")` (which seems to be unused).\r\n* Uses a temporary directory for some pipetool tests.\r\n\r\nOther changes:\r\n\r\n* `{Raw,}PcapWriter._write_packet`: Remove unused support for `packet` as tuple, as `write` will always unroll iterators for us (and do it better).\r\n* `{Raw,}PcapWriter._write_packet`: Always set the `usec` parameter if `sec` was unset.\r\n* `{Raw,}PcapWriter._write_packet`: Set `usec=0` if `sec` was set, but `usec` was unset (instead of using the current time's usec value\r\n",
    "head_branch": "wireshark-pipe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adds Wireshark pipes support, cleanup OSX tcpdump handling. (#1959)\n\n* Adds Wireshark pipes support, cleanup OSX tcpdump handling.\r\n\r\n* SniffSource now only opens a socket on calling `start`.\r\n* WrpcapSink only opens a PcapWriter on calling `start`.\r\n* Adds WiresharkSink for streaming packets to Wireshark through a pipe.\r\n* Adds `fd` parameter to `utils.get_temp_file`, which allows a temporary\r\n  file to be used without closing and re-opening it.\r\n* Adds `utils.get_temp_dir` (used for tests)\r\n* Adds `use_tempfile` parameter to `utils.tcpdump`, which causes it to\r\n  use a temporary file to store packets.\r\n* `utils.tcpdump` now only uses a temporary file by default for calling\r\n  tcpdump on OSX (to work around Apple's broken version of tcpdump).\r\n  stdin is now used with other tools which are not impacted by this bug\r\n  (eg: tshark).\r\n* Adds `read_stdin_opts` parameter to `utils.tcpdump`, which allows\r\n  callers to control the options used for reading packets over stdin\r\n  (previously hard-coded to `-r -`).\r\n* `utils.wireshark` now uses a pipe rather than a temporary file.\r\n  Wireshark itself has options to save this file to disk if desired.\r\n\r\nAlso cleans up the tests a little:\r\n\r\n* Removes `os.remove(\"test.png\")` (which seems to be unused).\r\n* Uses a temporary directory for some pipetool tests.\r\n\r\nIncludes fixup:\r\n\r\n* spelling\r\n\r\n* Documentation for WiresharkSink, Pipetools sinks and wireshark():\r\n\r\n* Enable `manpages_url`, so we can use manpage links.\r\n\r\n* Pipetools: Revise Sinks section to use `py:class` style documentation.\r\n  This makes cross-references to specific sinks much easier.\r\n\r\n* Add documentation for `WiresharkSink`.\r\n\r\n* Pipetools: Revise Link object section with some word-smithing.\r\n\r\n* Usage/wireshark:\r\n\r\n  * improve wordsmithing\r\n  * remove hard coded references to `google.com` (which trigger DNS\r\n    lookups), and use an RFC 5737 netmask instead.\r\n  * set a source IP address (otherwise, this gets the host's IP address).\r\n  * remove `Ether` layer, as Wireshark supports `DLT_RAW` (which triggers\r\n    getting the host's MAC address).\r\n  * elaborate on mixed `linktype` issues.\r\n\r\n* Pipetool: fixups:\r\n\r\n* `QueueSink.recv`: add `block` and `timeout` parameters\r\n* `WrpcapSink`, `WiresharkSink`: add `linktype` parameter\r\n* `WiresharkSink`: add `args` parameter\r\n* tests: sleep longer to work-around race conditions on Windows\r\n\r\n* utils: many fixups\r\n\r\n* `{Raw,}PcapWriter._write_packet`:\r\n\r\n  * Remove unused support for `packet` as tuple, as `write` will always\r\n    unroll iterators for us (and do it better).\r\n  * Always set the `usec` parameter if `sec` was unset.\r\n  * Set `usec=0` if `sec` was set, but `usec` was unset (instead of using\r\n    the current time's usec value\r\n  * PEP-8 fixup, add docstring.\r\n  * Only write the header if there is a packet\r\n\r\n* `PcapWriter._write_packet`: support packet as bytes\r\n\r\n* `RawPcapWriter.close`: write the file header here if not already written\r\n\r\n* `tcpdump()`:\r\n\r\n  * Add `linktype` parameter, like `wrpcap(linktype=...)`\r\n  * Add `wait` parameter, which controls whether a program should be run in\r\n    the background. Defaults to `True` (run in foreground).\r\n  * Throw an error if `prog` is not a string.\r\n  * Copy `read_stdin_opts` (for thread safety).\r\n\r\n* `tdecode()`: Add `args` parameter (defaults to `-V`, as before), pass\r\n  other `tcpdump()` kwargs.\r\n\r\n* `wireshark()`: Run in the background by default, pass other `tcpdump()`\r\n  kwargs.\r\n\r\n* Add tests that hit `wireshark`, `tdecode`, `tcpdump` with new parameters,\r\n  and try to pass packets as bytes."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb048a88c0a76e0a51acc",
    "number": 1957,
    "body": "~**Note:** This depends on changes in #1893 (specifically, `LowEnergyBeaconHelper`).~\r\n**Update:** This now includes `LowEnergyBeacon` changes for `eddystone` (also in #1893), but no longer touches iBeacon stuff, so can be merged independently!\r\n\r\n* Add support for \"magic\" `EIR_Manufacturer_Specific_Data` payloads (used by [AltBeacon](https://github.com/AltBeacon/spec) and [GeoBeacon](https://github.com/Tecno-World/GeoBeacon))\r\n* Adds support for [AltBeacon](https://github.com/AltBeacon/spec)\r\n\r\nThis _slightly_ deviates from [the specification](https://github.com/AltBeacon/spec):\r\n\r\n* _This code and the [Android library](https://github.com/AltBeacon/android-beacon-library/blob/ee2b37ccd0f4563b3d8c2b171456704546a730cd/lib/src/test/java/org/altbeacon/beacon/AltBeaconParserTest.java#L84)_ treat the first 16 bytes of the data payload as a big-endian UUID.\r\n* _The specification_ indicates that \"the first 16+ bytes of the beacon identifier should be unique to the advertiser's organizational unit\", but does not mandate a particular usage.\r\n\r\nI've added tests based on the Android library, which seems to work with Beacon Locator.  However, that detects it as iBeacon, but [I believe this is a bug in Beacon Locator](https://github.com/vitas/beaconloc/issues/32).",
    "head_branch": "altbeacon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "altbeacon: New layer!\n\n(includes fixups)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb049a88c0a76e0a51acd",
    "number": 1956,
    "body": "- This PR followed tips provided by Chocolatey\r\n\r\nSee https://github.com/mkevenaar/chocolatey-packages/issues/16",
    "head_branch": "chocowireshark",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use chocolatey dark magic to fix Wireshark install"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb04aa88c0a76e0a51ace",
    "number": 1954,
    "body": "- Fixes the order of the BitField fields in MCS option\r\n- fix duplicated `bandwitdth` field shared between MCS and VHT, by renaming them\r\n\r\nfixes https://github.com/secdev/scapy/issues/1933",
    "head_branch": "dot11fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix duplicated names in RadioTap (#1954)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb04ba88c0a76e0a51acf",
    "number": 1953,
    "body": "Reverts secdev/scapy#1932",
    "head_branch": "revert-1932-svgpdf",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"Render SVGs in the PDF doc\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb04ca88c0a76e0a51ad0",
    "number": 1951,
    "body": "",
    "head_branch": "tmp-patch-x509",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1951 from secdev/tmp-patch-x509\n\nRemove duplicated import & comment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb04ca88c0a76e0a51ad1",
    "number": 1950,
    "body": "Fix #1665.\r\n\r\nIt is a missing check in Python3.",
    "head_branch": "Issue_#1665",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1950 from guedou/Issue_#1665\n\nExpect bytes in TCPOptions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb04da88c0a76e0a51ad2",
    "number": 1949,
    "body": "This fixes the issue #1948\r\n\r\nThis is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [x] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [x] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n",
    "head_branch": "1948_missing_import_in_x509",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1949 from fsch2/1948_missing_import_in_x509\n\nAdd missing import of ASN.1 conf to x509 module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb04ea88c0a76e0a51ad3",
    "number": 1947,
    "body": "fixes https://github.com/secdev/scapy/issues/1944",
    "head_branch": "npcappartial",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1947 from gpotter2/npcappartial\n\nSupport partial installations of Npcap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb04fa88c0a76e0a51ad4",
    "number": 1946,
    "body": "This PR fixes #1662.\r\n\r\nOnce again writing a test was more time consuming than fixing the issue =)",
    "head_branch": "Issue_#1662",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1946 from guedou/Issue_#1662\n\nCorrectly display GeneralizedTime in X.509 certificates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb050a88c0a76e0a51ad5",
    "number": 1945,
    "body": "This PR improves several options in DHCPv6 and adds some new.\r\n\r\nAdded options:\r\n- DHCP6OptPanaAuthAgent\r\n- DHCP6OptNewPOSIXTimeZone\r\n- DHCP6OptNewTZDBTimeZone\r\n- DHCP6OptLQClientLink\r\n- DHCP6OptBootFileUrl\r\n- DHCP6OptClientArchType\r\n- DHCP6OptClientNetworkInterId\r\n- DHCP6OptERPDomain\r\n- DHCP6OptRelaySuppliedOpt\r\n\r\nImproved DHCP6OptIA_NA, DHCP6OptIA_TA, DHCP6OptIA_PD to convey correctly different types of options (not only DHCP6OptIAPrefix as it was before).\r\n\r\nFixed parsing and detecting suboptions using guess_payload_class_and_make_instance.\r\nPreviously there was inserted in-between empty Generic Message.",
    "head_branch": "dhcp6-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added support for more DHCPv6 options (#1945)\n\nadded support for more DHCPv6 options"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb050a88c0a76e0a51ad6",
    "number": 1940,
    "body": "New EtherNet/IP layer, it needs #1938 first.\r\nThank you @gpotter2 for #1919",
    "head_branch": "new-enip-layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "new layer enip (#1940)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb051a88c0a76e0a51ad7",
    "number": 1939,
    "body": "Fix for #1642.",
    "head_branch": "pcapdnet_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "PCAPDNET tests re-enabled on OSX (#1939)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb052a88c0a76e0a51ad8",
    "number": 1938,
    "body": "Added a new field for variable length of bytes in little-endian and hexadecimal (#1936). I'm using this in a new layer that I'm working on\r\n",
    "head_branch": "newField",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1938 from jdiog0/newField\n\nNew LEStrField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb053a88c0a76e0a51ad9",
    "number": 1937,
    "body": "Currently, in sndrcv, when an error happens during the send operation it gets logged and execution continues. However, since timessent is not populated, a KeyError will be raised at the line `p.sent_time = timessent[i]`. I added a check to verify that the key is present in the timessent dict.\r\nThis PR also fixes ISOTPSoftSocket.sr1 not returning after the specified timeout, and I added 2 unit tests for that.\r\n",
    "head_branch": "fix-isotp-sr1-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb054a88c0a76e0a51ada",
    "number": 1935,
    "body": "Fixes #1891.\r\nFixes #1518.",
    "head_branch": "fix-srcmac",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1935 from p-l-/fix-srcmac\n\nFix SourceMACField default values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb055a88c0a76e0a51adb",
    "number": 1934,
    "body": "This PR fixes issues discovered while investigating #1929.",
    "head_branch": "check_tcpdump_calls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1934 from guedou/check_tcpdump_calls\n\nCheck if tcpdump binary exists"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb055a88c0a76e0a51adc",
    "number": 1932,
    "body": "Not sure how this will work :/\r\nIt *should* fix the SVGs render in the PDFs",
    "head_branch": "svgpdf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1932 from gpotter2/svgpdf\n\nRender SVGs in the PDF doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb056a88c0a76e0a51add",
    "number": 1930,
    "body": "- fixes https://github.com/secdev/scapy/issues/1639\r\n- fixes https://github.com/secdev/scapy/issues/1901",
    "head_branch": "berbytes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1930 from gpotter2/berbytes\n\nFix SNMP infinite recursion & type detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb057a88c0a76e0a51ade",
    "number": 1928,
    "body": "Just fix for issue 1920 :) \r\n\r\nfixes #1920 ",
    "head_branch": "1920_igmp_ttl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix ttl setting in IGMP.igmpize()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb058a88c0a76e0a51adf",
    "number": 1927,
    "body": "This PR does several things:\r\n- allows tests to be run without any network connectivity\r\n- removes as useless test\r\n- flags more tests using `tcpdump`\r\n- documents using `tox` on a fresh Linux installation (that fixes #1887)",
    "head_branch": "offline_unit_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1927 from guedou/offline_unit_tests\n\nUnit tests fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb059a88c0a76e0a51ae0",
    "number": 1926,
    "body": "A few places where minor grammatical errors caught my attention and detracted from the content.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert one change and add what AS is.\n\nAS (Autonomous System)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb05aa88c0a76e0a51ae1",
    "number": 1925,
    "body": "This PR implements:\r\n- **HTTP 1.0 layer**. Based on `scapy_http` but:\r\n    - added sessions support: follow chunks/streams of TCP HTTP (Content_Length and Chunked)\r\n    - added decompression & re-compression support (3 default methods implemented: gzip, lzip, zlib)\r\n    - fixes build: quite a few things were broken\r\n    - add support for all HTTP fields\r\n    - fixed for PEP8\r\n    - improved Python 3 support, general bytes handling (especially with regexes/split)\r\n    - Removed deprecated fields (Let's not import already-deprecated stuff)\r\n    - added tests: test chunk reassembly, content_length threshold, TCPSession, gzip decompression (most common)\r\n- **TCPsessions**. Used to sort TCP packets via their seq/ack. Used to decode HTTP flows. Could be extended to other TCP protocols\r\n- **`TCP_client` & Automaton**: fixes for Automaton: support `_ATMT_Supersocket` on Windows. Also update it to h'share the `StringBuffer` of the `TCPSession`, so that it can also handle TCP fragmentation.\r\n- **documentation** about HTTP/TCP_client\r\n- add other specific tests (gzip compact utiles...)\r\n\r\nNote: because of Python 2-3 compatibility, several utils were needed:\r\n- `gzip_decompress/gzip_compress`: `gzip.decompress/gzip.compress` isn't available on Python 2.7.\r\n\r\n~~**Important note: `sr()` is NOT supported YET, because it would require to change `sndrcv()` to handle Sessions. This is done in https://github.com/secdev/scapy/pull/1999.** (The 2 PRs must be merged before it may be implemented)~~ (done)\r\n\r\nThis code was able to decode a JPEG image sent through several HTTP chunks, despite TCP re-transmission. You can check it out by yourself by un-commenting a line in the chunked-image test\r\n\r\n#### **Rationale**\r\n\r\n- Why `scapy_http` ?\r\n\r\nIt has been around [for quite some time](https://github.com/invernizzi/scapy-http/commit/d716bdff62f0c46253319487ae9e31bb79b5f28b). It allows users/projects that were using it to migrate seamlessly, to use the new features.\r\nI do not want to change the API, and it allowed to start on an existing basis.\r\n\r\n- What's next ?\r\n\r\nThis PR ***should*** be able to fully replace [`scapy_http`](https://github.com/invernizzi/scapy-http) which development [has been paused (stopped?)](https://github.com/invernizzi/scapy-http/commit/1f9bde87e4e47f5fb65e2a341f4388b3fe39a239). That would allow to deprecate `scapy_http` and continue any further development here.\r\nI've asked the maintainers if they want to merge the projects, therefore release a last `scapy_http` version with a warning deprecating it. I doubt they want to invest more time into maintaining it 😄 \r\n\r\n**See https://github.com/invernizzi/scapy-http/issues/46**",
    "head_branch": "sessions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement HTTP 1.0 & fix TCP_client\n\n* Implement HTTP 1.0 / Fix TCP_client & Automaton\r\n\r\nThis implementation is based on scapy_http, but were added:\r\n- compression/decompression support\r\n- integration with sessions: decode flows (chunks)\r\n- update for scapy 2.4.3+\r\n\r\n* Use StringBuffer in TCP_client\r\n\r\n* Use super() if possible\r\n\r\nCo-Authored-By: Pierre Lalet <pierre@droids-corp.org>\r\n\r\n* Fix a noqa: 501\r\n\r\nCo-Authored-By: Pierre Lalet <pierre@droids-corp.org>\r\n\r\n* Apply suggestions\r\n\r\n* PEP8 fixes\r\n\r\n* Use TCPSession in TCP_client\r\n\r\n* Better TCP_client automaton test\r\n\r\n* Fix TCP test\r\n\r\n* Add HTTP doc\r\n\r\n* Use sr1() + add http_request()\r\n\r\n* Apply guedou's dark magic to the tests\r\n\r\n* Fix ips\r\n\r\n* Add docstring\r\n\r\n* Tiny improvement - tested over bing.com\r\n\r\n* Cleanup building HTTP (last commit)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb05ba88c0a76e0a51ae2",
    "number": 1924,
    "body": "**Description:**\r\n\r\nThis PR adds a new type of field that I add to implement to dissect a custom protocol. It is not very often seen in protocols but as it is generic, maybe it worth including in the main scapy distribution.\r\n\r\nUp to you to decide.\r\n\r\n**Details:**\r\n\r\nThis type of field has a variable number of bytes. Size is not taken from another field. Each byte is defined as follows:\r\n- The 7 MSB bits are data\r\n- The LSB is an extension bit\r\n  - 0 means it is last byte of the field (\"stopping bit\")\r\n  - 1 means there is another byte after this one (\"forwarding bit\")\r\n\r\nTo get the actual data, it is necessary to hop the binary data from byte to byte until LSB is 0.\r\n\r\n**Tests:**\r\n\r\nI tested with success both on Python 2 and Python 3. I did not write unit tests as to be fair I don't really know how to do it. However, I am not sure that it is very important as the field does not rely on anything special from Scapy.\r\n\r\n*Note:*\r\n*I noticed while writing this PR description that my VSCode automatically removed the trailing spaces from the modified files. It is always better for the code itself but it clutters a little the diff. Sorry for that.*",
    "head_branch": "LSBExtendedField",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement BitExtendedField with configurable extension bit position (#1924)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb05ba88c0a76e0a51ae3",
    "number": 1923,
    "body": "* It is currently written in python3, but I will definetely rewrite it in six\r\n* It's not much, because I don't want to find out that something went wrong in the beginning after writing many lines of code\r\n* There are some comments for the reviewer. They will be definetely rewritten in the later versions of this file",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb05ca88c0a76e0a51ae4",
    "number": 1922,
    "body": "This PR:\r\n- fixes https://github.com/secdev/scapy/issues/1916 (in the animation below, you'll notice that `>>> ` changes color)\r\n- adds documentation regarding `conf.color_theme`\r\n- adds demo animation in the doc:\r\n\r\n![conf.color_theme demo](https://raw.githubusercontent.com/secdev/scapy/bfa728e9fc3117cc2331f4c1675d1a544e179554/doc/scapy/graphics/animations/animation-scapy-themes-demo.gif)",
    "head_branch": "ipyfix2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1922 from gpotter2/ipyfix2\n\nHook up to IPython to handle shell colors + Fix [HTML/Latex/No]Theme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb05da88c0a76e0a51ae5",
    "number": 1921,
    "body": "- Do not fail when closing a socket that couldnt be created\r\n- cleanup",
    "head_branch": "cleanupclose",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1921 from gpotter2/cleanupclose\n\nCleanup socket closure"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb05ea88c0a76e0a51ae6",
    "number": 1917,
    "body": "It's necessary to show an AP is authorized by 802.1X or PSK, outputs like this:\r\n\r\n```\r\nt = sniff(iface=\"wlan0\",  filter=\"subtype probe-resp or subtype beacon\", timeout=0.5)\r\nfor i in range(len(t)):\r\n  p = t[i]\r\n  if p.subtype == 8: #Beacon\r\n    print( p[Dot11Beacon].network_stats()[\"crypto\"])\r\n  if p.subtype == 5: #ProbeResp\r\n    print( p[Dot11ProbeResp].network_stats()[\"crypto\"])\r\n\r\n{'WPA2/PSK'}\r\n{'WPA2/PSK'}\r\n{'WEP'}\r\n{'OPN'}\r\n{'WPA2/802.1X'}\r\n{'OPN'}\r\n{'WPA2/802.1X'}\r\n{'OPN'}\r\n{'WPA2/PSK'}\r\n{'WEP'}\r\n{'WPA/PSK', 'WPA2/PSK'}\r\n{'WPA2/802.1X'}\r\n{'WPA2/PSK'}\r\n{'WPA2/802.1X'}\r\n{'WPA2/PSK'}\r\n{'WPA2/PSK'}\r\n{'WPA/PSK', 'WPA2/PSK'}\r\n{'WPA/PSK', 'WPA2/PSK'}\r\n{'WPA2/PSK'}\r\n{'WPA2/802.1X'}\r\n```",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1917 from qingxp9/master\n\nAdd auth method output(PSK or 802.1X) in network_stats() crypto"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb05fa88c0a76e0a51ae7",
    "number": 1915,
    "body": "This PR replaces https://github.com/secdev/scapy/pull/1896\r\n\r\nThis PR contains the changes of https://github.com/secdev/scapy/pull/1896 with the renames applied.\r\n\r\nThe renames improve the simplicity of the OBD implementation by keeping the names consistent. See especially this file: https://github.com/akorb/scapy/commit/4715ffd55c72e4d92f025c62734a5ce4c7828a29#diff-e8dcc447e0c0aa4a9780437f0fd61ef0\r\n\r\n@polybassa ",
    "head_branch": "obd-renames",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OBD: Added tests for new FieldLenFields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb060a88c0a76e0a51ae8",
    "number": 1913,
    "body": "This pull requests adds Packet conversion semantics:\r\n\r\n* `Packet.convert_to` (method) allows a Packet to declare how it can be   converted into another Packet type.\r\n* `Packet.convert_packet` (classmethod) allows a Packet to declare how it convert other Packet instances into itself.\r\n* Both methods will fall back to ~getting child layers, or~ using the other method.  In the absence of available conversions, it ~returns `None`~ raises `TypeError`.\r\n* `ConvertPipe` uses these conversion semantics with Pipes.\r\n* Add `PacketList.convert_to` (which calls `Packet.convert_to`) and `PacketList.getlayer` (which calls `Packet.getlayer`).\r\n\r\nAll of these conversions are **not** guaranteed to be lossless, nor are they guaranteed to be bidirectional.  It is intended to convert between two functionally similar packet types.\r\n\r\nThis is used by the Nordic BLE protocol handling branch I'm working on (nrf5sniff), to convert between the protocol used by the device and the protocol declared by `DLT_NORDIC_BLE` (and a couple of other variants). As that's a much larger patch, I've sharded it up to make it easier to review.\r\n\r\nAdds unit tests for all of this, which also serve as examples as to how this could be used.",
    "head_branch": "packet-convert",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adds Packet conversion semantics\n\n* Adds Packet conversion semantics.\r\n\r\n* `Packet.convert_to` (method) allows a Packet to declare how it can be\r\n  converted into another Packet type.\r\n\r\n* `Packet.convert_packet` (classmethod) allows a Packet to declare how it\r\n  convert other Packet instances into itself.\r\n\r\n* `ConvertPipe` uses these conversion semantics with Pipes.\r\n\r\nAdds unit tests for all of this.\r\n\r\n(includes 3 fixups)\r\n\r\n* packet-convert: throw exception on unsupported conversion\r\n\r\n* Packet.convert*: Improve error to show types rather than content\r\n\r\n* Packet.convert_from: Don't allow implicit conversions with a child layer.\r\n\r\n* Add PacketList.convert_to and PacketList.getlayer\r\n\r\n* Fixup lint warnings, make type errors show tidier class names"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb060a88c0a76e0a51ae9",
    "number": 1910,
    "body": "This adds Wireshark's default installation path on OSX to the source path for `MANUFDB`.\r\n\r\nThis allows regression tests to pass on OSX 10.14.2 on Python 3.7, when Wireshark is installed.",
    "head_branch": "osx-manuf-db",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1910 from micolous/osx-manuf-db\n\nAdd default path to Wireshark on OSX"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb061a88c0a76e0a51aea",
    "number": 1909,
    "body": "Some more automotive related documentation",
    "head_branch": "automotive_documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Automotive documentation (#1909)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb062a88c0a76e0a51aeb",
    "number": 1908,
    "body": "PPI cleanups:\r\n\r\n* _API change:_ PPI types are now stacked with `PPI_Hdr`, which works similarly to `EIR_Hdr`. Refactored existing uses (`ppi_cace`, `ppi_geotag` and `bt4LE`) and updated tests.\r\n* _API change:_ `PPI` field `PPIFieldHeaders` is now `headers`.\r\n* `addPPIType` has been removed (use `bind_layers` instead).\r\n* _Behaviour change:_ Unknown PPI headers are now `Raw` layers. `PPIGenericFldHdr` removed.\r\n* Removes `pfh_type` and `pfh_datalen` from every PPI header type (this is now part of `PPI_Hdr`).\r\n* Fixes large amounts of PEP8 violations in `ppi`, `ppi_cace` and `ppi_geotag`. There are still some left, \r\n* Fixes PPI module labelling to say \"CACE Per-Packet Information\" (was \"Parallel Peripheral Interface\")\r\n* _API change:_ PPI constants are now in `scapy.data`.\r\n* `scapy.layers.ppi` is now loaded by default (it is used by `scapy.layers.bluetooth4LE`)\r\n\r\n`scapy.contrib.ppi_cace`:\r\n\r\n* _API change:_ Renames `Dot11Common` to `PPI_Dot11Common` to avoid collisions with other modules.\r\n\r\n`scapy.contrib.ppi_geotag`\r\n\r\n* _API change:_ Renames `GPS`, `Vector`, `Sensor` and `Antenna` to have `PPI_Geotag` prefixes, to avoid collisions with other modules.\r\n* Internal `HCSINullField` no longer takes a `default` argument, as it is always `None`.\r\n* Added `_hcsi_null_range` for adding large numbers of `HCSINullField` without repetition.\r\n* `HCSIPacket` has been redesigned to use metaclasses so that it is easier to define these fields. It no longer uses `eval`.\r\n* `_HCSIBuildFields` has been removed.\r\n* Updated `ppi_geotag.uts` test for `UTCTimeField` and `LETimeField` so that they always use UTC internally. Removed broken `local_to_utc` function that would not work in timezones with non-whole-hour DST changes (eg: `Australia/Lord_Howe`).\r\n\r\n`scapy.layers.bluetooth4LE`:\r\n\r\n* Add documentation references for `BTLE_PPI` and `BTLE_RF`.\r\n* Make `BTLE_PPI.rssi_*` values `SignedByteField` (cleanup; no net change)\r\n* Change `BTLE_RF.signal` and `BTLE_RF.noise` to `sint8` (per specification).\r\n* Unbind `BTLE` from `PPI.dlt=147` (`DLT_USER0`).  This will trigger the issue in #1673 again, as the tests use `DLT_USER0`.  There are patches for [ubertooth](https://github.com/greatscottgadgets/ubertooth/pull/359) and [libbtbb](https://github.com/greatscottgadgets/libbtbb/pull/55) to fix that going forward.\r\n\r\nOther cleanups:\r\n\r\n* `scapy.data.epoch` now declared using `calendar.timegm` (which calculates in UTC) rather than `time.mktime` (which calculates in localtime). This fixes the `ppi_geotag` tests.\r\n\r\nThese changes pass regression tests.",
    "head_branch": "ppi-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "PPI cleanups:\n\n* _API change:_ PPI types are now stacked with `PPI_Hdr`, which works similarly to `EIR_Hdr`. Refactored existing uses (`ppi_cace`, `ppi_geotag` and `bt4LE`) and updated tests.\n* `addPPIType` has been removed (use `bind_layers` instead).\n* _Behaviour change:_ Unknown PPI headers are now `Raw` layers. `PPIGenericFldHdr` removed.\n* Removes `pfh_type` and `pfh_datalen` from every PPI header type (this is now part of `PPI_Hdr`).\n* Fixes large amounts of PEP8 violations in `ppi`, `ppi_cace` and `ppi_geotag`. There are still some left,\n* Fixes PPI module labelling to say \"CACE Per-Packet Information\" (was \"Parallel Peripheral Interface\")\n* _API change:_ PPI constants are now in `scapy.data`.\n* `scapy.layers.ppi` is now loaded by default (it is used by `scapy.layers.bluetooth4LE`)\n\n`scapy.contrib.ppi_cace`:\n\n* _API change:_ Renames `Dot11Common` to `PPI_Dot11Common` to avoid collisions with other modules.\n\n`scapy.contrib.ppi_geotag`\n\n* _API change:_ Renames `GPS`, `Vector`, `Sensor` and `Antenna` to have `PPI_Geotag` prefixes, to avoid collisions with other modules.\n* Internal `HCSINullField` no longer takes a `default` argument, as it is always `None`.\n* Added `_hcsi_null_range` for adding large numbers of `HCSINullField` without repetition.\n* `HCSIPacket` has been redesigned to use metaclasses so that it is easier to define these fields. It no longer uses `eval`.\n* `_HCSIBuildFields` has been removed.\n* Updated `ppi_geotag.uts` test for `UTCTimeField` and `LETimeField` so that they always use UTC internally. Removed broken `local_to_utc` function that would not work in timezones with non-whole-hour DST changes (eg: `Australia/Lord_Howe`).\n\n`scapy.layers.bluetooth4LE`:\n\n* Add documentation references for `BTLE_PPI` and `BTLE_RF`.\n* Make `BTLE_PPI.rssi_*` values `SignedByteField` (cleanup; no net change)\n* Change `BTLE_RF.signal` and `BTLE_RF.noise` to `sint8` (per specification).\n* Unbind `BTLE` from `PPI.dlt=147` (`DLT_USER0`) -- instead use `DLT_BLUETOOTH_LE_LL` (per specification).\n\nOther cleanups:\n\n* `scapy.data.epoch` now declared using `calendar.timegm` (which calculates in UTC) rather than `time.mktime` (which calculates in localtime).\n\nThese changes pass regression tests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb063a88c0a76e0a51aec",
    "number": 1907,
    "body": "Sending packets via bpf requires the address family.  Instead of\r\nbinding the internet layer to loopback with multiple values, only\r\nuse the correct one for each inet and inet6.  This fixes send()\r\nIPv6 on OpenBSD.",
    "head_branch": "bpfsend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Send IP packet on OpenBSD Loopback with correct address family.\n\nRegister the matching inet and inet6 address family number for the\nIP and IPv6 layer of the loopback device.  This way it should work\nfor all operating systems.  Keep IP as the default layer if the\ntype of the bottom up packet is unspecified."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb064a88c0a76e0a51aed",
    "number": 1904,
    "body": "It will be more helpful to show the auth: PSK or 802.1X. \r\n\r\nAnd because they may support one of the WPA or WPA2, or both,  I just added in the crypto array. \r\n\r\nOutputs like these:\r\n```\r\nt = sniff(iface=\"wlan0\",  filter=\"subtype probe-resp or subtype beacon\", timeout=0.5)\r\nfor i in range(len(t)):\r\n  p = t[i]\r\n  if p.subtype == 8: #Beacon\r\n    print( p[Dot11Beacon].network_stats()[\"crypto\"])\r\n  if p.subtype == 5: #ProbeResp\r\n    print( p[Dot11ProbeResp].network_stats()[\"crypto\"])\r\n\r\n{'WPA2/PSK'}\r\n{'WPA2/PSK'}\r\n{'WEP'}\r\n{'OPN'}\r\n{'WPA2/802.1X'}\r\n{'OPN'}\r\n{'WPA2/802.1X'}\r\n{'OPN'}\r\n{'WPA2/PSK'}\r\n{'WEP'}\r\n{'WPA/PSK', 'WPA2/PSK'}\r\n{'WPA2/802.1X'}\r\n{'WPA2/PSK'}\r\n{'WPA2/802.1X'}\r\n{'WPA2/PSK'}\r\n{'WPA2/PSK'}\r\n{'WPA/PSK', 'WPA2/PSK'}\r\n{'WPA/PSK', 'WPA2/PSK'}\r\n{'WPA2/PSK'}\r\n{'WPA2/802.1X'}\r\n\r\n```\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb064a88c0a76e0a51aee",
    "number": 1900,
    "body": "**Fixed potential crashes:**\r\nFixed FlagsFields for some classes. Used multiline strings by accident.\r\nFixed scaling and its field names\r\n\r\n**Cosmetic:**\r\nRemoved trailing spaces for OBD enums\r\n\r\n@polybassa ",
    "head_branch": "obd-flags-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "OBD: Fixed FlagsFields (#1900)\n\nRemoved trailing spaces for OBD enums\r\nFixed scaling and its field names"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb065a88c0a76e0a51aef",
    "number": 1899,
    "body": "This PR fixes #1894.\r\n\r\nI rewrote the whole test as it was quite difficult to understand.",
    "head_branch": "Issue_#1894",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1899 from guedou/Issue_#1894\n\nDo not check IP source addresses when conf.checkIPsrc is False"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb066a88c0a76e0a51af0",
    "number": 1898,
    "body": "new layer for PCOM SCADA protocol",
    "head_branch": "new-pcom-layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb067a88c0a76e0a51af1",
    "number": 1896,
    "body": "Added tests for last changes:\r\nhttps://github.com/secdev/scapy/pull/1888\r\n\r\nas requested by @polybassa https://github.com/secdev/scapy/pull/1888#issuecomment-471162880\r\n\r\nTest for the **dissection** of a DTC request already existed, thus only added tests for building",
    "head_branch": "correct-defaults",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb068a88c0a76e0a51af2",
    "number": 1893,
    "body": "ibeacon: New layer!\r\n\r\n- Decodes iBeacon as a submessage of Apple's BLE broadcast frame format. Does not implement support for other types of Apple BLE broadcasts.\r\n- Adds tests and example documentation.\r\n- Moves some beacon-building functionality into `scapy.layers.bluetooth`.\r\n\r\nThis also includes some minor documentation changes for Eddystone, in order to reference the same `Beacon Locator` Android app used for testing iBeacons (as it can handle both -- whereas the Eddystone Validator only handles Eddystone).\r\n\r\n~This PR requires #1892 to be merged first, as it requires `UUIDField`.~ **Done!**",
    "head_branch": "ibeacon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ibeacon: New layer!\n\n- Decodes iBeacon as a submessage of Apple's BLE broadcast frame format.\n  Does not implement support for other types of Apple BLE broadcasts.\n\n- Adds tests and example documentation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb069a88c0a76e0a51af3",
    "number": 1892,
    "body": "There are multiple implementations of a UUID-like field, and some places where we don't use this at all (but could!).  This pull request merges them, and brings it into a new `scapy.field.UUIDField`.\r\n\r\nThis impacts `s.l.bluetooth`, `s.l.dhcp6`, `s.c.dce_rpc`, `s.c.opc_da` and `s.c.pnio_rpc`.\r\n\r\nThe new `UUIDField` always uses Python's `uuid.UUID` class as an internal representation (not all modules did this).\r\n\r\n- Merge functionality of `s.l.bluetooth.BTUUIDField` and `s.c.dce_rpc.UUIDField` into `s.fields.UUIDField`\r\n- Moves `s.c.dce_rpc.RandUUID` to `s.volatile`\r\n- Adds support for RFC 4122 \"versioned\" UUIDs to `RandUUID`, and adds tests\r\n- Moves `UUIDField` tests that don't use `EndiannessField` from `s/c/dce_rpc.uts` to `t/regression.uts`\r\n- `dhcp6`: Migrates `DUID_UUID.uuid` to `UUIDField`, and adds tests (tested only with regression tests, based on my reading of the RFC)\r\n- `opc_da`: Migrate from `PUUID` to `UUIDField`, removes `PUUID` (tested only with regression tests)\r\n- `pnio_rpc`: Fix regressions from `dce_rpc` changes (tested only with regression tests)\r\n- Fix `re` module stomping in `t/regression.uts`\r\n\r\nTests still pass on py2.7 and 3.7 (skipping root/netaccess tests)",
    "head_branch": "uuid-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update scapy/volatile.py\n\nCo-Authored-By: micolous <micolous+gh@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb06aa88c0a76e0a51af4",
    "number": 1890,
    "body": "Unlike other BSD systems, OpenBSD DLT_LOOP provides a 32 bit value\r\nin network byte order.  This is the address family of the encapsulated\r\npacket.  Use a simple EnumField in the Loopback layer.\r\n",
    "head_branch": "obsdloop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1890 from bluhm/obsdloop\n\nOpenBSD Loopback provides address family."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb06aa88c0a76e0a51af5",
    "number": 1889,
    "body": "Issue #1887 occurs, if python-can is not installed. The following changes to the unit-test will verify if python-can is available. If it is not available, all test which require python-can will be skipped. ",
    "head_branch": "fix_issue_1887",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb06ba88c0a76e0a51af6",
    "number": 1888,
    "body": "- Using `None` as default only for fields which are not fuzzed.\r\n- Made default values consistent\r\n- EGRAError -> egr_a_error\r\n- Using `FieldLenField` where appropriate\r\n\r\n@polybassa \r\n",
    "head_branch": "correct-defaults",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix some fields for OBD protocol (#1888)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb06ca88c0a76e0a51af7",
    "number": 1885,
    "body": "Small fix that accepts another valid output. Fix for #1866 ",
    "head_branch": "UT_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1885 from guedou/UT_fixes\n\nAccept the protocol name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb06da88c0a76e0a51af8",
    "number": 1884,
    "body": "- fixes https://github.com/secdev/scapy/issues/1880\r\n- add test\r\n\r\nThis issue only happened when building a dissected packet (one with already a cache set). That's why I missed it",
    "head_branch": "fixFCSfield",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1884 from gpotter2/fixFCSfield\n\nFix FCSField computation on already dissected packet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb06ea88c0a76e0a51af9",
    "number": 1883,
    "body": "",
    "head_branch": "fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1883 from p-l-/fixes\n\nSome fixes (mainly to avoid (useless) list creations)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb06fa88c0a76e0a51afa",
    "number": 1882,
    "body": "There are multiple implementations of a UUID-like field, and some places where we don't use this at all (but could!).  This pull request merges them, and brings it into a new `scapy.field.UUIDField`.\r\n\r\nThis impacts `s.l.bluetooth`, `s.l.dhcp6`, `s.c.dce_rpc`, `s.c.opc_da` and `s.c.pnio_rpc`.\r\n\r\n- Merge functionality of `s.l.bluetooth.BTUUIDField` and `s.c.dce_rpc.UUIDField` into `s.fields.UUIDField`\r\n- Moves `s.c.dce_rpc.RandUUID` to `s.volatile`\r\n- Adds support for RFC 4122 \"versioned\" UUIDs to `RandUUID`, and adds tests\r\n- Moves `UUIDField` tests that don't use `EndiannessField` from `s/c/dce_rpc.uts` to `t/regression.uts`\r\n- `dhcp6`: Migrates `DUID_UUID.uuid` to `UUIDField`, and adds tests (tested only with regression tests, based on my reading of the RFC)\r\n- `opc_da`: Migrate from `PUUID` to `UUIDField`, removes `PUUID` (tested only with regression tests)\r\n- `pnio_rpc`: Fix regressions from `dce_rpc` changes (tested only with regression tests)\r\n- Fix `re` module stomping in `t/regression.uts`\r\n\r\nTests still pass on py2.7 and 3.7 (skipping root/netaccess tests)",
    "head_branch": "uuid-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb06fa88c0a76e0a51afb",
    "number": 1879,
    "body": "\r\n",
    "head_branch": "vpp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Contributions from the fd.io VPP project. (#1879)\n\n* Contributions from the fd.io VPP project."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb070a88c0a76e0a51afc",
    "number": 1878,
    "body": "3dd7b912cfa24c331b32d666df2d4367822dcb96.\r\n\r\n    who_has = 1\r\n    is_at = 2\r\n\r\n",
    "head_branch": "arp_attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb071a88c0a76e0a51afd",
    "number": 1877,
    "body": "",
    "head_branch": "ccpCorrections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1877 from polybassa/ccpCorrections\n\nminor corrections on ccp documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb072a88c0a76e0a51afe",
    "number": 1876,
    "body": "- rework of https://github.com/secdev/scapy/pull/1875\r\n- support all fields of the RFC\r\n- update `network_info` test",
    "head_branch": "dot11country",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1876 from gpotter2/dot11country\n\nSupport 802.11 country element"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb073a88c0a76e0a51aff",
    "number": 1875,
    "body": "1.Added Dot11ProbeResp.network_stats\r\n2.parse country code in Dot11ProbeResp.network_stats and Dot11Beacon.network_stats",
    "head_branch": "work",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb074a88c0a76e0a51b00",
    "number": 1873,
    "body": "Fixes #1872 \r\n",
    "head_branch": "dot11beacon_stats_fix_py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1873 from 1earch/dot11beacon_stats_fix_py3\n\nFix Dot11Beacon.network_stats for Python3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb074a88c0a76e0a51b01",
    "number": 1871,
    "body": "A small, but important fix.\r\n\r\nIf I requested a service >= 0x40 and the ECU responds with \"Negative response, serviceNotSupported\", scapy did not detect this response, because the hashes did not match.",
    "head_branch": "obd-hashret-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1871 from akorb/obd-hashret-fix\n\nOBD: Negative responses with service >= 0x40 are detected now"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb075a88c0a76e0a51b02",
    "number": 1870,
    "body": "This PR is a rebase of the old `fixkrack` branch I made some times ago to fix #1828\r\n\r\n- fixes https://github.com/secdev/scapy/issues/1828\r\n- improves Dot11TKIP/Dot11CCMP support (and adapt the krack module for it)\r\n- cleanup `RadioTap` once and for all (remove all #noqa)\r\n- add all remaining `RadioTap` fields (so that we stop getting PRs for them)\r\n- fixes krack for Python 3\r\n- add tests for Dot11TKIP/Dot11CCMP\r\n- minor windows improvements (better monitor cache handling)",
    "head_branch": "fixkrack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1870 from gpotter2/fixkrack\n\nFix Krack module & cleanup RadioTap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb076a88c0a76e0a51b03",
    "number": 1869,
    "body": "I know that this PR sounds scary: droping `distutils` is something that we first had chosen not to do. However, since Python 3.7: https://docs.python.org/3/library/distutils.html it's \"deprecated\" in the way that\r\n\r\n> The recommended pip installer runs all setup.py scripts with setuptools, even if the script itself only imports distutils. Refer to the Python Packaging User Guide for more information.\r\n\r\n**Dropping distutils for setuptools allow us to perfom a big ammount of cleanup & stabilize our installation process**. Note that currently, `scapy.bat` is broken on Windows. I've glanced at the `IPython` repo, where they have some compatibility patches to handle both distutils and setuptools (which would fix `scapy.bat`), but its lots of stuff to maintain.\r\n\r\n**This PR drops distutils, and:**\r\n- refactor `.bat` files to follow the same architecture than on *nix: each `_py*.bat` file calls the main `.bat` file after setting `%PYTHON%`\r\n- remove `PYTHONDONTWRITEBYTECODE` call - we don't really need it and it make scapy's startup slower, when not installed\r\n- **default to Python 3** when running `./run_scapy` or `run_scapy.bat`\r\n- adds `basic` and `complete` scapy subversions, which contain the executables. I'll add them to the doc soon\r\n- automate script building: `scapy.exe` is now automatically generated (an equivalent is on linux), making it faster to load on Windows (as it avoids starting a cmd first)\r\n- removes the zip building capability (which is broken and unused). Scapy isn't zip-safe anymore, since we use `VERSION` file to store the git version, and those could be generated with setuptools anyways",
    "head_branch": "tinyfix2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1869 from gpotter2/tinyfix2\n\nDrop distutils - cleanup scapy executables"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb077a88c0a76e0a51b04",
    "number": 1867,
    "body": "Add new sniffing capabilities\r\n- [x]  Defragment IP on the flow (done)\r\n- [x] Defragment NetflowV9 on the flow\r\n\r\n(I might try to add HTTP support, based on this)\r\n\r\n### Demo\r\nIn one terminal:\r\n```\r\n>>> sniff(session=IPSession, prn=lambda x: x.summary())\r\n```\r\nOther terminal:\r\n```\r\nsend(fragment(IP()/\"hello\"*1000))\r\n```\r\n\r\n(It also works using `sniff(offline=[...])`, have a look at the tests\r\n\r\nNotice: all names are likely to be updated, if we find a better naming convention",
    "head_branch": "sessions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1867 from gpotter2/sessions\n\nIntroducing: Sessions - Defragment IP on-the-flow"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb078a88c0a76e0a51b05",
    "number": 1865,
    "body": "Massive doc overhaul:\r\n- split the bottom of `Advanced usage` into separate layer-specific files\r\n- Refactor the documentation sidebar (aka `:toctree:`)\r\n- remove references to the deprecated Scapy 1.X\r\n- fix permissions on polybassa 's `.svg` files + replace old `Usage` screenshot by fancy SVG animation in `Introduction`\r\n- adds scapy versions / python version graph\r\n- fixes windows logs when winpcap/npcap ins't installed + color of logs\r\n- small fixes in doc\r\n- remove the tiny \"Python tutorial\" from => it's not useful, and is incomplete. We're illegitimate to give this lesson (in `Introduction`)\r\n- Document `#scapy.contrib.*`\r\n\r\nSVGs animation are light, well-supported (except on Microsoft Edge, but it isn't used much, and will be soon switching to a Chromium implementation which supports it), and make the doc much more readable. It was first used in the Automative doc, and it's a great idea. I think we could try to implement them more often.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/54880361-38406e00-4e44-11e9-937a-56b4958f7fe4.png)\r\n",
    "head_branch": "winwarns",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1865 from gpotter2/winwarns\n\nScapy docs massive cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb078a88c0a76e0a51b06",
    "number": 1863,
    "body": "This PR tries to make CANSocket unit tests more reliable. \r\n\r\nSince there is a sporadic error in this tests, I don't know how effective this changes are.  ",
    "head_branch": "can_ut_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1863 from polybassa/can_ut_fix\n\nTry to make CANSocket unit tests more reliable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb079a88c0a76e0a51b07",
    "number": 1860,
    "body": "- prevents https://ci.appveyor.com/api/buildjobs/xspurs166ah250df/log",
    "head_branch": "stabilizewin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1860 from gpotter2/stabilizewin\n\nStabilize ICMP without winpcap test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb07aa88c0a76e0a51b08",
    "number": 1859,
    "body": "- support for `scapy.__version__` which is the standard (https://www.python.org/dev/peps/pep-0008/#module-level-dunder-names)",
    "head_branch": "version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1859 from gpotter2/version\n\nSupport __version__"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb07ba88c0a76e0a51b09",
    "number": 1858,
    "body": "",
    "head_branch": "ccp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1858 from polybassa/ccp\n\nCCP protocol implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb07ca88c0a76e0a51b0a",
    "number": 1857,
    "body": "conf.debug_dissector was being enabled as a side-effect of importing\r\nscapy.contrib.isis.\r\n\r\n---\r\n\r\nSorry for not catching this when I spotted LLDP enabling debug_dissector last week.\r\nI've now grep'd the source, and no other module is doing this in an obvious way.\r\n",
    "head_branch": "isissideeffect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1857 from lpenz/isissideeffect\n\n\"import scapy.contrib.isis\" shouldn't enable debug_dissector"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb07da88c0a76e0a51b0b",
    "number": 1856,
    "body": "Doc update:\r\n- typos\r\n- grammar fixes\r\n- lower size of some big images",
    "head_branch": "docupdate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1856 from gpotter2/docupdate\n\nSmall doc update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb07da88c0a76e0a51b0c",
    "number": 1855,
    "body": "A number of fixes and enhancements, primarily for Bluetooth Low Energy:\r\n\r\n* **Fix:** `BluetoothHCISocket.sr` now works\r\n* **Fix:** Python 3 issue with `LEMacField`\r\n* **New:** Bluetooth documentation page, explaining Bluetooth physical layer differences and some basic recipes for connecting to the HCI, BLE discovery and advertising.\r\n* **New:** cross-references for Bluetooth SIG assigned numbers\r\n* **New:** `BTUUID128Field` for 128-bit UUID fields\r\n* **New:** Adds some more `EIR_Hdr` enum types, and sort them\r\n* **New:** `EIR_CompleteList128BitServiceUUIDs` (and `IncompleteList`)\r\n* **New:** `EIR_ServiceData16BitUUID` (with protocol stacking support)\r\n* **Fix:** Protocol stacking for `EIR_Manufacturer_Specific_Data`\r\n* **Fix:** Renames `HCI_Event_Hdr.length` to `.len` (for consistency), and fixes calculation of it\r\n* **Fix:** Can now dissect packets composed of multiple `HCI_LE_Meta_Advertising_Report` (`.number > 1`), by adding `HCI_LE_Meta_Advertising_Reports`, which contains a list of `HCI_LE_Meta_Advertising_Report`.\r\n* **Fix:** Set a default MTU on `Bluetooth*Socket` classes\r\n* **New:** HCI BLE whitelist commands\r\n* **New:** [Eddystone beacons](https://github.com/google/eddystone) which uses the new stackable functionality of `EIR_ServiceData16BitUUID`\r\n* Adds tests for new functionality, and regression tests for fixes where plausible\r\n\r\nThis PR looks huge, but nearly half of the lines in this PR come from the documentation!",
    "head_branch": "bluetooth-fun",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1855 from micolous/bluetooth-fun\n\nBluetooth LE: multiple improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb07ea88c0a76e0a51b0d",
    "number": 1853,
    "body": "This change only impacts comments in a test, and should have no impact on the outcome of the test.\r\n",
    "head_branch": "le-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1853 from micolous/le-typo\n\nbluetooth4LE: fix typo \"Energie\" -> \"Energy\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb07fa88c0a76e0a51b0e",
    "number": 1852,
    "body": "_Without_ this change, the regression tests fail on Red Hat distributions that carry this patch (all versions released since 2001).  This has no effect on upstream tcpdump.\r\n\r\n**Background:**\r\n\r\nIn 2001, Red Hat introduced a patch to their distribution of tcpdump which splits the \"don't resolve hostnames\" and \"don't resolve port names\" options:\r\n\r\nhttps://src.fedoraproject.org/rpms/tcpdump/c/d42d137\r\n\r\nThat patch causes `-n` to still resolve port names, so one gets results like `192.0.2.1.ftp` instead of `192.0.2.1.21`.\r\n\r\ntcpdump's mailing list archives go back to only 2002, and the earliest attempt I could find to upstream this was in 2009, which I could find no response to.\r\n\r\nThere was another attempt to upstream it in 2018 (as a \"CentOS patch\") that has been explicitly _rejected_ by tcpdump: https://github.com/the-tcpdump-group/tcpdump/pull/702\r\n",
    "head_branch": "fix-tcpdump-redhat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1852 from micolous/fix-tcpdump-redhat\n\nCalls tcpdump with `-nn` option, for compatibility with Red Hat's tcpdump"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb080a88c0a76e0a51b0f",
    "number": 1850,
    "body": "conf.debug_dissector is being enabled as a side-effect of importing\r\nscapy.contrib.lldp. This module doesn't \"own\" debug_dissector, it\r\nshould respect the value that the user configured and follow the\r\nprinciple of least surprise.\r\n",
    "head_branch": "lldpsideeffect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1850 from lpenz/lldpsideeffect\n\n\"import scapy.contrib.lldp\" shouldn't enable debug_dissector"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb081a88c0a76e0a51b10",
    "number": 1849,
    "body": "- fixes https://github.com/secdev/scapy/issues/1846\r\n- cleanup dns\r\n- fixes some warnings\r\n- make UTscapy display raw data of the packets that have made the dissector crash, to be able to debug it externally",
    "head_branch": "dnscleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1849 from gpotter2/dnscleanup\n\nCleanup DNS decompression + fix warning messages being shown"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb082a88c0a76e0a51b11",
    "number": 1848,
    "body": "- adds tshark shortcut",
    "head_branch": "textwireshark",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1848 from gpotter2/textwireshark\n\nAdd text wireshark support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb082a88c0a76e0a51b12",
    "number": 1847,
    "body": "This PR:\r\n- removes threaded mode: it was a pretty poor idea. What really makes the difference is the use of generators, not the multi threading on sending\r\n- unify docs\r\n- fix randomSixLoWPAN bug\r\n- fixes https://github.com/secdev/scapy/issues/1897 => close all created pcap objects, to avoid a memory overflow\r\n- fixes https://github.com/secdev/scapy/issues/1918 => correctly close sockets when `count` or `stop_filter` conditions are triggered in `sniff`",
    "head_branch": "fixlatency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1847 from gpotter2/fixlatency\n\nImprove latency tests scapy 2.4.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb083a88c0a76e0a51b13",
    "number": 1844,
    "body": "I don't know whether .uts files are checked with flake8 server-side. If flake8 test fails, I'll update this PR.\r\n\r\n\r\n@polybassa ",
    "head_branch": "s09-multiple-iids",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1844 from akorb/s09-multiple-iids\n\nMultiple IIDs are possible in a single request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb084a88c0a76e0a51b14",
    "number": 1843,
    "body": "PID definitions are complete now, at least for our version of the OBD spec.\r\n\r\n@polybassa ",
    "head_branch": "pid-definitions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1843 from akorb/pid-definitions\n\nAdded missing PID definitions and removed redundant scaling assignments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb085a88c0a76e0a51b15",
    "number": 1842,
    "body": "Only ordering changes and fixing its unit tests",
    "head_branch": "pid_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1842 from akorb/pid_fix\n\nCorrected field ordering in pid 0x78 and 0x79"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb086a88c0a76e0a51b16",
    "number": 1840,
    "body": "The `randval()` method did not ensure valid ranges for the generated value in `ScalingField`",
    "head_branch": "randval_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1840 from akorb/randval_fix\n\nFixed out of range exception for randval in ScalingField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb087a88c0a76e0a51b17",
    "number": 1839,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [X] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [X] I squashed commits belonging together\r\n-   [X] I added unit tests or explained why they are not relevant\r\n-   [X] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n    I don't believe the unit tests would apply for this type of fix - I'd have to rename or move files around on the user's system to do so.\r\n    A number of the tests fail on my Mac OS, but the failures do not seem to be related to the patch.\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\nFinds the p0f fingerprint files the 2 common alternate locations, falling back on /etc/p0f as a default.\r\n\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\n\r\n> if required - outline impacts on other parts of the library\r\n\r\n\r\n",
    "head_branch": "william-stearns-p0f-paths",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb087a88c0a76e0a51b18",
    "number": 1838,
    "body": "",
    "head_branch": "contrib_descriptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1838 from polybassa/contrib_descriptions\n\nAdd some descriptions for the contrib automotive layers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb088a88c0a76e0a51b19",
    "number": 1837,
    "body": "Hi, this is a proof of concept. For automotive stuff, it would be cool, if I could sniff on multiple sockets of different types at the same time. \r\n\r\nWhat do you think about this PoC? It's not optimized and it would require a lot more unit tests. Also I don't know about the performance of this changes.",
    "head_branch": "multisocketsniff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb089a88c0a76e0a51b1a",
    "number": 1836,
    "body": "and some unit-tests for the CANSocket python-can",
    "head_branch": "CANSocket_basecls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1836 from polybassa/CANSocket_basecls\n\nAdd basecls parameter to CANSockets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb08aa88c0a76e0a51b1b",
    "number": 1835,
    "body": "When using sniff() and sndrcv() in multiple threads with different\r\nbpf sockets, the global received_frames cache is disturbing.  Filters\r\nor interfaces are not applied from the current sniff() invocation\r\nas obsolete packets with different parameters may be already in the\r\nreceived_frames array.  I would expect that the cache is part of\r\neach bpf socket.  So it should be initialized in the constructor.",
    "head_branch": "bpf-frames",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1835 from bluhm/bpf-frames\n\nManage received_frames per bpf socket."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb08ba88c0a76e0a51b1c",
    "number": 1834,
    "body": "fixes  https://ci.appveyor.com/project/secdev/scapy/builds/22120444/job/la137upvwq95d2t5",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1834 from secdev/gpotter2-patch-1\n\nFix setup tools version on all tox builds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb08ba88c0a76e0a51b1d",
    "number": 1833,
    "body": "This PR fixes small bugs introduced by the recent overhaul, reported by various users:\r\n- improves interface detection on Windows (actually, interfaces with duplicated names were ignored. That lead to trouble when using Monitor mode)\r\n- Restores Winpcap compatibility (+ added a Winpcap test to appveyor to avoid future regressions) : fix https://github.com/secdev/scapy/issues/1719\r\n- fixes https://github.com/secdev/scapy/issues/1819",
    "head_branch": "80211win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1833 from gpotter2/80211win\n\nImprove Windows support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb08ca88c0a76e0a51b1e",
    "number": 1832,
    "body": "- fixes https://github.com/secdev/scapy/issues/1811\r\n- introduces `FCSField`, which is applied on the end of a packet\r\n- adds WPA/TKIP/CCMP support for 802.11 packets => not always WEP",
    "head_branch": "fix80211",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1832 from gpotter2/fix80211\n\nBetter FCS handling & Support other 802.11 encryption"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb08da88c0a76e0a51b1f",
    "number": 1830,
    "body": "This is just a clean-up + a fix when DNS resolution of AS resolver won't work (no idea how to test that, and don't think it would make much sense, we don't test when AS resolver cannot be reached).",
    "head_branch": "fix-traceroute-graph",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1830 from p-l-/fix-traceroute-graph\n\nClean & fix traceroute graph"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb08ea88c0a76e0a51b20",
    "number": 1829,
    "body": "- fixes https://github.com/secdev/scapy/issues/1826\r\n\r\n(They are LE => in reversed order)",
    "head_branch": "dot11rsn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1829 from gpotter2/dot11rsn\n\nFixup Dot11EltRSN elements order"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb08fa88c0a76e0a51b21",
    "number": 1827,
    "body": "fixes #1733 (more a workaround because the recursion is less important as it was in the previous version of the protocol)\r\n\r\nModifications to the protocol : \r\n\r\n- added meta packet like Ether()\r\n- remove RTRHeader packet\r\n- dispatch_hook for assigning the correct packet type depending on version and pdu_type\r\n- new uts file\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1827 from francois-contat/master\n\nSimplifying and optimizing RTR implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb08fa88c0a76e0a51b22",
    "number": 1825,
    "body": "fixes https://github.com/secdev/scapy/issues/1824",
    "head_branch": "vxlan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1825 from gpotter2/vxlan\n\nVXLAN binding fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb090a88c0a76e0a51b23",
    "number": 1823,
    "body": "It seems everyone is updating their packages :/\r\n\r\nThis fixes PEP8 failures against the last flake8 version",
    "head_branch": "pep8fixrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1823 from gpotter2/pep8fixrs\n\nFix F821, F632, E117"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb091a88c0a76e0a51b24",
    "number": 1822,
    "body": "",
    "head_branch": "rdcandump_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1822 from polybassa/rdcandump_fix\n\nFix issue #1821"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb092a88c0a76e0a51b25",
    "number": 1817,
    "body": "- Ipython: Small improvements.\r\n- when terminal is too small (less than 75 characters) display mini banner instead:\r\n![8169d4ae-87d8-4d6e-ac2b-16a9fe7c0b6c](https://user-images.githubusercontent.com/10530980/51871714-6c714400-2357-11e9-9e0a-24b455d8e704.jpeg)\r\n- make sure ALL contrib layers have a properly defined config (added a test)",
    "head_branch": "ipythoninte",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1817 from gpotter2/ipythoninte\n\nImprove UI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb093a88c0a76e0a51b26",
    "number": 1816,
    "body": "- fixes https://github.com/secdev/scapy/issues/1815\r\n- fixes https://github.com/secdev/scapy/issues/1818\r\n- fixes some definitions (especially ZigbeeAppCommandPayload)",
    "head_branch": "zigbee1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1816 from gpotter2/zigbee1\n\nImprove ZigbeeAppDataPayload & ZigbeeAppCommandPayload"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb094a88c0a76e0a51b27",
    "number": 1812,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1812 from hennadiy-demchenko/master\n\nAdd Tx/Rx flags support for Radiotap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb094a88c0a76e0a51b28",
    "number": 1810,
    "body": "This patch add the IFE ethertype as defined in RFC 8013\r\n(https://tools.ietf.org/html/rfc8013). This has been tested\r\nwith the Linux implementation as described in\r\nhttps://www.netdevconf.org/0.1/sessions/9.html\r\n\r\nThe code is somehow based by looking up some other ethernet based\r\npayload as lldp.\r\n\r\nI don't have tests yet sorry.\r\nI run pep8 and pylint to check the styles.\r\n\r\nNot sure about the helper function: gen_ife_tlv_fields() if somebody has a better solution I am more than happy to hear it. This module will be used by the linux kernel tdc framework which will be extended to use scapy.",
    "head_branch": "ife",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "scapy: contrib: ife: initial commit (#1810)\n\n* scapy: contrib: ife: initial commit\r\n\r\nThis patch add the IFE ethertype as defined in RFC 8013\r\n(https://tools.ietf.org/html/rfc8013). This has been tested\r\nwith the Linux implementation as described in\r\nhttps://www.netdevconf.org/0.1/sessions/9.html\r\n\r\nThe code is somehow based by looking up some other ethernet based\r\npayload as lldp.\r\n\r\n* scapy: contrib: ife: add testcases"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb095a88c0a76e0a51b29",
    "number": 1809,
    "body": "This pull request implements the SOME/IP-TP protocol which allows segmentation of SOME/IP messages to transport bigger data over UDP. Tests for this extension have also been implemented.",
    "head_branch": "tp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1809 from baarse/tp\n\nSOME/IP-TP extension"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb096a88c0a76e0a51b2a",
    "number": 1808,
    "body": "and add documentation for UDS customization\r\n",
    "head_branch": "uds_correction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1808 from polybassa/uds_correction\n\nMade the UDS RDBI and WDBI packets more consistent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb097a88c0a76e0a51b2b",
    "number": 1807,
    "body": "*I’m going to rework that a bit ...*",
    "head_branch": "pack-track",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb098a88c0a76e0a51b2c",
    "number": 1806,
    "body": "The UDS Read Data By Identifier Positive Response message was missing the dataRecord field (see Table 144 in ISO 14229-1:2013(E)).  This pull request adds this field.",
    "head_branch": "missing_uds_element",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb099a88c0a76e0a51b2d",
    "number": 1805,
    "body": "`with subprocess.Popen()` is not supported in Python 2 (fixes #1798).\r\n\r\nOutput from `sendpfast()` was not converted from `bytes` to `str` in Python 3.\r\n",
    "head_branch": "fix-sendpfast",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1805 from p-l-/fix-sendpfast\n\nFix sendpfast() for Python 2 & 3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb09aa88c0a76e0a51b2e",
    "number": 1804,
    "body": "Fixes #1799. Fix provided by @godfryd, test by @gpotter2.",
    "head_branch": "fix-debug-match",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1804 from p-l-/fix-debug-match\n\nFix sr() with debug_match"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb09aa88c0a76e0a51b2f",
    "number": 1802,
    "body": "fixes https://github.com/secdev/scapy/issues/1801\r\n\r\nFTR tho only happens when:\r\n- pyx is installed without its dependencies (it I unusable)",
    "head_branch": "pyxf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1802 from gpotter2/pyxf\n\nFix PYX detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb09ba88c0a76e0a51b30",
    "number": 1800,
    "body": "This PR adds fixes for FreeBSD, OpenBSD & NetBSD.",
    "head_branch": "bsd_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1800 from guedou/bsd_fixes\n\n*BSD fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb09ca88c0a76e0a51b31",
    "number": 1797,
    "body": "Fixes #1796",
    "head_branch": "1796",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1797 from achillesrasquinha/1796\n\nfix: Fix failing to build wheel"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb09da88c0a76e0a51b32",
    "number": 1795,
    "body": "- fixes https://github.com/secdev/scapy/issues/1758\r\n- finally make `netflowv9_defragment` something actually good (previous one was terrible 😞 )\r\n- small bug fixes\r\n- tests",
    "head_branch": "minor2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1795 from gpotter2/minor2\n\nNetflowV9 overhaul"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb09ea88c0a76e0a51b33",
    "number": 1794,
    "body": "fixes https://github.com/secdev/scapy/issues/1793",
    "head_branch": "bsdfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1794 from gpotter2/bsdfix\n\nFix *BSD bpf detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb09fa88c0a76e0a51b34",
    "number": 1792,
    "body": "This PR fixes #1746 ",
    "head_branch": "Issue_#1746",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1792 from guedou/Issue_#1746\n\nversion check regexp fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb09fa88c0a76e0a51b35",
    "number": 1790,
    "body": "Some minor improvements ",
    "head_branch": "enet_improvement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1790 from polybassa/enet_improvement\n\nFix ENETSocket naming and correct padding extraction of ENET"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a0a88c0a76e0a51b36",
    "number": 1788,
    "body": "Fix #1782 ",
    "head_branch": "pypi_links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1788 from guedou/pypi_links\n\nUse an absolute HTTP link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a1a88c0a76e0a51b37",
    "number": 1787,
    "body": "Squashed PR of #1614 ",
    "head_branch": "obd_squash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added automotive protocol OBD (#1787)\n\n* Added automotive protocol OBD\r\n\r\nAdded documentation for OBD + some minor improvements\r\n\r\nAdded path to OBD to setup.py\r\n\r\nAdded value enum for OBD\r\n\r\nAdded specific implementations and improved overall the OBD protocol coverage\r\n\r\nCorrected DTC services\r\n\r\nsplitted large file\r\n\r\nchange folder name of pids\r\n\r\nfix import error of OBD layer in python 2\r\n\r\nfix unit tests for python2 and python3\r\n\r\nrename NegativeResponse Message to OBD_NR to be more consistent with other automotive protocols\r\n\r\nrename Services to be more consistent with other automotive protocols\r\n\r\nupdate license headers\r\n\r\nfix imports\r\n\r\nAdded automotive protocol OBD\r\n\r\nAdded documentation for OBD + some minor improvements\r\n\r\nAdded path to OBD to setup.py\r\n\r\nAdded value enum for OBD\r\n\r\nAdded specific implementations and improved overall the OBD protocol coverage\r\n\r\nCorrected DTC services\r\n\r\nsplitted large file\r\n\r\nchange folder name of pids\r\n\r\nfix import error of OBD layer in python 2\r\n\r\nfix unit tests for python2 and python3\r\n\r\nrename NegativeResponse Message to OBD_NR to be more consistent with other automotive protocols\r\n\r\nrename Services to be more consistent with other automotive protocols\r\n\r\nupdate license headers\r\n\r\nfix imports\r\n\r\nrename PIDs and IIDs\r\n\r\nrefactor IIDs\r\n\r\nrefactoring of IIDs finished\r\n\r\nadd tids\r\n\r\nmove ScalingField into scapy.fields\r\n\r\nadd ndigits parameter to scalingfield\r\n\r\nadd format parameter to field\r\n\r\nrefactoring of pids 00 to 1f\r\n\r\nFixed unit tests for service 9\r\n\r\nFixed link and flake8 warning\r\n\r\nFixed bug introduced by rebase\r\n\r\nchange Field of TID00 to flags field to have a meaningful output\r\n\r\nchange Field of IID00 to flags field to have a meaningful output\r\n\r\nChange spell from Pid to PID in flagfields to be more consistent inside the OBD layer\r\n\r\nFix scaling assignment in python2\r\n\r\nRefactor pids from 20 to 3F\r\n\r\nfix flake\r\n\r\nminor changes to improve the fields handling\r\n\r\nadd some unit tests\r\n\r\nadd unit tests for scaling field\r\n\r\nMore refacotring on PIDs\r\n\r\nadd all simple fields for PIDs\r\n\r\nadd further OBD_PID implementations\r\n\r\nmake flake happy\r\n\r\nfix division operator\r\n\r\nFix flake8\r\n\r\nFix representation of degree sign\r\n\r\nReverted \"messageCount\" to \"count\"\r\n\r\nmake flake8 happy\r\n\r\nAdded PID 6A - 7F\r\n\r\nMinor performance improvements\r\n\r\nAdded ScalingIntField and fixed PID 7F\r\n\r\nFixed some tests\r\n\r\nremove ScalingIntField\r\n\r\nmake flake happy\r\n\r\nAdd temperature option for windows python 2\r\n\r\nrestore first implementation of ScalingFields\r\n\r\nrefactoring of ScalingField implementation\r\n\r\nUse hex values instead of ASCII values\r\n\r\nRevert \"Add temperature option for windows python 2\"\r\n\r\nThis reverts commit 090260247c2f4ae96f02c4162af0d2e665472979.\r\n\r\nmake degree celsius unit unique\r\n\r\nremove degree symbol\r\n\r\nAdd OBD Monitoring IDs\r\n\r\nImplement further PIDs\r\n\r\nRefactor Service 05\r\n\r\nmake flake happy\r\n\r\nmake flake happy\r\n\r\nmake codacy happy\r\n\r\nstart refactoring pids\r\n\r\nRefactor MIDs and PIDs\r\n\r\nUnify MID representation\r\n\r\nmore unit tests\r\n\r\nRefactor service 02\r\n\r\nRefactorin of service 02 finished\r\n\r\nremove service 5\r\n\r\nfix unit test for service 06\r\n\r\nadd additional unit test for Service 06\r\n\r\nrefactor service 07\r\n\r\nfinish refactoring\r\n\r\nmake codacy happy\r\n\r\nfix some names\r\n\r\nchange unit representation for Timing values\r\n\r\nAdded automotive protocol OBD\r\n\r\nAdded documentation for OBD + some minor improvements\r\n\r\nAdded path to OBD to setup.py\r\n\r\nAdded value enum for OBD\r\n\r\nAdded specific implementations and improved overall the OBD protocol coverage\r\n\r\nCorrected DTC services\r\n\r\nsplitted large file\r\n\r\nchange folder name of pids\r\n\r\nfix import error of OBD layer in python 2\r\n\r\nfix unit tests for python2 and python3\r\n\r\nrename NegativeResponse Message to OBD_NR to be more consistent with other automotive protocols\r\n\r\nrename Services to be more consistent with other automotive protocols\r\n\r\nupdate license headers\r\n\r\nfix imports\r\n\r\nrename PIDs and IIDs\r\n\r\nrefactor IIDs\r\n\r\nrefactoring of IIDs finished\r\n\r\nadd tids\r\n\r\nmove ScalingField into scapy.fields\r\n\r\nadd ndigits parameter to scalingfield\r\n\r\nadd format parameter to field\r\n\r\nrefactoring of pids 00 to 1f\r\n\r\nFixed unit tests for service 9\r\n\r\nFixed link and flake8 warning\r\n\r\nFixed bug introduced by rebase\r\n\r\nchange Field of TID00 to flags field to have a meaningful output\r\n\r\nchange Field of IID00 to flags field to have a meaningful output\r\n\r\nChange spell from Pid to PID in flagfields to be more consistent inside the OBD layer\r\n\r\nFix scaling assignment in python2\r\n\r\nRefactor pids from 20 to 3F\r\n\r\nfix flake\r\n\r\nminor changes to improve the fields handling\r\n\r\nadd some unit tests\r\n\r\nadd unit tests for scaling field\r\n\r\nMore refacotring on PIDs\r\n\r\nadd all simple fields for PIDs\r\n\r\nadd further OBD_PID implementations\r\n\r\nmake flake happy\r\n\r\nfix division operator\r\n\r\nFix flake8\r\n\r\nFix representation of degree sign\r\n\r\nReverted \"messageCount\" to \"count\"\r\n\r\nmake flake8 happy\r\n\r\nAdded PID 6A - 7F\r\n\r\nMinor performance improvements\r\n\r\nAdded ScalingIntField and fixed PID 7F\r\n\r\nFixed some tests\r\n\r\nremove ScalingIntField\r\n\r\nmake flake happy\r\n\r\nAdd temperature option for windows python 2\r\n\r\nrestore first implementation of ScalingFields\r\n\r\nrefactoring of ScalingField implementation\r\n\r\nUse hex values instead of ASCII values\r\n\r\nRevert \"Add temperature option for windows python 2\"\r\n\r\nThis reverts commit 090260247c2f4ae96f02c4162af0d2e665472979.\r\n\r\nmake degree celsius unit unique\r\n\r\nremove degree symbol\r\n\r\nAdd OBD Monitoring IDs\r\n\r\nImplement further PIDs\r\n\r\nRefactor Service 05\r\n\r\nmake flake happy\r\n\r\nmake flake happy\r\n\r\nmake codacy happy\r\n\r\nstart refactoring pids\r\n\r\nRefactor MIDs and PIDs\r\n\r\nUnify MID representation\r\n\r\nmore unit tests\r\n\r\nRefactor service 02\r\n\r\nRefactorin of service 02 finished\r\n\r\nremove service 5\r\n\r\nfix unit test for service 06\r\n\r\nadd additional unit test for Service 06\r\n\r\nrefactor service 07\r\n\r\nfinish refactoring\r\n\r\nmake codacy happy\r\n\r\nfix some names\r\n\r\nFixed methods for ConditionVariable\r\n\r\nFixed order of bit fields\r\n\r\nCorrected PID 0x01 and 0x41\r\n\r\nFixed tests\r\n\r\nConvert to snake_case\r\n\r\n* minor changes on documentation\r\n\r\n* update documentation of OBD layer\r\n\r\n* remove outdated unit tests\r\n\r\n* add documentation for ScalingField\r\n\r\n* remove raw\r\n\r\n* fix unit test\r\n\r\n* fix unit test\r\n\r\n* minor fix\r\n\r\n* add negative response unit test\r\n\r\n* use bytes_encode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a2a88c0a76e0a51b38",
    "number": 1786,
    "body": "This PR fixes the star imports.",
    "head_branch": "PR#1685_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1786 from guedou/PR#1685_improved\n\nPR#1685 improved"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a3a88c0a76e0a51b39",
    "number": 1785,
    "body": "This PR improves PR#1635.\r\n\r\n",
    "head_branch": "PR#1635_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1785 from guedou/PR#1635_improved\n\nPR#1635 improved"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a4a88c0a76e0a51b3a",
    "number": 1784,
    "body": "This PR fixes #1783 ",
    "head_branch": "Issue_#1783",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1784 from guedou/Issue_#1783\n\nLICENSE file added to pip package"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a4a88c0a76e0a51b3b",
    "number": 1781,
    "body": "Should fix https://github.com/secdev/scapy/issues/1778\r\n\r\nThis PR:\r\n- fixes `get_long_description`\r\n- uses setuptools if available to get markdown working on PyPi\r\n- fixes README.md\r\n- adds a dist test using `twine check`",
    "head_branch": "fixsetup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1781 from gpotter2/fixsetup\n\nFix PyPi dist"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a5a88c0a76e0a51b3c",
    "number": 1780,
    "body": "We forgot to update setup.py",
    "head_branch": "new_maintainer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1780 from guedou/new_maintainer\n\nGabriel Potter is a Scapy maintainer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a6a88c0a76e0a51b3d",
    "number": 1779,
    "body": "This PR fixes #1777 ",
    "head_branch": "Issue_#1777",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1779 from guedou/Issue_#1777\n\nDo not crash when tcpdump is not available"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a7a88c0a76e0a51b3e",
    "number": 1776,
    "body": "Just a small fix to make this packet more correct",
    "head_branch": "gmlan_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1776 from polybassa/gmlan_fixes\n\nFix a field in the GMLAN RDBPKTI packet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a8a88c0a76e0a51b3f",
    "number": 1774,
    "body": "Bug introduced in 435918e3d8e95b7374fadd8c6d962ee9b5032fcb\r\n\r\nTest added.\r\n",
    "head_branch": "fix-eth-arp-show",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1774 from p-l-/fix-eth-arp-show\n\nFix (Ether() / ARP()).show()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a9a88c0a76e0a51b40",
    "number": 1772,
    "body": "- fixes #1761\r\n- fixes #1765\r\n",
    "head_branch": "docasn1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1772 from gpotter2/docasn1\n\nFix ASN1_BIT_STRING"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0a9a88c0a76e0a51b41",
    "number": 1771,
    "body": "Nvm",
    "head_branch": "docasn1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0aaa88c0a76e0a51b42",
    "number": 1770,
    "body": "- Remove gnuplot left-overs\r\n- update super socket selection doc\r\n- document `monitor=True` keyword\r\n- 2019",
    "head_branch": "doc-u1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1770 from gpotter2/doc-u1\n\nSmall doc update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0aba88c0a76e0a51b43",
    "number": 1769,
    "body": "This PR adds the iterator functionality to the FlagValue class. This might be useful. At least I want to use it for some OBD related applications. ",
    "head_branch": "IterableFlagsField",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1769 from polybassa/IterableFlagsField\n\nAdd iterator to FlagValue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0aca88c0a76e0a51b44",
    "number": 1768,
    "body": "",
    "head_branch": "automotiveDocumentation2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1768 from polybassa/automotiveDocumentation2\n\nAdd further ISOTPSocket documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0ada88c0a76e0a51b45",
    "number": 1765,
    "body": "ASN1_BIT_STRING.\\_\\_bytes__() and ASN1_BIT_STRING.\\_\\_str__() should return BER encoded TLV, but returns self.val_readable instead.\r\n\r\nfixes #1761\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0aea88c0a76e0a51b46",
    "number": 1764,
    "body": "Fixes #1763.",
    "head_branch": "fix-win-py2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0afa88c0a76e0a51b47",
    "number": 1762,
    "body": "This pull request contains a small documentation with examples for the SOME/IP implementation.",
    "head_branch": "someip_docu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SOME/IP documentation (#1762)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0afa88c0a76e0a51b48",
    "number": 1760,
    "body": "Issue was reported on gitter\r\n\r\n[Cap-p84-PE_shutnoshut_pcap.pcap.zip](https://github.com/secdev/scapy/files/2707410/Cap-p84-PE_shutnoshut_pcap.pcap.zip)\r\n",
    "head_branch": "dlt-ppp-dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1760 from gpotter2/dlt-ppp-dir\n\nAdd missing PPP DLT"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b0a88c0a76e0a51b49",
    "number": 1759,
    "body": "This PR:\r\n- implements what was discussed in https://github.com/secdev/scapy/issues/1747, knowingly L3 sockets that work without Winpcap. Fixes https://github.com/secdev/scapy/issues/1747\r\n- added a ping as test which is currently working (but requires complicated metrics explained in native.py), for those sockets\r\n- Added `conf.L3socket6` which sort of already existed, but now is clarified\r\n- fixes #841\r\n- implements `get_windows_if_list` and `read_routes(6)` in C/ctypes. It’s much faster and reliable. Tested on W10, W7 and WXP\r\n- this speeds up Windows booting (fixes https://github.com/secdev/scapy/issues/1699)\r\n- removes `POWERSHELL_PROCESS` and all its mechanics, replaced by the previous + cleanup\r\n- load interfaces independently from winpcapy, and do not destroy others but mark them as invalid.\r\n- rename `mock_windows.uts` -> `windows.uts` for consistency with `linux.uts` and `osx.uts`\r\n\r\n## Benchmark: loading time (WINDOWS)\r\n```python\r\nimport time\r\ni = time.time()\r\nfrom scapy.all import *\r\nprint(time.time()-i)\r\n```\r\n| State | Python 2.7.13 | Python 3.7.2 |\r\n|---|---|---|\r\n| secdev/master | 3.68s | 3.27s |\r\n| This PR |  1.24s | 1.07s |\r\n\r\nNotes:\r\n- the socket must be configured to receive specifically IP or IPv6, while being setup.\r\n- **It's incredibly hard to setup tests on C calls :/ They are no tests right now. I have tested it on Windows 10 and XP**",
    "head_branch": "native-win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1759 from gpotter2/native-win\n\n Windows: native support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b1a88c0a76e0a51b4a",
    "number": 1757,
    "body": "This PR:\r\n- fixes the \"MockSocket\" bug at the end of the tests\r\n- imports guedou's benchmark tests from #642 \r\n- removes a duplication in the *dump functions\r\n- fixes a small bug on Python 2.7 in `RandString`",
    "head_branch": "sanitaryupdate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1757 from gpotter2/sanitaryupdate\n\nRandom cleanups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b2a88c0a76e0a51b4b",
    "number": 1756,
    "body": "This should reduce packet losses in ISOTPSoftSocket\r\n\r\n",
    "head_branch": "ISOTPSoftSocketImprovement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1756 from polybassa/ISOTPSoftSocketImprovement\n\nRefactoring of ReceiveThread in ISOTPSoftSocket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b3a88c0a76e0a51b4c",
    "number": 1755,
    "body": "This PR:\r\n- fixes MANUF format\r\n- cleanup DADict\r\n\r\nfixes https://github.com/secdev/scapy/issues/1754",
    "head_branch": "manuffix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1755 from gpotter2/manuffix\n\nDADict: improvement + fix Manuf format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b3a88c0a76e0a51b4d",
    "number": 1752,
    "body": "Added several DHCPv4 options that were missing.",
    "head_branch": "add-missing-dhcpv4-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1752 from godfryd/add-missing-dhcpv4-options\n\nadded some missing DHCPv4 options"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b4a88c0a76e0a51b4e",
    "number": 1751,
    "body": "An error condition is currently traced on info level.\r\nBy default tracing is set to level higher than info so this error is not visible.\r\nI would like to change it from info to exception (which is error + tracing exception stack).",
    "head_branch": "fix-trace-in-snd-thread",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1751 from godfryd/fix-trace-in-snd-thread\n\nimproved tracing error in sending thread"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b5a88c0a76e0a51b4f",
    "number": 1750,
    "body": "This fixes the Problem that reassembled ip packets were always timestamped with the time of reassembly.\r\nAfter applying this PR the reassembled packet will have the timestamp of the last received fragment",
    "head_branch": "feature/defrag_time",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1750 from nyantec/feature/defrag_time\n\nSet time of defragmented ip packet to time of last fragment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b6a88c0a76e0a51b50",
    "number": 1749,
    "body": "> Add missing MCS field support to RadioTap",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1749 from hennadiy-demchenko/master\n\nAdd missing MCS field support to RadioTap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b7a88c0a76e0a51b51",
    "number": 1748,
    "body": "Signed-off-by: hennadii.demchenko <imps.demchenko@globallogic.com>\r\n\r\n> Add missing MCS field support to RadioTap",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b8a88c0a76e0a51b52",
    "number": 1745,
    "body": "fixes https://github.com/secdev/scapy/issues/1744",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1745 from secdev/gpotter2-patch-1\n\nMissing b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b8a88c0a76e0a51b53",
    "number": 1741,
    "body": "The Dot11 module isn’t consistent, and will surely be updated again to add support for the Dot11Elements.\r\nThis at least will remain consistent, and is quite handy. It’s an updated version of p-l- post on SO: https://stackoverflow.com/a/21664038/5459467\r\nwhich is now obsolete",
    "head_branch": "dot11beaconstats",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1741 from gpotter2/dot11beaconstats\n\nAdd network_stats() in Dot11Beacon"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0b9a88c0a76e0a51b54",
    "number": 1740,
    "body": "fixes https://github.com/secdev/scapy/issues/1655",
    "head_branch": "af-inconsistent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1740 from gpotter2/af-inconsistent\n\nFix inconsistencies between attach_filter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0baa88c0a76e0a51b55",
    "number": 1739,
    "body": "This should prevent confusion between AUTOSAR DoIP and the BMW properitary ENET protocol.\r\n",
    "head_branch": "enet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1739 from polybassa/enet\n\nChange name of contrib layer from bmw.doip to bmw.enet."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0bba88c0a76e0a51b56",
    "number": 1738,
    "body": "The interceptor wasn’t properly working in all cases, and I hadn’t time to report it.\r\n\r\nHere is the finished version + some tests with it",
    "head_branch": "pcapfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1738 from gpotter2/pcapfix\n\nFixes for conf.use_* dynamic manager + tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0bca88c0a76e0a51b57",
    "number": 1736,
    "body": "This PR contains various improvements about the libpcap provider’s handling:\r\n- Dynamically set / update `conf.L{2,3}*` according to the value of `conf.use_*`. This fixes the « the module was loaded before » issue we already had previously\r\n- few minor improvements (renames, prioritize pcapy and pypcap rather then python-libpcap)\r\n- fixes « Segmentation Fault », caused by the duplicate call of `close()` on the pcap objects: the first one being from the socket’s `close()` and the second one from `__del__` by replacing the `__del__` by `close`\r\n\r\nfixes https://github.com/secdev/scapy/issues/1731",
    "head_branch": "pcapfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1736 from gpotter2/pcapfix\n\nPcapfix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0bda88c0a76e0a51b58",
    "number": 1735,
    "body": "\"There is no small job\"\r\n\r\nThis PR:\r\n- separates `raw()` calls, that encode packets, from `bytes_encode()` calls, that encode text. It's clearer and smally reduces the time it takes to call a `raw()`. **Now we have `raw()` to build packets, and `bytes_encode` to get a string to bytes**. It’s much cleaner (and faster) and forces us to know exactly what to call where\r\n- speeds up a few of the compat.py functions (by not much each, but they are used a lot)\r\n- removes oldish `cmp` calls\r\n\r\n### This PR also contains a cryptography update\r\n\r\nIt was found during the implementation\r\n- update cryptography `decrypt()` calls to work with latest version of cryptography\r\n- some of the in-use ciphers for TLS 1.0 and 1.1 have been removed from OpenSSL newer versions, so use other still available ciphers for those 2 tests\r\n- increase verbosity of the TLS tests + stabilize their failure. Will be easier to debug in the future\r\n- added: fixes https://github.com/secdev/scapy/issues/1814\r\n\r\n### Tests\r\n\r\nUsing the version of the benchmarker from https://github.com/secdev/scapy/pull/642, with an extra\r\n```python\r\nif WINDOWS:\r\n    route_add_loopback()\r\n```\r\n\r\n### Results\r\n\r\n- **WINDOWS 10:**\r\n\r\n| Type | Before - 2.7|  Before - 3.6 | After - 2.7 | After - 3.6 |\r\n| --- | --- | --- | --- | --- |\r\n| Build | 13.68s | 10.20s | 13.56s (+1%) | 9.74s (+4%) |\r\n| Dissect | 5.27s | 3.85s | 4.96s (+5%) | 3.59s (+7%) |\r\n| Build & dissect | 19.31s | 14.17s | 18.90s (+2%) | 13.07s (+7%) |\r\n\r\n- **UBUNTU (low RAM/CPU)**\r\n\r\n| Type | Before - 2.7|  Before - 3.6 | After - 2.7 | After - 3.6 |\r\n| --- | --- | --- | --- | --- |\r\n| Build | 19.65s | 15.11s | 19.63s (~) | 14.79s (+2%) |\r\n| Dissect | 8.27s | 6.24s | 7.82s (+5%) | 6.02s (+3%) |\r\n| Build & dissect | 28.40s | 21.89s | 27.89s (+2%) | 21.52s (+1%) |\r\n\r\nPS: this will probably fail multiple times on travis",
    "head_branch": "raw-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1735 from gpotter2/raw-v2\n\nReduce raw() usage/ compatibility calls + fix cryptography"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0bda88c0a76e0a51b59",
    "number": 1732,
    "body": "Should fix #1673.",
    "head_branch": "fix-1673",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1732 from p-l-/fix-1673\n\nBluetooth4LE: remove unused (and broken) BTLE.post_dissection() method"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0bea88c0a76e0a51b5a",
    "number": 1730,
    "body": "Added PPPoE tags and discovery codes following [RFC2516](https://tools.ietf.org/html/rfc2516), [RFC4638](https://tools.ietf.org/html/rfc4638) and [RFC5578](https://tools.ietf.org/html/rfc5578).\r\n\r\nNow instead of displaying it as raw data, it displays the list of PPPoE tags as requested in issue #1496\r\n\r\nThis is my first contribution, feel free to comment, edit or request modifications!\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for PPPoE tags (#1730)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0bfa88c0a76e0a51b5b",
    "number": 1729,
    "body": "fixes https://github.com/secdev/scapy/issues/1727",
    "head_branch": "cropping-win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1729 from gpotter2/cropping-win\n\n[Win] Fix default IPs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c0a88c0a76e0a51b5c",
    "number": 1728,
    "body": "*This PR is an old rebase*\r\n\r\nThe `raw` function is supper inefficient, and can quite easily be avoided. It was a bad idea\r\n\r\nThis PR comes with an average improvement of dissection speed of 8% \r\n\r\nTODO: fix last tests ",
    "head_branch": "fast-rdpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c1a88c0a76e0a51b5d",
    "number": 1726,
    "body": "There is way over my head to do, here's what I could get so far:\r\n- (this PR includes https://github.com/secdev/scapy/pull/1574)\r\n- fixes small IP bug when ihl < 5\r\n- merges TLS13ServerHello and TLSServerHello, as there is now no way to differentiate them apart from their extensions\r\n- updates some constants, especially the default TLS version in the packets. It used to be set to `0x0301` in some drafts, but is now `0x0303` (TLS 1.2)\r\n- Fix TLSServerHello dissection + Implement the new (changed) HelloRetry\r\n- updated the pack (2/2) of tests according to the latest draft. Some still don't pass\r\n\r\n**TODO: (feel free to contribute)**\r\n- fixes https://github.com/secdev/scapy/issues/1668\r\n- fix the remaining tests\r\n- find a way to have `gtx_unix_time` exist only on TLS 1.3, in which case `random_bytes` size is 32 (rather than 28)",
    "head_branch": "tls-1.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c2a88c0a76e0a51b5e",
    "number": 1725,
    "body": "fixes https://github.com/secdev/scapy/issues/1718",
    "head_branch": "cropping-win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1725 from gpotter2/cropping-win\n\nBetter handling of cropped lines in PS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c2a88c0a76e0a51b5f",
    "number": 1724,
    "body": "This PR should fix https://github.com/secdev/scapy/issues/1719\r\n\r\n[waiting for confirmation from OP]\r\n\r\nfixes https://github.com/secdev/scapy/issues/1719",
    "head_branch": "hidden-ifaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1724 from gpotter2/hidden-ifaces\n\nSupport hidden adapters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c3a88c0a76e0a51b60",
    "number": 1722,
    "body": "Fixes a bug introduced by commit cabeb471c57dc501ffb2e002be2272cc8d9a4f96\r\nI have reverted the modification introduced by this commit (but kept the new variable names, which did not break anything)\r\nI have added a non-regression test with a DNS payload captured on my network.\r\nI have removed a non-regression test that does not correspond to a real DNS payload.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1722 from LRGH/master\n\ncommit cabeb broke dissection of some real DNS payloads"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c4a88c0a76e0a51b61",
    "number": 1720,
    "body": "This pull request implements the SOME/IP protocol as specified here:[SOME/IP](http://some-ip.com/)\r\nIt is more and more used in the automotive ethernet world.\r\n\r\nThe implementation contains the SOME/IP message protocol and the SOME/IP service discovery.",
    "head_branch": "someip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SOME/IP Implementation (#1720)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c5a88c0a76e0a51b62",
    "number": 1717,
    "body": "This PR fixes #1683.",
    "head_branch": "Issue_#1683",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1717 from guedou/Issue_#1683\n\nPython 2 & 3 - use errno attribute to handle OSError and socket.error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c6a88c0a76e0a51b63",
    "number": 1716,
    "body": "This PR fixed #1712.",
    "head_branch": "Issue_#1712",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1716 from guedou/Issue_#1712\n\nFix local HTML output"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c7a88c0a76e0a51b64",
    "number": 1715,
    "body": "This PR fixes #1714 ",
    "head_branch": "Issue_#1714",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1715 from guedou/Issue_#1714\n\nUse PacketField as a reference"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c7a88c0a76e0a51b65",
    "number": 1713,
    "body": "Adding RTR which is a network protocole for BGP implementations.\r\n\r\nThis protocol follows two RFCs : \r\n- 6810 version 0\r\n- 8210 version 1 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding RPKI to Router protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c8a88c0a76e0a51b66",
    "number": 1710,
    "body": "This bug has been reported by @yeoman313 on Gitter.",
    "head_branch": "fix-ppp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1710 from p-l-/fix-ppp\n\nPPP: protocol field can be limited to one byte"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0c9a88c0a76e0a51b67",
    "number": 1709,
    "body": "Implement python magic functions to make ISOTPNativeSockets more compatible to ISOTPSoftSockets\r\n\r\n\r\n",
    "head_branch": "isotpCompatibility",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1709 from polybassa/isotpCompatibility\n\nCompatibility improvement between ISOTPNativeSocket and ISOTPSoftSocket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0caa88c0a76e0a51b68",
    "number": 1708,
    "body": "",
    "head_branch": "close-fd-properly",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use `with open` in `scapy/data.py` (#1708)\n\nUse `with open` in `scapy/data.py`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0cba88c0a76e0a51b69",
    "number": 1707,
    "body": "`from collections import Iterable` was removed in Python 3.8\r\n",
    "head_branch": "fix-deprecated-import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1707 from carlbordum/fix-deprecated-import\n\nFix deprecated import"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0cba88c0a76e0a51b6a",
    "number": 1706,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n**Checklist:**\r\n\r\n-   [ ] If you are new to Scapy: I have checked <https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md> (esp. section submitting-pull-requests)\r\n-   [ ] I squashed commits belonging together\r\n-   [ ] I added unit tests or explained why they are not relevant\r\n-   [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n> brief description what this PR will do, e.g. fixes broken dissection of XXX\r\n\r\n> if required - short explanation why you fixed something in a way that may look more complicated as it actually is\r\n\r\n> if required - outline impacts on other parts of the library\r\n\r\nfixes #xxx (add issue number here if appropriate, else remove this line)\r\n",
    "head_branch": "dot1q-itag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0cca88c0a76e0a51b6b",
    "number": 1705,
    "body": "There is way over my head to do, here's what I could get so far:\r\n- (this PR includes https://github.com/secdev/scapy/pull/1574)\r\n- fixes small IP bug when ihl < 5\r\n- merges TLS13ServerHello and TLSServerHello, as there is now no way to differentiate them apart from their extensions\r\n- updates some constants\r\n- Fix TLSServerHello dissection + Implement the new (changed) HelloRetry\r\n- updated the pack (2/2) of tests according to the latest draft. Some still don't pass\r\n\r\n**TODO: (feel free to contribute)**\r\n- fixes https://github.com/secdev/scapy/issues/1668\r\n- fix the remaining tests\r\n- find a way to have `gtx_unix_time` exist only on TLS 1.3, in which case `random_bytes` size is 32 (rather than 28)",
    "head_branch": "tls-1.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0cda88c0a76e0a51b6c",
    "number": 1700,
    "body": "Added unit tests for ISOTP MITM attack and modified documentation.",
    "head_branch": "addUnitTestIsotp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1700 from denis1011/addUnitTestIsotp\n\nAdd further unit tests for isotp and modify documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0cea88c0a76e0a51b6d",
    "number": 1698,
    "body": "",
    "head_branch": "doc-37",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1698 from p-l-/doc-37\n\nExplicit support for Python 3.7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0cfa88c0a76e0a51b6e",
    "number": 1697,
    "body": "This PR:\r\n- adds support for RandTCPOptions. This changed require to replace the default value from `[]` to `''`, to avoid it storage as cache, which then prevents `fuzz()` from updating the value. See https://github.com/secdev/scapy/blob/master/scapy/packet.py#L242-L244\r\n- also fixes https://github.com/secdev/scapy/issues/1694\r\n\r\nfixes https://github.com/secdev/scapy/issues/1694",
    "head_branch": "tcpoptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1697 from gpotter2/tcpoptions\n\nTCPOptions improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d0a88c0a76e0a51b6f",
    "number": 1695,
    "body": "Various cleanups/duplications fixed according to Codacy:\r\n- `except Exception: pass` fixed\r\n- unused variables\r\n- variables overwriting builtins\r\n- general cleanup",
    "head_branch": "codacy-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1695 from gpotter2/codacy-2\n\nDig through code quality"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d0a88c0a76e0a51b70",
    "number": 1693,
    "body": "How about this solution to have a custom Linux kernel module installed for some ISOTPSocket unit tests?",
    "head_branch": "isotpKernelModule",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add tox environment with ISOTP Linux kernel modules\n\nRemove some broken tests\n\nchange can-utils installation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d1a88c0a76e0a51b71",
    "number": 1692,
    "body": null,
    "head_branch": "codacy-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d2a88c0a76e0a51b72",
    "number": 1690,
    "body": "There is no such thing as `versionslen`\r\nhttps://tools.ietf.org/html/draft-ietf-tls-tls13-28#section-4.2.1\r\n\r\nEdit: it used to exist in previous versions of the draft. I guess we should only support the latest one",
    "head_branch": "tls12sv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d3a88c0a76e0a51b73",
    "number": 1689,
    "body": "I added some further documentation on how to use bridge and sniff for MITM attacks on CAN\r\n",
    "head_branch": "addUnitTests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1689 from denis1011/addUnitTests\n\nAdd further unit tests for cansockets and modify the documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d4a88c0a76e0a51b74",
    "number": 1688,
    "body": "This fixes the pip download command in the issue template.\r\n\r\nThe current pip download command (`pip install https://github.com/secdev/scapy`) produces the following output:\r\n```\r\nThe directory '/home/george/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\r\nThe directory '/home/george/.cache/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\r\nCollecting https://github.com/secdev/scapy\r\n  Downloading https://github.com/secdev/scapy\r\n     / 204kB 3.6MB/s\r\n  Cannot unpack file /tmp/pip-HsBjcU-unpack/scapy (downloaded from /tmp/pip-chxNw2-build, content-type: text/html; charset=utf-8); cannot detect archive format\r\nCannot determine archive format of /tmp/pip-chxNw2-build\r\n```\r\n\r\nChanging the command to use the `git+git://` prefix (`pip install --upgrade git+git://github.com/secdev/scapy`) fixes this.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1688 from ecthros/patch-1\n\nCorrected pip download command"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d4a88c0a76e0a51b75",
    "number": 1685,
    "body": "Hi,\r\n\r\nIn this PR I try to implement the protocol ATA Over Ethernet. I followed this specification:\r\nhttp://brantleycoilecompany.com/AoEr11.pdf\r\n\r\nThe tests are really light because it's a simple protocol based on 4 commands and I just use the classic fields of scapy. In addition most of the software that implement ATA over Ethernet don't support all the commands so it's difficult to test it in real context.\r\n\r\nHope it can help, thank you for your time.",
    "head_branch": "ATAOverEthernet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d5a88c0a76e0a51b76",
    "number": 1684,
    "body": "The problem was an extension of the handshake protocole \"Server Hello\" inside the TLS packet, named \"supported_versions\".\r\n\r\nThe length of the versions was supposed to be 3, but the real size was 1, so scapy was trying to parse more than it could, and because of that it was returning the raw data.\r\n\r\nThe fix is adding a test to know if the size is less than what it should be, and it also does like wireshark, which writes that there is an error/malformation, give the supposed length and the real one. But scapy will also show the raw data.\r\n\r\nThe result for the code in the issue will be : \r\n\r\n`###[ TLS ]### `\r\n`    type= handshake`\r\n`    version= TLS 1.2`\r\n`    len= 122`\r\n`    iv= b''`\r\n`    \\msg\\`\r\n`     |###[ TLS Handshake - Server Hello ]###` \r\n`     |    msgtype= server_hello`\r\n`     |    msglen= 118`\r\n`     |    version= TLS 1.2`\r\n`     |    gmt_unix_time= Mon, 09 Feb 2015 08:41:13 +0000 (1423471273)`\r\n`     |    random_bytes= 60290781a55827539ab607abe2ba8db77a212053ad7e98c92598ba46`\r\n`     |    sidlen= 32`\r\n`     |    sid= '3\\xd5b\\xb3\\x93T\\x0cu @X3\\xf0n\\x8c\\x84\\xd0\\xdf\\xb0\\xe8\\xe0\\x9f.\\xa9\\xd4\\xe7\\xb8T\\x81\\xb9\\x89\\xac'`\r\n`     |    cipher= TLS_AES_128_GCM_SHA256`\r\n`     |    comp= null`\r\n`     |    extlen= 46`\r\n`     |    \\ext\\`\r\n`     |     |###[ TLS Extension - Scapy Unknown ]###` \r\n`     |     |    type= 51`\r\n`     |     |    len= 36`\r\n`     |     |    val= '\\x00\\x1d\\x00 \\x10\\x0bro\\xd7z\\x0f\\xd0\\xe6\\xa0\\x02(W\\x9d^d\\x9fA\\x05\\x1a\\x9b+Y\\xf5\\xaf\\xb0\\x9f\\xe7/y4\\x10'`\r\n`     |     |###[ TLS Extension - Supported Versions ]###` \r\n`     |     |    type= supported_versions`\r\n`     |     |    len= 2`\r\n`     |     |    versionslen= 3`\r\n`     |     |    versions= [b'Error/Malformed: Vector length 3 is too large, truncating it to 1 original is : \"\\x04\"']`\r\n`  mac= b''`\r\n`  pad= b''`\r\n`  padlen= None`\r\n\r\nfixes #1668\r\n\r\n",
    "head_branch": "Fix_branch_1668",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d6a88c0a76e0a51b77",
    "number": 1682,
    "body": "fixes #1674\r\n",
    "head_branch": "strydealpha/fix_issue_1674",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Strydealpha/fix issue 1674 (#1682)\n\nRemove VXLAN to Ether binding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d7a88c0a76e0a51b78",
    "number": 1681,
    "body": "fixes https://github.com/secdev/scapy/issues/1679\r\nfixes https://github.com/secdev/scapy/issues/1680",
    "head_branch": "small-edgecases",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1681 from gpotter2/small-edgecases\n\nSmall 0 and empty string handling cases"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d8a88c0a76e0a51b79",
    "number": 1675,
    "body": "fixes #1674\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0d9a88c0a76e0a51b7a",
    "number": 1672,
    "body": "This pull request is an enhancement, it try to add ICMP types and Codes on Scapy, based on the \"Missing ICMP Types\" issue. I didn't found how tests can be relevant on this enhancement.\r\n\r\nTypes added : \r\n- Type 30 — Traceroute\r\n- Type 31 — Datagram Conversion Error\r\n- Type 32 — Mobile Host Redirect \r\n- Type 33 — IPv6 Where-Are-You\r\n- Type 34 — IPv6 I-Am-Here\r\n- Type 35 — Mobile Registration Request\r\n- Type 36 — Mobile Registration Reply\r\n- Type 37 — Domain Name Request \r\n- Type 38 — Domain Name Reply\r\n- Type 39 — SKIP \r\n- Type 40 — Photuris\r\n    - Code 0 — Bad SPI\r\n    - Code 1 — Authentication Failed\r\n    - Code 2 — Decompression Failed\r\n    - Code 3 — Decryption Failed\r\n    - Code 4 — Need Authentication\r\n    - Code 5 — Need Authorization\r\n\r\nDocumentation on ICMP Type Numbers: \r\nhttps://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml\r\n\r\nI hope it will help this project.\r\nThank you.\r\n\r\nfixes #1195\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1672 from WhatTheSlime/master\n\nAdding few types and codes on ICMP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0daa88c0a76e0a51b7b",
    "number": 1667,
    "body": "![image](https://user-images.githubusercontent.com/10530980/47531393-d3411600-d8ad-11e8-830b-723c22ec72ad.png)\r\n\r\n\r\nI don't know how clean this is. It's actually pretty handy.\r\nI'm not a big fan of the name `_PacketAllowSubclass`. any suggestions ?\r\n\r\n- fixes https://github.com/secdev/scapy/issues/1590\r\n- fixes https://github.com/secdev/scapy/issues/1828",
    "head_branch": "parent-match",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1667 from gpotter2/parent-match\n\nIntroduce match_subclass Packet parameter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0daa88c0a76e0a51b7c",
    "number": 1666,
    "body": "This PR:\r\n- fixes W605",
    "head_branch": "W605",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1666 from gpotter2/W605\n\nW605 - invalid escape sequence"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0dba88c0a76e0a51b7d",
    "number": 1664,
    "body": "This PR will make flake8 tests work until #1659 is fixed.",
    "head_branch": "Disable_W504_checks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1664 from guedou/Disable_W504_checks\n\nW504 & W605 - disabled temporarily"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0dca88c0a76e0a51b7e",
    "number": 1660,
    "body": "This PR fixes #1659. I tried to limit the use of `noqa` but it is needed in some places.",
    "head_branch": "PEPin_W504",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0dda88c0a76e0a51b7f",
    "number": 1654,
    "body": "This PR:\r\n- fixes the .md and .sh according to Codacy guidelines by using `remark` (as advised by codacy, but that's sponsored stuff)",
    "head_branch": "codacy-basic",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1654 from gpotter2/codacy-basic\n\nCleanup .md and .sh files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0dea88c0a76e0a51b80",
    "number": 1653,
    "body": "This PR fixes #1623.\r\n\r\nI believe that there is not need for `tcpdump` do be run in promiscuous mode, so I decided to always use `-p`.",
    "head_branch": "Fix_Issue#1623",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1653 from guedou/Fix_Issue#1623\n\nDon't put the interface in promiscuous mode while getting the BPF filter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0dfa88c0a76e0a51b81",
    "number": 1652,
    "body": "should fix #1570 \r\n`except StopIteration:` is changed to `except StopIterator or RuntimeError`\r\nall occurrences of `raise StopIteration` are in Iterator classes, not generator functions, so they should be able to be left as is.\r\n`run_tests_py3` on py3.7.0 has 1188 passed and 44 failed before and after the commit",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1652 from AlexPoulsen/master\n\ncatch `RuntimeError`s from 3.7 generator fns"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0dfa88c0a76e0a51b82",
    "number": 1651,
    "body": "Fix after #1648.",
    "head_branch": "fix-1648",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1651 from p-l-/fix-1648\n\nFixes use of type(), removes some noqa:"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e0a88c0a76e0a51b83",
    "number": 1648,
    "body": "Add additional type checks to resolve #1638\r\n\r\nWith Python2 the following payload raises unhandled generic TypeError\r\n\r\n`SNMP(b'0\\x81\\xbc\\x02\\x01\\x00\\x04\\x06public\\xa4\\x81\\xae\\x06\\t+\\x06\\x01\\x04\\x01\\x04\\x01\\x02\\x15@\\x04\\x7f\\x00\\x00\\x01\\x02\\x01\\x00\\x1f\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\x01\\x01\\x00C\\x02\\x01U0\\x0f0\\r\\x06\\x08+\\x06\\x01\\x02\\x01\\x02\\x01\\x00\\x02\\x01!')\r\n`\r\n\r\nWith the check added, the Python 2 and Python 3 raise following exception\r\n\r\n`BER_BadTag_Decoding_Error: BERcodec_INTEGER: Got tag [8587423443810780818313611138150379671116567860722462144382740475144261241383164506308940097467600757281570915226457671894691780978554267560089894948938874453042857765831512690366792483361668677848869118330587763484320655426012913611576103491844801806939996958960598109896449/0x3f7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf7efdfbf01] while expecting <ASN1Tag INTEGER[2]>\r\n### Already decoded ###\r\nNone\r\n### Remaining ###\r\nb'\\x1f\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\xfe\\x01\\x01\\x00C\\x02\\x01U0\\x0f0\\r\\x06\\x08+\\x06\\x01\\x02\\x01\\x02\\x01\\x00\\x02\\x01!'`\r\n\r\nfixes #1638",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1648 from hhamalai/master\n\nFix unhandled TypeError with Python2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e1a88c0a76e0a51b84",
    "number": 1646,
    "body": "",
    "head_branch": "tx_time_isotp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1646 from polybassa/tx_time_isotp\n\nAdd transmit_time parameter to isotp native socket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e2a88c0a76e0a51b85",
    "number": 1645,
    "body": "This PR improves #1605 by adding unit tests.",
    "head_branch": "PR#1605_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1645 from guedou/PR#1605_improved\n\nPR#1605 improved"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e3a88c0a76e0a51b86",
    "number": 1641,
    "body": "This is a common use case to read CAN packets from a candump logfile\r\n\r\n",
    "head_branch": "rdcandump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1641 from polybassa/rdcandump\n\nAdd a function rdcandump to the can layer."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e3a88c0a76e0a51b87",
    "number": 1640,
    "body": "Renamed an inconsistent variable name to be the same in all methods",
    "head_branch": "fix-inconsistent-variables",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Renaming inconsistent variable name (#1640)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e4a88c0a76e0a51b88",
    "number": 1635,
    "body": "fixes #1634",
    "head_branch": "Incorrect_parse_with_SRv6_header",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e5a88c0a76e0a51b89",
    "number": 1631,
    "body": "Small optimization in routes-ordering.\r\n\r\nBetter consistency in `inet/inet6.route()` with:\r\n- `dst` argument (it was previously  `dst` or `dest`)\r\n- `verbose` argument. It will allow people to hide the IPv6 no route found message, as on IPv4\r\n- passing None returns the default route",
    "head_branch": "route-tinyfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1631 from gpotter2/route-tinyfix\n\nOptimization of metrics usage in routes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e6a88c0a76e0a51b8a",
    "number": 1630,
    "body": "This is the reason why coverage was so low.\r\nhttps://github.com/secdev/scapy/pull/1621 contained a few wrong imports that were not triggered in the tests.\r\n\r\nThis PR:\r\n- fixes the imports\r\n- fix UTscapy to report correctly such failures",
    "head_branch": "win-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1630 from gpotter2/win-imports\n\nFix Windows imports"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e7a88c0a76e0a51b8b",
    "number": 1629,
    "body": "Added a missing field to the GMLAN RMBAPR packet\r\n",
    "head_branch": "GMLAN_minor_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1629 from polybassa/GMLAN_minor_fix\n\nMinor protocol fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e8a88c0a76e0a51b8c",
    "number": 1628,
    "body": "When flake8 is launched using Python3, it complains about `long`.",
    "head_branch": "PEPin_F821_py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1628 from guedou/PEPin_F821_py3\n\nFix F821 with Python3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e8a88c0a76e0a51b8d",
    "number": 1627,
    "body": "This should fix the current failing codespell test.\r\n\r\nBig thanks to @gpotter2 for the hint: codespell was updated 3 hours ago =)",
    "head_branch": "codespell_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1627 from guedou/codespell_fixes\n\nSpelling errors fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0e9a88c0a76e0a51b8e",
    "number": 1626,
    "body": "Hopefully, the last PR of the #1277 serie!",
    "head_branch": "PEPin_W503",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1626 from guedou/PEPin_W503\n\nW502 - line break before binary operator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0eaa88c0a76e0a51b8f",
    "number": 1625,
    "body": "PEPin project almost over!\r\n\r\nI don't know how to provide a better fix than that =/",
    "head_branch": "PEPin_F403",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1625 from guedou/PEPin_F403\n\nF403 - 'from module import *' used; unable to detect undefined names"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0eba88c0a76e0a51b90",
    "number": 1624,
    "body": "One more PR for the #1277 serie =)",
    "head_branch": "PEPin_F401",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1624 from guedou/PEPin_F401\n\nF401 - 'module' imported but unused"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0eca88c0a76e0a51b91",
    "number": 1621,
    "body": "This PR from the #1277 fixes star imports.",
    "head_branch": "PEPin_F405",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1621 from guedou/PEPin_F405\n\nF405 -  variable/function/... may be undefined, or defined from star …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0eda88c0a76e0a51b92",
    "number": 1619,
    "body": "- A few minor UTscapy fixes for Python 2.7\r\n- Re-ordering a few messy .utsc files (so that the keyword are OK + in the same order)",
    "head_branch": "utscapy-fix2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1619 from gpotter2/utscapy-fix2\n\nMinor UTscapy fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0eea88c0a76e0a51b93",
    "number": 1618,
    "body": "This PR implement a dynamic `select()` handling:\r\n- during sniffing methods / sendrecv methods, sockets class are called with `.select(sockets)` and asked to return the selected sockets. This avoids having case-by-case all over sniffing methods, but rather inside their respective SuperSocket subclasses\r\n- read_allowed_exceptions are now extracted from the SuperSocket classes\r\n- a few random comments added",
    "head_branch": "select-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1618 from gpotter2/select-refactor\n\nImplement select() per-socket custom method"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0eea88c0a76e0a51b94",
    "number": 1617,
    "body": null,
    "head_branch": "feature/fix-split-layers-rst",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1617 from doismellburning/feature/fix-split-layers-rst\n\nFixed cosmetic documentation bugs for `split_layers()`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0efa88c0a76e0a51b95",
    "number": 1614,
    "body": "This Pull-Request adds the automotive [On-board diagnostics protocol](https://en.wikipedia.org/wiki/OBD-II_PIDs). This protocol is used for mostly emission-relevant diagnostic of a car. Additionally, it can read even non-emission-relevant Diagnostic Trouble Codes.\r\n\r\nIt is usually used with the `ISOTPSocket`.\r\n\r\nSince many of the PID classes are extremely similar, only differing in the binding value, not every single class is tested. But I added tests which test all **kind** of classes, meaning different lengths and different services.\r\n",
    "head_branch": "obd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f0a88c0a76e0a51b96",
    "number": 1613,
    "body": "This PR attempts at removing the E741 errors. Another PR for the #1277 serie.\r\n\r\nIt was not a fun PR. I hope that we can merge it soon.",
    "head_branch": "PEPin_E741",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1613 from guedou/PEPin_E741\n\nE741 - ambiguous variable name 'l'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f1a88c0a76e0a51b97",
    "number": 1612,
    "body": "One of the last PR of the #1277 serie.",
    "head_branch": "PEPin_E722",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1612 from guedou/PEPin_E722\n\nE722 - do not use bare except"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f2a88c0a76e0a51b98",
    "number": 1611,
    "body": "See https://github.com/secdev/scapy/pull/1441\r\n\r\nThis PR reverse the way MIB data is stored in scapy: it makes more sense to use the unique OID as key in the storage dictionaries, rather than its value, that can be a duplicate\r\n\r\nI'm pretty sure this even improve speed, as we use `self[key]` less often.\r\n\r\nWarning: This PR has 2 breaking changes\r\n\r\n- The format of the data dictionaries (raw) has changed, so direct usages of the dictionaries will fail (unlikely to be used as so: people should use `conf.mib`)\r\n- The real values are now being used, rather than the formatted ones (as the values were stored as keys). This means that `-` which was previously converted to `_` (I.e `sha1-...`) will not be replaced anymore. This is the wanted usage, but not the one there used to be. (I’m open to a compatibility “- to _” function if necessary, but I’d rather move away from it)",
    "head_branch": "mib-reformat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1611 from gpotter2/mib-reformat\n\nReverse MIB storage format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f3a88c0a76e0a51b99",
    "number": 1610,
    "body": "This PR fixes issue #1608.",
    "head_branch": "Issue_1608",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1610 from guedou/Issue_1608\n\nASN1_OID can use empty oid"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f3a88c0a76e0a51b9a",
    "number": 1609,
    "body": "This PR fixes #1607. It also corrects a docstring.",
    "head_branch": "Issue_#1607",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1609 from guedou/Issue_#1607\n\ndefragment6() - delete the fragment packet length"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f4a88c0a76e0a51b9b",
    "number": 1605,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f5a88c0a76e0a51b9c",
    "number": 1604,
    "body": "…rt 48879.\r\n\r\n http://static-void.io/aci-span-intro/\r\n\r\nThis is just a checklist to guide you. You can remove it safely.\r\n\r\n\r\n**Checklist:**\r\n- [ ] If you are new to Scapy: I have checked https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md (esp. section submitting-pull-requests)\r\n- [ ] I squashed commits belonging together\r\n- [ ] I added unit tests or explained why they are not relevant\r\n- [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n\r\n< brief description what this PR will do, e.g. fixes broken dissection of XXX >\r\n\r\n< if required - short explanation why you fixed something in a way that may look more complicated as it actually is >\r\n\r\n< if required - outline impacts on other parts of the library >\r\n\r\nfixes #< add issue number here if appropriate, else remove this line>\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cisco ACI uses a specific UDP destination port for VXLAN\n\nCisco ACI uses 48879 as the UDP destination port for VXLAN.\r\n\r\nSee http://static-void.io/aci-span-intro/"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f6a88c0a76e0a51b9d",
    "number": 1602,
    "body": "Hi maintainers, \r\nthis PR is not ready to merge, yet. I need this PR to discuss the implementation of ISOTP frames.\r\nI would need your help here. \r\n\r\nSome background information:\r\n```\r\n  CAN Frame\r\n\r\n+-------------------+-+-+-+--------+---------------------------------------------------------------------+\r\n|                   | | | | Length |                                                                     |\r\n| Identifier 29 Bit | | | |        |        Data: 0 to 8 Byte                                            |\r\n|                   | | | | 8 Bit  |                                                                     |\r\n+-------------------+-+-+-+--------+---------------------------------------------------------------------+\r\n                     Flags\r\n\r\n\r\n\r\n                              +----------------+\r\n                              |                |\r\n  ISOTP Header                |                |\r\n                              |                |\r\n+-------------------+-+-+-+---+----+-----------v---------------------------------------------------------+\r\n|                   | | | | Length |                                                                     |\r\n| Identifier 29 Bit | | | |        |        Payload 0 to 8 Byte                                          |\r\n|                   | | | | 8 Bit  |                                                                     |\r\n+-------------------+-+-+-+--------+---------------------------------------------------------------------+\r\n                     Flags\r\n\r\n\r\n\r\n\r\n  ISOTP Header  Extended Addressing\r\n\r\n+-------------------+-+-+-+--------+--------+------------------------------------------------------------+\r\n|                   | | | | Length |  ext.  |                                                            |\r\n| Identifier 29 Bit | | | |        |address |  Payload 0 to 7 Byte                                       |\r\n|                   | | | | 8 Bit  | 1 Byte |                                                            |\r\n+-------------------+-+-+-+---+----+---^----+-----^------------------------------------------------------+\r\n                     Flags    |        |          |\r\n                              |        |          |\r\n                              +--------+----------+\r\n\r\nISOTP Payload: Single Frame\r\n\r\n\r\n+--------+--------+-----------------------------------------------------------------------------------+\r\n| type   |  msg.  |                                                                                   |\r\n| SF = 0 |  size  |  Data: 0 to 6 byte if extended addressing, else 7 byte                            |\r\n| 4 Bit  |  4 Bit |                                                                                   |\r\n+--------+---+----+-----^-----------------------------------------------------------------------------+\r\n             |          |\r\n             |          |\r\n             +----------+\r\n\r\nISOTP Payload: First Frame\r\n\r\n+--------+---------------+------------------------+---------------------------------------------------+\r\n| type   |  msg. size    |  optional extended msg | Data: 6 byte without ext. addressing              |\r\n| FF = 1 |  12 Bit of    |  size, if msg. size    | 5 byte with ext. addressing                       |\r\n| 4 Bit  |  defrag. msg  |  == 0: 32 Bit          | 2 byte without EA and ext. msg. size, with EA 1 B |\r\n+--------+---------------+------------------------+---------------------------------------------------+\r\n\r\n\r\n ISOTP Payload: Consecutive Frame\r\n\r\n+--------+-------+------------------------------------------------------------------------------------+\r\n| type   | index |                                                                                    |\r\n| CF = 2 | 4 Bit |  Data: 0 to 6 byte if EA, else 0 to 7 byte                                         |\r\n| 4 Bit  |       |                                                                                    |\r\n+--------+-------+------------------------------------------------------------------------------------+\r\n\r\n\r\n\r\n ISOTP Payload: Flow Control\r\n\r\n\r\n\r\n+--------+-------+-------------------+--------------------+\r\n| type   | flags |  Block Size       |   Separation Time  |\r\n| FC = 3 | 4 Bit |  1 Byte           |   1 Byte           |\r\n| 4 Bit  |       |                   |                    |\r\n+--------+-------+-------------------+--------------------+\r\n\r\n```\r\n\r\nThis is, how ISOTP is built. Every ISOTP Frame is supposed to be send over CAN. Therefore, the ISOTPHeader is identical with the CAN header. \r\n\r\nmessage_size in the FirstFrame is the length of the full defragmented isotp message. \r\nmessage_size in the SingleFrame corresponds to the length of data\r\n\r\nThe length of the ISOTPHeader is the length of the ISOTP Frame + optional the extended address.\r\n\r\nMy goal is, to design the implementation of these frames in a way, that Scapy can determine as most length or size fields as possible, when doing a build of the packet. \r\n\r\nThe current implementation works, but I'm wondering, if some of my overwritten Packet functions can be refactored. \r\n\r\nCould you please tell me your thoughts on this implementation? ",
    "head_branch": "isotpframe3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1602 from polybassa/isotpframe3\n\nImplementation of lower layer ISOTP frames [ready to merge]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f7a88c0a76e0a51b9e",
    "number": 1601,
    "body": "Only Python 3.7 fixes (separated from the Travis tests, which don’t work properly for now)\r\n\r\nThis PR adds Python 3.7 support in scapy:\r\n- fixes StopIteration in generators. They can't be used in generators anymore, but must in iterators\r\n\r\nTests in https://github.com/secdev/scapy/pull/1571",
    "head_branch": "python3.7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1601 from gpotter2/python3.7\n\nPython 3.7 Support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f8a88c0a76e0a51b9f",
    "number": 1599,
    "body": "Added mutual exclusion to ISOTPSoftSocket.send to prevent multiple\r\nthreads from sending a message at the same time on the same socket,\r\nwhich previously caused a deadlock.",
    "head_branch": "isotp-mutex-send",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1599 from epozzobon/isotp-mutex-send\n\nAdded a mutex to ISOTPSoftSocket.send"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f9a88c0a76e0a51ba0",
    "number": 1598,
    "body": "ISOTPSoftSocket: Fixed a bug that included the passing of the last CAN frame in the ISOTP message",
    "head_branch": "fix-isotp-softsocket-padding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1598 from epozzobon/fix-isotp-softsocket-padding\n\nFixed an ISOTPSoftSocket padding issue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0f9a88c0a76e0a51ba1",
    "number": 1597,
    "body": "Just documentation",
    "head_branch": "automotive-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1597 from polybassa/automotive-docs\n\nSome more documentation on automotive stuff"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0faa88c0a76e0a51ba2",
    "number": 1595,
    "body": "This is required by the OBD protocol.\r\nIf the full payload of a CAN packet (usually 8 bytes) is not filled with data, it will be padded with 0x00 values.\r\n",
    "head_branch": "isotp-padding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1595 from akorb/isotp-padding\n\nAdd support for padding in iso-tp sockets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0fba88c0a76e0a51ba3",
    "number": 1594,
    "body": "",
    "head_branch": "can-isotp-issue2-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1594 from polybassa/can-isotp-issue2-fix\n\nfix issue #1592"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0fca88c0a76e0a51ba4",
    "number": 1593,
    "body": "",
    "head_branch": "can-isotp-issue-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1593 from polybassa/can-isotp-issue-fix\n\nfix issue #1591"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0fda88c0a76e0a51ba5",
    "number": 1589,
    "body": "This PR of the #1277 serie add fixes for E402. When the changes were obvious, I did not use noqa. Otherwise, I believe that it is safer to comment  the offending lines.",
    "head_branch": "pepin_E402",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1589 from guedou/pepin_E402\n\nE402 - module level import not at top of file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0fea88c0a76e0a51ba6",
    "number": 1588,
    "body": "Following discussions on #1277 this PR explicitly accept ignores E731.",
    "head_branch": "pepin_E731",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1588 from guedou/pepin_E731\n\nE731 - do not assign a lambda expression, use a def"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0fea88c0a76e0a51ba7",
    "number": 1585,
    "body": "Should fix #1576.",
    "head_branch": "fix-volatile-flags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1585 from p-l-/fix-volatile-flags\n\nFix FlagsField volatile values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb0ffa88c0a76e0a51ba8",
    "number": 1584,
    "body": "Implementing https://blog.skyplabs.net/2018/03/01/python-sniffing-inside-a-thread-with-scapy/ (using an external socket) I came to a case where the socket was closed, throwing an exception that I think should be handled.",
    "head_branch": "handle-socket-closed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Handle socket exceptions (#1584)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb100a88c0a76e0a51ba9",
    "number": 1581,
    "body": "Usual cleaning work.\r\n\r\nThe ISO-TP class overrode several methods and implemented them in the same way.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1581 from akorb/master\n\nCleaned up ISO-TP implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb101a88c0a76e0a51baa",
    "number": 1580,
    "body": "Usual cleaning work.\r\n\r\nThe ISO-TP class overrode several methods and implemented them in the same way.\r\n\r\nThe UDS class contained unused Observable Dictionaries, while usual Dictionaries are enough\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb102a88c0a76e0a51bab",
    "number": 1577,
    "body": "When NetFlow report packet contain more then one FlowSet, for example:\r\n\r\nPacket Header|First FlowSet | Second FlowSet\r\n------------ |------------ | -------------\r\nNetflowV9 Header|Template FlowSet| Data FlowSet\r\n\r\nWith current layer binding, first  Template FlowSet is parsing OK, but second(Data FlowSet) parsed as Raw. I think, this happened because dispatch_hook in NetflowDataflowsetV9 return NetflowFlowsetV9 class, and this binding `bind_layers(NetflowDataflowsetV9, NetflowDataflowsetV9)` not work, so rest of packet is Raw. \r\nHence I add two additional bindings to NetflowDataflowsetV9 class. If there is another solution, please show it.\r\n\r\n",
    "head_branch": "layer-netflow-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1577 from f0rget/layer-netflow-fixes\n\nFix NetflowV9 parsing packet with different FlowSets issue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb103a88c0a76e0a51bac",
    "number": 1575,
    "body": "…DNSSL\r\n\r\nThis PR:\r\n- adds `mysummary()`s to the classes `ICMPv6ND_RA`, `ICMPv6NDOptRouteInfo`, `ICMPv6NDOptRDNSS`, `ICMPv6NDOptDNSSL`, and `ICMPv6NDOptMTU`.\r\n- extends the `mysummary()` of `ICMPv6NDOptPrefixInfo`.\r\n- adds `icmp6ndraprefs` RFC 4191 route(r) preference enumeration values to common use in `ICMPv6ND_RA` and `ICMPv6NDOptRouteInfo`.\r\n\r\nI manually run the regression tests and they passed for the classes mentioned above (python3 test output); in addition this PR is subject to your normal test suite:\r\n```\r\npassed 988340A1 ICMPv6ND_RA - Basic Instantiation\r\npassed EAB9F5B1 ICMPv6ND_RA - Basic instantiation with empty dst in IPv6 underlayer\r\npassed 854A2794 ICMPv6ND_RA - Basic dissection\r\npassed 10B9F0CB ICMPv6ND_RA - Basic instantiation with empty dst in IPv6 underlayer\r\npassed 5F315605 ICMPv6ND_RA - Answers\r\npassed 12DB2C22 ICMPv6NDOptMTU - Basic Instantiation\r\npassed 65770798 ICMPv6NDOptMTU - Instantiation with specific values\r\npassed 83B871C6 ICMPv6NDOptMTU - Basic dissection\r\npassed 17C89A45 ICMPv6NDOptMTU - Dissection with specific values\r\npassed F594DA97 ICMPv6NDOptPrefixInfo - Basic Instantiation\r\npassed 48915433 ICMPv6NDOptPrefixInfo - Instantiation with specific values\r\npassed ACF9B9CF ICMPv6NDOptPrefixInfo - Basic Dissection\r\npassed 5CFA5B35 ICMPv6NDOptPrefixInfo - Instantiation with specific values\r\npassed 8C3E3751 ICMPv6NDOptRouteInfo - Basic Instantiation\r\npassed 44A42CE7 ICMPv6NDOptRouteInfo - Instantiation with forced prefix but no length\r\npassed D30C6789 ICMPv6NDOptRouteInfo - Instantiation with forced length values (1/4)\r\npassed 03213D9B ICMPv6NDOptRouteInfo - Instantiation with forced length values (2/4)\r\npassed D2034B7A ICMPv6NDOptRouteInfo - Instantiation with forced length values (3/4)\r\npassed 9B323128 ICMPv6NDOptRouteInfo - Instantiation with forced length values (4/4)\r\npassed 0E899A78 ICMPv6NDOptRouteInfo - Instantiation with specific values\r\npassed A9702412 ICMPv6NDOptRouteInfo - Basic dissection\r\npassed BA32308F ICMPv6NDOptRouteInfo - Dissection with specific values\r\npassed 4F509225 ICMPv6NDOptRDNSS - Basic Instantiation\r\npassed 9CD0A8FB ICMPv6NDOptRDNSS - Basic instantiation with 1 DNS address\r\npassed C58A2B38 ICMPv6NDOptRDNSS - Basic instantiation with 2 DNS addresses\r\npassed 43D6D077 ICMPv6NDOptRDNSS - Instantiation with specific values\r\npassed DC2BFF23 ICMPv6NDOptRDNSS - Basic Dissection\r\npassed 37BF7067 ICMPv6NDOptRDNSS - Dissection (with 1 DNS address)\r\npassed 9D964AF3 ICMPv6NDOptRDNSS - Dissection (with 2 DNS addresses)\r\npassed 043EECBA ICMPv6NDOptDNSSL - Basic Instantiation\r\npassed F6B0842F ICMPv6NDOptDNSSL - Instantiation with 1 search domain, as seen in the wild\r\npassed E914C420 ICMPv6NDOptDNSSL - Basic instantiation with 2 search domains\r\npassed ECC9DE2E ICMPv6NDOptDNSSL - Basic instantiation with 3 search domains\r\npassed B1DC63A2 ICMPv6NDOptDNSSL - Basic Dissection\r\npassed B96216D1 ICMPv6NDOptDNSSL - Basic Dissection with specific values\r\n```\r\n",
    "head_branch": "thediveo/icmpv6-mysummary",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1575 from TheDiveO/thediveo/icmpv6-mysummary\n\nadds mysummary()s to RAs, and to RA options MTU, route info, RDNSS, …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb103a88c0a76e0a51bad",
    "number": 1574,
    "body": "extms snads for Extended Master Secret, see RFC 7627. \r\n\r\nI just needed to do this for myself, so created PR by the way. If it does not comply to the rules or is screwed in any way, I'm probably not spending more time on this...\r\n\r\nDid not created unit test, however tested it on few real handshakes. It works. My assumptions:\r\n\r\n- The ClientHello offers using this extension via extension field. But whether it is actually going to be used is decided by the server, in a similar field inside the Server Hello record.\r\n- Scapy is already gathering the handshake messages, so they can be used easily.\r\n\r\nBased on this, I did the following adjustments:\r\n\r\n- `tls_session_update` on `TLSServerHello` record looks for the extension and notes its usage into the session object\r\n- `tls_session_update` on `ClientKeyExchange` gathers all handshake messages into one binary string and computes the hash on it. By that time, all should be available.\r\n- Then, the master secret is computed with the updated `compute_master_secret` method.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb104a88c0a76e0a51bae",
    "number": 1573,
    "body": "Fixes #1567.",
    "head_branch": "fix-linux-no-ip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1573 from p-l-/fix-linux-no-ip\n\nLinux: fix read_routes() when an interface has no IP address"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb105a88c0a76e0a51baf",
    "number": 1571,
    "body": "This PR:\r\n- adds Travis tests (because Python 3.7 is not available by default in Travis yet, it is specifying the distro)\r\n- fixes windows on 3.7\r\n- fixes http2 on 3.7\r\n- stabilize some tests (networking + ppi_geotag)\r\n\r\nWatching https://github.com/travis-ci/travis-ci/issues/9815\r\n\r\nfixes https://github.com/secdev/scapy/issues/1570\r\nfixes https://github.com/secdev/scapy/issues/1649",
    "head_branch": "3.7-travis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1571 from gpotter2/3.7-travis\n\nPython 3.7 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb106a88c0a76e0a51bb0",
    "number": 1569,
    "body": "A while ago i implemented the OPC UA layer for scapy.\r\nAlthough this isn't really finished i thought it would be useful to create a PR so that if someone else considers implementing the OPC UA layer they can start based off my work, instead of starting from scratch.\r\nI currently don't have the time to finish this but might come back to it later.\r\n\r\nImplemented:\r\n- Schema Parser to parse OPC UA schema files\r\n- Basic types\r\n- Encryption (only two security policies for now)\r\n\r\nCurrently missing:\r\n- Unit tests\r\n- The Automata should be reworked since they're ugly right now\r\n- Pub/Sub\r\n\r\nThe performance is still really awful. Since I'm still rather new to python maybe someone can have a look at where i went wrong on the performance side.",
    "head_branch": "feature/opcua",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb107a88c0a76e0a51bb1",
    "number": 1568,
    "body": "Just to check https://github.com/secdev/scapy/issues/1570",
    "head_branch": "3.7-travis",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb108a88c0a76e0a51bb2",
    "number": 1566,
    "body": "I think DNS service can be put on another server so DNS should not be gateway IP.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb108a88c0a76e0a51bb3",
    "number": 1564,
    "body": "Reverts secdev/scapy#1521\r\n@p-l- ",
    "head_branch": "revert-1521-init-version",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1564 from secdev/revert-1521-init-version\n\nRevert \"Export-subst util: change format\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb109a88c0a76e0a51bb4",
    "number": 1563,
    "body": "I think DNS service can be put on another server so DNS should not be gateway IP.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb10aa88c0a76e0a51bb5",
    "number": 1562,
    "body": "Adds smaller text with the number of bits next to each BitField in a packet:\r\n![image](https://user-images.githubusercontent.com/8326175/44153141-bd4c74b6-a0ea-11e8-92a6-2cfd12202aa8.png)\r\n\r\nI think `\\scriptsize` is about right visually\r\n\r\nWill still go wider than the space set aside for it, if the field name is very long (try it with a field named `arbitrarily-long-field-name`). I don't think that's a big issue.\r\n\r\nI also changed `fname` to `field`, as that's what it actually is. To print the field name, we were calling `fname.name` which doesn't make sense.",
    "head_branch": "Add-bits-to-canvas_dump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1562 from brianbienvenu/Add-bits-to-canvas_dump\n\nAdd bits to canvas_dump()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb10ba88c0a76e0a51bb6",
    "number": 1559,
    "body": "This PR:\r\n- adds USBpcap support (Windows only)\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/44124466-a0995dd8-a02d-11e8-913e-59ee31bf953e.png)",
    "head_branch": "usb-layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1559 from gpotter2/usb-layer\n\nUSBpcap support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb10ca88c0a76e0a51bb7",
    "number": 1558,
    "body": "Copied from doc/scapy/build_dissect.rst",
    "head_branch": "feature/addfield-getfield-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1558 from doismellburning/feature/addfield-getfield-docs\n\nImprove documentation for Field.addfield and Field.getfield"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb10ca88c0a76e0a51bb8",
    "number": 1557,
    "body": "Right now we're able to create EPS and PDF files from Packet objects using `psdump()` and `pdfdump()`. I wanted to make SVG files - and PyX supports that out of the box with `writeSVGfile()`.\r\n\r\nThis PR adds `packet.svgdump()` which does exactly the same as `pdfdump()`, but makes an SVG file instead.\r\n\r\nTested on Windows 10 - I presume the Linux / OSX open handler will work:\r\n```svgreader = \"open\" if DARWIN else \"xdg-open\"```",
    "head_branch": "Add-svgdump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1557 from brianbienvenu/Add-svgdump\n\nAdd packet.svgdump()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb10da88c0a76e0a51bb9",
    "number": 1555,
    "body": "Adds validation and string-to-byte conversion of ipv4 addresses to `inet_pton` for when `socket.inet_pton` is unavailable, removing the dependency on `socket.inet_aton` in this case.\r\n\r\nfixes #1026 \r\n",
    "head_branch": "inet_pton-mapped-addrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb10ea88c0a76e0a51bba",
    "number": 1553,
    "body": "Errors were not catched when calling `setmonitor()`",
    "head_branch": "pack-passthru",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1553 from gpotter2/pack-passthru\n\nCatch errors when using _encapsulate_admin"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb10fa88c0a76e0a51bbb",
    "number": 1551,
    "body": "- fixed import path for UDS\r\nUDS.py has been moved to `contrib/automotive` some time ago but one import hasn't been updated\r\n\r\n- fixed binding between TCP and DoIP\r\nOnly one binding between two layers is possible. Thus only the last defined `bind_layers` call will have effect, as previous ones are overwritten.\r\n\r\n- underlaying -> underlying\r\n\r\n\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1551 from akorb/master\n\nMinor fixes and refactoring for UDS (automotive)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb110a88c0a76e0a51bbc",
    "number": 1550,
    "body": "This PR is a second (and cleaner) attempt to fix https://github.com/secdev/scapy/issues/1484\r\n\r\nfixes https://github.com/secdev/scapy/issues/1484",
    "head_branch": "multit-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1550 from gpotter2/multit-fix\n\nFix MultipleTypeField initialization"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb111a88c0a76e0a51bbd",
    "number": 1549,
    "body": "Tests are failing on OSX since the recent Travis OSX image update.\r\n\r\nSince the Travis Xcode 9.4 images, python 2.7 and python 3 are installed by default.\r\n\r\nAlso, `python —version` seems broken on those versions (see travis logs)\r\nhttps://travis-ci.org/secdev/scapy/builds/412590281",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1549 from secdev/gpotter2-patch-1\n\nTravis/OSX: Remove PIP detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb111a88c0a76e0a51bbe",
    "number": 1548,
    "body": "allows usage without specifiying the CAN interface (using the default, can0)\r\n`socket = CANSocket()`\r\n\r\nThe default CAN interface is set during initialization of the CANSocket object, but it binds to the one given to the constructor. This is inconsistent and doesn't allow to use the upper code, which shows the most common usage.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1548 from akorb/master\n\nUse default CAN interface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb112a88c0a76e0a51bbf",
    "number": 1544,
    "body": "This pull request adds little endian versions of the existing X3BytesField and ThreeBytesField - LEX3BytesField and LEThreeBytesField. I had an obscure device using this format.\r\n\r\nAlso updated documentation to include both of the new fields, and also list the existing ThreeBytesField.\r\n\r\nHave tested, and I think the byte fiddling in `addfield()` and `getfield()` is correct.",
    "head_branch": "Add-LEX3BytesField",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1544 from brianbienvenu/Add-LEX3BytesField\n\nAdd LEX3BytesField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb113a88c0a76e0a51bc0",
    "number": 1543,
    "body": "Adds conf.recv_poll_rate, which is used in the _get_pkt function in sendrecv.py, allowing the user to configure the socket poll rate. \r\n\r\nUsing scapy on Ubuntu 18.04 with default settings, I see a ~50ms delay before sr(..., timeout=0.001) returns when no response packet is sent. This seems to be caused by the slow socket poll rate. \r\n\r\nSome folks may care about the additional CPU usage, so making it runtime tunable seems a better approach here.\r\n\r\nA better approach here may be to pass the exact timeout through to the select(), but I wasn't sure how to implement that.\r\n\r\n`cd tests &&  ./run_tests_py3`\r\nBefore patch: `PASSED=1151 FAILED=64`\r\nAfter patch: `PASSED=1151 FAILED=64`",
    "head_branch": "recv_poll_rate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1543 from brianbienvenu/recv_poll_rate\n\nAdd receive socket poll rate configurability"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb114a88c0a76e0a51bc1",
    "number": 1541,
    "body": "- consistency for some similar messages\r\n\r\n- \"then\" is not part of the URL",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1541 from akorb/master\n\nConsistency changes and added space"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb115a88c0a76e0a51bc2",
    "number": 1539,
    "body": "As said #399 for finish commenting in6_ifaceidtomac in utils6.py\r\n\r\nI did my best to explain how the function worked.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "commenting in6_ifaceidtomac function behavior (#1539)\n\n* commenting in6_ifaceidtomac function behavior\r\n\r\nI did my best to comment the function behavior as requested on the contribution roadmap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb116a88c0a76e0a51bc3",
    "number": 1538,
    "body": "The size of the ioctl(2) argument is embeded in the constant.  Struct\r\nbpf_program is 16 bytes on 64 bit architectures but only 8 bytes\r\non 32 bit architectures.  Use ctypes to calculate the size dynamically\r\nin Python and adjust BIOCSETF.  Fixes sniff(filter=\"ip\") on\r\nOpenBSD/i386.\r\n",
    "head_branch": "ioctl-sizeof",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1538 from bluhm/ioctl-sizeof\n\nCalculate BIOCSETF ioctl constant for 32 bit architectures."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb117a88c0a76e0a51bc4",
    "number": 1534,
    "body": "This PR performs some various clean-ups around several modules, especially:\r\n- by using `dispatch_hook` to simplify custom-made `PacketListField` (inet6)\r\n- by merging the logic behind very similar functions (`defrag` and `defragment`)\r\n- by creating a universal class for very similar class (`ppi_geotag` and `asn1`)\r\n- removes the extremely ugly OpenFlow binding mechanism (`TCP.guess_payload_class = OpenFlow`)\r\n- **general OpenFlow overhaul, removing hundreds of duplicated things (+a few breaking changes: length all renamed to len for consistency)**\r\n\r\nThis PR led to the discovery of several bugs:\r\n- some IPv6 options could be wrongly decoded when they were more than 1 (Raw)\r\n- the `load_*` will now reload a module if already loaded. This will allow modules that overwrite each other to be used in any importation order\r\n\r\nI used `codeclimate` to locate the duplication issues.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1534 from gpotter2/master\n\n[Contribs] Big cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb117a88c0a76e0a51bc5",
    "number": 1533,
    "body": "The DHCPOptions test are pretty useless in their current state:\r\n- some tests are silently failing\r\n- some tests make no real sense or are wrongly built\r\n- some tests don’t even pass on python 3",
    "head_branch": "dhcp-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1533 from gpotter2/dhcp-tests\n\nFix DHCP tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb118a88c0a76e0a51bc6",
    "number": 1532,
    "body": "This PR:\r\n- Removes lots of duplicates code from arch/Linux\r\n- Adds support for the `monitor` argument on linux ",
    "head_branch": "dupli-linux",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1532 from gpotter2/dupli-linux\n\nRemove duplicated code in arch/linux"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb119a88c0a76e0a51bc7",
    "number": 1531,
    "body": "fixes https://github.com/secdev/scapy/issues/1530",
    "head_branch": "travis-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1531 from gpotter2/travis-fix\n\nTravis fix - breakfailed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb11aa88c0a76e0a51bc8",
    "number": 1529,
    "body": "Hello,\r\n\r\nWith the objective of closing ProfinetIO related PR, this one takes the @X-Cli #443 PR, apply it upstream and adapt it for py3.\r\nBreakdown of the modifications can be seen in the unsquashed version at https://github.com/smainand/scapy/tree/new_v_pnio\r\n\r\nSeb\r\n\r\nfixes #443",
    "head_branch": "new_v_pnio_squashed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1529 from smainand/new_v_pnio_squashed\n\napply X-Cli rewrite of pnio layer (#443)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb11ba88c0a76e0a51bc9",
    "number": 1528,
    "body": "This PR:\r\n- fixes the issues mentioned in https://github.com/secdev/scapy/issues/1476\r\n- Updates the doc of `ls()` and  `lsc()` to their current behavior\r\n- fixes that some scapy arguments (as specified in the scapy.1) cannot be used at the same time as IPython\r\n- fixes `ls()` behavior & add a test\r\n\r\nAll those fixes are discovered thanks to the edit of scapy.1 and are small... I could create several PRs but I am a bit lazy for that....\r\n\r\nfixes https://github.com/secdev/scapy/issues/1476",
    "head_branch": "scapy1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1528 from gpotter2/scapy1\n\nFixes Scapy.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb11ca88c0a76e0a51bca",
    "number": 1527,
    "body": "This PR adds support for the following DLTs:\r\n- DLT_BLUETOOTH_HCI_H4_WITH_PHDR\r\n- DLT_BLUETOOTH_LE_LL_WITH_PHDR\r\n- Small simplification of the HCI_ACL_Hdr mechanic\r\n\r\nContinuation of https://github.com/secdev/scapy/pull/1506",
    "head_branch": "bt-improv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1527 from gpotter2/bt-improv\n\nBluetooth[4LE]: support more DLTs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb11ca88c0a76e0a51bcb",
    "number": 1526,
    "body": "Tiny fix after #1463\r\n\r\nSelf merged as typo",
    "head_branch": "gpotter2-patch-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "automative: informations->information (#1526)\n\ninformations->information"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb11da88c0a76e0a51bcc",
    "number": 1524,
    "body": "fixes https://github.com/secdev/scapy/issues/1504\r\n\r\nEdit: I forgot that using this feature creates a branch on secdev/scapy. Will delete it afterwards",
    "head_branch": "gpotter2-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1524 from secdev/gpotter2-patch-1\n\nRevert Winpcap fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb11ea88c0a76e0a51bcd",
    "number": 1523,
    "body": "This PR:\r\n- adds an asynchronous way of stopping `sniff`\r\n- **WILL BREAK started_callback usage. However, it only exists in master (was not on 2.4.0), so we can allow such a thing**\r\n- fixes https://github.com/secdev/scapy/issues/1505\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/42734921-29aaa612-884c-11e8-9db9-216e100666ad.png)\r\n\r\nI will add the unit tests if we agree on the PR",
    "head_branch": "stop-callback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb11fa88c0a76e0a51bce",
    "number": 1522,
    "body": "This PR:\r\n- fixes `lsc()` printing by adding extra docs to the commands listed\r\n- improves a few of those commands / remove duplicated code\r\n- fixes a small bug in `__iterlen__` that could result on some layers (e.g. DHCP) to the `sr()` suite never ending\r\n\r\nfixes https://github.com/secdev/scapy/issues/1478",
    "head_branch": "command-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1522 from gpotter2/command-fixes\n\nScapy.commands improvement + doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb120a88c0a76e0a51bcf",
    "number": 1521,
    "body": "This PR:\r\n- moves VERSION from `scapy/scapy/` to `scapy/` which sounds more logical\r\n- replaces `'$Format:%h %d$'` (exported as `c32159d45 (HEAD -> master)`) by `'$Format:%h$'` (exported as `c32159d45`), so that we only depend on the commit state\r\n\r\nfixes https://github.com/secdev/scapy/issues/1520",
    "head_branch": "init-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1521 from gpotter2/init-version\n\nExport-subst util: change format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb120a88c0a76e0a51bd0",
    "number": 1517,
    "body": "This PR is an attempt of adding a check of scapy’s garbage disposal ==> in order to detect memory leaks.\r\n\r\n- currently, we trigger all Warnings and fail on it. This includes ResourceWarning, DeprecationWarning, SyntaxWarning\r\n\r\nfixes https://github.com/secdev/scapy/issues/1516",
    "head_branch": "garbage-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1517 from gpotter2/garbage-test\n\nAdd test to check python Warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb121a88c0a76e0a51bd1",
    "number": 1515,
    "body": "**Checklist:**\r\n- [x] If you are new to Scapy: I have checked https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md (esp. section submitting-pull-requests)\r\n- [x] I squashed commits belonging together\r\n- [x] I added unit tests or explained why they are not relevant\r\n- [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\nThe added test case demonstrates the bug:\r\n```\r\n-- Run Thu Jul  5 22:06:04 2018 from [scapy/contrib/mqtt.uts] by UTscapy\r\n\r\nPassed=14\r\nFailed=1\r\n\r\n\r\n######\r\n## MQTT protocol test\r\n######\r\n\r\n\r\n###(014)=[failed] MQTT without payload\r\n\r\n>>> p = MQTT()\r\n>>> assert(bytes(p) == b'\\x10\\x00')\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"scapy/packet.py\", line 354, in __str__\r\n    return str(self.build())\r\n  File \"scapy/packet.py\", line 464, in build\r\n    p = self.do_build()\r\n  File \"scapy/packet.py\", line 451, in do_build\r\n    return self.post_build(pkt, pay)\r\n  File \"scapy/packet.py\", line 477, in post_build\r\n    return pkt + pay\r\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'str'\r\n```\r\nIf an MQTT packet has no payload and the length is therefore 0, the method addfield did return None.\r\n\r\nThe PR fixes the method addfield to return `s + b\"\\x00`, when the length is 0.\r\n\r\nThe PR additionally changes the VariableFieldLenField to return a randval() according to MQTT [specification](http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718023).",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1515 from ramsaut/master\n\nMQTT VariableFieldLenField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb122a88c0a76e0a51bd2",
    "number": 1514,
    "body": "This PR adds support for multiple authentication types in the Legacy Nak message (this is used to negotiate an authentication method).",
    "head_branch": "eap-allow-multiple-auth-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1514 from plorinquer/eap-allow-multiple-auth-types\n\nAllow multiple authentication types in the Legacy Nak message."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb123a88c0a76e0a51bd3",
    "number": 1513,
    "body": "This specifies IPv4 and IPv6 inside an MPLS label using the Explicit\r\nNULL labels, which at least makes building a working packet easier.\r\n\r\nThis is just a checklist to guide you. You can remove it safely.\r\n\r\n\r\n**Checklist:**\r\n- [ ] If you are new to Scapy: I have checked https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md (esp. section submitting-pull-requests)\r\n- [ ] I squashed commits belonging together\r\n- [ ] I added unit tests or explained why they are not relevant\r\n- [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n\r\n< brief description what this PR will do, e.g. fixes broken dissection of XXX >\r\n\r\n< if required - short explanation why you fixed something in a way that may look more complicated as it actually is >\r\n\r\n< if required - outline impacts on other parts of the library >\r\n\r\nfixes #< add issue number here if appropriate, else remove this line>\r\n",
    "head_branch": "mpls-explicit-null",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1513 from dgwynne/mpls-explicit-null\n\nRFC 3032 says labels 0 and 2 are for IPv4 and IPv6 respectively"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb124a88c0a76e0a51bd4",
    "number": 1512,
    "body": "While processing an existing capture, I noticed that the last 20 bytes\r\nof a TCP segment were missing in `pkt[TCP].load`. It turns out that\r\nthere were wrongly parsed as padding.\r\n\r\nThe IP Total Length header can be zero in case TSO is applied. Assume\r\nthat Total Lengths which cannot fit the IP header to have no padding.\r\n___\r\nTesting note: the new regression test case failed before this patch and passes after the patch.\r\n\r\nThe full test suite is failing though for unrelated reasons:\r\n```\r\nPASSED=1146 FAILED=66\r\n### Writing output...\r\nTraceback (most recent call last):\r\n  File \"./../scapy/tools/UTscapy.py\", line 976, in <module>\r\n    sys.exit(main(sys.argv[1:]))\r\n  File \"./../scapy/tools/UTscapy.py\", line 958, in main\r\n    glob_output = pack_html_campaigns(runned_campaigns, glob_output, LOCAL, glob_title)\r\n  File \"./../scapy/tools/UTscapy.py\", line 632, in pack_html_campaigns\r\n    External_Files.UTscapy_js.write(os.path.dirname(test_campaign.output_file.name))  # noqa: E501\r\nAttributeError: 'str' object has no attribute 'name'\r\n```\r\n(before this patch: `PASSED=1145 FAILED=66`)",
    "head_branch": "ip-tso-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1512 from Lekensteyn/ip-tso-fixes\n\ninet: fix incorrect parsing of IP payload as padding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb125a88c0a76e0a51bd5",
    "number": 1511,
    "body": "This PR is an attempt of adding DNS compression to scapy.\r\n\r\n- Remove duplicated code\r\n- Add DNS compression support: `dns_compress(pkt)` function\r\n- Fix DNSRRSRV\r\n- Rename DNSgetstr into dns_get_str (with deprecated old DNSgetstr)\r\n- Adds `clear_cache` function, required to test DNS compression",
    "head_branch": "dns-compression",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1511 from gpotter2/dns-compression\n\nDNS improvements (add compression & cleanup) + Fix DNSRRSRV + tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb126a88c0a76e0a51bd6",
    "number": 1510,
    "body": "IANA IP protocol assignments agrees.\r\n\r\nThis is just a checklist to guide you. You can remove it safely.\r\n\r\n\r\n**Checklist:**\r\n- [ ] If you are new to Scapy: I have checked https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md (esp. section submitting-pull-requests)\r\n- [ ] I squashed commits belonging together\r\n- [ ] I added unit tests or explained why they are not relevant\r\n- [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n\r\nThis PR adds bindings for MPLS on top of IP / IPv6",
    "head_branch": "mpls-in-ip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1510 from dgwynne/mpls-in-ip\n\nAdd binding for MPLS in IP as per RFC 4023"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb126a88c0a76e0a51bd7",
    "number": 1508,
    "body": "**Checklist:**\r\n- [x] If you are new to Scapy: I have checked https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md (esp. section submitting-pull-requests)\r\n- [x] I squashed commits belonging together\r\n- [x] I added unit tests or explained why they are not relevant\r\n- [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\nThe added test case demonstrates the bug:\r\n```\r\n-- Run Thu Jul  5 22:06:04 2018 from [scapy/contrib/mqtt.uts] by UTscapy\r\n\r\nPassed=14\r\nFailed=1\r\n\r\n\r\n######\r\n## MQTT protocol test\r\n######\r\n\r\n\r\n###(014)=[failed] MQTT without payload\r\n\r\n>>> p = MQTT()\r\n>>> assert(bytes(p) == b'\\x10\\x00')\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"scapy/packet.py\", line 354, in __str__\r\n    return str(self.build())\r\n  File \"scapy/packet.py\", line 464, in build\r\n    p = self.do_build()\r\n  File \"scapy/packet.py\", line 451, in do_build\r\n    return self.post_build(pkt, pay)\r\n  File \"scapy/packet.py\", line 477, in post_build\r\n    return pkt + pay\r\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'str'\r\n```\r\nIf an MQTT packet has no payload and the length is therefore 0, the method addfield did return None.\r\n\r\nThe PR fixes the method addfield to return `s + b\"\\x00`, when the length is 0.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb127a88c0a76e0a51bd8",
    "number": 1506,
    "body": "Hi,\r\n\r\nI added a few missing (ATT) bits for a better support of Bluetooth LE.\r\nA lot of GATT stuff works out of the box by reusing EIR_Hdr instead of the own BTLE_AdvData.\r\nThe PPI_FieldHeader is switched with the generic PPI classes.\r\n\r\nGreetings",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "better Bluetooth Low Energy support (#1506)\n\nBTLE: more ATT support, better PPI integration, general fixes & tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb128a88c0a76e0a51bd9",
    "number": 1502,
    "body": "This file is surely one of the least readable of scapy, due to its very old age and importation, but it's not a reason to criticize the entire's scapy codebase.",
    "head_branch": "sixlowpan-cleanery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Clean SixLoWPAN (#1502)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb129a88c0a76e0a51bda",
    "number": 1501,
    "body": "Before I go to the trouble of creating regression tests I was wondering if adding this feature is acceptable? It seems strange that it hasn't been done before as there are a lot of people asking and it's always done in final app by various methods...\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add method to list all layers in a packet (#1501)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb12aa88c0a76e0a51bdb",
    "number": 1500,
    "body": "This implements an unimplemented part of the 6lowpan code.\r\n\r\nBecause I had to read the abomination you call \"code\", I decided to not read your contribution guidelines in return. I also didn't bother to refactor the duplicated code.\r\n\r\nI did test this patch in my application, but not using the automated test I don't know about because I did not read your contribution guidelines.\r\n\r\nPlease don't contact me. Your code is horrible. I will forever be disgusted.\r\n\r\nP.S.: Thanks for providing scapy. I quite enjoyed using it as a kid.",
    "head_branch": "fix-6lo-dam3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb12aa88c0a76e0a51bdc",
    "number": 1499,
    "body": "Small mistake. ",
    "head_branch": "speedymon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1499 from gpotter2/speedymon\n\nTiny cache fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb12ba88c0a76e0a51bdd",
    "number": 1497,
    "body": "Another speed improvement, especially when looping sniff calls",
    "head_branch": "speedymon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1497 from gpotter2/speedymon\n\nWin: Cache monitor mode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb12ca88c0a76e0a51bde",
    "number": 1495,
    "body": "\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "dissect ZigbeeAppCommandPayload APS_CMD_SKKE_1 packets (#1495)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb12da88c0a76e0a51bdf",
    "number": 1493,
    "body": "Following the previous codespell PR",
    "head_branch": "codespell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1493 from gpotter2/codespell\n\nApply spellcheck to non-code files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb12ea88c0a76e0a51be0",
    "number": 1489,
    "body": "This PR:\r\n- unifies all winpcapy loading functions into one: current way (old code imported ported from scapy3k) loads 3 times all interfaces, I fixed it\r\n- smooth ~2-3 seconds boost while loading on windows ",
    "head_branch": "winpcapy-speed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1489 from gpotter2/winpcapy-speed\n\nSpeedup winpcapy loading"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb12fa88c0a76e0a51be1",
    "number": 1488,
    "body": "Had this waiting for pcapy to be released",
    "head_branch": "pcapdnetremaster-pcapy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1488 from gpotter2/pcapdnetremaster-pcapy\n\nPcapy: support monitor mode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb130a88c0a76e0a51be2",
    "number": 1487,
    "body": "This PR:\r\n- fixes various grammar & vocabulary fixes across scapy using `codespell`.\r\n- adds some grammar spelling regression tests\r\n\r\nOnly 2 variables are actually modified:\r\n- `endianess` -> `endianness` (from the very very recent PRs, it's ok to change it right now)\r\n- `additionnal` -> `additional` (from StrStopField. It is the less-used field in entire scapy, and the files using it are not even calling it by its name, but as arguments)\r\n\r\n**_Might be annoying for history :/ feel free to tell me if that's a change too big._**",
    "head_branch": "codespell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1487 from gpotter2/codespell\n\nGrammar fixes - British mode enabled"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb131a88c0a76e0a51be3",
    "number": 1486,
    "body": "This PR:\r\n- adds some documentation for the Pipetool engines.\r\n\r\nLet's try to make it popular",
    "head_branch": "pipetool-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1486 from gpotter2/pipetool-doc\n\nFancy PipeTool documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb131a88c0a76e0a51be4",
    "number": 1485,
    "body": "fixes https://github.com/secdev/scapy/issues/1484\r\n\r\nIs certainly improvable, any ideas will be appreciated",
    "head_branch": "socks-testfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb132a88c0a76e0a51be5",
    "number": 1483,
    "body": "fixes https://github.com/secdev/scapy/issues/1480\r\n\r\nI noticed that in the doc, it is said that\r\n\r\n```\r\nx.graph(ASres=conf.AS_resolver, other args):\r\n  ASres=None          : no AS resolver => no clustering\r\n  ASres=AS_resolver() : default whois AS resolver (riswhois.ripe.net)\r\n  ASres=AS_resolver_cymru(): use whois.cymru.com whois database\r\n  ASres=AS_resolver(server=\"whois.ra.net\")\r\ntype: output type (svg, ps, gif, jpg, etc.), passed to dot's \"-T\" option\r\ntarget: filename or redirect. Defaults pipe to Imagemagick's display program\r\nprog: which graphviz program to use\r\n```\r\nCurrently, when `None` is set, it selects the default ASres anyway. This PR matches the doc",
    "head_branch": "whois-minorbug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1483 from gpotter2/whois-minorbug\n\nMatch the graph() documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb133a88c0a76e0a51be6",
    "number": 1479,
    "body": "- import is missing for `os.startfile` In pdfdump",
    "head_branch": "gpotter2-patch-1-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1479 from secdev/gpotter2-patch-1-1\n\nMissing import"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb134a88c0a76e0a51be7",
    "number": 1477,
    "body": "This PR is a rebased version of https://github.com/secdev/scapy/pull/671 with some minor changes:\r\n- small fix in file access detection\r\n- revert new UTscapy/ folder and local storage for .js and .css files, as it was done in the PR, so that we keep the html files into a single one. The raw data has been updated and there is a PR in https://github.com/secdev/secdev.github.io/pull/8 to get them pushed.\r\n\r\nNote: this PR requires https://github.com/secdev/secdev.github.io/pull/8\r\nNote2: https://github.com/secdev/scapytain/pull/3 requires this PR\r\n\r\n**Please squash this PR when merging it**",
    "head_branch": "utscapynice",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow interrupting tests (#1477)\n\n* tools/UTscapy: split run_campaign\r\n\r\nDefine a new function to limit indentation in following commits.\r\n\r\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>\r\n\r\n* tools/UTscapy: fix trailing ws\r\n\r\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>\r\n\r\n* tools/UTscapy: use __nonzero__ for UnitTest\r\n\r\nUse the __nonzero__ method (__bool__ in python3) to get the result of a\r\nUnitTest.\r\n\r\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>\r\n\r\n* tools/UTscapy: use with for opening files\r\n\r\nTest files were never closed.\r\nstdout could be closed.\r\nAn exception could be raise before closing output file.\r\n\r\nThe with statement protects from leaking file descriptors.\r\n\r\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>\r\n\r\n* tools/UTscapy: move to a separate module\r\n\r\nUse in the next commit.\r\n\r\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>\r\n\r\n* tools/UTscapy: add local js and css files\r\n\r\nJS and CSS files for HTML report are retrieved from secdev or extracted\r\nfrom a base64 bziped version.\r\nThis is not really convenient if changes are required.\r\n\r\nUse a copy of them from the repository.\r\n\r\nRemove the obsolete -l option.\r\n\r\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>\r\n\r\n* tools/UTscapy: allow interrupting a campaign\r\n\r\nUsing ^C during a test will now be detected and will interrupt the\r\ncurrent campaign.\r\nReport will still be generated.\r\n\r\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>\r\n\r\n* tools/UTscapy: add option to break on failed campaign\r\n\r\nWhen running several campaign, it can be interesting to run everything\r\ndespite the fact that a campaign has failed.\r\nAdd an option to keep the possibility to break at the first failed\r\ncampaign.\r\n\r\nWARNING: this change the default current behavior. Travis configuration\r\nfiles have been modified to keep current behavior.\r\n\r\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>\r\n\r\n* Fix writing-to-file access detection\r\n\r\n* Fix load_module and load_contrib to also support extra args\r\n\r\n* Wait for process to finish in do_graph"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb135a88c0a76e0a51be8",
    "number": 1475,
    "body": "As stated [here](http://vpython.org/contents/announcements/evolution.html), the \"builtin VPython\" is deprecated and has stopped being developed.\r\n\r\n> After extended discussions we have decided that these two environments, GlowScript VPython and VPython 7, will be the VPython implementations to be further supported and developed.  The older “Classic” VPython, which required the separate installation of Python 2.7 and visual (as well as Tcl on the Macintosh), will continue to exist in its current form, but will no longer receive updates or bug fixes, though Matt Craig has offered to continue to build an Anaconda conda package until the official end-of-life of Python 2.7 in 2020, as long as building the package does not require substantial modification to the Classic VPython codebase.\r\n\r\n This PR migrates `trace3d()` to Vpython 7 (aka Vpython-Jupyter)\r\n\r\n```\r\nClassic VPython:    version is ['X.Y', 'release']\r\nGlowScript VPython: version is ['X.Y', 'glowscript']\r\nVPython 7:          version is ['X.Y.Z', 'jupyter']\r\nand in VPython 7, the version of the GlowScript\r\ngraphics library is given by\r\n                  GSversion is ['X.Y', 'glowscript']\r\n```\r\n\r\nNotes:\r\n- Previous `trace3d()` function had integrated a way to move the object while dragging the background. This behavior is now implemented by default using shift-drag.\r\n- Previous `trace3d()` function would detect shift+click and execute a sr scan. This is no more possible due to the last point, so migrated shift+click to double-click.\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/41281462-bc3f03c2-6e31-11e8-8759-1f11619456e7.png)\r\n![image](https://user-images.githubusercontent.com/10530980/41281527-ea020b74-6e31-11e8-9c50-29a4f1cfe7ad.png)\r\n",
    "head_branch": "vpython-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1475 from gpotter2/vpython-update\n\nVpython update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb136a88c0a76e0a51be9",
    "number": 1474,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n\r\n**Checklist:**\r\n- [x] If you are new to Scapy: I have checked https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md (esp. section submitting-pull-requests)\r\n- [x] I squashed commits belonging together\r\n- [x] I added unit tests or explained why they are not relevant\r\n- [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n\r\n< brief description what this PR will do, e.g. fixes broken dissection of XXX >\r\n\r\n< if required - short explanation why you fixed something in a way that may look more complicated as it actually is >\r\n\r\n< if required - outline impacts on other parts of the library >\r\n\r\nfixes #< add issue number here if appropriate, else remove this line>\r\n",
    "head_branch": "minor-uds-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1474 from polybassa/minor-uds-fix\n\nMinor improvement to uds packet implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb137a88c0a76e0a51bea",
    "number": 1473,
    "body": "…yTlv class\r\n\r\nThis PR fixes an issue when parsing for ISIS_ExternalIpReachabilityTlv. The actual class name had TLV capitalized which caused a KeyError issue when trying to parse the TLV class\r\n\r\nTested using the following PCAP: http://packetlife.net/captures/ISIS_external_lsp.cap",
    "head_branch": "isis-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixing TLV keyerror issue when parsing for ISIS_ExternalIpReachabilit… (#1473)\n\n* fixing TLV keyerror issue when parsing for ISIS_ExternalIpReachabilityTlv class\r\n* add ISIS_ExternalIpReachabilityTlv unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb137a88c0a76e0a51beb",
    "number": 1472,
    "body": "No code changes... just movements",
    "head_branch": "automotive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1472 from polybassa/automotive\n\nMove automotive specific files in the correct place"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb138a88c0a76e0a51bec",
    "number": 1471,
    "body": "List of random contrib tests to stabilize coverage",
    "head_branch": "moretests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1471 from gpotter2/moretests\n\nRandom contrib tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb139a88c0a76e0a51bed",
    "number": 1470,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n\r\n**Checklist:**\r\n- [x] If you are new to Scapy: I have checked https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md (esp. section submitting-pull-requests)\r\n- [x] I squashed commits belonging together\r\n- [x] I added unit tests or explained why they are not relevant\r\n- [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n\r\n< brief description what this PR will do, e.g. fixes broken dissection of XXX >\r\n\r\n< if required - short explanation why you fixed something in a way that may look more complicated as it actually is >\r\n\r\n< if required - outline impacts on other parts of the library >\r\n\r\nfixes #< add issue number here if appropriate, else remove this line>\r\n",
    "head_branch": "uds-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1470 from polybassa/uds-fix\n\nImprove hashret and answers for UDS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb13aa88c0a76e0a51bee",
    "number": 1469,
    "body": "As suggested by @guedou ",
    "head_branch": "build-sphinx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1469 from gpotter2/build-sphinx\n\nSphinx test in TOX"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb13ba88c0a76e0a51bef",
    "number": 1468,
    "body": "This PR tries to make cryptography based tests run on all platforms, (even PyPy). Currently, they are skipped when run on PyPy, because cryptography used not to support PyPy.\r\n\r\nThis *should* not be the case anymore in recent versions\r\n\r\nfixes https://github.com/secdev/scapy/issues/1307 ?",
    "head_branch": "pypy-crypto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1468 from gpotter2/pypy-crypto\n\nPyPy: cryptography tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb13ba88c0a76e0a51bf0",
    "number": 1467,
    "body": "This PR applies the patch provided in https://github.com/secdev/scapy/issues/1178\r\n\r\nfixes https://github.com/secdev/scapy/issues/1178",
    "head_branch": "ikev2-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1467 from gpotter2/ikev2-fix\n\nApply @Spinlogic fix to IKEv2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb13ca88c0a76e0a51bf1",
    "number": 1466,
    "body": "Implement the [EXT bit](https://www.radiotap.org/#extended-presence-masks) in RadioTap\r\n\r\nfixes https://github.com/secdev/scapy/issues/1465\r\n",
    "head_branch": "dot11-ext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1466 from gpotter2/dot11-ext\n\nSupport RadioTap extended presence mask"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb13da88c0a76e0a51bf2",
    "number": 1464,
    "body": "It's really worse if we try to turn this clear HTML code into multiline...\r\n\r\nfixes https://github.com/secdev/scapy/issues/1462",
    "head_branch": "utscapy-pepin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1464 from gpotter2/utscapy-pepin\n\nFix UTScapy html printing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb13ea88c0a76e0a51bf3",
    "number": 1463,
    "body": "This is just a checklist to guide you. You can remove it safely.\r\n\r\n\r\n**Checklist:**\r\n- [x] If you are new to Scapy: I have checked https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md (esp. section submitting-pull-requests)\r\n- [x] I squashed commits belonging together\r\n- [x] I added unit tests or explained why they are not relevant\r\n- [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n\r\n< brief description what this PR will do, e.g. fixes broken dissection of XXX >\r\n\r\n< if required - short explanation why you fixed something in a way that may look more complicated as it actually is >\r\n\r\n< if required - outline impacts on other parts of the library >\r\n\r\nfixes #< add issue number here if appropriate, else remove this line>\r\n",
    "head_branch": "GMLAN",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1463 from polybassa/GMLAN\n\nImplementation of GMLAN Protocol for Scapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb13fa88c0a76e0a51bf4",
    "number": 1461,
    "body": "- Updated website link\r\n- Better Readme.md file management\r\n- Add `project_urls`",
    "head_branch": "setupimp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1461 from gpotter2/setupimp\n\nSmall setup.py fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb140a88c0a76e0a51bf5",
    "number": 1460,
    "body": "**Checklist:**\r\n- [X] If you are new to Scapy: I have checked https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md (esp. section submitting-pull-requests)\r\n- [X] I squashed commits belonging together\r\n- [X] I added unit tests or explained why they are not relevant → it was not tested before, here is just a bug fix.\r\n- [ ] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`) → I only do the test mentioned in the commit message.\r\n\r\nThis problem was only visible with Python3, no problem with Python2.\r\n\r\nReproduced with:\r\n\r\n``` python\r\n>>> pkt = IP()/TCP()\r\n>>> tcp = pkt.getlayer(TCP)\r\n>>> tcp.options = [('MSS', 1460), ('SAckOK', b''), ('Timestamp', (4294693388, 0)), ('NOP', None), ('WScale', 6), (30, b'\\x10\\x03\\xc1\\x1c\\x95\\x9b\\x81R_1')]\r\n>>> tcp.show2()\r\n```\r\n\r\nFixes: #1459",
    "head_branch": "inet-unkonwn-option",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1460 from matttbe/inet-unkonwn-option\n\ninet: unknown options are of type bytes, not str"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb140a88c0a76e0a51bf6",
    "number": 1458,
    "body": "### ISOTP socket implemented with `CANSocket` that works without can-isotp kernel module and with python-can\r\n\r\nThis PR:\r\n- ISOTP fragment and defragment into CAN frames\r\n- ISOTP sniffer that can sniff ISOTP messages without knowing source and destination IDs and extended addresses\r\n- Fixed ISOTPSocket src/dst naming\r\n\r\nChecklist:\r\n- [x] If you are new to Scapy: I have checked https://github.com/secdev/scapy/blob/master/CONTRIBUTING.md (esp. section submitting-pull-requests)\r\n\r\n- [x] I squashed commits belonging together\r\n\r\n- [x] I added unit tests\r\n\r\n- [x] I executed the regression tests for Python2 and Python3 (using `tox` or, `cd test && ./run_tests_py2, cd test && ./run_tests_py3`)\r\n\r\n\r\nAdded an ISOTP implementation written in python and compatible with python 2 and python-can. It should be also compatible with windows, although I couldn't test it.\r\nThe selection of which ISOTPSocket implementation to use can be changed using\r\nconf.contribs['ISOTP'] = {'use-can-isotp-kernel-module': True}\r\nAlso added an ISOTP sniffer that doesn't require destination and source identifiers/addresses, and fixed addresses in the previous ISOTP implementation, since they were swapped compared to the ones used by the isotpsend and isotprecv utilities.\r\n\r\nAll the previous isotp implementation is now executed only on python3, to make sure the module can be imported in python2, since all the classes for a protocol should be included in a single file (as per contributing guidelines). Maybe it would look better if it was done in the same way as with CANSocket?\r\n\r\nISOTP constants and classes definitions used in the native socket are now not exposed in the __all__ module variable, which might break some code.",
    "head_branch": "isotp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1458 from epozzobon/isotp\n\nISOTP implementation for python 2 without kernel modules"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb141a88c0a76e0a51bf7",
    "number": 1456,
    "body": "- Chose between Zigbee and SixLowPan using config\r\n- Better FCS support in Dot15d4\r\n- Move Zigbee support to a different layer\r\n- Adds some more Dot15D4 / Zigbee tests\r\n- Minor Zigbee fixes (some from the scapy-com PRs)\r\n\r\nfixes https://github.com/secdev/scapy/issues/1455",
    "head_branch": "magic-8024-dissect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Dot15d4 & Zigbee: Update, fixes & tests (#1456)\n\n* Dot15d4 update\r\n\r\n- Chose between Zigbee and SixLowPan using config\r\n- Better FCS support in Dot15d4\r\n- Move Zigbee support to a different layer\r\n- Minor fixes\r\n\r\n* Apply bitbucket scapy-com PR\r\n\r\nhttps://bitbucket.org/secdev/scapy-com/pull-requests/7/9003c5f9bdf2/diff\r\n\r\n* Zigbee tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb142a88c0a76e0a51bf8",
    "number": 1454,
    "body": "Some hidden function I just found.\r\n\r\nThis should decrease by quite a lot the packet drop rate on windows",
    "head_branch": "nonblocking_win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1454 from gpotter2/nonblocking_win\n\n[Windows] Use pcap_setmintocopy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb143a88c0a76e0a51bf9",
    "number": 1451,
    "body": "",
    "head_branch": "doip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1451 from polybassa/doip\n\nAdd brand specific protocol implementation for automotive investigations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb144a88c0a76e0a51bfa",
    "number": 1450,
    "body": "This PR:\r\n- implements SOCKS v4/v5, (using the new fancy MultipleTypeField)\r\n- adds support for `i2repr` in MultipleTypeField\r\n\r\nfixes https://github.com/secdev/scapy/issues/1361",
    "head_branch": "socks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1450 from gpotter2/socks\n\nSOCKS support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb145a88c0a76e0a51bfb",
    "number": 1449,
    "body": "",
    "head_branch": "installers-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1449 from gpotter2/installers-update\n\n[Maintenance] Installers update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb145a88c0a76e0a51bfc",
    "number": 1448,
    "body": "",
    "head_branch": "emergency-windump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb146a88c0a76e0a51bfd",
    "number": 1446,
    "body": "This PR fixes the `guess_payload_class()` method in RadioTap (`scapy/layers/dot11.py`).\r\n\r\n`Flags` is a `ConditionalField`, it is necessary to test if it is present.\r\n",
    "head_branch": "dot11-fix-RadioTap-guess-payload",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix guess_payload_class() method in RadioTap. (#1446)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb147a88c0a76e0a51bfe",
    "number": 1445,
    "body": "The last #1277 PR that does not need to be discussed.\r\n\r\nAccording to the docs that I found, the changed made to Skinny are OK.",
    "head_branch": "PEPin_F811",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1445 from guedou/PEPin_F811\n\nF811 - redefinition of unused variable/class/..."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb148a88c0a76e0a51bff",
    "number": 1444,
    "body": "Try use tox for Appveyor builds.\r\n\r\nNote:\r\n- I had to move `windump.exe` to `C:/Program Files/Windump/` because due to some windows restrictions (you can't add & access files from `C:/Windows/system32` when running on x64, but it should be `C:\\Windows\\SysWOW64`)\r\n- I had to unify all \"test_travis....\" files into the `.uts` file, so that we can launch it from everywhere (don't bother about the path import)\r\n- I had some issues testing it, as I had often a single networking test failing. I added to all of them an auto-retry system as it already existed in the code (+ added some missing `timeout=...`). (I had some tests hanging and had to retry lots of time... I may move them to a different PR)",
    "head_branch": "toxwin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1444 from gpotter2/toxwin\n\nTox on Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb149a88c0a76e0a51c00",
    "number": 1443,
    "body": "Hello,\r\nthis PR takes and adapts the code of #257 (which seems to be abandoned) so it can pass the utests in python 2 and 3.\r\n\r\nCommits have been squashed but I can push a detailed version instead if preferred (6 commits).\r\nSeb",
    "head_branch": "pnio_pr_257",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1443 from smainand/pnio_pr_257\n\nAdapt  #257 (dce-rpc and pnio-dce-rpc) for py3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb14aa88c0a76e0a51c01",
    "number": 1442,
    "body": "Hello,\r\nJust a quick edit of the CONTRIBUTING.md file that fixes how the six `range` method should be called.\r\nSeb\r\n",
    "head_branch": "fix_six_usage_doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1442 from smainand/fix_six_usage_doc\n\nfix six.range usage indication in contrib doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb14aa88c0a76e0a51c02",
    "number": 1441,
    "body": "Another PR of the #1277 serie. It removes duplicated dictionary keys.",
    "head_branch": "PEPin_F601",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1441 from guedou/PEPin_F601\n\nF601 - dictionary key repeated with different values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb14ba88c0a76e0a51c03",
    "number": 1440,
    "body": "A few fixes + integration of kracks using https://github.com/secdev/scapy/pull/1433",
    "head_branch": "dot11improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1440 from gpotter2/dot11improvements\n\nKracks with Dot11 improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb14ca88c0a76e0a51c04",
    "number": 1439,
    "body": "This PR cleans up Travis related files.",
    "head_branch": "travis_cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1439 from guedou/travis_cleanup\n\nRemove useless lines"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb14da88c0a76e0a51c05",
    "number": 1438,
    "body": "This PR also cleans `ARP.answers()`, and uses `ARP.hashret()` to improve the performances.\r\n\r\nThe tests for `arpleak()` are mocked, using a basic `struct`-based implementation of the ARP protocol, independent from the `ARP` class.\r\n\r\n`arpleak()` has been successfully tested with a VM running the NetBSD 7.0.2 installation ISO.\r\n\r\nAgain, some imports had to be fixed...",
    "head_branch": "arpleak",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1438 from p-l-/arpleak\n\nAdd arpleak() to test ARP leak flaws"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb14ea88c0a76e0a51c06",
    "number": 1437,
    "body": "Just documentation. No Unit-Tests required",
    "head_branch": "can-docu-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1437 from polybassa/can-docu-fix\n\nUpdated BeagleBoneBlack CAN-Setup Documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb14fa88c0a76e0a51c07",
    "number": 1436,
    "body": "This PR switch the remaining builds to tox, and removes most of the ad-hoc configurations done in `.travis/install.sh` and `.travis/test.sh`.",
    "head_branch": "tox_osx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1436 from guedou/tox_osx\n\nFinish the transition to tox"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb150a88c0a76e0a51c08",
    "number": 1435,
    "body": "Please don't merge ey!\r\n\r\nThe latest big #1277 PR. It used `autopep8` to fix lines lengths. When needed, I did some manual adjustements to keep comments.",
    "head_branch": "PEPin_E501",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1435 from guedou/PEPin_E501\n\nE501 - line too long (> 79 characters)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb151a88c0a76e0a51c09",
    "number": 1434,
    "body": "",
    "head_branch": "uds-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1434 from polybassa/uds-merge\n\nAdd implementation of the automotive UDS protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb151a88c0a76e0a51c0a",
    "number": 1433,
    "body": "This PR adds the RSN (Robust Security Network) information elements, which gives information about the cipher suites used to provide confidentiality and integrity, as well as key management.\r\n\r\nRegression tests have been added in `regression.uts`.\r\n\r\nPrevious comments (#1386) have been taken into account.",
    "head_branch": "dot11-rsn-ies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1433 from plorinquer/dot11-rsn-ies\n\nAdded RSN information elements."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb152a88c0a76e0a51c0b",
    "number": 1432,
    "body": "- A few `timeout` parameters were missing (new fast send/recv things), making sometimes the tests stuck forever.\r\n- Make tests pass way easier locally on Windows (restrict the `pcap_[start/stop]` to Appveyor, as they start a UAC when ran locally)\r\n- Fixes `IFACES` not beeing properly restored (added a `.copy()` call, otherwise the `old_ifaces` followed the change). This allow us to only use `route_add_loopback()` once and for all, so we don't need anymore to call it every where",
    "head_branch": "win-local-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1432 from gpotter2/win-local-tests\n\nStabilize windows tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb153a88c0a76e0a51c0c",
    "number": 1431,
    "body": "This PR introduces `MultipleTypeField()` pseudo Field type, and uses it to enhance `ARP()`. It also fixes a bug and clean some imports (see detailed commit log for more -- please do **not** stash this PR).\r\n\r\nIn `ARP()`, `MultipleTypeField()` are now used for `{hw,p}{dst,src}` fields, to achieve two goals:\r\n- Make `ARP()` usable with other `{hw,p}types` than Ether and IP.\r\n- Keep `ARP()` as simple as possible to use.\r\n\r\nWith this patch:\r\n- `raw(ARP())` returns the same result as before.\r\n- `ARP(pytpe=\"IPv4\")` works and `raw(ARP(pytpe=\"IPv4\")) == raw(ARP())`\r\n- `ARP(ptype=\"IPv6\")` now works, `plen` is then set to 16 and `psrc` & `pdst` fields are IPv6 addresses: `ARP(raw(ARP(ptype=\"IPv6\"))).pdst == \"::\"`\r\n\r\nAs always, when fixing imports in some important parts of Scapy shows that some modules imports are still a mess. I had to fix some of them, using this opportunity to remove some wildcard imports.",
    "head_branch": "enh-arp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1431 from p-l-/enh-arp\n\nMake ARP() great again!"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb154a88c0a76e0a51c0d",
    "number": 1430,
    "body": "This check is inside @dispatch_hook, so it can get `None` as `tls_version`",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1430 from gpotter2/patch-5\n\nTiny TLS fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb155a88c0a76e0a51c0e",
    "number": 1429,
    "body": "This PR fixes #1367 ",
    "head_branch": "Issue_#1367",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1429 from guedou/Issue_#1367\n\nFix DNS RR TXT"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb156a88c0a76e0a51c0f",
    "number": 1428,
    "body": "Small mistake: we need to use `cdll` with the `LoadLibrary` function so that is supports both x64 and x86 (`windll.LoadLibrary` will fail on x86).\r\n\r\nHowever, with `SetDllDirectoryW`, we need to use `windll` as `cdll` won't support x64, and `windll` has compatibility for x86",
    "head_branch": "npcapadv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1428 from gpotter2/npcapadv\n\nSupport x86 while loading Npcap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb156a88c0a76e0a51c10",
    "number": 1427,
    "body": "note: pointer field is 2 bytes long unlike type 12\r\n\r\nsources:\r\nhttps://tools.ietf.org/html/rfc2521\r\nhttp://www.networksorcery.com/enp/protocol/icmp/msg040.htm\r\nhttp://www.networksorcery.com/enp/protocol/icmp/msg12.htm",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb157a88c0a76e0a51c11",
    "number": 1426,
    "body": "note: pointer field is 2 bytes long unlike type 12\r\n\r\nsources:\r\nhttps://tools.ietf.org/html/rfc2521\r\nhttp://www.networksorcery.com/enp/protocol/icmp/msg040.htm\r\nhttp://www.networksorcery.com/enp/protocol/icmp/msg12.htm\r\n\r\nincomplete",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb158a88c0a76e0a51c12",
    "number": 1425,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1425 from ChemiHatake/master\n\nFixed typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb159a88c0a76e0a51c13",
    "number": 1424,
    "body": "fixes https://github.com/secdev/scapy/issues/1422",
    "head_branch": "py3-fnotfound",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1424 from gpotter2/py3-fnotfound\n\nPython3: OSError when file not found"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb15aa88c0a76e0a51c14",
    "number": 1423,
    "body": "fixes https://github.com/secdev/scapy/issues/1349\r\n\r\nInspired by the tox link =)",
    "head_branch": "setupmessage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1423 from gpotter2/setupmessage\n\nAdd PyPi description"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb15aa88c0a76e0a51c15",
    "number": 1421,
    "body": "This is an attempt at fixing #1346. I am not convinced by this hack.",
    "head_branch": "Issue_#1346",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1421 from guedou/Issue_#1346\n\nFlag name fallback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb15ba88c0a76e0a51c16",
    "number": 1420,
    "body": "This PR fixes #1356.",
    "head_branch": "Issue_#1356",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1420 from guedou/Issue_#1356\n\nsniff() use conf.iface by default"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb15ca88c0a76e0a51c17",
    "number": 1419,
    "body": "Fix issue #1372 : the filter was not apply to PacketListField.",
    "head_branch": "Issue_#1372",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1419 from guedou/Issue_#1372\n\nApply filter to fields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb15da88c0a76e0a51c18",
    "number": 1417,
    "body": "This should fix #1343.",
    "head_branch": "Issue_#1343",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1417 from guedou/Issue_#1343\n\nAttempt to open more BPF handles"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb15ea88c0a76e0a51c19",
    "number": 1416,
    "body": "Reverts #1410\r\n\r\nThis change is not necessary. Under Unix, people set their PATH according to the programs they want to use, and your OS does the work for you, you do not have to reimplement it.\r\n\r\nIf under Debian you **know** tcpdump will always be in `/usr/sbin`, I think it's OK for them to patch Scapy for their package, but I don't think we should include a hack like this one (hack which is, indeed, very helpful under Windows).",
    "head_branch": "revert-1410-paths",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1416 from secdev/revert-1410-paths\n\nRevert \"Unify which function\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb15fa88c0a76e0a51c1a",
    "number": 1415,
    "body": "Signed-off-by: Raslan Darawsheh <rasland@mellanox.com>\r\n",
    "head_branch": "mpls_over_udp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1415 from raslandarawsheh/mpls_over_udp\n\nadding support for MPLS over UDP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb15fa88c0a76e0a51c1b",
    "number": 1414,
    "body": " Revert \"isotp test removed\" and removed the automatic intallation of a Linux Kernel Module on Travis\r\n\r\nThis reverts commit 79aaf13903c1b4a2082654e0f7310d8ff8c6e1d8.\r\n",
    "head_branch": "isotp-uts-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb160a88c0a76e0a51c1c",
    "number": 1413,
    "body": "Current ls() function has different features:\r\n- explore a layer e.g. `ls(IP)`\r\n- search for a packet e.g. `ls(\"IP\")`\r\n- list all packets: `ls()`\r\n\r\nThe last function, `ls()` is currently un-readable and very useless, for several reasons:\r\n- There are two many layers in scapy\r\n- There are not ordered\r\n- There are hidden layers (starting with `_`)\r\n\r\nThis PR adds a fancy system to discover packets (last case only), when launched in interactive mode, by using the funcionalities of `prompt_toolkit` (module included in IPython)\r\n\r\n## Screenshots\r\n\r\n### Layers\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/39969151-39a8b8b0-56d8-11e8-91a0-7d8cc9c9547d.png)\r\n![image](https://user-images.githubusercontent.com/10530980/39969152-3e5e937a-56d8-11e8-865b-4507fc8b6f4b.png)\r\n![image](https://user-images.githubusercontent.com/10530980/42733715-a24ef908-8836-11e8-964f-68a6372f0193.png)\r\n\r\n\r\n### Contribs\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/39969163-5b1b692a-56d8-11e8-94be-eb984ea2e585.png)\r\n![image](https://user-images.githubusercontent.com/10530980/42733718-b5f38eba-8836-11e8-839b-407114ae104a.png)\r\n\r\n\r\n## Important notes\r\n\r\n~This PR requires `prompt_toolkit>=2.0.0`, the new prompt_toolkit version. It is currently unavailable on PyPi, but according to https://github.com/ipython/ipython/pull/10964, both `prompt_toolkit>=2.0.0` and `ipython` supporting it should be released very soon (matter of days).~\r\n\r\nBoth prompt_toolkit 2.0 and IPython 7 have now been released. The PR is now mergeable",
    "head_branch": "fancy-ls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1413 from gpotter2/fancy-ls\n\nNew explore() function with prompt_toolkit 2.0 integration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb161a88c0a76e0a51c1d",
    "number": 1412,
    "body": "I managed to find a way to workaround the issue we had with `SetDllDirectory`, by loading also loading `Packet.dll` even if unused.\r\n\r\nThis makes scapy able to use Npcap, when winpcap and npcap are both installed. This might not work properly under windows XP, in which case it will follow the previous behavior",
    "head_branch": "npcapadv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1412 from gpotter2/npcapadv\n\nBetter Npcap detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb162a88c0a76e0a51c1e",
    "number": 1411,
    "body": "Hi there,\r\n\r\nI extended the docstring for the `plist.filter()` function after the same question came up during multiple workshops. No unit test are necessary since this PR only touches a docstring.\r\n\r\nCheers,\r\ntpltnt",
    "head_branch": "filter-docfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1411 from tpltnt/filter-docfix\n\ntiny clarification"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb163a88c0a76e0a51c1f",
    "number": 1410,
    "body": "Fixes https://github.com/secdev/scapy/issues/1403",
    "head_branch": "paths",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1410 from gpotter2/paths\n\nUnify which function"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb164a88c0a76e0a51c20",
    "number": 1409,
    "body": "This class was useless since PacketListField does the job, moreover it\r\nwas buggy and could cause Scapy to go in a infinite loop. Test case\r\nadded.\r\n\r\nFixes #1407.",
    "head_branch": "fix-radius",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1409 from p-l-/fix-radius\n\nRemove useless _RADIUSAttrPacketListField class"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb164a88c0a76e0a51c21",
    "number": 1408,
    "body": "The isotp.uts currently installd a Linux module when launched as root. We need to find a better way to test this protocol. In the meantine, I would like to remove these tests.",
    "head_branch": "remove_isotp.uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1408 from guedou/remove_isotp.uts\n\nisotp test removed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb165a88c0a76e0a51c22",
    "number": 1402,
    "body": "This PR fixes #1401.",
    "head_branch": "man_page",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1402 from guedou/man_page\n\nMan page fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb166a88c0a76e0a51c23",
    "number": 1400,
    "body": "When loading the manuf database, Scapy will now attempt to discover where the database is located in the filesystem, not attempt to find it by the absolute path that was referenced previously in the docstring. This docstring had previously been patched in Debian as we had patched also the absolute path to where the Debian package keeps the manuf database.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1400 from irl/patch-1\n\nutils6: Updates in6_addrtovendor docstring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb167a88c0a76e0a51c24",
    "number": 1399,
    "body": "This attribute is used for random values maximum length.\r\n\r\n`.max_length` will be set on other `StrLenField()` (and subclasses) uses. This can be done in other PRs.\r\n\r\nFixes #1398.",
    "head_branch": "fix-fuzz-strlenfield",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1399 from p-l-/fix-fuzz-strlenfield\n\nAdd StrLenField.max_length attribute to prevent crashes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb168a88c0a76e0a51c25",
    "number": 1394,
    "body": "Trial of fixing https://github.com/secdev/scapy/issues/1387",
    "head_branch": "hiddenwindow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1394 from gpotter2/hiddenwindow\n\nHide powershell window"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb169a88c0a76e0a51c26",
    "number": 1393,
    "body": "fixes https://github.com/secdev/scapy/issues/1391\r\nsome parenthesis had been forgotten while building a correct netbios format",
    "head_branch": "nbns_parenthesis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add forgotten parenthesis"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb169a88c0a76e0a51c27",
    "number": 1392,
    "body": "Wireshark has been updated today, and the chocolatey package too.\r\nIn the latest version, some MACS have been updated. The one we used is now wrong:\r\n\r\n```\r\n>>> conf.manufdb._resolve_MAC(\"00:00:63\")\r\n'BarcoCon'\r\n```\r\n\r\nLet's use the Oracle one, which has remained stable, so that the tests pass on previous and following wireshark versions",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1392 from gpotter2/patch-5\n\nUpdate manuf test (fix AppVeyor fails)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb16aa88c0a76e0a51c28",
    "number": 1390,
    "body": "This PR will ease writing Python3 only unit tests. The `python3_only` is automatically set by UTScapy when launched from Python2.",
    "head_branch": "UTscapy_python3_only",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "UTScapy detects Python version and export python3_only"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb16ba88c0a76e0a51c29",
    "number": 1389,
    "body": "In automotive protocols, I often need to modify enum-fields in my protocol definitions. Basically every ECU in a car speaks a unique protocol. To support this circumstance, I implemented a observable dictionary and updated the EnumField implementation. Whenever a enum with a protocol definition is changed, the field gets updated automatically. ",
    "head_branch": "updateableEnum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1389 from polybassa/updateableEnum\n\nUpdateable EnumFields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb16ca88c0a76e0a51c2a",
    "number": 1388,
    "body": "The iteration is not compliant with the produced data structure which holds the traceroute results.\r\nThe expected value for comparison is the key of the dictionary entry but 'x' holds the IP address (as str).\r\n\r\nThis solves the produced TypeError: unorderable types: int() > str() which occurs because 'x' does not hold the dictionary key but the IP address.",
    "head_branch": "get_trace-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1388 from m-starke/get_trace-fix\n\nFix get_trace() in TracerouteResult and TracerouteResult6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb16da88c0a76e0a51c2b",
    "number": 1386,
    "body": "This PR adds the RSN (Robust Security Network) information elements, which gives information about the cipher suites used to provide confidentiality and integrity, as well as key management.\r\n\r\nRegression tests have been added in `regression.uts`.",
    "head_branch": "dot11-rsn-ies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb16ea88c0a76e0a51c2c",
    "number": 1385,
    "body": "This test is failing quite often, as it waits for packets to be received. This behavior makes it wait forever when no packets get received on the machine.",
    "head_branch": "stabilizepitools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Stabilize SniffSource test (pipetools)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb16ea88c0a76e0a51c2d",
    "number": 1384,
    "body": "Hello,\r\n\r\nThis PR contains the OPC-DA part of the PR #374, quickly cleaned to match the pep8 requirements.\r\nI don't think it is ready to be merged yet, but it is a very good start to start playing with OPC-DA.\r\n\r\nSeb.\r\n",
    "head_branch": "add_opcda",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1384 from smainand/add_opcda\n\nAdd OPCDA layer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb16fa88c0a76e0a51c2e",
    "number": 1383,
    "body": "Fixes https://github.com/secdev/scapy/issues/1382 and many others",
    "head_branch": "udpbindings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1383 from gpotter2/udpbindings\n\nFix UDP bindings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb170a88c0a76e0a51c2f",
    "number": 1381,
    "body": "This PR:\r\n- fixes https://github.com/secdev/scapy/issues/1379 by improving RadioTap fields support. This required the implementation of ReversePadField (RadioTap padding is reversed), which itself required a `pkt._tmp_dissect_pos`)\r\n- Supports FCS in Dot11\r\n- introducing `pkt._tmp_dissect_pos`. It is a variable which contains the size of the current layer, at the time that it is used, and can only be used during the dissection. It is very useful in `length_from` functions, as it gets what has been exactly dissected when the lambda gets executed. It is changing dynamically\r\n- merging contrib/ppi with dot11: the `PPI()` layer was implemented twice.",
    "head_branch": "dot11improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1381 from gpotter2/dot11improvements\n\nRadioTap flags support + Dot11 FCS&improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb171a88c0a76e0a51c30",
    "number": 1377,
    "body": "Test added on top of #1364.",
    "head_branch": "FIX_PR#1364",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1377 from guedou/FIX_PR#1364\n\nFix PR#1364"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb172a88c0a76e0a51c31",
    "number": 1376,
    "body": "Allows pickling and unpickling of PacketList so it can be used with other containers like multiprocessing.SimpleQueue() that utilizes pickle to handle that queued data...\r\n\r\nfixes #1374 \r\n",
    "head_branch": "fix-recursion-error-in-packet-list-#1374",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1376 from speakinghedge/fix-recursion-error-in-packet-list-#1374\n\nFix recursion error in packet list #1374"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb173a88c0a76e0a51c32",
    "number": 1375,
    "body": "Removes old installation infos, dating of the time when scapy.net was a mirror for the zip file",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1375 from gpotter2/patch-2\n\nRemove scapy.net mirror from documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb174a88c0a76e0a51c33",
    "number": 1371,
    "body": "Fixes generation of MQTT packets with a payload above 127 byte.\r\n\r\nPreviously the following error occurred:\r\n\r\n```python\r\np = MQTT()/MQTTPublish(topic='test1',value='a'*200)\r\nassert(str(p))\r\n\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"/mnt/data/Documents/projects/scapy/scapy/packet.py\", line 351, in __str__\r\n    return str(self.build())\r\n  File \"/mnt/data/Documents/projects/scapy/scapy/packet.py\", line 461, in build\r\n    p = self.do_build()\r\n  File \"/mnt/data/Documents/projects/scapy/scapy/packet.py\", line 443, in do_build\r\n    pkt = self.self_build()\r\n  File \"/mnt/data/Documents/projects/scapy/scapy/packet.py\", line 424, in self_build\r\n    p = f.addfield(self, p, val)\r\n  File \"/mnt/data/Documents/projects/scapy/scapy/contrib/mqtt.py\", line 30, in addfield\r\n    for i, val in enumerate(data))\r\n  File \"/mnt/data/Documents/projects/scapy/scapy/contrib/mqtt.py\", line 30, in <genexpr>\r\n    for i, val in enumerate(data))\r\nTypeError: unsupported operand type(s) for |: 'float' and 'int'\r\n```",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed MQTT module for payload length > 127 bytes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb174a88c0a76e0a51c34",
    "number": 1366,
    "body": "Coverage went from 85% to 83% during the last week. This PR will help me understand why.",
    "head_branch": "coverage_decrease",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Test TLS automta with tox"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb175a88c0a76e0a51c35",
    "number": 1365,
    "body": "Three small commits for the #1277 serie.",
    "head_branch": "PEPin_several_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1365 from guedou/PEPin_several_fixes\n\nPEPin several fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb176a88c0a76e0a51c36",
    "number": 1364,
    "body": "< brief description what this PR will do, e.g. fixes broken dissection of XXX >\r\nSince OpenFlow has been updated to 1.5, OFPHETVersionBitmap should also be updated.\r\nIf not, when parsing an packet which sent by openflow controller, scapy cann't solve OFPHETVersionBitmap correctly.\r\ne.g. if I use pkt.show() to show the packet, it will give me the following error:\r\nTraceback (most recent call last):\r\n  File \"./pcap.py\", line 21, in <module>\r\n    read_packet('real.pcap')\r\n  File \"./pcap.py\", line 14, in read_packet\r\n    print((p).show())\r\n  File \"/home/xiu/.local/lib/python3.6/site-packages/scapy/packet.py\", line 1057, in show\r\n    return self._show_or_dump(dump, indent, lvl, label_lvl)\r\n  File \"/home/xiu/.local/lib/python3.6/site-packages/scapy/packet.py\", line 1039, in _show_or_dump\r\n    s += self.payload._show_or_dump(dump=dump, indent=indent, lvl=lvl+(\" \"*indent*self.show_indent), label_lvl=label_lvl, first_call=False)\r\n  File \"/home/xiu/.local/lib/python3.6/site-packages/scapy/packet.py\", line 1039, in _show_or_dump\r\n    s += self.payload._show_or_dump(dump=dump, indent=indent, lvl=lvl+(\" \"*indent*self.show_indent), label_lvl=label_lvl, first_call=False)\r\n  File \"/home/xiu/.local/lib/python3.6/site-packages/scapy/packet.py\", line 1039, in _show_or_dump\r\n    s += self.payload._show_or_dump(dump=dump, indent=indent, lvl=lvl+(\" \"*indent*self.show_indent), label_lvl=label_lvl, first_call=False)\r\n  File \"/home/xiu/.local/lib/python3.6/site-packages/scapy/packet.py\", line 1026, in _show_or_dump\r\n    s += fvalue._show_or_dump(dump=dump, indent=indent, label_lvl=label_lvl+lvl+\"   |\", first_call=False)\r\n  File \"/home/xiu/.local/lib/python3.6/site-packages/scapy/packet.py\", line 1031, in _show_or_dump\r\n    reprval = f.i2repr(self,fvalue)\r\n  File \"/home/xiu/.local/lib/python3.6/site-packages/scapy/fields.py\", line 1375, in i2repr\r\n    return None if x is None else str(self._fixup_val(x))\r\n  File \"/home/xiu/.local/lib/python3.6/site-packages/scapy/fields.py\", line 1285, in __str__\r\n    r.append(self.names[i])\r\nIndexError: list index out of range\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb177a88c0a76e0a51c37",
    "number": 1363,
    "body": "Next step towards automotive pen-testing.\r\nThis is a implementation of ISO-TP (ISO 15765-2) communication protocol, which is used in automotive networks.\r\n\r\nThis is a socket implementation for the can-isotp Linux kernel module from this project: https://github.com/hartkopp/can-isotp\r\n",
    "head_branch": "isotp-final-branch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1363 from polybassa/isotp-final-branch\n\nImplementation of ISO-TP sockets [ready for merge]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb178a88c0a76e0a51c38",
    "number": 1362,
    "body": "Based on a hint of @gpotter2, setting `conf.debug_dissector=1` \r\nhelped a lot to fix a bug that only popped up on CI.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add hint for conf.debug_dissector=1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb179a88c0a76e0a51c39",
    "number": 1359,
    "body": "Fix a flake8 error.",
    "head_branch": "fix_flake8_error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't complain when tox8 is launched from Python3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb17aa88c0a76e0a51c3a",
    "number": 1358,
    "body": "I think that this is the correct fix for the failing L2ListenTcpdump tests. Related to PR #1351",
    "head_branch": "tox_FIXME_py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use UTScapy flags according to  value"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb17aa88c0a76e0a51c3b",
    "number": 1355,
    "body": "Small PR for #1277.",
    "head_branch": "PEPin_E4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "F841 - local variable 'name' is assigned to but never used"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb17ba88c0a76e0a51c3c",
    "number": 1354,
    "body": "One more PR for the #1277 serie. The E71* commit was performed manually =/",
    "head_branch": "PEPin_E70-E71",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "E71* - tests syntax\n\nCo-authored-by:  Guillaume Valadon <guillaume@valadon.net>\nCo-authored-by:  gpotter2 <gabriel@potter.fr>\nCo-authored-by:  Ajax <commial@gmail.com>\nCo-authored-by:  plorinquer <pierre.lorinquer@ssi.gouv.fr>\nCo-authored-by:  mtury <maxence.tury@ssi.gouv.fr>\nCo-authored-by:  Laurent 'Kabel' Weber <k@0xbadcab1e.lu>\nCo-authored-by:  Pierre LALET <pierre.lalet@cea.fr>\nCo-authored-by:  Victor Pfautz <v.pfautz@gmx.net>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb17ca88c0a76e0a51c3d",
    "number": 1352,
    "body": "This PR fixes the conflict in #1292.",
    "head_branch": "PR#1292_fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb17da88c0a76e0a51c3e",
    "number": 1351,
    "body": "We will certainly lose a little bit of coverage, but I just got merged PRs raising it.\r\nThis test is annoying",
    "head_branch": "disable-l2tcpdump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Disable L2ListenTcpdump test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb17ea88c0a76e0a51c3f",
    "number": 1350,
    "body": "This PR:\r\n- Removes tons of duplicated code, which is used while receiving packets. To do so, we introduce a `recv_raw` function, which receives the packet, calculates its TimeStamp and returns the info required to build it. It will then be built in the `recv` function, which is now common to all SuperSockets.\r\n- Updates API calls for pypcap, libpcap & pcapy\r\n- Adds monitor mode support on pypcap and libpcap\r\n- Makes `conf.use_pcap` useable without `conf.use_dnet`\r\n- Because the pcap handlers can now send packet, remove the now useless \"PCAP with DNET\" mode. DNET is deprecated, but can still be used as a way to get system data",
    "head_branch": "pcapdnetremaster",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1350 from gpotter2/pcapdnetremaster\n\nPcapdnet: monitor mode + full support without dnet + cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb17fa88c0a76e0a51c40",
    "number": 1348,
    "body": "This PR:\r\n- fixes https://github.com/secdev/scapy/issues/810#issuecomment-381783258. I already knew this could be glitchy, but no one reported it so I thought it was working well.",
    "head_branch": "winfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb180a88c0a76e0a51c41",
    "number": 1347,
    "body": "`img.shields.io` is very unstable, and overused compared to its server capacity.\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/38810103-0b2f251c-4186-11e8-9ed0-4e92d3ac60ac.png)\r\n\r\nLet's use the svg images that we host on scapy.net (as they are svg, they are easily editable).\r\n**This also allows us to remove Python 3.3 from the icon**",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb180a88c0a76e0a51c42",
    "number": 1345,
    "body": "More tests & small bugfixes on modules:\r\n- OpenflowV3\r\n- BGP\r\n- LDP",
    "head_branch": "even-more-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1345 from gpotter2/even-more-tests\n\nEven more tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb181a88c0a76e0a51c43",
    "number": 1344,
    "body": "This PR:\r\n- remove the instructions about installing `gv` and `acroread`, which were removed in https://github.com/secdev/scapy/pull/1255\r\n- Advise to use a newer PyX version on Python 2.7 (0.12.1 instead of 0.12). 0.12.1 still supported Python 2.7",
    "head_branch": "docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove outdated installation instructions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb182a88c0a76e0a51c44",
    "number": 1342,
    "body": "This PR applies some comments from @p-l- to #1155 in order to sound kinder.\r\n\r\nSome modifications can still be made, but as we are getting more visibility with v2.4.0 having templates will save us time.",
    "head_branch": "templates_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Templates rewording"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb183a88c0a76e0a51c45",
    "number": 1340,
    "body": "One more PR for the #1277 serie. It fixes issues with whitespaces.",
    "head_branch": "PEPin_E2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1340 from guedou/PEPin_E2\n\nE2* - whitespaces errors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb184a88c0a76e0a51c46",
    "number": 1338,
    "body": "A few additional notes about Npcap support, for posterity.\r\n(I saw some extracts from the original PR were used on https://github.com/the-tcpdump-group/libpcap/pull/661, so I thought it could be added to the file)",
    "head_branch": "docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add notes to the winpcapy module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb185a88c0a76e0a51c47",
    "number": 1337,
    "body": "This PR is big but was easy to do. #1277 serie.",
    "head_branch": "PEPin_E1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1337 from guedou/PEPin_E1\n\nE1 - incorrect indentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb186a88c0a76e0a51c48",
    "number": 1336,
    "body": "This PR fixes real bugs found using flake8. #1277 serie.\r\n\r\nI decided to remove the queso module as it is almost impossible to download, install and use queso nowadays. This will close #1274.\r\n\r\nFTR, here is the patch that fixes the F821 issue with the queso module:\r\n```\r\ndiff --git a/scapy/modules/queso.py b/scapy/modules/queso.py\r\nindex d5b94a8..835d694 100644\r\n--- a/scapy/modules/queso.py\r\n+++ b/scapy/modules/queso.py\r\n@@ -47,9 +47,9 @@ class QuesoKnowledgeBase(KnowledgeBase):\r\n                 if not l or l[0] == ';':\r\n                     continue\r\n                 if l[0] == '*':\r\n+                    name = l[1:].strip()\r\n                     if p is not None:\r\n                         p[\"\"] = name\r\n-                    name = l[1:].strip()\r\n                     p = self.base\r\n                     continue\r\n                 if l[0] not in list(\"0123456\"):\r\n\r\ndiff --git a/test/regression.uts b/test/regression.uts\r\nindex bcfbc41..5c526f2 100644\r\n--- a/test/regression.uts\r\n+++ b/test/regression.uts\r\n@@ -10193,3 +10193,30 @@ assert \"RTPExtension\" not in parsed\r\n #    assert(output == expected)\r\n #\r\n #test_snmpwalk(\"secdev.org\")\r\n+\r\n+= Test Scapy Queso module\r\n+\r\n+load_module(\"queso\")\r\n+import tempfile\r\n+filename = tempfile.mktemp()\r\n+fdesc = open(filename, \"w\")\r\n+queso_conf = \"\"\"\r\n+; From queso.conf(5)\r\n+\r\n+* Linux 2.1.xx/2.2.xx\r\n+0 1 1 7FB8 SA\r\n+1 0 0 0 R\r\n+2 - - - -\r\n+3 0 0 0 R\r\n+4 1 1 7FB8 SA\r\n+5 - - - -\r\n+6 1 1 7FB8 SA\r\n+\"\"\"\r\n+fdesc.write(queso_conf)\r\n+fdesc.close()\r\n+queso_kdb.reload(filename)\r\n+os.unlink(filename)\r\n+res = queso_search([\"1 1 7FB8 12\", \"0 0 0 4\", \"- - - -\",\r\n+                    \"0 0 0 4\", \"1 1 7FB8 12\", \"- - - -\",\r\n+                    \"1 1 7FB8 12\"])\r\n+assert res == [\"Linux 2.1.xx/2.2.xx\"]\r\n```",
    "head_branch": "pepin_F821",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "F821 - undefined name 'name'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb187a88c0a76e0a51c49",
    "number": 1333,
    "body": "A huge PR in the #1277 serie!",
    "head_branch": "PEPin_E26",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1333 from guedou/PEPin_E26\n\nE26 - comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb188a88c0a76e0a51c4a",
    "number": 1332,
    "body": "using pcapdnet is limited currently with 1600 as the MAX size\r\nthat can be sniffed. So, changing it to be MTU limit instead.\r\n\r\nSigned-off-by: Raslan Darawsheh <rasland@mellanox.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1332 from raslandarawsheh/master\n\narch/pcapdnet: handle large MTU packets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb188a88c0a76e0a51c4b",
    "number": 1331,
    "body": "This allows us to use the OEM versions of Npcap, without making it public.\r\n\r\nAppVeyor hides the secure variables from the \"PR builds\" for obvious reasons. The script has 2 options depending on the case\r\n\r\n@guedou\r\n\r\nDisclaimer: As this PR is a PR, the \"master case\" won't be tested in this PR.\r\nHere's an example showing that it also works:\r\nhttps://ci.appveyor.com/project/gpotter2/scapy/build/1.0.1587/job/whemnjrudyloc6i8?fullLog=true",
    "head_branch": "npcapoem",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1331 from gpotter2/npcapoem\n\nUse OEM version of Npcap (encrypted using AppVeyor secure)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb189a88c0a76e0a51c4c",
    "number": 1330,
    "body": "fixes https://github.com/secdev/scapy/issues/1325",
    "head_branch": "volatilebool",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1330 from gpotter2/volatilebool\n\nFix #1325"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb18aa88c0a76e0a51c4d",
    "number": 1328,
    "body": "This PR improves #1011",
    "head_branch": "PR_#1011_fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1328 from guedou/PR_#1011_fixed\n\nPR #1011 fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb18ba88c0a76e0a51c4e",
    "number": 1322,
    "body": "This PR:\r\n- now correctly handles the `monitor` parameter: \r\n  - if passed, turn the interface into it (such as on OSX) if the interface is not already in it. (no explicit call to `conf.iface.setmonitor` needed)\r\n  - if not passed, detect the state of the interface and adapt to it\r\n- reformat sniff() doc to add the monitor parameter. Sorry to whoever wrote it, but I found it too over indented (\\n every where)",
    "head_branch": "minor-improvement-monitor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1322 from gpotter2/minor-improvement-monitor\n\nConsistency between OSX and Windows monitor APIs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb18ca88c0a76e0a51c4f",
    "number": 1321,
    "body": "",
    "head_branch": "isotp-only",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb18da88c0a76e0a51c50",
    "number": 1320,
    "body": "This should temporary fix the failing tests on Python3.",
    "head_branch": "tox_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1320 from guedou/tox_fix\n\nFIXME_py3 added to tox"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb18da88c0a76e0a51c51",
    "number": 1317,
    "body": "Another PR for #1277.",
    "head_branch": "PEPin_E251",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1317 from guedou/PEPin_E251\n\nE251 - unexpected spaces around keyword / parameter equals"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb18ea88c0a76e0a51c52",
    "number": 1316,
    "body": "Fix #1051 ",
    "head_branch": "PR#1051_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "PR#1051 improved (#1316)\n\n* BIER support (from https://tools.ietf.org/html/draft-ietf-bier-mpls-encapsulation-12)\r\n\r\nSigned-off-by: Neale Ranns <neale.ranns@cisco.com>\r\n\r\n* Comments from @gpotter2\r\n\r\nSigned-off-by: Neale Ranns <neale.ranns@cisco.com>\r\n\r\n* MPLS payload for BIER\r\n\r\nSigned-off-by: Neale Ranns <neale.ranns@cisco.com>\r\n\r\n* Import MPLS explicitly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb18fa88c0a76e0a51c53",
    "number": 1315,
    "body": "Fix issue #1289 and test pcap/dnet with tox.\r\n\r\nThis PR is ready to be reviewed.",
    "head_branch": "Issue_#1289",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use pcap/dnet with tox"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb190a88c0a76e0a51c54",
    "number": 1314,
    "body": "fixes https://github.com/secdev/scapy/issues/1309\r\n\r\nReally hard to test :/ Changed lines are in a piece of VBS metric\r\n\r\nPS: I have setup an Windows XP Vbox to debug this, so I could test it",
    "head_branch": "windowsxp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1314 from gpotter2/windowsxp\n\nWindows XP: backward compatibility fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb191a88c0a76e0a51c55",
    "number": 1313,
    "body": "this is the cleaned up version of broken PR #569\r\n\r\nit incorporates all requested changes up to 3da7f3f (the last change requested [here](https://github.com/secdev/scapy/pull/569#pullrequestreview-99155688)).\r\n\r\nsorry for the noise.\r\n",
    "head_branch": "EtherCat-support-clean",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1313 from speakinghedge/EtherCat-support-clean\n\nEtherCat support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb192a88c0a76e0a51c56",
    "number": 1312,
    "body": "This renames a UT keyword introduces after #1233.",
    "head_branch": "ut_kw_renamed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1312 from guedou/ut_kw_renamed\n\nmock_read_routes6_bsd renamed to mock_read_routes_bsd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb192a88c0a76e0a51c57",
    "number": 1311,
    "body": "Another PR for the #1277 serie!",
    "head_branch": "PEPin_W29",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1311 from guedou/PEPin_W29\n\nW29* - useless whitespaces"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb193a88c0a76e0a51c58",
    "number": 1310,
    "body": "This is a proposal of support for Extended Packet Numbering (XPN) in Scapy's MACsec, as described in the MACsec specification.\r\n\r\nXPN adds support for 64 bit packet numbers instead of 32 bit, while still sending only the 32 LSB in the packet's sectag.\r\n\r\nThis proposal adds the additional parameters (Salt, SSCI) to the SA object along with an enable flag. Most of the changes affect the make_iv() function.\r\nWhen encoding a packet, the LSBs of the SA's PN are used in the sectag.\r\nWhen decoding a packet, the actual PN is recovered from the embedded 32 LSBs and the MSBs stored in the SA object.\r\n\r\nI added as unittests some of the tests from the MACsec specification annex to exhibit encoding/decoding compliance with the expected behavior (both for XPN and non-XPN cases).\r\n\r\nThank you for your feedback.",
    "head_branch": "macsec_add_xpn_support_0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MACsec: Add support for XPN (#1310)\n\n* Add support for Extended Packet Numbering in MACsec.\r\n\r\n* Add some unit tests for normal PN and XPN from the MACsec specification document.\r\n\r\n* Fix coding style.\r\n\r\n* Remove reference packets decapsulation because these packets are incoherent IP packets (i.e. their dissection triggers sanity assertions). Add missing XPN test with 256 bit key.\r\n\r\n* Fix flake8 issue: E251 unexpected spaces around keyword / parameter equals."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb194a88c0a76e0a51c59",
    "number": 1308,
    "body": "Fix visual indents errors from #1277 ",
    "head_branch": "PEPin_E12",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1308 from guedou/PEPin_E12\n\nE12* - visual indent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb195a88c0a76e0a51c5a",
    "number": 1306,
    "body": "Third PR of the #1277 serie. It fixes E20* aka incorrect number of whitespace. Automatic checks are enforced using tox.\r\n\r\nHalf of the errors reported by flake8 are now fixed.",
    "head_branch": "PEPin_E20",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1306 from guedou/PEPin_E20\n\nE20* - Incorrect number of whitespace"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb196a88c0a76e0a51c5b",
    "number": 1305,
    "body": "Migrate pypy tests to `tox`.\r\n\r\nThe previous Travis errors might be an issue with pypy3 see https://bitbucket.org/pypy/pypy/issues/2787/pypy3-sockname-error The pypy3 root tests are disabled in .travis.yml",
    "head_branch": "tox_pypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1305 from guedou/tox_pypy\n\nUse tox to test with pypy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb197a88c0a76e0a51c5c",
    "number": 1304,
    "body": "Second biggest PR of the #1277 serie. It fixes `E30*` aka incorrect number of blank lines. Automatic checks are enforces using `tox`.",
    "head_branch": "PEPin_E30",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1304 from guedou/PEPin_E30\n\nE30* - Incorrect number of blank lines"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb198a88c0a76e0a51c5d",
    "number": 1303,
    "body": "This PR will allow users of sendpfast to make pass additional arguments such as --timer that are not currently supported. It will also return a list of lines from stdout, stderr, and the command used.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1303 from ZackAlfakir/master\n\nAdded argument for additional args for tcpreplay in sendpfast. Returns stdout, stderr, command used."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb199a88c0a76e0a51c5e",
    "number": 1302,
    "body": "This PR addresses issue #1301 with a one-line fix suggested by Guillaume Valadon.  For convenience, this is the issue:\r\n\r\nAt [http://scapy.readthedocs.io/en/latest/build_dissect.html#example-variable-length-quantities](http://scapy.readthedocs.io/en/latest/build_dissect.html#example-variable-length-quantities), class `VarLenQField` is defined as a subclass of `Field`.\r\n\r\nAny attempt to instantiate VarLenQField results in:\r\n`AttributeError: 'VarLenQField' object has no attribute 'fld'`\r\n\r\nThe offending line is:\r\n`self.fld = fld`\r\n\r\nSomehow, inheriting from `Field` is causing the problem. The error happens whether in the scapy iPython environment or executing a python script.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1302 from dhankook/master\n\nFix documentation: VarLenQField example triggers AttributeError"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb199a88c0a76e0a51c5f",
    "number": 1300,
    "body": "Because why not",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1300 from gpotter2/patch-5\n\nRate us on sectools"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb19aa88c0a76e0a51c60",
    "number": 1295,
    "body": "Scapy Version: 2.4.0rc5-79\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nAdd scapy/\\_\\_main\\_\\_.py\r\nThis makes scapy a normal runnable module (by the standard/convenience way).",
    "head_branch": "making_scapy_runable_module",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1295 from karpierz/making_scapy_runable_module\n\nMaking scapy runnable module."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb19ba88c0a76e0a51c61",
    "number": 1294,
    "body": "Scapy Version: 2.4.0rc5-91\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nFix for windows batches errors that causes the wrong python to be run, when we have different versions of\r\n python installed, or not to be run at all, when python exe is not available directly (e.g.by the PATH).\r\nCosmetic in test batches.",
    "head_branch": "fix_for_windows_batches",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1294 from karpierz/fix_for_windows_batches\n\nFix for windows batches errors that causes the wrong python to be run."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb19ca88c0a76e0a51c62",
    "number": 1293,
    "body": "Scapy should be pronounce Skappee. \r\n\r\nWatch https://www.youtube.com/watch?v=pfUmW_Mf5qc to understand the quote =)",
    "head_branch": "skappee",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1293 from guedou/skappee\n\nHowto pronounce?"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb19da88c0a76e0a51c63",
    "number": 1292,
    "body": "Scapy Version: 2.4.0rc5-79\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nFix for field definition error in contrib.lldp.LLDPDUPortID class\r\nImprovement of definitions in contrib.lldp\r\nAdd missing declaration of ByteField in contrib.lldp\r\nAdd tesst for check fields definition",
    "head_branch": "fix_field_def_in_lldp_LLDPDUPortID",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix an error of field definition in contrib.lldp.LLDPDUPortID class. (#1292)\n\n* Fix field definition error in contrib.lldp.LLDPDUPortID class\r\nImprovement of definitions in contrib.lldp\r\nMissing declaration of ByteField in contrib.lldp\r\nAdd tesst for check fields definition\r\n\r\n* withdrawal of editing changes to facilitate of code review"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb19da88c0a76e0a51c64",
    "number": 1291,
    "body": "Scapy Version: 2.4.0rc5-79\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nExclamation.\r\nIn Py2 threading.ThreadError is just thread.error\r\nIn Py3 threading.ThreadError is just thread._error and is just RuntimeError",
    "head_branch": "PY3_compatibility_improvement_1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1291 from karpierz/PY3_compatibility_improvement_1\n\nPY3 compatibility simplification and little improvement.  [Please add to TODO]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb19ea88c0a76e0a51c65",
    "number": 1290,
    "body": "Scapy Version: 2.4.0rc5-79\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nFix PY3 incompatibilities.",
    "head_branch": "fix_PY3_incompatibilities",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1290 from karpierz/fix_PY3_incompatibilities\n\nFix PY3 incompatibilities. [Please add to TODO]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb19fa88c0a76e0a51c66",
    "number": 1288,
    "body": "Scapy Version: 2.4.0rc5-79\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nFix for #1280\r\nAll notebooks has been ported to Python3.\r\nAll notebooks in tls/*.ipynb works now as expected, graphs-ipids.ipynb also\r\nbut HTTP_2_Tuto.ipynb and 'Scapy in 15 minutes.ipynb' works much better than previously.",
    "head_branch": "fix_jupyter_notebooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1288 from karpierz/fix_jupyter_notebooks\n\nFixes for jupyter notebooks. [Please add to TODO]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a0a88c0a76e0a51c67",
    "number": 1286,
    "body": "This PR:\r\n- updates the notebooks with the new lambda format `lambda x,y: ...` instead of `lambda (x,y): ...`\r\n- updates ploting functions to support both formats on python 2 (on python 3, the first one isn't available)",
    "head_branch": "notebooks-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1286 from gpotter2/notebooks-fixes\n\nPython 2/3: handle lambda (x,y) + update notebooks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a1a88c0a76e0a51c68",
    "number": 1285,
    "body": "Scapy Version: 2.4.0rc5-79\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nfix of inconsistency in test/run_tests_py2.bat\r\nchanges for run windows batched from any place",
    "head_branch": "fix_for_run_tests_py2.bat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1285 from karpierz/fix_for_run_tests_py2.bat\n\nfix of inconvenient inconsistency in test/run_tests_py2.bat [Please add to TODO]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a2a88c0a76e0a51c69",
    "number": 1284,
    "body": "I somehow reversed this call, and missed it while reviewing\r\n\r\nTo be sure everything's OK, I tested all 4 functions (pdfdump and psdump in both plist.py and packet.py)",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1284 from gpotter2/patch-7\n\nStupid mistake in #1254"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a2a88c0a76e0a51c6a",
    "number": 1283,
    "body": "Weird bug in sndrcv, where the timeout check moved in the part only called when no packet is received. \r\nThe timeout check isn't called until scapy receives no packets, otherwise, he continues to sniff.\r\n\r\ne.g. I was downloading a file when I noticed this (tons of packets)\r\n\r\nThere are not really regression tests to set up, there already are some, that surely didn't work.",
    "head_branch": "timeoutsndrcv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1283 from gpotter2/timeoutsndrcv\n\nFix timeout in sndrcv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a3a88c0a76e0a51c6b",
    "number": 1282,
    "body": "Scapy Version: 2.4.0rc5-64\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nThis PR fixes #1199  (regression against scapy<=2.3.2).\r\n(+ some little obvious code improvement in sndrcv())\r\nPlease include it in TODO.\r\n\r\nSee also already closed #1276\r\n",
    "head_branch": "issue_1199_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1282 from karpierz/issue_1199_fix\n\nFix for issue #1199 (regression against scapy<=2.3.2). [PR is ready for merge to the master]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a4a88c0a76e0a51c6c",
    "number": 1278,
    "body": "This is the first PR in the #1277 serie! It is also the bigger one. It was made by `autopep8`.\r\n\r\nThe `tox.ini` file was modify to check for E231, it can be launched manually with:\r\n`tox -e flake8`\r\n\r\nAutomatic checks for E231 are enabled using tox: such errors will now be refused by Travis.",
    "head_branch": "PEPin_E231",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1278 from guedou/PEPin_E231\n\nE231 - missing whitespace after ','"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a5a88c0a76e0a51c6d",
    "number": 1276,
    "body": "",
    "head_branch": "issue_1199_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a6a88c0a76e0a51c6e",
    "number": 1275,
    "body": "Scapy Version: 2.4.0rc5-62\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nFix command line parameter in test\\run_tests_py2.bat and test\\run_tests_py3.bat:\r\n%@ -> %*",
    "head_branch": "fix_test_batches",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1275 from karpierz/fix_test_batches\n\nfix command line parameter in test\\run_tests_py2/3.bat"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a7a88c0a76e0a51c6f",
    "number": 1271,
    "body": "According to #1133:\r\nAfter investigating of behavior of namedtuple as inner class vs usual class as inner class\r\nI'v finally decided to make a PacketMetadata as inner classes of RawPcapReader and RawPcapNgReader\r\n(its behavior in this context/place is exactly the same).\r\nThe main reason is establish a final API for scapy 2.4.0 release.",
    "head_branch": "PacketMetadata_as_inner_class",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1271 from karpierz/PacketMetadata_as_inner_class\n\nPacketMetadata is now an inner class of RawPcapReader, RawPcapNgReader"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a7a88c0a76e0a51c70",
    "number": 1269,
    "body": "Scapy Version: 2.4.0rc5-64\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nThis PR fixes #1249\r\nFix SyntaxError in layers/tls/tools/_tls_aead_auth_decrypt()\r\nAll another errors in layers/tls/tools module has been fixed.\r\nAll code in this module has been ported to Python3.\r\nTests are added for **all** functions in this module.",
    "head_branch": "fix_tls_aead_auth_decrypt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1269 from karpierz/fix_tls_aead_auth_decrypt\n\nfix SyntaxError in layers/tls/tools/_tls_aead_auth_decrypt(). [PR is ready for merge to the master]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a8a88c0a76e0a51c71",
    "number": 1268,
    "body": "This PR fixes #1263 ",
    "head_branch": "Issue_#1263",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1268 from guedou/Issue_#1263\n\nAck Policy field renamed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1a9a88c0a76e0a51c72",
    "number": 1264,
    "body": "**Edited**\r\n\r\nThis PR deletes the gsm_um module\r\n\r\n### Why this module is bad:\r\n- it has no bindings and uses weird functions to create packets\r\n- it cannot dissect packets\r\n- it has no tests\r\n- it includes links to a website that is down\r\n- it would need a lot of time to fix it\r\n- **It makes the code quality of the project goes down by a lot**\r\n### Why its good:\r\n- there are tutorials on the internet that uses it\r\n- it achieves a unique thing\r\n\r\n==> Best option (as discussed with @guedou) is to delete it from scapy's codebase, and move it to the Wiki.\r\nhttps://github.com/secdev/scapy/wiki/%5BLegacy%5D-Contrib:-gsm_um\r\n\r\nWhats your mind about it ?",
    "head_branch": "gsmum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1264 from gpotter2/gsmum\n\nRemove gsm_um"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1aaa88c0a76e0a51c73",
    "number": 1261,
    "body": "fixes https://github.com/secdev/scapy/issues/1260\r\n\r\nAccording to page 20 of https://tools.ietf.org/html/rfc3810, it also seems that we build the packet correctly, even though wireshark fails when using auxiliary data.",
    "head_branch": "hunterbuster",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1261 from gpotter2/hunterbuster\n\nFix IPv6 multicast address record"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1aba88c0a76e0a51c74",
    "number": 1259,
    "body": "# This PR was a failure. See https://github.com/secdev/scapy/pull/1999\r\n\r\n## What it does\r\n\r\nSplit the sniffing process into several threads:\r\n- first one doing pcap/libpcap/whatever calls, and storing data in a shared list\r\n- second one constantly dissecting any available packets\r\n\r\nTo make this work, it was needed to separate dissecting and recieving in the arch/ hooks: introducing `recv_async` (of course name may be changed), which only recieves the packet as raw bytes. It is called by the older `recv()` functions, which will keep the same behavior\r\n\r\nThis allows to split scapy's processing part from API calls. It free the buffer of the APIs into scapy's one.\r\n\r\n## Benchmark\r\n\r\n- Start 2 scapy instances\r\n\r\n- In the first one:\r\n```python\r\ndef stats():\r\n    try:\r\n        i = [0]\r\n        t = time.time()\r\n        on = [True]\r\n        def _t(t=t):\r\n            while on[0]:\r\n                print(str(i[0]/(max(1, time.time()-t))) + \" packets / sec\")\r\n                time.sleep(3)\r\n        Thread(target=_t).start()\r\n        def _prn(pkt):\r\n            i[0] += 1\r\n        sniff(prn=_prn)\r\n    except KeyboardInterrupt:\r\n        print(\"Goodbye\")\r\n    finally:\r\n        on = [False]\r\n```\r\n- In the second one\r\n```python\r\na = raw(Ether()/IP())\r\nsendp(a, loop=1)\r\n```\r\n\r\n- Finally, in the first instance, type `stats()`\r\n\r\n## Results\r\n\r\n- On secdev/master\r\n\r\n![no_mthread](https://user-images.githubusercontent.com/10530980/37555865-92c06388-29ee-11e8-985b-b26e9ba1eafe.png)\r\n\r\n- This branch\r\n\r\n![mthread](https://user-images.githubusercontent.com/10530980/37555866-995f32a0-29ee-11e8-8e4d-c3dcd77debf0.png)\r\n\r\nThose results already are an average\r\n\r\n| Speed test                      | Secdev/master | This PR |\r\n|---------------------------------|---------------|---------|\r\n| Average: Recieved packets / sec | 647           | 1820    |\r\n\r\n**Edit: this seems wrong, as we are not using multiprocessing but threading, so the measuring methods are slowed down too, making the hole thing clunky.. Redoing the tests in a proper environment (two separate shells) makes the results very different**\r\n\r\n## Conclusion\r\n\r\nThis PR improves the recieved packet / second rate by 281%\r\n\r\n\r\n# TODO & discussion\r\n- Switch from threading to multiprocessing ? We need to check the performances of doing so.",
    "head_branch": "multithread-sniff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1aca88c0a76e0a51c75",
    "number": 1257,
    "body": "",
    "head_branch": "disable_snmpwalk_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1257 from guedou/disable_snmpwalk_test\n\nsnmpwalk() tests commented"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1aca88c0a76e0a51c76",
    "number": 1256,
    "body": "Disabling the snmpwalk test due to an unknown but very frequent impact on the instability of other tests  on Apveyor CI and accidentally also on Travis CI.\r\n",
    "head_branch": "disabling_the_snmpwalk_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1ada88c0a76e0a51c77",
    "number": 1255,
    "body": "Fixes #1120.",
    "head_branch": "fix-progs-pdfps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1255 from p-l-/fix-progs-pdfps\n\nUse xdg-open (Linux / *BSD) or open (MacOS) to open PDF & PS files by default"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1aea88c0a76e0a51c78",
    "number": 1254,
    "body": "- This PR: adds a `os.startfile` fallback on psdump and pdfdump when no program is available\r\n- fixes ContextManagerSubprocess calls in plist\r\n- missing safety `print()` to avoid `....>>>`",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1254 from gpotter2/patch-7\n\nContextManagerSubprocess fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1afa88c0a76e0a51c79",
    "number": 1253,
    "body": "This PR fixes #1242 ",
    "head_branch": "Issue_#1242",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1253 from guedou/Issue_#1242\n\nWrite a PCAP header when no packets are provided"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b0a88c0a76e0a51c7a",
    "number": 1251,
    "body": "Linux L2Socket returns NULL on recv for outgoing frames <=>\r\nif one sends frames on the interfaces used by bridge_n_sniff\r\nthe socket was deleted and bridge_n_sniff stopped working\r\n\r\nThis is an ugly workaround. Would be much cleaner if recv would\r\nthrow an Exception (e.g. ScapyRecvFrameIgnored) - but I guess\r\nthis would break the interface...\r\n\r\n\r\n\r\nfixes #1190 ",
    "head_branch": "using-sendp-inside-bridge-and-sniff-stops-bridging-clean-#1190",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sniff - don't delete socket on recv NULL if in promisc mode #1190 (#1251)\n\n* sniff - don't delete socket on recv NULL if in promisc mode #1190\r\n\r\nLinux L2Socket returns NULL on recv for outgoing frames <=>\r\nif one sends frames on the interfaces used by bridge_n_sniff\r\nthe socket was deleted and bridge_n_sniff stopped working\r\n\r\n* add support for veth pairs under Linux #1190\r\n\r\nrequired for testing bridge_and_sniff()\r\n\r\n* tests for veth pairs support #1190\r\n\r\n* test bridge_and_sniff does not close sockets if data is send within xfrm #1190\r\n\r\nthis test uses two virtual interface pairs bridged together\r\nusing bridge_and_sniff()\r\n\r\na_1<---->bridge_and_sniff(a_0 , b_0)<---->b_1\r\n\r\nthis allows simple injection of frames on both ends (a_1, b_1) while\r\ntesting the whole infrastructure (bridge_and_sniff() and L2Socket)\r\n\r\n* error handling - fix and add test #1190\r\n\r\nalso allow to use the VEthPair class without CtxMgr\r\n\r\n* extend VEthPair tests - demonstrate usage #1190\r\n\r\n+ demonstrate usage with/without context manager\r\n+ catch subprocess call exceptions\r\n\r\n* add started_callback to sniff #1190\r\n\r\n* use sniff started_callback in VEthPair tests #1190"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b1a88c0a76e0a51c7b",
    "number": 1250,
    "body": "$ __python3 -m flake8 . --count --select=E9,F82 --show-source --statistics__\r\n\r\nThis is a great way to find syntax errors and undefined names in a code base when ensuring compatibility with both Python 2 and Python 3.  This PR uses this approach to find and fix issues that have the potential to raise __NameError__ at runtime.",
    "head_branch": "fix-flake8-issues",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b1a88c0a76e0a51c7c",
    "number": 1247,
    "body": "This PR currently:\r\n- imports 802.14.5 from scapy-com\r\n- imports SixLoWPAN from scapy-com\r\n- imports bluetooth 4 LTE from scapy-com\r\n- fixes SixLoWPAN, Dot15D4 for Python 3, adds ZEP link protocols, fixes existing fields, reformat code, add docstrings\r\n- finish a few TODOs (some remaining)\r\n- fixes already existing tests + add tests + PY3\r\n\r\noverwrites https://github.com/secdev/scapy/pull/1179",
    "head_branch": "fix-prs-1241",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1247 from gpotter2/fix-prs-1241\n\nLayers [bt4LE, dot15d4, sixlowpan] import & refactor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b2a88c0a76e0a51c7d",
    "number": 1245,
    "body": "Hi, \r\nhere is a new version of my CANSocket implementation.\r\nThis time, I also add a wrapper for python-can. This allows the usage of CANSockets on Python 2.\r\nThe padding is now handled, as we discussed it, in the previous pull requests. \r\nGreetings Nils",
    "head_branch": "python-can-rebase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CANSocket implementation for scapy\n\nmove automotive doc into advanced usage doc\n\nfixed a minor bug and updated the docs\n\nremove timeout check from srcan"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b3a88c0a76e0a51c7e",
    "number": 1244,
    "body": "This fixes #1243 ",
    "head_branch": "dojo_in6_addrtovendor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1244 from guedou/dojo_in6_addrtovendor\n\nDon't crash on empty manufdb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b4a88c0a76e0a51c7f",
    "number": 1241,
    "body": "This PR adds a IEC 60870-5-104 layer based on \r\n- IEC 60870-5-4, \r\n- IEC 60870-5-101 and (surprise) \r\n- IEC 60870-5-104.\r\n\r\nI kept the basic building blocks in separate files as it will be easier to navigate while applying \r\nthe upcoming storm of change requests <-> I will merge all parts in iec104.py if done.\r\n\r\nFew remarks about the implementation:\r\n\r\n1. 647ea90 / 6c29629 extends the stock guess_payload_class() by adding a special attribute *payload_dispatcher* that can be used to supply a function for guessing next layers class based on the payload. This becomes handy if one needs to dispatch the class type following a standard layer (e.g. TCP or UDP) - usually connected via bind_layer(). Up to now one would need to add a dispatch layer - e.g. IEC104 would look like\r\n\r\n```\r\nTCP\r\n..\r\nIEC104\r\nIEC104_I_Message\r\n...\r\n```\r\n\r\ninstead of \r\n\r\n```\r\nTCP\r\n..\r\nIEC104_I_Message\r\n..\r\n```\r\nFor now this is a kwargs attribute - maybe this should be converted to an explicit named attribute of bind_layers().\r\n\r\n2. There are a lot of information object definitions in the code only used within IEC 60870-5-101. This is on purpose so one is able to decode invalid messages forwarded by a faulty IEC101/104 gateway and for testing that kind of a gateway.\r\n",
    "head_branch": "iec-60870-5-104",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1241 from speakinghedge/iec-60870-5-104\n\nadd IEC 60870-5-104 layer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b5a88c0a76e0a51c80",
    "number": 1240,
    "body": "Scapy Version: 2.4.0rc5-40\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4",
    "head_branch": "little_but_obvious_code_improvements_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1240 from karpierz/little_but_obvious_code_improvements_2\n\nScapy 2.4.0rc5-40: Little but obvious code improvements. [PR is ready for merge to the master]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b6a88c0a76e0a51c81",
    "number": 1238,
    "body": "Scapy Version: 2.4.0rc5-31\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nSimple fix to avoid:\r\n```\r\nif ICMP in r:\r\n    TypeError: argument of type 'NoneType' is not iterable\r\n```\r\nwhere is no answer from destination.\r\n\r\nThanks,\r\nAdam Karpierz",
    "head_branch": "fix_a_bug_in_snmpwalk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1238 from karpierz/fix_a_bug_in_snmpwalk\n\nScapy 2.4.0: fix a bug in 'snmpwalk()'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b6a88c0a76e0a51c82",
    "number": 1237,
    "body": "Scapy Version: 2.4.0rc5-31\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nThanks,\r\nAdam Karpierz",
    "head_branch": "fix_a_bug_in_snmpwalk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b7a88c0a76e0a51c83",
    "number": 1236,
    "body": "Scapy Version: 2.4.0rc5-28\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4\r\n\r\nFix a handle inheritance for Python2 (more appropriate and safe version of #1138 hack, fixes #1136)\r\nFix an error of '_windows_title()' for Python2\r\n\r\nThanks,\r\nAdam Karpierz",
    "head_branch": "fix_file_handle_inheritance_for_py27",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1236 from karpierz/fix_file_handle_inheritance_for_py27\n\nFix handle inheritance for Python2 (more appropriate and safe version of #1138 hack, fixes #1136)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b8a88c0a76e0a51c84",
    "number": 1234,
    "body": "Scapy Version: 2.4.0rc5-30\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14/3.4.4/3.6.4",
    "head_branch": "fix_file_handle_inheritance_for_py27",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1b9a88c0a76e0a51c85",
    "number": 1233,
    "body": "The regression test keyword mock_read_routes6_bsd did not fit well\r\ninto the naming pattern, call it read_routes instead.  Certain test\r\ncategories were excluded on the AppVeyor command line.  That was\r\nnot obvious for test authors.  Better introduce a new keyword\r\nappveyor_skip for this purpose.",
    "head_branch": "test-keyword",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1baa88c0a76e0a51c86",
    "number": 1232,
    "body": "Work in progress...! Created for perform scapy tests.",
    "head_branch": "fix_handle_inheritance_for_py27",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1bba88c0a76e0a51c87",
    "number": 1231,
    "body": "fixes https://github.com/secdev/scapy/pull/1201\r\n\r\nThis PR:\r\n- remove useless duplicated code\r\n- Now process the ID fields according to their types",
    "head_branch": "lldp-length",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1231 from gpotter2/lldp-length\n\nLLDP: support complex ID types"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1bba88c0a76e0a51c88",
    "number": 1229,
    "body": "This is a proposal to conclude the discussion in the PR #1211 and the Issue #1219.\r\n\r\nIt makes the extra-bytes on the CAN.data field be handled as padding and fixes the ```byte-swap``` functionality in this case (when padding is present).",
    "head_branch": "can_layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1229 from smainand/can_layer\n\nhandle padding and fix building of CAN packets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1bca88c0a76e0a51c89",
    "number": 1226,
    "body": "Scapy Version: 2.4.0rc5-13\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14",
    "head_branch": "little_but_obvious_code_improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1226 from karpierz/little_but_obvious_code_improvements\n\nScapy 2.4.0: Little but obvious code improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1bda88c0a76e0a51c8a",
    "number": 1225,
    "body": "Scapy Version: 2.4.0rc5-5\r\nSystem: Windows7/Windows10\r\nPython Version: 2.7.14\r\n\r\nThis is \"unification\" :) of #1223 and #1186 and my own previous  (not published ealier) fix for other layers (+some lilttle improvement  of code related to use of issubclass().\r\n\r\nThanks,\r\nAdam Karpierz",
    "head_branch": "fix_haslayer_bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1225 from karpierz/fix_haslayer_bug\n\nAllow non-matching string arguments in haslayer methods (covers #1223, #1186 and other/all layers)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1bea88c0a76e0a51c8b",
    "number": 1224,
    "body": "This PR adds support for draft-ietf-nvo3-geneve-06",
    "head_branch": "geneve",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for Geneve per IETF draft draft-ietf-nvo3-geneve-06 (#1224)\n\n* Add support for Geneve protocol per IETF draft\r\ndraft-ietf-nvo3-geneve-06\r\n\r\n* Add unit test for GENEVE\r\n\r\n* fix white spaces according to flake8 output"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1bfa88c0a76e0a51c8c",
    "number": 1223,
    "body": "These methods already recognize specific string arguments, e.g.\r\n`EAP.haslayer()` recognizes \"EAP\" as an argument. However, non-matching\r\nstring arguments would get passed to `issubclass()`, which is invalid.\r\n\r\nThis issue was discovered when running `PacketList.sessions()` on a pcap\r\ncontaining only NTP packets. That would end up calling\r\n`NTP.haslayer(\"TCP\")`, which in turn would attempt to call\r\n`issubclass(\"TCP\", NTP)`.",
    "head_branch": "haslayer-string-arg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1bfa88c0a76e0a51c8d",
    "number": 1222,
    "body": "Fix bug created by https://github.com/secdev/scapy/pull/1198: no backward compatibility with winpcap\r\n\r\n(Forgot to check if the code was Winpcap compatible)\r\n\r\nfixes https://github.com/secdev/scapy/issues/1221",
    "head_branch": "hotfix1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1222 from gpotter2/hotfix1\n\nFix scapy used with Winpcap on Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c0a88c0a76e0a51c8e",
    "number": 1220,
    "body": "Content of this PR:\r\n- Fix grammar mistakes in the doc using [Grammarly](https://www.grammarly.com)\r\n- Update `Makefile` and `make.cmd` (replaces BuildDoc.bat), from the latest sphinx sources\r\n- Update `conf.py` to the latest sphinx format\r\n- _**Remove links scapy-ml mail list (needed ?)**_\r\n\r\nNote: don't use compare mode to review the Makefile + make.cmd files, they are 87% different",
    "head_branch": "doc-remaster",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1220 from gpotter2/doc-remaster\n\nDoc fixes & sphinx update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c1a88c0a76e0a51c8f",
    "number": 1216,
    "body": "The source keyword is a bash extension that is not recognized by\r\nevery bourne shell.  The . command works everywhere.",
    "head_branch": "sh-source",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1216 from bluhm/sh-source\n\nUse . instead of source shell command."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c2a88c0a76e0a51c90",
    "number": 1215,
    "body": "This should fix #1161.\r\n\r\nHere is how to use it:\r\n```\r\n$ cat test_sniff.py \r\nfrom scapy.all import *\r\n\r\ns = sniff(count=1, timeout=1, monitor=True)\r\nif len(s):\r\n    s.nsummary()\r\n$ sudo python test_sniff.py \r\n0000 RadioTap / 802.11 Data 4 92:84:b0:7b:0d:da > b4:52:7d:41:be:96 / LLC / Raw\r\n```",
    "head_branch": "osx_802.11_monitor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1215 from guedou/osx_802.11_monitor\n\n801.11 monitor mode for OSX"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c3a88c0a76e0a51c91",
    "number": 1213,
    "body": "In OpenBSD the MTU value of a route may be locked.  This is indicated\r\nby an ' L' in the netstat -r output.  For scapy's read_routes()\r\nthis looks like an additional column.  Make the parser aware of\r\nthis possibility when finding the network interface.",
    "head_branch": "route-locked",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1213 from bluhm/route-locked\n\nHandle OpenBSD routes with locked MTU."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c4a88c0a76e0a51c92",
    "number": 1212,
    "body": "This PR adds IPv6 support for the sessions() and conversations() methods.",
    "head_branch": "plist_ipv6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1212 from guedou/plist_ipv6\n\nPacketList: sessions() and conversations() IPv6 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c4a88c0a76e0a51c93",
    "number": 1211,
    "body": "I need this modifications to have a fixed packet size of 16 bytes. In my SocketCAN implementation I need to do a byteswap, since the Linux CAN sockets use a different byteorder as pcap. ",
    "head_branch": "can_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c5a88c0a76e0a51c94",
    "number": 1209,
    "body": "This PR relies on PR #1205 and PR #1208 \r\nAfter the merge of this PRs, I will finish this PR, too. At the moment, I want to try the unit tests on the build system.\r\n",
    "head_branch": "isotp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c6a88c0a76e0a51c95",
    "number": 1208,
    "body": "",
    "head_branch": "mergeSocketCanUT",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c7a88c0a76e0a51c96",
    "number": 1207,
    "body": "See https://travis-ci.org/secdev/scapy/jobs/348646654\r\n\r\nThis PR attempts to fix Python3.* installation with homebrew.",
    "head_branch": "travis_ox_py36",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1207 from guedou/travis_ox_py36\n\n[Travis] Python 3.6 osx builds are broken"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c8a88c0a76e0a51c97",
    "number": 1205,
    "body": "Clean git history.",
    "head_branch": "mergeSocketCan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c9a88c0a76e0a51c98",
    "number": 1204,
    "body": "Content: 2 bugs + 1 improvement\r\n\r\n## Bug 1 - Loopback bindings\r\n[a.pcapng.gz.zip](https://github.com/secdev/scapy/files/1777365/a.pcapng.gz.zip)\r\n\r\nThe 3 packets in this pcap were not decoded in scapy (they are LLMNR / SNMP) binded to Loopback(), but worked in wireshark.\r\n\r\n\r\n## Bug 2 - UDP DNS overwrites SNMP\r\n![image](https://user-images.githubusercontent.com/10530980/36933184-2215514e-1ed5-11e8-892a-e002656736e7.png)\r\n\r\n## Improvement: LLMNR dispatch_hook\r\n\r\n## Notes\r\n\r\nThis PR comes with a few tests edit, because the default UDP() isn't the same anymore.",
    "head_branch": "bind-udp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1204 from gpotter2/bind-udp\n\nAdditional Loopback bind + LLMNR bind + SNMP bind"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1c9a88c0a76e0a51c99",
    "number": 1203,
    "body": "Notes:\r\n- Openflow autocompletion is now enabled by default. This means that a few  tests based on the `raw(s) == ...` format have been changed.\r\n- Fixes some Python3 compat bugs (str/raw)\r\n- Changed the way `prereq_autocompletion` was specified, to follow the same way than the can layer, for instance. Indeed, because of how its imported, it was not possible to set it to True before (its used into the Class defaults before being editable)",
    "head_branch": "tests-cert",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1203 from gpotter2/tests-cert\n\n[coverage] Various tests (tls, openflow)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1caa88c0a76e0a51c9a",
    "number": 1201,
    "body": "if you create a LLDPDUChassisID packet with subtype 0x04 (MAC address) there was no MAC address in 'show()' but an long integer value\r\n\r\ne.g. for chosen chassis id: \"ff:dd:ee:bb:aa:99\" this is the output:\r\n\r\n--- XStrLenField ---\r\n...\r\n        _type     = chassis id\r\n        _length   = 18\r\n        subtype   = MAC address\r\n        id        = 66663a64643a65653a62623a61613a3939\r\n...\r\n\r\nLLDPDUPortID has a similar structure of the packet and at the end there was a MAC address\r\n\r\nSo I changed XStrLenField to StrLenField like in LLDPDUPortID:\r\n\r\n--- StrLenField ---\r\n...\r\n     _type     = chassis id\r\n     _length   = None\r\n     subtype   = MAC address\r\n     id        = 'ff:dd:ee:bb:aa:99'\r\n...\r\n\r\nNevertheless there are some more problems in this file.\r\nwireshark marks all packets as corrupt\r\n-> original lldpd linux daemon creates chassis id tlv with a length of 7 -> here it is always 18\r\n-> when manually setting _length attribute to 7, this will work so far, but the packet is still not correct",
    "head_branch": "lldp_chassis_id_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1cba88c0a76e0a51c9b",
    "number": 1200,
    "body": "Hi, \r\nhere is a implementation for CAN, to use CANSockets directly in Scapy.",
    "head_branch": "SocketCAN",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1cca88c0a76e0a51c9c",
    "number": 1198,
    "body": "Scapy Version: 2.4.0rc5-5\r\nSystem: Windows10\r\nPython Version: 2.7.14\r\n\r\nFix a backward compatibility bug in the wrapping of pcapdnet.open_pcap in scapy/arch/windows/\\_\\_init\\_\\_.py\r\nNow scapy 2.4.x correctly works as previously also if iface is of a different type than NetworkInterface (e.g. string).\r\nPS: Also hide 'open_pcap' wrapper (a name changed to '_open_pcap') for full backward compatibility.\r\n      Previously a name 'open_pcap' has not been exhibited at all by this module. \r\n\r\nThanks,\r\nAdam Karpierz",
    "head_branch": "fix_bug_in_open_pcap_on_windows",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1198 from karpierz/fix_bug_in_open_pcap_on_windows\n\nFix a backward compatibility bug in open_pcap (on Windows)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1cda88c0a76e0a51c9d",
    "number": 1196,
    "body": "This PR is a bit tricky as some parsing must be  in `IPv6.extract_padding()` to retrieve the payload length from the payload itself.",
    "head_branch": "ipv6_jumbo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1196 from guedou/ipv6_jumbo\n\nDecode IPv6 Jumbograms"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1cea88c0a76e0a51c9e",
    "number": 1194,
    "body": "For an unknown reason, a few tests are only working locally (not on Appveyor/Travis).\r\nHowever, they work under Travis Python 3.3\r\n\r\nI cannot explain why. They are disabled through the 2nd commit",
    "head_branch": "tests-cert",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1194 from gpotter2/tests-cert\n\nCert: Tests, Python 3 and Cryptography update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1cea88c0a76e0a51c9f",
    "number": 1193,
    "body": "Try to use IPython builtin + on Windows, reset it each time a program reset it (wlanhelper + powershell do reset it)\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/36736058-eeecb690-1bd7-11e8-8df2-f2be7dd4fc26.png)\r\n",
    "head_branch": "title-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support terminal title (#1193)\n\n* Support terminal title\r\n\r\n* Docstring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1cfa88c0a76e0a51ca0",
    "number": 1187,
    "body": "This patch adds the GENEVE tunnel support to scapy.\r\nThe first 16 bits are not mandatory from the RFC point-of-view, so the fields are cleared and then only the required ones are being populated.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d0a88c0a76e0a51ca1",
    "number": 1186,
    "body": "Fixed an error (TypeError) that triggered when reading a pcap file that contained ntp packets. The type of variable \"cls\" was string not a class type (invalid argument for method: issubclass()). By importing the type 'TCP' from 'scapy.layers.inet' and by converting cls to a classtype by reading the key from globals, the TypeError is mitigated.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed a TypeError that triggered when reading a pcap file containing a NTP packet. (#1186)\n\n* Fixed an error (TypeError) that triggered when reading a pcap file that\r\ncontained ntp packets. The type of variable \"cls\" was string not a class\r\ntype (invalid argument for method: issubclass()). By importing the type\r\n'TCP' from 'scapy.layers.inet' and by converting cls to a classtype by\r\nreading the key from globals, the TypeError is mitigated.\r\n\r\n* Added test to provide insight into the cls variable inconsistencies.\r\nFixed a small mistake\r\n\r\n* https://github.com/secdev/scapy/pull/1186/files/d0a2544ae13ba353d25e86be2cfc13cceda36a10\r\n\r\n* Moved tests.\r\n\r\n* fix backward incompatibility of scapy.utils.RawPcapReader.read_packet() for scapy's v2.4 againts v2.3.2 & v2.3.3\r\nnamed tuple instead of tuple as result of RawPcap[Ng]Reader.read_block_???()/read_packet():\r\n\r\n* Fixed an error (TypeError) that triggered when calling sessions() on a PacketList that\r\ncontained ntp packets. The type of variable \"cls\" was a string not a class\r\ntype (invalid argument for method: issubclass()).\r\n\r\n* Added test to provide insight into the cls variable inconsistencies.\r\nFixed a small mistake\r\n\r\n* https://github.com/secdev/scapy/pull/1186/files/d0a2544ae13ba353d25e86be2cfc13cceda36a10\r\n\r\n* Forgot to delete ntp.uts during rebase..."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d1a88c0a76e0a51ca2",
    "number": 1185,
    "body": "This patch adds the support for GENEVE tunnel to the existing set of\r\noverlay protocols (e.g. VXLAN).\r\n\r\nSigned-off-by: Marco Varlese <marco.varlese@suse.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d2a88c0a76e0a51ca3",
    "number": 1184,
    "body": "UDP source port for GTP is supposed to be locally allocated, not binded to the well known protocol ports.  Plus I don't think the two consecutive binds to the same layer works as intended.",
    "head_branch": "gtp_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d3a88c0a76e0a51ca4",
    "number": 1183,
    "body": "This should fix the currently failing test on osx with Python 3.6",
    "head_branch": "tox_netflowv9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1183 from guedou/tox_netflowv9\n\nFix netflowv9.pcap path"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d4a88c0a76e0a51ca5",
    "number": 1181,
    "body": "When performing packet tests to a device under test (DUT), sometime the DUT loses packets.  When automating such tests, it is desirable to have the test, hence the sniff session, to end as soon as possible, even when the expected number of packets are not received, or the end of the stream marker packet is not received, both due to packet loss. The existing parameter timeout doesn't accomplish what's needed here, since when you writing the automation for the packet tests, there is no way to anticipate how many packets will be sent, therefore no way to estimate the total duration of the test.  By introducing a parameter interpkt_timeout to sniff(), it specifies a timeout value in seconds, such that, if the timeout has passed since the most recent packet was captured, and no new packet is captured, the sniff stops.",
    "head_branch": "interpkt_timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d4a88c0a76e0a51ca6",
    "number": 1180,
    "body": "When performing a packet test to a device under test (DUT), sometimes the DUT drops packets.  When you automate such tests, you want a reliable way for the test to stop, i.e. the sniff to stop as soon as possible, even when it doesn't receive the expected number of packets (due to packet lost).  An outright timeout doesn't work in such a case, because we want to accommodate cases where the tester wants to send however any packets he/she wants to, so there is no reasonable way to anticipate the finishing time.  By adding this new parameter interpkt_timeout to sniff, you can tell sniff to stop and return when the specified timeout in seconds has passed since sniff last receives and captures a packet, without any new packets captured.",
    "head_branch": "interpkt_timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d5a88c0a76e0a51ca7",
    "number": 1179,
    "body": "Included dot15d4 file and other needed updates. This is a well tested layer that is not in this version of scapy's repo.\r\n\r\nNote that it adds HiddenField in (this is in other scapy repos, but not this one) -- I am unsure if support for HiddenField is needed in show() or show2(), etc.\r\n\r\nThe other updates are fields that were missing and are used in the tools. These are just LE versions of existing shorts/ints.\r\n\r\nThe overall change to Field() class should be checked. I looked at other scapy branches and it looks like they are declaring Field similar to how I have changed it here.",
    "head_branch": "feature/dot15d4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d6a88c0a76e0a51ca8",
    "number": 1175,
    "body": "BlockAck Request frames have RA (addr1) and TA (addr2) addresses. Only addr1 was being parsed. Also, sorted list of subtypes that have an addr2 field for legibility.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add BlockAck Request subtype for addr2 conditional field clause (#1175)\n\n* Fixed parsing of addr2 (TA) for BlockAck Request frames.\r\n\r\n* Unit test for addr2 dissect in BlockAck Request frames."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d7a88c0a76e0a51ca9",
    "number": 1174,
    "body": "I had not noticed he had not rebased to Python 3 tests",
    "head_branch": "critical-fix1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1174 from gpotter2/critical-fix1\n\n[Tests] Fix TZSP tests - Travis CI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d8a88c0a76e0a51caa",
    "number": 1173,
    "body": "Hey guys, I had to close my previous pull request and open a new one because it was so far behind.\r\n@p-l- @guedou  I'm very sorry for the huge delay on fixing everything.\r\n\r\nSo we don't lose history, below I quote @alexsult :\r\n\r\n> Hi @decastromonteiro ,\r\n> \r\n> First of all, thanks for improving the GTP support. Like @p-l- , I have few things to say :\r\n> \r\n>     The IE_EndUserAddress field may be already used by other scapy scripts/programms, so changing PDPAdress to PDPAddress_IPv4 (even if it is more appropriate) would break existing code. Could you keep the name PDPAdress for IPv4 and use PDPAddress_IPv6 for IPv6 ?\r\n>     To continuously check if commits don't affect old functions, it is asked to write tests corresponding to (all) the changes you do.\r\n>     Here is how you can check your code is covered (with the coverage module):\r\n>     To update coverage :\r\n> \r\n>     PYTHONPATH=. coverage run scapy/tools/UTscapy.py -P \"load_contrib('gtp')\" -t scapy/contrib/gtp.uts\r\n> \r\n> And to check:\r\n> \r\n>     $ coverage report scapy/contrib/gtp.py\r\n>     Name Stmts Miss Cover\r\n>     scapy/contrib/gtp.py 301 41 86%\r\n> \r\n> Before your modifications, it was 87% covered. We don't ask you to add tests for everything, but could you add them for what you did ?\r\n> \r\n> To see what is covered:\r\n> \r\n>     $ coverage html scapy/contrib/gtp.py\r\n> \r\n> It produces an html report in the htmlcov of your current directory.\r\n> \r\n> About .anwsers and .hashret :\r\n> \r\n>     Hashret\r\n> \r\n>     hashret(self)\r\n>     Must returns a string that has the same value for a request and its answer.The result of this function is used as a hash value to speed up the look fora the request matching a given response.\r\n> \r\n> You are using .seq with does not exist in GTPDeletePDPContextResponse (so it will not work), but this field exists in GTPHeader and I would use it (seq from the GTPHeader) with the sgsn and ggsn IP addresses to construct this hash value.\r\n> \r\n>     Answers\r\n> \r\n>     answers(self,other)\r\n>     True if self is an answer from other\r\n> \r\n> I think that you can compare the results of the .hashret of the two packets\r\n> \r\n>     I have seen you removed trailing spaces, that's nice regarding the pep8, but it makes difficult to read the diffs and to keep track of the modifications, could you cancel this changes ?\r\n> \r\n> Alexis\r\n\r\n\r\n1 - Alexis, I followed your suggestion and kept PDPAddress field, only adding IPv6_PDPAddress Field to support both IPv6 and IPv4/IPv6.\r\n\r\n2 - \r\n> You are using .seq with does not exist in GTPDeletePDPContextResponse (so it will not work), but this field exists in GTPHeader and I would use it (seq from the GTPHeader) with the sgsn and ggsn IP addresses to construct this hash value.\r\n\r\nIt's true that sequence only exists on GTPHeader, but as GTPCreatePDPContextRequest/Response uses sequence to hashret and answers, and works fine by my tests (I'm using a real GGSN to send those messages to monitor if they're are \"healthy\") I also added the same methods to GTPDeletePDPContextRequest/Response. It worked fine within my scenario. Before those lines, scapy would not recognize the answer.\r\n\r\nWhen trying to generate a test on scapy to verify hashret and answers, I get the error saying that seq does not exists, as you said it would. So to avoid further trouble I'm pushing this pull request without those changes.\r\n\r\nWould you be willing to collaborate with me to solve it? I can provide real traces from GGSN and SGSN.\r\nLet me know if you're interested.\r\n\r\n 3 - About coverage, it's maintained on 88% after changes\r\n\r\nName                   Stmts   Miss  Cover\r\nscapy/contrib/gtp.py     292     36    88%\r\n\r\nBest regards\r\n",
    "head_branch": "GTPv1-IPv6-Support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1173 from decastromonteiro/GTPv1-IPv6-Support\n\nAdded IPv6 and IPv4/IPv6 support to GTPv1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d8a88c0a76e0a51cab",
    "number": 1172,
    "body": "This PR fixes #1171. The idea is too force Scapy to use `conf.iface` when dealing with IPv6 link-local addresses.",
    "head_branch": "ipv6_route_ll",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1172 from guedou/ipv6_route_ll\n\nIPv6 use conf.iface when selecting the source link-local address"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1d9a88c0a76e0a51cac",
    "number": 1169,
    "body": "Quickfix for https://github.com/secdev/scapy/issues/1166\r\n\r\nSurely needs more testing (I've tested it with IPython 5.4.1, 6.1, 2.3.1 and no ipython)\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/36487431-25b55904-1721-11e8-9cc9-4cc6d5833a08.png)\r\n",
    "head_branch": "fixipython",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1169 from gpotter2/fixipython\n\nQuickfix IPython"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1daa88c0a76e0a51cad",
    "number": 1168,
    "body": "This PR fixes several Python3 related issues with NIQ.",
    "head_branch": "niq_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1168 from guedou/niq_fixes\n\nNIQ fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1dba88c0a76e0a51cae",
    "number": 1167,
    "body": "`UT_FLAGS` are not all configured when currently dumping them. This PR prints them right before starting the tests.",
    "head_branch": "print_ut_flags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1167 from guedou/print_ut_flags\n\nDump UT_FLAGS right before starting tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1dca88c0a76e0a51caf",
    "number": 1165,
    "body": "This PR adds monitor mode support to Windows, allowing to sniff raw Wifi packets.\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/36454845-e099d45e-169d-11e8-8339-27f779633373.png)\r\n\r\nContent:\r\n- use/improve already existing npcap utils\r\n- add monitored socket support (+ adds missing npcap API calls)\r\n- updates kracks module to use this API",
    "head_branch": "windowsmonitor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1165 from gpotter2/windowsmonitor\n\nSupport monitor mode on windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1dca88c0a76e0a51cb0",
    "number": 1164,
    "body": "Much more accurate auto-croping system.",
    "head_branch": "autocropv2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1164 from gpotter2/autocropv2\n\nNew auto-crop system"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1dda88c0a76e0a51cb1",
    "number": 1163,
    "body": "This PR is based on a patch from Antonios Atlasis (@aatlasis) that adds MLDv2 support. I modified it to ease packets forging and matching. This should also fix #1152.\r\n\r\nA commit also modifies MLDv1.",
    "head_branch": "mldv2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1163 from guedou/mldv2\n\nMLDv2 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1dea88c0a76e0a51cb2",
    "number": 1162,
    "body": "I recently had access to a Windows 8 computer.\r\nHere's a fix for the \"ipv6 route\" bug: powershell has no informations about interfacemetrics (which were available only starting from windows 10).\r\n\r\nThis fix will uses windows 7 technique on windows 8, to load IPv6 routes\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/36394515-e851caf6-15b4-11e8-9bad-0b30f1900574.png)\r\n",
    "head_branch": "win7-route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1162 from gpotter2/win7-route\n\nWindows: Windows 8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1dfa88c0a76e0a51cb3",
    "number": 1160,
    "body": "Attempt at replacing the current Travis tests with tox. The ultimate goal is to test locally as done on Travis.\r\n\r\nI had to remove Python3.3 support due to a bug with distutils that I could not fix.",
    "head_branch": "tox_linux",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1160 from guedou/tox_linux\n\nSwitch Linux Travis test to tox"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e0a88c0a76e0a51cb4",
    "number": 1158,
    "body": "This PR provides an easy fix to #1147.",
    "head_branch": "Fix_1147",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1158 from guedou/Fix_1147\n\nFix 1147"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e1a88c0a76e0a51cb5",
    "number": 1156,
    "body": "",
    "head_branch": "tests-ipv6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1156 from gpotter2/tests-ipv6\n\nIPv6 attack tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e2a88c0a76e0a51cb6",
    "number": 1155,
    "body": "just a first iteration and up for discussion/improvements/refinement.\r\n\r\ncould also be moved to a folder .github to keep the repo root clean.\r\n\r\nfixes #1153 \r\n\r\n",
    "head_branch": "issue-and-pr-templates-#1153",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e2a88c0a76e0a51cb7",
    "number": 1154,
    "body": "- adds a new field ThreeBytesEnumField\r\n- decodes organisation specific TLVs in a generic way\r\n- ensure that if something unexpected appears the remaining payload is put into a Raw() layer\r\n\r\nfixes #1151 ",
    "head_branch": "fix-lldp-org-specific-dissection-clean-#1151",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix lldp org specific dissection clean #1151 (#1154)\n\n* add a 3 byte enum field #1151\r\n\r\nrequired to show the names of the\r\norganizations used in LLDP org specific TLVs\r\n\r\n* add generic organization specific LLDP type #1151\r\n\r\nimplements generic encoding of org specific TLVs and\r\ndumps the payload as hex-string\r\n\r\n* sanitize guess_payload for LLDPDUs #1151\r\n\r\n* cleanup guess_payload_class() #1151\r\n\r\n* keep ThreeBytesEnumField local in lldp  #1151\r\n\r\nas it is not used yet anywhere else.\r\n\r\n* use raw layer given by conf #1151\r\n\r\n* remove unused imports #1151"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e3a88c0a76e0a51cb8",
    "number": 1149,
    "body": "",
    "head_branch": "fix-dhcpv6-relay-message-clean-#1147",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e4a88c0a76e0a51cb9",
    "number": 1148,
    "body": "adds MACControl messages:\r\n* Pause\r\n* Gate\r\n* Report\r\n* Register/REQ/ACK\r\n* Class Based Flow Control\r\n\r\nbased on the Wireshark dissector and [this](http://www.studioreti.it/slide/08_SwFlowContr_E_A.pdf) old slides.\r\n\r\nfixes #976 ",
    "head_branch": "mac-control-#976",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1148 from speakinghedge/mac-control-#976\n\nadd mac control layer #976"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e5a88c0a76e0a51cba",
    "number": 1146,
    "body": "In scapy v.2.3.2 'ifaces' name was used but in new scapy v.2.3.3 and v.2.4.4 it has been renamed to 'IFACES'.\r\nUnfortunately in many places of our users code the name 'ifaces' already exists.\r\nIs it possible to restore compatibility by 'aliasing' of both names?",
    "head_branch": "fix_IFACES_backward_incompatibility",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1146 from karpierz/fix_IFACES_backward_incompatibility\n\nScapy 2.4, Windows: fix for 'IFACES' backward incompatibility with scapy v.2.3.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e6a88c0a76e0a51cbb",
    "number": 1145,
    "body": "Linted with flake8, ignoring a handful of items which seemed to be less\r\ncrucial F403,E266,F401,E402,F405\r\n\r\nI was inspired to do this work because of all of the hanging whitespace.\r\nWhen I saw the contributor docs are looking to move to PEP8, I wanted to\r\ncontribute some effort to clean up the codebase.\r\n\r\nIf this work is appreciated and merged, I'll move into the\r\nsubdirectories as I have time.\r\n\r\nI created a corresponding issue: https://github.com/secdev/scapy/issues/1144",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e7a88c0a76e0a51cbc",
    "number": 1142,
    "body": "This PR improves speed of the `sr` suite by:\r\n- using generators. This requires to equip the generators with `__iterlen__` functions to predict the size of big generators.\r\n- sharing the `hsent` key, between the `_sndrcv_rcv` and `_sndrcv_snd` functions. It was previously generated twice, in each of them.\r\n- remove useless `timeout` case\r\n- adds new `process` mode, which allows to select (if enabled) which data to return from the packets. This mode ignores unanswers and stores only wanted data, which uses way less memory. This is intended to be used in very big scans, E.g:\r\n```\r\nans, unans = sr(IP(dst=\"www.google.fr\")/TCP(dport=(1, 49151), flags='S'), timeout=3, process=lambda x,y: y[TCP].sport, store_unanswered=False)\r\n```\r\n`ans` is `[21, 80, 443]` and `unans` is `None`.\r\n\r\n## Results\r\n\r\n| Speed test                                                                     | Secdev/master | This PR |\r\n|--------------------------------------------------------------------------------|---------------|---------|\r\n| %timeit -r 1 -n 10 srp(Ether(dst=\"ff:ff:ff:ff:ff:ff\")/ARP(pdst=\"192.168.0.1/24\"),timeout=2) | 21sec         | 21sec   |\r\n| %timeit -r 1 -n 1 sr(IP(dst=\"www.google.fr\")/TCP(dport=(1, 49151), flags='S'), timeout=3)        | 93sec         | 49sec   |",
    "head_branch": "send-speed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1142 from gpotter2/send-speed\n\nSending/Recieving: Improve speed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e7a88c0a76e0a51cbd",
    "number": 1141,
    "body": "Replace some obvious vbs/csript code with pure Python equivalent based on winreg.",
    "head_branch": "try_to_avoid_using_vb_and_ps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1141 from karpierz/try_to_avoid_using_vb_and_ps\n\nScapy 2.4, Windows: Replace some obvious vbs/csript code with pure Python equivalent (part1)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1e8a88c0a76e0a51cbe",
    "number": 1140,
    "body": "This PR fixes a regression from before python 3 support:\r\n- Net/Net6 are being processed when printing IP\r\n\r\nsecdev/master:\r\n![image](https://user-images.githubusercontent.com/10530980/35930407-16f24048-0c32-11e8-80b0-a6456a86b3de.png)\r\n![image](https://user-images.githubusercontent.com/10530980/35931384-c97c5ad0-0c34-11e8-8a32-b011b053c58f.png)\r\n\r\n\r\nScapy 2.2.0 & with this PR\r\n![image](https://user-images.githubusercontent.com/10530980/35930357-fa7f2778-0c31-11e8-845c-aaf774ab3da5.png)\r\n![image](https://user-images.githubusercontent.com/10530980/35931363-ba83f06a-0c34-11e8-8722-198018340899.png)\r\n",
    "head_branch": "ip-print",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1140 from gpotter2/ip-print\n\n[oneline] Print IPs correctly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1eaa88c0a76e0a51cbf",
    "number": 1139,
    "body": "NetworkInterface_check_npcap_requirement():\r\nExistence of 802.11 should be checked only once.",
    "head_branch": "fix_check_npcap_requirement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1139 from karpierz/fix_check_npcap_requirement\n\nscapy v2.4, Windows: Existence of 802.11 should be checked only once"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1eba88c0a76e0a51cc0",
    "number": 1138,
    "body": "Fixes https://github.com/secdev/scapy/issues/1136\r\n\r\nPS: we cannot add unit tests: this bug only happens when a file is opened before importing scapy",
    "head_branch": "hack-sp-fileno",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1138 from gpotter2/hack-sp-fileno\n\nFix https://bugs.python.org/issue19575"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1eca88c0a76e0a51cc1",
    "number": 1137,
    "body": "Fixes https://github.com/secdev/scapy/issues/1135\r\n\r\nList of fixed bugs:\r\n- `IPv6(dst=['2001:db8::1','2001:db8::2'],hlim=(1,5)).show()` fails\r\n![image](https://user-images.githubusercontent.com/10530980/35926877-9125f66a-0c29-11e8-91be-38166684a376.png)\r\n\r\n- list of IPv6 are not properly detected:\r\n![image](https://user-images.githubusercontent.com/10530980/35926834-731fbdae-0c29-11e8-9b3e-49002ecec282.png)\r\n\r\n- IPs combined with Net/Net6\r\n![image](https://user-images.githubusercontent.com/10530980/35927017-ea840292-0c29-11e8-9532-0fb462fb487a.png)\r\n![image](https://user-images.githubusercontent.com/10530980/35927062-03bd7450-0c2a-11e8-92d8-1dbbb6205219.png)\r\n",
    "head_branch": "routes-gen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1137 from gpotter2/routes-gen\n\nFix routes generators #1135"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1eca88c0a76e0a51cc2",
    "number": 1134,
    "body": "This should be consistent with previous version's API. Fixes #1129",
    "head_branch": "fix-1129",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1134 from p-l-/fix-1129\n\nFix layer selection by full name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1eda88c0a76e0a51cc3",
    "number": 1133,
    "body": "See: #1128 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1133 from karpierz/master\n\nfix backward incompatibility of scapy.utils.RawPcapReader.read_packet() for scapy's v2.4 againts v2.3.2 & v2.3.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1eea88c0a76e0a51cc4",
    "number": 1127,
    "body": "Attempt at fixing #1107 ",
    "head_branch": "pypy3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1127 from guedou/pypy3\n\nLaunch tests with pypy3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1efa88c0a76e0a51cc5",
    "number": 1126,
    "body": "Fixes #1118",
    "head_branch": "fix-1118",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1126 from p-l-/fix-1118\n\nFix implicit packets with tuple in lists"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f0a88c0a76e0a51cc6",
    "number": 1125,
    "body": "Graphs were broken, at least under Linux when using direct display (i.e., when not target is specified).",
    "head_branch": "fix-do_graph",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1125 from p-l-/fix-do_graph\n\nUtils: fix do_graph() (proc.stdin was not closed)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f0a88c0a76e0a51cc7",
    "number": 1122,
    "body": "Based on @xambroz 's post https://github.com/secdev/scapy/issues/1120\r\nand https://src.fedoraproject.org/rpms/scapy/blob/master/f/scapy-2.2.0-xdg-open.patch",
    "head_branch": "def-opener",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f1a88c0a76e0a51cc8",
    "number": 1121,
    "body": "Fixes https://github.com/secdev/scapy/issues/1118",
    "head_branch": "fix-gen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f2a88c0a76e0a51cc9",
    "number": 1119,
    "body": "This PR adds the `EAP_PEAP` class in the `eap.py` module, as well as regression tests. `EAP_PEAP` has been defined according to [draft-josefsson-pppext-eap-tls-eap-05](https://tools.ietf.org/html/draft-josefsson-pppext-eap-tls-eap-05), which specifies PEAPv1.",
    "head_branch": "eap-peap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1119 from plorinquer/eap-peap\n\nEAP_PEAP class added in eap.py, as well as regression tests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f3a88c0a76e0a51cca",
    "number": 1117,
    "body": "PR #1116 did not work correctly. This should fix it.",
    "head_branch": "tox_codecov_passenv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1117 from guedou/tox_codecov_passenv\n\nPass Travis env varbiable to codecov"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f4a88c0a76e0a51ccb",
    "number": 1116,
    "body": "This PR adds coverage support for the new tox based osx builds. Other builds can be done in a similar way.",
    "head_branch": "tox_osx_coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1116 from guedou/tox_osx_coverage\n\nAdd coverage support to osx builds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f5a88c0a76e0a51ccc",
    "number": 1115,
    "body": "This pull request covers RFC5305 for /contrib/isis.py. \r\n\r\nIt introduces classes for TLV 134 and subTLVs 3, 9, 10, 11 and 18.",
    "head_branch": "isis_changes_rfc5305",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Isis changes for rfc5305 (#1115)\n\n* Adding TLV134 and new SubTLVs defined in 5305 to /contrib/isis\r\n\r\n* Changing names for SubTLVs defined in RFC5305 to /contrib/isis\r\n\r\n* Fixing indentation issues\r\n\r\n* Fixing indentation issues\r\n\r\n* Adding tests for new SubTLV types\r\n\r\n* Correcting tests for new SubTLV types\r\n\r\n* Correcting tests for new SubTLV types\r\n\r\n* Correcting tests for new SubTLV types\r\n\r\n* Correcting tests for new SubTLV types\r\n\r\n* Correcting tests for new SubTLV types\r\n\r\n* Correcting tests for new SubTLV types\r\n\r\n* Correcting spacing issues\r\n\r\n* Adjusting comments for SubTLVs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f5a88c0a76e0a51ccd",
    "number": 1114,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1114 from gpotter2/patch-5\n\n[Small] Use built-in whois in IPTools"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f6a88c0a76e0a51cce",
    "number": 1113,
    "body": "Fixes https://github.com/secdev/scapy/issues/1110",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1113 from gpotter2/patch-4\n\nAdd & reformat int compare functions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f7a88c0a76e0a51ccf",
    "number": 1112,
    "body": "The KM-TEST loopback adapters are extraordinary un-documented.\r\n\r\nThis Small patch will detect its translated alternatives (since latest updates, on my PC the adapter has been updated from `Microsoft KM-TEST Loopback Adapter` into `Carte de bouclage Microsoft KM-TEST`)",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1112 from gpotter2/patch-3\n\nWindows: detect KM-TEST translations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f8a88c0a76e0a51cd0",
    "number": 1111,
    "body": "Another attempt to fix #1076.",
    "head_branch": "travis_coverage_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1111 from guedou/travis_coverage_fix\n\nSpecify the coverage configuration file while combining results"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f9a88c0a76e0a51cd1",
    "number": 1109,
    "body": "Here are small documentation fixes found will looking for possible regressions.",
    "head_branch": "doc_fix_v240",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1109 from guedou/doc_fix_v240\n\nDoc fix v240"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1f9a88c0a76e0a51cd2",
    "number": 1106,
    "body": "This PR uses [tox](http://tox.readthedocs.io/) as the build system for Python3 on osx. It fixes one of the latest blocker before releasing v2.4.0, #1071.\r\n\r\nCompared to the current build system, it works exactly the same way on our computers than on Travis. It greatly improves our workflow.\r\n\r\nI think that once #1086 is implemented we can try to slowly migrate Travis and AppVeyor test to `tox`.",
    "head_branch": "tox_scapy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use Tox to perform Scapy unit tests (#1106)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1faa88c0a76e0a51cd3",
    "number": 1105,
    "body": "- `Finished to send`: https://learnenglish.britishcouncil.org/en/english-grammar/verbs/verbs-followed-ing-clauses\r\n- others are obvious",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1105 from gpotter2/patch-2\n\nEnglish grammar"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1fba88c0a76e0a51cd4",
    "number": 1104,
    "body": "PR:\r\n- remove `onlyOnce` param: dirty implementation (was mine at some point...) + useless with latest versions\r\n- Move PYX and MATPLOTLIB detection to an external file because when loading:\r\n   - config is imported\r\n   - data is imported from config\r\n   - consts is imported from data\r\n   - warnings are triggered before `interact()` setups the logs.\r\n\r\nWe have moved those functions several time, from arch to consts...\r\nI'm finally dropping them in a dedicated file so they don't interfere with any other part of scapy.",
    "head_branch": "logs-dupli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1104 from gpotter2/logs-dupli\n\nLogs: remove duplicated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1fca88c0a76e0a51cd5",
    "number": 1103,
    "body": "",
    "head_branch": "py3_osx_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1103 from guedou/py3_osx_tests\n\nFix failing osx tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1fda88c0a76e0a51cd6",
    "number": 1102,
    "body": "- `init_session` is called twice: it's already called [here](https://github.com/secdev/scapy/compare/master...gpotter2:session-dupli?expand=1#diff-415fdc55feac2ca441c303d363c789aeR420)\r\n- conf.session would remain `''` when loading an already created session file, resulting in the session not beeing saved on closing",
    "head_branch": "session-dupli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1102 from gpotter2/session-dupli\n\nRemove duplicate call to init_session + fix conf.session not updated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1fea88c0a76e0a51cd7",
    "number": 1101,
    "body": "Fixes #1083.",
    "head_branch": "fix-1083",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1101 from p-l-/fix-1083\n\nStore and use wirelen value for packets read from PCAP(NG) files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1ffa88c0a76e0a51cd8",
    "number": 1100,
    "body": "Hello,\r\n\r\nThe first commit is an easy improvement of the current CAN layer (fixes FlagsField definition, support extended CAN identifier format, include the padding and bind to CookedLinux layer).\r\n\r\nThe second is more experimental and implement the Wireshark \"swap flags/id\" functionality to properly dissect/build messages for the SocketCAN implementation.\r\n\r\nSeb.",
    "head_branch": "can_layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1100 from smainand/can_layer\n\nCAN layer progress"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb1ffa88c0a76e0a51cd9",
    "number": 1098,
    "body": "This PR removes '_' in unit tests. I add some issues on Python 3.6 on osx.",
    "head_branch": "uts_remove_underscore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1098 from guedou/uts_remove_underscore\n\nDo not use '_' in unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb200a88c0a76e0a51cda",
    "number": 1097,
    "body": "Long story short: this PR fixes an issue with Python3 on osx. It was discovered during the first _successful_ automated tests on osx!\r\n\r\nI am not happy with the indentation. Ideas are welcome.",
    "head_branch": "py3_bpf_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1097 from guedou/py3_bpf_fix\n\nUse the key argument with sort()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb201a88c0a76e0a51cdb",
    "number": 1096,
    "body": "This PR makes `pipetool.uts` works fine as non-root and in headless (no X server) environments.",
    "head_branch": "pipetool_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1096 from guedou/pipetool_tests\n\nPipetool tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb202a88c0a76e0a51cdc",
    "number": 1095,
    "body": "- BaseMap is beeing deprecated: https://github.com/matplotlib/basemap/issues/389#issuecomment-361004438\r\n- GeoLite1 databases are deprecated : http://dev.maxmind.com/geoip/geoip2/geolite2/\r\n\r\nThis PR replace BaseMap by cartopy + Geolite1 by Geolite2\r\n\r\nNo unit tests are provided as we cannot install geolite + all its dependencies, and it would not test anything to mock them\r\n\r\n![New graphic](https://raw.githubusercontent.com/gpotter2/scapy/49fc93a51d0bdaa7157c878affc914a48d9fea8f/doc/scapy/graphics/traceroute_worldplot.png)",
    "head_branch": "geoip2-cartopy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1095 from gpotter2/geoip2-cartopy\n\nReplace basemap by cartopy + geoip by geoip2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb203a88c0a76e0a51cdd",
    "number": 1094,
    "body": "Attempt at adding Python3 tests with Travis (#1071).\r\n\r\nIt will require testing before merging it.",
    "head_branch": "travis_osx_py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb203a88c0a76e0a51cde",
    "number": 1093,
    "body": "Not sure at all if it fixes https://github.com/secdev/scapy/issues/1091, but that bug was triggered on my computer anyway.\r\n",
    "head_branch": "fix-ppi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Try PPI_GEOTAG fix (#1093)\n\nFix PPI_GEOTAG tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb204a88c0a76e0a51cdf",
    "number": 1092,
    "body": "This PR makes it easier to build tests configuration files. It could help make architecture dependent configuration files. Currently, we discard files using the `-F`, this feature is also useful in the configuration file.\r\n\r\n````\r\n$ cat test.utsc \r\n{\r\n  \"testfiles\": [\r\n    \"test/*.uts\"\r\n  ],\r\n  \"remove_testfiles\": [\r\n    \"test/regression.uts\",\r\n    \"test/bpf.uts\",\r\n    \"test/sslv2.uts\",\r\n    \"test/tls*.uts\",\r\n    \"test/send*\",\r\n    \"test/p*\",\r\n    \"test/answering*\",\r\n    \"test/mock_windows.uts\"\r\n  ],\r\n  \"onlyfailed\": true,\r\n  \"format\": \"text\",\r\n  \"kw_ko\": [\r\n    \"crypto\",\r\n    \"crypto_advanced\",\r\n    \"needs_root\",\r\n    \"netaccess\"\r\n  ]\r\n}\r\n$ ./test/run_tests -c test.utsc\r\n```",
    "head_branch": "UTscapy_config_file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1092 from guedou/UTscapy_config_file\n\n[UTscapy] Remove test files using the configuration file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb205a88c0a76e0a51ce0",
    "number": 1090,
    "body": "Small documentation update.",
    "head_branch": "Underscore_in_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1090 from guedou/Underscore_in_tests\n\nDo not use '_' in tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb206a88c0a76e0a51ce1",
    "number": 1089,
    "body": "This PR fixes #1084.\r\n\r\nThe issue could also be fixed using `plain_str()` but I think that this solution is better.",
    "head_branch": "Issue_#1084",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1089 from guedou/Issue_#1084\n\nUse inet_pton to convert IPv4 addresses"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb207a88c0a76e0a51ce2",
    "number": 1088,
    "body": "Quite weird PR, every thing is related to the `send`'s module fix\r\n- Fixes SEND module (+ Make it work + tests)\r\n- Fix RandBin on python3 (wrongly created)\r\n- Remove the `get_cls` usages from inet6 and use direct classes instead: this allow us to inject the class from `contrib/send.py` into inet6. It was not possible because of `globals()` restrictions.\r\n- Minor new log in rdpcap\r\n\r\nFixes https://github.com/secdev/scapy/issues/1045",
    "head_branch": "ipv6-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1088 from gpotter2/ipv6-fixes\n\nSEND module fixes & Stuff"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb207a88c0a76e0a51ce3",
    "number": 1085,
    "body": "This PR removes UTF-8 characters from `bgp.uts`. They were causing decoding errors with Python 3.6.4. on my osx.",
    "head_branch": "bgp_encoding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1085 from guedou/bgp_encoding\n\nConvert to ASCII"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb208a88c0a76e0a51ce4",
    "number": 1082,
    "body": "This PR adds the \"-x\" flag that stops test on the first error. I don't know if it could be implemented in a cleaner way.\r\n\r\nI used it a lot with \"-F\" while debugging Python3 related issues.",
    "head_branch": "UTScapy_stop_first_error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb209a88c0a76e0a51ce5",
    "number": 1081,
    "body": "Seems that on some windows versions, the length might change.\r\n\r\nShould fix https://github.com/secdev/scapy/issues/1079",
    "head_branch": "fix-1079",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1081 from gpotter2/fix-1079\n\nDo not use hardcoded value in _get_metrics"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb20aa88c0a76e0a51ce6",
    "number": 1080,
    "body": "Fixes #1078",
    "head_branch": "fix-1078",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1080 from p-l-/fix-1078\n\nRemove unnecessary .split() call (@karpierz)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb20ba88c0a76e0a51ce7",
    "number": 1077,
    "body": "This PR fixes #1076 ",
    "head_branch": "coverage_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1077 from guedou/coverage_fix\n\nFix coverage reports"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb20ba88c0a76e0a51ce8",
    "number": 1075,
    "body": "This PR:\r\n- Fixes p0f on PY3\r\n- adds tests",
    "head_branch": "p0f-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1075 from gpotter2/p0f-tests\n\nAdd p0f tests + PY3 fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb20ca88c0a76e0a51ce9",
    "number": 1074,
    "body": "",
    "head_branch": "fix-bluetooth-constant",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1074 from p-l-/fix-bluetooth-constant\n\nFix bluetooth constant"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb20da88c0a76e0a51cea",
    "number": 1072,
    "body": "Is there any reason not to fix this? Was this previously a typo?",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1072 from johnthagen/patch-1\n\nFix nmap name in README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb20ea88c0a76e0a51ceb",
    "number": 1070,
    "body": "This will support both 2.7 and 3.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1070 from johnthagen/patch-1\n\nUpdate README module example to support Python 3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb20fa88c0a76e0a51cec",
    "number": 1069,
    "body": "",
    "head_branch": "load-contrib-wildcard",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb20fa88c0a76e0a51ced",
    "number": 1068,
    "body": "VBS fallback contains more restricted content than powershell. The tests are reversed",
    "head_branch": "mockwin-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1068 from gpotter2/mockwin-test\n\nTiny fix in mock_windows.uts test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb210a88c0a76e0a51cee",
    "number": 1067,
    "body": "Current code wont work on Npcap.\r\nI didn't manage to write some convenient tests, so I added a warning",
    "head_branch": "win-static-py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1067 from gpotter2/win-static-py3\n\nStatic access to LOOPBACK_INTERFACE"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb211a88c0a76e0a51cef",
    "number": 1066,
    "body": "Those are two tiny forgotten str() usages",
    "head_branch": "str-calls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1066 from gpotter2/str-calls\n\nForgotten str() instead of raw() fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb212a88c0a76e0a51cf0",
    "number": 1065,
    "body": "I'm often getting those packets, which fail to be dissected on scapy.\r\n\r\nThey are dissected as so on wireshark, and fail on scapy:\r\n![image](https://user-images.githubusercontent.com/10530980/35062286-0a45c712-fbc4-11e7-9191-63475cd9c151.png)\r\n\r\n[failing.pcap.zip](https://github.com/secdev/scapy/files/1640328/failing.pcap.zip)\r\n",
    "head_branch": "tls-cont",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1065 from gpotter2/tls-cont\n\nTLS continuous data"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb213a88c0a76e0a51cf1",
    "number": 1064,
    "body": "This PR fixes #1015.",
    "head_branch": "bpf_py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb214a88c0a76e0a51cf2",
    "number": 1063,
    "body": "When using Python 3.6 or later `struct.pack` will throw an exception if no `bytes` objects is supplied and `s` formatters are used.",
    "head_branch": "fix/pack-s-formatter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1063 from HenningCash/fix/pack-s-formatter\n\nAlways pass bytes to struct.pack if s formatter is used"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb214a88c0a76e0a51cf3",
    "number": 1061,
    "body": "",
    "head_branch": "nmap_coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1061 from guedou/nmap_coverage\n\nNMAP: test more functions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb215a88c0a76e0a51cf4",
    "number": 1059,
    "body": "This PR fixes netaccess tests for python 3",
    "head_branch": "tls-py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1059 from gpotter2/tls-py3\n\nPython 3: fix TLS layer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb216a88c0a76e0a51cf5",
    "number": 1058,
    "body": "",
    "head_branch": "support-can",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1058 from p-l-/support-can\n\nEarly CANopen protocol support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb217a88c0a76e0a51cf6",
    "number": 1057,
    "body": "While investigating remaining `str()` usage, I discovered a problem with Python3. This PR fixes it, removes the useless dependency on the `cryptography` module, deletes redundant code, and add tests.",
    "head_branch": "RADIUS_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1057 from guedou/RADIUS_fixes\n\n[RADIUS] Remove cryptography dependency, Python3 support and tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb218a88c0a76e0a51cf7",
    "number": 1055,
    "body": "This PR fixes IPv6 address encoding when passed as bytes to inet_pton\r\n\r\n![image](https://user-images.githubusercontent.com/10530980/34958967-62a9c502-fa34-11e7-9c89-9a3545a59ab5.png)\r\n```\r\n[...]\r\nZ:\\Coding\\github\\scapy\\scapy\\pton_ntop.py in inet_pton(af, addr)\r\n     86     addr = plain_str(addr)\r\n     87     try:\r\n---> 88         return socket.inet_pton(af, addr)\r\n     89     except AttributeError:\r\n     90         try:\r\n\r\nOSError: [WinError 10022] Un argument non valide a été fourni\r\n```",
    "head_branch": "fix-pton",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1055 from gpotter2/fix-pton\n\nFix inet_pton PY3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb218a88c0a76e0a51cf8",
    "number": 1054,
    "body": "The current code ignores the header flags which makes every L2TP packets\r\nparse as a data message which includes the optional `length`, `nr`, `ns`, `offset` fields.\r\n\r\nSigned-off-by: Speidy <speidy@gmail.com>",
    "head_branch": "l2tp_improvement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1054 from speidy/l2tp_improvement\n\nlayers: l2tp: parse L2TPv2 packets correctly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb219a88c0a76e0a51cf9",
    "number": 1053,
    "body": "Fixes #1052.",
    "head_branch": "fix-traceroute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1053 from p-l-/fix-traceroute\n\nPython 3: fix make_table() sort with integers & IPs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb21aa88c0a76e0a51cfa",
    "number": 1051,
    "body": "…ncapsulation-12)\r\n\r\nSigned-off-by: Neale Ranns <neale.ranns@cisco.com>",
    "head_branch": "bier",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb21ba88c0a76e0a51cfb",
    "number": 1050,
    "body": "This PR fixes #1048 and other issues found while modifying the notebooks:\r\n- a decoding bug in asn1.py\r\n- a str() misuse in radius.py",
    "head_branch": "Issue_#1048",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1050 from guedou/Issue_#1048\n\nReplace str() with raw()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb21ca88c0a76e0a51cfc",
    "number": 1047,
    "body": "This commit adds support for encapsulating Ethernet frame in MPLS with control word per rfc 4448. \r\nYou can do something like:\r\nMPLS(label=1)/EoMCW(seq=0x1234)/Ether(dst='00:01:00:11:11:11',src='00::02:00:22:22:22')/IP(dst='10.0.0.1', src='10.0.0.2', proto=252)\r\nor\r\nMPLS(label=1)/Ether(dst='00:01:00:11:11:11',src='00::02:00:22:22:22')/IP(dst='10.0.0.1', src='10.0.0.2', proto=252)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add support for encapsulating Ethernet frame in MPLS (#1047)\n\n* add support for encapsulating Ethernet frame in MPLS with optional\r\ncontrol word per rfc 4448\r\n\r\n* add import of ShortField in mpls.py to fix a ut failure\r\n\r\n* add MPLS tests in test/regression.uts\r\n\r\n* revert indentation fixes in mpls.py to perserve clean histry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb21da88c0a76e0a51cfd",
    "number": 1043,
    "body": "This PR does several small things:\r\n- remove no longer needed migration util\r\n- compress scapy-main-console.png\r\n- small docs updates",
    "head_branch": "del-py3ms",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1043 from gpotter2/del-py3ms\n\nDoc maintenance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb21da88c0a76e0a51cfe",
    "number": 1042,
    "body": "For some reason, it may happen on Travis CI (specifically with\r\nPython 3) that port numbers are not resolved to service names. This\r\nfixes a test that fails in this case.",
    "head_branch": "fix-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1042 from p-l-/fix-tests\n\nPython 3: fix an often-failing test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb21ea88c0a76e0a51cff",
    "number": 1041,
    "body": "Fixes #1009.",
    "head_branch": "fix-1009",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1041 from p-l-/fix-1009\n\nRDataField treats NS, CNAME as DNS string type."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb21fa88c0a76e0a51d00",
    "number": 1040,
    "body": "Fixes #1039. Patch provided by @karpierz.",
    "head_branch": "fix-git-win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1040 from p-l-/fix-git-win\n\nWindows: fix version detection from git"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb220a88c0a76e0a51d01",
    "number": 1038,
    "body": "",
    "head_branch": "cleanup-sendrecv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1038 from p-l-/cleanup-sendrecv\n\nsendrecv: code clean-up"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb221a88c0a76e0a51d02",
    "number": 1037,
    "body": "Fixes https://github.com/secdev/scapy/issues/1034",
    "head_branch": "win-metrics-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1037 from gpotter2/win-metrics-fix\n\n[Windows] Guess metrics when InterfaceMetric is not available"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb222a88c0a76e0a51d03",
    "number": 1036,
    "body": "Fixes https://github.com/secdev/scapy/issues/1035",
    "head_branch": "win-nops",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1036 from gpotter2/win-nops\n\nFallback on CMD when powershell is not available"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb223a88c0a76e0a51d04",
    "number": 1033,
    "body": "",
    "head_branch": "fix-dot11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1033 from p-l-/fix-dot11\n\nDot11: fix .summary() with a binary SSID"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb223a88c0a76e0a51d05",
    "number": 1032,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1032 from gpotter2/patch-1\n\nFix #1028"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb224a88c0a76e0a51d06",
    "number": 1031,
    "body": "Extracted from https://github.com/secdev/scapy/pull/992",
    "head_branch": "py3-tests-rdm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Python 3 tests (IPython + BytesIO) (#1031)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb225a88c0a76e0a51d07",
    "number": 1027,
    "body": "",
    "head_branch": "Nicer_README",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1027 from guedou/Nicer_README\n\nDocumentation link moved to another section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb226a88c0a76e0a51d08",
    "number": 1025,
    "body": "This PR:\r\n- turns on PY3 tests on Appveyor\r\n- disable tls tests in a way so that we can reenable them one by one when fixed.  ",
    "head_branch": "appveyor-py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1025 from gpotter2/appveyor-py3\n\nAppveyor py3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb227a88c0a76e0a51d09",
    "number": 1024,
    "body": "After #861, Travis tests under MacOS with `SCAPY_USE_PCAPDNET` were not actually running.\r\n\r\nThis should fix that.",
    "head_branch": "fix-macos-pcapdnet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1024 from p-l-/fix-macos-pcapdnet\n\nFix Travis/OSX tests with PCAPDNET"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb228a88c0a76e0a51d0a",
    "number": 1023,
    "body": "Trying to address \"Check options in p0f.py\" from #399 (the contributions roadmap). Making it so p0f_impersonate uses TCP options from the original packet where possible.\r\n\r\nIf this commit is on the right track, I can make changes/add tests as needed. Thanks!",
    "head_branch": "p0f_impersonate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1023 from saturn597/p0f_impersonate\n\nUse existing TCP opts in p0f_impersonate"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb229a88c0a76e0a51d0b",
    "number": 1022,
    "body": "",
    "head_branch": "cleanup-arch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1022 from p-l-/cleanup-arch\n\nTiny cleanup in the arch module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb229a88c0a76e0a51d0c",
    "number": 1020,
    "body": "Trying to fix https://github.com/secdev/scapy/issues/982",
    "head_branch": "ipython-old",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1020 from gpotter2/ipython-old\n\nSupport old IPython versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb22aa88c0a76e0a51d0d",
    "number": 1019,
    "body": "This PR will contain some contrib tests + fixes for many un-tested contrib modules.\r\nAlso fixes the fact that on Python 2, IPv6 addresses different from ::1 are dissected as unicode, which i randomly triggered\r\n\r\nNotes:\r\n- I left a few ones behind. might go over them at some point later\r\n- SEND modules tests are available in a different PR: https://github.com/secdev/scapy/pull/1088",
    "head_branch": "contrib-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1019 from gpotter2/contrib-test\n\nMissing contrib test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb22ba88c0a76e0a51d0e",
    "number": 1018,
    "body": "Very only file starting with capitalized letters",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1018 from gpotter2/patch-2\n\nRename HomePlugAV files to homeplugav"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb22ca88c0a76e0a51d0f",
    "number": 1016,
    "body": "- Fixes #947:\r\n  - adding unit tests\r\n  - reworking modules\r\n  - fixing inconsistencies\r\n\r\nQuite cool protocol btw https://www.nasa.gov/content/dtn",
    "head_branch": "fix-prs-947",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1016 from gpotter2/fix-prs-947\n\nFix PR 947: Delay Tolerant Networking Protocols"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb22da88c0a76e0a51d10",
    "number": 1014,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb22ea88c0a76e0a51d11",
    "number": 1012,
    "body": "- Complement to https://github.com/secdev/scapy/pull/861\r\n- Fixes TLS automaton for Python 3\r\n- Fixes some crashes occuring on L2ListenTcpdump socket",
    "head_branch": "tls-py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb22ea88c0a76e0a51d12",
    "number": 1011,
    "body": "Add support for LACP packets as defined in IEEE 802.1AX-2014",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb22fa88c0a76e0a51d13",
    "number": 1010,
    "body": "This will wait for https://github.com/secdev/scapy/pull/861\r\n- Explicit link from README\r\n- Update doc to use `matplotlib`\r\n- Update doc to install scapy with `python 3`\r\n- Add new graphics (e.g. logo) + update windows ones (~windows XP~ -> Windows 10)\r\n- Unify Windows and non-Windows \"optional features\" sections\r\n- Specify PyX specific instructions for Python 2.7\r\n- Happy new year (2018)",
    "head_branch": "doc-py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1010 from gpotter2/doc-py3\n\n[Python 3] Update doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb230a88c0a76e0a51d14",
    "number": 1009,
    "body": "That's about it. At present the code only correctly handles PTR RRs, this makes it so that it also handles NS and CNAME RRs.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb231a88c0a76e0a51d15",
    "number": 1008,
    "body": "I get \"get_if_list() undefined\" error from \"from scapy.all import *\" in either python 2.7 or 3.6. This fixes the error in python 3.6\r\n\r\nPS: first time creating a pull request. Hopefully I didn't mees things up.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1008 from Chen-Zhe/master\n\nFix get_if_list() undefined error when importing in Windows without winpcap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb231a88c0a76e0a51d16",
    "number": 1007,
    "body": "Fix BERcodec_STRING length incorrect with RandString.\r\nThis should fix #988 ",
    "head_branch": "Fix-BERcodec_STRING",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1007 from dark-lbp/Fix-BERcodec_STRING\n\nFix BERcodec_STRING"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb232a88c0a76e0a51d17",
    "number": 1006,
    "body": "Fix BERcodec_STRING length incorrect with RandString.\r\nThis should fix #988 ",
    "head_branch": "Fix-BERcodec_STRING",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb233a88c0a76e0a51d18",
    "number": 1005,
    "body": "Currently Scapy is not really loaded when the startup files are run, which makes it impossible to use Scapy functions in it.",
    "head_branch": "fix-startup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Load startup files after init_session()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb234a88c0a76e0a51d19",
    "number": 1004,
    "body": "This adds the TaZmen sniffer protocol layer.\r\n\r\nIts not completely clear which source of the header definition (wikipedia/networkchemistry.com@archive.org or the wireshark dissector) contains the 'truth' -\r\nbut this works with the implementation of TZSP used in my Mikrotik router.\r\n\r\nthis is based on a request in #1000 (but I found it useful for me too so ...)",
    "head_branch": "tazmen-sniffer-protocol-#1000",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tazmen sniffer protocol layer (#1004)\n\n* add TaZmen Sniffer Protocol (TZSP) layer #1000\r\n\r\n* add tests for TZSP layer #1000\r\n\r\n* cleanups from PR reviews #1000\r\n\r\n* fix ranges used in state tags #1000\r\n\r\n* add some corner case tests #1000\r\n\r\n* add support for unknown tag type #1000\r\n\r\nuse type TZSPTagUnknown if tag type is not known.\r\n\r\n+ related tests\r\n\r\n* fixing a nasty grammar bug #1000\r\n\r\n* add YesNoByteField #1000\r\n\r\n+ tests\r\n\r\n* use YesNoByteField instead of generated dicts for conditional tags #1000\r\n\r\n* use orb instead of unpack for accessing payload bytes #1000"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb235a88c0a76e0a51d1a",
    "number": 1003,
    "body": "Now prints messages such as:\r\n```\r\n>>> tcpdump(None)\r\n---------------------------------------------------------------------------\r\nOSError                                   Traceback (most recent call last)\r\n<ipython-input-2-cc1b8638924f> in <module>()\r\n----> 1 tcpdump(None)\r\n\r\nZ:\\Coding\\github\\scapy\\scapy\\utils.py in tcpdump(pktlist, dump, getfd, args, prog, getproc, quiet)\r\n   1280                 prog + (args if args is not None else []),\r\n   1281                 stdout=subprocess.PIPE if dump or getfd else None,\r\n-> 1282                 stderr=open(os.devnull) if quiet else None,\r\n   1283             )\r\n   1284     elif isinstance(pktlist, six.string_types):\r\n\r\nZ:\\Coding\\github\\scapy\\scapy\\utils.py in __exit__(self, exc_type, exc_value, traceback)\r\n    442             msg = \"%s: executing %r failed\" % (self.name, self.prog) if self.prog else \"Could not execute %s, is it installed ?\" % self.name\r\n    443             if self._raise:\r\n--> 444                 raise OSError(msg)\r\n    445             else:\r\n    446                 log_runtime.error(msg, exc_info=True)\r\n\r\nOSError: Could not execute windump(), is it installed ?\r\n```\r\n\r\nInstead of\r\n`TypeError: argument of type 'NoneType' is not iterable`\r\nhttps://github.com/secdev/scapy/issues/981\r\nor\r\nhttps://github.com/secdev/scapy/issues/999 (before it was edited, it was the same bug than the previous issue).\r\n",
    "head_branch": "accuracy-log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1003 from gpotter2/accuracy-log\n\nMore accurate ContextManagerSubprocess error messages"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb236a88c0a76e0a51d1b",
    "number": 1002,
    "body": "This is an attempt to fix #1001.",
    "head_branch": "Issue_#1001",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1002 from guedou/Issue_#1001\n\nAttempt to fix #1001"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb237a88c0a76e0a51d1c",
    "number": 998,
    "body": "PR #968 rebased and a simple test was added.",
    "head_branch": "PR_#968_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "LELongField test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb237a88c0a76e0a51d1d",
    "number": 997,
    "body": "This PR test for the crashes fixed by #987. The commits were also rebased.",
    "head_branch": "987_unit_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Test specific RandASN1Object() crashes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb238a88c0a76e0a51d1e",
    "number": 996,
    "body": "Incredibly useful while testing: this re-loads and restart scapy.\r\n\r\nThe process is overwriten using python API",
    "head_branch": "restart-scpy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add restart() test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb239a88c0a76e0a51d1f",
    "number": 995,
    "body": "This commit applies comments on top of PR #920 commit.\r\n\r\nIt must be squashed.",
    "head_branch": "fix_920",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Applying comments to PR#920 (#995)\n\n* Add Ike v2 Encrypted Fragment packet\r\n\r\n* Add Ike v2 Encrypted Fragment packet\r\n\r\n* Comments applied and PEPification"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb23aa88c0a76e0a51d20",
    "number": 993,
    "body": "Current scapy's tshark:\r\n![image](https://user-images.githubusercontent.com/10530980/34079895-5582df9a-e336-11e7-9ba3-496655c173ad.png)\r\n\r\n\r\nReal tshark:\r\n![image](https://user-images.githubusercontent.com/10530980/34079378-ed43c524-e32c-11e7-8c39-1638d3a7927b.png)\r\n\r\nThis version:\r\n![image](https://user-images.githubusercontent.com/10530980/34911518-8470b2fe-f8cc-11e7-9a96-d35d1f97c2dc.png)\r\n\r\n**Edit**: updated image\r\n",
    "head_branch": "wireshark-cmd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #993 from gpotter2/wireshark-cmd\n\nFix Scapy TSHARK"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb23ba88c0a76e0a51d21",
    "number": 992,
    "body": "- fix another tls_version failing usage on python 3(actually all the ones used in `dispatch_hook` functions should have the not None test)\r\n- cleanup mock_windows.uts\r\n- fix IPython main.interact() test + increase coverage",
    "head_branch": "tls-continuation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb23ca88c0a76e0a51d22",
    "number": 991,
    "body": "This commit applies comments on top of PR #698 commit.\r\n\r\nIt must be squashed.",
    "head_branch": "fix_698",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Applying comments to PR#698 (#991)\n\n* Added optional extension mechanism from RFC 1889\r\n\r\nRFC 1889 section 5.3.1 defines an optional header extension mechanism for proprietary use. This is required by some implementations.\r\nAdditionally, the sync and sourcesync fields are not named as in the RFC and are somewhat confusing, I added comments.\r\n\r\n* + Added some tests for RTP\r\n\r\n* + moved lambda inside RTP class\r\n\r\n* + All tests are green\r\n\r\n* + removed commented out code\r\n\r\n* rtp.py rewritten to use an extra class for the extension header\r\n\r\n* moved testcases + minor fix\r\n\r\n* + minor fixes\r\n\r\n* Comments applied"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb23da88c0a76e0a51d23",
    "number": 990,
    "body": "(new pcapdnet api)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #990 from gpotter2/patch-1\n\n[Arch] Fix pcapdnet (Travis test)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb23da88c0a76e0a51d24",
    "number": 987,
    "body": "Fix ASN1_ERROR when using RandASN1Object.\r\n\r\nThis may fix #986",
    "head_branch": "Fix-RandASN1Object",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb23ea88c0a76e0a51d25",
    "number": 985,
    "body": "在使用的的过程中，出现了很多错误，最后找到的解决方案就是这个，所以把这一句加入到了文档里面，这个可以帮助到很多在windows下的用户。",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb23fa88c0a76e0a51d26",
    "number": 980,
    "body": "Current pcapdnet.py file is un-readable...\r\nThis PR changes nothing but `pcapdnet.py` style + format:\r\n- unify indenting: 4 spaces\r\n- Auto PEP8\r\n- Remove tripple duplicated `PcapTimeoutElapsed`\r\n- use scapy.consts.WINDOWS instead of loading it again\r\n- separate more readibily the different OS",
    "head_branch": "pep8-pcapdnet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb240a88c0a76e0a51d27",
    "number": 973,
    "body": "Fix IE type value and add Port Number IE.",
    "head_branch": "gtpv2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #973 from artisdom/gtpv2\n\nGTPv2: fix IE type value and add Port Number IE."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb241a88c0a76e0a51d28",
    "number": 972,
    "body": "Fix a typo the usage section of the documentation. I happen to find this while running the test in documentation which gave me an error.",
    "head_branch": "doc_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #972 from blackHatMonkey/doc_fix\n\nFix typo in documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb242a88c0a76e0a51d29",
    "number": 971,
    "body": "This PR:\r\n- fixes the often failing TCPdump test on **windows**\r\n- fixes OSX crashing on longer term https://github.com/secdev/scapy/pull/970\r\n- may be used as an easy workaround in https://github.com/secdev/scapy/issues/870",
    "head_branch": "win-pcap-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix L2ListenTcpdump tests (windows) (#971)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb243a88c0a76e0a51d2a",
    "number": 970,
    "body": "This PR provides a temporary fix to #967 \r\n\r\n#967 must not be closed until we correctly handle the issue by managing pip ourselves.",
    "head_branch": "travix_osx_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #970 from guedou/travix_osx_fix\n\nUse Xcode 7.3 in Travis"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb243a88c0a76e0a51d2b",
    "number": 968,
    "body": "",
    "head_branch": "LELongField",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb244a88c0a76e0a51d2c",
    "number": 966,
    "body": "Fixes https://github.com/secdev/scapy/issues/959 (new bugs).",
    "head_branch": "tls-str",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix TLS str calls (again) (#966)\n\n* Add missing import\r\n\r\n* Export raw from scapy\r\n\r\n* Create TLS layers when cryptography is missing with no codec\r\n\r\n* Add no-cryptography tls test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb245a88c0a76e0a51d2d",
    "number": 965,
    "body": "When I was reading the docs online I had trouble discerning between `ans.unans` and `ans,unans` because of the font. As a result I mistakenly initially assumed that unans was a property on an object ans. Thinking about it and scrolling through the docs did clear it up somewhat trivially though.\r\n\r\nIn the hope to prevent others from making the same mistake I've taken the liberty to make insert a space where it was missing.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #965 from andheiberg/patch-1\n\nstyle: consistently space `ans, unans =`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb246a88c0a76e0a51d2e",
    "number": 963,
    "body": ".",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #963 from gpotter2/patch-1\n\nREADME update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb247a88c0a76e0a51d2f",
    "number": 962,
    "body": "Fixes https://github.com/secdev/scapy/issues/959",
    "head_branch": "tls-str",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #962 from gpotter2/tls-str\n\nFix str calls on TLS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb247a88c0a76e0a51d30",
    "number": 961,
    "body": "This PR adds python 3 compat:\r\n- TACACS\r\n- IGMPv3\r\n- PPI tests\r\n- I noticed that route_add_loopback may override the only working IFace if no LOOPBACK iface detected. Fixed it using dummy guid for ordering + force ether to use \"00:00:00:00:00:00\" in tacacs building tests, as in that case it won't be overrided\r\n\r\nOn Windows, route_add_loopback was fixed on https://github.com/secdev/scapy/pull/927. Needed for full python 3 support",
    "head_branch": "py3-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Python 3 fixes: TACACS, IGMPv3, PPI tests (#961)\n\n* Python 3 fixes: TACACS, IGMPv3, PPI tests\r\n\r\n* Don't crash on empty key\r\n\r\n* 3 breaking random tests so that coverage pass\r\n\r\n* Minor fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb248a88c0a76e0a51d31",
    "number": 958,
    "body": "see https://github.com/secdev/scapy/issues/957\r\n\r\n",
    "head_branch": "fix-read-routes-catch-ioctl-error-#957",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "don't use underscore as dummy var in tests #957"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb249a88c0a76e0a51d32",
    "number": 954,
    "body": "This PR:\r\n- add bluetooth sending/recieving sockets support for windows. It's not available in vanilla python, so we need to perform raw calls to C functions. Most of the code is extracted from a compatibility part of the pybluez project, and i added manualy x64 compatibility.\r\n- I tested it and included screenshots in the doc.\r\n- I have added the Visual Studio project in a zipped file",
    "head_branch": "bt-win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb24aa88c0a76e0a51d33",
    "number": 952,
    "body": "Now generates valid packets",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed fields in IGMPv3 (#952)\n\n* Reserved field must have 2 bytes long in IGMPv3mr\r\n\r\n* Bind default values for dst ipaddr and mrcode in membership reports\r\n\r\n* Use valid packets in tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb24ba88c0a76e0a51d34",
    "number": 951,
    "body": "These commits fix Python3 related unit tests.",
    "head_branch": "py3_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #951 from guedou/py3_fixes\n\nPython3 - fixes that improve the unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb24ca88c0a76e0a51d35",
    "number": 949,
    "body": "This PR replaces the `source` keyword with the more generic `.`.\r\n\r\nFTR, on Ubuntu `/bin/sh` is Dash, and does not support `source`.",
    "head_branch": "no_source",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #949 from guedou/no_source\n\nPython3 - Use '.' instead of 'source'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb24ca88c0a76e0a51d36",
    "number": 948,
    "body": "- Minor tweaks.\r\n- Fixes TLS modules (includes and fixes https://github.com/secdev/scapy/pull/946), so that mtury does not have to take care of it :)",
    "head_branch": "fix-prs-946",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #948 from gpotter2/fix-prs-946\n\nPython 3: minor fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb24da88c0a76e0a51d37",
    "number": 947,
    "body": "Adds layers (in scapy/contrib) for Licklider Transmission Protocol (LTP, RFC5326) and Bundle Protocol (RFC5050).",
    "head_branch": "dtn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb24ea88c0a76e0a51d38",
    "number": 946,
    "body": "This should fix #945. However, TLS being a complex protocol, I don't think we can cover every Error which might rise from the parsing of random packets. That's why I changed the test which used a non-valid (zero) record type.\r\n\r\n(@gpotter2 I happened to come here but I won't be involved much further in scapy development.)",
    "head_branch": "fix_tlsversion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb24fa88c0a76e0a51d39",
    "number": 944,
    "body": "- Tested against a few pcaps. LLS data is now supported properly",
    "head_branch": "contrib-cleanup-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Docstring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb250a88c0a76e0a51d3a",
    "number": 943,
    "body": "",
    "head_branch": "contrib-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[coverage] IGMP tests + fixes (#943)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb251a88c0a76e0a51d3b",
    "number": 942,
    "body": "",
    "head_branch": "contrib-cleanup-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #942 from gpotter2/contrib-cleanup-2\n\n[coverage] More SEBEK tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb251a88c0a76e0a51d3c",
    "number": 941,
    "body": "The method crc32 may return nagative value in python2, made it unsigned.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #941 from cubarco/master\n\nFix Dot11WEP icv in Python2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb252a88c0a76e0a51d3d",
    "number": 940,
    "body": "Small change to pipetools test to ensure the check is not too quick",
    "head_branch": "fix-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #940 from gpotter2/fix-1\n\nMinor pipetools test fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb253a88c0a76e0a51d3e",
    "number": 939,
    "body": "Fixes https://github.com/secdev/scapy/issues/934",
    "head_branch": "dhcp-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #939 from gpotter2/dhcp-options\n\nDHCP: Implement option 55"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb254a88c0a76e0a51d3f",
    "number": 937,
    "body": "Fixes #936",
    "head_branch": "fix-next",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #937 from p-l-/fix-next\n\nPython 2/3: replace .next() method calls with next() built-in calls"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb255a88c0a76e0a51d40",
    "number": 935,
    "body": "The functions sr*(), when used with a `retry=` parameter, only return answers received during the last try.\r\n\r\nThis bug has been introduced in 730c47b (merged in #845). A new test has been added to trigger it.",
    "head_branch": "fix-sr-retry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #935 from p-l-/fix-sr-retry\n\nFix sr*() functions with retry parameter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb256a88c0a76e0a51d41",
    "number": 932,
    "body": "This PR:\r\n- Fix automatons select on sockets used in Automatons such as KrackAP, on windows.",
    "head_branch": "kracks-windows",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #932 from gpotter2/kracks-windows\n\n[Krack windows] Fix sockets automaton selection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb256a88c0a76e0a51d42",
    "number": 931,
    "body": "This PR:\r\n- adds a control over npcap advanced functions to edit 802.11 options\r\ne.g.: set an interface in monitor mode.\r\nWill be used for instance before running Krack AP: `iface.setmode(1)`",
    "head_branch": "npcap-utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #931 from gpotter2/npcap-utils\n\n[Krack windows] Add Npcap WLAN util functions: monitor mode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb257a88c0a76e0a51d43",
    "number": 930,
    "body": "Remove the useless `iface_mon` attributes spotted by @gpotter2 (in #928) and an unused import",
    "head_branch": "fix/useless-attribs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #930 from commial/fix/useless-attribs\n\nKrack module: remove useless lines"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb258a88c0a76e0a51d44",
    "number": 929,
    "body": "This PR:\r\n- fixes #922 without creating a temp file, but by redirecting the output stream",
    "head_branch": "sadface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #929 from gpotter2/sadface\n\nUtils: fix do_graph on linux"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb259a88c0a76e0a51d45",
    "number": 928,
    "body": "Hello,\r\n\r\nThis PR introduces a module named `krack`. It implements a WPA (TKIP only) access point with support for 4-way handshake and GTK rekeying.\r\n\r\nThis AP is designed for testing its client against the recent [Krack attacks](https://www.krackattacks.com).\r\nIt will check for:\r\n* Installation of an all zero TK\r\n* CVE-2017-13077 (PTK re-install during the 4-way handshake, with associated counter reset)\r\n* CVE-2017-13080 (GTK re-install during the GTK rekeying)\r\n\r\nFor an easier usage, the AP includes a DHCP server, and answers ARP requests. It also implements the encryption of the second 3/4 handshake message (to target MacOS devices).\r\n\r\nThe checks are done this way:\r\n* All-zero TK: check if any message send by the client is readable using a 0's TK\r\n* CVE-2017-13077: once the 4-way handshake has been done, wait and reply (as if the 4/4 message has never been received by the AP) the 3/4 message, then check if any message is reusing an already used IV\r\n* CVE-2017-13080: after a while, send a GTK rekeying. Then, ARP requests are made (asking 'who-has' client's IP). When the client answer, the AP will send the 1/2 GTK message (as if the 2/2 message has never been received), then resend the exact same previous ARP requests. If the client answer a second time, it means it has accept a broadcast message with an already used IV (ie. the GTK key has been re-installed). These tests are done several times, because it sometimes only work after a few attempts on real devices (packet loss, etc.).\r\n\r\nTo launch the AP (channel 6):\r\n```Python\r\n$ scapy\r\n>>> load_module(\"krack\")\r\n>>> KrackAP(iface=\"mon0\", ap_mac=\"0c:84:dc:01:02:03\", passphrase=\"testtest\", ssid=\"TEST\").run()\r\n```\r\n\r\n( The `log_runtime` is used for displaying results, so one can lower the verbosity using `log_runtime.setLevel(logging.WARNING)` )\r\n\r\nResults:\r\n* Samsung S7:\r\n```\r\nWARNING: AP started with ESSID: TEST, BSSID: 0c:84:dc:01:02:03\r\nWARNING: Client 8c:f5:a3:xx:xx:xx connected!\r\nINFO: Trying to trigger CVE-2017-13077\r\nINFO: Got a packet with IV: 0x1\r\n...\r\nINFO: Send ARP who-was from '192.168.42.1' to '192.168.42.128'\r\nINFO: Trying to trigger CVE-2017-13080 1/50\r\nINFO: Trying to trigger CVE-2017-13080 2/50\r\nWARNING: Broadcast packet accepted twice!! (CVE-2017-13080)\r\n```\r\n* wpa_supplicant v2.4, with a `dhclient` on the interface\r\n```\r\n$ wpa_supplicant -v\r\nwpa_supplicant v2.4\r\nCopyright (c) 2003-2015, Jouni Malinen <j@w1.fi> and contributors\r\n...\r\nWARNING: AP started with ESSID: TEST, BSSID: 0c:84:dc:01:02:03\r\nWARNING: Client c8:d7:19:xx:xx:xx connected!\r\nINFO: Trying to trigger CVE-2017-13077\r\nINFO: Got a packet with IV: 0x1\r\nINFO: more Got a packet with IV: 0x1\r\nWARNING: IV re-use!! Client seems to be vulnerable to handshake 3/4 replay (CVE-2017-13077)\r\nWARNING: Client has installed an all zero encryption key (TK)!!\r\n```\r\n* wpa_supplicant commit 0ba13e8 (01 oct., before patches)\r\n```\r\nWARNING: Broadcast packet accepted twice!! (CVE-2017-13080)\r\n```\r\n* wpa_supplicant commit a0e3e22 (after patches)\r\n```\r\nINFO: more Trying to trigger CVE-2017-13080\r\n...\r\nINFO: Trying to trigger CVE-2017-13080 9/50\r\n...\r\nWARNING: Client is likely not vulnerable to CVE-2017-13080\r\n```\r\nAnd in the debug output of `wpa_supplicant`:\r\n`wlanXX: WPA: Not reinstalling already in-use GTK to the driver (keyidx=0 tx=0 len=32)`\r\n* macOS_Sierra_10.12.6\r\n```\r\nWARNING: Client 04:0c:ce:xx:xx:xx connected!\r\nINFO: Trying to trigger CVE-2017-13077\r\nINFO: Got a packet with IV: 0x1\r\nINFO: more Got a packet with IV: 0x1\r\nWARNING: IV re-use!! Client seems to be vulnerable to handshake 3/4 replay (CVE-2017-13077)\r\nReply 192.168.42.128 to 04:0c:ce:xx:xx:xx\r\n...\r\nWARNING: Broadcast packet accepted twice!! (CVE-2017-13080)\r\n```\r\n\r\nThese results corresponds to what the atack's author claim in \"Key Reinstallation Attacks: Forcing Nonce Reuse in WPA2\" - Table 1.\r\n\r\nThe AP has been running on an Ubuntu 16.04 LTS. I've tried to reference IEEE 802.11i for TKIP details, and follow their naming convention in the cryptography part.\r\n\r\nHope this will be useful :smiley: ",
    "head_branch": "feature/module-krack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #928 from commial/feature/module-krack\n\nKrack AP module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb25aa88c0a76e0a51d46",
    "number": 927,
    "body": "This PR speeds up windows booting (by a lot on windows 7):\r\n- pcapdnet cache\r\n- remove useless function\r\n- do not read routes twice in `get_working_if`\r\n- fixes route_add_loopback\r\n- re-uses the same powershell instance while booting by adding a Powershell Manager\r\n- fix long IP lists (especially IPv6 possible IPs): do not crop\r\n- minor bug fixes (python3)\r\n\r\nResults:\r\n```\r\n>>> a = time.time()\r\n...:for i in range(1,10):\r\n...:    read_routes[6]()\r\n...:print(time.time()-a)\r\n```\r\n**on Windows 10:**\r\n\r\n|  | Normal | After `POWERSHELL_PROCESS.__init__()` (=during of after booting) |\r\n| --|---|---|\r\n| 10 x read_routes | 8.33999991417s | 0.571000051498s |\r\n| 10 x read_routes6 | 9.13199996948s | 0.917000055313s |\r\n| 10 x get_windows_if_list | 12.8439998627s | 1.46499991417s |\r\n\r\nPOWERSHELL_PROCESS auto-turns off when scapy has finished booting (this could be changed, but do we want to leave a background task powershell open ?)",
    "head_branch": "win-speedup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Windows] Loading speedup (pcapdnet cache) + cleanup (#927)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb25ba88c0a76e0a51d47",
    "number": 926,
    "body": "",
    "head_branch": "feature/snap-ipv6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #926 from commial/feature/snap-ipv6\n\nBind IPv6 layer to corresponding SNAP code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb25ca88c0a76e0a51d48",
    "number": 924,
    "body": "Add a missing import in scapy.route.\r\n\r\nFix #921 (have a look to the issue for more detail)\r\n(Fix by @gpotter2)",
    "head_branch": "fix/missing-import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #924 from commial/fix/missing-import\n\nAdd a missing import 'get_working_if'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb25ca88c0a76e0a51d49",
    "number": 923,
    "body": "This PR:\r\n- fixes https://github.com/secdev/scapy/issues/922",
    "head_branch": "sadface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb25da88c0a76e0a51d4a",
    "number": 920,
    "body": "added packet according to RFC7387 \r\nSource : https://tools.ietf.org/html/rfc7383#page-7",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb25ea88c0a76e0a51d4b",
    "number": 919,
    "body": "Fixes the corner case illustrated below (when a pointer `\\xc0` is located inside a string: usally the string is starting by it):\r\nIn this case, the rdata string corresponds to:\r\n`\\x1b140C768FFE28@Freebox Server\\xc0\\x0c\\xc0`, where `\\x0c\\xc0` points to `_tcp.local`\r\n- current scapy version:\r\n```\r\nc = b'\\x01\\x00^\\x00\\x00\\xfb\\x14\\x0cv\\x8f\\xfe(\\x08\\x00E\\x00\\x01C\\xe3\\x91@\\x00\\xff\\x11\\xf4u\\xc0\\xa8\\x00\\xfe\\xe0\\x00\\x00\\xfb\\x14\\xe9\\x14\\xe9\\x01/L \\x00\\x00\\x84\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x05_raop\\x04_tcp\\x05local\\x00\\x00\\x0c\\x00\\x01\\x00\\x00\\x11\\x94\\x00\\x1e\\x1b140C768FFE28@Freebox Server\\xc0\\x0c\\xc0(\\x00\\x10\\x80\\x01\\x00\\x00\\x11\\x94\\x00\\xa0\\ttxtvers=1\\x08vs=190.9\\x04ch=2\\x08sr=44100\\x05ss=16\\x08pw=false\\x06et=0,1\\x04ek=1\\ntp=TCP,UDP\\x13am=FreeboxServer1,2\\ncn=0,1,2,3\\x06md=0,2\\x07sf=0x44\\x0bft=0xBF0A00\\x08sv=false\\x07da=true\\x08vn=65537\\x04vv=2\\xc0(\\x00!\\x80\\x01\\x00\\x00\\x00x\\x00\\x19\\x00\\x00\\x00\\x00\\x13\\x88\\x10Freebox-Server-3\\xc0\\x17\\xc1\\x04\\x00\\x01\\x80\\x01\\x00\\x00\\x00x\\x00\\x04\\xc0\\xa8\\x00\\xfe'\r\n>>> Ether(c)\r\nWARNING: DNS decompression loop detected\r\n[...]\r\n>>> _.an.rdata\r\n'140C768FFE28@Freebox Server.'\r\n```\r\n- this patch:\r\n```\r\nc = b'\\x01\\x00^\\x00\\x00\\xfb\\x14\\x0cv\\x8f\\xfe(\\x08\\x00E\\x00\\x01C\\xe3\\x91@\\x00\\xff\\x11\\xf4u\\xc0\\xa8\\x00\\xfe\\xe0\\x00\\x00\\xfb\\x14\\xe9\\x14\\xe9\\x01/L \\x00\\x00\\x84\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x05_raop\\x04_tcp\\x05local\\x00\\x00\\x0c\\x00\\x01\\x00\\x00\\x11\\x94\\x00\\x1e\\x1b140C768FFE28@Freebox Server\\xc0\\x0c\\xc0(\\x00\\x10\\x80\\x01\\x00\\x00\\x11\\x94\\x00\\xa0\\ttxtvers=1\\x08vs=190.9\\x04ch=2\\x08sr=44100\\x05ss=16\\x08pw=false\\x06et=0,1\\x04ek=1\\ntp=TCP,UDP\\x13am=FreeboxServer1,2\\ncn=0,1,2,3\\x06md=0,2\\x07sf=0x44\\x0bft=0xBF0A00\\x08sv=false\\x07da=true\\x08vn=65537\\x04vv=2\\xc0(\\x00!\\x80\\x01\\x00\\x00\\x00x\\x00\\x19\\x00\\x00\\x00\\x00\\x13\\x88\\x10Freebox-Server-3\\xc0\\x17\\xc1\\x04\\x00\\x01\\x80\\x01\\x00\\x00\\x00x\\x00\\x04\\xc0\\xa8\\x00\\xfe'\r\n>>> Ether(c)\r\n[...]\r\n>>> _.an.rdata\r\n'140C768FFE28@Freebox Server._raop._tcp.local.'\r\n```\r\n(as in wireshark)",
    "head_branch": "dns-dloop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #919 from gpotter2/dns-dloop\n\nDNS: 'decompression loop' corner-case"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb25fa88c0a76e0a51d4c",
    "number": 917,
    "body": "Reworking of the NetflowV9 implementation (by adding a `netflowv9_defragment` mechanic) function, to fix\r\nhttps://github.com/secdev/scapy/issues/916 and https://github.com/secdev/scapy/issues/1060.\r\n\r\nIndeed, some NetflowV9 frames needs other, previously recieved frames, to be dissected.",
    "head_branch": "fix-netflowv9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #917 from gpotter2/fix-netflowv9\n\nFix netflow v9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb260a88c0a76e0a51d4d",
    "number": 915,
    "body": "+ fix https://github.com/secdev/scapy/issues/914 \r\n+ read_routes6 on python 3\r\n+ fix tcpdump test bug",
    "head_branch": "fix-rr-w8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #915 from gpotter2/fix-rr-w8\n\nPython 3/Routes : fix read_routes (windows) + tcpdump"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb261a88c0a76e0a51d4e",
    "number": 912,
    "body": "Sorry for that.\r\nFixes:\r\nhttps://travis-ci.org/secdev/scapy/jobs/292134668\r\nhttps://travis-ci.org/secdev/scapy/jobs/292134680",
    "head_branch": "critical-osx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #912 from gpotter2/critical-osx\n\nFix critical OSX read_routes6 bug"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb262a88c0a76e0a51d4f",
    "number": 911,
    "body": "Fixes most (all the ones that have tests) contrib modules",
    "head_branch": "py3-diameter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #911 from gpotter2/py3-diameter\n\nPython 3: remaining contrib modules"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb263a88c0a76e0a51d50",
    "number": 910,
    "body": "- in LLDPDUSystemName field name 'name' was covered by class attribute 'name' - instead of the system name a query to frame[LLDPDUSystemName].name returned the class name. won't explode but still bad.\r\n- seems I copy-pasted the class LLDPDUSystemDescription (two lines below LLDPDUSystemName) - the length field reference pointed to name - but should be description. this is a real bug.\r\n\r\nsorry.",
    "head_branch": "ieee-802-1-ab-lldp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "lldp fixes  (#910)\n\n* fix invalid field name in LLDPDUSystemName PDU\r\n\r\nname was covered by... the class name. damn karl.\r\n\r\n* fix invalid length field reference in LLDPDUSystemDescription PDU\r\n\r\n* lldp - test decoded attribute values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb263a88c0a76e0a51d51",
    "number": 909,
    "body": "",
    "head_branch": "py3-contrib-15",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #909 from gpotter2/py3-contrib-15\n\nPython 3: fix TACACS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb264a88c0a76e0a51d52",
    "number": 908,
    "body": "In automaton, the `parse_args` method seems to be called twice during a \"normal use\" (inspired from TLS example).\r\n\r\nTo reproduce:\r\n```Python\r\nfrom scapy.all import *\r\n\r\nclass Test(Automaton):\r\n\r\n    def parse_args(self, *args, **kwargs):\r\n        super(Test, self).parse_args(**kwargs)\r\n        print \"PARSE ARGS CALLED\"\r\n\r\nx = Test()\r\n```\r\nOutput:\r\n```\r\nPARSE ARGS CALLED\r\nPARSE ARGS CALLED\r\n... crash because no initial state is set ...\r\n```\r\n\r\nThe first call is in `__init__`, the second results from thread starting in `._do_control`\r\nThe later being called with extra care on default parameters, I removed the former. Is that correct for you?",
    "head_branch": "fix/automaton-double-parseargs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #908 from commial/fix/automaton-double-parseargs\n\nAutomaton: avoid a double call to parse_args"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb265a88c0a76e0a51d53",
    "number": 907,
    "body": "Particularly, this fixes `ls(Ether, verbose=1)` (regression test added).",
    "head_branch": "fix-ls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #907 from p-l-/fix-ls\n\nFix DADict objects"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb266a88c0a76e0a51d54",
    "number": 906,
    "body": "the packet number 53 was missing. I implemented it according to RFC 7383 \r\nsee: https://tools.ietf.org/html/rfc7383#page-7",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb267a88c0a76e0a51d55",
    "number": 905,
    "body": "This PR:\r\n- Adds metric detections + usage while routing\r\n- Makes scapy boots faster (it was determining the best `conf.iface` twice), especially on newest windows versions\r\n- Simplifies some windows read_routes(6) methods\r\n\r\n**This PR does not add metrics support for OSX (unix.py). It only adds support for windows/linux**",
    "head_branch": "windows-speedup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #905 from gpotter2/windows-speedup\n\n[Networking] Add Metrics handling (windows/linux)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb267a88c0a76e0a51d56",
    "number": 903,
    "body": "PR for closing #896 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #903 from gelim/master\n\nSet sniff snaplen to MTU"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb268a88c0a76e0a51d57",
    "number": 902,
    "body": "This layer is commonly seen on networks. It was dissected as a classic record, which was wrong",
    "head_branch": "dns-compression",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #902 from gpotter2/dns-compression\n\nDNS: add DNSRRSRV"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb269a88c0a76e0a51d58",
    "number": 901,
    "body": "I finally found away to allow dissection of complex DNS pointers !\r\nIt will fix the\r\n`DNS message can't be compressed at this point!`\r\nthat one could get very often.\r\n\r\n@p-l- Will also fix the sniffing crashes on appveyor/travis while doing the real test cases tests.\r\ne.g: https://travis-ci.org/secdev/scapy/jobs/289485067",
    "head_branch": "dns-compression",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #901 from gpotter2/dns-compression\n\nFix DNS compression"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb26aa88c0a76e0a51d59",
    "number": 898,
    "body": "With old versions of IPython (FYI, Ubuntu 16.04.3 LTS packages IPython 2.4.1), Scapy tries to use IPython but fails, making Scapy unusable. Also, this PR makes `traitlets` a soft dependency when IPython is used.",
    "head_branch": "fix-old-ipython",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #898 from p-l-/fix-old-ipython\n\nFix IPython: check for old versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb26ba88c0a76e0a51d5a",
    "number": 895,
    "body": "Should fix https://github.com/secdev/scapy/issues/672\r\nThis protocol is ridiculously complicated...\r\n\r\nhttps://www.ietf.org/rfc/rfc3954.txt",
    "head_branch": "netflow-v9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #895 from gpotter2/netflow-v9\n\nAdd NetflowV9 layers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb26ca88c0a76e0a51d5b",
    "number": 894,
    "body": "This one was annoying to fix",
    "head_branch": "py3-contrib-15",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #894 from gpotter2/py3-contrib-15\n\nPython 3: fix HTTP/2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb26ca88c0a76e0a51d5c",
    "number": 891,
    "body": "+ trigger small bug in ber.py",
    "head_branch": "coverage-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #891 from gpotter2/coverage-1\n\n[coverage] Add ber + asn1 tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb26da88c0a76e0a51d5d",
    "number": 890,
    "body": "",
    "head_branch": "py3-contrib-14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #890 from gpotter2/py3-contrib-14\n\nPython 3: fix PNIO"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb26ea88c0a76e0a51d5e",
    "number": 889,
    "body": "",
    "head_branch": "py3-contrib-13",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #889 from gpotter2/py3-contrib-13\n\nPython 3: fix OPENFLOW"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb26fa88c0a76e0a51d5f",
    "number": 888,
    "body": "",
    "head_branch": "py3-contrib-12",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #888 from gpotter2/py3-contrib-12\n\nPython 3: fix MODBUS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb270a88c0a76e0a51d60",
    "number": 887,
    "body": "",
    "head_branch": "py3-contrib-11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #887 from gpotter2/py3-contrib-11\n\nPython 3: fix MACSEC"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb270a88c0a76e0a51d61",
    "number": 886,
    "body": "",
    "head_branch": "py3-contrib-10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #886 from gpotter2/py3-contrib-10\n\nPython 3: fix IGMP(v1/3)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb271a88c0a76e0a51d62",
    "number": 885,
    "body": "",
    "head_branch": "py3-contrib-9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #885 from gpotter2/py3-contrib-9\n\nPython 3: fix GTPv2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb272a88c0a76e0a51d63",
    "number": 884,
    "body": "",
    "head_branch": "py3-contrib-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #884 from gpotter2/py3-contrib-8\n\nPython 3: fix EIGRP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb273a88c0a76e0a51d64",
    "number": 883,
    "body": "",
    "head_branch": "py3-contrib-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #883 from gpotter2/py3-contrib-7\n\nPython 3: fix COAP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb274a88c0a76e0a51d65",
    "number": 882,
    "body": "",
    "head_branch": "py3-contrib-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #882 from gpotter2/py3-contrib-6\n\nPython 3: fix BGP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb275a88c0a76e0a51d66",
    "number": 881,
    "body": "",
    "head_branch": "py3-contrib-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #881 from gpotter2/py3-contrib-5\n\nPython 3: fix HomePlugAv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb275a88c0a76e0a51d67",
    "number": 880,
    "body": "I've contacted the author of the protocol, and he nicely gave me a copy of all RFCs + samples.\r\nPartially used those in the tests",
    "head_branch": "py3-contrib-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #880 from gpotter2/py3-contrib-4\n\nPython 3/coverage: fix PPI_GEOTAG"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb276a88c0a76e0a51d68",
    "number": 879,
    "body": "",
    "head_branch": "py3-contrib-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #879 from gpotter2/py3-contrib-3\n\nPython 3: fix MQTT"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb277a88c0a76e0a51d69",
    "number": 878,
    "body": "",
    "head_branch": "py3-contrib-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #878 from gpotter2/py3-contrib-2\n\nPython 3: fix MPLS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb278a88c0a76e0a51d6a",
    "number": 877,
    "body": "",
    "head_branch": "py3-contrib-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #877 from gpotter2/py3-contrib-1\n\nPython 3: fix GTP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb279a88c0a76e0a51d6b",
    "number": 875,
    "body": "Latest cryptography update (2.1) has removed those (useless ?!?!?!) imports we were doing...",
    "head_branch": "cryptography_import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #875 from gpotter2/cryptography_import\n\n[Tests] Fix Cryptography import (2.1+)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb27aa88c0a76e0a51d6c",
    "number": 874,
    "body": "",
    "head_branch": "py3-morelayers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #874 from gpotter2/py3-morelayers\n\nPython 3: Fix DHCP6 + PPP/PPTP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb27ba88c0a76e0a51d6d",
    "number": 873,
    "body": "This PR does the following:\r\n - it removes the useless `airpwn()` function\r\n - it fixes `WiFi_am`\r\n- it adds a unit test for `WiFi_am`",
    "head_branch": "coverage_dot11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #873 from guedou/coverage_dot11\n\nDot11: code cleaning, fixes and unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb27ba88c0a76e0a51d6e",
    "number": 872,
    "body": "- Fixes https://github.com/secdev/scapy/issues/842\r\nPyPy has a different id() system that did not worked as expected. Also, it does not accept the new C-object system (as python 2.7 or 3+ does)",
    "head_branch": "fix-pypy-linux",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #872 from gpotter2/fix-pypy-linux\n\nFix PyPy attach_filter function"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb27ca88c0a76e0a51d6f",
    "number": 871,
    "body": "This PR attempts to fix #614 and provides a unit test.",
    "head_branch": "Issue_#614",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #871 from guedou/Issue_#614\n\nFix more specific routes processing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb27da88c0a76e0a51d70",
    "number": 869,
    "body": "The .close() method has been recently added to pcapy objects (see\r\nhttps://github.com/CoreSecurity/pcapy/issues/30 &\r\nhttps://github.com/CoreSecurity/pcapy/pull/35).",
    "head_branch": "fix-pcapy-close",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #869 from p-l-/fix-pcapy-close\n\nClose handles opened using pcapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb27ea88c0a76e0a51d71",
    "number": 868,
    "body": "",
    "head_branch": "fix-py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #868 from p-l-/fix-py3\n\nSome Python 3 fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb27fa88c0a76e0a51d72",
    "number": 867,
    "body": "This PR improves the code coverage of `scapy/sendrcv.py`. The `sendpfast()` test should be implemented while fixing issue #791.",
    "head_branch": "sendrecv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #867 from guedou/sendrecv\n\n[coverage] Add tests for more sending and receiving functions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb280a88c0a76e0a51d73",
    "number": 866,
    "body": "A test introduced in #838 catches a bug with Python 3. Good job @guedou!",
    "head_branch": "fix-py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #866 from p-l-/fix-py3\n\nPython 3: fix sndrcv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb280a88c0a76e0a51d74",
    "number": 865,
    "body": "We should not assume that a SSLv2ClientMasterKey context has been updated beforehand by SSLv2ServerHello methods. The tls_version may not be set here.",
    "head_branch": "fix_sslv2mk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #865 from mtury/fix_sslv2mk\n\nFix SSLv2 context update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb281a88c0a76e0a51d75",
    "number": 863,
    "body": "",
    "head_branch": "fix-tmpfiles",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #863 from p-l-/fix-tmpfiles\n\nFix get_temp_file() to use NamedTemporaryFile() properly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb282a88c0a76e0a51d76",
    "number": 862,
    "body": "",
    "head_branch": "fix-cmds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #862 from gpotter2/fix-cmds\n\n[Executables] run_tests3.bat + disable __pycache__"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb284a88c0a76e0a51d77",
    "number": 861,
    "body": "I'll rebase this PR regularly against master.",
    "head_branch": "py3-land",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #861 from p-l-/py3-land\n\nPython 3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb284a88c0a76e0a51d78",
    "number": 860,
    "body": "",
    "head_branch": "fix-py3-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #860 from p-l-/fix-py3-tests\n\nFix a Python 3 test + rename executables"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb285a88c0a76e0a51d79",
    "number": 859,
    "body": "This short PR splits the cymru data parsing, to ease testing. It also reordered AS resolved related unit tests.",
    "head_branch": "coverage_cymru",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #859 from guedou/coverage_cymru\n\n[coveage] Better coverage for scapy/as_resolvers.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb286a88c0a76e0a51d7a",
    "number": 858,
    "body": "With IPv6 Segment Routing (https://tools.ietf.org/html/draft-ietf-6man-segment-routing-header-07), the pseudo-header for UDP and TCP checksums should use as source address the address of the last traversed node. In contrast with the deprecated routing header extension, the last traversed segment is actually the first in the SRH, with index 0 (see IETF draft).\r\n\r\nThis wasn't implemented so far, leading to an incorrect checksum computation.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #858 from Zashas/master\n\nSegment Routing: fixing pseudo-header computation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb287a88c0a76e0a51d7b",
    "number": 857,
    "body": "This PR adds a unit test to check that Scapy correctly adds a routing entry when dealing with interface aliases.\r\n\r\nIt will help fixing #614 by ensuring that we do no introduce a regression.",
    "head_branch": "interface_alias_ut",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #857 from guedou/interface_alias_ut\n\n[coverage] Interface alias routing table unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb288a88c0a76e0a51d7c",
    "number": 856,
    "body": "- fixes cert.uts\r\n- fixes x509.uts\r\n- fixes tls.uts (except one test: it seems that cryptography API has changed, not sure how to fix it)\r\n- fixes sslv2.uts\r\n- fixes tls13.uts",
    "head_branch": "tmp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #856 from gpotter2/tmp\n\nPython 3: Fix certs/x509/TLS1/SSLv2/TLS1.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb289a88c0a76e0a51d7d",
    "number": 855,
    "body": "Fixes #849.",
    "head_branch": "fix-test-pyx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #855 from p-l-/fix-test-pyx\n\nRename test_pyx to _test_pyx to \"hide\" it"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb28aa88c0a76e0a51d7e",
    "number": 854,
    "body": "",
    "head_branch": "py3-pipetools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #854 from gpotter2/py3-pipetools\n\nPython 3: pipetools fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb28ba88c0a76e0a51d7f",
    "number": 853,
    "body": "",
    "head_branch": "fixes-py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #853 from p-l-/fixes-py3\n\nFixes for Python 3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb28ca88c0a76e0a51d80",
    "number": 851,
    "body": "Update logging.warning/info(), by replacing calls\r\n `warning('my string %s' % 'hey')` ==> `warning('my string %s', 'hey')`\r\n- let the logging module use its [formatter](https://docs.python.org/2/library/logging.html#logging.Formatter)\r\n- fix https://github.com/secdev/scapy/issues/835",
    "head_branch": "fix-warning-params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #851 from gpotter2/fix-warning-params\n\n[logging] Fix logging params"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb28ca88c0a76e0a51d81",
    "number": 850,
    "body": "Tiny fixes:\r\n- xrange not available on python 3 (range gets imported via six)",
    "head_branch": "py3-plot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #850 from gpotter2/py3-plot\n\n[coverage] plist on python 3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb28da88c0a76e0a51d82",
    "number": 848,
    "body": "This PR defines better default values for ClientHello messages. If the user did not provide any ciphersuites nor extensions, the message is post-built with a dozen common ciphersuites and the appropriate minimal extensions, so that the message could be immediately sent to a server if needed.\r\n\r\nTo retrieve a TLS answer (including X.509 certificates) from most servers, one could try:\r\n```\r\n# Connect to secdev.org on 443/tcp                                              \r\ndomain = \"secdev.org\"                                                           \r\nsck = socket.socket(socket.AF_INET, socket.SOCK_STREAM)                         \r\nsck.connect((domain, 443))                                                      \r\n                                                                                \r\n# Define a ClientHello with default values                                                                                               \r\nch = TLSClientHello(TLSClientHello().build())                                                    \r\n                                                                                \r\n# Prepare to recompute all lengths with the new domain                          \r\nch.msglen = ch.extlen = None                                                    \r\nsni = ch.ext[1]                                                                 \r\nsni.len = sni.servernameslen = sni.servernames[0].namelen = None                \r\nsni.servernames[0].servername = domain                                          \r\n                                                                                \r\nt = TLS(msg=ch)                                                                                                                                       \r\nsck.send(raw(t))                                                                \r\n                                                                                \r\n# Receive data                                                                  \r\ndata = sck.recv(8192) \r\nTLS(data).show()\r\n```\r\n\r\n(Actually the default domain put in the SNI extension is already secdev.org.)",
    "head_branch": "default_clienthello",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #848 from mtury/default_clienthello\n\nBetter default for TLS ClientHello"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb28ea88c0a76e0a51d83",
    "number": 847,
    "body": "This introduces some fixes for Python 3. Particularly, we have to handle a change in random values.",
    "head_branch": "fixes-py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #847 from p-l-/fixes-py3\n\nPython 3: multiple fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb28fa88c0a76e0a51d84",
    "number": 846,
    "body": "",
    "head_branch": "py3-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #846 from p-l-/py3-fixes\n\nPython 3: fix addresses"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb290a88c0a76e0a51d85",
    "number": 845,
    "body": "Fixes:\r\n- send/recv flood methods on Windows\r\n- adds `srp1flood` and `sr1flood` + tests\r\n- unify code between `sndrcvflood()` and `sndrcv()`\r\n- fix L2ListenTcpdump on windows (for https://github.com/secdev/scapy/pull/838)\r\n- fix tcpdump not being closed correctly on L2ListenTcpdump",
    "head_branch": "fix-sndrcv-socks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #845 from gpotter2/fix-sndrcv-socks\n\n[Networking/coverage] Fix sndrcvflood methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb291a88c0a76e0a51d86",
    "number": 844,
    "body": "This PR fixes #827 and adds improvements to data logged during Travis runs.\r\n\r\nLong story short, it seems that tests using `SCAPY_USE_PCAPDNET` never used the `pcap` and `dumbnet` Python modules. We are installing them with `apt` and Travis does not use system packages by default.",
    "head_branch": "Issue_#827",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use --system-site-packages with Travis"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb292a88c0a76e0a51d87",
    "number": 843,
    "body": "Hi, I was encountering this problem when I try running Scapy with Python 3.5:\r\n\r\n```\r\n<hidden>@<hidden>:~/git/scapy$ ./run_scapy3\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib/python3.5/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/<hidden>/git/scapy/scapy/__init__.py\", line 93, in <module>\r\n    interact()\r\n  File \"/home/<hidden>/git/scapy/scapy/main.py\", line 412, in interact\r\n    init_session(session_name, mydict)\r\n  File \"/home/<hidden>/git/scapy/scapy/main.py\", line 285, in init_session\r\n    scapy_builtins = {k: v for k, v in six.iteritems(importlib.import_module(\".all\", \"scapy\").__dict__) if _validate_local(k)}\r\n  File \"/usr/lib/python3.5/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 673, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/home/<hidden>/git/scapy/scapy/all.py\", line 28, in <module>\r\n    from scapy.route6 import *\r\n  File \"/home/<hidden>/git/scapy/scapy/route6.py\", line 273, in <module>\r\n    conf.route6 = Route6()\r\n  File \"/home/<hidden>/git/scapy/scapy/route6.py\", line 34, in __init__\r\n    self.resync()\r\n  File \"/home/<hidden>/git/scapy/scapy/route6.py\", line 47, in resync\r\n    self.routes = read_routes6()\r\n  File \"/home/<hidden>/git/scapy/scapy/arch/linux.py\", line 328, in read_routes6\r\n    lifaddr = in6_getifaddr() \r\n  File \"/home/<hidden>/git/scapy/scapy/arch/linux.py\", line 303, in in6_getifaddr\r\n    addr = scapy.utils6.in6_ptop(b':'.join(addr))\r\n  File \"/home/<hidden>/git/scapy/scapy/utils6.py\", line 613, in in6_ptop\r\n    return inet_ntop(socket.AF_INET6, inet_pton(socket.AF_INET6, str))\r\n  File \"/home/<hidden>/git/scapy/scapy/pton_ntop.py\", line 89, in inet_pton\r\n    return socket.inet_pton(af, addr)\r\nOSError: illegal IP address string passed to inet_pton\r\n```\r\n\r\nThen I located the code and found that `addr = str(addr)` was not doing as expected - it returns something like\r\n```\r\n>>> str(addr)\r\n\"b'0000:0000:0000:0000:0000:0000:0000:0001'\"\r\n```\r\ninstead of \r\n```\r\n>>> addr.decode()\r\n'0000:0000:0000:0000:0000:0000:0000:0001'\r\n```\r\n\r\nAnd this commit fixes this problem.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb292a88c0a76e0a51d88",
    "number": 838,
    "body": "This PR adds test for `StreamSocket` and `L3RawSocket`.",
    "head_branch": "coverage_supersocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #838 from guedou/coverage_supersocket\n\n[coverage] Test more SuperSockets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb293a88c0a76e0a51d89",
    "number": 837,
    "body": "This PR extends the coverage of `scapy/__init__.py`. it also provides a better naming scheme when using git archive.",
    "head_branch": "coverage_version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #837 from guedou/coverage_version\n\n[coverage] Scapy version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb294a88c0a76e0a51d8a",
    "number": 834,
    "body": "Proposed patch for #832.\r\n\r\nWith a packet `pkt = IP() / IP(ttl=3) / IP()`, this will allow:\r\n\r\n  - pkt.getlayer(IP, ttl=3)\r\n  - pkt[IP, {\"ttl\": 3}]\r\n\r\nThis is particularly useful with Dot11Elt() layers, when you want a specific value (the SSID or supported rates for example).",
    "head_branch": "enh-getlayer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #834 from p-l-/enh-getlayer\n\nAllow filters in the Packet slice / .getlayer() API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb295a88c0a76e0a51d8b",
    "number": 833,
    "body": "This PR adds some unit tests for `PacketList` methods.\r\n\r\nThe PyX Python module is installed using apt to ease installing its dependencies.",
    "head_branch": "coverage_plist",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #833 from guedou/coverage_plist\n\n[coverage] PacketList methods regression tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb296a88c0a76e0a51d8c",
    "number": 831,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #831 from llazzaro/master\n\nAdd missing import"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb297a88c0a76e0a51d8d",
    "number": 830,
    "body": "EAPOL was missing, a possible cause was import *.\r\n\r\nto reproduce try to execute:\r\n\r\n`from scapy.contrib.wpa_eapol import WPA_key\r\n`",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb298a88c0a76e0a51d8e",
    "number": 829,
    "body": "This is an attempt at enabling tab completion with packet fields. It is not just a matter of quickly referencing long fields: I'd say it's even more useful as a way to remember/find out which fields you can get/set within an interpreter when you don't really know the packet you're dealing with.\r\n\r\nI've been bothered by the lack of this feature time and again, so when I received a user request I tried to deal with it. The main issue was to reproduce the result of `dir()`, as Python 2 does not provide something like `super().__dir__()`.\r\n\r\nThen we add the list of `default_fields`. I assumed that any value which might appear later on in `overloaded_fields` and `fields` should be present in `default_fields`. Does this seem right to you?\r\n\r\nAlso, I'm not sure how we could avoid the creation of lists with `keys()`. But I find it definitively good for UX.\r\n\r\nCurrently, `len(dir(TLSClientHello())) = 135` and `len(TLSClientHello().default_fields) = 13`\r\nWith this PR, counting `_superdir` and `__dir__`, you can check `len(dir(TLSClientHello())) = 150`",
    "head_branch": "field_completion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #829 from mtury/field_completion\n\nEnable tab completion with fields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb299a88c0a76e0a51d8f",
    "number": 825,
    "body": "This PR:\r\n- Fixes the ancestral https://github.com/secdev/scapy/issues/645\r\n- Prepares BGP for python 3\r\n\r\nThe `guesspayload_class` method of BGPHeader was overwriten when using both BGPHeader and BGP ==> BGPHeader is created. \r\nThis PR adds a `dispatch_hook` in BGPHeader to redirect to the normal result.",
    "head_branch": "fix-bgp-hook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #825 from gpotter2/fix-bgp-hook\n\n[BGP] Fix dispatch_hook beein overwriten"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb29aa88c0a76e0a51d90",
    "number": 824,
    "body": "This PR fixes:\r\n- conf.prompt not beeing updated https://github.com/secdev/scapy/pull/665#issuecomment-331145295\r\n- save_session/load_session not using ipython user_ns var.\r\n- python 3 session tests fixed\r\n\r\nfirst bug fixes:\r\n```\r\n>>> conf.prompt = 'toto >'\r\ntoto >\r\ntoto >VERSION\r\n'2.3.3.dev695'\r\ntoto >\r\n```",
    "head_branch": "prompt-changer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #824 from gpotter2/prompt-changer\n\nApply IPYTHON conf.prompt"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb29aa88c0a76e0a51d91",
    "number": 823,
    "body": "",
    "head_branch": "fix-vxlan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #823 from p-l-/fix-vxlan\n\nVXLAN: more layer bindings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb29ba88c0a76e0a51d92",
    "number": 822,
    "body": "This PR improves PR #725 by disabling macsec tests with pypy.",
    "head_branch": "PR_#725_pypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #822 from guedou/PR_#725_pypy\n\nPR #725 improved"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb29ca88c0a76e0a51d93",
    "number": 821,
    "body": "After #816, based on a comment by @gpotter2.",
    "head_branch": "fix-warning-win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #821 from p-l-/fix-warning-win\n\nWindows: remove confusing warning message (@gpotter2)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb29da88c0a76e0a51d94",
    "number": 820,
    "body": "This PR is a small (as in \"easy to review\" ;-) ) set of changes for Python 3 compatibility.\r\n\r\nOne fixes a bug reported in a comment in #818.",
    "head_branch": "fixes-py3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tiny Python 3 fixes (#820)\n\n* Python3: fix set_promisc() with Linux\r\n\r\n* Fix debug dissector error message\r\n\r\n* Make run_scapy3 executable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb29ea88c0a76e0a51d95",
    "number": 817,
    "body": "This PR updates DLT_* constant values (based on `pcap/dlt.h`) and uses them to register associations in `conf.l2types`.",
    "head_branch": "fix-dlt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #817 from p-l-/fix-dlt\n\nFix DLT_* constant values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb29fa88c0a76e0a51d96",
    "number": 816,
    "body": "In particular, this will make the DB usable on *BSD systems when `tshark` has been installed from the ports or packages.",
    "head_branch": "fix-manufdb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #816 from p-l-/fix-manufdb\n\nTry to read the manufacturer DB from various places"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a0a88c0a76e0a51d97",
    "number": 815,
    "body": "This PR uses the (rather) new flags access (`pkt.flags.NextProtocol` now does the same than `pkt.flags & 0x04`, but is easier to understand) and fixes the (rather complex) layer bindings.",
    "head_branch": "cleanup-vxlan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #815 from p-l-/cleanup-vxlan\n\nImprove VXLAN layer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a1a88c0a76e0a51d98",
    "number": 814,
    "body": "For use in fuzzing probes",
    "head_branch": "GetMulticastMAC",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a1a88c0a76e0a51d99",
    "number": 812,
    "body": "After discussions with @rjarry and @p-l- an exception is now raised when `tcpreplay` can not be executed. Other use of `log_interactive` in Scapy are indeed not similar.\r\n\r\nOLD TEXT\r\nAfter discussuions with @p-l- and @rjarry \r\n\r\nThis should fix #791 i.e. no log messages are displayed when using Scapy as a module.\r\n\r\nThe patch detects a previously acquired logger in order to add a StreamHandler or not.\r\n\r\n@rjarry does this look ok ?",
    "head_branch": "Issue_#791",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #812 from guedou/Issue_#791\n\nFix #791 - Throw an exception when tcpreplay can not be executed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a2a88c0a76e0a51d9a",
    "number": 811,
    "body": "See #751",
    "head_branch": "PR_#751_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #811 from guedou/PR_#751_improved\n\nImproved PR#751"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a3a88c0a76e0a51d9b",
    "number": 809,
    "body": "This PR uses Scapy's logo to create a fancy prompt. It can be removed by setting `conf.fancy_prompt = False` if you're a boring person (but why would you use Scapy?).\r\n\r\n![prompt-scapy-charsv2](https://user-images.githubusercontent.com/5064814/30320809-52a68e86-97a3-11e7-9a1b-5a9f01801f69.png)\r\n",
    "head_branch": "prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #809 from p-l-/prompt\n\nAdd a fancy prompt"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a4a88c0a76e0a51d9c",
    "number": 808,
    "body": "This PR:\r\n- adds more scapypipes tests\r\n- fixes `_high_send` instead of `_send`\r\n- tiny automaton speed-up & stabilize\r\n- daemonize automaton threads to improve UTscapy closing",
    "head_branch": "coverage-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[coverage] Add more scapypipes tests + tests fixes (#808)\n\n* Add more scapypipes tests\r\n* Daemonize threads, better UTscapy closing\r\n* Fix TCPConnectPipe"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a5a88c0a76e0a51d9d",
    "number": 807,
    "body": "This PR proposes an enhanced `README.md` with embedded examples and links to the notebooks.\r\n\r\nThe Scapy logo is currently in `doc/scapy_logo.png`. This raises some questions:\r\n- shall we put it in anothe repository ?\r\n- shall we reduce its size ?",
    "head_branch": "README",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #807 from guedou/README\n\nUpdated README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a6a88c0a76e0a51d9e",
    "number": 806,
    "body": "2 small tests to reduce tests randomness",
    "head_branch": "coverage-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #806 from gpotter2/coverage-3\n\n[coverage] Reduce coverage randomness: tls+TEX"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a7a88c0a76e0a51d9f",
    "number": 805,
    "body": "This will make them usable as set elements or dict or Counter keys.",
    "head_branch": "flags-hashable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #805 from p-l-/flags-hashable\n\nMake FlagValue objects hashable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a7a88c0a76e0a51da0",
    "number": 804,
    "body": "There's a mistake in this function name in the documentation. This corrects it.\r\n\r\nFollowing the example in the documentation leads to an error:\r\n\r\n>>> ans, unans = srp(dhcp_discover, multi=True)\r\nBegin emission:\r\nFinished to send 1 packets.\r\n*.....................................^C\r\nReceived 38 packets, got 1 answers, remaining 0 packets\r\n>>> ans.summarize()\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/dist-packages/scapy/plist.py\", line 76, in __getattr__\r\n    return getattr(self.res, attr)\r\nAttributeError: 'list' object has no attribute 'summarize'\r\n>>> ans.summary()\r\nEther / IP / UDP 0.0.0.0:bootpc > 255.255.255.255:bootps / BOOTP / DHCP ==> Ether / IP / UDP 192.168.1.1:bootps > 192.168.65.2:bootpc / BOOTP / DHCP\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #804 from tipene-tuturu/master\n\nfix usage example"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a8a88c0a76e0a51da1",
    "number": 802,
    "body": "This PR:\r\n- fixes some scapypipes.py classes for windows\r\n- adds SniffSource + RdpcapSource + WrpcapSink + InjectSink tests",
    "head_branch": "tests-scapypipes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #802 from gpotter2/tests-scapypipes\n\n[coverage] Add ScapyPipes tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2a9a88c0a76e0a51da2",
    "number": 796,
    "body": "This PR:\r\n- simplifies a LOT the sys.stdout mocking in the tests by using a context manager\r\n- add dadict tests",
    "head_branch": "patch-tests-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #796 from gpotter2/patch-tests-7\n\n[coverage] New sys.stdout contextmanager + dadict tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2aaa88c0a76e0a51da3",
    "number": 795,
    "body": "This PR:\r\n- adds automaton timeout tests: random timeout was happening\r\n- adds single Ether() mysummary test, that was not always triggered",
    "head_branch": "patch-tests-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #795 from gpotter2/patch-tests-7\n\n[coverage] reduce randomness of coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2aba88c0a76e0a51da4",
    "number": 794,
    "body": "This PR:\r\n- adds advanced pnio_rtc test using `analyse_data` function",
    "head_branch": "patch-pnio-rtc-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #794 from gpotter2/patch-pnio-rtc-tests\n\n[coverage] Add analyse data test to pnio_rtc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2aca88c0a76e0a51da5",
    "number": 793,
    "body": "This PR:\r\n- Adds IGMP(v1-2-3) tests\r\n- Reformat the files (remove funky -----..... + 4spaces tabs)\r\n- Fix TODO: use `getmacbyip`\r\n- finish IGMPv3 format\r\n\r\n@p-l- Should I do the same to IGMPv3 ?",
    "head_branch": "patch-igmp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #793 from gpotter2/patch-igmp\n\n[coverage] Full rework of IGMP(v1/2/3) + tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2ada88c0a76e0a51da6",
    "number": 792,
    "body": "Very small fix that adds decimal precision on windows packets.\r\nThanks to\r\n`https://github.com/phaethon/scapy/issues/182`",
    "head_branch": "patch-decimal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #792 from gpotter2/patch-decimal\n\n[Windows] Fix decimal timestamp"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2ada88c0a76e0a51da7",
    "number": 789,
    "body": "This PR simplifies the way layers are loaded when running Scapy. It fixes Scapy under OpenBSD at least (currently broken). I also had to clean-up the imports in DHCPv6 layer.",
    "head_branch": "fix-module-import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #789 from p-l-/fix-module-import\n\nFix layers import"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2aea88c0a76e0a51da8",
    "number": 785,
    "body": "The QoS control fields in Dot11QoS appear to be in reverse order.  I will file an issue and reference this pull request.\r\nFixes #786",
    "head_branch": "fix-dot11qos-qos-control",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #785 from william-r-dieter/fix-dot11qos-qos-control\n\nFix ordering of bit fields in the Dot11QoS QoS Control field"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2afa88c0a76e0a51da9",
    "number": 782,
    "body": "This PR implements support for using TUN/TAP sockets, so that Scapy can be the peer of a TUN or TAP interface. It also improves `bridge_and_sniff()`, so that it can be used to test the TUN/TAP sockets support.\r\n\r\nSupport is Linux only for now, but could probably be extended to other platforms. ",
    "head_branch": "enh-tuntap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #782 from p-l-/enh-tuntap\n\nTUN/TAP Interfaces, improve & test bridge_and_sniff()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b0a88c0a76e0a51daa",
    "number": 779,
    "body": "This PR fixes 2 bugs:\r\n- `self.name = ...` cannot be defined on python 3 as the object only inerates from dict (on python 2, objects inherated automatically from \"object\"). Fixed using `__getattr__ `and `__setattr__ `with `__slots__`\r\n- fix `self.iter...` calls replaced by `six.iter...` calls. We need to pass `self.__dict__` otherwise six creates a loop calling config.iteritems.",
    "head_branch": "fix-config-iter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #779 from gpotter2/fix-config-iter\n\n[Python 2 to 3] Fix iter functions in config"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b1a88c0a76e0a51dab",
    "number": 777,
    "body": "As discussed in PR #764 ",
    "head_branch": "tls_logging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #777 from mtury/tls_logging\n\nReplace TLS prints with logging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b2a88c0a76e0a51dac",
    "number": 776,
    "body": "",
    "head_branch": "bytes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b3a88c0a76e0a51dad",
    "number": 775,
    "body": "Python 3 does not have a dict.iteritems, both have six.iteritems.",
    "head_branch": "iteritems",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b3a88c0a76e0a51dae",
    "number": 774,
    "body": "Just linting",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #774 from irl/master\n\nFixes inconsistent use of tabs/spaces"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b4a88c0a76e0a51daf",
    "number": 773,
    "body": "This PR:\r\n- Fixes small forgotten bugs in the automaton system\r\n- Add `__next__` functions as `next` alias for python 3",
    "head_branch": "py3-set3-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Python 3] Automaton fixes & __next__ python 3 alias (#773)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b5a88c0a76e0a51db0",
    "number": 772,
    "body": "Tiny PR to fix the tls exception format",
    "head_branch": "py3-set3-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #772 from gpotter2/py3-set3-3\n\n[Python 2 to 3] Fix Exception format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b6a88c0a76e0a51db1",
    "number": 771,
    "body": "Very small PR:\r\n- Add floor division marks",
    "head_branch": "py3-set3-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #771 from gpotter2/py3-set3-2\n\n[Python 2 to 3] Add floor division marks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b7a88c0a76e0a51db2",
    "number": 770,
    "body": "This avoids duplicated code and brings to Windows enhancements that exist for Unix (`sniff()` on multiple interfaces, parallel `sndrcv()`).\r\n\r\nIt also brings a huge code clean-up on both functions and may have a (limited but positive) impact on performances (some tests have been moved outside of sniff loops). The code is (IMO) much more readable and maintainable.\r\n\r\nIt changes the behavior of `sniff()`: it is now possible to provide lists for `offline` and `opened_socket` parameters (that was only possible for `iface`). It is also possible, for those three parameters, to provide dict objects mapping an element (interface or file name, or opened socket) to a label.\r\n\r\nAlso, fixes #780.",
    "head_branch": "windows-convergence",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #770 from p-l-/windows-convergence\n\nMerge sndrcv() and sniff() implementations for Unix & Windows systems"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b8a88c0a76e0a51db3",
    "number": 769,
    "body": "As requested, first part of https://github.com/secdev/scapy/pull/674 splitted\r\n\r\nThis one:\r\n- add most of the b\"\" required marks\r\n- add some io.open imports",
    "head_branch": "py3-set3-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #769 from gpotter2/py3-set3-1\n\n[Python 2 to 3] Add required b's"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b8a88c0a76e0a51db4",
    "number": 768,
    "body": "The temporary variables `iff`, `gw` & `addr` were not deleted. I've used this opportunity to change the way we set `conf.iface6` to a try-catch approach which is [recommended](https://docs.python.org/2/glossary.html?highlight=eafp#term-eafp), particularly here: it's faster since the exception usually won't happen, and the code is easier to read.",
    "head_branch": "fix-leftover-variables",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #768 from p-l-/fix-leftover-variables\n\nSome variables were not deleted and remained in the namespace"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2b9a88c0a76e0a51db5",
    "number": 767,
    "body": "This PR adds notebooks which showcase the TLS capabilities of Scapy. They were first presented at the JCSA17 conference.\r\n\r\n(total size of the folder is 270 KB)",
    "head_branch": "tls_notebooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #767 from mtury/tls_notebooks\n\nAdd JCSA17 TLS notebooks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2baa88c0a76e0a51db6",
    "number": 764,
    "body": "This PR makes it possible to load the TLS layer when it is not loaded by default, using `load_layer()`.\r\n\r\nIt also removes the TLS layer from the layers loaded by default in Scapy. This is done because the TLS layer parses and verifies certificates in sniffed TLS sessions, which uses a lot of CPU and is probably not what most Scapy users want or expect.\r\n\r\nThis is a partial fix for #763.\r\n",
    "head_branch": "fix-tls-load",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #764 from p-l-/fix-tls-load\n\nFix TLS layer loading"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2bba88c0a76e0a51db7",
    "number": 760,
    "body": "This should fix issue #746.\r\n\r\n@rafajot thanks for pointing this out. Would you care to verify that a scapy build from this branch works as you expect?",
    "head_branch": "symbols_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix TLS constants names (#760)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2bca88c0a76e0a51db8",
    "number": 759,
    "body": "Should fix https://github.com/secdev/scapy/issues/737",
    "head_branch": "fix-lbe-radiotap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #759 from gpotter2/fix-lbe-radiotap\n\nFix little-big endian dissection issue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2bda88c0a76e0a51db9",
    "number": 758,
    "body": "Fixes #722.",
    "head_branch": "fix-sniff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #758 from p-l-/fix-sniff\n\nLinux/sniff: warn instead of crash when we fail to create a valid filter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2bda88c0a76e0a51dba",
    "number": 757,
    "body": "Fixes #750.",
    "head_branch": "fix-send-verbose",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #757 from p-l-/fix-send-verbose\n\nsrloop(): remove unwanted output when verbose=0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2bea88c0a76e0a51dbb",
    "number": 755,
    "body": "This tiny PR adds a summary for LCP packets and supports PPP link types (to read & write PPP PCAP files).",
    "head_branch": "impr-ppp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #755 from p-l-/impr-ppp\n\nMinor improvements to PPP support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2bfa88c0a76e0a51dbc",
    "number": 753,
    "body": "Changed IE_EndUserAddress() class and also added the possibility to send and receive DeletePDPContext packets.",
    "head_branch": "IPv6_Support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c0a88c0a76e0a51dbd",
    "number": 751,
    "body": "In the PacketListField constructor, inside the OSPF_LSUpd class, an empty list was passed as argument. This resulted into strange behaviour, leading to the LSA list being displayed and managed as a raw set of bytes.\r\n\r\nSubstituting the empty list with None let the PacketListField constructor create its own empty list, resulting with the dissection process working as expected.",
    "head_branch": "ospf-support-incomplete-payload",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c1a88c0a76e0a51dbe",
    "number": 744,
    "body": "This PR adds missing imports in `eap.py` (the _struct_ module, and the `conf ` global variable).\r\n\r\nThis should fix the dissection of MKPDUs.",
    "head_branch": "eap-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing imports."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c2a88c0a76e0a51dbf",
    "number": 743,
    "body": "Adds latest version on PyPI and supported Python versions badges as listed in the latest published `setup.py`. The badges also have links to the PyPI page.\r\n\r\nNote that the Python version badge will properly show \"2.7\" once a new release is pushed from master that contains the Python version information in `setup.py`.",
    "head_branch": "pypi-badges",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #743 from johnthagen/pypi-badges\n\nAdd PyPI badges"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c2a88c0a76e0a51dc0",
    "number": 742,
    "body": "Some [travis tests fails](https://travis-ci.org/secdev/scapy/jobs/257874313) with the following error:\r\n```\r\n>>> import mock\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 2, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/mock/__init__.py\", line 2, in <module>\r\n    import mock.mock as _mock\r\n  File \"/usr/local/lib/python2.7/dist-packages/mock/mock.py\", line 68, in <module>\r\n    from six import wraps\r\nImportError: cannot import name wraps\r\n```\r\n\r\nIt seems that six should also be installed using pip. The trick is to ask pip to always install the latest version using the `-U` flag.",
    "head_branch": "six_import_error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Six import error in mock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c3a88c0a76e0a51dc1",
    "number": 738,
    "body": "**Python 3 support major PR. It's big, but most of it are regression.uts tests fixes.**\r\n\r\n- Requires https://github.com/secdev/scapy/pull/674\r\n- Scapy boots and most of its major functions work \r\n\r\nThis PR:\r\n- fixes a lot of ord/orb, bytes chr/chb, compat bugs\r\n- fixes a few .next() / next()\r\n- fixes most layers\r\n- the fixes are mostly in `regression.uts`\r\n\r\nCurrent status (updated):\r\n- regression.uts: 1069/1091 tests passing",
    "head_branch": "py3-set2-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #738 from gpotter2/py3-set2-7\n\n[Python 2 to 3] Main core fixes + regression.uts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c4a88c0a76e0a51dc2",
    "number": 736,
    "body": "This PR:\r\n\r\n- adds VRRPv3 layer with fixed checksum computation #720\r\n- Creates in4_chksum function: used the same way than in6_chksum for Upper-Layer checksum computations\r\n- Removes duplicate chksum code (in TCP and UDP)",
    "head_branch": "fix-chksum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add VRRP chksum test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c5a88c0a76e0a51dc3",
    "number": 733,
    "body": "",
    "head_branch": "flagrepr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #733 from p-l-/flagrepr\n\nFlags: use str(obj) rather than obj.flagrepr() (more \"Pythonic\")"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c6a88c0a76e0a51dc4",
    "number": 732,
    "body": "THIS HAS MOVED TO https://github.com/secdev/scapy/pull/736",
    "head_branch": "fix-chksum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c7a88c0a76e0a51dc5",
    "number": 731,
    "body": "- Fixes  https://github.com/secdev/scapy/issues/723\r\n- Fixes https://github.com/secdev/scapy/issues/721",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing coma"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c8a88c0a76e0a51dc6",
    "number": 730,
    "body": "This PR improves the existing `eap.py` module:\r\n\r\n- The `EAP_TTLS` class has been added in `eap.py`. Regression tests have also been added to the `regression.uts` file.\r\n- A `mysummary()` method has been added to the `EAP` class.\r\n\r\nThe latter allows to have an overview of the EAP messages exchanged between a peer and supplicant. One can easily obtain this kind of preview using this method:\r\n\r\n```\r\nEAPOL EAPOL-Start ->\r\n        <- EAP Request Identity / Padding\r\nEAP Response Identity 'anonymous' ->\r\n        <- EAP Request Identity / Padding\r\nEAP Response Identity 'anonymous' ->\r\n        <- EAP Request MD5-Challenge / Padding\r\nEAP Response Legacy Nak ->\r\n        <- EAP Request EAP-TTLS / Padding\r\nEAP Response EAP-TTLS ->\r\n```",
    "head_branch": "eap-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "EAP_TTLS class added in eap.py. Regression tests have also been added to the regression.uts file.\n\nAdd a mysummary() method to the EAP class."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c8a88c0a76e0a51dc7",
    "number": 728,
    "body": "In case a response contains a payload but does not contain any options,\r\nthe payload is dissected as if it were an option. Resolved by checking\r\nfor a payload marker before dissecting to options.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2c9a88c0a76e0a51dc8",
    "number": 725,
    "body": "These commits add MACsec ([IEEE 802.1AE](https://standards.ieee.org/getieee802/download/802.1AE-2006.pdf)) support, along with some tests.\r\n\r\nThis allows creating MACsec secure associations (SA), and encapsulate/encrypt/decrypt/decapsulate packets using an SA.",
    "head_branch": "macsec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2caa88c0a76e0a51dc9",
    "number": 717,
    "body": "Hello,\r\n\r\nthis fixes in the documentation the command line used to run a specific utscapy file, making use of the \"run_tests\" script.\r\n\r\nRegards,\r\nSébastien",
    "head_branch": "doc_run_uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix in doc cmd to run a specific uts file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2cba88c0a76e0a51dca",
    "number": 716,
    "body": "Hello,\r\n\r\nthis patch fixes a mistake in the 0x2B function code and incorporates the functionality developed by @thmsaurel to interpret the function code category.\r\n\r\n@thmsaurel, could you validate all the modifications you proposed are covered ?\r\nIf this PR is accepted, it replaces the #123 PR.\r\n\r\nRegards\r\nSébastien",
    "head_branch": "modbus_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "modbus: specify PDU function code types + tests (thms.aurel@gmail.com)\n\nmodbus: fix len handling for function code 0x2b + tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2cca88c0a76e0a51dcb",
    "number": 714,
    "body": "The code related to EAP is now in a separate module.\r\n\r\nThis should ease further improvements. For example, there is currently a circular dependency that forbids to import the `TLS` class from the `record` module in `l2.py` (this is required in order to be able to dissect the TLS data in EAP packets).",
    "head_branch": "eap-separate-layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "\"EAP-related\" code has been put in a separate module."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2cda88c0a76e0a51dcc",
    "number": 712,
    "body": "Very small PR:\r\n- Fix bug in `inet.py`: when non-IP packets are passed, defrag crashed\r\n- Added `_defrag_pos` on `Ether` and `Loopback` even if not used, so when a `Raw` layer is applied directly on them, they can be defragmented. (eg: DNS)\r\n- tests",
    "head_branch": "fix-dns-defrag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix defragment/defrag on real DNS packets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2cea88c0a76e0a51dcd",
    "number": 708,
    "body": "### secdev/scapy now has a Chat Room on Gitter\n\n@guedou has just created a chat room. You can visit it here: [https://gitter.im/secdev/scapy](https://gitter.im/secdev/scapy?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).\n\nThis pull-request adds this badge to your README.md:\n\n\n[![Gitter](https://badges.gitter.im/secdev/scapy.svg)](https://gitter.im/secdev/scapy?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)\n\nIf my aim is a little off, please [let me know](https://github.com/gitterHQ/readme-badger/issues).\n\nHappy chatting.\n\n\nPS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.\n",
    "head_branch": "gitter-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2cea88c0a76e0a51dce",
    "number": 704,
    "body": "This PR adds support for the TSIG DNS Ressource Record, and the specific timestamp field.",
    "head_branch": "dns_tsig",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #704 from guedou/dns_tsig\n\nDNS TSIG Ressource Record"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2cfa88c0a76e0a51dcf",
    "number": 703,
    "body": "This PR is an attempt of removing pyreadline/gnureadline, which have not been updated since (at least) 2015, and are mostly broken under python 3...\r\n- Removes pyreadline/gnureadline. Now use `IPython` to handle the shell.\r\n![image](https://user-images.githubusercontent.com/10530980/30378245-dd4cefb8-9892-11e7-9ca4-37b83f68bb22.png)\r\n\r\n",
    "head_branch": "new-autocompletion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Console/Python 3] Remove pyreadline/gnureadline (#703)\n\n* Fix warning texts not being printed\r\n\r\n* Add legacy style + histfile\r\n\r\n* Fix Doc, readme, appveyor\r\n\r\n* Add packet fields auto-completion (thanks to @p-l-)\r\n\r\n* Pickle, session, interact tests\r\n\r\n* Remove trailing line"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d0a88c0a76e0a51dd0",
    "number": 702,
    "body": "- This PR fixes a bug that sometimes happen during the PPI_geotag tests (at midnight only)\r\n- simplifies the util to do so...",
    "head_branch": "fix-midnight-ppi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplify PPI_Geotag Time functions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d1a88c0a76e0a51dd1",
    "number": 701,
    "body": "- based on IEEE 802.1AB-2016\r\n- adds support for basic LLDP TLVs\r\n- offers strict mode (enforces order of TLVs, multiplicity of TLVs, string lengths)\r\n",
    "head_branch": "ieee-802-1-ab-lldp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "LLDP - support for basic TLVs (#701)\n\nLLDP - support for basic TLVs according to: IEEE 802.1AB-2016"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d2a88c0a76e0a51dd2",
    "number": 700,
    "body": "This PR fixes #699.\r\n\r\nBefore\r\n```\r\n>>> DHCP6OptRelayMsg(b'\\x00\\t\\x00\\x04\\x00\\x00\\x00\\x00')\r\n<DHCP6OptRelayMsg  optcode=RELAY_MSG optlen=4 |<DHCP6OptUnknown  optcode=0 optlen=0 |>>\r\n```\r\n\r\nAfter\r\n```\r\n>>> DHCP6OptRelayMsg(b'\\x00\\t\\x00\\x04\\x00\\x00\\x00\\x00')\r\n<DHCP6OptRelayMsg  optcode=RELAY_MSG optlen=4 |<DHCP6  msgtype=0 trid=0x0 |>>\r\n```\r\n",
    "head_branch": "Issue_#699",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #700 from guedou/Issue_#699\n\nFix DHCPv6 Relay message behavior"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d3a88c0a76e0a51dd3",
    "number": 698,
    "body": "RFC 1889 section 5.3.1 defines an optional header extension mechanism for proprietary use. This is required by some implementations.\r\nAdditionally, the sync and sourcesync fields are not named as in the RFC and are somewhat confusing, I added comments.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d4a88c0a76e0a51dd4",
    "number": 696,
    "body": "This PR only adds the new print() function. Quite easy to review i guess...\r\n\r\nWith both this one and https://github.com/secdev/scapy/pull/674, it's likely that scapy will be able to (nealy) start in python 3.",
    "head_branch": "py3-set2-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove debug prints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d4a88c0a76e0a51dd5",
    "number": 695,
    "body": "This PR:\r\n- `__cmp__` replaced\r\n- fixed `UserDict` and `Queue` imports\r\n- add `__bool__` alias of `__nonzero__`\r\n- use BytesIO and fix imports of `StringIO`\r\n- bunch of random fixes\r\n",
    "head_branch": "py3-set2-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Contributing notes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d5a88c0a76e0a51dd6",
    "number": 694,
    "body": "This PR attempts to fix #529.\r\n\r\nWhen a packet uses `ConditionalField`, the `randval()` method can be called when the field is not currently used. Concerning ICMP, there are two fields defined as \"unused\". During the first iteration, the first `unused` field stores a short and the second an integer. Scapy will try to fit an integer into a short and crash.\r\n\r\nThe following script crashes Scapy in ~2 seconds\r\n```python\r\nfrom scapy.all import *\r\n\r\nimport random\r\nrandom.seed(0x2807)\r\nwhile 1:\r\n    p = IP()/ICMP(type=11)\r\n    f = fuzz(p)\r\n    f.show()\r\n    str(f)\r\n```",
    "head_branch": "Issue_#529",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #694 from guedou/Issue_#529\n\nDon't call randval() on unused ConditionalField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d6a88c0a76e0a51dd7",
    "number": 693,
    "body": "No idea why the `linux.uts` _flush_fd test is crashing randomly...\r\n\r\n- Comment the failing test out for now.\r\n- Replace `MANUFDB` by `conf.MANUFDB` in the tests\r\n\r\n@guedou @p-l-  This can be instant merged.",
    "head_branch": "fix-tests-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #693 from gpotter2/fix-tests-1\n\n[tests] Remove stuck test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d7a88c0a76e0a51dd8",
    "number": 692,
    "body": "This is proposal to prevent Scapy from crashing when calling commands from `conf.prog.*` as described in #333.",
    "head_branch": "Popen_exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #692 from guedou/Popen_exception\n\n[RFP] Catch OSError exceptions from subprocess.Popen()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d8a88c0a76e0a51dd9",
    "number": 691,
    "body": "This PR provides the example discussed in PR #128 ",
    "head_branch": "Issue_#128",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #691 from guedou/Issue_#128\n\nchecksum() example added in doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2d9a88c0a76e0a51dda",
    "number": 690,
    "body": "- Improve Dot11 coverage + bug fixes",
    "head_branch": "coverage-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve Dot11 coverage + bug fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2daa88c0a76e0a51ddb",
    "number": 689,
    "body": "This server has the worse stability i have ever seen.\r\n\r\nhttps://travis-ci.org/secdev/scapy/jobs/245725388\r\nhttps://travis-ci.org/secdev/scapy/jobs/245725387\r\nhttps://travis-ci.org/secdev/scapy/jobs/245725386\r\nhttps://travis-ci.org/secdev/scapy/jobs/245709919",
    "head_branch": "remove-cymru-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Disable cymru AS_resolver test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2dba88c0a76e0a51ddc",
    "number": 688,
    "body": "",
    "head_branch": "run_args",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "run_scapy: allow arguments\n\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2dca88c0a76e0a51ddd",
    "number": 685,
    "body": "This PR:\r\n- fixes HCI_ACL_Hdr dissection/building: fix https://github.com/secdev/scapy/issues/368\r\n- fixes ATT_Read_By_Type_Request_128bit detection bug\r\n- add bluetooth link type (now readeable from pcaps/exportable to wireshark)\r\n- fixes EIR_Hdr length computation\r\n- adds BluetoothRFCommSocket socket\r\n- add bluetooth tests\r\n- mark some functions as unavailable on windows",
    "head_branch": "fix-bluetooth",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #685 from gpotter2/fix-bluetooth\n\n[Bluetooth] General fixes & new features"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2dca88c0a76e0a51dde",
    "number": 684,
    "body": "Proposition of adding new methods into the main Packet class:\r\n* lastlayer_index\r\n* remove_lastlayer\r\n* decode_lastlayer_as\r\nThis proposition is based on the fact that the last layer of a packet is not easy to manipulate (in an automated way), when not dealing with a simple payload.\r\n\r\nAn other method I propose to add is:\r\n* set_byte\r\n\r\nThis method purpose is to modify just one or several byte of a packet string without modifying its properties and decoding status as a Packet instance.\r\n\r\nThe use of these methods is mainly directed to scripts and bigger tools that may require these kind of manipulations.\r\nI'm looking forward your opinion on these and the opportunity to merge them into the framework.\r\nAs for the implementation part, there may well be some adjustments to make.",
    "head_branch": "layersManips",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2dda88c0a76e0a51ddf",
    "number": 683,
    "body": "I'm improving the VBS coverage, as VBS is faster than powershell.\r\nMaybe we'll set VBS by default instead of powershell one day.",
    "head_branch": "speedup-windows",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #683 from gpotter2/speedup-windows\n\n[VBS coverage] Add VBS support for pcap_service_status"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2dea88c0a76e0a51de0",
    "number": 680,
    "body": "This contribution intends to add tacacs+ support.\r\nThis version of tacacs+ is able to parse pcap but also to interact with a tacacs+ server with the correct key configured.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #680 from francois-contat/master\n\nTacacs+ support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2dfa88c0a76e0a51de1",
    "number": 678,
    "body": "That was my mistake: this functionality is way to slow.\r\nFixes: https://github.com/secdev/scapy/pull/379#issuecomment-306561179",
    "head_branch": "speedup-deeplookup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #678 from gpotter2/speedup-deeplookup\n\n[SpeedUP] Remove deeplookup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e0a88c0a76e0a51de2",
    "number": 677,
    "body": "This PR replaces `filter()` with list comprehensions when it is necessary. It should be much faster to review that the PR that replaced `map()`",
    "head_branch": "filter_2_list_comprehension",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #677 from guedou/filter_2_list_comprehension\n\n[convergence] filter() calls rewritten as list comprehensions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e1a88c0a76e0a51de3",
    "number": 676,
    "body": "Should fix PyPy freezing on the pipetools tests",
    "head_branch": "fix-pypy-tests1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #676 from gpotter2/fix-pypy-tests1\n\nFix pipetools tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e2a88c0a76e0a51de4",
    "number": 675,
    "body": "Hello !\r\nI've talked from this earlier: here's an improvment on the way of simulating select.select.\r\n\r\nThat should also fix the PyPy bug on `pipetools.uts`\r\n\r\n- What happened before:\r\nWhen using `select_objects`, an active thread would iterate through the different provided objects and call continously `check_recv`. This takes lots of memory usage.\r\n\r\n- Now:\r\nWhen using `select_objects`, the objects are all iterated once, to check if they are ready to read. If not, a thread for each object is started. Each thread will instantly block itself using Lock(), which do not consume memory. Those threads are released when the object become available, because their `call_release` function gets called, then call a callback. On top of that, a master thread waits (passively) for any callback to be fired, then returns the results.",
    "head_branch": "select-semaphores",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #675 from gpotter2/select-semaphores\n\n[Speed up] Use passive form to select.select + Fix pipetools.uts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e3a88c0a76e0a51de5",
    "number": 674,
    "body": "Here's the most boring part of it. That should bring neally all bytes support for the `core`. Contribution files will be changed later.\r\n\r\nThis PR:\r\n\r\n- introduces some util functions in scapy.compat.py that works on both python 2 and 3:\r\n-- raw(x) : returns the byte form of a string/packet/int/list of ints\r\n-- plain_str(x) : does exactly the opposite: bytes/int ==> str\r\n-- hex_bytes / bytes_hex ==> converts hex => bytes or bytes => hex\r\n- Remove stupid BGP bug in a test: None ==> \"None\" ==> \"\\x04\". Fixed by using `raw`",
    "head_branch": "fix-str-bytes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #674 from gpotter2/fix-str-bytes\n\n[Python 2 to 3] Bytes fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e3a88c0a76e0a51de6",
    "number": 671,
    "body": "Hello!\r\n\r\nI made a few fixes and enhancements in the UTscapy file:\r\n * Fix trailing whitespace, unused variable and unused imports.\r\n * Protect file opening in 'with' statements\r\n * Use local version of UTscapy.js and UTscapy.css\r\n * Allow continuing tests after a failed campaign. Add an option to keep old behavior\r\n\r\nAnd the main feature is to be able to interrupt a serie of tests using Control-C.",
    "head_branch": "utscapy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e4a88c0a76e0a51de7",
    "number": 670,
    "body": "This PR adds some missing unit tests.",
    "head_branch": "codecov_15",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Some unit tests (#670)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e5a88c0a76e0a51de8",
    "number": 669,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e6a88c0a76e0a51de9",
    "number": 668,
    "body": "speeds up send and sendp by preventing socket re-initialization for each send",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #668 from stephengroat/patch-1\n\nAllow sockets to be provided to send and sendp"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e7a88c0a76e0a51dea",
    "number": 667,
    "body": "@guedou @p-l- \r\nSo apparently the npcap team suddenly decided to discontinue the chocolatey installer...\r\nHere's a custom one.",
    "head_branch": "fix-appveyor-npcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #667 from gpotter2/fix-appveyor-npcap\n\n[Appveyor] Add Npcap installer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e8a88c0a76e0a51deb",
    "number": 666,
    "body": "Here's the most boring part of it.\r\n**Requires https://github.com/secdev/scapy/pull/630**\r\nThis PR:\r\n- introduces some util functions in `scapy.compat.py` that works on both python 2 and 3:\r\n-- `raw(x)` : returns the byte form of a string/packet/int/list of ints\r\n-- `plain_str(x)` : does exactly the opposite: bytes ==> str\r\n-- `ord(x)` : works like `orb(x)` on python 2, and returns x on python 3\r\n-- `hex_bytes` / `bytes_hex` ==> converts hex => bytes or bytes => hex\r\n- Adds tons (like a lot) of required `b\"\"`.",
    "head_branch": "py3-step2-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e8a88c0a76e0a51dec",
    "number": 665,
    "body": "Hi there!\r\n\r\nI have encoutered some issues with the prompt changer mechanism:\r\n * doesn't work with IPython\r\n * requires a color theme change to effectively change the prompt\r\n\r\nThis PR fixes those issues and add 2 other related things:\r\n * make the theme module available in the startup script\r\n * add a prompt prefix configuration field (more info in the commitlog)\r\n\r\nSorry about trailing spaces in the first two patches, my editor fixes them automatically.\r\n\r\nThanks!",
    "head_branch": "prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2e9a88c0a76e0a51ded",
    "number": 663,
    "body": "This PR breaks code history. Of course... but it will avoid any future `^M` in the existing files, or in new created ones :)",
    "head_branch": "patch-file-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #663 from gpotter2/patch-file-format\n\n[FF] Fix file format in the scapy project"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2eaa88c0a76e0a51dee",
    "number": 662,
    "body": "Fixes https://github.com/secdev/scapy/issues/660",
    "head_branch": "patch-gtp-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "GTPv2: Move the teid, seq and spare fields from the messages classes to the\nGTPHeader class."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2eba88c0a76e0a51def",
    "number": 661,
    "body": "Fixed version of https://github.com/secdev/scapy/pull/291\r\nThis version of the patch:\r\n- was rebased & squashed\r\n- has some small basic tests.\r\n- was re-indented (tabs/spaces...)\r\n\r\nNote: i have not reviewed every thing, some things might be ugly",
    "head_branch": "fix-prs-291",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Contrib] Add Authentication payload type to IKEv2 (#661)\n\n* ikev2 contrib fixup\r\n\r\n* allow unknown transform_type and transform_id\r\n\r\n* Simplify Authentication payload type\r\n\r\n* CERT payload: add x509Cert and x509CRL attributes\r\n\r\n* First re-indent\r\n\r\n* Fixed ID not being a number\r\n\r\n* Add some small IKEv2 tests\r\n\r\n* Replaced tabs by spaces\r\n\r\n* Separate classes by type\r\n\r\n* New tests- small fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2eca88c0a76e0a51df0",
    "number": 659,
    "body": "Signed-off-by: Neale Ranns <nranns@cisco.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MPLS label layering/stacking clears the EOS bit\n\nSigned-off-by: Neale Ranns <nranns@cisco.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2eda88c0a76e0a51df1",
    "number": 656,
    "body": "Changing to pton_ntop to convert addresses to/from strings. \r\nWith this, the IPv6 prefix class reuses 100% of the code of the IPv4 prefix class.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2eda88c0a76e0a51df2",
    "number": 653,
    "body": "(or its equivalent on other systems that Linux) => (or its equivalent on other systems than Linux)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #653 from pkova/patch-1\n\nFix typo in troubleshooting.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2eea88c0a76e0a51df3",
    "number": 649,
    "body": "This patch simplifies the prefix treatment code.\r\nIPv4 and IPv6 can be unified with pton_ntop methods.\r\nIn addition, allow the 'short version' of the IPv4 default '0/0'.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2efa88c0a76e0a51df4",
    "number": 648,
    "body": "This PR:\r\n- adds all missing licences at the top of `contrib/` files.\r\n- Updates or adds `scapy.contrib.*` so all un-tested modules (the one that do not have a `.uts` file, are marked as so)",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #648 from gpotter2/patch-7\n\n[General] Update licenses & Contrib flags"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f0a88c0a76e0a51df5",
    "number": 647,
    "body": "Since MDType default value is 1, set Len defautl value to 6\r\nAlso add a post_build function which sets the len value to len(pkt)/4\r\nfix scapy tests accordingly\r\n\r\nI could not find my way with a BitField* class, and so wrote a post_build fun.\r\nDo tell me if I missed something.\r\n",
    "head_branch": "nsh-len-default-value-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #647 from GabrielGanne/nsh-len-default-value-fix\n\nfix nsh len field init"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f1a88c0a76e0a51df6",
    "number": 646,
    "body": "Pretty much nothing, but fixes this: https://travis-ci.org/secdev/scapy/jobs/227921680#L615\r\n",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f2a88c0a76e0a51df7",
    "number": 644,
    "body": "This PR:\r\n- fix https://github.com/secdev/scapy/issues/643 + bugs created when using Net6\r\n- **fix the pcapdnet `in6_getifaddr` function: replace the windows one by the Pcap API**\r\n- rename the `ipaddress` regex (the name was really confusing)\r\n- filters globals ipv6 addresses out of the possible source candidates on Windows. ==> windows now correctly sends/recieves IPv6 packets\r\n- fixes LOOPBACK_INTERFACE not beeing properly updated, causing IPv6 routes beeing outdated\r\n- fixes `in6_getifaddr` function of `pcapdnet.py` ==> now use it when loading IPv6",
    "head_branch": "fix-net6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #644 from gpotter2/fix-net6\n\n[IPv6] Windows: fix IPv6 routing + Net6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f2a88c0a76e0a51df8",
    "number": 642,
    "body": "This PR attempts to enhance Scapy performance by caching the initialization of packets fields. Currently, they are initialized at each packet instantiation.\r\n\r\nThe benchmarks look quite nice and indicate that we can gain between 15% and 35% execution time depending on the use case.\r\n\r\n| Type | Before - 2.7|  Before - 3.6 | After - 2.7 | After - 3.6 |\r\n| --- | --- | --- | --- | --- |\r\n| Build | 15.77s | 12.02s | 11.28s (+28%) | 9.87s (+17% / + 37%) |\r\n| Dissect | 6.84s | 4.62s | 4.50s (+34%) | 3.82s (+17% / +44%) |\r\n| Build & dissect | 23.58s | 17.52s | 16.04s (+31%) | 14.69s (+16% / +38%) |\r\n\r\nHere is the script used to bench this PR:\r\n```python\r\nimport time\r\n\r\nfrom scapy.all import *\r\nfrom scapy.modules.six.moves import range\r\n\r\nN = 20000\r\nraw_packet = b'E\\x00\\x00(\\x00\\x01\\x00\\x00@\\x11|\\xc2\\x7f\\x00\\x00\\x01\\x7f\\x00\\x00\\x01\\x005\\x005\\x00\\x14\\x00Z\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\r\n\r\nstart = time.time()\r\nfor i in range(N):\r\n    p = IP() / UDP() / DNS()\r\n    assert raw(p) == raw_packet\r\nprint(\"Build - %.2fs\" % (time.time() - start))\r\n\r\nstart = time.time()\r\nfor i in range(N):\r\n    p = IP(raw_packet)\r\n    assert DNS in p\r\nprint(\"Dissect - %.2fs\" % (time.time() - start))\r\n\r\nstart = time.time()\r\nfor i in range(N):\r\n    p = IP() / UDP() / DNS()\r\n    s = raw(p)\r\n    assert s == raw_packet\r\n    p = IP(s)\r\n    assert DNS in p\r\nprint(\"Build & dissect - %.2fs\" % (time.time() - start))\r\n```\r\n\r\nfixes https://github.com/secdev/scapy/issues/619",
    "head_branch": "cache_init_fields",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #642 from guedou/cache_init_fields\n\nCache fields initialization"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f3a88c0a76e0a51df9",
    "number": 640,
    "body": "This PR rewrites most of the `map()` calls into list comprehensions. Some calls are left when the resulting iterators is consumed right away.\r\n\r\nI spent quite some time to write it, and I believe that it will be also difficult to review. The unit tests run fine locally but I will expect some to fail with Travis and AppVeyor.\r\n\r\nOn a side node, I wonder if I should also update CONTRIBUTING.md to make it clear that we won't accept patch with `map()` calls.",
    "head_branch": "map_2_list_comprehension",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #640 from guedou/map_2_list_comprehension\n\n[convergence] map() calls rewritten as list comprehensions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f4a88c0a76e0a51dfa",
    "number": 639,
    "body": "This PR:\r\n- re-use some of my work on `automaton.py` to replace `select.select` in `pipetools.py`\r\n- add an implementation for Windows (there where some `xterm` calls ==> adapted the functions to work with powershell)\r\n\r\n@phil777 You might want to have a look at this, as you did https://github.com/secdev/scapy/pull/620",
    "head_branch": "windows-pipetools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #639 from gpotter2/windows-pipetools\n\n[Pipetools/coverage] Make pipes work on windows + add tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f5a88c0a76e0a51dfb",
    "number": 638,
    "body": "Adding support for MQTT (Message Queue Telemetry Transport) protocol by uploading a new protocol layer to scapy/contrib folder.",
    "head_branch": "mqtt_layer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added support for MQTT protocol (#638)\n\nSupport (in contrib) for MQTT (Message Queue Telemetry Transport) protocol, with tests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f6a88c0a76e0a51dfc",
    "number": 637,
    "body": "This PR:\r\n- remove useless parameter from construct_source_candidate_set, which is never used and takes some space\r\n- Adds more coverage to nmap module\r\n- Small LLMNR fix\r\n- **Random tests, fixing the randomness of coverage by triggering the errors**",
    "head_branch": "coverage-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[coverage] Several tests + coverage stability (#637)\n\n* Simplify construct_source_candidate_set\r\n\r\n* New tests: _CipherSuitesField and construct_source_candidate_set\r\n\r\n* Fix run_tests.bat\r\n\r\n* New nmap.uts tests\r\n\r\n* Add LLMNR tests\r\n\r\n* Add TLS failing tests\r\n\r\n* STP, linux + bpf random tests\r\n\r\n* Add DHCP6 tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f7a88c0a76e0a51dfd",
    "number": 636,
    "body": "After #633, I though it might be a good idea to fix and cleanup the Nmap module.",
    "head_branch": "fix-nmap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #636 from p-l-/fix-nmap\n\nCleanup Nmap module, add tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f8a88c0a76e0a51dfe",
    "number": 635,
    "body": "Partially fixes https://github.com/secdev/scapy/issues/633\r\n\r\nNeed contributions ? I do not really know how the function is supposed to work :/",
    "head_branch": "fix-nmap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f9a88c0a76e0a51dff",
    "number": 634,
    "body": "Added information about sr() and fuzz() functions, nothing important but useful as well.\r\n\r\nSigned-off-by: Fernando Fernández <ffernandezmancera@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #634 from ffmancera/master\n\nModify information about sr() and fuzz()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2f9a88c0a76e0a51e00",
    "number": 632,
    "body": "This PR:\r\n- replaces the UTCTimeField occurences (one in `ppi_geotag`, one in `dhcp6`\r\nand one in `tls/handshake`) by a single one\r\n- fixes https://github.com/secdev/scapy/issues/626",
    "head_branch": "unify-utcfield",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #632 from gpotter2/unify-utcfield\n\n[TLS] Unify UTCTimeField (small)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2faa88c0a76e0a51e01",
    "number": 631,
    "body": "This PR fixes a bug:\r\n- new import system using `importlib`\r\n- importing everything (even `sys`...) would make the err stream get lost\r\n\r\n@guedou That's a small but quite import one :) Thanks !",
    "head_branch": "py3-set2-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #631 from gpotter2/py3-set2-4\n\n[Python 2 to 3] Fix overwritten imports (small)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2fba88c0a76e0a51e02",
    "number": 630,
    "body": "**Might take more time to review. There are some commits grabbed from https://github.com/secdev/scapy/pull/574**\r\n\r\n- basic `six` fixes, without the `filter` or tricky ones\r\n- tiny python 3 fixes or adapts\r\n\r\nThis keeps the current scapy's behavior: it does not add more lists that there were before.\r\nZopieux's fixes will be added in a next part (with filter). I'll do it once all others are good",
    "head_branch": "py3-set2-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Python 2 to 3] Main six fixes (#630)\n\n* Apply six fixes\r\n* Include six directly in scapy\r\n* Ignore six library in coverage\r\n* Moved winpcapy to modules\r\n* Iterator and list fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2fca88c0a76e0a51e03",
    "number": 629,
    "body": "Nothing more to say, could be merge nealy instantly.",
    "head_branch": "py3-setp2-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #629 from gpotter2/py3-setp2-2\n\n[Python 2 to 3] Remove longs and fix octals"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2fda88c0a76e0a51e04",
    "number": 628,
    "body": "Very basic stuff: those are the defaults changes of `lib2to3` that do not affect Python 2.\r\n- errors (`except ..., ...` replaced by `except ... as ...`)\r\n- `While 1` replaced by `While True` (python 3's default)\r\n- `type(stuff)` replaced by `isinstance`\r\n- `array.haskey(stuff)` replaced by `stuff in haskey`\r\n- `set(stuff)` replaced by `{list}`\r\n\r\nThose changes are purely formatting. I've disabled all tricky changes (lists, int/long....) to make sure everything stays pretty",
    "head_branch": "py3-step2-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #628 from gpotter2/py3-step2-1\n\n[Python 2 to 3] Exceptions, loops, isinstance and haskey"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2fea88c0a76e0a51e05",
    "number": 627,
    "body": "Hello,\r\n\r\nThis PR updates the ``radius`` module, notably by adding the ability to create specific RADIUS attributes, and to compute the ``authenticator`` field in RADIUS packets, as well as the ``Message-Authenticator`` attribute value.\r\n\r\nSince I have made a number of changes, I allowed myself to edit previous lines of code in order to make the module \"more\" PEP 8 compliant.",
    "head_branch": "radius-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "RADIUS module update. (#627)\n\n* The authenticator field is now a XStrFixedLenField (this improves its readability when displayed using show() or show2()).\r\n\r\n* RADIUS module update.\r\n\r\n* The description of the compute_message_authenticator() method (RadiusAttr_Message_Authenticator class) has been edited.\r\n\r\n* The \"Response Authenticator computation\" test requires the Cryptography library.\r\n\r\n* Fix attribute names in compute_message_authenticator().\r\n\r\n* Applied guedou's comments.\r\n\r\nSpecify field length in the Message-Authenticator attribute."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb2ffa88c0a76e0a51e06",
    "number": 625,
    "body": "This PR:\r\n- Adds a very basic `select.select` windows alternative for the L2-3Sockets.\r\n- Fix `sndrcvflood` on Windows.\r\n- Adds tests for `sndrcvflood`",
    "head_branch": "windows-select",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb300a88c0a76e0a51e07",
    "number": 624,
    "body": "Hello,\r\nthis pull request improves support for PPP authentication methods:\r\n- binds EAP layer to PPP\r\n- Adds support for PAP (RFC1334) + tests\r\n- Adds support for CHAP (RFC1994) + tests",
    "head_branch": "ppp_auth",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #624 from jsebechlebsky/ppp_auth\n\nImprove PPP Authentication support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb301a88c0a76e0a51e08",
    "number": 623,
    "body": "Same than https://github.com/secdev/scapy/pull/609\r\nThat adds new tests that do not depend on sniffing/other random tests.\r\n+ tiny add in inet.py",
    "head_branch": "random-coverage-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #623 from gpotter2/random-coverage-2\n\n[coverage] New tests to avoid randomness of coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb301a88c0a76e0a51e09",
    "number": 622,
    "body": "Previously, if the Npcap/Winpcap service was not started, scapy would not be working.\r\n\r\nThis PR:\r\n- adds a detector + a util to ask the user if he wants to start the service automatically.\r\n- makes scapy not crash when both powershell and cscript are unavailable\r\n- restore VBS GUID change (I disabled it a quite long time ago, but it was indeed useful)",
    "head_branch": "windows-util",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Re-align a dictionnary"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb302a88c0a76e0a51e0a",
    "number": 620,
    "body": "* Work on TCPListenPipe \r\n* TriggeredValve and TriggeredQueueingValve ",
    "head_branch": "pipes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "TCPListenPipe sends address tuple instead of its repr() ; trigger before emptying the queue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb303a88c0a76e0a51e0b",
    "number": 618,
    "body": "This PR test the `report_ports()` function as well as the `TCP_client()`  automaton. A new `linux.uts` was to tests Linux specific parts of Scapy. Here, it is used to call iptables in order to test the TCP automaton.\r\n\r\n",
    "head_branch": "codecov_14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #618 from guedou/codecov_14\n\n[coverage] More tests for inet.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb304a88c0a76e0a51e0c",
    "number": 617,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #617 from phil777/master\n\nUpdated/fixed install doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb305a88c0a76e0a51e0d",
    "number": 616,
    "body": "",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix TFTP options lookup in TFTP_WRQ_Server automaton"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb306a88c0a76e0a51e0e",
    "number": 615,
    "body": "* Work on TCPListenPipe \r\n* TriggeredValve and TriggeredQueueingValve ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #615 from phil777/master\n\nAdded some pipe objects"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb306a88c0a76e0a51e0f",
    "number": 613,
    "body": "Should fix #582.",
    "head_branch": "fix-bitfield-len",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #613 from p-l-/fix-bitfield-len\n\nFields/BitField: implement .i2len()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb307a88c0a76e0a51e10",
    "number": 611,
    "body": "",
    "head_branch": "nsh-over-gre-bindings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #611 from GabrielGanne/nsh-over-gre-bindings\n\nadd bindings for NSH over GRE"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb308a88c0a76e0a51e11",
    "number": 609,
    "body": "This should reduce the randomness of codecov tests (adds tests that does not depend on sniffing)",
    "head_branch": "random-coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #609 from gpotter2/random-coverage\n\n[coverage] Small tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb309a88c0a76e0a51e12",
    "number": 608,
    "body": "In fact, https://github.com/secdev/scapy/issues/403 should simply have done this...\r\nWe won't bother with the specific imports....",
    "head_branch": "fix-blueth-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unused import"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb30aa88c0a76e0a51e13",
    "number": 607,
    "body": "Original code: https://bitbucket.org/secdev/scapy/pull-requests/109/diameter-layer-support-v10\r\n\r\nThis is a fix for the very old https://github.com/secdev/scapy/pull/160, working with current scapy.\r\n\r\nI haven't reviewed the original entire code, but fixed failures, tabs (tabs are not supported under python 3+).",
    "head_branch": "fix-prs-160",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #607 from gpotter2/fix-prs-160\n\nSupport for Diameter protocol layer (base RFC6733 + extensions)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb30ba88c0a76e0a51e14",
    "number": 606,
    "body": "This PR adds mocked unit tests for Scapy Answering Machines. \r\n\r\nThe DHCPv6_am and WiFi_Am are not currently tested. The first one requires a lot of work, and I suspect that the second one is not working.",
    "head_branch": "codecov_12",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #606 from guedou/codecov_12\n\n[coverage] Answering machines unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb30ca88c0a76e0a51e15",
    "number": 605,
    "body": "This PR adds more tests for the `scapy/*.py` files.",
    "head_branch": "codecov_11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #605 from guedou/codecov_11\n\n[coverage] More tests for scapy/*.py files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb30da88c0a76e0a51e16",
    "number": 604,
    "body": "Code coverage percent reported by codecov was surprisingly low and incorrect. This was cause by filenames conflicts (such as core.py). between Scapy and Pyhon standard library.\r\n\r\nThis PR adds a .coveragerc do exclude some paths from coverage reports and adapts AppVeyor and Travis config files. Moreover it renames appveyor.yml to .appveyor.yml to make it consistent with Travis.\r\n\r\nThe coverage percent will be ~77% !",
    "head_branch": "coverage_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #604 from guedou/coverage_fix\n\n[coverage] Fix codecov results"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb30da88c0a76e0a51e17",
    "number": 602,
    "body": "It seems that codecov is reporting a wrong line count for some files. See` core.py` in https://codecov.io/gh/secdev/scapy/tree/master/scapy/arch/bpf\r\n\r\nThis commit attempts to play with coverage flages to fix this issue.",
    "head_branch": "codecov_loc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb30ea88c0a76e0a51e18",
    "number": 601,
    "body": "Dumping `conf.manufdb` could result in a very large file (+2MB) while performing unit tests. The resulting HTML file takes ages to load on a browser.",
    "head_branch": "smaller_ut_results",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #601 from guedou/smaller_ut_results\n\nSmaller unit tests results"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb30fa88c0a76e0a51e19",
    "number": 600,
    "body": "_ESPPlain still use StrField but it is an internal class so display is not really important.\r\n\r\nFixes #533",
    "head_branch": "fix_533",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #600 from 6WIND/fix_533\n\nDisplay IPsec field in hexadecimal"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb310a88c0a76e0a51e1a",
    "number": 599,
    "body": "This PR improves routes by different ways:\r\n- Add Windows 7 + no powershell routing detection ==> fix https://github.com/secdev/scapy/issues/562\r\n- Fix localhost routes on windows\r\n- Fix a bad dupplicated method in arch.windows.\\_\\_init\\_\\_\r\n- Remove linux only routing usages\r\n- Make routes pretty: I have very big interface names, so using `conf.route` makes something ugly. Should crop too long names.\r\n\r\nSmall tiny bug fixed: in UTscapy, ignore non utf8 characters while loading the output",
    "head_branch": "fix-windows-routes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #599 from gpotter2/fix-windows-routes\n\n[Routing/Windows] Improve routing system"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb311a88c0a76e0a51e1b",
    "number": 597,
    "body": "",
    "head_branch": "fix-flags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #597 from p-l-/fix-flags\n\nFlagValue: use consistant (always a string) output"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb312a88c0a76e0a51e1c",
    "number": 596,
    "body": "Some fields in Dot11 protocols were using specific `.is_applicable()` methods to implement similar features than `ConditionalField()` (which probably didn't exist by the time Dot11 dissectors have been written).\r\n\r\nThis commit uses `ConditionalField`s and removes specific field classes to use generic (`MACField` and `LEShortField`) fields. This should make the code easier to understand.\r\n\r\nThis will also prevent some fields from being displayed when they should not:\r\n\r\n    >>> Dot11().show()\r\n    ###[ 802.11 ]###\r\n      subtype= 0\r\n      type= Management\r\n      proto= 0\r\n      FCfield=\r\n      ID= 0\r\n      addr1= 00:00:00:00:00:00\r\n      addr2= 00:00:00:00:00:00\r\n      addr3= 00:00:00:00:00:00\r\n      SC= 0\r\n\r\n    >>> Dot11(type=2, FCfield=3).show()\r\n    ###[ 802.11 ]###\r\n      subtype= 0\r\n      type= Data\r\n      proto= 0\r\n      FCfield= to-DS+from-DS\r\n      ID= 0\r\n      addr1= 00:00:00:00:00:00\r\n      addr2= 00:00:00:00:00:00\r\n      addr3= 00:00:00:00:00:00\r\n      SC= 0\r\n      addr4= 00:00:00:00:00:00\r\n\r\n    >>> Dot11(type=1).show()\r\n    ###[ 802.11 ]###\r\n      subtype= 0\r\n      type= Control\r\n      proto= 0\r\n      FCfield=\r\n      ID= 0\r\n      addr1= 00:00:00:00:00:00",
    "head_branch": "dot11-cond",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #596 from p-l-/dot11-cond\n\nDot11: use ConditionalField() to replace .is_applicable() methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb312a88c0a76e0a51e1d",
    "number": 595,
    "body": "",
    "head_branch": "issue-593",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #595 from asigalas/issue-593\n\nIssue #593"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb313a88c0a76e0a51e1e",
    "number": 594,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #594 from asigalas/patch-1\n\nIssue #592"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb314a88c0a76e0a51e1f",
    "number": 591,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add more DNS Resource Record (RR) TYPEs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb315a88c0a76e0a51e20",
    "number": 590,
    "body": "This PR:\r\n- Adds a better loopback support for windows: now detects \"127.0.0.1\"\r\n- Fixes VBS detection duplicated function\r\n- Fixes several Linux only usages\r\n- Now sort the output of `conf.route` and `conf.route6`\r\n- Fixes buggy routes (without IP)\r\n\r\nedit: i'm currently looking for an explanation of the tests failure.",
    "head_branch": "fix-windows-routes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb316a88c0a76e0a51e21",
    "number": 589,
    "body": "`packet.py`:\r\n\r\n- add documentation for some functions\r\n\r\n`build_dissect.rst`:\r\n\r\n- modify the **Binding Layers** part inside the **Dissecting**\r\n\r\n(documentation from [#587](https://github.com/secdev/scapy/pull/587) without the pep 8 application)",
    "head_branch": "docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #589 from thmsaurel/docs\n\nadd internal doc & reform binding layers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb317a88c0a76e0a51e22",
    "number": 588,
    "body": "This fixes Issue #579.\r\n\r\nThis PR introduces a small change regarding the generated pcap files, as the linktype is set to the correct IP type.\r\n\r\nBefore:\r\n```\r\n>>> wrpcap(\"ip4.pcap\", [IP()/UDP()])\r\n>>> wrpcap(\"ip6.pcap\", [IPv6()/UDP()])\r\n\r\n$ file ip*.pcap\r\nip4.pcap: tcpdump capture file (little-endian) - version 2.4 (raw IP, capture length 65535)\r\nip6.pcap: tcpdump capture file (little-endian) - version 2.4, capture length 65535)\r\n```\r\n\r\nAfter:\r\n```\r\n>>> wrpcap(\"ip4.pcap\", [IP()/UDP()])\r\n>>> wrpcap(\"ip6.pcap\", [IPv6()/UDP()])\r\n\r\n$ file ip*.pcap\r\nip4.pcap: tcpdump capture file (little-endian) - version 2.4 (Raw IPv4, capture length 65535)\r\nip6.pcap: tcpdump capture file (little-endian) - version 2.4 (Raw IPv6, capture length 65535)\r\n```\r\n",
    "head_branch": "Issue_#579",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #588 from guedou/Issue_#579\n\nSupport Raw IPv6 as PCAP linktype"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb318a88c0a76e0a51e23",
    "number": 587,
    "body": "`packet.py`:\r\n\r\n- apply pep8 norm\r\n- add documentation for some functions\r\n\r\n`build_dissect.rst`:\r\n\r\n- format to 80 characters by column (for text part)\r\n- modify the **Binding Layers** part inside the **Dissectiong**\r\n- add a **Coding Convention** part inside **Design Patterns**\r\n",
    "head_branch": "docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb318a88c0a76e0a51e24",
    "number": 586,
    "body": "This PR fixes variable length field computation in EAP_MD5, EAP_TLS and EAP_FAST.\r\n\r\nExample:\r\n```\r\n>>> EAP_FAST().show()\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"scapy/packet.py\", line 923, in show\r\n    return self._show_or_dump(dump, indent, lvl, label_lvl)\r\n  File \"scapy/packet.py\", line 906, in _show_or_dump\r\n    reprval = f.i2repr(self,fvalue)\r\n  File \"scapy/fields.py\", line 572, in i2repr\r\n    return x[:self.length_from(pkt)].encode(\"hex\")\r\n  File \"scapy/layers/l2.py\", line 590, in <lambda>\r\n    XStrLenField('data', '', length_from=lambda pkt: pkt.len - 10 if\r\npkt.L == 1 else pkt.len - 6)\r\nTypeError: unsupported operand type(s) for -: 'NoneType' and 'int'\r\n```\r\n\r\nAdditional tests were added in order to prevent computation attempts when field values were `None`.",
    "head_branch": "eap-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #586 from plorinquer/eap-fixes\n\nEAP - fix variable length field computation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb319a88c0a76e0a51e25",
    "number": 584,
    "body": "This PR fixes the EAP_MD5 `len` field computation. The default value of the `value_size` field was `None`, which could trigger an issue when computing the `len` field. For example, this failed:\r\n\r\n`str(EAP_MD5())`\r\n\r\nIt also adds the ability to access an \"EAP layer\" (such as `EAP_TLS`, for example) using the parent class name (\"EAP\"). This is now possible:\r\n\r\n```\r\n>>> eap_tls = EAP_TLS()\r\n>>> EAP_TLS in eap_tls\r\nTrue\r\n>>> EAP in eap_tls\r\nTrue\r\n>>> eap_tls[EAP_TLS]\r\n<EAP_TLS  |>\r\n>>> eap_tls[EAP]\r\n<EAP_TLS  |>\r\n```\r\n\r\n\r\nFinally, the code was slightly modified in order to improve its readability. ",
    "head_branch": "eap-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix EAP_MD5 \"len\" field computation.\n\nThe default values of the \"value_size\" field is None. This can trigger\nan issue\nwhen computing the \"len\" field.\n\nTest: str(EAP_MD5())\n\nIn order to fix this issue, the default value of the \"value_size\" field\nhas been set to 0.\n\nTests have been added in \"regression.uts\".\n\nAdded regression tests for EAP_TLS and EAP_FAST.\n\nUse XStrLenField in EAP_MD5, EAP_TLS and EAP_FAST packets instead of StrLenField.\n\nDelete blank lines before the class description (EAPOL, EAP, EAP_MD5, EAP_TLS and EAP_FAST packet classes).\n\n\"registered_options\" dictionary was renamed \"registered_methods\"\n(EAP-MD5, EAP-TLS etc are not options, but authentication methods).\n\nEAP getlayer() and haslayer() methods have been overloaded in order to\nallow access to a given \"EAP layer\" (such as EAP_TLS, for instance) by\nproviding the parent class name (\"EAP\"). For example, this is now\npossible:\n\n>>> eap_tls = EAP_TLS()\n>>> EAP_TLS in eap_tls\nTrue\n>>> EAP in eap_tls\nTrue\n>>> eap_tls[EAP_TLS]\n<EAP_TLS  |>\n>>> eap_tls[EAP]\n<EAP_TLS  |>\n\nRegression tests have been added."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb31aa88c0a76e0a51e26",
    "number": 583,
    "body": "Hello!\r\n\r\nSeen on Redhat-7 with distribution version of python-cryptography (1.3.1):\r\n\r\n```\r\n# scapy\r\nINFO: Can't import matplotlib. Won't be able to plot.\r\nINFO: Can't import PyX. Won't be able to use psdump() or pdfdump().\r\nWARNING: No route found for IPv6 destination :: (no default route?)\r\nINFO: Can't import python-cryptography v1.7+. Disabled WEP decryption/encryption.\r\nINFO: Can't import python-cryptography v1.7+. Disabled IPsec encryption/authentication.\r\nINFO: Can't import python-cryptography v1.7+. Disabled PKI & TLS crypto-related features.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/scapy\", line 25, in <module>\r\n    interact()\r\n  File \"/usr/lib/python2.7/site-packages/scapy/main.py\", line 359, in interact\r\n    init_session(None, mydict)\r\n  File \"/usr/lib/python2.7/site-packages/scapy/main.py\", line 183, in init_session\r\n    scapy_builtins = __import__(\"all\",globals(),locals(),\".\").__dict__\r\n  File \"/usr/lib/python2.7/site-packages/scapy/all.py\", line 43, in <module>\r\n    from scapy.layers.tls.all import *\r\n  File \"/usr/lib/python2.7/site-packages/scapy/layers/tls/all.py\", line 12, in <module>\r\n    from scapy.layers.tls.automaton import *\r\n  File \"/usr/lib/python2.7/site-packages/scapy/layers/tls/automaton.py\", line 35, in <module>\r\n    from scapy.layers.tls.handshake import *\r\n  File \"/usr/lib/python2.7/site-packages/scapy/layers/tls/handshake.py\", line 22, in <module>\r\n    from scapy.layers.tls.keyexchange import (_tls_named_curves, _tls_hash_sig,\r\n  File \"/usr/lib/python2.7/site-packages/scapy/layers/tls/keyexchange.py\", line 24, in <module>\r\n    from scapy.layers.tls.crypto.ffdh import FFDH_GROUPS\r\n  File \"/usr/lib/python2.7/site-packages/scapy/layers/tls/crypto/ffdh.py\", line 207, in <module>\r\n    params = pn.parameters(default_backend())\r\nAttributeError: 'DHParameterNumbers' object has no attribute 'parameters'\r\n```\r\n\r\nThere are several ways to fix this issue. I chose to check conf.crypto_valid before importing cryptography in the faulty module, but I also thought of checking it entirely in the scapy.layers.tls.all module. What would you prefer?\r\n\r\nIf we check in specific modules, shouldn't we also check in the following modules that import stuff from cryptography:\r\n- scapy/layers/tls/crypto/cipher_aead.py\r\n- scapy/layers/tls/crypto/cipher_block.py\r\n- scapy/layers/tls/crypto/cipher_stream.py\r\n- scapy/layers/tls/keyexchange.py\r\n\r\nThese modules do not actually raise exceptions but checking for crypto_valid may be interesting...\r\n\r\nWhat do you think?",
    "head_branch": "fix_tls_import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #583 from 6WIND/fix_tls_import\n\n[Bug] TLS: fix shell start with old cryptography"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb31ba88c0a76e0a51e27",
    "number": 581,
    "body": "It's not summer time everywhere yet, but for me that ppi_contrib time test was crashing because of that...",
    "head_branch": "ppi-summer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed ppi test during summer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb31ca88c0a76e0a51e28",
    "number": 580,
    "body": "**Requires [step 2](https://github.com/secdev/scapy/pull/574). For now, step 2 commits are included. I will rebase once it's all done**\r\n\r\n**DO NOT REVIEW THIS UNTIL STEP 2 HAS BEEN PUSHED AND THAT I HAD REBASED EVERYTHING !**\r\n(it's a way to big)\r\n\r\nThat PR:\r\n- Add support for most functions (all regression.uts but a few tests pass + many .uts files)\r\n- Only tested on Windows\r\n- Is a fixed remerge of https://github.com/secdev/scapy/pull/567\r\n- Passes all Python 2 tests\r\n\r\n\r\nIn the future, for Step 4+:\r\n- Things that are still not working under python 3: ber + some more\r\n- Adapt the tests: fix the `random` usage: random returns different results between python 2 and 3: all `random.seed` tests fail\r\n\r\n",
    "head_branch": "scpy-30-prog-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb31da88c0a76e0a51e29",
    "number": 578,
    "body": "@guedou @p-l- \r\nI finally found the reason why appveyor tests were randomly stuck.\r\n\r\nExplanation:\r\n- when `select_objects` was called with remaining time 0, on linux that would have performed the loop once then returned. on windows, it wouldn't have performed the loop at all.\r\n- That means that `cmdin` was never flushed, so in some cases, when `.restart()` was called, the second thread would have catched the `STOP` command of the older one while starting, then stopped, then the automaton did freeze.\r\n\r\nFixed to make the windows behavior act like the linux one.",
    "head_branch": "fix-tests-automaton",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #578 from gpotter2/fix-tests-automaton\n\n[appveyor] Fix tests automaton"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb31ea88c0a76e0a51e2a",
    "number": 577,
    "body": "The ICV size is defined by the authentication algorithm in the SA.\r\nit can be deduced from the payloadlen field but the padding len is\r\nunknown aswell so there is no way to find both without the SA.\r\n\r\nAssume everything in payloadlen is the ICV until the verification called\r\nfrom the SA. Fill padding when possible.\r\n\r\nFix #533",
    "head_branch": "fix_533",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "layers/ipsec: fix AH dissection\n\nThe ICV size is defined by the authentication algorithm in the SA.\nit can be deduced from the payloadlen field but the padding len is\nunknown aswell so there is no way to find both without the SA.\n\nAssume everything in payloadlen is the ICV until the verification called\nfrom the SA. Fill padding when possible.\n\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb31ea88c0a76e0a51e2b",
    "number": 576,
    "body": "This PR adds unit tests to PR#504 and small fixes to dhcp6.py",
    "head_branch": "PR#504_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #576 from guedou/PR#504_improved\n\n[rewritten] PR #504"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb31fa88c0a76e0a51e2c",
    "number": 575,
    "body": "Scapy may be used as third party library by other projects, themselves managed under git. This leads to surprising results such as this:\r\n\r\n```console\r\n$ git describe\r\nawesomeproject-v5.22-1-ga1316614c290\r\n$ virtualenv env\r\n...\r\n$ . env/bin/activate\r\n$ pip install scapy==2.3.3\r\n...\r\n$ cat env/lib/python2.7/site-packages/scapy/VERSION\r\n2.3.3\r\n$ which scapy\r\n/home/.../env/bin/scapy\r\n$ scapy\r\n...\r\nWelcome to Scapy (awesomeproject-v5.22.dev1)\r\n>>>\r\n```\r\n\r\nScapy's version is wrongly set to the current project's version.\r\n\r\nWhen trying to determine scapy's version from git, make sure that the code is executed from the root of a git repo. If not, read the version from the `scapy/VERSION` file which has been generated when packaging scapy source archive.\r\n\r\nThis fixes commit: 4f71027fcdcb (\"enhance version management\")",
    "head_branch": "gitversion-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #575 from 6WIND/gitversion-fix\n\nOnly read version from git when in scapy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb320a88c0a76e0a51e2d",
    "number": 574,
    "body": "**EDIT: That PR was splitted in smaller ones. This will stay open for legacy until all have been merged**\r\n\r\nNext part of supporting Python 3. This increases the compatibility between python 2 and 3, by using common methods + six.py module. It does not provide a suitable python 3 compatibility yet.\r\n\r\nThe PR:\r\n- used [Python-modernize](https://pypi.python.org/pypi/modernize) as a base to update scapy's code\r\n- manually fixed some conflicts/bugs\r\n- Included `six.py` in modules\r\n- fix some small bugs (windows)",
    "head_branch": "scpy-30-prog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb321a88c0a76e0a51e2e",
    "number": 573,
    "body": "",
    "head_branch": "fix-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #573 from p-l-/fix-tests\n\nPrevent sr() tests crashes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb322a88c0a76e0a51e2f",
    "number": 572,
    "body": "**The PR is massive but really stupid...**\r\n\r\nVery first step of python 3 support:\r\n\r\n- Added auto-parser util that\r\n-- Replaced all \"\\x...\" or \"\\0...\" by b\"\\x...\", b\"\\0...\"\r\n-- Auto-fixed tabs, replaced by spaces (python 3 do not support tabs, spaces only)\r\n- Ran the parser on all .py and .uts files\r\nObviously there will be some specific fixes to do (replace \"\" by b\"\"), but those will have to be made case by case.\r\n\r\nPS: to use the parser: go to dev/scripts, then \r\n`python .\\autoFixer.py ..\\..\\**\\*.uts`\r\n`python .\\autoFixer.py ..\\..\\**\\*.py`\r\n",
    "head_branch": "scpy-30-prog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #572 from gpotter2/scpy-30-prog\n\n[convergence] Python 3- string byte tag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb323a88c0a76e0a51e30",
    "number": 571,
    "body": "**The PR is massive but really stupid...**\r\n\r\nVery first step of python 3 support:\r\n- Added auto-parser util that\r\n-- Replaced all `\"\\x...\"` or `\"\\0...\"` by `b\"\\x...\"`, `b\"\\0...\"`\r\n-- Auto-fixed tabs, replaced by spaces (python 3 do not support tabs, spaces only)\r\n- Runned the parser on all `.py` and `.uts` files\r\n\r\nObviously there will be some specific fixes to do (replace `\"\"` by `b\"\"`), but those will have to be made case by case.",
    "head_branch": "scpy-30-prog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb324a88c0a76e0a51e31",
    "number": 570,
    "body": "Added link to 64bit Python version and added remark that pyreadline and Python should both be 64bits or 32bits.\r\n(Also now link to Python 2.7.13 instead of 2.7.12)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated Windows installation instructions (#570)\n\nAdded link to 64bit Python version and added remark that pyreadline and Python should both be 64bits or 32bits.\r\n(Also now link to Python 2.7.13 instead of 2.7.12)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb325a88c0a76e0a51e32",
    "number": 569,
    "body": "This pull request adds basic support for Type 12 EtherCat messages (IEC 61158-4-12).\r\n\r\nAs the EtherCat protocol uses LittleEndian byte order - even for BitFields - this also adds LEBitFields support. There is a small regression test on top of the EtherCat-tests - but I don't know if the whole LEBitField implementation is mature enough...\r\n\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb326a88c0a76e0a51e33",
    "number": 567,
    "body": "Hello,\r\n\r\n**This PR is not finished. It's published here to show that i'm working on it. The biggest part has been done: for now, all regression.uts tests pass under Python 2.7 AND 3**\r\n\r\nHere is a massive PR, on which I worked hard, but is not completly finished, in order to provide Python 2.7 AND Python 3.0 compatibility !\r\n\r\n@p-l- @guedou I would like to hear your suggestions/questions/ideas.\r\n\r\nI need to finish, and make all tests pass.\r\n(for now, only regression.uts passes (see below for exceptions))\r\n\r\n## Status\r\n### Questions:\r\n- `random.seed` has changed ==> we cannot get the same values as on Python 2.7 (even with `version=1`). So either we mock the random module, either we create our own implementation of it for the tests. What should we do ?\r\n- As a side note, i admit that i sometimes (quite rarely) looked how it was done in `scapy3k`. We might want to add a credit for that.\r\n- Do we want to pack up the 2.3.3 version, and start a 2.3.4 before adding this ?\r\n- Should I move the really used functions (str_bytes...) to somewhere else than `data.py` (i chosed this file as it was about data operations)\r\n- More to come\r\n\r\n### Some explanations:\r\n- The Bytes/Str system made the thing quite hard: functions `bytes_str` and `str_bytes` are used a LOT in order to provide compatibility between Python 2 and 3.\r\n- Scapy will now require the tiny module `six`, already required by tons of programms (matplotlib...). We have two options: either we (as done currently in this PR) add an auto requirement (I modified the setup.py system), either we add `six.py` to scapy, which is license-free.",
    "head_branch": "scapy-30",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb326a88c0a76e0a51e34",
    "number": 559,
    "body": "People in secdev/owners should be allowed to manage AppVeyor builds now.",
    "head_branch": "team-appveyor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #559 from p-l-/team-appveyor\n\nCreate a secdev team in AppVeyor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb327a88c0a76e0a51e35",
    "number": 558,
    "body": "PR #182 is an outdated implementation of https://tools.ietf.org/html/draft-ietf-6man-segment-routing-header\r\n\r\nThis PR implements most of the draft-06 specification. Some TLV are missing but will be easy to add later.",
    "head_branch": "PR#182_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #558 from guedou/PR#182_improved\n\n[rewritten] PR #182"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb328a88c0a76e0a51e36",
    "number": 557,
    "body": "Hi,\r\nI discovered EAP-Identity, EAP-TLS, EAP-FAST and EAP-CHAP are not implemented properly, so I've fixed that. I've changed corresponding classes to be subclasses of EAP instead of separate layers. This makes implementation much easier given that parsing each of them properly requires accesing \"len\" field of EAP layer.\r\n\r\nEAP-Identity was just missing optional string field in request.\r\nMain problem with the EAP-TLS and EAP-FAST was that current implementation was not dealing with fragmented messages which are quite common\r\n EAP-CHAP was not parsing requests properly, since these can contain random challenge value of arbitrary length and length of extra data must be determined from len field of EAP layer. \r\n\r\nThere is some more info about the changes in each of the commit messages.\r\nImplementation in the pull request is following relevant RFCs so it should manage to dissect all valid messages properly.",
    "head_branch": "eap_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix EAP (#557)\n\n* Add message field in EAP-Indentity request\r\n\r\nEAP-Identity request may contain message as stated in RFC3748.\r\n\r\n* Fix fragmented EAP-TLS\r\n\r\nCurrent implementation fails to dissect fragmented EAP-TLS.\r\nFragmented EAP-TLS messages are quite common, in this case only\r\nfirst EAP-TLS will contain tls_message_len field (indicated by L bit),\r\nwhich will be total length of reassembled tls message.\r\n\r\nLength of tls payload in single EAP-TLS message should therefore\r\nbe determined by EAP.len field (see RFC5216-Fragmentation).\r\n\r\nTo implement this I find reasonable to make EAP-TLS subclass of EAP.\r\n\r\n* Fix fragmented EAP-FAST\r\n\r\nImplementation of EAP-FAST suffers from the same issue as EAP-TLS,\r\nsee previous commit message.\r\n\r\n* Fix EAP-MD5 Dissection\r\n\r\nImplementation of EAP-MD5 was not following RFC3748 (which is\r\nreferencing RFC1994) properly.\r\n\r\nField value_size is determining only size of value_field.\r\nIt might have length different than 16B in EAP-MD5 request,\r\nbecause in that case it is not used to transmit MD5 hash,\r\nbut random challenge value.\r\nSize of optional_name(extra data) is determined as \"rest of\" EAP message\r\n(len field of EAP)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb329a88c0a76e0a51e37",
    "number": 555,
    "body": "Fixes #534 ",
    "head_branch": "grebind",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "More layer bindings for GRE (#555)\n\n* More layer bindings for GRE\r\n* Define IPPROTO_GRE for windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb32aa88c0a76e0a51e38",
    "number": 554,
    "body": "Due to no recent activity from the author, I decided to fix the conflict and modify the patch. It is a good candidate for squashing.\r\n\r\nAs interface aliases tend to be an old Linux mechanism, I moved the logic from @prxyg3n into the `get_alias_address()`. Compared to the PR #280, this PR maintains the current Scapy behavior and only try to fix alias errors when needed.",
    "head_branch": "prxyg3n",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #554 from guedou/prxyg3n\n\n[rewritten] PR #280"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb32ba88c0a76e0a51e39",
    "number": 553,
    "body": "Hi,\r\n\r\nThis PR adds both RFC 4895 (authenticated chunks) and 5061 (dynamic address reconfiguration, \"ADD-IP\") specifics SCTP chunks and params.\r\n\r\nI'm sorry, my pep8 pass and my editor trailing whitespace autodeletion made the diff much bigger it really is. Would you want me to revert these unnecessary changes? [edit: well it seems the missing trailing whitespace breaks the tests. Reverting]\r\n\r\nTests on SCTP are still petty, will improve them when got some time.\r\n\r\n=====\r\nLinux kernel precision to fully enable these SCTP capabilities (from https://sourceforge.net/p/lksctp/mailman/message/20054557/):\r\n\"\"\"\r\nYou need to enable ADD-IP on your server and your client buy doing:\r\n$ echo 1 > /proc/sys/net/sctp/addip_enable\r\n\r\nIf you are running a new enough kernel that supports SCTP Authentication extensions, you need to enable that as well:\r\n$ echo 1 > /proc/sys/net/sctp/auth_enable\r\n\r\nIf one of your systems does not support SCTP Authentication extensions (/proc/sys/net/sctp/auth_enable is not present), you need to turn on the backward compatibility mode on the system:\r\n$ echo 1 > /proc/sys/net/sctp/addip_noauth_enable.\r\n\"\"\"",
    "head_branch": "sctp-enhance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #553 from Leereen/sctp-enhance\n\n[SCTP] RFC 4895 & 5061"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb32ca88c0a76e0a51e3a",
    "number": 552,
    "body": "Hello!\r\n\r\nI have noticed that AES-GCM and AES-CTR are not respecting their RFC (4106 and 3686) concerning the initialization vector. Currently, we are setting the salt in the packet which is wrong, and for the CTR mode, the last 4 bytes must be 0x00000001 and must not be in the packet either.\r\n\r\nThis is not detected by the regression tests as the encrypt and decrypt are compatible but are not doing the right thing. To avoid this issue, I have generated some traffic using Linux VMs and iproute2 and retrieved their ESP layer using tcpdump. I added some tests to verify the decryption of those packets and reduce the risk of such issues in the future.\r\n\r\nTo fix the actual issue, I have added an attribute to CryptAlgo which will be used to differentiate the ESP IV (current implementation with CryptAlgo.generate_iv) from the mode IV (can contain the salt, the ESP IV and other things). I have also tweeked algo sizes to match this new behavior.\r\n\r\nDuring my tests, I encountered an issue with the command method with IP flags and also some inconsistencies in the CCM tests (even though they are currently skipped, they should be correct).",
    "head_branch": "ipsec-gcm-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "layers/ipsec: fix iv handling in special modes\n\nThere is a distinction to be made between the IV generated using\nCryptAlgo.generate_iv and the IV given as argument to the cipher mode in\nCryptAlgo.new_cipher.\n\nThe first one is random string which is sent with the ESP packet (first\nbytes of the data field). The cipher mode only affects the size of the\nstring in our implementation (some modes like GCM may implement a\ncounter instead of pure random).\n\nAnd the second is a combination of the salt, the ESP iv and possibly other\nthings. This can vary a lot depending on the mode.\n\nAdd an attribute to CryptAlgo to give a function computing this \"second\"\nIV based on SA information.\n\nSigned-off-by: Thomas Faivre <thomas.faivre@6wind.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb32ca88c0a76e0a51e3b",
    "number": 550,
    "body": "Without this code, when an out of connection TCP packet receives a\r\nTCP answer with flag RST and the ack set to 0, it is not seen as an\r\nanswer.\r\n\r\nThis comes without online regression tests because I have been unable to\r\nfind a reliable machine without firewall on the Internet.\r\n\r\nSimple test, if 192.168.0.1 has no firewall:\r\n\r\n```\r\n>>> sr(IP(dst=\"192.168.0.1\")/TCP(sport=80, dport=12345, flags='SA'),\r\n...    timeout=2)\r\n```\r\n\r\nThis test will not terminate without this patch.\r\n\r\nThis PR also adds more tests on flags and seq/ack values.\r\n\r\nNew tests have been added to check `TCP.answers()`.",
    "head_branch": "fix-rst-answers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #550 from p-l-/fix-rst-answers\n\nImprove TCP.answers()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb32da88c0a76e0a51e3c",
    "number": 549,
    "body": "conforming with rfc 7252. Also sets the content_format field from a Content-Format option, if any. This allows subsequent layers to bind based based on the content format value.\r\n\r\nI have also fixed the assertions in the CoAP tests to use assert.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #549 from todfreed/master\n\ncoap: allow CoAP packets to have a payload"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb32ea88c0a76e0a51e3d",
    "number": 548,
    "body": "That \"test\" was a way too buggy:\r\n- `AS_resolver_cymru` is nealy never working, and used to return a different value than the others.\r\n- `AS_resolver_multi` did not play (at all) his role of trying all providers until it got the infos, and would just have crashed badly...\r\n\r\nSo this PR:\r\n- Fix AS_resolver_multi\r\n- Moved AS_resolver_cymru as last ressort\r\n- Fixed AS_resolver_cymru which was returning a number (second param) where as all the others returned `AS[number]`\r\n- Fixed tests",
    "head_branch": "fix-as-resolver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #548 from gpotter2/fix-as-resolver\n\n[Tests] Fix AS_RESOLVER"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb32fa88c0a76e0a51e3e",
    "number": 547,
    "body": "This PR:\r\n- Fixes https://github.com/secdev/scapy/issues/546\r\n- Fixes https://github.com/secdev/scapy/issues/643\r\n\r\nThe `ICMPv6EchoRequest` and `ICMPv6EchoReply` hashret should not be generated using the overlapping `IPv6` packet, to allow any src address.",
    "head_branch": "fix-456",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb330a88c0a76e0a51e3f",
    "number": 545,
    "body": "Examples:\r\n```Python\r\npkt[TCP].flags |= \"SA\"\r\n\r\nif pkt[TCP] & 'RA':  # if pkt[TCP].RA also works\r\n    [...]\r\n\r\npkt|IP].flags |= \"MF+evil\"\r\n\r\nif pkt[IP] & \"MF+evil\":\r\n    [...]\r\n```",
    "head_branch": "enh-flags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #545 from p-l-/enh-flags\n\nFlags: allow operations (| & ==) with strings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb331a88c0a76e0a51e40",
    "number": 543,
    "body": "This PR:\r\n- brings a new feature: multi file support in UTscapy.\r\nThat allow us to use the same scapy instance to run multiple tests, and speed up the tests. (also added a new log level with more user-friendly texts)\r\n- brings a new feature: JSON config files in UTscapy. Optional, it reduces the command line complexity and allow to use complex `PREEXEC` structures\r\n- Fixes some bugs with the tests (`_` used with `xrange` made `_` a static value, removed `sys.__stdout__` usage)\r\n- Fixes `fixname()` function not being called in DaDict\r\n\r\n(PR won't work without the bug fixes)\r\n\r\nResults:\r\n- Travis CI:\r\nfrom an [older build](https://travis-ci.org/gpotter2/scapy/builds/207658839), built in 9 min 19 sec, we're [now](https://travis-ci.org/gpotter2/scapy/builds/207800650) at 4 min 48 sec\r\n- Appveyor: even better,\r\nfrom [older](https://ci.appveyor.com/project/gpotter2/scapy/build/1.0.296) in 9 min 21 sec we're [now](https://ci.appveyor.com/project/gpotter2/scapy/build/1.0.298) at 3 min 56 sec.\r\n\r\nSo in average, that should speed up the tests (running part only), by 2.",
    "head_branch": "multi-utscapy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #543 from gpotter2/multi-utscapy\n\n[coverage] Speed up all tests x2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb332a88c0a76e0a51e41",
    "number": 542,
    "body": "Hi all,\r\n\r\nI've been working extensively on the TLS module. Many features added, several bugs fixed, and a lot of code cleaned up. The underlying goal was to reach a wholesome framework for implementing TLS 1.3 (well, at least draft 18) in the next weeks.\r\n\r\n- pkcs1.py tries to use a 'md5-sha1' hash when the backend provides it (see PR #511);\r\n- passive session analysis is simplified with tlsSession \"mirroring\" (see PR #519);\r\n- connStates and cipher \"snapshots\" enable to use `str` and `show2` without messing up with the sequence numbers, stream cipher contexts, etc. These methods are supposed to be innocuous and we should not ask the user to consider them any differently in the TLS module. The previous behaviour is now achieved with a `str_stateful` method;\r\n- SSLv2 support, which is really different from TLS;\r\n- RC2 block cipher support when the backend provides it;\r\n- the TLS record length now corresponds to the ciphertext length (possibly with the IV, MAC, etc.) and not the plaintext length, because it was misleading to show a length different from the one which was first parsed from the original packet. The deciphered length remains available and is printed alongside the ciphered length when necessary;\r\n- DH_anon and ECDH_anon support;\r\n- FFDH groups from RFC 7919;\r\n- removed FFDH generator size limitation from the cryptography library, with a sad hack. For several much-discussed reasons, the library will eventually provide support for long generators, but only when the FFDH subgroup order is known. TLS allows long generators (and recent openssl versions use them), but does not provide a way to send the subgroup order...\r\n- server and client automatons now have tighter, more consistent behaviours: the server stays online even when a client left, errors are properly handled, both sides support client authentication from SSLv2 to TLS 1.2, etc. Much of the code has been cleaned up and rationalised, because what was previously pushed was somewhat functional but barely usable from a developer's point of view;\r\n- added a few more session establishment tests. The automatons have been slightly speeded up by the review, so it's still resource-consuming but no more than before.\r\n\r\nSorry for the monolithic PR, I know this will make review complicated, but it was just impossible to fix the history on my side and get distinct working commits for each feature.\r\n\r\nYou may quickly test what the automatons look like by running `example_server.py` and `example_client.py`. ;)",
    "head_branch": "sslv2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[TLS] Major module overhaul (#542)\n\n* TLS module major overhaul\r\n\r\n* Clean TLS directory\r\n\r\n* TLS 1.3 packets and basic client automaton (+ session fixes)\r\n\r\n* Fix multiple key share entries\r\n\r\n* Convergence py3\r\n\r\n* Support features from cryptography v2.0\r\n\r\n* Validate CertificateVerify signatures\r\n\r\n* Small fix on TLS signature parsing\r\n\r\n* Small fixes in TLS module\r\n\r\n* Enhance Encrypted PMS support\r\n\r\n* Convergence py3 - print\r\n\r\n* Revert useless changes\r\n\r\n* Strengthen crypto lib validation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb332a88c0a76e0a51e42",
    "number": 541,
    "body": "conforming with rfc 7252. Also sets the content_format field from a Content-Format option, if any. This allows subsequent layers to bind based based on the content format value.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb333a88c0a76e0a51e43",
    "number": 540,
    "body": "I think that working with a pretty code makes things easier. But I'm a bit sceptical about how well that did....\r\n\r\nI used an [auto-tool](https://github.com/hhatto/autopep8) to reindent all scapy's code and make it PEP8 complient. I have chosen the less aggressive options to only fix spaces and basic idents (it did not bring any changes, as I think that will be for another time).\r\n\r\nI know it's a bit crazy to ask a such tool to review a such big code, but doing it once for all would be quite nice indeed...\r\n\r\nMaybe that try of making the code pep8 complient was not that good, in that case don't bother and tell me.\r\n\r\nI have reviewed most of the changes already (pfwew), but if you want to review it, we may want to split the work...\r\n",
    "head_branch": "reindent-all",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb334a88c0a76e0a51e44",
    "number": 537,
    "body": "- Fixes https://github.com/secdev/scapy/issues/470\r\n- fixes `-s` arg not being detected\r\n- fixes travis logs + gtp test (`random.seed` was misused)",
    "head_branch": "pickling-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #537 from gpotter2/pickling-error\n\n[Pickling] Add packets pickling support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb335a88c0a76e0a51e45",
    "number": 532,
    "body": "In Python2 the indention \\t will be interpreted as 8 spaces. Python3 will throw an error, if you mix space and tab indentions, and won't run the script.\r\nIf your editor has a default indention of 4, than you don't see the code, that will be executed.\r\n\r\nTo prevent further problems of this kind I fixed indention in some python files, where it was not consistent with the lines around.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed spacing bug (#532)\n\nFixed some typos and bad whitespaces."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb336a88c0a76e0a51e46",
    "number": 531,
    "body": "Added the ConditionalField PDPAddress_IPv6 and changed the IPField name from PDPAddress to PDPAddress_IPv4.\r\nTheir condition matches 3GPP TS 29.060 7.7.27 Topic, which states that if there is only IPv4, length must be 6, if there is only IPv6, length must be 18 and if there is IPv4v6, length must be 22.\r\n\r\nAlso added new tests for this modification under IE_EndUserAddress() basic instatiations.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb337a88c0a76e0a51e47",
    "number": 530,
    "body": "Added the ConditionalField PDPAddress_IPv6 and changed the IPField name from PDPAddress to PDPAddress_IPv4.\r\nTheir condition matches 3GPP TS 29.060 7.7.27 Topic, which states that if there is only IPv4, length must be 6, if there is only IPv6, length must be 18 and if there is IPv4v6, length must be 22.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb338a88c0a76e0a51e48",
    "number": 528,
    "body": "This PR brings several small fixes to improve coverage:\r\n- Add the tests that do not require OpenSSL on appveyor\r\n- Fixes path detection of ManufDB to use the detected Wireshark path.\r\n- Added __repr__ function for manufdb\r\n- Small windows arch tests",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #528 from gpotter2/patch-7\n\n[coverage] Tests for ManufDB + Multiple fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb339a88c0a76e0a51e49",
    "number": 526,
    "body": "Fixes https://github.com/secdev/scapy/issues/525\r\n\r\nThat should fix the appveyor stuck states\r\n\r\nI've found out that it was the control thread's fault: The thread was starting, but nothing waited for it. so the next part of the code was executed before it had time to properly load...",
    "head_branch": "fix-stuck",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #526 from gpotter2/fix-stuck\n\n[Tests] Fix automaton stuck"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb339a88c0a76e0a51e4a",
    "number": 524,
    "body": "Winpcap hasn't been updated since 2013. This PR add support for Npcap and display a warning encouraging people to migrate to Npcap.\r\n\r\nThis also means that we have to use the updated windump version.\r\n\r\nNpcap is a relevant program, part of the nmap project, which brings functions like loopback adapter and update the code for newer versions. The windump version is made by the author of Npcap.\r\n\r\nAlso has several fixes:\r\n- Loopback Routing fixes (as Npcap supports loopback)\r\n- Updated` route.py` \\_\\_repr\\_\\_ with the one located in `route6.py` (better spaces management)\r\n- Fixed mock_windows.uts with a way easier tests",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #524 from gpotter2/patch-5\n\n[Windows] support Npcap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb33aa88c0a76e0a51e4b",
    "number": 523,
    "body": "This PR:\r\n- makes it easier to use the nice cool sphinx style to build locally the doc\r\n- removes old mercurial logs\r\n\r\n**Please ignore codecov: it's due to some random coverage tests depending of the sniffing functions**",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #523 from gpotter2/patch-6\n\n[General] Doc improvements + mercurial logs removed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb33ba88c0a76e0a51e4c",
    "number": 522,
    "body": "This PR adds more unit tests for scapy/*.py file. It also suppresses a non working method and useless empty lines. \r\n \r\nIt might require some modifications prior to merging.",
    "head_branch": "codecov_10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[coverage] More unit tests for scapy/*.py & bug fixes (#522)\n\n* Code cleaning, unit tests\r\n* Fix manuf DB path\r\n* Specify seed in volatile objects using RandomEnumeration\r\n* pypy fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb33ca88c0a76e0a51e4d",
    "number": 521,
    "body": "This should avoid random unrelated crashes.",
    "head_branch": "fix-test-reliability",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #521 from p-l-/fix-test-reliability\n\nTests: disable debug_dissector in sniff tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb33da88c0a76e0a51e4e",
    "number": 519,
    "body": "This PR provides a clean way to parse a complete TLS session.\r\n\r\nIt used to be difficult to achieve because the connection states implementation was rather tailored for an interactive TLS session (i.e. the user is either the client or the server, like with automata) instead of passive analysis. This is solved with a rather explicit `tlsSession.mirror()` method. See the docstring or the UTS for examples.\r\n\r\nI also fixed two small padding issues:\r\n\r\n- in `basefields.py` we used the last byte of the `pre_dissect()` result for determining the padding length, but this failed when trying to parse several following TLS records;\r\n- in `record.py` it was a mistake to create a `TLSApplicationData` when the `msg` was empty (this type of message is actually used as a countermeasure to the BEAST attack in recent openssl versions).",
    "head_branch": "mirror_tls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb33ea88c0a76e0a51e4f",
    "number": 518,
    "body": "1. Try to decode payload only if bottom of stack bit is set\r\n2. Bind MPLS/MPLS with bottom of stack bit not set\r\n3. Bind MPLS/IP with bottom of stack set",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb33fa88c0a76e0a51e50",
    "number": 516,
    "body": "Hello,\r\n\r\nI would like to rename the error field in NTP Control messages (\"`error`\") in order to have the same name as in NTP Private messages.\r\n\r\nI also removed the local XStrFixedLenField class, as it is now in scapy/fields.py (#446), and fixed a typo.\r\n\r\nThanks in advance.",
    "head_branch": "ntp-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #516 from plorinquer/ntp-update\n\nNTP : update and small fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb33fa88c0a76e0a51e51",
    "number": 515,
    "body": "@guedou @p-l- Fixes tests on master\r\n\r\nLooks that this line became outdated with the latest version...\r\nReally sorry for that.",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #515 from gpotter2/patch-3\n\n[coverage] Fix current tests (ppi_geotag)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb340a88c0a76e0a51e52",
    "number": 514,
    "body": "I fixed the merge conflict from dormant PR #208.",
    "head_branch": "fuzz-fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #514 from mtury/fuzz-fixed\n\nFix bugs found with python-afl"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb341a88c0a76e0a51e53",
    "number": 513,
    "body": "These tests are improving the coverage of IPv6 related layers and tools. There are some more tests to write, but this PR is OK for now.",
    "head_branch": "codecov_9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #513 from guedou/codecov_9\n\n[coverage] Better unit tests for inet6.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb342a88c0a76e0a51e54",
    "number": 512,
    "body": "Should have been merged with #371. `ecdsa` is no longer used.",
    "head_branch": "remove-ecdsa",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove ecdsa from appveyor install (#512)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb343a88c0a76e0a51e55",
    "number": 511,
    "body": "This removes the PKCS legacy methods in pkcs1.py, thanks to an (almost?) undocumented `md5-sha1` hash function in openssl which reproduces the signature scheme in TLS <1.0. I just had to register it through the cryptography library `HashAlgorithm` interface. This is neat.\r\n\r\nOther minor changes:\r\n\r\n- Sort through default values for sign/verify and decrypt/encrypt methods\r\n- Move one AC method to cert.py, and delete two others which had nothing to do in pkcs1.py\r\n- Typos in cert.uts",
    "head_branch": "remove_pkcs_legacy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb344a88c0a76e0a51e56",
    "number": 510,
    "body": "Performance aside, DES encryption actually equates to TripleDES encryption using three times the original key. That's why the cryptography library did not bother to declare a specific, weak DES cipher. See https://github.com/pyca/cryptography/issues/2523\r\n\r\nAnyway, we can use `algorithms.TripleDES` to have our own `Cipher_DES*` ciphers.\r\n\r\nI also slightly reworked the export key mechanism, which was fine for stream ciphers like RC4_40 but not for DES40.",
    "head_branch": "des_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #510 from mtury/des_support\n\n[TLS] Enable DES"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb345a88c0a76e0a51e57",
    "number": 509,
    "body": "These unit tests attempt to cover as many lines of inet.py as possible. \r\n\r\n@p-l- this PR also fixes an issue with `timeskew_graph()` likely trigger by the FlagsField PR.",
    "head_branch": "codecov_8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #509 from guedou/codecov_8\n\n[coverage] Better unit tests for inet.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb346a88c0a76e0a51e58",
    "number": 508,
    "body": "This PR : \r\n- migrates the tests from `run_tests_tls_netaccess.sh` to a python form using .uts file\r\n- tries to fix coverage issues https://coverage.readthedocs.io/en/coverage-4.3.4/cmd.html#execution\r\n\r\nIt also fixes https://github.com/secdev/scapy/issues/505, to make the tests work.\r\n\r\n@mtury Can you help me with openssl ? As you can see on the travis logs of this PR, i tried passing it the ca_cert.pem without any success...",
    "head_branch": "uts-tls-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[TLS/coverage] Migrate to UTS + Bug (#508)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb346a88c0a76e0a51e59",
    "number": 507,
    "body": "Sorry for those empty PRs, please ignore them",
    "head_branch": "uts-tls-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb347a88c0a76e0a51e5a",
    "number": 506,
    "body": ".",
    "head_branch": "fix-prs-476",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb348a88c0a76e0a51e5b",
    "number": 504,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb349a88c0a76e0a51e5c",
    "number": 503,
    "body": "The GraphViz path was outdated, and on x86 computers, the function won't have found anything...\r\n\r\n- quick look-up function that search the required programs through ProgramFiles and ProgramFilesx86 folders.\r\n- To avoid conflicts, it will check that a keyword (inside `external_prog_list`) is part of the path.\r\n- added \"cache\" system\r\n\r\nIn my case, it found \r\n'C:\\\\Program Files (x86)\\\\Graphviz2.38\\\\bin\\\\dot.exe'\r\n'C:\\\\Program Files (x86)\\\\Adobe\\\\Acrobat Reader DC\\\\Reader\\\\AcroRd32.exe'",
    "head_branch": "fix-find-exe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[External/Windows] Fixed win_find_exe (#503)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb34aa88c0a76e0a51e5d",
    "number": 501,
    "body": "per rfc7252 section 3.1, coap options are ordered by their Option Number. However, the order of options with the same number should not be changed.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #501 from todfreed/master\n\ncoap: dont reorder options having the same option number"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb34ba88c0a76e0a51e5e",
    "number": 500,
    "body": "I noticed that when autocompletion was not available, on some objects, tabbing would crash.\r\n\r\nThat fixes it.",
    "head_branch": "fix-completion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #500 from gpotter2/fix-completion\n\n[Windows/Two lines fix] autocompletion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb34ba88c0a76e0a51e5f",
    "number": 499,
    "body": "Made the voip_play functions work again (fixed bugs) + adapted them to work under windows\r\n\r\nIt theorically work under linux, but i couldn't test it.\r\n\r\nFixes:\r\n- Remove FIFO usage: not working under windows\r\n- Several fixes on the functions (IP packet field detection, RTP not properly used)",
    "head_branch": "fix-voip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Modules] Fix voip_play (#499)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb34ca88c0a76e0a51e60",
    "number": 498,
    "body": "This PR fixes the \"VBS fallback\" option when powershell is not available, which is currently broken.\r\n\r\nThis is due because the VBS parser works line by line, and when an object (like the IP) is not available on an interface, it would skip this line and break everything\r\n\r\nIt also adds tests and moves the MAC fix directly in the parser.",
    "head_branch": "patch-windows-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #498 from gpotter2/patch-windows-tests\n\n[Windows] Fixed VBS fallback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb34da88c0a76e0a51e61",
    "number": 497,
    "body": "Here are some tests for 802.11. I also suppressed a useless function and comments from the code.",
    "head_branch": "codecov_7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #497 from guedou/codecov_7\n\n[coverage] Dot11 tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb34ea88c0a76e0a51e62",
    "number": 496,
    "body": "Hey !\r\n\r\nI've finally found a way to support Automaton on windows ! That fixes https://github.com/secdev/scapy/issues/451\r\n\r\nEvery thing except `external_fd` will work exactly as on linux 😄 \r\n`external_fd` will require a `ObjectPipe` instance instead of a `os.pipe` because of the unavailability of `select.select`\r\n\r\nHope it looks good.\r\n\r\n@guedou",
    "head_branch": "fix-automaton",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Windows/coverage] Fix and Support automaton (#496)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb34fa88c0a76e0a51e63",
    "number": 495,
    "body": "The separated commits are meaningful and may help reviewing this PR.\r\n  - When `socket.inet_{pton,ntop}` functions exist, Scapy's `inet_{pton,ntop}` will support any address family supported by the `socket` module function.\r\n  - Addresses like `\"1234:5678:9abc:def0:1234:5678:9abc:def0:\"` will no longer erroneously be accepted by Scapy's `inet_pton` implementation.\r\n  - Exceptions raised by Scapy's implementations mimic those from the `socket` module.\r\n  - Some more test cases have been added.",
    "head_branch": "fix-inet6addr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #495 from p-l-/fix-inet6addr\n\ninet_{pton,ntop}: reorganize, cleanup and improve tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb350a88c0a76e0a51e64",
    "number": 494,
    "body": "I came across two undesired warnings from `ipsec.py`.\r\n\r\nThe first one was caused by the absence of `pycrypto`, which we don't use anymore.\r\n\r\nThe second one was caused by the location of `ModeWithAuthenticationTag` inside `cryptography`. It was moved from `interfaces` to `primitives.ciphers`, but this change does not seem to have been packaged in the latest stable Debian release.",
    "head_branch": "ipsec_warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #494 from mtury/ipsec_warning\n\nAsk for python-cryptography v1.7+ in warnings and documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb350a88c0a76e0a51e65",
    "number": 493,
    "body": "Here are some tests for ASN.1 related objects and utility functions.",
    "head_branch": "codecov_6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #493 from guedou/codecov_6\n\n[coverage] Tests for scapy/asn1/*"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb351a88c0a76e0a51e66",
    "number": 492,
    "body": "Fixes the 'FIXME' in pton_ntop.py\r\n  * Error out if the IPv4 address is not the last part of an IPv6 address.\r\n  * Error out if the IPv4 address (as part of IPv6 address) is invalid.",
    "head_branch": "pr/ipv4-addr-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #492 from hdnivara/pr/ipv4-addr-check\n\nError out incorrect IPv4 format in IPv6 addresses in inet_pton"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb352a88c0a76e0a51e67",
    "number": 491,
    "body": "This PR:\r\n  - Fixes short flags display (when `verbose=1`).\r\n  - No longer displays \"(Emph)\" (for example in `ls(IP)` for `src` and `dst` fields).\r\n  - Fixes tuple values display (for example `ls(IP(ttl=(1, 10)))`).\r\n",
    "head_branch": "fix-ls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #491 from p-l-/fix-ls\n\nEnhance and fix ls()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb353a88c0a76e0a51e68",
    "number": 490,
    "body": "",
    "head_branch": "fix-typo-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #490 from p-l-/fix-typo-tests\n\nFix typo in tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb354a88c0a76e0a51e69",
    "number": 489,
    "body": "Fixes https://github.com/secdev/scapy/issues/488",
    "head_branch": "fix-sendpfast",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #489 from gpotter2/fix-sendpfast\n\n[OneLineFix/TCPreplay] Replaced file_cache by preload_pcap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb355a88c0a76e0a51e6a",
    "number": 487,
    "body": "Fixes #486.",
    "head_branch": "fix-whoistest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #487 from p-l-/fix-whoistest\n\nRetry .whois() test on failure"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb356a88c0a76e0a51e6b",
    "number": 485,
    "body": "This PR brings several log fixes:\r\n\r\n- Fixes some warnings not being logged because `scapy.utils` was imported before the logging instance was correctly set up.\r\n- Removed duplicated `warning` function (in `utils.py` and `error.py`).\r\n- Removed `muteLogLoading` which was a bit dirty, for a handling directly in the `warning` function.\r\n- Removed old log (when pton_ntop) was not available\r\n- Adds a better PyX detection: will check the depedencies too to avoid `RuntimeError`, as in https://github.com/secdev/scapy/issues/436 or in https://github.com/secdev/scapy/issues/246\r\n\r\nNote: @p-l-  sorry for the PR to be so scattered (many files), but I had to replace all occurences of `utils.warning` usages to `error.warning`",
    "head_branch": "patch-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Logs] Several logs fixes: interractive + pyx + duplication (#485)\n\n* Better warning()\r\n\r\n* Tiny import fix\r\n\r\n* Several log fixes\r\n\r\n* Added docstrings\r\n\r\n* Fixed imports"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb356a88c0a76e0a51e6c",
    "number": 484,
    "body": "Fixes #392.",
    "head_branch": "fix-64bits",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #484 from p-l-/fix-64bits\n\nFix 64 bits architectures detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb357a88c0a76e0a51e6d",
    "number": 483,
    "body": "Here is another batch of tests.",
    "head_branch": "codecov_5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #483 from guedou/codecov_5\n\n[coverage] SCTP & DHCP tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb358a88c0a76e0a51e6e",
    "number": 482,
    "body": "The ubuntu ecdsa package is too old to work with scapy, so if you have installed ecdsa with:\r\n`sudo apt-get install python-ecdsa`\r\nThen there will be:\r\n`WARNING: can't import layer tls: __init__() takes exactly 5 arguments (6 given)`\r\n\r\nI don't find this explicit enough, so I've added a tiny test to check if the function is useable...",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb359a88c0a76e0a51e6f",
    "number": 481,
    "body": "That fixes a few tiny bugs:\r\n- AppVeyor: `'git' is not recognized as an internal or external command.........`\r\n- Removed old comments\r\n- runtests.bat: removed some linux tests",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[coverage/Tiny fixes] Fixed some appveyor.yml tests (#481)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb35aa88c0a76e0a51e70",
    "number": 480,
    "body": "Hello, I've implemented support for protocols used with PPTP VPN.\r\nThis includes support for Enhanced GRE headers defined in RFC 2637, PPP Link Control Protocol and PPTP Control Connection Protocol defined in RFC 2637.\r\nI will be glad if these will became part of Scapy project.",
    "head_branch": "pptp_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #480 from jsebechlebsky/pptp_support\n\nPPTP support (Enhanced GRE, PPP LCP, PPTP Control Connection)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb35ba88c0a76e0a51e71",
    "number": 479,
    "body": "Fixes ppi_geotag's part in https://github.com/secdev/scapy/issues/432 + added a few tests",
    "head_branch": "fix-modules-windows",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Windows] Fixed ppi_geotag (#479)\n\n* Fixed ppi_geotag on windows\r\n\r\nand added tests\r\n\r\n* More tests + static EPOCH"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb35ca88c0a76e0a51e72",
    "number": 478,
    "body": "This is following https://github.com/secdev/scapy/pull/473 to actually add proper real session tests.\r\nIt also fixed tiny related session bugs.",
    "head_branch": "fix-pickle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[coverage] Improved main.py tests (#478)\n\n* Improved main.py tests\r\n\r\n* Small fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb35ca88c0a76e0a51e73",
    "number": 477,
    "body": "Tests added. This fixes this bug:\r\n```\r\n>>> class Test(Packet): fields_desc = [SourceIPField(\"sourceip\", None)]\r\n... \r\n>>> Test(str(Test())).sourceip\r\n'0.0.0.0'\r\n>>> Test().sourceip\r\n'192.168.0.1'\r\n\r\n```",
    "head_branch": "fix-ipsource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #477 from p-l-/fix-ipsource\n\nMake SourceIPField() .i2m() and i2h() methods consistent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb35da88c0a76e0a51e74",
    "number": 476,
    "body": "This is a rework from PR #294 for supporting TLS in Scapy.\r\n\r\nIt relies on the `cryptography` library which was adopted with PR #371.\r\nThe `pycrypto` and `ecdsa` modules are no longer needed.\r\n\r\nDocumentation taken from the `__init__.py`:\r\n\r\nMain features:\r\n- X.509 certificates parsing/building.\r\n- RSA & ECDSA keys sign/verify methods.\r\n- TLS records and sublayers (handshake...) parsing/building. Works with versions SSLv3, TLS 1.0, 1.1 and 1.2. This may be enhanced by a TLS context. For instance, if scapy reads a ServerHello with version TLS 1.2 and a cipher suite using AES, it will assume the presence of IVs prepending the data. See test/tls.uts for real examples.\r\n- TLS encryption/decryption capabilities with the usual ciphersuites. Once again, the TLS context enables scapy to transparently send/receive protected data if it learnt the session secrets. Note that if scapy acts as one side of the handshake (e.g. reads all server-related packets and builds all client-related packets), it will indeed compute the session secrets.\r\n- TLS client & server basic automatons, provided for testing and tweaking purposes. These make for a very primitive TLS stack.\r\n- Additionally, a basic test PKI (key + certificate for a CA, a client and a server) is provided in tls/examples/pki_test.\r\n\r\nUnit tests:\r\n- Various cryptography checks.\r\n- Reading a TLS handshake between a Firefox client and a GitHub server.\r\n- Test our TLS server against s_client with different cipher suites.\r\n- Test our TLS client against our TLS server (s_server is unscriptable).\r\n\r\n\r\nTODO list (may it be carved away by good souls):\r\n- Features to add (or wait for) in the `cryptography` library:\r\n        - no limitation on FFDH generator size;\r\n          (remove line 88 in cryptography/hazmat/primitives/asymmetric/dh.py)\r\n        - CCM and CHACHA20-POLY1305 ciphers;\r\n        - ECDH curves (x25519 and x448) from RFC 7748;\r\n        - FFDH groups from RFC 7919;\r\n        - the so-called 'tls' hash used with SSLv3 and TLS 1.0;\r\n        - the simple DES algorithm;\r\n        - the compressed EC point format.\r\n\r\n- About the automatons:\r\n        - Enrich the automatons. The client should be able to receive data at any time, and to send as much data as wanted from stdin (for now, only one predefined data message may be sent following the handshake). The server should stay online even after the first client leaves. Then we could look at more complicated behaviours like renegotiation and resumption. We might get some help from [tintinweb/scapy-ssl_tls](https://github.com/tintinweb/scapy-ssl_tls).\r\n        - Add some examples which illustrate how the automatons could be used. Typically, we could showcase this with Heartbleed.\r\n        - Split up parts of the automaton, e.g. when our server builds the ServerHello, Certificate, ServerKeyExchange and ServerHelloDone in the same should_REPLY_TO_CH method.\r\n        - Make the automatons tests more robust and less consuming.\r\n        - Allow the server to store both one RSA key and one ECDSA key, and select the right one to use according to the ClientHello suites.\r\n        - Find a way to shutdown the automatons sockets properly without simultaneously breaking the unit tests.\r\n\r\n- Miscellaneous:\r\n        - Implement TLS 1.3 structures and automatons. :D\r\n        - Implement SSLv2 structures and automatons. xD\r\n        - Mostly unused features : DSS, fixed DH, SRP, IDEA, char2 curves...\r\n        - Check FFDH and ECDH parameters at SKE/CKE reception.\r\n        - Go through the kx_algs and see what may be commented out.\r\n        - Define several Certificate Transparency objects.\r\n        - Enhance PSK and session ticket support.\r\n\r\n\r\n",
    "head_branch": "tls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #476 from mtury/tls\n\nAdd TLS support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb35ea88c0a76e0a51e75",
    "number": 475,
    "body": "Fixes the quotes (any param would not start scapy)",
    "head_branch": "fix-quotes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #475 from gpotter2/fix-quotes\n\n[Windows] Fix quotes under windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb35fa88c0a76e0a51e76",
    "number": 474,
    "body": "Whois on scapy was only using the `whois` command.\r\nAs it's not available on windows, I've added a util function to perform the request.\r\n\r\nEdit: updated with my own code",
    "head_branch": "fix-whois",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Windows] Whois support (#474)\n\n* Fix whois on Windows\r\n\r\n* Better whois server and parsing\r\n\r\n* Small fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb360a88c0a76e0a51e77",
    "number": 473,
    "body": "Those are tiny fixes:\r\n- Moved the instanciation of `__buildin__` inside a function\r\n- Added tests for `save_session` and `load_session`",
    "head_branch": "fix-pickle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #473 from gpotter2/fix-pickle\n\n[coverage] main.py tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb361a88c0a76e0a51e78",
    "number": 472,
    "body": "This adds gtpv2 parsing and tests as a contrib module.",
    "head_branch": "gtpv2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #472 from Osso/gtpv2\n\nContrib gtp v2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb362a88c0a76e0a51e79",
    "number": 471,
    "body": "This makes it possible to write `if pkt[TCP].flags.S: [...]` and `pkt[TCP].flags.S = True`.\r\n\r\nFixes #107.",
    "head_branch": "enh-flags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #471 from p-l-/enh-flags\n\nIntroduce FlagValue() objects to represent FlagsField() values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb362a88c0a76e0a51e7a",
    "number": 469,
    "body": "Fixes #468.",
    "head_branch": "fix-link-appveyor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add  link to Appveyor status (was just an image)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb363a88c0a76e0a51e7b",
    "number": 466,
    "body": "This PR brings a new feature to IP/IPv6 source fields (using `None` as destination means \"use the interface that has the default route\") and fixes a bug in all the source fields (`packet[layer].field` could return a different value than `packet.field`, an example has been added to the tests).",
    "head_branch": "fix-source-fields",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix a bug in Source*Fields: p[layer].field != p.field\n\nA new test that triggers the bug (with ARPSourceMACField) has been added."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb364a88c0a76e0a51e7c",
    "number": 465,
    "body": "> Comes from another branch than https://github.com/secdev/scapy/pull/460\r\n\r\nI've introduced a bug in #454: The auto-completion under windows was not working anymore.\r\n\r\nThis fixes it. This commit also add unit tests for the main.py `ìnterract()` which contains:\r\n- Basic tests\r\n- An autocompletion test",
    "head_branch": "fix-readline",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Windows] Fix AutoCompletion + add tests (#465)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb365a88c0a76e0a51e7d",
    "number": 464,
    "body": "Here are some fixes and tests for VRRP, L2TP, HSRP, RIP, & Radius.",
    "head_branch": "codecov_4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #464 from guedou/codecov_4\n\n[coverage] VRRP, L2TP, HSRP, RIP, & Radius tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb366a88c0a76e0a51e7e",
    "number": 463,
    "body": "These are simple tests to check the behavior of classes implemented in `scapy/as_resolvers.py`",
    "head_branch": "codecov_3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #463 from guedou/codecov_3\n\n[coverage]  AS resolvers tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb367a88c0a76e0a51e7f",
    "number": 462,
    "body": "We added:\r\n- the update messages (GTPUpdatePDPContextRequest and\r\n\tGTPUpdatePDPContextResponse)\r\n- several Information Elements (IE)\r\n- few tests\r\n\r\nAnd the old test still works. ",
    "head_branch": "gtp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #462 from alexsult/gtp\n\nImprovement of the GTPv1 support."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb368a88c0a76e0a51e80",
    "number": 461,
    "body": "This PR updates the CDP module (scapy/contrib/cdp.py) : \r\n\r\n- Fields were added in _CDPMsgProtoHello_ (based on documentation found online, and on the output of the `sh cdp neighbors detail` command)\r\n- The VoIP VLAN Query TLV (_CDPMsgVoIPVLANQuery_) is partially implemented (the VLAN id is decoded)\r\n- _CDPMsgTrustBitmap_ and _CDPMsgUntrustedPortCoS_ classes were added\r\n\r\nExamples / regression tests are provided in cdp.uts\r\n",
    "head_branch": "cdp-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #461 from plorinquer/cdp-update\n\nUpdates the CDP module (scapy/contrib/cdp.py)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb368a88c0a76e0a51e81",
    "number": 460,
    "body": "I've introduced a bug in https://github.com/secdev/scapy/pull/454\r\nThe auto-completion was not working anymore.\r\n\r\nWe got a problem:\r\n- the autocompletion system works with pyreadline, BUT there is a bug on pyreadline and functions are not detected (see https://github.com/secdev/scapy/pull/454)\r\n- the default interpreter (so not pyreadline) detects the functions, BUT doesn't support autocompletion\r\n\r\nThis is a custom created function that handle both of the functions...\r\n\r\nTiny problem: i have not managed to print the color of `>>>` (it used to be in blue)\r\n@guedou Can you check if it works for you too, as the tests doesn't run it ?\r\n\r\nDo you think that it's important to keep the colors ? If yes, any idea?",
    "head_branch": "fix-console",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb369a88c0a76e0a51e82",
    "number": 459,
    "body": "  - LLTDAttribute() produces a Raw instance (or crashes, when\r\n    conf.debug_dissector is set).\r\n  - str(LLTDAttribute(type=18)) crashes.",
    "head_branch": "fix-lltd-empty",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #459 from p-l-/fix-lltd-empty\n\nFix empty LLTDAttribute build & dissect"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb36aa88c0a76e0a51e83",
    "number": 458,
    "body": "",
    "head_branch": "enh-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #458 from p-l-/enh-tests\n\nNew defrag() test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb36ba88c0a76e0a51e84",
    "number": 457,
    "body": "This PR adds a class for the EAP-MD5 authentication method. Regression tests have been added in regression.uts .\r\n",
    "head_branch": "eap-md5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #457 from plorinquer/eap-md5\n\nEAP_MD5 class added."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb36ca88c0a76e0a51e85",
    "number": 456,
    "body": "Sending a IPv6 packet without `Ether.dst` mac defined fails when there is not default IPv6 route defined with the following message:\r\n\r\n```\r\nWARNING: No route found for IPv6 destination fd00:200::1 (no default route?)\r\n```\r\n\r\nBecause, when there is no default IPv6 route defined, `conf.iface6` is initialized to the loopback interface and the `conf.route6.route()` method is called with `dev=conf.iface6`.\r\n\r\nAccording to the docstring of `conf.route6.route()`:\r\n\r\n```\r\n  if optional 'dev' parameter is provided a specific interface,\r\n  filtering is performed to limit search to route associated to\r\n  that interface.\r\n```\r\n\r\nThis will result in the system never finding on which interface it should send a NDP packet.\r\n\r\nDo not call `conf.route6.route()` with `dev=conf.iface6`.",
    "head_branch": "fixndpnodefaultroute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #456 from 6WIND/fixndpnodefaultroute\n\nlayers/inet6/routes: fix ndp resolution without default route"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb36da88c0a76e0a51e86",
    "number": 455,
    "body": "Fixes https://github.com/secdev/scapy/issues/181\r\n\r\nPlease Ignore codecov failure",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #455 from gpotter2/patch-1\n\n[Windows/Small fix] Add missing stop_filter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb36da88c0a76e0a51e87",
    "number": 454,
    "body": "The `readfunc` function is useless: the python default one works better than the libreadline one, which is buggy and here is why:\r\n\r\nUsing the libreadline `readfunc`:\r\n```\r\n>>> def test():\r\n...     print \"hello\"\r\n>>>     print \"world\"\r\n  File \"<console>\", line 1\r\n    print \"world\"\r\n    ^\r\nIndentationError: unexpected indent\r\n>>>\r\n```\r\n\r\nUsing the default one:\r\n```\r\n>>> def test():\r\n...     print \"hello\"\r\n...     print \"world\"\r\n...\r\n>>>\r\n```\r\n\r\nAs you can see the ident is not detected properly with libreadline, which makes the user unvailable to copy paste functions inside scapy...",
    "head_branch": "fix-console",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Windows/Tiny fix] Removed outdated readfunc function (#454)\n\nRemoved outdated readfunc fonction"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb36ea88c0a76e0a51e88",
    "number": 453,
    "body": "Also adds a codecov badge to README.",
    "head_branch": "codecov-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #453 from p-l-/codecov-badge\n\nTest send / sendp and sniff"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb36fa88c0a76e0a51e89",
    "number": 452,
    "body": "When the provided interface name is invalid, scapy won't show the error under windows.\r\n\r\nThis now raise the error correctly, in order to avoid issues like https://github.com/secdev/scapy/issues/436\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #452 from gpotter2/patch-1\n\n[Windows] Tiny fix to show error when interface does not exist"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb370a88c0a76e0a51e8a",
    "number": 450,
    "body": "This also includes some fixes for `tcpdump()`.\r\n\r\nThis can be useful to `sniff()` when you can run `tcpdump` (possibly via `sudo` or set-uid root) but cannot use the \"regular\" `L2listen` sockets:\r\n\r\n```Python\r\nconf.L2socket = L2ListenTcpdump\r\nsniff(prog=[\"sudo\", \"tcpdump\"], iface=\"eth0\")\r\n```",
    "head_branch": "enh-socket-tcpdump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #450 from p-l-/enh-socket-tcpdump\n\nAdd a tcpdump-based L2listen socket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb371a88c0a76e0a51e8b",
    "number": 449,
    "body": "This PR add codecov support for AppVeyor. This will help get a better understanding of the windows code that is actually tested.",
    "head_branch": "codecov_3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #449 from guedou/codecov_3\n\n[coverage] codecov appveyor support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb372a88c0a76e0a51e8c",
    "number": 448,
    "body": "Current output of `ls()` is bogus, and `ls(ICMPv6NIQueryIPv6)` crashes.",
    "head_branch": "fix-ls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #448 from p-l-/fix-ls\n\nFix ls(): fix layer names and handle tuple default values (test added)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb372a88c0a76e0a51e8d",
    "number": 447,
    "body": "@guedou I did not run performance tests to check whether the new code is faster. I suppose it will, when defining (not from a string) the sending or writing a lot of packets, but since this PR makes the code more complex, I think it's worth testing it before considering it. What do you think?",
    "head_branch": "enh-explicit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb373a88c0a76e0a51e8e",
    "number": 446,
    "body": "This PR adds support for the EAPOL-MKA (MACsec Key Agreement protocol) frames. Unit tests are provided in regression.uts ",
    "head_branch": "eapol-mka",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "EAPOL-MKA (MACsec Key Agreement protocol) support. (#446)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb374a88c0a76e0a51e8f",
    "number": 445,
    "body": "",
    "head_branch": "dot11_new_frames",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #445 from haim0n/dot11_new_frames\n\ndot11 ack frame dissection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb375a88c0a76e0a51e90",
    "number": 444,
    "body": "This can be done thanks to #435.",
    "head_branch": "enh-tcpdump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #444 from p-l-/enh-tcpdump\n\nGet constant values from \"consts\" since it is no longer in arch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb376a88c0a76e0a51e91",
    "number": 443,
    "body": "Hey,\r\n\r\nSo, as I mentioned earlier, I rewrote the ProfinetIO, ProfinetRTC and PROFIsafe contribution.\r\n\r\nReasons for doing so are the followings:\r\n- current **pnio.py** and **pnio_rtc.py** reference each other, so that we have a circular dependency and neither is usable without the other. For this reason, I merged the two files in a single one.\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L37\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio.py#L70\r\n- There was no framework to parse multiple chained PNIORealTime_IOxS, such those of referenced in **IEC-61158-6-10/FDIS ED 3, table 164, DataObjectElement**. For this reason, I implemented the feature in Pull Request #439 and I added the `is_extension_set` class method.\r\n- There was excessive memory consumption because of the way the `XShortEnumField` of the `ProfinetIO` layer was implemented. For this reason, I implemented the feature in Pull Request #442 and used callbacks to provide the enum conversions.\r\n- Several values were hard-coded without documentation, such as \r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L208\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L231\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L233\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L255\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L331\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L370\r\nSome of these values were totally stripped from the current version. Some others, when being the result of a sum, were splitted and each component were explicited, such as:\r\nhttps://github.com/X-Cli/scapy/blob/pnio/scapy/contrib/pnio.py#L180-L182\r\nFinally, where some hard-coded values remain, I documented where these figures were drawn from the specification.\r\n- The ProfinetRTCPDU \"Data\" (as in \"Data\" in **IEC-61158-6-10/FDIS ED 3, table 164, DataObjectElement**) layout that was defined in `scapy.config.conf.contribs['PNIO_RTC']` was incorrectly using only the `Ether.src` and `Ether.dst`. Specification dictates that `ProfinetIO.frameID` is similar to a \"VlanID\" and as such, the layout is actually dependant of the tuple `(Ether.src, Ether.dst, ProfinetIO.frameID)`.\r\nhttps://github.com/X-Cli/scapy/blob/pnio/scapy/contrib/pnio.py#L229\r\n- The ProfinetRealTime padding length was incorrectly assuming that all trailing null bytes were padding, while some of these null bytes can actually by \"data\" bytes.\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L208\r\nPadding is now always empty unless a layout is defined for a given `(Ether.src, Ether.dst, ProfinetIO.frameID)` tuple, and if there are trailing bytes.\r\n- The layout was defined as byte count from the end of the data field. \r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L178-L182\r\nThanks to Pull Request #439, the layout can now be defined as a simple list of layers.\r\nhttps://github.com/X-Cli/scapy/blob/pnio/scapy/contrib/pnio.uts#L129-L133\r\n- Lots of staticmethods were defined to discover part of the layout of a `PNIORealTimeRawData` layer.\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L235-L433\r\nWhile these methods may have some value for us, they are helpers that are not related to the general ProfinetIO use case. Moreover, they were largely untested. I totally stripped them. These helpers may be published separetely, someday, in a more global framework.\r\n- PROFIsafe layer was kind of rough, with a flag field only represented as a XByteField because of the many meaning each flag could take, depending on some contextual information, such as the layout for a given `(Ether.src, Ether.dst, ProfinetIO.frameID)` tuple.\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L457-L477\r\nI completely rewrote the PROFIsafe layer, by splitting it into several smaller, specialized, abstract layers.\r\nhttps://github.com/X-Cli/scapy/blob/pnio/scapy/contrib/pnio.py#L275-L290\r\nhttps://github.com/X-Cli/scapy/blob/pnio/scapy/contrib/pnio.py#L323-L337\r\nI also implemented a class builder to derivate from these layers according a data length, which is something dependent of the layout and the `(Ether.src, Ether.dst, ProfinetIO.frameID)` tuple.\r\nhttps://github.com/X-Cli/scapy/blob/pnio/scapy/contrib/pnio.py#L311-L321\r\nThe same kind of class builder was also implemeted for \"Raw\" PNIORealTime data.\r\nhttps://github.com/X-Cli/scapy/blob/pnio/scapy/contrib/pnio.py#L233-L244\r\nAn example of their usage can be found here:\r\nhttps://github.com/X-Cli/scapy/blob/pnio/scapy/contrib/pnio.uts#L181\r\nhttps://github.com/X-Cli/scapy/blob/pnio/scapy/contrib/pnio.uts#L130-L132\r\n- Several of the fields there were defined are now completely useless and were stripped.\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L106-L130\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio_rtc.py#L438-L455\r\n- Unit tests were not thourough. I added some tests, reaching 78% of code coverage, the remaining uncovered code being mostly \"switch cases\" returning static strings based on input.\r\n\r\nI hope this list of justifications is sufficient to convince you of the worth of this PR. If not, well, please ask for any additional justification.\r\n\r\nAs a side note, it is worth mentioning that the commit tree of this PR will automatically merge PR #439 and #442. I divided this PR into smaller once to ease the merging/validation process, especially since some of these PR are touching core Scapy files such as `fields.py`.\r\n\r\nThank you,\r\nCheers,\r\nFlorian",
    "head_branch": "pnio",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb377a88c0a76e0a51e92",
    "number": 442,
    "body": "Hey,\r\n\r\nWhile rewriting parts of the ProfinetIO contribution, I spotted a few lines that, I think, consumes a lot of memory and that could be optimized.\r\n\r\nhttps://github.com/secdev/scapy/blob/master/scapy/contrib/pnio.py#L45-L52\r\n\r\nThe required optimization is to use a callback where tests can be led on ranges instead of filling up a dict with sometimes up to a million identical strings.\r\n\r\nI implemented that feature and added tests for it (and for EnumFields in general, as they were lacking).\r\n\r\n@guedou told me to split the regression.uts file so that all tests related to fields would be in a separate unit test file. The rationale is that regression.uts is ever growing and is becoming somewhat bloated.\r\n\r\nCheers,\r\nFlorian",
    "head_branch": "cb_enum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #442 from X-Cli/cb_enum\n\nAdd callbacks to EnumFields for large ranges"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb377a88c0a76e0a51e93",
    "number": 441,
    "body": "This configuration file aims to specify codecov behaviour for our project. More specifically, it disables the `patch` feature that return false if the PR does not add enough coverage.",
    "head_branch": "codecov_config_file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #441 from guedou/codecov_config_file\n\n[coverage] Add a codecov configuration file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb378a88c0a76e0a51e94",
    "number": 440,
    "body": "",
    "head_branch": "dot11_block_ack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add dot11 block ack support (#440)\n\nAdd missing addr2 to block ack packet, improve addr2 validation performance."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb379a88c0a76e0a51e95",
    "number": 439,
    "body": "Hey,\r\nI am currently rewriting part of the ProfinetIO contribution, because some parts are not flexible enough to stick to the specs, and also because some assumptions were made that are not always true. ProfinetIO is an extremely flexible protocol, and it can be a daunting task to foresee all the implications of a design choice, at first glance. \r\nTo implement parts of the spec, I need a PacketListField that is more flexible than the current implementation. I feel like this might be of use in some other protocols as well (ping @plorinquer).\r\n\r\nThis PR adds the ability to have a PacketListField of heterogeneous Packet types with dynamic discovery of the next type. This discovery can be based on any elements including previously parsed packets, underlayers, remaining bytes (look ahead), and last parsed packet.\r\nThis implementation also adds the ability to parse PacketListFields where neither the length nor the number of elements can be predicted before parsing. This could be done previously using a length_from callback that did significant peeks into the string to parse, but it felt clumsy.\r\n\r\nCheers,\r\nFlorian",
    "head_branch": "HeterPLF",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #439 from X-Cli/HeterPLF\n\nAdd next_cls_cb attribute to PacketListField"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb37aa88c0a76e0a51e96",
    "number": 438,
    "body": "This fixes issue #408, fixes a similar issue with `ASN1F_CHOICE`, and provides a randval() method for `ASN1F_PACKET`.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #438 from mtury/master\n\nFix issue #408 : complex ASN1 fields randval()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb37ba88c0a76e0a51e97",
    "number": 435,
    "body": "Fixes https://github.com/secdev/scapy/issues/434\r\n\r\nJust to explain what i did:\r\n- Having the consts.py inside the arch/ folder isn't easy to use: a lot of stuff loaded from the arch/ folder requires to know which operating system is used. So i moved the file out of arch/\r\n- Removed useless import [here](https://github.com/secdev/scapy/pull/435/files#diff-a9f72b412e9acf78502c904846ff2c67L19)\r\n- Redirected several main modules (sendrecv, route) to consts.py (instead of arch/consts.py) so they could be loaded without arch.\r\n- Added a check inside arch/, to avoid loading `compatibility.py` if arch/ was imported from `route.py` (because route.py does not need it, but compatibility.py needs route.py so it created an import loop)",
    "head_branch": "fix-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Windows] Fix import loops (#435)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb37ca88c0a76e0a51e98",
    "number": 431,
    "body": "Starting over with my PR (old one was  #395)\r\nI hope this is better now (regarding rebase instead of merge)\r\nShould fix issue #359 and also includes regression tests. When compressing the notation of an IPv6 address it is according to [RFC 5952](https://tools.ietf.org/html/rfc5952)\r\n\r\nA note on the implementation: I separated my fix into a own function for better unit-testing.",
    "head_branch": "issue_#359",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix issue #359: Bin to str conversion of IPv6 addresses (#431)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb37ca88c0a76e0a51e99",
    "number": 429,
    "body": "I had not tested it last time... \r\nWhen running  `python`, the first parameter is the file. So here all the arguments were passed as the file name...",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #429 from gpotter2/patch-1\n\n[Windows] fix misplaced quotes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb37da88c0a76e0a51e9a",
    "number": 428,
    "body": "I tested this and noticed wireshark wasn't parsing the message correctly. Turns out the length is wrong.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix IA_PD length error (#428)\n\n* Fix IA_PD length error\r\n\r\nI tested this and noticed wireshark wasn't parsing the message correctly. Turns out the length is wrong.\r\n\r\n* Update regression.uts\r\n\r\nFix test for DHCP6OptIA_PD\r\n\r\n* Update length of DHCP6OptIA_PD in test."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb37ea88c0a76e0a51e9b",
    "number": 426,
    "body": "This PR add systematic unit tests to `scapy/*.py` files. It also fixes one issue and removes a useless function.",
    "head_branch": "codecov_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #426 from guedou/codecov_2\n\n[coverage] More unit tests for scapy/*.py files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb37fa88c0a76e0a51e9c",
    "number": 425,
    "body": "Here is a patch that provides support for [codecov](https://codecov.io). That will help us improve unit tests and Scapy code coverage. So far, I only added support for Travis, and did not find the time to do the AppVeyor one. We might want to add a `.coveragerc` file to alter how coverage results are computed.\r\n\r\nThe `TRAVIS_SUDO` variable was renamed `SCAPY_SUDO` as TRAVIS_SUDO is an internal Travis env variable.\r\n\r\nThe output is available at https://codecov.io/gh/secdev/scapy",
    "head_branch": "codecov",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #425 from guedou/codecov\n\n[coverage] codecov support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb380a88c0a76e0a51e9d",
    "number": 424,
    "body": "As defined here :\r\nhttps://tools.ietf.org/html/draft-ietf-nvo3-vxlan-gpe-03#section-5.3\r\n\r\nSigned-off-by: Gabriel Ganne <gabriel.ganne@qosmos.com>",
    "head_branch": "bind-vxlan-gpe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bind vxlan-gpe over udp on port 4790 (#424)\n\n* bind vxlan-gpe over udp on port 4790\r\n\r\nAs defined here :\r\nhttps://tools.ietf.org/html/draft-ietf-nvo3-vxlan-gpe-03#section-5.3\r\n\r\nSigned-off-by: Gabriel Ganne <gabriel.ganne@qosmos.com>\r\n\r\n* Typo fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb380a88c0a76e0a51e9e",
    "number": 423,
    "body": "One can now use tcpdump or tshark to dissect packets from\r\nScapy. This can help, for example, to check Scapy's dissectors",
    "head_branch": "enh-tcpdump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #423 from p-l-/enh-tcpdump\n\nIntroduce tcpdump() function"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb381a88c0a76e0a51e9f",
    "number": 422,
    "body": "Fixes #420",
    "head_branch": "fix-win",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #422 from p-l-/fix-win\n\nFix Windows bat files to work with spaces in paths (@gpotter2)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb382a88c0a76e0a51ea0",
    "number": 421,
    "body": "`log_runtime`, `ETH_P_ALL` and `PcapTimeoutElapsed` are used in this code but are not imported. This causes sniff and sndrcv functions to fail on windows.\r\nIt seems in #322 there was an attempted to take only the import fixes from #313 but it missed this 3 imports.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #421 from DorElias/patch-1\n\nFix import errors in windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb383a88c0a76e0a51ea1",
    "number": 419,
    "body": "Fixes #418",
    "head_branch": "fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #419 from bartex80/fixes\n\nFix ipv4 fragment for already fragmented packets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb384a88c0a76e0a51ea2",
    "number": 417,
    "body": "This is #267 with conflicts fixed + cleanup.\r\nFixes #267.\r\n",
    "head_branch": "Romounet-srfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #417 from p-l-/Romounet-srfix\n\nFixed a bug in the sendrecv method when using multi-threading"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb384a88c0a76e0a51ea3",
    "number": 416,
    "body": "This fixes at least #415 (for which a new test has been added)",
    "head_branch": "fix-415",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #416 from p-l-/fix-415\n\nPreserve .overloaded_fields in .clone_with()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb385a88c0a76e0a51ea4",
    "number": 414,
    "body": "This PR, although not as complete as I would like it to be, improves the existing BGP module.\r\nUnit tests are provided in bgp.uts\r\n",
    "head_branch": "bgp-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "BGP module update. (#414)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb386a88c0a76e0a51ea5",
    "number": 413,
    "body": "",
    "head_branch": "enh-dns",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #413 from p-l-/enh-dns\n\nAdd & test DNS over TCP, update dnstypes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb387a88c0a76e0a51ea6",
    "number": 412,
    "body": "This fixes #195 (support for Pcap files with nanosecond precision timestamp) + another (unreported) issue: timestamps are wrong in PcapNg format, discovered when writing new tests.\r\n\r\nThis also add support for arbitrary time precision in PcapNg, and for two (less common but sometimes found) more packet blocks.\r\n\r\nNew tests have been added to prevent regressions.",
    "head_branch": "fix-tstamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #412 from p-l-/fix-tstamp\n\nImprove Pcap & PcapNg support (particularly timestamps)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb388a88c0a76e0a51ea7",
    "number": 411,
    "body": "Related to https://github.com/secdev/scapy/issues/410\r\n- Added fields on CookedLinux\r\n- Tiny tiny tiny fix: added description to L3pcapsocket",
    "head_branch": "fix-sll",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #411 from gpotter2/fix-sll\n\n[Layers] Added fields desc on CookedLinux + L3pcapsocket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb389a88c0a76e0a51ea8",
    "number": 409,
    "body": "This fixes several tiny bugs (some with no effect) and adds some tests where possible and appropriate (the added tests fail with the current code).",
    "head_branch": "fix-tiny-bugs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #409 from p-l-/fix-tiny-bugs\n\nFix tiny bugs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb38aa88c0a76e0a51ea9",
    "number": 406,
    "body": "As said in https://github.com/secdev/scapy/pull/398\r\nThis part only:\r\n- Avoid Scapy from crashing when wpcap.dll is missing\r\n- Disable the main functions",
    "head_branch": "fix-nowpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Windows/Networking] Support no wpcap.dll (#406)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb38aa88c0a76e0a51eaa",
    "number": 405,
    "body": "As said https://github.com/secdev/scapy/pull/398\r\nThis part only:\r\n- Fixes IPv4 get_routes_post2008 function\r\n- Modified version detection to support Windows 8.1+ (and windows 10)\r\n- Add the LOOPBACK_NAME on Windows\r\n- Fixed _exec_query_ps : Credits: @weyou\r\n\r\nThose are only IPv4 fixes.\r\n\r\n@p-l- @guedou Please review this one first, as the other one requires it...",
    "head_branch": "fix-loopback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Windows/Networking] Fix LOOPBACK_NAME + IPv4 read_routes (#405)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb38ba88c0a76e0a51eab",
    "number": 402,
    "body": "As said https://github.com/secdev/scapy/issues/399#issuecomment-268040969",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #402 from gpotter2/patch-1\n\nAdded roadmap link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb38ca88c0a76e0a51eac",
    "number": 398,
    "body": "> Well this is https://github.com/secdev/scapy/pull/380 and https://github.com/secdev/scapy/pull/397 but a way more cleaner...\r\n\r\n**IT IS FINALLY WORKING**\r\n\r\nSo as today, IPv6 routes are not supported by scapy on Windows. Here is the IPv6 routes support on Windows 😃 \r\n\r\nThis patch:\r\n\r\n- Fixes some route6.py functions to work on Windows\r\n- Removes double warning logs when loading scapy (when winpcap is not installed)\r\n- Add regression.uts tests\r\n\r\nWhat it returns:\r\nhttp://pastebin.com/hUU6ykcc\r\n\r\nI've tested it: it's possible to send IPv6 packets",
    "head_branch": "gpotter2-ipv6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Networking/Windows] Added IPv6 support (#398)\n\nFix IPv6 support on Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb38da88c0a76e0a51ead",
    "number": 397,
    "body": "**Do not merge**\r\n\r\n> Well this is https://github.com/secdev/scapy/pull/380 but a way more cleaner...\r\n\r\n\r\nSo as today, IPv6 routes are not supported by scapy on Windows. I guess we can modify that...\r\n\r\nThis patch:\r\n\r\n- Fixes IPv4 get_routes_post2008 function\r\n- Modified version detection to support Windows 10+\r\n- Add the LOOPBACK_NAME on Windows\r\n- Fixes some route6.py functions to work on Windows\r\n- Removes double warning logs when loading scapy (when winpcap is not installed)\r\n\r\nWhat it returns:\r\nhttp://pastebin.com/hUU6ykcc",
    "head_branch": "fix-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb38ea88c0a76e0a51eae",
    "number": 395,
    "body": "Fixes #359. IPv6 adresses containing multiple zero blocks are now correctly handled. Also the longest zero block is selected to compact.",
    "head_branch": "issue_#359",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb38fa88c0a76e0a51eaf",
    "number": 394,
    "body": "Fixes #393\r\nAlso, fixes #355\r\n\r\n`filter=` was not documented in `sniff()` (#355) because it is only passed to the socket. For the same reason, it was not supported with `offline=`, because no socket is used in that case.\r\n\r\nSince there is no way (apart from writing a BPF filter parser in Scapy) to filter a PCAP, this patch uses `tcpdump`.",
    "head_branch": "fix-sniff-offline",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support (BPF) filter in sniff() with offline parameter set (#394)\n\n* Support (BPF) filter in sniff() with offline parameter set\r\n\r\nFixes #393\r\nAlso, fixes #355\r\n\r\n* Add tests for wrpcap() and sniff(offline=)\r\n\r\nas suggested by Guillaume.\r\n\r\nAlso, cleanup regression.uts since it was a pain to find a place\r\nto add those tests.\r\n\r\n* Fix PATH for tcpdump with non-root user\r\n\r\n* Do not run tcpdump tests when tcpdump is not available\r\n\r\n* Appveyor tests: install WinDump.exe\r\n\r\nThanks @gpotter2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb390a88c0a76e0a51eb0",
    "number": 391,
    "body": "Display AppVeyor status in README, just like Travis-CI.\r\nThanks @guedou that's great!",
    "head_branch": "appveyor-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #391 from p-l-/appveyor-badge\n\nAdd AppVeyor badge"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb390a88c0a76e0a51eb1",
    "number": 389,
    "body": "Here is an attempt to add Windows Continuous Integration to Scapy using AppVeyor. The patch is pretty _wide_ and does not only contain an `appveyor.yml` file. We might want to reject this PR and split it into smaller ones.\r\n\r\nSome notes about this PR:\r\n- [it works](https://ci.appveyor.com/project/guedou/scapy-appveyor) and does not break Travis\r\n- the `get_if_raw_addr()` API on Windows was changed to accept `conf.iface` directly\r\n- `route_add_loopback()` was added as a trick to be able to use 127.0.0.1 as the source address on Windows. Otherwise most of unit tests fails as the real IP address is selected\r\n- code removed by PR#363 was partially added: there is no inet_ntop/inet_pton on Windows and they must be emulated\r\n- automaton are broken on Windows. The corresponding tests were disabled\r\n\r\nHow does this look ?",
    "head_branch": "appveyor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #389 from guedou/appveyor\n\nAppVeyor support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb391a88c0a76e0a51eb2",
    "number": 388,
    "body": "Hey,\r\n\r\nI have been working on a HTTP/2 module for Scapy, for the past few months.\r\nHTTP/2 is a very complex protocol, hence the size of this pull request.\r\nHTTP/2 replaces the more traditional textual encoding of HTTP/1.1 by a binary representation of much the same queries. It also provides stream multiplexing, stream priority management, window management, and framing.\r\n\r\nThis pull request contains a full implementation of the HPack (RFC7541) and HTTP/2 (RFC7540) specifications. It also provides the related unit tests and a tutorial. The tutorial, formated as a iPython Notebook, demonstrates how to use the module to send three queries to www.google.fr over HTTP/2.\r\n\r\nThanks.\r\nCheers,\r\nFlorian",
    "head_branch": "http2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #388 from X-Cli/http2\n\nHTTP/2 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb392a88c0a76e0a51eb3",
    "number": 387,
    "body": "This setting, when set to False, will exclude IP layers which encapsulate\r\nanother IP layer from the checks to tell if a packet is an answer to\r\nanother one.\r\n\r\nFixes #383",
    "head_branch": "feature-answer-ipip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add conf.checkIPinIP (#387)\n\n* Add conf.checkIPinIP\r\n\r\nThis setting, when set to False, will exclude IP layers which encapsulate\r\nanother IP layer from the checks to tell if a packet is an answer to\r\nanother one.\r\n\r\nFixes #383\r\n\r\n* conf.checkIPinIP affects both IP() and IPv6()\r\n\r\nSetting conf.checkIPinIP will handle IP()/IP(), IP()/IPv6(),\r\nIPv6()/IP(), IPv6()/IPv6().\r\n\r\nThanks @guedou!\r\n\r\n* Clean-up IP.hashret and .answers code\r\n\r\n* Add tests for .hashret() and .answers()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb393a88c0a76e0a51eb4",
    "number": 386,
    "body": "Tiny fix related to https://github.com/secdev/scapy/issues/385",
    "head_branch": "fix-3-console",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #386 from gpotter2/fix-3-console\n\n[Windows] Fix autocompletion crash"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb394a88c0a76e0a51eb5",
    "number": 384,
    "body": "python-pcapy interface next() function did not properly catch an edge case in which the incoming packet did not exist or the packet capture stream has ended.\r\n\r\nFor a fix, I added an if statement on the packet header variable to check if the packet exists. If the packet doesn't exist, the function returns nothing, otherwise it errors out on h.getts() method since h is None which was the original issue.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #384 from ddubson/master\n\n[bug] fix issue with python-pcapy interface next() function"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb395a88c0a76e0a51eb6",
    "number": 382,
    "body": "Tiny fix just to replace the ugly \"cmd.exe.......\" stuff with \"scapy\" or \"UTscapy\"",
    "head_branch": "fix-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #382 from gpotter2/fix-2\n\n[Windows] Updated bin scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb396a88c0a76e0a51eb7",
    "number": 380,
    "body": "EDIT: MOVED TO https://github.com/secdev/scapy/pull/397",
    "head_branch": "fix-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb397a88c0a76e0a51eb8",
    "number": 379,
    "body": "**Do not merge yet ! This does not really works yet**\r\n\r\nI think we could make windows support IPv6... And i've started to search what was missing\r\n\r\nHere's just the 'read_routes6' function, updated, and some tiny fixes in other files related to it...\r\n\r\nThat's to share with you what i've done so far, and i don't know how i could get the `cset` to be correctly filled...\r\n\r\nA sample of what i can get for now:\r\nhttp://pastebin.com/FsXuNgzX\r\n\r\nAny ideas ?",
    "head_branch": "fix-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb397a88c0a76e0a51eb9",
    "number": 378,
    "body": "As many people (https://github.com/secdev/scapy/issues/358) do not find/read the doc before running scapy, i've made the doc more obvious...\r\n\r\n* Added missing links for Windows\r\n* Updated old depedencies links (Windows)\r\n* Added .bat to build the docs on a windows computer\r\n* Some new easier installation instructions (for Windows)\r\n* Tiny fixes in doc\r\n* Removed useless depedencies\r\n* Some other format fixes",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #378 from gpotter2/master\n\n[DOCS] Installation + Links fixed (Windows)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb398a88c0a76e0a51eba",
    "number": 376,
    "body": "In the pcapdnet() backend it was not possible to run the\r\nL{2,3}{pcap,dnet}Socket in promiscuous mode.  Add a promisc option\r\nto sr(), sr1(), srp(), srp1(), srflood(), srpflood() so that the\r\nuser can choose the behavior.\r\n\r\nKeep the default non-promiscuous as in most cases sndrcv() sniffs\r\nan answer that is directed to the sender.\r\n\r\nAs I an trying to fix things in the 2.3.3 release for OpenBSD, I\r\ndid not use the new bpf backend for BSD.  I have noticed that the\r\nnew behavior for Linux is moving towards promisc by default for\r\nsr().  Although I am not convinced that this is a good idea, I can\r\nalso change pcapdnet that way.\r\n",
    "head_branch": "sndrcv-promisc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #376 from bluhm/sndrcv-promisc\n\nAllow to set promisc mode in sndrcv()."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb399a88c0a76e0a51ebb",
    "number": 375,
    "body": "On OpenBSD use the non-blocking recv() after select() in sndrcv().\r\nThat was already done for FreeBSD and Darwin.  This fixes sniffing\r\non real hardware with libdnet backend.\r\n\r\nI have found this on scapy 2.3.3 without bpf implemention.  But\r\nwhen I enable dnet with SCAPY_USE_PCAPDNET=y this is still relevant.\r\n",
    "head_branch": "sndrcv-openbsd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #375 from bluhm/sndrcv-openbsd\n\nUse special code path for OpenBSD in sndrcv."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb39aa88c0a76e0a51ebc",
    "number": 374,
    "body": "I create a file to analyze opc-da, it is not completed but I still working on it. It is usefull to have a first experience in opc-da.\r\nI add some modifications in modbus to complete my experience on it and my colleague.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb39ba88c0a76e0a51ebd",
    "number": 373,
    "body": "When installing from a git archive downloaded from github, the file `scapy/VERSION` is not present since it is generated when building a source archive with:\r\n\r\n```\r\n./setup.py sdist\r\n```\r\n\r\nTo work around the problem, use the `export-subst` git attribute to make git archive write the current revison information in `scapy/__init__.py`.\r\n\r\n> From: https://git-scm.com/docs/gitattributes\r\n> \r\n> `export-subst`\r\n> \r\n> If the attribute `export-subst` is set for a file then Git will expand several placeholders when adding this file to an archive. The expansion depends on the availability of a commit ID, i.e., if [git-archive[1]](https://git-scm.com/docs/git-archive) has been given a tree instead of a commit or a tag then no replacement will be done. The placeholders are the same as those for the option `--pretty=format:` of [git-log[1]](https://git-scm.com/docs/git-log), except that they need to be wrapped like this: `$Format:PLACEHOLDERS$` in the file. E.g. the string `$Format:%H$` will be replaced by the commit hash.\r\n\r\nFixes #321, see #326 for reference.",
    "head_branch": "gitarchive-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #373 from 6WIND/gitarchive-version\n\nfix version when installing from git archive"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb39ca88c0a76e0a51ebe",
    "number": 372,
    "body": "I guess that the title and the patch explain everything =)",
    "head_branch": "utscapy_exit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #372 from guedou/utscapy_exit\n\nReturn a correct exit code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb39ca88c0a76e0a51ebf",
    "number": 371,
    "body": "This is based on #263, with conflicts fixed and CCM support (temporarily I hope) dropped.\r\n\r\nWhat do you think @ThomasFaivre @robin-jarry @guedou and others?\r\n\r\nFixes #263.\r\nFixes #243.\r\n",
    "head_branch": "6WIND-cryptography",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #371 from p-l-/6WIND-cryptography\n\nSwitch from PyCrypto to Cryptography"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb39da88c0a76e0a51ec0",
    "number": 370,
    "body": "",
    "head_branch": "fix-setup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #370 from p-l-/fix-setup\n\nsetup: add scapy.arch.bpf module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb39ea88c0a76e0a51ec1",
    "number": 369,
    "body": "The BPF patch breaks windows support. The issue was spotted thanks to the upcoming AppVeyor support.",
    "head_branch": "bpf_windows_broken",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #369 from guedou/bpf_windows_broken\n\nFix broken import on Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb39fa88c0a76e0a51ec2",
    "number": 366,
    "body": "",
    "head_branch": "UTScapy_typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #366 from guedou/UTScapy_typos\n\nTypo fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a0a88c0a76e0a51ec3",
    "number": 364,
    "body": "Here is a fix for Issue #350 \r\n\r\nBefore the patch:\r\n```\r\n>>> IP(str(IP()/UDP()/Raw(\"\\xff\\xff\\x01\\x6a\")))[UDP].chksum\r\n0\r\n```\r\n\r\nAfter the patch:\r\n```\r\n>>> IP(str(IP()/UDP()/Raw(\"\\xff\\xff\\x01\\x6a\")))[UDP].chksum\r\n65535\r\n```\r\n",
    "head_branch": "Issue_#350",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #364 from guedou/Issue_#350\n\nUDP checksum computation fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a1a88c0a76e0a51ec4",
    "number": 363,
    "body": "This is a fix to issue #359 ",
    "head_branch": "Issue_#359",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #363 from guedou/Issue_#359\n\nUse socket.pton & socket.ntop is available"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a1a88c0a76e0a51ec5",
    "number": 362,
    "body": "Hi,\r\n\r\nOn OpenBSD we had this in 2.3.2. During the update to 2.3.3 I thought it wouldn't be needed but it's still the case. It looks like it doesn't conflict with #221 (I'm happy to see that it has moved forward over the last few days!), but if it does, just close this PR ;)\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a2a88c0a76e0a51ec6",
    "number": 361,
    "body": "It seems that Travis OS X tests as a regular user were broken as `TRAVIS_SUDO` became a real Travis environment variable.\r\n\r\n`TRAVIS_SUDO` is always set to true on OS X. Hence all tests were replaced by `true ./run_tests [..]` and were all succeeding real fast =)",
    "head_branch": "travis_osx_sudo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #361 from guedou/travis_osx_sudo\n\nOS X Travis tests fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a3a88c0a76e0a51ec7",
    "number": 356,
    "body": "Should fix #353.",
    "head_branch": "fix-353",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #356 from p-l-/fix-353\n\nFix .trace3D()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a4a88c0a76e0a51ec8",
    "number": 349,
    "body": "Hello,\r\n\r\nAll is in the title. Here is a snippet to validate the outputs with dump=True and dump=False.\r\n\r\n```python\r\nfrom scapy.all import *\r\n\r\np = Ether()/IP()/TCP()/IP()\r\n\r\nprint \"-\"*4 + \"hexdump\"\r\nhexdump(p)\r\nprint \"-\"*4 + \"hexdump str\"\r\ns =hexdump(p, dump=True)\r\nprint s\r\n\r\nprint \"-\"*4 + \"chexdump\"\r\nchexdump(p)\r\nprint \"-\"*4 + \"chexdump str\"\r\ns = chexdump(p, dump=True)\r\nprint s\r\n\r\nprint \"-\"*4 + \"linehexdump\"\r\nlinehexdump(p)\r\nprint \"-\"*4 + \"linehexdump str\"\r\ns = linehexdump(p, dump=True)\r\nprint s\r\n```\r\nRegards\r\nSebastien",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #349 from smainand/master\n\nAdd dump option to [line|c]hexdump to get the result in a variable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a5a88c0a76e0a51ec9",
    "number": 348,
    "body": "Here is a simple patch that fixes most typos in Python files.",
    "head_branch": "typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #348 from guedou/typos\n\nPython files spell checked"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a6a88c0a76e0a51eca",
    "number": 346,
    "body": "A simple patch.",
    "head_branch": "ipsec_typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #346 from guedou/ipsec_typo\n\nReplace IPSec with IPsec"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a6a88c0a76e0a51ecb",
    "number": 345,
    "body": "Added PAUSE when scapy crashes (to see error code), so the cmd won't\r\nclose itself",
    "head_branch": "push-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Modified start script (windows) (#345)\n\nAdded PAUSE when scapy crashes (to see error code), so the cmd won't\r\nclose itself"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a7a88c0a76e0a51ecc",
    "number": 344,
    "body": "Simple 'fix' for https://github.com/secdev/scapy/issues/341 for Windows\r\n(still working with other systems)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed priting bug (Windows) (#344)\n\nFixed priting tiny bug"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a8a88c0a76e0a51ecd",
    "number": 342,
    "body": "For some reason, `TRAVIS_SUDO` gets set to `\"false\"`, instead of `\"\"`, which was breaking \"regular\" (i.e., Linux, non-root) tests.",
    "head_branch": "fix-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #342 from p-l-/fix-tests\n\nTravis CI: fix install & tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3a9a88c0a76e0a51ece",
    "number": 340,
    "body": "Fixed bug when using get_if_raw_addr() on windows https://github.com/secdev/scapy/issues/338\r\n\r\n(literally nothing: just added str() )",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3aaa88c0a76e0a51ecf",
    "number": 339,
    "body": "Fixed bug when using get_if_raw_addr() on windows https://github.com/secdev/scapy/issues/338",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3aaa88c0a76e0a51ed0",
    "number": 337,
    "body": "",
    "head_branch": "dot11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3aba88c0a76e0a51ed1",
    "number": 336,
    "body": "",
    "head_branch": "editorconf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3aca88c0a76e0a51ed2",
    "number": 335,
    "body": "This should fix #334.",
    "head_branch": "fix-334",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #335 from p-l-/fix-334\n\nFix ICMPv6MLQuery().hashret()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3ada88c0a76e0a51ed3",
    "number": 330,
    "body": "Specifying the PKG_PATH should not be needed, the installer creates now /etc/pkg.conf. Sudo is not any more in base and doas should be preferred, but don't do everything with root (like git clone).",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #330 from danieljakots/master\n\nimprove installation doc regarding OpenBSD"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3aea88c0a76e0a51ed4",
    "number": 329,
    "body": "Port of the patch by Yitai Schwartz from [https://bitbucket.org/secdev/scapy/pull-requests/62/](https://bitbucket.org/secdev/scapy/pull-requests/62/)",
    "head_branch": "BB_copy_flag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #329 from guedou/BB_copy_flag\n\nFixed the invalid copy_flag in some ip options"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3afa88c0a76e0a51ed5",
    "number": 328,
    "body": "This is a write of PR#200",
    "head_branch": "PR#200_improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #328 from guedou/PR#200_improved\n\nStop sniff() on empty s.recv()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b0a88c0a76e0a51ed6",
    "number": 327,
    "body": "Make Scapy support ASN1 GAUGE32.\r\nThis should fix #318",
    "head_branch": "add-asn.1-Gauge32",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #327 from dark-lbp/add-asn.1-Gauge32\n\nAdd ASN.1 Gauge32 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b0a88c0a76e0a51ed7",
    "number": 326,
    "body": "Unrelated to #321 (won't fix it). But I'm not sure whether this could be useful or not. @guedou @robin-jarry what do you think?",
    "head_branch": "fix-321",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b1a88c0a76e0a51ed8",
    "number": 322,
    "body": "As https://github.com/secdev/scapy/pull/313 was really messy and needed (in my opinion) some important changes, here is only the most important part of the fix.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Missing windows imports (#322)\n\n* Some new Windows links\r\n\r\nReplaced links for PyWin32, Winpcap, pyreadline\r\n\r\n* Update compatibility.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b2a88c0a76e0a51ed9",
    "number": 320,
    "body": "Several ASN.1 fixes/enhancements:\r\n- update pretty_time whenever ASN1_UTC_TIME/ASN1_GENERALIZED_TIME.val is modified;\r\n- update readable_val (+ unused_bits) whenever ASN1_BIT_STRING.val is modified, and vice versa;\r\n- better display for ASN1F_enum_INTEGERs;\r\n- fixed somewhat confusing documentation in ber.py.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #320 from mtury/master\n\nASN.1 enhancements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b3a88c0a76e0a51eda",
    "number": 319,
    "body": "Make Scapy support ASN1 GAUGE32.\nThis should fix #318\n",
    "head_branch": "fix-asn.1-Gauge32",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b4a88c0a76e0a51edb",
    "number": 317,
    "body": "As the title says. If you really do mean to have people run brew as sudo, please elaborate.\n\nHere's the error brew gives you:\n\n```\nError: Running Homebrew as root is extremely dangerous. As Homebrew does not\ndrop privileges on installation you are giving all build scripts full access\nto your system. As a result of the macOS sandbox not handling the root user\ncorrectly HOMEBREW_NO_SANDBOX has been set so the sandbox will not be used. If\nwe have not merged a pull request to add privilege dropping by November 1st\n2016 running Homebrew as root will be disabled. No Homebrew maintainers plan\nto work on this functionality.\nError: Cowardly refusing to 'sudo brew update'\nYou can use brew with sudo, but only if the brew executable is owned by root.\nHowever, this is both not recommended and completely unsupported so do so at\nyour own risk.\n```\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[README] brew is not recommended to be run as sudo (#317)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b4a88c0a76e0a51edc",
    "number": 316,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed invalid link (#316)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b5a88c0a76e0a51edd",
    "number": 313,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b6a88c0a76e0a51ede",
    "number": 310,
    "body": "Contains new python 2.7links for pyreadline, winpcap and pywin32\n\nBut libdnet and pypcap still need to be done as said here: https://github.com/secdev/scapy/pull/307#issuecomment-255363431\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update some Windows links (#310)\n\nReplaced links for PyWin32, Winpcap, pyreadline"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b7a88c0a76e0a51edf",
    "number": 307,
    "body": "- update (part of) the documentation\n  - some URLs for Windows need to be updated\n- update classifiers in setup.py\n- remove `from __future__ import with_statement`\n- use `{k: v for ...}` instead of `dict((k, v) for ...)`\n- remove hacks for `gcd()` and `binrepr()` implementations\n- use class decorators\n- remove Python 2.6 Travis-CI tests (which would fail, now)\n",
    "head_branch": "end-25",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #307 from p-l-/end-25\n\nRemove support for Python 2.5 to clean the code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b8a88c0a76e0a51ee0",
    "number": 306,
    "body": "As Python 2.6 is not supported anymore, travis tests can be removed.\n",
    "head_branch": "remove_python26_travis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b9a88c0a76e0a51ee1",
    "number": 305,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[isis.py] Add support for some SubTLVs (#305)\n\n* [isis.py] Add support for some SubTLVs\r\n* [isis.py, isis.uts] Fix, (unit-)test and extend SubTLVs support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3b9a88c0a76e0a51ee2",
    "number": 304,
    "body": "Fix sebek \"command\" field \n\nThere is a field nameded \"command\".When I  print the field content (**print payload.command**) , I get the information:\n\n`<bound method SebekV3Sock.command of <SebekV3Sock  parent_pid=2665 pid=4 uid=0 fd=0 inode=0 command='System' data_length=15 dip=0.0.0.0 dport=0 sip=192.168.200.2 sport=0 call=sendto proto=hopopt |>>`\n\nBut I want to get \"**System**\".\n\nAnd Then.\n\nI change the field name \"command\" to \"cmd\" in Class SebekV3Sock, **print payload.cmd and payload.command**. \nI get the information : \n\n**payload.cmd**\n`System`\n\n**payload.command**\n`<bound method SebekV3Sock.command of <SebekV3Sock  parent_pid=2665 pid=4 uid=0 fd=0 inode=0 cmd='System' data_length=15 dip=0.0.0.0 dport=0 sip=192.168.200.2 sport=0 call=sendto proto=hopopt |>>`\n\nSo I change field name \"command\" to \"cmd\" in all Class to fix.\n",
    "head_branch": "sebek_patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #304 from felicitychou/sebek_patch\n\nFix sebek \"command\" field"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3baa88c0a76e0a51ee3",
    "number": 303,
    "body": "Here is a fix for Issue #301 \n",
    "head_branch": "Issue_#301",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #303 from guedou/Issue_#301\n\nTravis fails on OS X with pcap & dnet modules"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3bba88c0a76e0a51ee4",
    "number": 302,
    "body": "Work on the protocl OPC-DA but I don't have enough pcap to optimize for all function.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3bca88c0a76e0a51ee5",
    "number": 300,
    "body": "Added missing ` to fix markup\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #300 from domnikl/patch-1\n\nAdded missing` in introduction"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3bda88c0a76e0a51ee6",
    "number": 298,
    "body": "Hi,\n\nI fixed with the most simple way i could find the \"windows crash on start bug\":\n\nI Moved all modifications to modules not needed in windows.arch (especially the sendrecv ones) into a file next to the windows.arch __init__.\n\nSo this \"compatibility\" file (which can be renamed if the name's not that good) only contains code that is only executed once. The \"compatibility\" file is then called at the same moment that the \"windows.arch\" one is.\n\nI tested it, and it works.\n\n**Tiny other windows fix:** on the \"run_tests.bat\" file that was not working anymore...\n\nIf it needs any changes just tell me :)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed windows circular import (#298)\n\nMoved all modifications to modules not needed in arch that were causing\r\ncrashed to another file next to __init__ (in arch.windows).\r\n\r\nFixed \"run_tests.bat\" crash: the old usage of the %DATE% param was no more supported."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3bda88c0a76e0a51ee7",
    "number": 296,
    "body": "This avoids a circular import issues affecting Windows platforms.\n",
    "head_branch": "fix-circular-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #296 from p-l-/fix-circular-imports\n\nArch: move constant values to a new submodule"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3bea88c0a76e0a51ee8",
    "number": 294,
    "body": "See the documentation below (from our \\_\\_init\\_\\_.py).\r\nNote that this includes some modifications to the travis scripts taken from PR #269, which has not been accepted yet. Still, we open this PR in order to start the review process.\r\n### \r\n\r\nTools for handling TLS sessions and digital certificates.\r\n### \r\n\r\nPrerequisites:\r\n    - You need to 'pip install ecdsa' for the module to be loaded.\r\n    - We rely on pycrypto for several computations, however the last packaged\r\n    version does not provide AEAD support. If you don't need it, just do\r\n    'pip install pycrypto'. If however you need GCM & CCM support, do\r\n    curl -sL https://github.com/dlitz/pycrypto/archive/v2.7a1.tar.gz | tar xz\r\n    cd pycrypto-2.7a1\r\n    python setup.py build\r\n    sudo python setup.py install\r\n\r\nMain features:\r\n    - X.509 certificates parsing/building.\r\n    - RSA & ECDSA keys sign/verify methods.\r\n    - TLS records and sublayers (handshake...) parsing/building. Works with\r\n    versions TLS 1.0, 1.1 and 1.2. SSLv3 should be mostly ok. This may be\r\n    enhanced by a TLS context. For instance, if scapy reads a ServerHello\r\n    with version TLS 1.2 and a cipher suite using AES, it will assume the\r\n    presence of IVs prepending the data. See test/tls.uts for real examples.\r\n    - TLS encryption/decryption capabilities with the usual ciphersuites. Once\r\n    again, the TLS context enables scapy to transparently send/receive\r\n    protected data if it learnt the session secrets. Note that if scapy acts as\r\n    one side of the handshake (e.g. reads all server-related packets and builds\r\n    all client-related packets), it will indeed compute the session secrets.\r\n    - TLS client & server basic automatons, provided for testing and tweaking\r\n    purposes. These make for a very primitive TLS stack.\r\n    - Additionally, a basic test PKI (key + certificate for a CA, a client and\r\n    a server) is provided in tls/examples/pki_test.\r\n\r\nUnit tests:\r\n    - Various cryptography checks.\r\n    - Reading a TLS handshake between a Firefox client and a GitHub server.\r\n    - Test our TLS server against s_client with different cipher suites.\r\n    - Test our TLS client against our TLS server (s_server is unscriptable).\r\n\r\nTODO list (may it be carved away by good souls):\r\n    - Enrich the automatons. The client should be able to receive data at any\r\n    time, and to send as much data as wanted from stdin (for now, only one\r\n    predefined data message may be sent following the handshake). The server\r\n    should stay online even after the first client leaves. Then we could look\r\n    at more complicated behaviours like renegotiation and resumption.\r\n    We might get some help from tintinweb/scapy-ssl_tls.\r\n    - Add some examples which illustrate how the automatons could be used.\r\n    Typically, we could showcase this with Heartbleed.\r\n    - Split up parts of the automaton, e.g. when our server builds the\r\n    ServerHello, Certificate, ServerKeyExchange and ServerHelloDone in the\r\n    same should_REPLY_TO_CH method.\r\n    - Make the automatons tests more robust and less consuming.\r\n    - Allow for the server to store simultaneously one RSA key and one ECDSA\r\n    key, and select the right one to use according to the ClientHello suites.\r\n    - Find a way to shutdown the automatons sockets properly without\r\n    simultaneously breaking the unit tests.\r\n    - Allow for the ecdsa module not to be installed. Every 'import ecdsa'\r\n    and subsequent processing should be try/catch or if/then/else.\r\n    - Switch from pycrypto to python-cryptography, once it provides proper\r\n    AEAD support. See if we could get CHACHA20-POLY1305 in the process.\r\n    - Check FFDH and ECDH parameters at SKE/CKE reception.\r\n    - Go through the kx_algs and see what may be commented out without risk.\r\n    - Define the OCSPStatus packet.\r\n    - Define several Certificate Transparency objects.\r\n    - Enhance PSK support.\r\n    - Mostly unused features : DSS, fixed DH, SRP, IDEA, KRB5, char2 curves...\r\n    - Implement SSLv2 structures and automatons.\r\n    - Implement TLS 1.3 structures and automatons.\r\n",
    "head_branch": "tls2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3bfa88c0a76e0a51ee9",
    "number": 293,
    "body": "This fixes issue #277 \n",
    "head_branch": "windows-arch-bugfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #293 from 6WIND/windows-arch-bugfix\n\narch/windows: fix circular import"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c0a88c0a76e0a51eea",
    "number": 292,
    "body": "To avoid circular import problems, conf.route and conf.route6 are\ninitialized in scapy.route and scapy.route6.\n\nMake sure that these modules are imported before using conf.route[6].\n\nThis fixes issue #290.\n",
    "head_branch": "conf_routes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #292 from 6WIND/conf_routes\n\nmake sure that conf.route[6] is initialized before using it"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c1a88c0a76e0a51eeb",
    "number": 291,
    "body": "Added Authentication payload type. Adding this payload type I introduce an error fixed by the second commit.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c2a88c0a76e0a51eec",
    "number": 288,
    "body": "DHCPv6 serers and relay agents listen for DHCP messages on UDP port 547 (rfc3315)\n",
    "head_branch": "dhcpv6_relay_udp_port",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #288 from hkwi/dhcpv6_relay_udp_port\n\ndhcp6: add DHCPv6-Relay default port"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c2a88c0a76e0a51eed",
    "number": 287,
    "body": "Well this fixed https://github.com/secdev/scapy/issues/277\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c3a88c0a76e0a51eee",
    "number": 286,
    "body": "",
    "head_branch": "sniff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c4a88c0a76e0a51eef",
    "number": 284,
    "body": "This is an attempt to fix Issue #265.\n\n`conf.route` and `conf.neighbor`could not be pickled.\n",
    "head_branch": "sessions_fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #284 from guedou/sessions_fixed\n\nPickling issues fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c5a88c0a76e0a51ef0",
    "number": 282,
    "body": "The \"NextProtocol\" field was added as an unconditional field which made the\nVXLAN packet header consume an additional 8-bts when used in a Legacy VXLAN\ndeployments (flags=0x08) or in GPID deployments (flags=0x88).  The resulting\nregression caused incorrect parsing of subsequent headers.  For example, if an\nEthernet header followed the VXLAN header then it would not be interpreted as\nan Ethernet header.  The actually interpretation would depend on what value was\nstored in the Ether.dst field.\n\nThis change updates the field layout specification such that the NextProtocol\nfield is conditional on flags=0x04, and shortens the reserved field by 8-bits\nif that condition is true.\n\nfixes bug #281\n\nSigned-off-by: Allain Legacy allain.legacy@windriver.com\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #282 from alegacy/master\n\nvxlan: fixed incorrect field layout specification"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c6a88c0a76e0a51ef1",
    "number": 280,
    "body": "Resolves #278 \n\nRather than using ioctl to poll interfaces named by /proc/net/routes, we first enumerate interfaces using SIOCGIFCONF, and then retrieve addresses for all interfaces including aliases. Then when iterating over /proc/net/routes we pick source IPs based on link-local routes. This removes the need for the manual addition of the loopback route as this is scooped up by SIOCGIFCONF.\n\nTested on linux kernel 3.19.0 x86_64 only.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c6a88c0a76e0a51ef2",
    "number": 276,
    "body": "fixed the definition of DHCP6OptIAAddress according to rfc 3315\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #276 from todfreed/master\n\ndhcp6: fix the definition of DHCP6OptIAAddress, which does not have a…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c7a88c0a76e0a51ef3",
    "number": 275,
    "body": "fixup of field types, case of field is None (converted to 0) and add res2 in KE payload.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ikev2 contrib improvements (#275)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c8a88c0a76e0a51ef4",
    "number": 272,
    "body": "When making an official release of scapy, one must:\n- Modify the hardcoded version in `setup.py` and `scapy/config.py`\n- Create a commit with this change\n- Create a git tag with the same version\n- Run `./setup.py sdist register upload`\n- Modify the hardcoded version in `setup.py` and `scapy/config.py` again to\n  append `'-dev'`\n- Create another commit with the modified version.\n- Push the 3 commits and the tag.\n\nNot only this is tedious but it is also error prone.\n\nAdd utility functions in `scapy/__init__.py` to determine current version.\n\nIf git is available (thus running from a git clone), use `git describe` to get the current version. Write the version for future reference to a text file (`scapy/VERSION`).\n\nIf git is not available (running from an installed `scapy` package) read the version from the `scapy/VERSION` file.\n\nThis changes the release process as follows:\n- Create a git tag on the commit where you want to release\n- Run `./setup.py sdist register upload`\n- Push the tag\n\nThis allows to have a single place where the version is managed: git.\n",
    "head_branch": "version-mgmt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #272 from 6WIND/version-mgmt\n\nenhance version management"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3c9a88c0a76e0a51ef5",
    "number": 269,
    "body": "…it tests to the ipsec campaign.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Corrected ICV length for AES-GCM and AES-CCM in IPSec layer. Added un… (#269)\n\n* Corrected ICV length for AES-GCM and AES-CCM in IPSec layer. Added unit tests to the ipsec campaign.\r\n\r\n* Added travis support for pycrypto 2.7a1 combined modes.\r\n\r\n* Updated documentation for pycrypto installation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3caa88c0a76e0a51ef6",
    "number": 268,
    "body": "Here is a small patch that fixes Python 2.5 backward compatibility.\n",
    "head_branch": "python2.5_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #268 from guedou/python2.5_fix\n\nUseless 'as' keyword breaks Python 2.5 compatibility"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3cba88c0a76e0a51ef7",
    "number": 267,
    "body": "Like other people on the Internet I used to have troubles with the sr1 method, when using multi-threading (and pyqt4 in my case).\nTo reproduce the bug, start a simple Qt application, then try to send and receive any packet using the sr1 method wherever you want and it will result in something like the following:\n\n```\n      File \"TestCase.py\", line 123, in sendSYNnRecACK\n        synackpkt = sr1(pck, verbose=0, timeout=1, retry=-2)\n      File \"/usr/local/lib/python2.7/dist-packages/scapy/sendrecv.py\", line 354, in sr1 \n        a,b=sndrcv(s,x,*args,**kargs)\n      File \"/usr/local/lib/python2.7/dist-packages/scapy/sendrecv.py\", line 135, in sndrcv\n        inp, out, err = select(inmask,[],[], remaintime)\n    select.error: (4, 'Appel syst\\xc3\\xa8me interrompu')\n```\n\nThe last error meaning \"System call interrupted\".\n\nAs I am not a good developer it may be awful code (I let you judge of that) but it allowed me to solve my issue.\n",
    "head_branch": "srfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3cba88c0a76e0a51ef8",
    "number": 263,
    "body": "This commit series addresses issue #243 \n\nAdd more unit tests to the IPsec layer\n\nThis changes impacts the following layers:\n- IPsec\n- TLS\n- Dot11\n\nNotes:\n- Fix the WEP key in regression.uts: Should be a 40 bits key (5 ASCII) and 24 bits nonce for 64 bits. The key was 8 ASCII => 88 bits in total\n- AES-GCM and AES-CMAC algorithms are now native in cryptography: add tests in ipsec.uts\n- cryptography only supports Python 2.6+\n- Fix the docstring for the pad method\n\nRemoved:\n- MD2 and MD4 hash algorithms for RSA in tls/crypto/pkcs1.py\n- AES-XCBC-96 not supported by cryptography.\n",
    "head_branch": "cryptography",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3cca88c0a76e0a51ef9",
    "number": 260,
    "body": "Here are some modifications to PR#149 that aims to survive truncated interface names returned by `netstat` on OS X. Compared to the original PR, this one adds a regression test to ensure that the patch works correctly.\n\n@hellais & @Osso could you confirm that this PR fixes your issues ? Thanks.\n\n@p-l- could you squash when you will merge ?\n",
    "head_branch": "osx_netstat_truncated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Workaround to ignore interfaces name truncated by netstat\n\nWhen interface names are longer than 7 characters, netstat will truncate\r\nthem to the first 7 chars which leads to looking up an invalid interface\r\nname.\r\nWe attempt to guess the name of the interface based on the output of\r\nifconfig -l. If there is only one candidate we consider it, otherwise we\r\nignore it."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3cda88c0a76e0a51efa",
    "number": 258,
    "body": "Here are some Travis CI changes:\n1. dump the conf `variable` before starting a test. That's useful to debug Travis CI runs;\n2. use the pcap/dnet modules. On Linux, the typo (`true` instead of `yes`) prevented such tests to run as expected;\n3. install the correct `pcap` Python module. As `pcapy` does not expose the file number, it is not the best candidate;\n4. get the whole output: do not run UTScapy with the `-q` and `-F` parameters.\n",
    "head_branch": "travis_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Travis CI improvements (#258)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3cea88c0a76e0a51efb",
    "number": 257,
    "body": "This PR follows the PR #256 which defines the upper layer (DCE/RPC) of PROFINET RPC.\n\nIt adds the PROFINET DCE/RPC endpoint, known as context manager. It's a layer composed of blocks whose base class is capable of handling all kinds of block like Raw would do.\n\nMore specialized blocks are also defined to provide an easier way to build complex RPC requests or responses. Examples of different kinds of requests and responses are located at the end of the unit tests file.\n",
    "head_branch": "profinet_rpc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3cfa88c0a76e0a51efc",
    "number": 256,
    "body": "This layer implements some basic part of the DCE/RPC 1.1 protocol [defined here](http://pubs.opengroup.org/onlinepubs/9629399/toc.htm).\n- It includes a UUIDField and its associated RandUUID volatile.\n- It  defines a proxy field EndiannessField to be able to change the endianness of the proxified field.\n- Due to the endpoint being chosen through UUID fields, bind_layers is not flexible enough to decide which payload class to use. Thus the layer uses an heuristical way to decide: it's the payload class itself which decides if it's capable of handling the packet. An example of this is present in the unit tests file.\n",
    "head_branch": "dce_rpc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d0a88c0a76e0a51efd",
    "number": 255,
    "body": "This adds 2 main layers: `ProfinetIO` and `PNIORealTime`.\n\nThe first one solely contains one field and acts as a PROFINET dispatcher based on its value. It enables possible future extensions to be easily added. \n\nThe later one is a configurable layer which provides methods to automatically detect and configure it. The configuration improves the dissection process, providing a way to choose the appropriate class for its list of data packets. 3 of these classes are implemented but needs some extra configuration when initializing them.\n\nThe unit tests file provides examples of it.\n",
    "head_branch": "profinet_rtc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #255 from zeronounours/profinet_rtc\n\nAdd PROFINET IO real-time layer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d0a88c0a76e0a51efe",
    "number": 254,
    "body": "This PR fixes a potential infinite loop in NTPExtPacketListField::getfield(). Also, references to the 'Raw' class were replaced by conf.raw_layer.\n",
    "head_branch": "ntp-module-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "NTP module update (#254)\n\n* References to the 'Raw' class were replaced by conf.raw_layer.\r\n* Fix potential infinite loop in NTPExtPacketListField::getfield() + typo.\r\n* Added regression test (Extension dissection test)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d1a88c0a76e0a51eff",
    "number": 252,
    "body": ".pyo file are generated when running python with the \"optimize\" option (-O with cpython). These files are equivalent of .pyc files.\nThe (future) HTTP/2 module is using `assert` to check some parameter consistency. asserts are disabled with \"optimized\" runs.\nThis PR adds the .pyo files to the root .gitignore file.\n",
    "head_branch": "ignore_pyo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #252 from X-Cli/ignore_pyo\n\nAdd .pyo to the ignored files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d2a88c0a76e0a51f00",
    "number": 251,
    "body": "I was looking up in another module how to write some Scapy unit tests, and I clicked at random on the modbus.uts file. \nSome tests were using string comparisons on the **class**.**name** properties to check the type of the payload class. I simply replaced this by a proper type comparison using symbols.\nThe benefit will be a clearer error message if the class name is changed for whatever reason: the test will not just fail; it will also tell that it is because of an unknown symbol.\n",
    "head_branch": "clean_modbus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #251 from X-Cli/clean_modbus\n\nRewrite of some modbus tests in a more pythonish and robust way"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d3a88c0a76e0a51f01",
    "number": 250,
    "body": "When generating packets with fuzz(), some fields are not initialized\ncompletely. This causes problems in evaluating the amount of padding\nnecessary to align the encrypted data length to a multiple of the crypto\nalgorithm block size.\n\nThis patch forces the encrypted packet fields to be resolved to their\ndefault values before calculating the pad length.\n",
    "head_branch": "ipsec-fuzz",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #250 from 6WIND/ipsec-fuzz\n\nlayers/ipsec: fix padding problems with fuzzed packets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d4a88c0a76e0a51f02",
    "number": 249,
    "body": "In issue #235, I talk about a problem when using SSL-wrapped sockets in combination with `scapy.supersocket.StreamSocket`. The problem is related to the use of the `MSG_PEEK` flag.\n\nThis PR provides an implementation of `SSLStreamSocket` that keeps a local buffer instead of relying on the kernel buffer for storage.\n\nThe following code demonstrates its usage:\n\n```\nimport ssl\nimport socket\nimport multiprocessing\nimport time\n\nimport scapy.supersocket\nimport scapy.fields\nimport scapy.packet\nimport scapy.config\n\ndef server():\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    try:\n        s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n        s.bind(('127.0.0.1', 1234))\n        s.listen(1)\n        tlss = ssl.wrap_socket(s, keyfile=\"/home/fmaury/testclear.key\", certfile=\"/home/fmaury/test.crt\", server_side = True)\n        (ss, _) = tlss.accept()\n        time.sleep(2)\n        ss.send(\"AAAA\")\n        print \"blip\"\n        time.sleep(2)\n        ss.send(\"BBBBCCCCDD\")\n        print \"blip\"\n        time.sleep(2)\n        ss.send(\"DD\")\n        print \"blip\"\n        ss.close()\n    except socket.error:\n        print \"Die die die!\"\n        raise\n\n\nclass TestPacket(scapy.packet.Packet):\n    name = 'Test Packet'\n    fields_desc = [\n        scapy.fields.IntField('value', 0)\n    ]\n    def guess_payload_class(self, pay):\n        return scapy.config.conf.padding_layer\n\nif __name__ == '__main__':\n    p = multiprocessing.Process(target = server)\n    p.start()\n    time.sleep(1)\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    try:\n        s.connect(('127.0.0.1', 1234))\n        s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n        tlss = ssl.wrap_socket(s)\n        ss = scapy.supersocket.SSLStreamSocket(tlss, basecls=TestPacket)\n        while True:\n            ss.recv().show()\n    except socket.error:\n        pass\n    p.join()\n```\n\nI believe the interface to be compatible with `scapy.supersocket.StreamSocket`.\n",
    "head_branch": "SSLStreamSocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #249 from X-Cli/SSLStreamSocket\n\nAdd SSLStreamSocket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d4a88c0a76e0a51f03",
    "number": 248,
    "body": "I am currently writing a set of layers to add the support of HTTP/2 to scapy.\nHTTP/2 is organized in such a way that some flags may have different meaning depending on the payload layer type.\n\nWhile I could have defined a set of packets with a different `FlagsField` per packet, I thought it would be better to define a new `MultiFlagsField` class, acting similarly to `MultiEnumFields` and `BitMultiEnumFields`.\n\n`MultiFlagsField`, as the other Multi*Fields, takes a dict of dict instead of a dict of names and uses a `depends_on` callback to select the right entry.\nThe `MultiFlagsField` also defined a concept of \"short flags\" and \"long flags\". Indeed, while it is possible to assign an integer to the field to set its value, I thought it could be more user-friendly to allow the user to assign a list of \"short\" names. On the contrary, displaying an integer or a list of short flags when calling \"show\" could be difficult to read. Instead, we display the \"long flags\" followed by the \"short flags\" inside parenthesis.\n\nThe following excerpt demonstrate how this new field works:\n\n```\nimport scapy.fields\nimport scapy.packet\n\nclass TestPacket(scapy.packet.Packet):\n    name = 'Test packet'\n    fields_desc = [\n        scapy.fields.IntField('type', 0),\n        scapy.fields.MultiFlagsField('flags', 0, 8, {\n                0: {\n                    0: {'short': 'A', 'long': 'Option A'},\n                    1: {'short': 'B', 'long': 'Option B'}\n                },\n                1: {\n                    5: {'short': '+', 'long': 'Plus'},\n                    6: {'short': '*', 'long': 'Star'}\n                }\n            }, depends_on=lambda pkt: pkt.type\n        ),\n    ]\n    #... bind_layers to bind a type to a payload type\n\nTestPacket(type=0, flags = [ 'A' ]).show()\nTestPacket(type=0, flags = [ 'B' ]).show()\nTestPacket(type=0, flags = 3).show()\nTestPacket(type=0, flags = 7).show()\nTestPacket(type=1, flags = ['+', '*']).show()\n```\n\nThis will display the following output:\n\n```\n###[ Test packet ]### \n  type      = 0\n  flags     = ['Option A (A)']\n\n###[ Test packet ]### \n  type      = 0\n  flags     = ['Option B (B)']\n\n###[ Test packet ]### \n  type      = 0\n  flags     = ['Option A (A)', 'Option B (B)']\n\n###[ Test packet ]### \n  type      = 0\n  flags     = ['Option A (A)', 'Option B (B)', 'bit 2']\n\n###[ Test packet ]### \n  type      = 1\n  flags     = ['Plus (+)', 'Star (*)']\n```\n\nWhen there is no name defined for a bit, at \"show\" time, the bit is called \"bit X\" where X is the power of 2 of the bit that is set. This behavior is exbited in the fourth TestPacket in the previous exemple.\n\nI believe this new field to be generic enough to be integrated into fields.py, instead of remaining into the (to be commited) contrib/http2.py file.\n",
    "head_branch": "MultiFlagsField",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d5a88c0a76e0a51f04",
    "number": 247,
    "body": "VXLAN now has an official RFC: https://tools.ietf.org/html/rfc7348\n- Move VXLAN to `scapy.layers` so that it is loaded automatically.\n- Add support for Group Policy Extension (https://tools.ietf.org/html/draft-smith-vxlan-group-policy-00)\n",
    "head_branch": "vxlan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "VXLAN improvements (#247)\n\n* layers/vxlan: add group policy extension support\r\nThis is based on the following draft RFC:\r\nhttp://tools.ietf.org/html/draft-smith-vxlan-group-policy-00\r\n\r\nAdd more unit tests in regression.uts.\r\n\r\nSigned-off-by: Robin Jarry <robin.jarry@6wind.com>\r\n\r\n* Move VXLAN to layers\r\n\r\nVXLAN has an official RFC: http://tools.ietf.org/html/rfc7348\r\nIt should be in automatically loaded layers.\r\n\r\nMove tests to regression.uts.\r\n\r\nSigned-off-by: Robin Jarry <robin.jarry@6wind.com>\r\n\r\n* load_contrib: fallback to layers when contrib not found\r\n\r\nUseful when a scapy.contrib module has been moved to scapy.layers.\r\n\r\nSigned-off-by: Robin Jarry <robin.jarry@6wind.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d6a88c0a76e0a51f05",
    "number": 242,
    "body": "This is based on the following draft RFCs:\n\nhttp://tools.ietf.org/html/draft-mahalingam-dutt-dcops-vxlan-08\nhttp://tools.ietf.org/html/draft-smith-vxlan-group-policy-00\n",
    "head_branch": "vxlan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d7a88c0a76e0a51f06",
    "number": 241,
    "body": "Add support for multiple VLAN tagging.\n",
    "head_branch": "q-in-q",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "layers/l2: add QinQ 802.1ad support (#241)\n\nSigned-off-by: Robin Jarry <robin.jarry@6wind.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d8a88c0a76e0a51f07",
    "number": 240,
    "body": "When using scapy as an external lib, we encounter some problems with importing some modules. \nHere are some examples:\n\n```\n$ python -c \"import scapy.layers.dhcp6\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"scapy/layers/dhcp6.py\", line 17, in <module>\n    from scapy.layers.inet6 import *\n  File \"scapy/layers/inet6.py\", line 1717, in <module>\n    from scapy.layers.dhcp6 import DomainNameListField\nImportError: cannot import name DomainNameListField\n```\n\n```\n$ python -c \"import scapy.contrib.spbm\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"scapy/contrib/spbm.py\", line 37, in <module>\n    bind_layers(Dot1Q, SPBM, type=0x88e7)\nNameError: name 'Dot1Q' is not defined\n```\n\n```\n$ python -c \"import scapy.contrib.icmp_extensions\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"scapy/contrib/icmp_extensions.py\", line 165, in <module>\n    scapy.layers.inet.ICMPerror.post_dissection = ICMPExtension_post_dissection\nNameError: name 'scapy' is not defined\n```\n\n```\n$ python -c \"import scapy.contrib.ospf\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"scapy/contrib/ospf.py\", line 585, in <module>\n    class OSPFv3_Inter_Area_Prefix_LSA(OSPF_BaseLSA):\n  File \"scapy/contrib/ospf.py\", line 599, in OSPFv3_Inter_Area_Prefix_LSA\n    IP6PrefixField(\"prefix\", \"2001:db8:0:42::/64\", wordbytes=4, length_from=lambda pkt: pkt.prefixlen)]\nTypeError: __init__() got an unexpected keyword argument 'length_from'\n```\n\nThe first commit fixes all these errors (and also others).\n\nThe second commit prevents the shadowing of python internal symbols (`__all__`, `__file__`, `__doc__`, `__package__`, etc.) they should **not** be replaced by the one from other modules.\n\nAlso, when importing any part of scapy, we get some warning messages printed on the console.\n\n```\nWARNING: Failed to execute tcpdump. Check it is installed and in the PATH\n```\n\nThe last commit allows to control the logging of scapy messages.\n\nI have executed all tests suites and everything is ok. Please tell me what do you think.\n\nPS: it would be a great thing to use pylint on a regular basis on scapy. This would obviously require to fix all errors first. I don't have the time to do it all but I can help on some parts.\n",
    "head_branch": "lib-friendly",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #240 from 6WIND/lib-friendly\n\nMake scapy usable as a third party library"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3d9a88c0a76e0a51f08",
    "number": 239,
    "body": "The following code triggers an error in fields.py\n\n```\nimport scapy.packet\nimport scapy.fields\n\nclass TestPacket(scapy.packet.Packet):\n  name = \"Test Packet\"\n  fields_desc = [\n    scapy.fields.BitField('type', 0, 1),\n    scapy.fields.BitMultiEnumField('flags', 0, 7, { 0: { 1: 'flagA1', 2: 'flagA2' }, 1: { 1: 'flagB1', 2: 'flagB2' } }, lambda pkt: pkt.type)\n  ]\n```\n\nThe exception looks like this:\n\n```\nTraceback (most recent call last):\n  File \"poc.py\", line 4, in <module>\n    class TestPacket(scapy.packet.Packet):\n  File \"poc.py\", line 8, in TestPacket\n    scapy.fields.BitMultiEnumField('flags', 0, 7, { 0: { 1: 'flagA1', 2: 'flagA2' }, 1: { 1: 'flagB1', 2: 'flagB2' } }, lambda pkt: pkt.type)\n  File \"/home/fmaury/scapy/scapy/fields.py\", line 879, in __init__\n    MultiEnumField.__init__(self, name, default, enum)\nTypeError: unbound method __init__() must be called with MultiEnumField instance as first argument (got BitMultiEnumField instance instead)\n```\n\nThe problem is that `MultiEnumField` is not a superclass of `BitMultiEnumField`. `_MultiEnumField` is.\n\nAt the same time, the `MultiEnumField.__init__(self, name, default, enum)` call is incorrect because it lacks the `depends_on` parameter.\n\nThis pull request fixes these issues, by fixing the super call, and adds the missing parameter.\n\nOnce patched, the following code runs flawlessly:\n\n```\ncat > poc.py <<<EOF\nimport scapy.packet\nimport scapy.fields\n\nclass TestPacket(scapy.packet.Packet):\n  name = \"Test Packet\"\n  fields_desc = [\n    scapy.fields.BitField('type', 0, 1),\n    scapy.fields.BitMultiEnumField('flags', 0, 7, { 0: { 1: 'flagA1', 2: 'flagA2' }, 1: { 1: 'flagB1', 2: 'flagB2' } }, lambda pkt: pkt.type)\n  ]\n\nTestPacket('\\x01').show()\nTestPacket('\\x02').show()\nTestPacket('\\x81').show()\nTestPacket('\\x82').show()\nEOF\n\npython poc.py\n###[ Test Packet ]###\n  type      = 0L\n  flags     = flagA1\n###[ Test Packet ]###\n  type      = 0L\n  flags     = flagA2\n###[ Test Packet ]###\n  type      = 1L\n  flags     = flagB1\n###[ Test Packet ]###\n  type      = 1L\n  flags     = flagB2\n```\n\nThese changes are not expected to break compatibility. A quick grep around scapy master branch code indicates that noone is currently using `BitMultiEnumField`.\n",
    "head_branch": "BitMultiEnumField-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix call to \"super\" methods on BitMultiEnumField (#239)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3daa88c0a76e0a51f09",
    "number": 238,
    "body": "At the moment the parsing of the field continues when the null byte at the end of the string is reached, adding an empty string to the list, which results in an extra dot at the end of the domain name.\nChecking whether the remaining part is a null byte and the length of the packet is larger than zero (in case the string does not end with a null byte for some reason) fixes this issue.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3daa88c0a76e0a51f0a",
    "number": 237,
    "body": "IGMP V3 report PDU implementation\n\nWe have implemented the IGMP V3 report pdu generation and tested the same was working fine for us. \n\nRequest to push these changes. \n\nSaravanankoori J\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3dba88c0a76e0a51f0b",
    "number": 236,
    "body": "This PR slightly modifies the behavior of the getlayer() method (Packet class) in order to allow access  to a given layer by providing a parent class name. This can help when inheritance is used.\n\nFor example, this is now possible :\n\n> >>> p = IPerror6()\n> >>> p[IPerror6]\n> <IPerror6  |>\n> >>> p[IPv6]\n> <IPerror6  |>\n> >>> type(p[IPv6])\n> <class 'scapy.layers.inet6.IPerror6'>\n> >>> type(p[IPerror6]) == type(p[IPv6])\n> True\n\nNote that it is also possible to obtain such a behavior by overloading the getlayer() method (for example, see the NTP module in PR #233).\n\nI have run all the tests in the test/_.uts and scapy/contrib/_.uts files, and it breaks two tests related to the PPP module (regression.uts). In these two cases, it is no longer possible to access directly the option in the 'options' list by providing the parent class name, since all options inherit from the same class.\n",
    "head_branch": "getlayer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3dca88c0a76e0a51f0c",
    "number": 234,
    "body": "",
    "head_branch": "pebble-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bluetooth: Add LE Connection Update command & event types (#234)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3dda88c0a76e0a51f0d",
    "number": 233,
    "body": "This PR extends the existing NTP implementation in Scapy by:\n- updating the existing code (RFC 5905)\n- adding NTP mode 6 (control) messages support (defined in RFC 1305)\n- adding some NTP mode 7 (private) messages implemented in ntpd (probably the most common NTP implementation).\n\nRegression tests have been added in 'regression.uts' .\n",
    "head_branch": "ntp-module-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "NTP module update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3dea88c0a76e0a51f0e",
    "number": 232,
    "body": "This PR extends the existing NTP implementation in Scapy by:\n    - updating the existing code (RFC 5905)\n    - adding NTP mode 6 (control) messages support (defined in RFC 1305)\n    - adding some NTP mode 7 (private) messages implemented in ntpd (probably the most common NTP implementation).\n\nRegression tests have been added in 'regression.uts' .\n",
    "head_branch": "ntp-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3dfa88c0a76e0a51f0f",
    "number": 230,
    "body": "commit 4faaaac0430b941329a2cf676452314d3d2c61c0 moved and renamed the crypto package :\nscapy/{crypto => layers/tls}/**init**.py\n\nthis updates setup.py accordingly\n",
    "head_branch": "crypto-package-install-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3dfa88c0a76e0a51f10",
    "number": 228,
    "body": "When triggering the code path that is modified in this patch, Scapy will crash, because the `conf` variable is not defined in the global scope. This comes from the fact that `import config` is used at the top of the file, and so the conf variable must be accessed within the \"full\" path `config.conf`\n\nTo reproduce the issue :\n\n```\nimport scapy.packet\nclass Toto(scapy.packet.Packet):\n  @classmethod\n  def dispatch_hook(cls, *args, **kwargs):\n    raise Exception()\nToto('titi')\n```\n\nSame goes for the next line because Raw is undefined in the global scope too.\n\nEdit: removing mixed french/english from the pull request, and adding a word about the second commit to fix the Raw reference.\n",
    "head_branch": "X-Cli-config-undefined",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "base_classes.py: dispatch_hook: conf variable is undefined in the global scope (#228)\n\nFix `Raw` and `conf` undefined"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e0a88c0a76e0a51f11",
    "number": 227,
    "body": "When triggering the code path that is modified in this patch, Scapy will crash, because the `conf` variable is not defined in the global scope. This comes from the fact that `import config` is used at the top of the file, and so the conf variable must be accessed within the \"full\" path `config.conf`\n\nPour reproduire le problème :\n\n```\nimport scapy.packet\nclass Toto(scapy.packet.Packet):\n  @classmethod\n  def dispatch_hook(cls, *args, **kwargs):\n    raise Exception()\nToto('titi')\n```\n",
    "head_branch": "X-Cli-config-undefined",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e1a88c0a76e0a51f12",
    "number": 226,
    "body": "assert() statements were added to the EAPOL / EAP class tests (in regression.uts) in order to stop the test if one statement evaluates to False.\n",
    "head_branch": "eapol-eap-tests-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #226 from plorinquer/eapol-eap-tests-update\n\nEAPOL / EAP class tests updated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e2a88c0a76e0a51f13",
    "number": 225,
    "body": "Hi,\n\nI took an implementation of NSH I found by @christophefontaine last year, upon which I added a small cleaning and protocol update.\n(I found his commits here: https://bitbucket.org/secdev/scapy/pull-requests/107/vxlan-nsh/diff)\n\nI'll be leaving on holidays, and I'm not planing on having much of an internet access ; I'll get back to this next month, and answer or fix your reviews.\n\nRegards\n",
    "head_branch": "nsh-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #225 from GabrielGanne/nsh-update\n\nNSH: first implementation and small update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e3a88c0a76e0a51f14",
    "number": 224,
    "body": "This PR updates the 'packages' list in setup.py, as scapy/crypto no longer exists, and layers/tls/ has been added in commit 4faaaac0430b941329a2cf676452314d3d2c61c0.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "'packages' list in setup.py has been updated. (#224)\n\n* 'packages' list in setup.py has been updated.\r\n\r\n* Fix ecdsa ImportError."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e4a88c0a76e0a51f15",
    "number": 223,
    "body": "matplotlib.pyplot inits gtk, which may not be available.\nIf so, handles this as if the import failed.\n",
    "head_branch": "gtk-runtime-error-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #223 from GabrielGanne/gtk-runtime-error-fix\n\nFix scapy init when gtk is not available"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e4a88c0a76e0a51f16",
    "number": 222,
    "body": "Added a stop parameter to PacketListField. This parameter is a callable that would be evaluated after each packet is identified, and used as a condition to keep adding more packets to the list field. This enables the implementation of protocols who uses a \"sentinel\" or some property of an inner packet to mark the end of the packet list, in addition or instead of providing the count/length.\n",
    "head_branch": "packetliststop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e5a88c0a76e0a51f17",
    "number": 221,
    "body": "This PR provides native support for Mac OS X and and *BSD. No external Python\nmodules are required to send and receive packets. It was tested on Debian, OS X 10.9.5, FreeBSD 10.2, NetBSD 7.0 and OpenBSD 5.5\n\nIssue #104 provides some examples, as  well as several mandatory items that were\nimplemented and tested.\n\n@p-l- I chose to keep all commits for reference, as some changes are not\nobvious. Can you squash them when the PR is OK ? Thanks.\n",
    "head_branch": "scapy_bpf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Native Mac OS X and *BSD support (#221)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e6a88c0a76e0a51f18",
    "number": 219,
    "body": "This commit relates to the ASN.1 high-tag-number support. It comes with an example for the dissection of an ASN1F_SEQUENCE with a (previously) unknown high-tag.\n\nBER_tagging_dec now returns the tag value along with the string stripped of its tag, and replaces the explicit_tag or implicit_tag we provided when defining the class. This is needed in order to restore the tag once we want to rebuild the packet.\n\nCode below raised a TypeError before this commit.\n\n``` python\nclass asn1test(ASN1_Packet):\n    ASN1_codec = ASN1_Codecs.BER\n    ASN1_root = ASN1F_INTEGER(\"int\", \"\", explicit_tag=0, flexible_tag=True)\n\ns = '\\xff\\x01\\x03\\x02\\x01\\x03'\n# the first two bytes represent the explicit_tag\n# (class private + type constructed + real tag 0x01)\n# then comes length 0x03 of the ASN1-encoded integer\na = asn1test(s)\nprint s == str(a)\n```\n\nIt also works with implicit tags :\n\n``` python\nclass asn1test(ASN1_Packet):\n    ASN1_codec = ASN1_Codecs.BER\n    ASN1_root = ASN1F_INTEGER(\"int\", \"\", implicit_tag=0, flexible_tag=True)\n\ns = '\\xff\\x01\\x01\\x03'\n# the first two bytes represent the implicit_tag\n# (class private + type constructed + real tag 0x01)\n# then comes length 0x01 of the integer\na = asn1test(s)\nprint s == str(a)\n```\n",
    "head_branch": "asn1_hightag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #219 from mtury/asn1_hightag\n\nFix support and add test for ASN.1 (unknown) high-tag-number"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e7a88c0a76e0a51f19",
    "number": 216,
    "body": "The notebook was enhanced with a small pipe example.\n",
    "head_branch": "notebook_pipes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #216 from guedou/notebook_pipes\n\nSimple pipe example"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e8a88c0a76e0a51f1a",
    "number": 215,
    "body": "The UDPDrain description was incorrect.\n",
    "head_branch": "pipes_typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Wrong docstring fixed (#215)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3e9a88c0a76e0a51f1b",
    "number": 214,
    "body": "As a followup to PR #203, here is a small patch that makes mDNS works in IPv4.\n\nWe could try to add a generic multicast test as done with IPv6. However, I wonder if this will break protocols other than mDNS.\n",
    "head_branch": "IPv4_mutlicast",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #214 from secdev/IPv4_mutlicast\n\nIPv4 mDNS support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3eaa88c0a76e0a51f1c",
    "number": 213,
    "body": "This PR fixes IPv6.hashret() that was not working as expected (i.e. IPv6 addresses were never involved in hashret() results).\n",
    "head_branch": "IPv6_hashret",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #213 from secdev/IPv6_hashret\n\nUse IPv6 source and destination addresses in hashret()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3eaa88c0a76e0a51f1d",
    "number": 212,
    "body": "Some regression tests are failing due to a missing import in packet.py\n",
    "head_branch": "show_import_fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #212 from guedou/show_import_fixed\n\nMissing import in packet.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3eba88c0a76e0a51f1e",
    "number": 211,
    "body": "This PR improves the implementation of the EAPOL and EAP classes in l2.py, and provides Packet classes for the EAP-TLS and EAP-FAST authentication methods.\n\nNew regression tests have been added in regression.uts .\n",
    "head_branch": "eapol-eap-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "EAPOL / EAP updates. (#211)\n\nEAPOL / EAP updates and regression tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3eca88c0a76e0a51f1f",
    "number": 210,
    "body": "Solaris is S11 now, and S12 will come soon. It has changed more since S10. for example,\n1. 'netstat' 's output format when read_route\n2. libdnet/libpcap support when send/recv message.\n3. AF_PACKEt and PYTHON's AF_PACKET support when send/recv message\n4. DLPI support\nI update solaris.py under scapy/arch/, it is tested at Solaris S11 and S12, and also is tested at X86 and Sparc. hope it helpful.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3eda88c0a76e0a51f20",
    "number": 208,
    "body": "",
    "head_branch": "fuzz-fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3eea88c0a76e0a51f21",
    "number": 207,
    "body": "Hello,\n\nhere are some suggestions for improving the documentation:\n- move the hyperlinks from secdev.org to github.com.\n- add of a \"Design Pattern\" section in writing new protocols : the goal is to provide snippets on how to implement common protocol data structures (e.g TLV, repeating pattern...).\n- add of a \"Improve the documentation\" part to complete the list made at the top of development.rst file\n- add of the instructions to build the documentation offline with the readthedocs template\n- add of a docstring for the FlagsField, the goal being to generate the source code documentation as soon as enough part of the code is documented.\n\nCheers,\nSebastien\n",
    "head_branch": "doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "doc improvement proposal (#207)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3efa88c0a76e0a51f22",
    "number": 203,
    "body": "This PR provides two different yet related patches:\n1. mDNS support added for IPv4\n2. fix IPv6.hashret() that was not working as expected (i.e. IPv6 addresses were never involved in hashret() results). It might break some behaviours, therefore I wonder if I could be better to create a separated PR\n",
    "head_branch": "mDNS",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3efa88c0a76e0a51f23",
    "number": 201,
    "body": "",
    "head_branch": "CoAP",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #201 from unmole/CoAP\n\nAdd support for CoAP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f0a88c0a76e0a51f24",
    "number": 200,
    "body": "This fixes the issue raised in #196 (the sniff loop didn't end after all packets in a file had been read).\n",
    "head_branch": "m-src-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f1a88c0a76e0a51f25",
    "number": 199,
    "body": "This is a documentation update that will help new Scapy users.\n",
    "head_branch": "doc_osx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #199 from guedou/doc_osx\n\nOS X installation methods updated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f2a88c0a76e0a51f26",
    "number": 198,
    "body": "As described in the issue previously i tried to create a pull request. \nLet's see if it fits your requirements :) \n",
    "head_branch": "susengold-patch-bluetooth",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Import missing & mixup of psm status/result values in bluetooth.py #189 (#198)\n\n* Fix missing import and mixup result / status in L2Cap Conn Resp\r\n\r\nin scapy/layers/bluetooth.py\r\n\r\n* Delete bluetooth.py\r\n\r\n* fix missing import and mixup of result/status in L2Cap ConnResp\r\n\r\n* Delete bluetooth.patch\r\n\r\n* fixed missing import and mixup of result/status in L2Cap ConnResp\r\n\r\n* Update bluetooth.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f3a88c0a76e0a51f27",
    "number": 197,
    "body": "Hi guys,\n\nJust a small pull request adding the TFO TCP option to Scapy ;)\n\nThanks for this awesome project.\n\nRenaud.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "TCP Fast Open support (#197)\n\nAdding TCP Fast Open support."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f4a88c0a76e0a51f28",
    "number": 194,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor shell cleanup; Travis CI build status icon (#194)\n\n* Flip conditional for simplicity\r\n* Indent lines\r\n* Include Travis CI build status image & link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f4a88c0a76e0a51f29",
    "number": 193,
    "body": "WIP / not tested yet, **do not merge**.\n",
    "head_branch": "fix-bt-supersocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f5a88c0a76e0a51f2a",
    "number": 192,
    "body": "I've updated bluetooth.py to include several new security manager (SM) packet types used for key exchanges after a successful pairing. In addition, I've added a new Read by Type packet used when accessing services by 128-bit UUIDs. Finally, I added an extra check to the bluetooth send command function to make sure the packet type is what is expected before checking the packet code, which can cause a crash because it does not account for packets being out of order and not all packets have a code property. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #192 from 1nc1n3rat0r/master\n\nlayers/bluetooth.py Added New Packets and Bug Fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f6a88c0a76e0a51f2b",
    "number": 190,
    "body": "I've updated bluetooth.py to include several new security manager (SM) packet types used for key exchanges after a successful pairing. In addition, I've added a new Read by Type packet used when accessing services by 128-bit UUIDs. I added an extra check to the bluetooth send command function to make sure the packet type is what is expected before checking the packet code, which can cause a crash because it does not account for packets being out of order and not all packets have a code property. Finally, I've modified the file's coding style so it is compliant with PEP8 as per the requirement in scapy/CONTRIBUTING.md\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f7a88c0a76e0a51f2c",
    "number": 188,
    "body": "Commit for the issue #143\nCreation of an internal method __show_or_dump__ as suggested in PR #183.\n\nAdd _dump_ argument to `show()` and `show2()` methods to return the packet representation.\nAdd also _indent_, _lvl_ and _label_lvl_ arguments to `show2()` to be consistent with `show()`.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #188 from jbcayrou/master\n\nIn show() and show2() add  the \"dump\" argument to return the packet representation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f8a88c0a76e0a51f2d",
    "number": 187,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #187 from p-l-/master\n\nMove notebook to correct location"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f8a88c0a76e0a51f2e",
    "number": 186,
    "body": "That's the notebook that will be used for the Scapy presentation during SSTIC2016.\n",
    "head_branch": "sstic_2016",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #186 from guedou/sstic_2016\n\nScapy notebook tutorial"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3f9a88c0a76e0a51f2f",
    "number": 185,
    "body": "Fixes #184.\n",
    "head_branch": "fix-traceroute-graph",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #185 from p-l-/fix-traceroute-graph\n\nTraceroute: fix graph"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3faa88c0a76e0a51f30",
    "number": 183,
    "body": "Commit for the issue https://github.com/secdev/scapy/issues/143\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3fba88c0a76e0a51f31",
    "number": 182,
    "body": "https://datatracker.ietf.org/doc/draft-ietf-6man-segment-routing-header/?include_text=1\n",
    "head_branch": "req",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3fca88c0a76e0a51f32",
    "number": 180,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3fca88c0a76e0a51f33",
    "number": 178,
    "body": "This PR introduces a new Travis-CI build matrix, as well as helpers in the `.travis/` directory. The goal is to run unit tests on Linux on OS X and Linux as a regular and as root.\n\n@p-l- I don't understand with Travis-CI is not launched on this PR ...\n",
    "head_branch": "travis_improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #178 from guedou/travis_improvements\n\nRun unit tests on Linux and OS X - root and non-root"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3fda88c0a76e0a51f34",
    "number": 176,
    "body": "Working with `scapy` has made my life a lot easier (thank you!), but I just recently spent quite a while tracking down a non-intuitive quirk about `Packet.copy()`: the cloned packet does not have the same `time` property as the original. These changes fix that and include a regression test.\n",
    "head_branch": "copy-timestamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #176 from josephfrazier/copy-timestamp\n\nPacket.copy(): copy the `time` property"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3fea88c0a76e0a51f35",
    "number": 175,
    "body": "This PR improves cert.py, which does not depend anymore upon openssl but uses scapy's native ASN.1 parsing (specifically, x509.py). There is now support for ECDSA certificates, key signing/verifying, chain construction and other capabilities. The PR comes with a test file cert.uts.\n\nI removed the crypto/ folder which only contained cert.py. There is now a tls/ folder (and a tls_crypto/ subfolder) which is meant to receive TLS-related scripts within a few weeks.\n\n/!\\ cert.py now needs the python ecdsa library. It will be disabled by scapy/tls/__init__.py if scapy detects no ecdsa support.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "cert.py improvements (#175)\n\ncert.py improvements\r\n\r\n* Improve cert.py : independence from openssl, ECDSA support, sign/verify capabilities\r\n\r\n* Make travis install python-ecdsa\r\n\r\n* Clarify ECDSA support\r\n\r\n* Cleaning up for cert.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb3ffa88c0a76e0a51f36",
    "number": 174,
    "body": "This PR will contain commits that aims to run unit tests as root on Linux and OS X, using both pcap/dnet and native support.\n\n**It is not yet ready to be merged.**\n\nExpected PR iterations:\n- [x] run tests as a regular user\n- [x] fix issue #170\n- [x] run tests as a regular user on OS X\n- [x] run tests as root on Linux - native\n- [x] run tests as root on Linux - pcapdnet\n- [x] run tests as root on OS X - pcapdnet\n- [x] wait for PR #173 to be merged\n- [ ] clean the history\n",
    "head_branch": "travis_improvements_clean",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb400a88c0a76e0a51f37",
    "number": 173,
    "body": "Some HomePlugAV unit tests can not work without dedicated test environment. I chose to comment them over deleting to keep the examples.\n\n@p-l- it is likely to be the last PR that modifies unit tests\n",
    "head_branch": "homeplugav_uts_bis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #173 from guedou/homeplugav_uts_bis\n\nHomePlugAVuts fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb401a88c0a76e0a51f38",
    "number": 172,
    "body": "Live EDNS0 unit tests are broken.\n\nIt could not find a host that responds to EDNS-PING. I preferred to comment this test rather than deleting it, as this packet construction is useful for reference.\n",
    "head_branch": "edsn0_uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #172 from guedou/edsn0_uts\n\nFix EDNS0 live unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb401a88c0a76e0a51f39",
    "number": 171,
    "body": "This is a fix to issue #170. See the results below:\n\nWithout IPv6:\n\n``` shell\necho 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6\n./run_tests -q -t regression.uts\n/run_tests -t regression.uts -o /dev/null\n[..]\nPASSED=789 FAILED=0\n```\n\nWith IPv6:\n\n``` shell\necho 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6\n./run_tests -q -t regression.uts\n/run_tests -t regression.uts -o /dev/null\n[..]\nPASSED=789 FAILED=0\n```\n",
    "head_branch": "ipv6_uts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #171 from guedou/ipv6_uts\n\nIPv6 unit tests now work when IPv6 is not available"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb402a88c0a76e0a51f3a",
    "number": 169,
    "body": "This PR will contains commits that aims to run unit tests as root on Linux and OS X, using both pcap/dnet and native support.\n\n**It is not yet ready to be merged.**\n\nExpected PR iterations:\n- [x] run tests as a regular user\n- [x] fix issue #170\n- [x] run tests as root on Linux - native\n- [x] run tests as root on Linux - pcapdnet\n- [ ] run tests as regualr user on OS X\n- [ ] run tests as root on OS X - pcapdnet\n- [ ] clean this PR\n",
    "head_branch": "travis_improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb403a88c0a76e0a51f3b",
    "number": 168,
    "body": "This fix #162\n",
    "head_branch": "fix-streamsocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #168 from dark-lbp/fix-streamsocket\n\nFix StreamSocket on OS X"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb404a88c0a76e0a51f3c",
    "number": 167,
    "body": "This fixes #162\n",
    "head_branch": "fix-streamsocket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb405a88c0a76e0a51f3d",
    "number": 166,
    "body": "",
    "head_branch": "feature-wrpcap-SndRcvList",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #166 from p-l-/feature-wrpcap-SndRcvList\n\nwrpcap: accept packets from an `SndRcvList()` object"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb405a88c0a76e0a51f3e",
    "number": 165,
    "body": "- recursion desired (`DNS.rd`) defaults to 1\n- question defaults to IN A for `www.example.com` (`DNSQR.qname`)\n",
    "head_branch": "feature-default-dns",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #165 from p-l-/feature-default-dns\n\nDNS: follow the \"default values that work\" logic"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb406a88c0a76e0a51f3f",
    "number": 160,
    "body": "This pull request is directly taken from the July 2015 one on BitBucket. It works with Scapy version up to 2.3.2 (released in December 2015) but not with the current 2.3.2-dev version, probably due to modifications made in fields.py since the 2.3.2 release. Contributions are welcomed to fix this.\n",
    "head_branch": "diameter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb407a88c0a76e0a51f40",
    "number": 159,
    "body": "",
    "head_branch": "comparison_with_none",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb408a88c0a76e0a51f41",
    "number": 158,
    "body": "",
    "head_branch": "default_argument_mutable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #158 from sieben/default_argument_mutable\n\nDefault argument shouldn't be mutable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb409a88c0a76e0a51f42",
    "number": 157,
    "body": "",
    "head_branch": "fix_docstrings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb40aa88c0a76e0a51f43",
    "number": 156,
    "body": "",
    "head_branch": "set_literal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb40aa88c0a76e0a51f44",
    "number": 155,
    "body": "",
    "head_branch": "dict_literal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #155 from sieben/dict_literal\n\nDict creation can be literal"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb40ba88c0a76e0a51f45",
    "number": 154,
    "body": "",
    "head_branch": "useless_semicolon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb40ca88c0a76e0a51f46",
    "number": 153,
    "body": "",
    "head_branch": "useless_parenthesis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb40da88c0a76e0a51f47",
    "number": 152,
    "body": "",
    "head_branch": "list_literal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #152 from sieben/list_literal\n\nList literal"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb40ea88c0a76e0a51f48",
    "number": 151,
    "body": "",
    "head_branch": "simplify_comparaisons",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #151 from sieben/simplify_comparaisons\n\nChained comparisons can be simplified"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb40fa88c0a76e0a51f49",
    "number": 149,
    "body": "When interface names are longer than 7 characters netstat will truncate\nthem to the first 7 chars which leads to looking up an invalid interface\nname.\n\nThis workaround ignores interfaces that are too long.\n\nThis fixes #147\n",
    "head_branch": "fix/os-error-not-configured",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb40fa88c0a76e0a51f4a",
    "number": 148,
    "body": "The source code of scapy is littered with many trailing whitespaces.\n\nThis can be especially annoying if you have your text editor configured to automatically strip trailing whitespaces when you save a file as it leads you to potentially inadvertently committing whitespace fixes.\n\nIn this commit I clean up all the scapy source tree from spurious whitespaces.\n\nThe command used for this is:\n    autopep8 --in-place --recursive --select=\"W291,W293\" scapy\n\nIt may be useful also in the future to run some other automatic cleanup option of autopep8 to fix other style issues.\n",
    "head_branch": "fix/whitespace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb410a88c0a76e0a51f4b",
    "number": 146,
    "body": "Adding support for Diameter protocol (IETF RFC6733) and automatic decoding from SCTP layer.\nThese files are imported from July 2015 initial release stored on BitBucket, with some minor modifications.\n!! Warning !! diameter.py works with the 2.3.2 Scapy release from December 2015 but not with the current 2.3.2-dev version, due to modifications made in scapy/fields.py. Contributions are welcomed to fix this issue.\n",
    "head_branch": "diameter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb411a88c0a76e0a51f4c",
    "number": 144,
    "body": "Added scapy/changelog\n\nModified scapy/layers/l2.py\n- Refer to scapy/changelog\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb412a88c0a76e0a51f4d",
    "number": 141,
    "body": "Ref: RFC 3376  section 4.2,\nthe `numsrc` represents `count of` source addresses not `length of` all bytes\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #141 from dawnworld/master\n\n[IGMP V3] fix number of source address"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb413a88c0a76e0a51f4e",
    "number": 138,
    "body": "This fixes erratic behavior when scapy is run inside of a separate\nthread or in another process.\nThe patch is taken from\nhttps://bitbucket.org/secdev/scapy/issues/473/scapy-sendrecv-selects-eintr-problem-in\n",
    "head_branch": "fix/select_in_thread",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #138 from hellais/fix/select_in_thread\n\nRestart select when we see a EINTR"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb414a88c0a76e0a51f4f",
    "number": 137,
    "body": "Fixes #135.\n",
    "head_branch": "fix-ntp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #137 from p-l-/fix-ntp\n\nFix NTP TimeStampField.any2i()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb414a88c0a76e0a51f50",
    "number": 136,
    "body": "This PR introduces DestIPField and DestIPv6Field, similar to DestMACField, to be used when a default destination address can be guessed based on the payload. The only use I can see for that for now is multicast protocols (such as mDNS), but it might as well be useful in other situations.\n",
    "head_branch": "feature-mdns",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #136 from p-l-/feature-mdns\n\n\"Add\" support for mDNS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb415a88c0a76e0a51f51",
    "number": 134,
    "body": "",
    "head_branch": "cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #134 from p-l-/cleanup\n\nCode cleanup / optimization"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb416a88c0a76e0a51f52",
    "number": 132,
    "body": "",
    "head_branch": "pebble-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #132 from pebble/pebble-master\n\nBluetooth: Add HCI LE Create Connection Cancel & HCI Disconnect packets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb417a88c0a76e0a51f53",
    "number": 130,
    "body": "make RandNum support seed\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb418a88c0a76e0a51f54",
    "number": 129,
    "body": "This patch introduces the SCAPY_USE_PCAPDNET environment variable that can be used to easily force the use of the pcap and dnet modules. It is [yolo](https://bitbucket.org/secdev/yolo) compliant by default =)\n\nSo far, the only way to control this behavior was to patch manually the source, or write a wrapper to set conf.use_pcap and conf.use_dnet before importing Scapy. \n\n``` shell\n$ SCAPY_USE_PCAPDNET=YoLo ./run_scapy \nWelcome to Scapy (2.3.2-dev)\n>>> conf.L3socket\n<L3dnetSocket: read/write packets at layer 3 using libdnet and libpcap>\n```\n\nThis PR is a preliminary step to test pcap & dnet modules using Travis-CI.\n",
    "head_branch": "SCAPY_USE_PCAPDNET",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #129 from guedou/SCAPY_USE_PCAPDNET\n\nIntroducing the SCAPY_USE_PCAPDNET environment variable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb419a88c0a76e0a51f55",
    "number": 127,
    "body": "Here is an attempt at fixing Issue #109 by rewriting scapy.unix.read_routes6().\n\nThis patch provides mocked tests that ease reproducing outputs on several\noperating systems. Scapy tests from regression.uts were also tested on real OS. I can not swear that this patch does not introduce any regressions or bugs by itself, but I tried my best not to.\n\n`read_routes6()` can be tested as follows:\n\n``` shell\n$ PYTHONPATH=. py.test test/mocked_functions.py -vx\n```\n\nIt could be interesting to extend the idea mocked_functions.py to other part of\nScapy, and to run this tests with Travis along with the classic regression tests.\n",
    "head_branch": "read_routes6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #127 from guedou/read_routes6\n\nNew read_routes6() function and unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb419a88c0a76e0a51f56",
    "number": 126,
    "body": "This patch aims at validating read_routes6() output to ensure that enough routes\nare known to Scapy to make the following IPv6 regression tests works.\n\nIt helps rewriting scapy.unix.read_routes6() in order to fix Issue #109.\n",
    "head_branch": "IPv6_routes_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #126 from guedou/IPv6_routes_tests\n\nCheck read_routes6() output"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb41aa88c0a76e0a51f57",
    "number": 125,
    "body": "This patch aims at validating read_routes6() output to ensure that enough routes are known to Scapy to make the following IPv6 regression tests works.\n\nIt helps rewriting scapy.unix.read_routes6() in order to fix Issue #109.\n",
    "head_branch": "IPv6_routes_regressions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb41ba88c0a76e0a51f58",
    "number": 124,
    "body": "Hey all, I've added packet classes to parse/build EIR / BLE Advertising data.\nI've also got a unit test (using `unittest`) lying around, but wasn't sure where to plug that in, so it's not part of this commit.\n\ncc @mikeryan\n",
    "head_branch": "pebble-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #124 from pebble/pebble-master\n\nBluetooth: add EIR / BLE Advertising packet classes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb41ca88c0a76e0a51f59",
    "number": 123,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb41da88c0a76e0a51f5a",
    "number": 122,
    "body": "",
    "head_branch": "feature-conversations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "PacketList.conversations(): add labels, support ARP by default (#122)\n\n* PacketList.conversations(): include ARP packets by default\r\n\r\n* PacketList.conversations(): accept a label instead of counting\r\n\r\n* PacketList.conversations(): display the label in the graph"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb41ea88c0a76e0a51f5b",
    "number": 121,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb41ea88c0a76e0a51f5c",
    "number": 120,
    "body": "This was reported by @AmedeoSapio in #68\n",
    "head_branch": "fix-crypto-import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #120 from p-l-/fix-crypto-import\n\nPython 2.5: fallback implementation for gcd() without pycrypto"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb41fa88c0a76e0a51f5d",
    "number": 119,
    "body": "I couldn't use virtualbox and scapy at the same time because some of the bridges had no ip configured and that's not currently handled in scapy.\n",
    "head_branch": "no-ip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb420a88c0a76e0a51f5e",
    "number": 118,
    "body": "This patch fix Issue #115. It was tested on Debian and FreeBSD 10.\n",
    "head_branch": "Issue_#115",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #118 from guedou/Issue_#115\n\nFix Issue #115"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb421a88c0a76e0a51f5f",
    "number": 117,
    "body": "This patch fixes #116. I choose to add some dummy calls to some important internal functions as I had to patch them, because they were failing.\n\nIt was tested on Debian (root and non-root regressions tests / with and without pcapdnet). Travis will do it on Ubuntu.\n\nIt can be tested easily with:\n\n``` python\nfrom scapy.config import conf\nconf.use_pcap = True\nconf.use_dnet = True\n\nfrom scapy.all import *\n\np = sr1(IP(dst=\"www.kame.net\")/ICMP())\nprint p.summary()\n```\n\nAs of today, there is no easy way to launch the regressions tests using pcapdnet. It could be interesting to trigger the use of pcapdnet using a environment variable (such as SCAPY_USE_PCAPDNET). I can modify this patch to implement this behavior.\n",
    "head_branch": "dnet_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Scapy can now use dumbnet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb422a88c0a76e0a51f60",
    "number": 114,
    "body": "Here are the fixes discussed in Issue #110 !\n",
    "head_branch": "Issue_#110_bis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #114 from guedou/Issue_#110_bis\n\nIssue #110 fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb423a88c0a76e0a51f61",
    "number": 113,
    "body": "The current code prevents functions from the unix module to be imported without importing the pcapdnet module.\n\nThese functions must be used in the future BPF mode (that removes dependencies on pcap and dnet modules).\n",
    "head_branch": "arch_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #113 from guedou/arch_refactoring\n\nscapy/arch refactoring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb423a88c0a76e0a51f62",
    "number": 112,
    "body": "At least FreeBSD and OpenBSD do not install bash by default. This patch aims at removing the dependency on bash to ease running regression tests.\n\nIt was tested on Debian, FreeBSD and OpenBSD.\n",
    "head_branch": "run_tests_binsh",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #112 from guedou/run_tests_binsh\n\nDon't use /bin/bash in run_tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb424a88c0a76e0a51f63",
    "number": 108,
    "body": "Reported by [Runa Barik on Scapy ML](http://permalink.gmane.org/gmane.comp.security.scapy.general/5342).\n",
    "head_branch": "fix-cksum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #108 from p-l-/fix-cksum\n\nFix TCP & UDP checksums when IP layer has options"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb425a88c0a76e0a51f64",
    "number": 106,
    "body": "",
    "head_branch": "fix-101",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #106 from p-l-/fix-101\n\npython --version may output to stderr (fixes #101)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb426a88c0a76e0a51f65",
    "number": 105,
    "body": "",
    "head_branch": "feature-hist-envvar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #105 from p-l-/feature-hist-envvar\n\nAccept SCAPY_HISTFILE env var to set scapy hitory file (fixes #103)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb427a88c0a76e0a51f66",
    "number": 102,
    "body": "The (future) BPF mode needs to call get_if(). Importing the function does not work on OS X. As discussed in Issue #100, this patch moves the function to a new file common.py\n",
    "head_branch": "arch_common",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #102 from guedou/arch_common\n\nMove get_if() to scapy/arch/common.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb428a88c0a76e0a51f67",
    "number": 99,
    "body": "Enables the use of \"python setup.py develop\"\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb428a88c0a76e0a51f68",
    "number": 98,
    "body": "We added messages to the GTPv1 layer and created the GTPv2 support.\nWe now have 117 tests for these procotols and they are all passing.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb429a88c0a76e0a51f69",
    "number": 96,
    "body": "Signed-off-by: Walinton Cambronero walinton.cambronero@hpe.com\n",
    "head_branch": "RA_options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #96 from walintonc/RA_options\n\nUpdate IANA Router Alert Options"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb42aa88c0a76e0a51f6a",
    "number": 93,
    "body": "When create packets with a changed IP address, code will report error.\n\n`>>> p1 = IP(dst=u'10.158.200.34-35')/ICMP()\n\n> > > p1\n> > > <IP  frag=0 proto=icmp dst=10.158.200.34-35 |<ICMP  |>>\n> > > sr(p1)\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > >   File \"/usr/local/lib/python2.7/dist-packages/scapy/sendrecv.py\", line 326, in sr\n> > >     a,b=sndrcv(s,x,_args,_*kargs)\n> > >   File \"/usr/local/lib/python2.7/dist-packages/scapy/sendrecv.py\", line 55, in sndrcv\n> > >     h = i.hashret()\n> > >   File \"/usr/local/lib/python2.7/dist-packages/scapy/layers/inet.py\", line 377, in hashret\n> > >     return strxor(inet_aton(self.src),inet_aton(self.dst))+struct.pack(\"B\",self.proto)+self.payload.hashret()\n> > > socket.error: illegal IP address string passed to inet_aton\n> > > \n> > > `\n\nI found it is because in \"IPField\", \"if type(x) is str:\", and unicode is not supported.\n\nAfter modify the problem code to \"if isinstance(x, basestring)\", looks ok\n\n`>>> p1 = IP(dst=u'10.158.200.34-35')/ICMP()\n\n> > > p1\n> > > <IP  frag=0 proto=icmp dst=Net(u'10.158.200.34-35') |<ICMP  |>>\n> > > sr(p1)\n> > > Begin emission:\n> > > .*Finished to send 2 packets.\n> > > *\n> > > Received 3 packets, got 2 answers, remaining 0 packets\n> > > (<Results: TCP:0 UDP:0 ICMP:2 Other:0>, <Unanswered: TCP:0 UDP:0 ICMP:0 Other:0>)\n> > > \n> > > `\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb42ba88c0a76e0a51f6b",
    "number": 91,
    "body": "This fixes #90.\n",
    "head_branch": "fix-90",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #91 from p-l-/fix-90\n\nPad packet when needed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb42ca88c0a76e0a51f6c",
    "number": 89,
    "body": "",
    "head_branch": "update-contributing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb42da88c0a76e0a51f6d",
    "number": 86,
    "body": "The objective is to be able to use Scapy's protocols implementation as a handy protocol documentation ;-), see some examples below.\n\nDisplay \"Depends on\" for `MultiEnumField`s:\n\n```\n>>> ls(ICMP)\ntype       : ByteEnumField                       = (8)\ncode       : MultiEnumField (Depends on type)    = (0)\n[...]\n```\n\nShow enum values with `verbose=True`:\n\n```\n>>> ls(ICMP, verbose=1)\ntype       : ByteEnumField                       = (8)\n               echo-reply: 0\n               dest-unreach: 3\n               source-quench: 4\n               redirect: 5\n               echo-request: 8\n               router-advertisement: 9\n               router-solicitation: 10\n               time-exceeded: 11\n               parameter-problem: 12\n               timestamp-request: 13\n               timestamp-reply: 14\n               information-request: 15\n               information-response: 16\n               address-mask-request: 17\n               address-mask-reply: 18\ncode       : MultiEnumField (Depends on type)    = (0)\n[...]\n>>> ls(ICMP(type=\"dest-unreach\"), verbose=True)\ntype       : ByteEnumField                       = 3               (8)\n               echo-reply: 0\n               dest-unreach: 3\n               source-quench: 4\n               redirect: 5\n               echo-request: 8\n               router-advertisement: 9\n               router-solicitation: 10\n               time-exceeded: 11\n               parameter-problem: 12\n               timestamp-request: 13\n               timestamp-reply: 14\n               information-request: 15\n               information-response: 16\n               address-mask-request: 17\n               address-mask-reply: 18\ncode       : MultiEnumField (Depends on type)    = 0               (0)\n               network-unreachable: 0\n               host-unreachable: 1\n               protocol-unreachable: 2\n               port-unreachable: 3\n                fragmentation-needed: 4\n               source-route-failed: 5\n               network-unknown: 6\n               host-unknown: 7\n               network-prohibited: 9\n               host-prohibited: 10\n               TOS-network-unreachable: 11\n               TOS-host-unreachable: 12\n               communication-prohibited: 13\n               host-precedence-violation: 14\n               precedence-cutoff: 15\n[...]\n```\n\nShow possible flags with `verbose=True`:\n\n```\n>>> ls(TCP, verbose=1)\nsport      : ShortEnumField                      = (20)\ndport      : ShortEnumField                      = (80)\nseq        : IntField                            = (0)\nack        : IntField                            = (0)\ndataofs    : BitField (4 bits)                   = (None)\nreserved   : BitField (3 bits)                   = (0)\nflags      : FlagsField (9 bits)                 = (2)\n               F, S, R, P, A, U, E, C, N\nwindow     : ShortField                          = (8192)\nchksum     : XShortField                         = (None)\nurgptr     : ShortField                          = (0)\noptions    : TCPOptionsField                     = ({})\n>>> ls(Dot11, verbose=1)\nsubtype    : BitField (4 bits)                   = (0)\ntype       : BitEnumField (2 bits)               = (0)\nproto      : BitField (2 bits)                   = (0)\nFCfield    : FlagsField (8 bits)                 = (0)\n               to-DS, from-DS, MF, retry, pw-mgt, MD, wep, order\nID         : ShortField                          = (0)\naddr1      : MACField                            = ('00:00:00:00:00:00')\naddr2      : Dot11Addr2MACField                  = ('00:00:00:00:00:00')\naddr3      : Dot11Addr3MACField                  = ('00:00:00:00:00:00')\nSC         : Dot11SCField                        = (0)\naddr4      : Dot11Addr4MACField                  = ('00:00:00:00:00:00')\n```\n",
    "head_branch": "feature-ls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb42da88c0a76e0a51f6e",
    "number": 85,
    "body": "This will fix `run_scapy` and `run_tests` when Python 3 is the default (e.g., ArchLinux).\n",
    "head_branch": "fix-python2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb42ea88c0a76e0a51f6f",
    "number": 84,
    "body": "- Replace qr field by response (more adapted), and use an enum (also applies to LLMNR layer).\n- Replace some fields using a `FlagsField` (easier to handle).\n",
    "head_branch": "update-dns",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb42fa88c0a76e0a51f70",
    "number": 82,
    "body": "I found that Packet.getlayer() can't work when _cls_ param is string. For example, Packet.haslayer() can do it.\nI created the fix, review it, please\n",
    "head_branch": "getlayer_with_strings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb430a88c0a76e0a51f71",
    "number": 80,
    "body": "I'm not adding regression tests with this one since I'm not an expert of that protocol... If someone wants to submit another PR (cc @guedou ;-) ).\n",
    "head_branch": "fix-79",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb431a88c0a76e0a51f72",
    "number": 77,
    "body": "This makes it possible to write a PCAP file to stdout, for example. This also makes the API consistent with `rdpcap` / `(Raw)Pcap(Ng)Reader`.\n",
    "head_branch": "feature-write-fdesc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb432a88c0a76e0a51f73",
    "number": 76,
    "body": "Allow one to send the TCP User Timeout Option described in RFC 5482 in\na crafted TCP segment.\n",
    "head_branch": "UTO",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb432a88c0a76e0a51f74",
    "number": 75,
    "body": "This PR solves [issue #74](https://github.com/secdev/scapy/issues/74) with 2 fixes:\n\nL2pcapListenSocket.recv() waits until pcap's next() method return value that is not _None_. If there is no captured packets while loop will be endless. In this case sendrecv.sniff() timeout doesn't work.\n\nOther functions from sendrecv.py can get _None_ from L2ListenSocket and try to recv() again, but sniff() breaks the while loop if _None_ was received. Now it is trying to recv() again\n",
    "head_branch": "issue74",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb433a88c0a76e0a51f75",
    "number": 73,
    "body": "- Fixed bug in bridge_and_ sniff function. The count and stop_filter parameters where not considered\n  (because the \"break\" in the inner \"for\" was meant for exiting the external while).\n- The sniff function can accept as \"iface\" parameter either one interface as string or a list of interfaces as list of strings. In this way it is still compatible with existing code.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #73 from AmedeoSapio/master\n\nSniff can accept a list of interfaces (+ fixed bug)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb434a88c0a76e0a51f76",
    "number": 72,
    "body": "Reported by Aaron Wood on Scapy ML.\n\nThese tests have been though as replacement for `.initialized`, but are both wrong and now unneeded.\n",
    "head_branch": "fix-unneeded-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb435a88c0a76e0a51f77",
    "number": 71,
    "body": "This does not change the use of `rdpcap()` with both formats, and allows\nusing (`Raw`)`PcapReader`() against Pcap and PcapNg files.\n",
    "head_branch": "feature-zcat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb436a88c0a76e0a51f78",
    "number": 70,
    "body": "This will be useful for #35 at least.\n",
    "head_branch": "bin-py25",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb436a88c0a76e0a51f79",
    "number": 66,
    "body": "Imported old code from MOBISEND ANR project providing implementation for\nvarious IPv6 Neighbor Discovery attacks referenced in RFC 3756 (IPv6\nNeighbor Discovery (ND) Trust Models and Threats). Integration work in\nrecent version and associated tests done by Guillaume!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb437a88c0a76e0a51f7a",
    "number": 65,
    "body": "Fixes #64\n",
    "head_branch": "fix-ipv6-cmd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb438a88c0a76e0a51f7b",
    "number": 62,
    "body": "Here is another patch to make Scapy work better with Python 2.5.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb439a88c0a76e0a51f7c",
    "number": 61,
    "body": "This makes the code less readable, but we have to keep it that way as long as we want to maintain Python 2.5 support.\n\nThis PR also includes minor fixes.\n",
    "head_branch": "fix-py25-lltd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb43aa88c0a76e0a51f7d",
    "number": 60,
    "body": "Fix proposed by @fredonner. Closes #59.\n",
    "head_branch": "feature-tcp-flags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb43ba88c0a76e0a51f7e",
    "number": 57,
    "body": "",
    "head_branch": "feature-improve-lltd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb43ca88c0a76e0a51f7f",
    "number": 54,
    "body": "",
    "head_branch": "doc-contributing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb43ca88c0a76e0a51f80",
    "number": 53,
    "body": "…M modes.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb43da88c0a76e0a51f81",
    "number": 52,
    "body": "This is needed by fragment(), which has been broken since PR #11.\n",
    "head_branch": "fix-fragment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb43ea88c0a76e0a51f82",
    "number": 51,
    "body": "Here is the final patch to remove the dependency on gnuplot. It works fine in a notebook.\n\nThe IPv6 version was not tested.\n",
    "head_branch": "matplotlib-world_trace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb43fa88c0a76e0a51f83",
    "number": 50,
    "body": "Add support for Modbus TCP protocol\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb440a88c0a76e0a51f84",
    "number": 49,
    "body": "Add support for the Modbus TCP protocol in contrib\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb441a88c0a76e0a51f85",
    "number": 48,
    "body": "Add Modbus TCP protocol support in contrib + utest\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb441a88c0a76e0a51f86",
    "number": 47,
    "body": "LLTD (Link Layer Topology Discovery) is a protocol created by MS (see [Wikipedia](https://en.wikipedia.org/wiki/Link_Layer_Topology_Discovery))\n\nThe support is far from being comprehensive, however it should be enough for a start.\n",
    "head_branch": "feature-lltd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb442a88c0a76e0a51f87",
    "number": 46,
    "body": "",
    "head_branch": "fix-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb443a88c0a76e0a51f88",
    "number": 45,
    "body": "",
    "head_branch": "fix-macsrc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb444a88c0a76e0a51f89",
    "number": 44,
    "body": "",
    "head_branch": "fix-Num2Layer-repr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb445a88c0a76e0a51f8a",
    "number": 43,
    "body": "This is related to the [e-mail thread](http://article.gmane.org/gmane.comp.security.scapy.general/5297) on Scapy mailing list, based on the proposed [PR on Bitbucker Suraj Deshmukh](https://bitbucket.org/secdev/scapy/pull-requests/127/).\n",
    "head_branch": "fix-filters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb446a88c0a76e0a51f8b",
    "number": 42,
    "body": "",
    "head_branch": "fix-ipsec-py25",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb446a88c0a76e0a51f8c",
    "number": 41,
    "body": "Fix `TracerouteResult.world_trace()` (fixes #28) using Matplotlib and [GeoIP](https://pypi.python.org/pypi/GeoIP/) (instead of the internal geoip sub-module, which has been removed), and set new defaults for Matplotlib graphs (see [updated notebook](https://github.com/p-l-/scapy/blob/fix-geoip/doc/notebooks/graphs-ipids.ipynb)).\n",
    "head_branch": "fix-geoip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb447a88c0a76e0a51f8d",
    "number": 40,
    "body": "... if not conf.debug_dissector\n\nIdea from @paaguti in pull request #10.\n",
    "head_branch": "fix-dispatch-hook-exceptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb448a88c0a76e0a51f8e",
    "number": 39,
    "body": "Additional behaviour for ls() : passing a string filters by layer name, case insensitive. Also added argument `case_sensitive` (default to False). Example:\n\n`ls('dhcp')` will print all the layers whose names or descriptions match \"dhcp\" (case insensitive)\n`ls('DHCP', case_sensitive=True)` will print all the layers whose names or descriptions match \"dhcp\" (case insensitive)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb449a88c0a76e0a51f8f",
    "number": 38,
    "body": "Here is a modification to diffplot that uses list comprehension as plot() and multiplot()\n",
    "head_branch": "diffplot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb44aa88c0a76e0a51f90",
    "number": 36,
    "body": "Support for Python 2.5 was broken (again) (because of me).\n",
    "head_branch": "fix-py25",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb44ba88c0a76e0a51f91",
    "number": 35,
    "body": "RSA and ECDSA certificates can now be properly dissected or crafted, thanks to enhanced ASN.1 capabilities from Scapy.\nSee commits for more information.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb44ba88c0a76e0a51f92",
    "number": 34,
    "body": "Additional behaviour for ls() : passing a string filters by layer name, case insensitive. Also added argument `case_sensitive` (default to False). Example:\n\n`ls('dhcp')` will print all the layers whose names or descriptions match \"dhcp\" (case insensitive)\n`ls('DHCP', case_sensitive=True)` will print all the layers whose names or descriptions match \"dhcp\" (case insensitive)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb44ca88c0a76e0a51f93",
    "number": 33,
    "body": "In two functions,`set` was used as an argument and class attribute. This PR replaces the name, and fixes some `filter`/`map` with `lambda` functions (see [Google Python style guide](https://google.github.io/styleguide/pyguide.html?showone=Deprecated_Language_Features#Deprecated_Language_Features)).\n",
    "head_branch": "fix-argument-set",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb44da88c0a76e0a51f94",
    "number": 32,
    "body": "Use pseudo socket generators to fix automaton tests without the need of specific privileges.\n\nShould fix #31.\n",
    "head_branch": "fix-automaton-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb44ea88c0a76e0a51f95",
    "number": 30,
    "body": "This way, it is possible with both methods to specify values for the\n\"x\" coordinate. By default, `plot_xy` is False and the \"x\" coordinate\nis the index of the packet in the list.\n\nExamples:\n\n```\n>>> ans.plot(lambda x: x[1].id)\n>>> ans.plot(lambda x: (x[1].time, x[1].id), plot_xy=True)\n>>> ans.multiplot(lambda x: (x[1][IP].src, x[1].id))\n>>> ans.multiplot(lambda x: (x[1][IP].src, (x[1].time, x[1].id)), plot_xy=True)\n```\n\nThis is related to #27.\n",
    "head_branch": "feature-plot-xy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb44fa88c0a76e0a51f96",
    "number": 29,
    "body": "Hi,\n\nBefore\n\n$ scapy\nINFO: Can't import PyX. Won't be able to use psdump() or pdfdump().\nusage: ifconfig [-AaC] [interface] [address_family] [address [dest_address]]\n                [parameters]\nINFO: No IPv6 support in kernel\nWARNING: No route found for IPv6 destination :: (no default route?)\nWelcome to Scapy (2.3.2)\n\n$ python2.7 scapy/tools/UTscapy.py -t test/regression.uts -f html -l -o /tmp/scapy_regression_test.html\n[...]\nPASSED=739 FAILED=28\n\nAfter\n\n$ scapy\nINFO: Can't import PyX. Won't be able to use psdump() or pdfdump().\nWelcome to Scapy (2.3.2)\n\n$ python2.7 scapy/tools/UTscapy.py -t test/regression.uts -f html -l -o /tmp/scapy_regression_test.html\n[...]\nPASSED=750 FAILED=17\n\nIt seems to start normally on FreeBSD.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb44fa88c0a76e0a51f97",
    "number": 27,
    "body": "Hi,\n\nHere is a modified version of the PR submitted on bitbucket. It aims to replace the dependency on gnuplot-py with maplotlib.\n\nThe main focus was on compatibility. Therefore, most of the time, old plot() commands will seamlessly work with this PR. Moreover, Scapy can now be used in IPython notebooks: plots are inlined.\n\nBesides the documentation that still refers to gnuplot, there is still one call to gnuplot in TracerouteResult.world_trace() which is broken since 2008, according to git blame (that is issue #28). \n\nGuillaume\n",
    "head_branch": "matplotlib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb450a88c0a76e0a51f98",
    "number": 26,
    "body": "",
    "head_branch": "fix-igmpv3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb451a88c0a76e0a51f99",
    "number": 25,
    "body": "When an `Ether() / IP()` packet is built with `IP.dst` set and `Ether.dst`\nnot set, Scapy tries to fix `Ether.dst` by sending an ARP request. This\nfails when the user cannot send packets.\n\nBefore:\n\n```\n>>> p = str(Ether()/IP(dst=\"1.2.3.4\"))\nTraceback (most recent call last):\n  File \"<console>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/scapy/packet.py\", line 272, in __str__\n    return self.build()\n  [...]\n  File \"/usr/local/lib/python2.7/dist-packages/scapy/arch/linux.py\", line 414, in __init__\n    self.ins = socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.htons(type))\n  File \"/usr/lib/python2.7/socket.py\", line 187, in __init__\n    _sock = _realsocket(family, type, proto)\nerror: [Errno 1] Operation not permitted\n```\n\nAfter:\n\n```\n>>> p = str(Ether()/IP(dst=\"1.2.3.4\"))\nWARNING: Mac address to reach destination not found. Using broadcast.\n```\n",
    "head_branch": "fix-ether-auto-dstaddr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb452a88c0a76e0a51f9a",
    "number": 24,
    "body": "",
    "head_branch": "fix-setup-pypi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb453a88c0a76e0a51f9b",
    "number": 23,
    "body": "",
    "head_branch": "fix-with-py25",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb453a88c0a76e0a51f9c",
    "number": 22,
    "body": "",
    "head_branch": "fix-tcpdump-call",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb454a88c0a76e0a51f9d",
    "number": 21,
    "body": "With this PR, we can use `xrange()` objects and generators as field values. It makes it possible to:\n- Send TCP packets to `\"target\"`, ports 10 to 100 (included) with an increment of 10 (10 packets). Before this PR, one had to build a list (e.g., using `range()`), which wastes memory, either using a (three-element) tuple, or an `xrange()` object:\n\n``` python\n>>> sr(IP(dst=\"target\") / TCP(sport=1234, dport=(10, 100, 10)))\n>>> sr(IP(dst=\"target\") / TCP(sport=1234, dport=(10, 101, 10)))\n```\n- Use custom generators, e.g., based on a `file` object:\n\n``` python\n>>> print open(\"domains.txt\").read(),\ngithub.com\nsecdev.org\ngoogle.com\n>>> ans, unans = sr(IP(dst=\"8.8.8.8\") / UDP(sport=RandShort()) / DNS(\n... rd=1, qd=DNSQR(qname=(x.strip() for x in open(\"domains.txt\")))))\nBegin emission:\n*......Finished to send 3 packets.\n.**\nReceived 10 packets, got 3 answers, remaining 0 packets\n>>> ans.show()\n0000 IP / UDP / DNS Qry \"github.com\"  ==> IP / UDP / DNS Ans \"192.30.252.131\" \n0001 IP / UDP / DNS Qry \"google.com\"  ==> IP / UDP / DNS Ans \"216.58.208.78\" \n0002 IP / UDP / DNS Qry \"secdev.org\"  ==> IP / UDP / DNS Ans \"217.25.178.5\" \n```\n",
    "head_branch": "feature-fields-generators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb455a88c0a76e0a51f9e",
    "number": 20,
    "body": "",
    "head_branch": "feature-l2socket-promisc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb456a88c0a76e0a51f9f",
    "number": 19,
    "body": "",
    "head_branch": "travis-pypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb457a88c0a76e0a51fa0",
    "number": 18,
    "body": "",
    "head_branch": "move-sebek-contrib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb457a88c0a76e0a51fa1",
    "number": 16,
    "body": "We might want to merge `rdpcap` & `rdpcapng`, `PcapReader` & `PcapNgReader`, `RawPcapReader` & `RawPcapNgReader`; but at least this gives an implementation for Pcap-NG file format.\n",
    "head_branch": "feature-pcapng",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb458a88c0a76e0a51fa2",
    "number": 14,
    "body": "Get an always up-to-date `ethertypes` file.\n",
    "head_branch": "fix-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb459a88c0a76e0a51fa3",
    "number": 13,
    "body": "",
    "head_branch": "improve-do-dissect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb45aa88c0a76e0a51fa4",
    "number": 12,
    "body": "Scapy 2.x should work with Python >= 2.5 according to the project page. This replaces two `with [...] as [...]:` (which requires Python >= 2.6) blocks by equivalent code that will work with Python 2.5.\n",
    "head_branch": "fix-py25",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb45ba88c0a76e0a51fa5",
    "number": 11,
    "body": "This PR makes use of Python `__slots__` for some objects in Scapy. This tends to reduce the amount of memory used by the objects.\n\nThis will have an impact on custom layers, that use specific attributes as they will have to declare a custom `__slots__` for them (see `TestAction()` in `test/regression.uts`).\n",
    "head_branch": "feature-slots",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb45ca88c0a76e0a51fa6",
    "number": 10,
    "body": "Hi, take a look at this before I eventually start working on the rest.\nThe packet chopper seems to work.\nHowever there is a conditional field in the attribute to make the extended_length flag work.\nWould that be acceptable?\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb45da88c0a76e0a51fa7",
    "number": 9,
    "body": "",
    "head_branch": "fix-ranges",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb45da88c0a76e0a51fa8",
    "number": 8,
    "body": "",
    "head_branch": "fix-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb45ea88c0a76e0a51fa9",
    "number": 7,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb45fa88c0a76e0a51faa",
    "number": 6,
    "body": "This fixes some tests and UTscapy.\n",
    "head_branch": "fix-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb460a88c0a76e0a51fab",
    "number": 5,
    "body": "Hi,\n\nThis patch fixes regression test #28.\n\nGuillaume\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb461a88c0a76e0a51fac",
    "number": 4,
    "body": "",
    "head_branch": "fix-ipsec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb461a88c0a76e0a51fad",
    "number": 3,
    "body": "",
    "head_branch": "fix-PacketListField",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb462a88c0a76e0a51fae",
    "number": 2,
    "body": "",
    "head_branch": "prepare-github",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fb463a88c0a76e0a51faf",
    "number": 1,
    "body": "This is [bitbucket pull request #158](https://bitbucket.org/secdev/scapy/pull-requests/158), on behalf on @n1nj4sec.\n\nIt is augmented to support Windows XP, without the need of PowerShell.\n\n**It is not ready for merge** and needs a lot of tests.\n",
    "head_branch": "feature-winpcap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  }
]